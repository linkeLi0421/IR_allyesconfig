; ModuleID = '/llk/IR_all_yes/drivers/spi/spi.c_pt.bc'
source_filename = "../drivers/spi/spi.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab+__tracepoint_spi_transfer_start\22, \22a\22\09"
module asm "\09.weak\09__crc___tracepoint_spi_transfer_start\09\09\09\09"
module asm "\09.long\09__crc___tracepoint_spi_transfer_start\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___tracepoint_spi_transfer_start:\09\09\09\09\09"
module asm "\09.asciz \09\22__tracepoint_spi_transfer_start\22\09\09\09\09\09"
module asm "__kstrtabns___tracepoint_spi_transfer_start:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__traceiter_spi_transfer_start\22, \22a\22\09"
module asm "\09.weak\09__crc___traceiter_spi_transfer_start\09\09\09\09"
module asm "\09.long\09__crc___traceiter_spi_transfer_start\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___traceiter_spi_transfer_start:\09\09\09\09\09"
module asm "\09.asciz \09\22__traceiter_spi_transfer_start\22\09\09\09\09\09"
module asm "__kstrtabns___traceiter_spi_transfer_start:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__SCK__tp_func_spi_transfer_start\22, \22a\22\09"
module asm "\09.weak\09__crc___SCK__tp_func_spi_transfer_start\09\09\09\09"
module asm "\09.long\09__crc___SCK__tp_func_spi_transfer_start\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___SCK__tp_func_spi_transfer_start:\09\09\09\09\09"
module asm "\09.asciz \09\22__SCK__tp_func_spi_transfer_start\22\09\09\09\09\09"
module asm "__kstrtabns___SCK__tp_func_spi_transfer_start:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__tracepoint_spi_transfer_stop\22, \22a\22\09"
module asm "\09.weak\09__crc___tracepoint_spi_transfer_stop\09\09\09\09"
module asm "\09.long\09__crc___tracepoint_spi_transfer_stop\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___tracepoint_spi_transfer_stop:\09\09\09\09\09"
module asm "\09.asciz \09\22__tracepoint_spi_transfer_stop\22\09\09\09\09\09"
module asm "__kstrtabns___tracepoint_spi_transfer_stop:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__traceiter_spi_transfer_stop\22, \22a\22\09"
module asm "\09.weak\09__crc___traceiter_spi_transfer_stop\09\09\09\09"
module asm "\09.long\09__crc___traceiter_spi_transfer_stop\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___traceiter_spi_transfer_stop:\09\09\09\09\09"
module asm "\09.asciz \09\22__traceiter_spi_transfer_stop\22\09\09\09\09\09"
module asm "__kstrtabns___traceiter_spi_transfer_stop:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__SCK__tp_func_spi_transfer_stop\22, \22a\22\09"
module asm "\09.weak\09__crc___SCK__tp_func_spi_transfer_stop\09\09\09\09"
module asm "\09.long\09__crc___SCK__tp_func_spi_transfer_stop\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___SCK__tp_func_spi_transfer_stop:\09\09\09\09\09"
module asm "\09.asciz \09\22__SCK__tp_func_spi_transfer_stop\22\09\09\09\09\09"
module asm "__kstrtabns___SCK__tp_func_spi_transfer_stop:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_get_device_id\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_get_device_id\09\09\09\09"
module asm "\09.long\09__crc_spi_get_device_id\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_get_device_id:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_get_device_id\22\09\09\09\09\09"
module asm "__kstrtabns_spi_get_device_id:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_bus_type\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_bus_type\09\09\09\09"
module asm "\09.long\09__crc_spi_bus_type\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_bus_type:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_bus_type\22\09\09\09\09\09"
module asm "__kstrtabns_spi_bus_type:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__spi_register_driver\22, \22a\22\09"
module asm "\09.weak\09__crc___spi_register_driver\09\09\09\09"
module asm "\09.long\09__crc___spi_register_driver\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___spi_register_driver:\09\09\09\09\09"
module asm "\09.asciz \09\22__spi_register_driver\22\09\09\09\09\09"
module asm "__kstrtabns___spi_register_driver:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_new_device\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_new_device\09\09\09\09"
module asm "\09.long\09__crc_spi_new_device\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_new_device:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_new_device\22\09\09\09\09\09"
module asm "__kstrtabns_spi_new_device:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_unregister_device\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_unregister_device\09\09\09\09"
module asm "\09.long\09__crc_spi_unregister_device\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_unregister_device:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_unregister_device\22\09\09\09\09\09"
module asm "__kstrtabns_spi_unregister_device:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_delay_to_ns\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_delay_to_ns\09\09\09\09"
module asm "\09.long\09__crc_spi_delay_to_ns\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_delay_to_ns:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_delay_to_ns\22\09\09\09\09\09"
module asm "__kstrtabns_spi_delay_to_ns:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_delay_exec\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_delay_exec\09\09\09\09"
module asm "\09.long\09__crc_spi_delay_exec\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_delay_exec:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_delay_exec\22\09\09\09\09\09"
module asm "__kstrtabns_spi_delay_exec:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_finalize_current_transfer\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_finalize_current_transfer\09\09\09\09"
module asm "\09.long\09__crc_spi_finalize_current_transfer\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_finalize_current_transfer:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_finalize_current_transfer\22\09\09\09\09\09"
module asm "__kstrtabns_spi_finalize_current_transfer:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_take_timestamp_pre\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_take_timestamp_pre\09\09\09\09"
module asm "\09.long\09__crc_spi_take_timestamp_pre\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_take_timestamp_pre:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_take_timestamp_pre\22\09\09\09\09\09"
module asm "__kstrtabns_spi_take_timestamp_pre:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_take_timestamp_post\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_take_timestamp_post\09\09\09\09"
module asm "\09.long\09__crc_spi_take_timestamp_post\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_take_timestamp_post:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_take_timestamp_post\22\09\09\09\09\09"
module asm "__kstrtabns_spi_take_timestamp_post:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_get_next_queued_message\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_get_next_queued_message\09\09\09\09"
module asm "\09.long\09__crc_spi_get_next_queued_message\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_get_next_queued_message:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_get_next_queued_message\22\09\09\09\09\09"
module asm "__kstrtabns_spi_get_next_queued_message:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_finalize_current_message\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_finalize_current_message\09\09\09\09"
module asm "\09.long\09__crc_spi_finalize_current_message\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_finalize_current_message:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_finalize_current_message\22\09\09\09\09\09"
module asm "__kstrtabns_spi_finalize_current_message:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_new_ancillary_device\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_new_ancillary_device\09\09\09\09"
module asm "\09.long\09__crc_spi_new_ancillary_device\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_new_ancillary_device:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_new_ancillary_device\22\09\09\09\09\09"
module asm "__kstrtabns_spi_new_ancillary_device:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_slave_abort\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_slave_abort\09\09\09\09"
module asm "\09.long\09__crc_spi_slave_abort\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_slave_abort:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_slave_abort\22\09\09\09\09\09"
module asm "__kstrtabns_spi_slave_abort:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__spi_alloc_controller\22, \22a\22\09"
module asm "\09.weak\09__crc___spi_alloc_controller\09\09\09\09"
module asm "\09.long\09__crc___spi_alloc_controller\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___spi_alloc_controller:\09\09\09\09\09"
module asm "\09.asciz \09\22__spi_alloc_controller\22\09\09\09\09\09"
module asm "__kstrtabns___spi_alloc_controller:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+__devm_spi_alloc_controller\22, \22a\22\09"
module asm "\09.weak\09__crc___devm_spi_alloc_controller\09\09\09\09"
module asm "\09.long\09__crc___devm_spi_alloc_controller\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___devm_spi_alloc_controller:\09\09\09\09\09"
module asm "\09.asciz \09\22__devm_spi_alloc_controller\22\09\09\09\09\09"
module asm "__kstrtabns___devm_spi_alloc_controller:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_register_controller\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_register_controller\09\09\09\09"
module asm "\09.long\09__crc_spi_register_controller\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_register_controller:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_register_controller\22\09\09\09\09\09"
module asm "__kstrtabns_spi_register_controller:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+devm_spi_register_controller\22, \22a\22\09"
module asm "\09.weak\09__crc_devm_spi_register_controller\09\09\09\09"
module asm "\09.long\09__crc_devm_spi_register_controller\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devm_spi_register_controller:\09\09\09\09\09"
module asm "\09.asciz \09\22devm_spi_register_controller\22\09\09\09\09\09"
module asm "__kstrtabns_devm_spi_register_controller:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_unregister_controller\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_unregister_controller\09\09\09\09"
module asm "\09.long\09__crc_spi_unregister_controller\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_unregister_controller:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_unregister_controller\22\09\09\09\09\09"
module asm "__kstrtabns_spi_unregister_controller:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_controller_suspend\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_controller_suspend\09\09\09\09"
module asm "\09.long\09__crc_spi_controller_suspend\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_controller_suspend:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_controller_suspend\22\09\09\09\09\09"
module asm "__kstrtabns_spi_controller_suspend:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_controller_resume\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_controller_resume\09\09\09\09"
module asm "\09.long\09__crc_spi_controller_resume\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_controller_resume:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_controller_resume\22\09\09\09\09\09"
module asm "__kstrtabns_spi_controller_resume:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_split_transfers_maxsize\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_split_transfers_maxsize\09\09\09\09"
module asm "\09.long\09__crc_spi_split_transfers_maxsize\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_split_transfers_maxsize:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_split_transfers_maxsize\22\09\09\09\09\09"
module asm "__kstrtabns_spi_split_transfers_maxsize:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_setup\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_setup\09\09\09\09"
module asm "\09.long\09__crc_spi_setup\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_setup:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_setup\22\09\09\09\09\09"
module asm "__kstrtabns_spi_setup:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_async\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_async\09\09\09\09"
module asm "\09.long\09__crc_spi_async\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_async:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_async\22\09\09\09\09\09"
module asm "__kstrtabns_spi_async:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_sync\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_sync\09\09\09\09"
module asm "\09.long\09__crc_spi_sync\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_sync:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_sync\22\09\09\09\09\09"
module asm "__kstrtabns_spi_sync:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_sync_locked\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_sync_locked\09\09\09\09"
module asm "\09.long\09__crc_spi_sync_locked\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_sync_locked:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_sync_locked\22\09\09\09\09\09"
module asm "__kstrtabns_spi_sync_locked:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_bus_lock\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_bus_lock\09\09\09\09"
module asm "\09.long\09__crc_spi_bus_lock\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_bus_lock:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_bus_lock\22\09\09\09\09\09"
module asm "__kstrtabns_spi_bus_lock:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_bus_unlock\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_bus_unlock\09\09\09\09"
module asm "\09.long\09__crc_spi_bus_unlock\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_bus_unlock:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_bus_unlock\22\09\09\09\09\09"
module asm "__kstrtabns_spi_bus_unlock:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+spi_write_then_read\22, \22a\22\09"
module asm "\09.weak\09__crc_spi_write_then_read\09\09\09\09"
module asm "\09.long\09__crc_spi_write_then_read\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_spi_write_then_read:\09\09\09\09\09"
module asm "\09.asciz \09\22spi_write_then_read\22\09\09\09\09\09"
module asm "__kstrtabns_spi_write_then_read:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_event_fields = type { ptr, %union.anon.103 }
%union.anon.103 = type { %struct.anon.104 }
%struct.anon.104 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.105, %struct.trace_event, ptr, ptr, %union.anon.106, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.105 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.106 = type { ptr }
%union.anon.107 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.108 = type { %struct.bpf_raw_event_map }
%union.anon.109 = type { %struct.bpf_raw_event_map }
%union.anon.110 = type { %struct.bpf_raw_event_map }
%union.anon.111 = type { %struct.bpf_raw_event_map }
%union.anon.112 = type { %struct.bpf_raw_event_map }
%union.anon.113 = type { %struct.bpf_raw_event_map }
%union.anon.114 = type { %struct.bpf_raw_event_map }
%union.anon.115 = type { %struct.bpf_raw_event_map }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.bus_type = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.lock_class_key, i8 }
%struct.lock_class_key = type { %union.anon.0 }
%union.anon.0 = type { %struct.hlist_node }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.2 }
%union.anon.2 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.class = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.attribute_group = type { ptr, ptr, ptr, ptr, ptr }
%struct.device_attribute = type { %struct.attribute, ptr, ptr }
%struct.attribute = type { ptr, i16, i8, ptr, %struct.lock_class_key }
%struct.arm_delay_ops = type { ptr, ptr, ptr, i32 }
%struct.cpumask = type { [1 x i32] }
%struct.notifier_block = type { ptr, ptr, i32 }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.spi_controller = type { %struct.device, %struct.list_head, i16, i16, i16, i32, i32, i32, i32, i32, i16, i8, i8, ptr, ptr, %struct.mutex, %struct.mutex, %struct.spinlock, %struct.mutex, i8, ptr, ptr, ptr, ptr, ptr, ptr, i8, ptr, %struct.kthread_work, %struct.spinlock, %struct.list_head, ptr, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.completion, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, %struct.spi_statistics, ptr, ptr, ptr, ptr, ptr, i8, i32 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.kthread_work = type { %struct.list_head, ptr, ptr, i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.spi_statistics = type { %struct.spinlock, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, [17 x i32], i32 }
%struct.trace_event_raw_spi_controller = type { %struct.trace_entry, i32, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.spi_device = type { %struct.device, ptr, ptr, i32, i8, i8, i8, i32, i32, ptr, ptr, [32 x i8], ptr, i32, ptr, %struct.spi_delay, %struct.spi_delay, %struct.spi_delay, %struct.spi_delay, %struct.spi_statistics }
%struct.spi_delay = type { i16, i8 }
%struct.trace_event_raw_spi_setup = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_spi_set_cs = type { %struct.trace_entry, i32, i32, i32, i8, [0 x i8] }
%struct.spi_message = type { %struct.list_head, ptr, i8, ptr, ptr, i32, i32, i32, %struct.list_head, ptr, %struct.list_head }
%struct.trace_event_raw_spi_message = type { %struct.trace_entry, i32, i32, ptr, [0 x i8] }
%struct.trace_event_raw_spi_message_done = type { %struct.trace_entry, i32, i32, ptr, i32, i32, [0 x i8] }
%struct.spi_transfer = type { ptr, ptr, i32, i32, i32, %struct.sg_table, %struct.sg_table, i8, i8, %struct.spi_delay, %struct.spi_delay, %struct.spi_delay, i32, i32, i32, i32, ptr, i8, %struct.list_head, i16 }
%struct.sg_table = type { ptr, i32, i32 }
%struct.trace_event_raw_spi_transfer = type { %struct.trace_entry, i32, i32, ptr, i32, i32, i32, [0 x i8] }
%struct.spi_device_id = type { [32 x i8], i32 }
%struct.device_driver = type { ptr, ptr, ptr, ptr, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.spi_driver = type { ptr, ptr, ptr, ptr, %struct.device_driver }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], ptr }
%struct.spi_board_info = type { [32 x i8], ptr, ptr, ptr, i32, i32, i16, i16, i32 }
%struct.device_node = type { ptr, i32, ptr, %struct.fwnode_handle, ptr, ptr, ptr, ptr, ptr, %struct.kobject, i32, ptr }
%struct.fwnode_handle = type { ptr, ptr, ptr, %struct.list_head, %struct.list_head, i8 }
%struct.boardinfo = type { %struct.list_head, %struct.spi_board_info }
%struct.page = type { i32, %union.anon.3, %union.anon.67, %struct.atomic_t, i32 }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.67 = type { %struct.atomic_t }
%struct.scatterlist = type { i32, i32, i32, i32, i32 }
%struct.ptp_system_timestamp = type { %struct.timespec64, %struct.timespec64 }
%struct.timespec64 = type { i64, i32 }
%struct.spi_res = type { %struct.list_head, ptr, [0 x i64] }
%struct.dma_device = type { %struct.kref, i32, i32, %struct.list_head, %struct.list_head, %struct.dma_filter, %struct.dma_cap_mask_t, i32, i16, i16, i32, i32, i32, i32, i32, ptr, ptr, %struct.ida, %struct.mutex, i32, i32, i32, i32, i32, i32, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.dma_filter = type { ptr, i32, ptr }
%struct.dma_cap_mask_t = type { [1 x i32] }
%struct.ida = type { %struct.xarray }
%struct.spi_controller_mem_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.kthread_worker = type { i32, %struct.raw_spinlock, %struct.list_head, %struct.list_head, ptr, ptr }
%struct.spi_replaced_transfers = type { ptr, ptr, %struct.list_head, ptr, i32, [0 x %struct.spi_transfer] }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }

@__tpstrtab_spi_controller_idle = internal constant [20 x i8] c"spi_controller_idle\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_spi_controller_idle = dso_local global %struct.static_call_key { ptr @__traceiter_spi_controller_idle }, align 4
@__tracepoint_spi_controller_idle = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_spi_controller_idle, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_spi_controller_idle, ptr null, ptr @__traceiter_spi_controller_idle, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_spi_controller_idle = internal constant ptr @__tracepoint_spi_controller_idle, section "__tracepoints_ptrs", align 4
@__tpstrtab_spi_controller_busy = internal constant [20 x i8] c"spi_controller_busy\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_spi_controller_busy = dso_local global %struct.static_call_key { ptr @__traceiter_spi_controller_busy }, align 4
@__tracepoint_spi_controller_busy = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_spi_controller_busy, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_spi_controller_busy, ptr null, ptr @__traceiter_spi_controller_busy, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_spi_controller_busy = internal constant ptr @__tracepoint_spi_controller_busy, section "__tracepoints_ptrs", align 4
@__tpstrtab_spi_setup = internal constant [10 x i8] c"spi_setup\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_spi_setup = dso_local global %struct.static_call_key { ptr @__traceiter_spi_setup }, align 4
@__tracepoint_spi_setup = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_spi_setup, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_spi_setup, ptr null, ptr @__traceiter_spi_setup, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_spi_setup = internal constant ptr @__tracepoint_spi_setup, section "__tracepoints_ptrs", align 4
@__tpstrtab_spi_set_cs = internal constant [11 x i8] c"spi_set_cs\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_spi_set_cs = dso_local global %struct.static_call_key { ptr @__traceiter_spi_set_cs }, align 4
@__tracepoint_spi_set_cs = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_spi_set_cs, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_spi_set_cs, ptr null, ptr @__traceiter_spi_set_cs, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_spi_set_cs = internal constant ptr @__tracepoint_spi_set_cs, section "__tracepoints_ptrs", align 4
@__tpstrtab_spi_message_submit = internal constant [19 x i8] c"spi_message_submit\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_spi_message_submit = dso_local global %struct.static_call_key { ptr @__traceiter_spi_message_submit }, align 4
@__tracepoint_spi_message_submit = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_spi_message_submit, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_spi_message_submit, ptr null, ptr @__traceiter_spi_message_submit, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_spi_message_submit = internal constant ptr @__tracepoint_spi_message_submit, section "__tracepoints_ptrs", align 4
@__tpstrtab_spi_message_start = internal constant [18 x i8] c"spi_message_start\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_spi_message_start = dso_local global %struct.static_call_key { ptr @__traceiter_spi_message_start }, align 4
@__tracepoint_spi_message_start = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_spi_message_start, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_spi_message_start, ptr null, ptr @__traceiter_spi_message_start, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_spi_message_start = internal constant ptr @__tracepoint_spi_message_start, section "__tracepoints_ptrs", align 4
@__tpstrtab_spi_message_done = internal constant [17 x i8] c"spi_message_done\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_spi_message_done = dso_local global %struct.static_call_key { ptr @__traceiter_spi_message_done }, align 4
@__tracepoint_spi_message_done = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_spi_message_done, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_spi_message_done, ptr null, ptr @__traceiter_spi_message_done, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_spi_message_done = internal constant ptr @__tracepoint_spi_message_done, section "__tracepoints_ptrs", align 4
@__tpstrtab_spi_transfer_start = internal constant [19 x i8] c"spi_transfer_start\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_spi_transfer_start = dso_local global %struct.static_call_key { ptr @__traceiter_spi_transfer_start }, align 4
@__tracepoint_spi_transfer_start = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_spi_transfer_start, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_spi_transfer_start, ptr null, ptr @__traceiter_spi_transfer_start, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_spi_transfer_start = internal constant ptr @__tracepoint_spi_transfer_start, section "__tracepoints_ptrs", align 4
@__tpstrtab_spi_transfer_stop = internal constant [18 x i8] c"spi_transfer_stop\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_spi_transfer_stop = dso_local global %struct.static_call_key { ptr @__traceiter_spi_transfer_stop }, align 4
@__tracepoint_spi_transfer_stop = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_spi_transfer_stop, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_spi_transfer_stop, ptr null, ptr @__traceiter_spi_transfer_stop, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_spi_transfer_stop = internal constant ptr @__tracepoint_spi_transfer_stop, section "__tracepoints_ptrs", align 4
@str__spi__trace_system_name = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"spi\00", [28 x i8] zeroinitializer }, align 32
@trace_event_fields_spi_controller = internal global { [2 x %struct.trace_event_fields], [48 x i8] } { [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.62, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_spi_controller = internal global %struct.trace_event_class { ptr @str__spi__trace_system_name, ptr @trace_event_raw_event_spi_controller, ptr @perf_trace_spi_controller, ptr @trace_event_reg, ptr @trace_event_fields_spi_controller, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_spi_controller, i64 24), ptr getelementptr (i8, ptr @event_class_spi_controller, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_spi_controller = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_spi_controller, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_spi_controller = internal global { [27 x i8], [37 x i8] } { [27 x i8] c"\22spi%d\22, (int)REC->bus_num\00", [37 x i8] zeroinitializer }, align 32
@event_spi_controller_idle = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_spi_controller, %union.anon.105 { ptr @__tracepoint_spi_controller_idle }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_spi_controller }, ptr @print_fmt_spi_controller, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_spi_controller_idle = internal global ptr @event_spi_controller_idle, section "_ftrace_events", align 4
@event_spi_controller_busy = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_spi_controller, %union.anon.105 { ptr @__tracepoint_spi_controller_busy }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_spi_controller }, ptr @print_fmt_spi_controller, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_spi_controller_busy = internal global ptr @event_spi_controller_busy, section "_ftrace_events", align 4
@trace_event_fields_spi_setup = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.62, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.64, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.103 { %struct.anon.104 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.68, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.67, %union.anon.103 { %struct.anon.104 { ptr @.str.69, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.70, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_spi_setup = internal global %struct.trace_event_class { ptr @str__spi__trace_system_name, ptr @trace_event_raw_event_spi_setup, ptr @perf_trace_spi_setup, ptr @trace_event_reg, ptr @trace_event_fields_spi_setup, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_spi_setup, i64 24), ptr getelementptr (i8, ptr @event_class_spi_setup, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_spi_setup = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_spi_setup, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_spi_setup = internal global { [397 x i8], [115 x i8] } { [397 x i8] c"\22spi%d.%d setup mode %lu, %s%s%s%s%u bits/w, %u Hz max --> %d\22, REC->bus_num, REC->chip_select, (REC->mode & ((((1UL)) << (1))|(((1UL)) << (0)))), (REC->mode & (((1UL)) << (2))) ? \22cs_high, \22 : \22\22, (REC->mode & (((1UL)) << (3))) ? \22lsb, \22 : \22\22, (REC->mode & (((1UL)) << (4))) ? \223wire, \22 : \22\22, (REC->mode & (((1UL)) << (5))) ? \22loopback, \22 : \22\22, REC->bits_per_word, REC->max_speed_hz, REC->status\00", [115 x i8] zeroinitializer }, align 32
@event_spi_setup = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_spi_setup, %union.anon.105 { ptr @__tracepoint_spi_setup }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_spi_setup }, ptr @print_fmt_spi_setup, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_spi_setup = internal global ptr @event_spi_setup, section "_ftrace_events", align 4
@trace_event_fields_spi_set_cs = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.62, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.64, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.65, %union.anon.103 { %struct.anon.104 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.72, %union.anon.103 { %struct.anon.104 { ptr @.str.73, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_spi_set_cs = internal global %struct.trace_event_class { ptr @str__spi__trace_system_name, ptr @trace_event_raw_event_spi_set_cs, ptr @perf_trace_spi_set_cs, ptr @trace_event_reg, ptr @trace_event_fields_spi_set_cs, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_spi_set_cs, i64 24), ptr getelementptr (i8, ptr @event_class_spi_set_cs, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_spi_set_cs = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_spi_set_cs, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_spi_set_cs = internal global { [140 x i8], [52 x i8] } { [140 x i8] c"\22spi%d.%d %s%s\22, REC->bus_num, REC->chip_select, REC->enable ? \22activate\22 : \22deactivate\22, (REC->mode & (((1UL)) << (2))) ? \22, cs_high\22 : \22\22\00", [52 x i8] zeroinitializer }, align 32
@event_spi_set_cs = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_spi_set_cs, %union.anon.105 { ptr @__tracepoint_spi_set_cs }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_spi_set_cs }, ptr @print_fmt_spi_set_cs, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_spi_set_cs = internal global ptr @event_spi_set_cs, section "_ftrace_events", align 4
@trace_event_fields_spi_message = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.62, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.64, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.103 { %struct.anon.104 { ptr @.str.79, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_spi_message = internal global %struct.trace_event_class { ptr @str__spi__trace_system_name, ptr @trace_event_raw_event_spi_message, ptr @perf_trace_spi_message, ptr @trace_event_reg, ptr @trace_event_fields_spi_message, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_spi_message, i64 24), ptr getelementptr (i8, ptr @event_class_spi_message, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_spi_message = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_spi_message, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_spi_message = internal global { [88 x i8], [40 x i8] } { [88 x i8] c"\22spi%d.%d %p\22, (int)REC->bus_num, (int)REC->chip_select, (struct spi_message *)REC->msg\00", [40 x i8] zeroinitializer }, align 32
@event_spi_message_submit = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_spi_message, %union.anon.105 { ptr @__tracepoint_spi_message_submit }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_spi_message }, ptr @print_fmt_spi_message, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_spi_message_submit = internal global ptr @event_spi_message_submit, section "_ftrace_events", align 4
@event_spi_message_start = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_spi_message, %union.anon.105 { ptr @__tracepoint_spi_message_start }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_spi_message }, ptr @print_fmt_spi_message, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_spi_message_start = internal global ptr @event_spi_message_start, section "_ftrace_events", align 4
@trace_event_fields_spi_message_done = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.62, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.64, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.103 { %struct.anon.104 { ptr @.str.79, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.81, %union.anon.103 { %struct.anon.104 { ptr @.str.82, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.81, %union.anon.103 { %struct.anon.104 { ptr @.str.83, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_spi_message_done = internal global %struct.trace_event_class { ptr @str__spi__trace_system_name, ptr @trace_event_raw_event_spi_message_done, ptr @perf_trace_spi_message_done, ptr @trace_event_reg, ptr @trace_event_fields_spi_message_done, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_spi_message_done, i64 24), ptr getelementptr (i8, ptr @event_class_spi_message_done, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_spi_message_done = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_spi_message_done, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_spi_message_done = internal global { [143 x i8], [49 x i8] } { [143 x i8] c"\22spi%d.%d %p len=%u/%u\22, (int)REC->bus_num, (int)REC->chip_select, (struct spi_message *)REC->msg, (unsigned)REC->actual, (unsigned)REC->frame\00", [49 x i8] zeroinitializer }, align 32
@event_spi_message_done = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_spi_message_done, %union.anon.105 { ptr @__tracepoint_spi_message_done }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_spi_message_done }, ptr @print_fmt_spi_message_done, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_spi_message_done = internal global ptr @event_spi_message_done, section "_ftrace_events", align 4
@trace_event_fields_spi_transfer = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.62, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.64, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.85, %union.anon.103 { %struct.anon.104 { ptr @.str.86, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.61, %union.anon.103 { %struct.anon.104 { ptr @.str.87, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.88, %union.anon.103 { %struct.anon.104 { ptr @.str.89, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.88, %union.anon.103 { %struct.anon.104 { ptr @.str.90, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_spi_transfer = internal global %struct.trace_event_class { ptr @str__spi__trace_system_name, ptr @trace_event_raw_event_spi_transfer, ptr @perf_trace_spi_transfer, ptr @trace_event_reg, ptr @trace_event_fields_spi_transfer, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_spi_transfer, i64 24), ptr getelementptr (i8, ptr @event_class_spi_transfer, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_spi_transfer = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_spi_transfer, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_spi_transfer = internal global { [220 x i8], [36 x i8] } { [220 x i8] c"\22spi%d.%d %p len=%d tx=[%*phD] rx=[%*phD]\22, REC->bus_num, REC->chip_select, REC->xfer, REC->len, __get_dynamic_array_len(tx_buf), __get_dynamic_array(tx_buf), __get_dynamic_array_len(rx_buf), __get_dynamic_array(rx_buf)\00", [36 x i8] zeroinitializer }, align 32
@event_spi_transfer_start = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_spi_transfer, %union.anon.105 { ptr @__tracepoint_spi_transfer_start }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_spi_transfer }, ptr @print_fmt_spi_transfer, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_spi_transfer_start = internal global ptr @event_spi_transfer_start, section "_ftrace_events", align 4
@event_spi_transfer_stop = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_spi_transfer, %union.anon.105 { ptr @__tracepoint_spi_transfer_stop }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_spi_transfer }, ptr @print_fmt_spi_transfer, ptr null, %union.anon.106 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_spi_transfer_stop = internal global ptr @event_spi_transfer_stop, section "_ftrace_events", align 4
@__bpf_trace_tp_map_spi_controller_idle = internal global %union.anon.107 { %struct.bpf_raw_event_map { ptr @__tracepoint_spi_controller_idle, ptr @__bpf_trace_spi_controller, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_spi_controller_busy = internal global %union.anon.108 { %struct.bpf_raw_event_map { ptr @__tracepoint_spi_controller_busy, ptr @__bpf_trace_spi_controller, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_spi_setup = internal global %union.anon.109 { %struct.bpf_raw_event_map { ptr @__tracepoint_spi_setup, ptr @__bpf_trace_spi_setup, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_spi_set_cs = internal global %union.anon.110 { %struct.bpf_raw_event_map { ptr @__tracepoint_spi_set_cs, ptr @__bpf_trace_spi_set_cs, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_spi_message_submit = internal global %union.anon.111 { %struct.bpf_raw_event_map { ptr @__tracepoint_spi_message_submit, ptr @__bpf_trace_spi_message, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_spi_message_start = internal global %union.anon.112 { %struct.bpf_raw_event_map { ptr @__tracepoint_spi_message_start, ptr @__bpf_trace_spi_message, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_spi_message_done = internal global %union.anon.113 { %struct.bpf_raw_event_map { ptr @__tracepoint_spi_message_done, ptr @__bpf_trace_spi_message_done, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_spi_transfer_start = internal global %union.anon.114 { %struct.bpf_raw_event_map { ptr @__tracepoint_spi_transfer_start, ptr @__bpf_trace_spi_transfer, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_spi_transfer_stop = internal global %union.anon.115 { %struct.bpf_raw_event_map { ptr @__tracepoint_spi_transfer_stop, ptr @__bpf_trace_spi_transfer, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__kstrtab___tracepoint_spi_transfer_start = external dso_local constant [0 x i8], align 1
@__kstrtabns___tracepoint_spi_transfer_start = external dso_local constant [0 x i8], align 1
@__ksymtab___tracepoint_spi_transfer_start = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__tracepoint_spi_transfer_start to i32), ptr @__kstrtab___tracepoint_spi_transfer_start, ptr @__kstrtabns___tracepoint_spi_transfer_start }, section "___ksymtab+__tracepoint_spi_transfer_start", align 4
@__kstrtab___traceiter_spi_transfer_start = external dso_local constant [0 x i8], align 1
@__kstrtabns___traceiter_spi_transfer_start = external dso_local constant [0 x i8], align 1
@__ksymtab___traceiter_spi_transfer_start = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__traceiter_spi_transfer_start to i32), ptr @__kstrtab___traceiter_spi_transfer_start, ptr @__kstrtabns___traceiter_spi_transfer_start }, section "___ksymtab+__traceiter_spi_transfer_start", align 4
@__kstrtab___SCK__tp_func_spi_transfer_start = external dso_local constant [0 x i8], align 1
@__kstrtabns___SCK__tp_func_spi_transfer_start = external dso_local constant [0 x i8], align 1
@__ksymtab___SCK__tp_func_spi_transfer_start = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__SCK__tp_func_spi_transfer_start to i32), ptr @__kstrtab___SCK__tp_func_spi_transfer_start, ptr @__kstrtabns___SCK__tp_func_spi_transfer_start }, section "___ksymtab+__SCK__tp_func_spi_transfer_start", align 4
@__kstrtab___tracepoint_spi_transfer_stop = external dso_local constant [0 x i8], align 1
@__kstrtabns___tracepoint_spi_transfer_stop = external dso_local constant [0 x i8], align 1
@__ksymtab___tracepoint_spi_transfer_stop = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__tracepoint_spi_transfer_stop to i32), ptr @__kstrtab___tracepoint_spi_transfer_stop, ptr @__kstrtabns___tracepoint_spi_transfer_stop }, section "___ksymtab+__tracepoint_spi_transfer_stop", align 4
@__kstrtab___traceiter_spi_transfer_stop = external dso_local constant [0 x i8], align 1
@__kstrtabns___traceiter_spi_transfer_stop = external dso_local constant [0 x i8], align 1
@__ksymtab___traceiter_spi_transfer_stop = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__traceiter_spi_transfer_stop to i32), ptr @__kstrtab___traceiter_spi_transfer_stop, ptr @__kstrtabns___traceiter_spi_transfer_stop }, section "___ksymtab+__traceiter_spi_transfer_stop", align 4
@__kstrtab___SCK__tp_func_spi_transfer_stop = external dso_local constant [0 x i8], align 1
@__kstrtabns___SCK__tp_func_spi_transfer_stop = external dso_local constant [0 x i8], align 1
@__ksymtab___SCK__tp_func_spi_transfer_stop = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__SCK__tp_func_spi_transfer_stop to i32), ptr @__kstrtab___SCK__tp_func_spi_transfer_stop, ptr @__kstrtabns___SCK__tp_func_spi_transfer_stop }, section "___ksymtab+__SCK__tp_func_spi_transfer_stop", align 4
@__kstrtab_spi_get_device_id = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_get_device_id = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_get_device_id = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_get_device_id to i32), ptr @__kstrtab_spi_get_device_id, ptr @__kstrtabns_spi_get_device_id }, section "___ksymtab_gpl+spi_get_device_id", align 4
@.str = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"spi\00", [28 x i8] zeroinitializer }, align 32
@spi_dev_groups = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @spi_dev_group, ptr @spi_device_statistics_group, ptr null], [20 x i8] zeroinitializer }, align 32
@spi_bus_type = dso_local global { %struct.bus_type, [32 x i8] } { %struct.bus_type { ptr @.str, ptr null, ptr null, ptr null, ptr @spi_dev_groups, ptr null, ptr @spi_match_device, ptr @spi_uevent, ptr @spi_probe, ptr null, ptr @spi_remove, ptr @spi_shutdown, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, %struct.lock_class_key zeroinitializer, i8 0 }, [32 x i8] zeroinitializer }, align 32
@__kstrtab_spi_bus_type = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_bus_type = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_bus_type = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_bus_type to i32), ptr @__kstrtab_spi_bus_type, ptr @__kstrtabns_spi_bus_type }, section "___ksymtab_gpl+spi_bus_type", align 4
@__spi_register_driver._entry = internal constant %struct.pi_entry { ptr @.str.1, ptr @.str.2, ptr @.str.3, i32 486, ptr null, ptr null }, align 1
@.str.1 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\014SPI driver %s has no spi_device_id for %s\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"__spi_register_driver\00", [42 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"drivers/spi/spi.c\00", [46 x i8] zeroinitializer }, align 32
@__spi_register_driver._entry_ptr = internal global ptr @__spi_register_driver._entry, section ".printk_index", align 4
@__kstrtab___spi_register_driver = external dso_local constant [0 x i8], align 1
@__kstrtabns___spi_register_driver = external dso_local constant [0 x i8], align 1
@__ksymtab___spi_register_driver = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__spi_register_driver to i32), ptr @__kstrtab___spi_register_driver, ptr @__kstrtabns___spi_register_driver }, section "___ksymtab_gpl+__spi_register_driver", align 4
@spi_new_device._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.4, ptr @.str.5, ptr @.str.3, i32 743, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"failed to add software node to '%s': %d\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"spi_new_device\00", [17 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@spi_new_device._entry_ptr = internal global ptr @spi_new_device._entry, section ".printk_index", align 4
@__kstrtab_spi_new_device = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_new_device = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_new_device = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_new_device to i32), ptr @__kstrtab_spi_new_device, ptr @__kstrtabns_spi_new_device }, section "___ksymtab_gpl+spi_new_device", align 4
@__kstrtab_spi_unregister_device = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_unregister_device = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_unregister_device = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_unregister_device to i32), ptr @__kstrtab_spi_unregister_device, ptr @__kstrtabns_spi_unregister_device }, section "___ksymtab_gpl+spi_unregister_device", align 4
@board_lock = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.145, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @board_lock, i64 52), ptr getelementptr (i8, ptr @board_lock, i64 52) }, ptr @board_lock, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.146, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@board_list = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @board_list, ptr @board_list }, [24 x i8] zeroinitializer }, align 32
@spi_controller_list = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @spi_controller_list, ptr @spi_controller_list }, [24 x i8] zeroinitializer }, align 32
@high_memory = external dso_local local_unnamed_addr global ptr, align 4
@__pv_phys_pfn_offset = external dso_local local_unnamed_addr global i32, align 4
@__kstrtab_spi_delay_to_ns = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_delay_to_ns = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_delay_to_ns = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_delay_to_ns to i32), ptr @__kstrtab_spi_delay_to_ns, ptr @__kstrtabns_spi_delay_to_ns }, section "___ksymtab_gpl+spi_delay_to_ns", align 4
@__kstrtab_spi_delay_exec = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_delay_exec = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_delay_exec = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_delay_exec to i32), ptr @__kstrtab_spi_delay_exec, ptr @__kstrtabns_spi_delay_exec }, section "___ksymtab_gpl+spi_delay_exec", align 4
@__kstrtab_spi_finalize_current_transfer = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_finalize_current_transfer = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_finalize_current_transfer = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_finalize_current_transfer to i32), ptr @__kstrtab_spi_finalize_current_transfer, ptr @__kstrtabns_spi_finalize_current_transfer }, section "___ksymtab_gpl+spi_finalize_current_transfer", align 4
@__kstrtab_spi_take_timestamp_pre = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_take_timestamp_pre = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_take_timestamp_pre = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_take_timestamp_pre to i32), ptr @__kstrtab_spi_take_timestamp_pre, ptr @__kstrtabns_spi_take_timestamp_pre }, section "___ksymtab_gpl+spi_take_timestamp_pre", align 4
@__kstrtab_spi_take_timestamp_post = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_take_timestamp_post = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_take_timestamp_post = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_take_timestamp_post to i32), ptr @__kstrtab_spi_take_timestamp_post, ptr @__kstrtabns_spi_take_timestamp_post }, section "___ksymtab_gpl+spi_take_timestamp_post", align 4
@__kstrtab_spi_get_next_queued_message = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_get_next_queued_message = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_get_next_queued_message = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_get_next_queued_message to i32), ptr @__kstrtab_spi_get_next_queued_message, ptr @__kstrtabns_spi_get_next_queued_message }, section "___ksymtab_gpl+spi_get_next_queued_message", align 4
@spi_finalize_current_message.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@spi_finalize_current_message._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.8, ptr @.str.9, ptr @.str.3, i32 1916, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"failed to unprepare message: %d\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"spi_finalize_current_message\00", [35 x i8] zeroinitializer }, align 32
@spi_finalize_current_message._entry_ptr = internal global ptr @spi_finalize_current_message._entry, section ".printk_index", align 4
@__kstrtab_spi_finalize_current_message = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_finalize_current_message = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_finalize_current_message = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_finalize_current_message to i32), ptr @__kstrtab_spi_finalize_current_message, ptr @__kstrtabns_spi_finalize_current_message }, section "___ksymtab_gpl+spi_finalize_current_message", align 4
@.str.10 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"dummy\00", [26 x i8] zeroinitializer }, align 32
@spi_new_ancillary_device._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.11, ptr @.str.12, ptr @.str.3, i32 2301, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"failed to register ancillary device\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"spi_new_ancillary_device\00", [39 x i8] zeroinitializer }, align 32
@spi_new_ancillary_device._entry_ptr = internal global ptr @spi_new_ancillary_device._entry, section ".printk_index", align 4
@__kstrtab_spi_new_ancillary_device = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_new_ancillary_device = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_new_ancillary_device = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_new_ancillary_device to i32), ptr @__kstrtab_spi_new_ancillary_device, ptr @__kstrtabns_spi_new_ancillary_device }, section "___ksymtab_gpl+spi_new_ancillary_device", align 4
@__kstrtab_spi_slave_abort = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_slave_abort = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_slave_abort = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_slave_abort to i32), ptr @__kstrtab_spi_slave_abort, ptr @__kstrtabns_spi_slave_abort }, section "___ksymtab_gpl+spi_slave_abort", align 4
@__spi_alloc_controller.__key = internal global %struct.lock_class_key zeroinitializer, align 4
@.str.13 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"&ctlr->queue_lock\00", [46 x i8] zeroinitializer }, align 32
@__spi_alloc_controller.__key.14 = internal global %struct.lock_class_key zeroinitializer, align 4
@.str.15 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"&ctlr->bus_lock_spinlock\00", [39 x i8] zeroinitializer }, align 32
@__spi_alloc_controller.__key.16 = internal global %struct.lock_class_key zeroinitializer, align 4
@.str.17 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"&ctlr->bus_lock_mutex\00", [42 x i8] zeroinitializer }, align 32
@__spi_alloc_controller.__key.18 = internal global %struct.lock_class_key zeroinitializer, align 4
@.str.19 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"&ctlr->io_mutex\00", [16 x i8] zeroinitializer }, align 32
@__spi_alloc_controller.__key.20 = internal global %struct.lock_class_key zeroinitializer, align 4
@.str.21 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"&ctlr->add_lock\00", [16 x i8] zeroinitializer }, align 32
@spi_slave_class = internal global { %struct.class, [36 x i8] } { %struct.class { ptr @.str.166, ptr null, ptr null, ptr @spi_slave_groups, ptr null, ptr null, ptr null, ptr null, ptr @spi_controller_release, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [36 x i8] zeroinitializer }, align 32
@spi_master_class = internal global { %struct.class, [36 x i8] } { %struct.class { ptr @.str.169, ptr null, ptr null, ptr @spi_master_groups, ptr null, ptr null, ptr null, ptr null, ptr @spi_controller_release, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [36 x i8] zeroinitializer }, align 32
@__kstrtab___spi_alloc_controller = external dso_local constant [0 x i8], align 1
@__kstrtabns___spi_alloc_controller = external dso_local constant [0 x i8], align 1
@__ksymtab___spi_alloc_controller = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__spi_alloc_controller to i32), ptr @__kstrtab___spi_alloc_controller, ptr @__kstrtabns___spi_alloc_controller }, section "___ksymtab_gpl+__spi_alloc_controller", align 4
@.str.22 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"devm_spi_release_controller\00", [36 x i8] zeroinitializer }, align 32
@__kstrtab___devm_spi_alloc_controller = external dso_local constant [0 x i8], align 1
@__kstrtabns___devm_spi_alloc_controller = external dso_local constant [0 x i8], align 1
@__ksymtab___devm_spi_alloc_controller = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__devm_spi_alloc_controller to i32), ptr @__kstrtab___devm_spi_alloc_controller, ptr @__kstrtabns___devm_spi_alloc_controller }, section "___ksymtab_gpl+__devm_spi_alloc_controller", align 4
@spi_master_idr = internal global { %struct.idr, [36 x i8] } { %struct.idr { %struct.xarray { %struct.spinlock { %union.anon.1 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.170, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, i32 67108868, ptr null }, i32 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"couldn't get idr\00", [47 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"spi%u\00", [26 x i8] zeroinitializer }, align 32
@spi_register_controller.__UNIQUE_ID_ddebug367 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.25, ptr @.str.3, ptr @.str.26, i8 2, i8 -21, i8 0, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.25 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"spi_register_controller\00", [40 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"registered %s %s\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"slave\00", [26 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"master\00", [25 x i8] zeroinitializer }, align 32
@spi_register_controller._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.29, ptr @.str.25, ptr @.str.3, i32 2996, ptr @.str.30, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"controller is unqueued, this is deprecated\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\016\00", [29 x i8] zeroinitializer }, align 32
@spi_register_controller._entry_ptr = internal global ptr @spi_register_controller._entry, section ".printk_index", align 4
@spi_register_controller.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.31 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"&ctlr->statistics.lock\00", [41 x i8] zeroinitializer }, align 32
@__kstrtab_spi_register_controller = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_register_controller = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_register_controller = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_register_controller to i32), ptr @__kstrtab_spi_register_controller, ptr @__kstrtabns_spi_register_controller }, section "___ksymtab_gpl+spi_register_controller", align 4
@__kstrtab_devm_spi_register_controller = external dso_local constant [0 x i8], align 1
@__kstrtabns_devm_spi_register_controller = external dso_local constant [0 x i8], align 1
@__ksymtab_devm_spi_register_controller = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devm_spi_register_controller to i32), ptr @__kstrtab_devm_spi_register_controller, ptr @__kstrtabns_devm_spi_register_controller }, section "___ksymtab_gpl+devm_spi_register_controller", align 4
@spi_unregister_controller._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.32, ptr @.str.33, ptr @.str.3, i32 3092, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"queue remove failed\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"spi_unregister_controller\00", [38 x i8] zeroinitializer }, align 32
@spi_unregister_controller._entry_ptr = internal global ptr @spi_unregister_controller._entry, section ".printk_index", align 4
@__kstrtab_spi_unregister_controller = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_unregister_controller = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_unregister_controller = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_unregister_controller to i32), ptr @__kstrtab_spi_unregister_controller, ptr @__kstrtabns_spi_unregister_controller }, section "___ksymtab_gpl+spi_unregister_controller", align 4
@spi_controller_suspend._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.34, ptr @.str.35, ptr @.str.3, i32 3127, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"queue stop failed\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"spi_controller_suspend\00", [41 x i8] zeroinitializer }, align 32
@spi_controller_suspend._entry_ptr = internal global ptr @spi_controller_suspend._entry, section ".printk_index", align 4
@__kstrtab_spi_controller_suspend = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_controller_suspend = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_controller_suspend = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_controller_suspend to i32), ptr @__kstrtab_spi_controller_suspend, ptr @__kstrtabns_spi_controller_suspend }, section "___ksymtab_gpl+spi_controller_suspend", align 4
@spi_controller_resume._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.36, ptr @.str.37, ptr @.str.3, i32 3142, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"queue restart failed\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"spi_controller_resume\00", [42 x i8] zeroinitializer }, align 32
@spi_controller_resume._entry_ptr = internal global ptr @spi_controller_resume._entry, section ".printk_index", align 4
@__kstrtab_spi_controller_resume = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_controller_resume = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_controller_resume = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_controller_resume to i32), ptr @__kstrtab_spi_controller_resume, ptr @__kstrtabns_spi_controller_resume }, section "___ksymtab_gpl+spi_controller_resume", align 4
@__kstrtab_spi_split_transfers_maxsize = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_split_transfers_maxsize = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_split_transfers_maxsize = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_split_transfers_maxsize to i32), ptr @__kstrtab_spi_split_transfers_maxsize, ptr @__kstrtabns_spi_split_transfers_maxsize }, section "___ksymtab_gpl+spi_split_transfers_maxsize", align 4
@spi_setup._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.38, ptr @.str.39, ptr @.str.3, i32 3444, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"setup: can not select any two of dual, quad and no-rx/tx at the same time\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"spi_setup\00", [22 x i8] zeroinitializer }, align 32
@spi_setup._entry_ptr = internal global ptr @spi_setup._entry, section ".printk_index", align 4
@spi_setup._entry.40 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.41, ptr @.str.39, ptr @.str.3, i32 3472, ptr @.str.42, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"setup: ignoring unsupported mode bits %x\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@spi_setup._entry_ptr.43 = internal global ptr @spi_setup._entry.40, section ".printk_index", align 4
@spi_setup._entry.44 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.45, ptr @.str.39, ptr @.str.3, i32 3478, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"setup: unsupported mode bits %x\0A\00", [63 x i8] zeroinitializer }, align 32
@spi_setup._entry_ptr.46 = internal global ptr @spi_setup._entry.44, section ".printk_index", align 4
@spi_setup._entry.47 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.48, ptr @.str.39, ptr @.str.3, i32 3502, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Failed to setup device: %d\0A\00", [36 x i8] zeroinitializer }, align 32
@spi_setup._entry_ptr.49 = internal global ptr @spi_setup._entry.47, section ".printk_index", align 4
@spi_setup._entry.50 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.51, ptr @.str.39, ptr @.str.3, i32 3513, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Failed to power device: %d\0A\00", [36 x i8] zeroinitializer }, align 32
@spi_setup._entry_ptr.52 = internal global ptr @spi_setup._entry.50, section ".printk_index", align 4
@spi_setup.__UNIQUE_ID_ddebug372 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.39, ptr @.str.3, ptr @.str.53, i8 3, i8 119, i8 0, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.53 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"setup mode %lu, %s%s%s%s%u bits/w, %u Hz max --> %d\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"cs_high, \00", [22 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@.str.56 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"lsb, \00", [26 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"3wire, \00", [24 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"loopback, \00", [21 x i8] zeroinitializer }, align 32
@__kstrtab_spi_setup = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_setup = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_setup = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_setup to i32), ptr @__kstrtab_spi_setup, ptr @__kstrtabns_spi_setup }, section "___ksymtab_gpl+spi_setup", align 4
@__kstrtab_spi_async = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_async = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_async = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_async to i32), ptr @__kstrtab_spi_async, ptr @__kstrtabns_spi_async }, section "___ksymtab_gpl+spi_async", align 4
@__kstrtab_spi_sync = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_sync = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_sync = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_sync to i32), ptr @__kstrtab_spi_sync, ptr @__kstrtabns_spi_sync }, section "___ksymtab_gpl+spi_sync", align 4
@__kstrtab_spi_sync_locked = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_sync_locked = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_sync_locked = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_sync_locked to i32), ptr @__kstrtab_spi_sync_locked, ptr @__kstrtabns_spi_sync_locked }, section "___ksymtab_gpl+spi_sync_locked", align 4
@__kstrtab_spi_bus_lock = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_bus_lock = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_bus_lock = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_bus_lock to i32), ptr @__kstrtab_spi_bus_lock, ptr @__kstrtabns_spi_bus_lock }, section "___ksymtab_gpl+spi_bus_lock", align 4
@__kstrtab_spi_bus_unlock = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_bus_unlock = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_bus_unlock = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_bus_unlock to i32), ptr @__kstrtab_spi_bus_unlock, ptr @__kstrtabns_spi_bus_unlock }, section "___ksymtab_gpl+spi_bus_unlock", align 4
@spi_write_then_read.lock = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.59, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @spi_write_then_read.lock, i64 52), ptr getelementptr (i8, ptr @spi_write_then_read.lock, i64 52) }, ptr @spi_write_then_read.lock, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.60, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"lock.wait_lock\00", [17 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"lock\00", [27 x i8] zeroinitializer }, align 32
@buf = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@__kstrtab_spi_write_then_read = external dso_local constant [0 x i8], align 1
@__kstrtabns_spi_write_then_read = external dso_local constant [0 x i8], align 1
@__ksymtab_spi_write_then_read = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @spi_write_then_read to i32), ptr @__kstrtab_spi_write_then_read, ptr @__kstrtabns_spi_write_then_read }, section "___ksymtab_gpl+spi_write_then_read", align 4
@__initcall__kmod_spi__381_4315_spi_init2 = internal global ptr @spi_init, section ".initcall2.init", align 4
@.str.61 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"int\00", [28 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"bus_num\00", [24 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"spi%d\0A\00", [25 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"chip_select\00", [20 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"unsigned long\00", [18 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"mode\00", [27 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unsigned int\00", [19 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"bits_per_word\00", [18 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"max_speed_hz\00", [19 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"status\00", [25 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"spi%d.%d setup mode %lu, %s%s%s%s%u bits/w, %u Hz max --> %d\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"bool\00", [27 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"enable\00", [25 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"spi%d.%d %s%s\0A\00", [17 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"activate\00", [23 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"deactivate\00", [21 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c", cs_high\00", [22 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"struct spi_message *\00", [43 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"msg\00", [28 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"spi%d.%d %p\0A\00", [19 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"unsigned\00", [23 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"frame\00", [26 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"actual\00", [25 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"spi%d.%d %p len=%u/%u\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"struct spi_transfer *\00", [42 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"xfer\00", [27 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"len\00", [28 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"__data_loc u8[]\00", [16 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"rx_buf\00", [25 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"tx_buf\00", [25 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"spi%d.%d %p len=%d tx=[%*phD] rx=[%*phD]\0A\00", [54 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@spi_dev_group = internal constant { %struct.attribute_group, [44 x i8] } { %struct.attribute_group { ptr null, ptr null, ptr null, ptr @spi_dev_attrs, ptr null }, [44 x i8] zeroinitializer }, align 32
@spi_device_statistics_group = internal constant { %struct.attribute_group, [44 x i8] } { %struct.attribute_group { ptr @.str.97, ptr null, ptr null, ptr @spi_device_statistics_attrs, ptr null }, [44 x i8] zeroinitializer }, align 32
@spi_dev_attrs = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @dev_attr_modalias, ptr @dev_attr_driver_override, ptr null], [20 x i8] zeroinitializer }, align 32
@dev_attr_modalias = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.92, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @modalias_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_driver_override = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.95, i16 420, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @driver_override_show, ptr @driver_override_store }, [36 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"modalias\00", [23 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%s%s\0A\00", [26 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"spi:\00", [27 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"driver_override\00", [16 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%s\0A\00", [28 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"statistics\00", [21 x i8] zeroinitializer }, align 32
@spi_device_statistics_attrs = internal global { [29 x ptr], [44 x i8] } { [29 x ptr] [ptr @dev_attr_spi_device_messages, ptr @dev_attr_spi_device_transfers, ptr @dev_attr_spi_device_errors, ptr @dev_attr_spi_device_timedout, ptr @dev_attr_spi_device_spi_sync, ptr @dev_attr_spi_device_spi_sync_immediate, ptr @dev_attr_spi_device_spi_async, ptr @dev_attr_spi_device_bytes, ptr @dev_attr_spi_device_bytes_rx, ptr @dev_attr_spi_device_bytes_tx, ptr @dev_attr_spi_device_transfer_bytes_histo0, ptr @dev_attr_spi_device_transfer_bytes_histo1, ptr @dev_attr_spi_device_transfer_bytes_histo2, ptr @dev_attr_spi_device_transfer_bytes_histo3, ptr @dev_attr_spi_device_transfer_bytes_histo4, ptr @dev_attr_spi_device_transfer_bytes_histo5, ptr @dev_attr_spi_device_transfer_bytes_histo6, ptr @dev_attr_spi_device_transfer_bytes_histo7, ptr @dev_attr_spi_device_transfer_bytes_histo8, ptr @dev_attr_spi_device_transfer_bytes_histo9, ptr @dev_attr_spi_device_transfer_bytes_histo10, ptr @dev_attr_spi_device_transfer_bytes_histo11, ptr @dev_attr_spi_device_transfer_bytes_histo12, ptr @dev_attr_spi_device_transfer_bytes_histo13, ptr @dev_attr_spi_device_transfer_bytes_histo14, ptr @dev_attr_spi_device_transfer_bytes_histo15, ptr @dev_attr_spi_device_transfer_bytes_histo16, ptr @dev_attr_spi_device_transfers_split_maxsize, ptr null], [44 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_messages = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.98, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_messages_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_transfers = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.100, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_transfers_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_errors = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.101, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_errors_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_timedout = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.102, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_timedout_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_spi_sync = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.103, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_spi_sync_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_spi_sync_immediate = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.104, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_spi_sync_immediate_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_spi_async = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.105, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_spi_async_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_bytes = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.106, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_bytes_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_bytes_rx = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.108, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_bytes_rx_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_bytes_tx = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.109, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_bytes_tx_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_transfer_bytes_histo0 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.110, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_transfer_bytes_histo0_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_transfer_bytes_histo1 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.111, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_transfer_bytes_histo1_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_transfer_bytes_histo2 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.112, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_transfer_bytes_histo2_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_transfer_bytes_histo3 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.113, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_transfer_bytes_histo3_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_transfer_bytes_histo4 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.114, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_transfer_bytes_histo4_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_transfer_bytes_histo5 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.115, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_transfer_bytes_histo5_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_transfer_bytes_histo6 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.116, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_transfer_bytes_histo6_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_transfer_bytes_histo7 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.117, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_transfer_bytes_histo7_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_transfer_bytes_histo8 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.118, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_transfer_bytes_histo8_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_transfer_bytes_histo9 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.119, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_transfer_bytes_histo9_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_transfer_bytes_histo10 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.120, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_transfer_bytes_histo10_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_transfer_bytes_histo11 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.121, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_transfer_bytes_histo11_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_transfer_bytes_histo12 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.122, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_transfer_bytes_histo12_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_transfer_bytes_histo13 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.123, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_transfer_bytes_histo13_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_transfer_bytes_histo14 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.124, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_transfer_bytes_histo14_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_transfer_bytes_histo15 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.125, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_transfer_bytes_histo15_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_transfer_bytes_histo16 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.126, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_transfer_bytes_histo16_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_device_transfers_split_maxsize = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.127, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_device_transfers_split_maxsize_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"messages\00", [23 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%lu\00", [28 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"transfers\00", [22 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"errors\00", [25 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"timedout\00", [23 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"spi_sync\00", [23 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"spi_sync_immediate\00", [45 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"spi_async\00", [22 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"bytes\00", [26 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"%llu\00", [27 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"bytes_rx\00", [23 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"bytes_tx\00", [23 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"transfer_bytes_histo_0-1\00", [39 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"transfer_bytes_histo_2-3\00", [39 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"transfer_bytes_histo_4-7\00", [39 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"transfer_bytes_histo_8-15\00", [38 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"transfer_bytes_histo_16-31\00", [37 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"transfer_bytes_histo_32-63\00", [37 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"transfer_bytes_histo_64-127\00", [36 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"transfer_bytes_histo_128-255\00", [35 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"transfer_bytes_histo_256-511\00", [35 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"transfer_bytes_histo_512-1023\00", [34 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"transfer_bytes_histo_1024-2047\00", [33 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"transfer_bytes_histo_2048-4095\00", [33 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"transfer_bytes_histo_4096-8191\00", [33 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"transfer_bytes_histo_8192-16383\00", [32 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"transfer_bytes_histo_16384-32767\00", [63 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"transfer_bytes_histo_32768-65535\00", [63 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"transfer_bytes_histo_65536+\00", [36 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"transfers_split_maxsize\00", [40 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"MODALIAS=%s%s\00", [18 x i8] zeroinitializer }, align 32
@spi_remove._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.129, ptr @.str.130, ptr @.str.3, i32 414, ptr @.str.42, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"Failed to unbind driver (%pe), ignoring\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"spi_remove\00", [21 x i8] zeroinitializer }, align 32
@spi_remove._entry_ptr = internal global ptr @spi_remove._entry, section ".printk_index", align 4
@spi_alloc_device.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.131 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"&spi->statistics.lock\00", [42 x i8] zeroinitializer }, align 32
@spi_add_device._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.132, ptr @.str.133, ptr @.str.3, i32 664, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"cs%d >= max %d\0A\00", [16 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"spi_add_device\00", [17 x i8] zeroinitializer }, align 32
@spi_add_device._entry_ptr = internal global ptr @spi_add_device._entry, section ".printk_index", align 4
@.str.135 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%s.%u\00", [26 x i8] zeroinitializer }, align 32
@__spi_add_device._entry = internal constant %struct.pi_entry { ptr @.str.136, ptr @.str.137, ptr @.str.3, i32 605, ptr @.str.6, ptr @.str.7 }, align 1
@.str.136 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"chipselect %d already in use\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"__spi_add_device\00", [47 x i8] zeroinitializer }, align 32
@__spi_add_device._entry_ptr = internal global ptr @__spi_add_device._entry, section ".printk_index", align 4
@__spi_add_device._entry.138 = internal constant %struct.pi_entry { ptr @.str.139, ptr @.str.137, ptr @.str.3, i32 629, ptr @.str.6, ptr @.str.7 }, align 1
@.str.139 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"can't setup %s, status %d\0A\00", [37 x i8] zeroinitializer }, align 32
@__spi_add_device._entry_ptr.140 = internal global ptr @__spi_add_device._entry.138, section ".printk_index", align 4
@__spi_add_device._entry.141 = internal constant %struct.pi_entry { ptr @.str.142, ptr @.str.137, ptr @.str.3, i32 637, ptr @.str.6, ptr @.str.7 }, align 1
@.str.142 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"can't add %s, status %d\0A\00", [39 x i8] zeroinitializer }, align 32
@__spi_add_device._entry_ptr.143 = internal global ptr @__spi_add_device._entry.141, section ".printk_index", align 4
@__spi_add_device.__UNIQUE_ID_ddebug346 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.137, ptr @.str.3, ptr @.str.144, i8 0, i8 -96, i8 0, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.144 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"registered child %s\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"board_lock.wait_lock\00", [43 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"board_lock\00", [21 x i8] zeroinitializer }, align 32
@spi_match_controller_to_boardinfo._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.147, ptr @.str.148, ptr @.str.3, i32 797, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"can't create new device for %s\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"spi_match_controller_to_boardinfo\00", [62 x i8] zeroinitializer }, align 32
@spi_match_controller_to_boardinfo._entry_ptr = internal global ptr @spi_match_controller_to_boardinfo._entry, section ".printk_index", align 4
@mem_map = external dso_local local_unnamed_addr global ptr, align 4
@arm_delay_ops = external dso_local local_unnamed_addr global %struct.arm_delay_ops, align 4
@.str.149 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"include/trace/events/spi.h\00", [37 x i8] zeroinitializer }, align 32
@trace_spi_message_done.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.150 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.151 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@__spi_pump_messages._entry = internal constant %struct.pi_entry { ptr @.str.152, ptr @.str.153, ptr @.str.3, i32 1605, ptr @.str.6, ptr @.str.7 }, align 1
@.str.152 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"failed to unprepare transfer hardware\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"__spi_pump_messages\00", [44 x i8] zeroinitializer }, align 32
@__spi_pump_messages._entry_ptr = internal global ptr @__spi_pump_messages._entry, section ".printk_index", align 4
@__spi_pump_messages._entry.154 = internal constant %struct.pi_entry { ptr @.str.51, ptr @.str.153, ptr @.str.3, i32 1633, ptr @.str.6, ptr @.str.7 }, align 1
@__spi_pump_messages._entry_ptr.155 = internal global ptr @__spi_pump_messages._entry.154, section ".printk_index", align 4
@__spi_pump_messages._entry.156 = internal constant %struct.pi_entry { ptr @.str.157, ptr @.str.153, ptr @.str.3, i32 1647, ptr @.str.6, ptr @.str.7 }, align 1
@.str.157 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"failed to prepare transfer hardware: %d\0A\00", [55 x i8] zeroinitializer }, align 32
@__spi_pump_messages._entry_ptr.158 = internal global ptr @__spi_pump_messages._entry.156, section ".printk_index", align 4
@__spi_pump_messages._entry.159 = internal constant %struct.pi_entry { ptr @.str.160, ptr @.str.153, ptr @.str.3, i32 1666, ptr @.str.6, ptr @.str.7 }, align 1
@.str.160 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"failed to prepare message: %d\0A\00", [33 x i8] zeroinitializer }, align 32
@__spi_pump_messages._entry_ptr.161 = internal global ptr @__spi_pump_messages._entry.159, section ".printk_index", align 4
@__spi_pump_messages._entry.162 = internal constant %struct.pi_entry { ptr @.str.163, ptr @.str.153, ptr @.str.3, i32 1691, ptr @.str.6, ptr @.str.7 }, align 1
@.str.163 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"failed to transfer one message from queue\0A\00", [53 x i8] zeroinitializer }, align 32
@__spi_pump_messages._entry_ptr.164 = internal global ptr @__spi_pump_messages._entry.162, section ".printk_index", align 4
@trace_spi_controller_idle.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_spi_controller_busy.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_spi_message_start.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@spi_add_device_locked._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.132, ptr @.str.165, ptr @.str.3, i32 685, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.165 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"spi_add_device_locked\00", [42 x i8] zeroinitializer }, align 32
@spi_add_device_locked._entry_ptr = internal global ptr @spi_add_device_locked._entry, section ".printk_index", align 4
@.str.166 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"spi_slave\00", [22 x i8] zeroinitializer }, align 32
@spi_slave_groups = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @spi_controller_statistics_group, ptr @spi_slave_group, ptr null], [20 x i8] zeroinitializer }, align 32
@spi_controller_statistics_group = internal constant { %struct.attribute_group, [44 x i8] } { %struct.attribute_group { ptr @.str.97, ptr null, ptr null, ptr @spi_controller_statistics_attrs, ptr null }, [44 x i8] zeroinitializer }, align 32
@spi_slave_group = internal constant { %struct.attribute_group, [44 x i8] } { %struct.attribute_group { ptr null, ptr null, ptr null, ptr @spi_slave_attrs, ptr null }, [44 x i8] zeroinitializer }, align 32
@spi_controller_statistics_attrs = internal global { [29 x ptr], [44 x i8] } { [29 x ptr] [ptr @dev_attr_spi_controller_messages, ptr @dev_attr_spi_controller_transfers, ptr @dev_attr_spi_controller_errors, ptr @dev_attr_spi_controller_timedout, ptr @dev_attr_spi_controller_spi_sync, ptr @dev_attr_spi_controller_spi_sync_immediate, ptr @dev_attr_spi_controller_spi_async, ptr @dev_attr_spi_controller_bytes, ptr @dev_attr_spi_controller_bytes_rx, ptr @dev_attr_spi_controller_bytes_tx, ptr @dev_attr_spi_controller_transfer_bytes_histo0, ptr @dev_attr_spi_controller_transfer_bytes_histo1, ptr @dev_attr_spi_controller_transfer_bytes_histo2, ptr @dev_attr_spi_controller_transfer_bytes_histo3, ptr @dev_attr_spi_controller_transfer_bytes_histo4, ptr @dev_attr_spi_controller_transfer_bytes_histo5, ptr @dev_attr_spi_controller_transfer_bytes_histo6, ptr @dev_attr_spi_controller_transfer_bytes_histo7, ptr @dev_attr_spi_controller_transfer_bytes_histo8, ptr @dev_attr_spi_controller_transfer_bytes_histo9, ptr @dev_attr_spi_controller_transfer_bytes_histo10, ptr @dev_attr_spi_controller_transfer_bytes_histo11, ptr @dev_attr_spi_controller_transfer_bytes_histo12, ptr @dev_attr_spi_controller_transfer_bytes_histo13, ptr @dev_attr_spi_controller_transfer_bytes_histo14, ptr @dev_attr_spi_controller_transfer_bytes_histo15, ptr @dev_attr_spi_controller_transfer_bytes_histo16, ptr @dev_attr_spi_controller_transfers_split_maxsize, ptr null], [44 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_messages = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.98, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_messages_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_transfers = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.100, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_transfers_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_errors = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.101, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_errors_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_timedout = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.102, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_timedout_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_spi_sync = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.103, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_spi_sync_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_spi_sync_immediate = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.104, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_spi_sync_immediate_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_spi_async = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.105, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_spi_async_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_bytes = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.106, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_bytes_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_bytes_rx = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.108, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_bytes_rx_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_bytes_tx = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.109, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_bytes_tx_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_transfer_bytes_histo0 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.110, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_transfer_bytes_histo0_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_transfer_bytes_histo1 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.111, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_transfer_bytes_histo1_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_transfer_bytes_histo2 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.112, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_transfer_bytes_histo2_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_transfer_bytes_histo3 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.113, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_transfer_bytes_histo3_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_transfer_bytes_histo4 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.114, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_transfer_bytes_histo4_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_transfer_bytes_histo5 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.115, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_transfer_bytes_histo5_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_transfer_bytes_histo6 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.116, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_transfer_bytes_histo6_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_transfer_bytes_histo7 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.117, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_transfer_bytes_histo7_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_transfer_bytes_histo8 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.118, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_transfer_bytes_histo8_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_transfer_bytes_histo9 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.119, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_transfer_bytes_histo9_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_transfer_bytes_histo10 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.120, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_transfer_bytes_histo10_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_transfer_bytes_histo11 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.121, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_transfer_bytes_histo11_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_transfer_bytes_histo12 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.122, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_transfer_bytes_histo12_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_transfer_bytes_histo13 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.123, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_transfer_bytes_histo13_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_transfer_bytes_histo14 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.124, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_transfer_bytes_histo14_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_transfer_bytes_histo15 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.125, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_transfer_bytes_histo15_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_transfer_bytes_histo16 = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.126, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_transfer_bytes_histo16_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_spi_controller_transfers_split_maxsize = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.127, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @spi_controller_transfers_split_maxsize_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@spi_slave_attrs = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @dev_attr_slave, ptr null], [24 x i8] zeroinitializer }, align 32
@dev_attr_slave = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.27, i16 420, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @slave_show, ptr @slave_store }, [36 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"%31s\00", [27 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"(null)\00", [25 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"spi_master\00", [21 x i8] zeroinitializer }, align 32
@spi_master_groups = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @spi_controller_statistics_group, ptr null], [24 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"spi_master_idr.xa_lock\00", [41 x i8] zeroinitializer }, align 32
@init_completion.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.171 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"&x->wait\00", [23 x i8] zeroinitializer }, align 32
@.str.172 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"cs\00", [29 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s CS%d\00", [24 x i8] zeroinitializer }, align 32
@spi_get_gpio_descs._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.174, ptr @.str.175, ptr @.str.3, i32 2830, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"Invalid native chip select %d\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"spi_get_gpio_descs\00", [45 x i8] zeroinitializer }, align 32
@spi_get_gpio_descs._entry_ptr = internal global ptr @spi_get_gpio_descs._entry, section ".printk_index", align 4
@spi_get_gpio_descs._entry.176 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.177, ptr @.str.175, ptr @.str.3, i32 2840, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"No unused native chip select available\0A\00", [56 x i8] zeroinitializer }, align 32
@spi_get_gpio_descs._entry_ptr.178 = internal global ptr @spi_get_gpio_descs._entry.176, section ".printk_index", align 4
@.str.179 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"cs-gpios\00", [23 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"#gpio-cells\00", [20 x i8] zeroinitializer }, align 32
@spi_controller_initialize_queue._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.181, ptr @.str.182, ptr @.str.3, i32 2058, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.181 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"problem initializing queue\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"spi_controller_initialize_queue\00", [32 x i8] zeroinitializer }, align 32
@spi_controller_initialize_queue._entry_ptr = internal global ptr @spi_controller_initialize_queue._entry, section ".printk_index", align 4
@spi_controller_initialize_queue._entry.183 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.184, ptr @.str.182, ptr @.str.3, i32 2064, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.184 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"problem starting queue\0A\00", [40 x i8] zeroinitializer }, align 32
@spi_controller_initialize_queue._entry_ptr.185 = internal global ptr @spi_controller_initialize_queue._entry.183, section ".printk_index", align 4
@spi_transfer_one_message._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.186, ptr @.str.187, ptr @.str.3, i32 1456, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"SPI transfer failed: %d\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.187 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"spi_transfer_one_message\00", [39 x i8] zeroinitializer }, align 32
@spi_transfer_one_message._entry_ptr = internal global ptr @spi_transfer_one_message._entry, section ".printk_index", align 4
@spi_transfer_one_message._entry.188 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.189, ptr @.str.187, ptr @.str.3, i32 1469, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Bufferless transfer has length %u\0A\00", [61 x i8] zeroinitializer }, align 32
@spi_transfer_one_message._entry_ptr.190 = internal global ptr @spi_transfer_one_message._entry.188, section ".printk_index", align 4
@trace_spi_transfer_start.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@spi_transfer_wait.__UNIQUE_ID_ddebug361 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.191, ptr @.str.3, ptr @.str.192, i8 1, i8 61, i8 0, i8 64, { { { %struct.atomic_t, { ptr } } } } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } } }, [4 x i8] undef }, section "__dyndbg", align 8
@.str.191 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"spi_transfer_wait\00", [46 x i8] zeroinitializer }, align 32
@.str.192 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"SPI transfer interrupted\0A\00", [38 x i8] zeroinitializer }, align 32
@spi_transfer_wait._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.193, ptr @.str.191, ptr @.str.3, i32 1299, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.193 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"SPI transfer timed out\0A\00", [40 x i8] zeroinitializer }, align 32
@spi_transfer_wait._entry_ptr = internal global ptr @spi_transfer_wait._entry, section ".printk_index", align 4
@trace_spi_transfer_stop.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@_spi_transfer_cs_change_delay.__print_once = internal unnamed_addr global i1 false, section ".data..read_mostly", align 1
@_spi_transfer_cs_change_delay._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.194, ptr @.str.195, ptr @.str.3, i32 1400, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.194 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"Use of unsupported delay unit %i, using default of %luus\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"_spi_transfer_cs_change_delay\00", [34 x i8] zeroinitializer }, align 32
@_spi_transfer_cs_change_delay._entry_ptr = internal global ptr @_spi_transfer_cs_change_delay._entry, section ".printk_index", align 4
@spi_init_queue._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.196, ptr @.str.197, ptr @.str.3, i32 1828, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"failed to create message pump kworker\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.197 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"spi_init_queue\00", [17 x i8] zeroinitializer }, align 32
@spi_init_queue._entry_ptr = internal global ptr @spi_init_queue._entry, section ".printk_index", align 4
@of_register_spi_devices._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.198, ptr @.str.199, ptr @.str.3, i32 2255, ptr @.str.42, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Failed to create SPI device for %pOF\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.199 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"of_register_spi_devices\00", [40 x i8] zeroinitializer }, align 32
@of_register_spi_devices._entry_ptr = internal global ptr @of_register_spi_devices._entry, section ".printk_index", align 4
@of_register_spi_device._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.200, ptr @.str.201, ptr @.str.3, i32 2196, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.200 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"spi_device alloc error for %pOF\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.201 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"of_register_spi_device\00", [41 x i8] zeroinitializer }, align 32
@of_register_spi_device._entry_ptr = internal global ptr @of_register_spi_device._entry, section ".printk_index", align 4
@of_register_spi_device._entry.202 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.203, ptr @.str.201, ptr @.str.3, i32 2205, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.203 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"cannot find modalias for %pOF\0A\00", [33 x i8] zeroinitializer }, align 32
@of_register_spi_device._entry_ptr.204 = internal global ptr @of_register_spi_device._entry.202, section ".printk_index", align 4
@of_register_spi_device._entry.205 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.206, ptr @.str.201, ptr @.str.3, i32 2221, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.206 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"spi_device register error %pOF\0A\00", [32 x i8] zeroinitializer }, align 32
@of_register_spi_device._entry_ptr.207 = internal global ptr @of_register_spi_device._entry.205, section ".printk_index", align 4
@.str.208 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"spi-cpha\00", [23 x i8] zeroinitializer }, align 32
@.str.209 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"spi-cpol\00", [23 x i8] zeroinitializer }, align 32
@.str.210 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"spi-3wire\00", [22 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"spi-lsb-first\00", [18 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"spi-cs-high\00", [20 x i8] zeroinitializer }, align 32
@.str.213 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"spi-tx-bus-width\00", [47 x i8] zeroinitializer }, align 32
@of_spi_parse_dt._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.214, ptr @.str.215, ptr @.str.3, i32 2133, ptr @.str.42, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"spi-tx-bus-width %d not supported\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.215 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"of_spi_parse_dt\00", [16 x i8] zeroinitializer }, align 32
@of_spi_parse_dt._entry_ptr = internal global ptr @of_spi_parse_dt._entry, section ".printk_index", align 4
@.str.216 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"spi-rx-bus-width\00", [47 x i8] zeroinitializer }, align 32
@of_spi_parse_dt._entry.217 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.218, ptr @.str.215, ptr @.str.3, i32 2157, ptr @.str.42, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.218 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"spi-rx-bus-width %d not supported\0A\00", [61 x i8] zeroinitializer }, align 32
@of_spi_parse_dt._entry_ptr.219 = internal global ptr @of_spi_parse_dt._entry.217, section ".printk_index", align 4
@of_spi_parse_dt._entry.220 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.221, ptr @.str.215, ptr @.str.3, i32 2165, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.221 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"%pOF is not called 'slave'\0A\00", [36 x i8] zeroinitializer }, align 32
@of_spi_parse_dt._entry_ptr.222 = internal global ptr @of_spi_parse_dt._entry.220, section ".printk_index", align 4
@.str.223 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"reg\00", [28 x i8] zeroinitializer }, align 32
@of_spi_parse_dt._entry.224 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.225, ptr @.str.215, ptr @.str.3, i32 2175, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.225 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"%pOF has no valid 'reg' property (%d)\0A\00", [57 x i8] zeroinitializer }, align 32
@of_spi_parse_dt._entry_ptr.226 = internal global ptr @of_spi_parse_dt._entry.224, section ".printk_index", align 4
@.str.227 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"spi-max-frequency\00", [46 x i8] zeroinitializer }, align 32
@spi_destroy_queue._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.228, ptr @.str.229, ptr @.str.3, i32 2002, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.228 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"problem destroying queue\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.229 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"spi_destroy_queue\00", [46 x i8] zeroinitializer }, align 32
@spi_destroy_queue._entry_ptr = internal global ptr @spi_destroy_queue._entry, section ".printk_index", align 4
@spi_stop_queue._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.230, ptr @.str.231, ptr @.str.3, i32 1983, ptr @.str.42, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.230 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"could not stop message queue\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.231 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"spi_stop_queue\00", [17 x i8] zeroinitializer }, align 32
@spi_stop_queue._entry_ptr = internal global ptr @spi_stop_queue._entry, section ".printk_index", align 4
@spi_replace_transfers._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.232, ptr @.str.233, ptr @.str.3, i32 3233, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.232 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"requested to remove more spi_transfers than are available\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.233 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"spi_replace_transfers\00", [42 x i8] zeroinitializer }, align 32
@spi_replace_transfers._entry_ptr = internal global ptr @spi_replace_transfers._entry, section ".printk_index", align 4
@trace_spi_set_cs.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@spi_set_thread_rt._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.234, ptr @.str.235, ptr @.str.3, i32 1817, ptr @.str.30, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.234 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"will run message pump with realtime priority\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.235 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"spi_set_thread_rt\00", [46 x i8] zeroinitializer }, align 32
@spi_set_thread_rt._entry_ptr = internal global ptr @spi_set_thread_rt._entry, section ".printk_index", align 4
@trace_spi_setup.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_spi_message_submit.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@spi_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@spi_init.__key.236 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@spi_of_notifier = internal global { %struct.notifier_block, [20 x i8] } { %struct.notifier_block { ptr @of_spi_notify, ptr null, i32 0 }, [20 x i8] zeroinitializer }, align 32
@of_spi_notify._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.237, ptr @.str.238, ptr @.str.3, i32 4163, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.237 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"\013%s: failed to create for '%pOF'\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.238 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"of_spi_notify\00", [18 x i8] zeroinitializer }, align 32
@of_spi_notify._entry_ptr = internal global ptr @of_spi_notify._entry, section ".printk_index", align 4
@__sancov_gen_cov_switch_values = internal global [5 x i64] [i64 3, i64 8, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.239 = internal global [5 x i64] [i64 3, i64 8, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.240 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967294]
@__sancov_gen_cov_switch_values.241 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 1]
@__sancov_gen_cov_switch_values.242 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 1]
@__sancov_gen_cov_switch_values.243 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 1]
@__sancov_gen_cov_switch_values.244 = internal global [5 x i64] [i64 3, i64 3, i64 1, i64 2, i64 4]
@__sancov_gen_cov_switch_values.245 = internal global [4 x i64] [i64 2, i64 6, i64 16, i64 32]
@__sancov_gen_cov_switch_values.246 = internal global [5 x i64] [i64 3, i64 3, i64 1, i64 2, i64 4]
@__sancov_gen_cov_switch_values.247 = internal global [5 x i64] [i64 3, i64 8, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.248 = internal global [5 x i64] [i64 3, i64 8, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.249 = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 1, i64 2, i64 4, i64 8]
@__sancov_gen_cov_switch_values.250 = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 1, i64 2, i64 4, i64 8]
@__sancov_gen_cov_switch_values.251 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@___asan_gen_.252 = private unnamed_addr constant [28 x i8] c"str__spi__trace_system_name\00", align 1
@___asan_gen_.253 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.254 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.253, i32 36, i32 1 }
@___asan_gen_.255 = private unnamed_addr constant [34 x i8] c"trace_event_fields_spi_controller\00", align 1
@___asan_gen_.258 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_spi_controller\00", align 1
@___asan_gen_.261 = private unnamed_addr constant [25 x i8] c"print_fmt_spi_controller\00", align 1
@___asan_gen_.264 = private unnamed_addr constant [26 x i8] c"event_spi_controller_idle\00", align 1
@___asan_gen_.266 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.919, i32 29, i32 1 }
@___asan_gen_.267 = private unnamed_addr constant [26 x i8] c"event_spi_controller_busy\00", align 1
@___asan_gen_.269 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.919, i32 37, i32 1 }
@___asan_gen_.270 = private unnamed_addr constant [29 x i8] c"trace_event_fields_spi_setup\00", align 1
@___asan_gen_.273 = private unnamed_addr constant [33 x i8] c"trace_event_type_funcs_spi_setup\00", align 1
@___asan_gen_.276 = private unnamed_addr constant [20 x i8] c"print_fmt_spi_setup\00", align 1
@___asan_gen_.279 = private unnamed_addr constant [16 x i8] c"event_spi_setup\00", align 1
@___asan_gen_.282 = private unnamed_addr constant [30 x i8] c"trace_event_fields_spi_set_cs\00", align 1
@___asan_gen_.285 = private unnamed_addr constant [34 x i8] c"trace_event_type_funcs_spi_set_cs\00", align 1
@___asan_gen_.288 = private unnamed_addr constant [21 x i8] c"print_fmt_spi_set_cs\00", align 1
@___asan_gen_.291 = private unnamed_addr constant [17 x i8] c"event_spi_set_cs\00", align 1
@___asan_gen_.294 = private unnamed_addr constant [31 x i8] c"trace_event_fields_spi_message\00", align 1
@___asan_gen_.297 = private unnamed_addr constant [35 x i8] c"trace_event_type_funcs_spi_message\00", align 1
@___asan_gen_.300 = private unnamed_addr constant [22 x i8] c"print_fmt_spi_message\00", align 1
@___asan_gen_.303 = private unnamed_addr constant [25 x i8] c"event_spi_message_submit\00", align 1
@___asan_gen_.305 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.919, i32 125, i32 1 }
@___asan_gen_.306 = private unnamed_addr constant [24 x i8] c"event_spi_message_start\00", align 1
@___asan_gen_.308 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.919, i32 133, i32 1 }
@___asan_gen_.309 = private unnamed_addr constant [36 x i8] c"trace_event_fields_spi_message_done\00", align 1
@___asan_gen_.312 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_spi_message_done\00", align 1
@___asan_gen_.315 = private unnamed_addr constant [27 x i8] c"print_fmt_spi_message_done\00", align 1
@___asan_gen_.318 = private unnamed_addr constant [23 x i8] c"event_spi_message_done\00", align 1
@___asan_gen_.321 = private unnamed_addr constant [32 x i8] c"trace_event_fields_spi_transfer\00", align 1
@___asan_gen_.324 = private unnamed_addr constant [36 x i8] c"trace_event_type_funcs_spi_transfer\00", align 1
@___asan_gen_.327 = private unnamed_addr constant [23 x i8] c"print_fmt_spi_transfer\00", align 1
@___asan_gen_.330 = private unnamed_addr constant [25 x i8] c"event_spi_transfer_start\00", align 1
@___asan_gen_.332 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.919, i32 220, i32 1 }
@___asan_gen_.333 = private unnamed_addr constant [24 x i8] c"event_spi_transfer_stop\00", align 1
@___asan_gen_.335 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.919, i32 228, i32 1 }
@___asan_gen_.338 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 431, i32 11 }
@___asan_gen_.339 = private unnamed_addr constant [15 x i8] c"spi_dev_groups\00", align 1
@___asan_gen_.341 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 241, i32 38 }
@___asan_gen_.342 = private unnamed_addr constant [13 x i8] c"spi_bus_type\00", align 1
@___asan_gen_.344 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 430, i32 17 }
@___asan_gen_.353 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 485, i32 4 }
@___asan_gen_.368 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 742, i32 4 }
@___asan_gen_.369 = private unnamed_addr constant [11 x i8] c"board_lock\00", align 1
@___asan_gen_.372 = private unnamed_addr constant [11 x i8] c"board_list\00", align 1
@___asan_gen_.374 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 508, i32 8 }
@___asan_gen_.375 = private unnamed_addr constant [20 x i8] c"spi_controller_list\00", align 1
@___asan_gen_.377 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 509, i32 8 }
@___asan_gen_.386 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 1915, i32 4 }
@___asan_gen_.389 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2289, i32 31 }
@___asan_gen_.398 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2301, i32 3 }
@___asan_gen_.401 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2668, i32 2 }
@___asan_gen_.404 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2669, i32 2 }
@___asan_gen_.407 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2670, i32 2 }
@___asan_gen_.410 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2671, i32 2 }
@___asan_gen_.413 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2672, i32 2 }
@___asan_gen_.414 = private unnamed_addr constant [16 x i8] c"spi_slave_class\00", align 1
@___asan_gen_.416 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2618, i32 21 }
@___asan_gen_.417 = private unnamed_addr constant [17 x i8] c"spi_master_class\00", align 1
@___asan_gen_.419 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2521, i32 21 }
@___asan_gen_.422 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2714, i32 8 }
@___asan_gen_.423 = private unnamed_addr constant [15 x i8] c"spi_master_idr\00", align 1
@___asan_gen_.428 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2914, i32 7 }
@___asan_gen_.431 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2954, i32 27 }
@___asan_gen_.443 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2986, i32 2 }
@___asan_gen_.452 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2996, i32 3 }
@___asan_gen_.458 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 3005, i32 2 }
@___asan_gen_.467 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 3092, i32 4 }
@___asan_gen_.476 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 3127, i32 3 }
@___asan_gen_.485 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 3142, i32 3 }
@___asan_gen_.494 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 3443, i32 3 }
@___asan_gen_.503 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 3470, i32 3 }
@___asan_gen_.509 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 3477, i32 3 }
@___asan_gen_.515 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 3501, i32 4 }
@___asan_gen_.521 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 3512, i32 4 }
@___asan_gen_.539 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 3541, i32 2 }
@___asan_gen_.540 = private unnamed_addr constant [5 x i8] c"lock\00", align 1
@___asan_gen_.548 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 4063, i32 9 }
@___asan_gen_.549 = private unnamed_addr constant [4 x i8] c"buf\00", align 1
@___asan_gen_.551 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 4037, i32 12 }
@___asan_gen_.560 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.919, i32 11, i32 1 }
@___asan_gen_.584 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.919, i32 45, i32 1 }
@___asan_gen_.602 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.919, i32 78, i32 1 }
@___asan_gen_.611 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.919, i32 102, i32 1 }
@___asan_gen_.644 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.919, i32 179, i32 1 }
@___asan_gen_.645 = private unnamed_addr constant [14 x i8] c"spi_dev_group\00", align 1
@___asan_gen_.647 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 200, i32 37 }
@___asan_gen_.648 = private unnamed_addr constant [28 x i8] c"spi_device_statistics_group\00", align 1
@___asan_gen_.650 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 236, i32 37 }
@___asan_gen_.651 = private unnamed_addr constant [14 x i8] c"spi_dev_attrs\00", align 1
@___asan_gen_.653 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 194, i32 26 }
@___asan_gen_.654 = private unnamed_addr constant [18 x i8] c"dev_attr_modalias\00", align 1
@___asan_gen_.657 = private unnamed_addr constant [25 x i8] c"dev_attr_driver_override\00", align 1
@___asan_gen_.662 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 68, i32 8 }
@___asan_gen_.665 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 66, i32 22 }
@___asan_gen_.668 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 66, i32 32 }
@___asan_gen_.671 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 113, i32 8 }
@___asan_gen_.674 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 109, i32 33 }
@___asan_gen_.677 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 237, i32 11 }
@___asan_gen_.678 = private unnamed_addr constant [28 x i8] c"spi_device_statistics_attrs\00", align 1
@___asan_gen_.680 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 204, i32 26 }
@___asan_gen_.681 = private unnamed_addr constant [29 x i8] c"dev_attr_spi_device_messages\00", align 1
@___asan_gen_.684 = private unnamed_addr constant [30 x i8] c"dev_attr_spi_device_transfers\00", align 1
@___asan_gen_.687 = private unnamed_addr constant [27 x i8] c"dev_attr_spi_device_errors\00", align 1
@___asan_gen_.690 = private unnamed_addr constant [29 x i8] c"dev_attr_spi_device_timedout\00", align 1
@___asan_gen_.693 = private unnamed_addr constant [29 x i8] c"dev_attr_spi_device_spi_sync\00", align 1
@___asan_gen_.696 = private unnamed_addr constant [39 x i8] c"dev_attr_spi_device_spi_sync_immediate\00", align 1
@___asan_gen_.699 = private unnamed_addr constant [30 x i8] c"dev_attr_spi_device_spi_async\00", align 1
@___asan_gen_.702 = private unnamed_addr constant [26 x i8] c"dev_attr_spi_device_bytes\00", align 1
@___asan_gen_.705 = private unnamed_addr constant [29 x i8] c"dev_attr_spi_device_bytes_rx\00", align 1
@___asan_gen_.708 = private unnamed_addr constant [29 x i8] c"dev_attr_spi_device_bytes_tx\00", align 1
@___asan_gen_.711 = private unnamed_addr constant [42 x i8] c"dev_attr_spi_device_transfer_bytes_histo0\00", align 1
@___asan_gen_.714 = private unnamed_addr constant [42 x i8] c"dev_attr_spi_device_transfer_bytes_histo1\00", align 1
@___asan_gen_.717 = private unnamed_addr constant [42 x i8] c"dev_attr_spi_device_transfer_bytes_histo2\00", align 1
@___asan_gen_.720 = private unnamed_addr constant [42 x i8] c"dev_attr_spi_device_transfer_bytes_histo3\00", align 1
@___asan_gen_.723 = private unnamed_addr constant [42 x i8] c"dev_attr_spi_device_transfer_bytes_histo4\00", align 1
@___asan_gen_.726 = private unnamed_addr constant [42 x i8] c"dev_attr_spi_device_transfer_bytes_histo5\00", align 1
@___asan_gen_.729 = private unnamed_addr constant [42 x i8] c"dev_attr_spi_device_transfer_bytes_histo6\00", align 1
@___asan_gen_.732 = private unnamed_addr constant [42 x i8] c"dev_attr_spi_device_transfer_bytes_histo7\00", align 1
@___asan_gen_.735 = private unnamed_addr constant [42 x i8] c"dev_attr_spi_device_transfer_bytes_histo8\00", align 1
@___asan_gen_.738 = private unnamed_addr constant [42 x i8] c"dev_attr_spi_device_transfer_bytes_histo9\00", align 1
@___asan_gen_.741 = private unnamed_addr constant [43 x i8] c"dev_attr_spi_device_transfer_bytes_histo10\00", align 1
@___asan_gen_.744 = private unnamed_addr constant [43 x i8] c"dev_attr_spi_device_transfer_bytes_histo11\00", align 1
@___asan_gen_.747 = private unnamed_addr constant [43 x i8] c"dev_attr_spi_device_transfer_bytes_histo12\00", align 1
@___asan_gen_.750 = private unnamed_addr constant [43 x i8] c"dev_attr_spi_device_transfer_bytes_histo13\00", align 1
@___asan_gen_.753 = private unnamed_addr constant [43 x i8] c"dev_attr_spi_device_transfer_bytes_histo14\00", align 1
@___asan_gen_.756 = private unnamed_addr constant [43 x i8] c"dev_attr_spi_device_transfer_bytes_histo15\00", align 1
@___asan_gen_.759 = private unnamed_addr constant [43 x i8] c"dev_attr_spi_device_transfer_bytes_histo16\00", align 1
@___asan_gen_.762 = private unnamed_addr constant [44 x i8] c"dev_attr_spi_device_transfers_split_maxsize\00", align 1
@___asan_gen_.857 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 369, i32 29 }
@___asan_gen_.866 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 412, i32 4 }
@___asan_gen_.872 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 555, i32 2 }
@___asan_gen_.881 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 663, i32 3 }
@___asan_gen_.884 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 570, i32 26 }
@___asan_gen_.890 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 604, i32 3 }
@___asan_gen_.893 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 628, i32 3 }
@___asan_gen_.896 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 636, i32 3 }
@___asan_gen_.899 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 640, i32 3 }
@___asan_gen_.905 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 516, i32 8 }
@___asan_gen_.914 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 796, i32 3 }
@___asan_gen_.919 = private unnamed_addr constant [30 x i8] c"../include/trace/events/spi.h\00", align 1
@___asan_gen_.920 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.919, i32 141, i32 1 }
@___asan_gen_.922 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.923 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.922, i32 108, i32 2 }
@___asan_gen_.929 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 1604, i32 4 }
@___asan_gen_.932 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 1645, i32 4 }
@___asan_gen_.935 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 1665, i32 4 }
@___asan_gen_.938 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 1690, i32 3 }
@___asan_gen_.944 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 684, i32 3 }
@___asan_gen_.947 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2619, i32 11 }
@___asan_gen_.948 = private unnamed_addr constant [17 x i8] c"spi_slave_groups\00", align 1
@___asan_gen_.950 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2612, i32 38 }
@___asan_gen_.951 = private unnamed_addr constant [32 x i8] c"spi_controller_statistics_group\00", align 1
@___asan_gen_.953 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 279, i32 37 }
@___asan_gen_.954 = private unnamed_addr constant [16 x i8] c"spi_slave_group\00", align 1
@___asan_gen_.956 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2608, i32 37 }
@___asan_gen_.957 = private unnamed_addr constant [32 x i8] c"spi_controller_statistics_attrs\00", align 1
@___asan_gen_.959 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 247, i32 26 }
@___asan_gen_.960 = private unnamed_addr constant [33 x i8] c"dev_attr_spi_controller_messages\00", align 1
@___asan_gen_.962 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 157, i32 1 }
@___asan_gen_.963 = private unnamed_addr constant [34 x i8] c"dev_attr_spi_controller_transfers\00", align 1
@___asan_gen_.965 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 158, i32 1 }
@___asan_gen_.966 = private unnamed_addr constant [31 x i8] c"dev_attr_spi_controller_errors\00", align 1
@___asan_gen_.968 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 159, i32 1 }
@___asan_gen_.969 = private unnamed_addr constant [33 x i8] c"dev_attr_spi_controller_timedout\00", align 1
@___asan_gen_.971 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 160, i32 1 }
@___asan_gen_.972 = private unnamed_addr constant [33 x i8] c"dev_attr_spi_controller_spi_sync\00", align 1
@___asan_gen_.974 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 162, i32 1 }
@___asan_gen_.975 = private unnamed_addr constant [43 x i8] c"dev_attr_spi_controller_spi_sync_immediate\00", align 1
@___asan_gen_.977 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 163, i32 1 }
@___asan_gen_.978 = private unnamed_addr constant [34 x i8] c"dev_attr_spi_controller_spi_async\00", align 1
@___asan_gen_.980 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 164, i32 1 }
@___asan_gen_.981 = private unnamed_addr constant [30 x i8] c"dev_attr_spi_controller_bytes\00", align 1
@___asan_gen_.983 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 166, i32 1 }
@___asan_gen_.984 = private unnamed_addr constant [33 x i8] c"dev_attr_spi_controller_bytes_rx\00", align 1
@___asan_gen_.986 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 167, i32 1 }
@___asan_gen_.987 = private unnamed_addr constant [33 x i8] c"dev_attr_spi_controller_bytes_tx\00", align 1
@___asan_gen_.989 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 168, i32 1 }
@___asan_gen_.990 = private unnamed_addr constant [46 x i8] c"dev_attr_spi_controller_transfer_bytes_histo0\00", align 1
@___asan_gen_.992 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 174, i32 1 }
@___asan_gen_.993 = private unnamed_addr constant [46 x i8] c"dev_attr_spi_controller_transfer_bytes_histo1\00", align 1
@___asan_gen_.995 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 175, i32 1 }
@___asan_gen_.996 = private unnamed_addr constant [46 x i8] c"dev_attr_spi_controller_transfer_bytes_histo2\00", align 1
@___asan_gen_.998 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 176, i32 1 }
@___asan_gen_.999 = private unnamed_addr constant [46 x i8] c"dev_attr_spi_controller_transfer_bytes_histo3\00", align 1
@___asan_gen_.1001 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 177, i32 1 }
@___asan_gen_.1002 = private unnamed_addr constant [46 x i8] c"dev_attr_spi_controller_transfer_bytes_histo4\00", align 1
@___asan_gen_.1004 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 178, i32 1 }
@___asan_gen_.1005 = private unnamed_addr constant [46 x i8] c"dev_attr_spi_controller_transfer_bytes_histo5\00", align 1
@___asan_gen_.1007 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 179, i32 1 }
@___asan_gen_.1008 = private unnamed_addr constant [46 x i8] c"dev_attr_spi_controller_transfer_bytes_histo6\00", align 1
@___asan_gen_.1010 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 180, i32 1 }
@___asan_gen_.1011 = private unnamed_addr constant [46 x i8] c"dev_attr_spi_controller_transfer_bytes_histo7\00", align 1
@___asan_gen_.1013 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 181, i32 1 }
@___asan_gen_.1014 = private unnamed_addr constant [46 x i8] c"dev_attr_spi_controller_transfer_bytes_histo8\00", align 1
@___asan_gen_.1016 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 182, i32 1 }
@___asan_gen_.1017 = private unnamed_addr constant [46 x i8] c"dev_attr_spi_controller_transfer_bytes_histo9\00", align 1
@___asan_gen_.1019 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 183, i32 1 }
@___asan_gen_.1020 = private unnamed_addr constant [47 x i8] c"dev_attr_spi_controller_transfer_bytes_histo10\00", align 1
@___asan_gen_.1022 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 184, i32 1 }
@___asan_gen_.1023 = private unnamed_addr constant [47 x i8] c"dev_attr_spi_controller_transfer_bytes_histo11\00", align 1
@___asan_gen_.1025 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 185, i32 1 }
@___asan_gen_.1026 = private unnamed_addr constant [47 x i8] c"dev_attr_spi_controller_transfer_bytes_histo12\00", align 1
@___asan_gen_.1028 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 186, i32 1 }
@___asan_gen_.1029 = private unnamed_addr constant [47 x i8] c"dev_attr_spi_controller_transfer_bytes_histo13\00", align 1
@___asan_gen_.1031 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 187, i32 1 }
@___asan_gen_.1032 = private unnamed_addr constant [47 x i8] c"dev_attr_spi_controller_transfer_bytes_histo14\00", align 1
@___asan_gen_.1034 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 188, i32 1 }
@___asan_gen_.1035 = private unnamed_addr constant [47 x i8] c"dev_attr_spi_controller_transfer_bytes_histo15\00", align 1
@___asan_gen_.1037 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 189, i32 1 }
@___asan_gen_.1038 = private unnamed_addr constant [47 x i8] c"dev_attr_spi_controller_transfer_bytes_histo16\00", align 1
@___asan_gen_.1040 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 190, i32 1 }
@___asan_gen_.1041 = private unnamed_addr constant [48 x i8] c"dev_attr_spi_controller_transfers_split_maxsize\00", align 1
@___asan_gen_.1043 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 192, i32 1 }
@___asan_gen_.1044 = private unnamed_addr constant [16 x i8] c"spi_slave_attrs\00", align 1
@___asan_gen_.1046 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2603, i32 26 }
@___asan_gen_.1047 = private unnamed_addr constant [15 x i8] c"dev_attr_slave\00", align 1
@___asan_gen_.1049 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2601, i32 8 }
@___asan_gen_.1052 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2572, i32 19 }
@___asan_gen_.1055 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2583, i32 19 }
@___asan_gen_.1058 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2522, i32 11 }
@___asan_gen_.1059 = private unnamed_addr constant [18 x i8] c"spi_master_groups\00", align 1
@___asan_gen_.1061 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 284, i32 38 }
@___asan_gen_.1064 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 45, i32 8 }
@___asan_gen_.1069 = private unnamed_addr constant [30 x i8] c"../include/linux/completion.h\00", align 1
@___asan_gen_.1070 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1069, i32 87, i32 2 }
@___asan_gen_.1073 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2784, i32 24 }
@___asan_gen_.1076 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2820, i32 47 }
@___asan_gen_.1085 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2830, i32 4 }
@___asan_gen_.1091 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2840, i32 3 }
@___asan_gen_.1094 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2741, i32 31 }
@___asan_gen_.1096 = private unnamed_addr constant [27 x i8] c"../include/linux/of_gpio.h\00", align 1
@___asan_gen_.1097 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1096, i32 104, i32 50 }
@___asan_gen_.1106 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2058, i32 3 }
@___asan_gen_.1112 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2064, i32 3 }
@___asan_gen_.1121 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 1455, i32 5 }
@___asan_gen_.1127 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 1467, i32 5 }
@___asan_gen_.1133 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 1268, i32 4 }
@___asan_gen_.1139 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 1298, i32 4 }
@___asan_gen_.1148 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 1398, i32 3 }
@___asan_gen_.1157 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 1828, i32 3 }
@___asan_gen_.1166 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2254, i32 4 }
@___asan_gen_.1175 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2196, i32 3 }
@___asan_gen_.1181 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2205, i32 3 }
@___asan_gen_.1187 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2221, i32 3 }
@___asan_gen_.1190 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2102, i32 32 }
@___asan_gen_.1193 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2104, i32 32 }
@___asan_gen_.1196 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2106, i32 32 }
@___asan_gen_.1199 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2108, i32 32 }
@___asan_gen_.1202 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2110, i32 32 }
@___asan_gen_.1205 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2114, i32 32 }
@___asan_gen_.1214 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2131, i32 4 }
@___asan_gen_.1217 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2138, i32 32 }
@___asan_gen_.1223 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2155, i32 4 }
@___asan_gen_.1229 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2164, i32 4 }
@___asan_gen_.1232 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2172, i32 32 }
@___asan_gen_.1238 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2174, i32 3 }
@___asan_gen_.1241 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2181, i32 32 }
@___asan_gen_.1250 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 2002, i32 3 }
@___asan_gen_.1259 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 1983, i32 3 }
@___asan_gen_.1268 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 3232, i32 4 }
@___asan_gen_.1277 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 1816, i32 2 }
@___asan_gen_.1280 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 4279, i32 11 }
@___asan_gen_.1281 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.1283 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 4284, i32 12 }
@___asan_gen_.1284 = private unnamed_addr constant [16 x i8] c"spi_of_notifier\00", align 1
@___asan_gen_.1286 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 4190, i32 30 }
@___asan_gen_.1287 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.1293 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.1294 = private constant [21 x i8] c"../drivers/spi/spi.c\00", align 1
@___asan_gen_.1295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1294, i32 4162, i32 4 }
@llvm.compiler.used = appending global [482 x ptr] [ptr @__bpf_trace_tp_map_spi_controller_busy, ptr @__bpf_trace_tp_map_spi_controller_idle, ptr @__bpf_trace_tp_map_spi_message_done, ptr @__bpf_trace_tp_map_spi_message_start, ptr @__bpf_trace_tp_map_spi_message_submit, ptr @__bpf_trace_tp_map_spi_set_cs, ptr @__bpf_trace_tp_map_spi_setup, ptr @__bpf_trace_tp_map_spi_transfer_start, ptr @__bpf_trace_tp_map_spi_transfer_stop, ptr @__event_spi_controller_busy, ptr @__event_spi_controller_idle, ptr @__event_spi_message_done, ptr @__event_spi_message_start, ptr @__event_spi_message_submit, ptr @__event_spi_set_cs, ptr @__event_spi_setup, ptr @__event_spi_transfer_start, ptr @__event_spi_transfer_stop, ptr @__initcall__kmod_spi__381_4315_spi_init2, ptr @__ksymtab___SCK__tp_func_spi_transfer_start, ptr @__ksymtab___SCK__tp_func_spi_transfer_stop, ptr @__ksymtab___devm_spi_alloc_controller, ptr @__ksymtab___spi_alloc_controller, ptr @__ksymtab___spi_register_driver, ptr @__ksymtab___traceiter_spi_transfer_start, ptr @__ksymtab___traceiter_spi_transfer_stop, ptr @__ksymtab___tracepoint_spi_transfer_start, ptr @__ksymtab___tracepoint_spi_transfer_stop, ptr @__ksymtab_devm_spi_register_controller, ptr @__ksymtab_spi_async, ptr @__ksymtab_spi_bus_lock, ptr @__ksymtab_spi_bus_type, ptr @__ksymtab_spi_bus_unlock, ptr @__ksymtab_spi_controller_resume, ptr @__ksymtab_spi_controller_suspend, ptr @__ksymtab_spi_delay_exec, ptr @__ksymtab_spi_delay_to_ns, ptr @__ksymtab_spi_finalize_current_message, ptr @__ksymtab_spi_finalize_current_transfer, ptr @__ksymtab_spi_get_device_id, ptr @__ksymtab_spi_get_next_queued_message, ptr @__ksymtab_spi_new_ancillary_device, ptr @__ksymtab_spi_new_device, ptr @__ksymtab_spi_register_controller, ptr @__ksymtab_spi_setup, ptr @__ksymtab_spi_slave_abort, ptr @__ksymtab_spi_split_transfers_maxsize, ptr @__ksymtab_spi_sync, ptr @__ksymtab_spi_sync_locked, ptr @__ksymtab_spi_take_timestamp_post, ptr @__ksymtab_spi_take_timestamp_pre, ptr @__ksymtab_spi_unregister_controller, ptr @__ksymtab_spi_unregister_device, ptr @__ksymtab_spi_write_then_read, ptr @__spi_add_device._entry, ptr @__spi_add_device._entry.138, ptr @__spi_add_device._entry.141, ptr @__spi_add_device._entry_ptr, ptr @__spi_add_device._entry_ptr.140, ptr @__spi_add_device._entry_ptr.143, ptr @__spi_pump_messages._entry, ptr @__spi_pump_messages._entry.154, ptr @__spi_pump_messages._entry.156, ptr @__spi_pump_messages._entry.159, ptr @__spi_pump_messages._entry.162, ptr @__spi_pump_messages._entry_ptr, ptr @__spi_pump_messages._entry_ptr.155, ptr @__spi_pump_messages._entry_ptr.158, ptr @__spi_pump_messages._entry_ptr.161, ptr @__spi_pump_messages._entry_ptr.164, ptr @__spi_register_driver._entry, ptr @__spi_register_driver._entry_ptr, ptr @__tracepoint_ptr_spi_controller_busy, ptr @__tracepoint_ptr_spi_controller_idle, ptr @__tracepoint_ptr_spi_message_done, ptr @__tracepoint_ptr_spi_message_start, ptr @__tracepoint_ptr_spi_message_submit, ptr @__tracepoint_ptr_spi_set_cs, ptr @__tracepoint_ptr_spi_setup, ptr @__tracepoint_ptr_spi_transfer_start, ptr @__tracepoint_ptr_spi_transfer_stop, ptr @__tracepoint_spi_controller_busy, ptr @__tracepoint_spi_controller_idle, ptr @__tracepoint_spi_message_done, ptr @__tracepoint_spi_message_start, ptr @__tracepoint_spi_message_submit, ptr @__tracepoint_spi_set_cs, ptr @__tracepoint_spi_setup, ptr @__tracepoint_spi_transfer_start, ptr @__tracepoint_spi_transfer_stop, ptr @_spi_transfer_cs_change_delay._entry, ptr @_spi_transfer_cs_change_delay._entry_ptr, ptr @event_class_spi_controller, ptr @event_class_spi_message, ptr @event_class_spi_message_done, ptr @event_class_spi_set_cs, ptr @event_class_spi_setup, ptr @event_class_spi_transfer, ptr @event_spi_controller_busy, ptr @event_spi_controller_idle, ptr @event_spi_message_done, ptr @event_spi_message_start, ptr @event_spi_message_submit, ptr @event_spi_set_cs, ptr @event_spi_setup, ptr @event_spi_transfer_start, ptr @event_spi_transfer_stop, ptr @of_register_spi_device._entry, ptr @of_register_spi_device._entry.202, ptr @of_register_spi_device._entry.205, ptr @of_register_spi_device._entry_ptr, ptr @of_register_spi_device._entry_ptr.204, ptr @of_register_spi_device._entry_ptr.207, ptr @of_register_spi_devices._entry, ptr @of_register_spi_devices._entry_ptr, ptr @of_spi_notify._entry, ptr @of_spi_notify._entry_ptr, ptr @of_spi_parse_dt._entry, ptr @of_spi_parse_dt._entry.217, ptr @of_spi_parse_dt._entry.220, ptr @of_spi_parse_dt._entry.224, ptr @of_spi_parse_dt._entry_ptr, ptr @of_spi_parse_dt._entry_ptr.219, ptr @of_spi_parse_dt._entry_ptr.222, ptr @of_spi_parse_dt._entry_ptr.226, ptr @spi_add_device._entry, ptr @spi_add_device._entry_ptr, ptr @spi_add_device_locked._entry, ptr @spi_add_device_locked._entry_ptr, ptr @spi_controller_initialize_queue._entry, ptr @spi_controller_initialize_queue._entry.183, ptr @spi_controller_initialize_queue._entry_ptr, ptr @spi_controller_initialize_queue._entry_ptr.185, ptr @spi_controller_resume._entry, ptr @spi_controller_resume._entry_ptr, ptr @spi_controller_suspend._entry, ptr @spi_controller_suspend._entry_ptr, ptr @spi_destroy_queue._entry, ptr @spi_destroy_queue._entry_ptr, ptr @spi_finalize_current_message._entry, ptr @spi_finalize_current_message._entry_ptr, ptr @spi_get_gpio_descs._entry, ptr @spi_get_gpio_descs._entry.176, ptr @spi_get_gpio_descs._entry_ptr, ptr @spi_get_gpio_descs._entry_ptr.178, ptr @spi_init_queue._entry, ptr @spi_init_queue._entry_ptr, ptr @spi_match_controller_to_boardinfo._entry, ptr @spi_match_controller_to_boardinfo._entry_ptr, ptr @spi_new_ancillary_device._entry, ptr @spi_new_ancillary_device._entry_ptr, ptr @spi_new_device._entry, ptr @spi_new_device._entry_ptr, ptr @spi_register_controller._entry, ptr @spi_register_controller._entry_ptr, ptr @spi_remove._entry, ptr @spi_remove._entry_ptr, ptr @spi_replace_transfers._entry, ptr @spi_replace_transfers._entry_ptr, ptr @spi_set_thread_rt._entry, ptr @spi_set_thread_rt._entry_ptr, ptr @spi_setup._entry, ptr @spi_setup._entry.40, ptr @spi_setup._entry.44, ptr @spi_setup._entry.47, ptr @spi_setup._entry.50, ptr @spi_setup._entry_ptr, ptr @spi_setup._entry_ptr.43, ptr @spi_setup._entry_ptr.46, ptr @spi_setup._entry_ptr.49, ptr @spi_setup._entry_ptr.52, ptr @spi_stop_queue._entry, ptr @spi_stop_queue._entry_ptr, ptr @spi_transfer_one_message._entry, ptr @spi_transfer_one_message._entry.188, ptr @spi_transfer_one_message._entry_ptr, ptr @spi_transfer_one_message._entry_ptr.190, ptr @spi_transfer_wait._entry, ptr @spi_transfer_wait._entry_ptr, ptr @spi_unregister_controller._entry, ptr @spi_unregister_controller._entry_ptr, ptr @str__spi__trace_system_name, ptr @trace_event_fields_spi_controller, ptr @trace_event_type_funcs_spi_controller, ptr @print_fmt_spi_controller, ptr @trace_event_fields_spi_setup, ptr @trace_event_type_funcs_spi_setup, ptr @print_fmt_spi_setup, ptr @trace_event_fields_spi_set_cs, ptr @trace_event_type_funcs_spi_set_cs, ptr @print_fmt_spi_set_cs, ptr @trace_event_fields_spi_message, ptr @trace_event_type_funcs_spi_message, ptr @print_fmt_spi_message, ptr @trace_event_fields_spi_message_done, ptr @trace_event_type_funcs_spi_message_done, ptr @print_fmt_spi_message_done, ptr @trace_event_fields_spi_transfer, ptr @trace_event_type_funcs_spi_transfer, ptr @print_fmt_spi_transfer, ptr @.str, ptr @spi_dev_groups, ptr @spi_bus_type, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @board_lock, ptr @board_list, ptr @spi_controller_list, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.15, ptr @.str.17, ptr @.str.19, ptr @.str.21, ptr @spi_slave_class, ptr @spi_master_class, ptr @.str.22, ptr @spi_master_idr, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @spi_register_controller.__key, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.41, ptr @.str.42, ptr @.str.45, ptr @.str.48, ptr @.str.51, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @spi_write_then_read.lock, ptr @.str.59, ptr @.str.60, ptr @buf, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @spi_dev_group, ptr @spi_device_statistics_group, ptr @spi_dev_attrs, ptr @dev_attr_modalias, ptr @dev_attr_driver_override, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @spi_device_statistics_attrs, ptr @dev_attr_spi_device_messages, ptr @dev_attr_spi_device_transfers, ptr @dev_attr_spi_device_errors, ptr @dev_attr_spi_device_timedout, ptr @dev_attr_spi_device_spi_sync, ptr @dev_attr_spi_device_spi_sync_immediate, ptr @dev_attr_spi_device_spi_async, ptr @dev_attr_spi_device_bytes, ptr @dev_attr_spi_device_bytes_rx, ptr @dev_attr_spi_device_bytes_tx, ptr @dev_attr_spi_device_transfer_bytes_histo0, ptr @dev_attr_spi_device_transfer_bytes_histo1, ptr @dev_attr_spi_device_transfer_bytes_histo2, ptr @dev_attr_spi_device_transfer_bytes_histo3, ptr @dev_attr_spi_device_transfer_bytes_histo4, ptr @dev_attr_spi_device_transfer_bytes_histo5, ptr @dev_attr_spi_device_transfer_bytes_histo6, ptr @dev_attr_spi_device_transfer_bytes_histo7, ptr @dev_attr_spi_device_transfer_bytes_histo8, ptr @dev_attr_spi_device_transfer_bytes_histo9, ptr @dev_attr_spi_device_transfer_bytes_histo10, ptr @dev_attr_spi_device_transfer_bytes_histo11, ptr @dev_attr_spi_device_transfer_bytes_histo12, ptr @dev_attr_spi_device_transfer_bytes_histo13, ptr @dev_attr_spi_device_transfer_bytes_histo14, ptr @dev_attr_spi_device_transfer_bytes_histo15, ptr @dev_attr_spi_device_transfer_bytes_histo16, ptr @dev_attr_spi_device_transfers_split_maxsize, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @spi_alloc_device.__key, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.139, ptr @.str.142, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.157, ptr @.str.160, ptr @.str.163, ptr @.str.165, ptr @.str.166, ptr @spi_slave_groups, ptr @spi_controller_statistics_group, ptr @spi_slave_group, ptr @spi_controller_statistics_attrs, ptr @dev_attr_spi_controller_messages, ptr @dev_attr_spi_controller_transfers, ptr @dev_attr_spi_controller_errors, ptr @dev_attr_spi_controller_timedout, ptr @dev_attr_spi_controller_spi_sync, ptr @dev_attr_spi_controller_spi_sync_immediate, ptr @dev_attr_spi_controller_spi_async, ptr @dev_attr_spi_controller_bytes, ptr @dev_attr_spi_controller_bytes_rx, ptr @dev_attr_spi_controller_bytes_tx, ptr @dev_attr_spi_controller_transfer_bytes_histo0, ptr @dev_attr_spi_controller_transfer_bytes_histo1, ptr @dev_attr_spi_controller_transfer_bytes_histo2, ptr @dev_attr_spi_controller_transfer_bytes_histo3, ptr @dev_attr_spi_controller_transfer_bytes_histo4, ptr @dev_attr_spi_controller_transfer_bytes_histo5, ptr @dev_attr_spi_controller_transfer_bytes_histo6, ptr @dev_attr_spi_controller_transfer_bytes_histo7, ptr @dev_attr_spi_controller_transfer_bytes_histo8, ptr @dev_attr_spi_controller_transfer_bytes_histo9, ptr @dev_attr_spi_controller_transfer_bytes_histo10, ptr @dev_attr_spi_controller_transfer_bytes_histo11, ptr @dev_attr_spi_controller_transfer_bytes_histo12, ptr @dev_attr_spi_controller_transfer_bytes_histo13, ptr @dev_attr_spi_controller_transfer_bytes_histo14, ptr @dev_attr_spi_controller_transfer_bytes_histo15, ptr @dev_attr_spi_controller_transfer_bytes_histo16, ptr @dev_attr_spi_controller_transfers_split_maxsize, ptr @spi_slave_attrs, ptr @dev_attr_slave, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @spi_master_groups, ptr @.str.170, ptr @init_completion.__key, ptr @.str.171, ptr @.str.172, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.177, ptr @.str.179, ptr @.str.180, ptr @.str.181, ptr @.str.182, ptr @.str.184, ptr @.str.186, ptr @.str.187, ptr @.str.189, ptr @.str.191, ptr @.str.192, ptr @.str.193, ptr @.str.194, ptr @.str.195, ptr @.str.196, ptr @.str.197, ptr @.str.198, ptr @.str.199, ptr @.str.200, ptr @.str.201, ptr @.str.203, ptr @.str.206, ptr @.str.208, ptr @.str.209, ptr @.str.210, ptr @.str.211, ptr @.str.212, ptr @.str.213, ptr @.str.214, ptr @.str.215, ptr @.str.216, ptr @.str.218, ptr @.str.221, ptr @.str.223, ptr @.str.225, ptr @.str.227, ptr @.str.228, ptr @.str.229, ptr @.str.230, ptr @.str.231, ptr @.str.232, ptr @.str.233, ptr @.str.234, ptr @.str.235, ptr @spi_init.__key, ptr @spi_init.__key.236, ptr @spi_of_notifier, ptr @.str.237, ptr @.str.238], section "llvm.metadata"
@0 = internal global [348 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__spi__trace_system_name to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.252 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.254 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_spi_controller to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.255 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_spi_controller to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.258 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_spi_controller to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.261 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_spi_controller_idle to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.264 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.266 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_spi_controller_busy to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.269 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_spi_setup to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.270 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_spi_setup to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_spi_setup to i32), i32 397, i32 512, i32 ptrtoint (ptr @___asan_gen_.276 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_spi_setup to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.279 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_spi_set_cs to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.282 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_spi_set_cs to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.285 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_spi_set_cs to i32), i32 140, i32 192, i32 ptrtoint (ptr @___asan_gen_.288 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_spi_set_cs to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.291 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_spi_message to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.294 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_spi_message to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.297 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_spi_message to i32), i32 88, i32 128, i32 ptrtoint (ptr @___asan_gen_.300 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_spi_message_submit to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.303 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_spi_message_start to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.308 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_spi_message_done to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.309 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.920 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_spi_message_done to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.312 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.920 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_spi_message_done to i32), i32 143, i32 192, i32 ptrtoint (ptr @___asan_gen_.315 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.920 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_spi_message_done to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.318 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.920 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_spi_transfer to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.321 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_spi_transfer to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.324 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_spi_transfer to i32), i32 220, i32 256, i32 ptrtoint (ptr @___asan_gen_.327 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_spi_transfer_start to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.330 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_spi_transfer_stop to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.333 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.335 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.338 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_dev_groups to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.341 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_bus_type to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.342 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_new_device._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.368 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.368 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.368 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.368 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.368 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @board_lock to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.369 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.905 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @board_list to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_controller_list to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.375 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.377 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_finalize_current_message._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.386 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.386 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.386 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.389 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_new_ancillary_device._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.398 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.398 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.398 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.407 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_slave_class to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_master_class to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_master_idr to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.423 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.431 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_register_controller._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.452 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.452 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.452 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_register_controller.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1281 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.458 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.458 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_unregister_controller._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_controller_suspend._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.476 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_controller_resume._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.485 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.485 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.485 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_setup._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_setup._entry.40 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_setup._entry.44 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_setup._entry.47 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_setup._entry.50 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.521 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.521 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_write_then_read.lock to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.540 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @buf to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.549 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.920 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.920 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.920 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.920 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_dev_group to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.645 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_device_statistics_group to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.648 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_dev_attrs to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.651 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_modalias to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.654 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_driver_override to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.657 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_device_statistics_attrs to i32), i32 116, i32 160, i32 ptrtoint (ptr @___asan_gen_.678 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.680 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_messages to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.681 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_transfers to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.684 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.965 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_errors to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.687 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.968 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_timedout to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.690 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.971 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_spi_sync to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_spi_sync_immediate to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.696 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.977 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_spi_async to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.699 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.980 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_bytes to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.702 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.983 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_bytes_rx to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.705 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.986 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_bytes_tx to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.708 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.989 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_transfer_bytes_histo0 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.992 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_transfer_bytes_histo1 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.714 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.995 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_transfer_bytes_histo2 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.717 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_transfer_bytes_histo3 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.720 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1001 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_transfer_bytes_histo4 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.723 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1004 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_transfer_bytes_histo5 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.726 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1007 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_transfer_bytes_histo6 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.729 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1010 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_transfer_bytes_histo7 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.732 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1013 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_transfer_bytes_histo8 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.735 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1016 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_transfer_bytes_histo9 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.738 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1019 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_transfer_bytes_histo10 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.741 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1022 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_transfer_bytes_histo11 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.744 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_transfer_bytes_histo12 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.747 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1028 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_transfer_bytes_histo13 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.750 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1031 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_transfer_bytes_histo14 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.753 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1034 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_transfer_bytes_histo15 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.756 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_transfer_bytes_histo16 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.759 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1040 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_device_transfers_split_maxsize to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.762 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1043 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.965 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.968 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.971 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.977 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.980 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.983 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.983 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.986 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.989 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.992 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.995 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1001 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1004 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1007 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1010 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1013 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1016 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1019 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1022 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1028 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1031 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1034 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1040 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1043 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_remove._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.866 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.866 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.866 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_alloc_device.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1281 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.872 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.872 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_add_device._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.881 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.881 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.881 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.884 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.890 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.890 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.893 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.899 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.905 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.905 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_match_controller_to_boardinfo._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.914 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.914 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.914 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.920 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.920 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.923 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.929 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.929 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.932 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.935 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.938 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_add_device_locked._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.944 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.944 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.947 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_slave_groups to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.948 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.950 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_controller_statistics_group to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.951 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.953 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_slave_group to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.954 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_controller_statistics_attrs to i32), i32 116, i32 160, i32 ptrtoint (ptr @___asan_gen_.957 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.959 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_messages to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.960 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_transfers to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.965 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_errors to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.966 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.968 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_timedout to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.969 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.971 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_spi_sync to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.972 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.974 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_spi_sync_immediate to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.975 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.977 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_spi_async to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.978 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.980 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_bytes to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.981 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.983 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_bytes_rx to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.984 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.986 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_bytes_tx to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.987 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.989 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_transfer_bytes_histo0 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.990 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.992 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_transfer_bytes_histo1 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.993 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.995 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_transfer_bytes_histo2 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.996 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.998 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_transfer_bytes_histo3 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.999 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1001 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_transfer_bytes_histo4 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1002 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1004 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_transfer_bytes_histo5 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1005 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1007 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_transfer_bytes_histo6 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1010 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_transfer_bytes_histo7 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1011 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1013 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_transfer_bytes_histo8 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1014 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1016 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_transfer_bytes_histo9 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1017 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1019 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_transfer_bytes_histo10 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1020 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1022 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_transfer_bytes_histo11 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1023 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1025 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_transfer_bytes_histo12 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1026 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1028 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_transfer_bytes_histo13 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1029 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1031 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_transfer_bytes_histo14 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1032 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1034 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_transfer_bytes_histo15 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1035 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_transfer_bytes_histo16 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1038 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1040 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_spi_controller_transfers_split_maxsize to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1041 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1043 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_slave_attrs to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1044 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1046 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_slave to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1047 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1049 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1052 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1055 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1058 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_master_groups to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1059 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1061 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1064 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_completion.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1281 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1070 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1070 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1073 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1076 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_get_gpio_descs._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1085 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1085 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1085 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_get_gpio_descs._entry.176 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1094 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1097 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_controller_initialize_queue._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1106 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1106 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1106 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_controller_initialize_queue._entry.183 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1112 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.184 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1112 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_transfer_one_message._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1121 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1121 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1121 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_transfer_one_message._entry.188 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1127 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1127 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1133 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1133 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_transfer_wait._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1139 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1139 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_spi_transfer_cs_change_delay._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1148 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.194 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1148 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1148 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_init_queue._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @of_register_spi_devices._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1166 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1166 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.199 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1166 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @of_register_spi_device._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @of_register_spi_device._entry.202 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1181 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1181 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @of_register_spi_device._entry.205 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1187 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1187 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.209 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1193 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1196 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.213 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @of_spi_parse_dt._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1214 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1214 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.215 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1214 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.216 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @of_spi_parse_dt._entry.217 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.218 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @of_spi_parse_dt._entry.220 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.221 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @of_spi_parse_dt._entry.224 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.225 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.227 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1241 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_destroy_queue._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1250 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.228 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1250 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1250 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_stop_queue._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.230 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.231 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_replace_transfers._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.232 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.233 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_set_thread_rt._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.234 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.235 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1281 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1280 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_init.__key.236 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1281 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @spi_of_notifier to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1284 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @of_spi_notify._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1287 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.238 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1293 to i32), i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1295 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_spi_controller_idle(ptr nocapture readnone %__data, ptr noundef %controller) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_controller_idle, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %controller) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_spi_controller_busy(ptr nocapture readnone %__data, ptr noundef %controller) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_controller_busy, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %controller) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_spi_setup(ptr nocapture readnone %__data, ptr noundef %spi, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_setup, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %spi, i32 noundef %status) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_spi_set_cs(ptr nocapture readnone %__data, ptr noundef %spi, i1 noundef zeroext %enable) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_set_cs, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %spi, i1 noundef zeroext %enable) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool10.not = icmp eq ptr %6, null
  br i1 %tobool10.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_spi_message_submit(ptr nocapture readnone %__data, ptr noundef %msg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_message_submit, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %msg) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_spi_message_start(ptr nocapture readnone %__data, ptr noundef %msg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_message_start, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %msg) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_spi_message_done(ptr nocapture readnone %__data, ptr noundef %msg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_message_done, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %msg) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_spi_transfer_start(ptr nocapture readnone %__data, ptr noundef %msg, ptr noundef %xfer) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_transfer_start, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %msg, ptr noundef %xfer) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_spi_transfer_stop(ptr nocapture readnone %__data, ptr noundef %msg, ptr noundef %xfer) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_transfer_stop, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %msg, ptr noundef %xfer) #21
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_spi_controller(ptr noundef %__data, ptr nocapture noundef readonly %controller) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #21
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !730

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !731

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #21
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 12) #21
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %bus_num = getelementptr inbounds %struct.spi_controller, ptr %controller, i32 0, i32 2
  %3 = ptrtoint ptr %bus_num to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %bus_num, align 8
  %conv = sext i16 %4 to i32
  %bus_num6 = getelementptr inbounds %struct.trace_event_raw_spi_controller, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %bus_num6 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %conv, ptr %bus_num6, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_spi_controller(ptr noundef %__data, ptr nocapture noundef readonly %controller) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #21
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !732
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #21
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !732
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 12, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #21
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #21
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !720) #21
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %bus_num = getelementptr inbounds %struct.spi_controller, ptr %controller, i32 0, i32 2
  %27 = ptrtoint ptr %bus_num to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %bus_num, align 8
  %conv = sext i16 %28 to i32
  %bus_num17 = getelementptr inbounds %struct.trace_event_raw_spi_controller, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %bus_num17 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %conv, ptr %bus_num17, align 4
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 12, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_spi_setup(ptr noundef %__data, ptr nocapture noundef readonly %spi, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #21
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !730

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !731

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #21
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #21
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %controller = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 1
  %3 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %controller, align 8
  %bus_num = getelementptr inbounds %struct.spi_controller, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %bus_num to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %bus_num, align 8
  %conv = sext i16 %6 to i32
  %bus_num6 = getelementptr inbounds %struct.trace_event_raw_spi_setup, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %bus_num6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %conv, ptr %bus_num6, align 4
  %chip_select = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 4
  %8 = ptrtoint ptr %chip_select to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %chip_select, align 4
  %conv7 = zext i8 %9 to i32
  %chip_select8 = getelementptr inbounds %struct.trace_event_raw_spi_setup, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %chip_select8 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %conv7, ptr %chip_select8, align 4
  %mode = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 7
  %11 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %mode, align 8
  %mode9 = getelementptr inbounds %struct.trace_event_raw_spi_setup, ptr %call3, i32 0, i32 3
  %13 = ptrtoint ptr %mode9 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %mode9, align 4
  %bits_per_word = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 5
  %14 = ptrtoint ptr %bits_per_word to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %bits_per_word, align 1
  %conv10 = zext i8 %15 to i32
  %bits_per_word11 = getelementptr inbounds %struct.trace_event_raw_spi_setup, ptr %call3, i32 0, i32 4
  %16 = ptrtoint ptr %bits_per_word11 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %conv10, ptr %bits_per_word11, align 4
  %max_speed_hz = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 3
  %17 = ptrtoint ptr %max_speed_hz to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %max_speed_hz, align 8
  %max_speed_hz12 = getelementptr inbounds %struct.trace_event_raw_spi_setup, ptr %call3, i32 0, i32 5
  %19 = ptrtoint ptr %max_speed_hz12 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %max_speed_hz12, align 4
  %status13 = getelementptr inbounds %struct.trace_event_raw_spi_setup, ptr %call3, i32 0, i32 6
  %20 = ptrtoint ptr %status13 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %status, ptr %status13, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_spi_setup(ptr noundef %__data, ptr nocapture noundef readonly %spi, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #21
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !732
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #21
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !732
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #21
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #21
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !720) #21
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %controller = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 1
  %27 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %controller, align 8
  %bus_num = getelementptr inbounds %struct.spi_controller, ptr %28, i32 0, i32 2
  %29 = ptrtoint ptr %bus_num to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %bus_num, align 8
  %conv = sext i16 %30 to i32
  %bus_num17 = getelementptr inbounds %struct.trace_event_raw_spi_setup, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %bus_num17 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %conv, ptr %bus_num17, align 4
  %chip_select = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 4
  %32 = ptrtoint ptr %chip_select to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %chip_select, align 4
  %conv18 = zext i8 %33 to i32
  %chip_select19 = getelementptr inbounds %struct.trace_event_raw_spi_setup, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %chip_select19 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %conv18, ptr %chip_select19, align 4
  %mode = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 7
  %35 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %mode, align 8
  %mode20 = getelementptr inbounds %struct.trace_event_raw_spi_setup, ptr %call13, i32 0, i32 3
  %37 = ptrtoint ptr %mode20 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %mode20, align 4
  %bits_per_word = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 5
  %38 = ptrtoint ptr %bits_per_word to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %bits_per_word, align 1
  %conv21 = zext i8 %39 to i32
  %bits_per_word22 = getelementptr inbounds %struct.trace_event_raw_spi_setup, ptr %call13, i32 0, i32 4
  %40 = ptrtoint ptr %bits_per_word22 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %conv21, ptr %bits_per_word22, align 4
  %max_speed_hz = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 3
  %41 = ptrtoint ptr %max_speed_hz to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %max_speed_hz, align 8
  %max_speed_hz23 = getelementptr inbounds %struct.trace_event_raw_spi_setup, ptr %call13, i32 0, i32 5
  %43 = ptrtoint ptr %max_speed_hz23 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %max_speed_hz23, align 4
  %status24 = getelementptr inbounds %struct.trace_event_raw_spi_setup, ptr %call13, i32 0, i32 6
  %44 = ptrtoint ptr %status24 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %status, ptr %status24, align 4
  %45 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %rctx, align 4
  %47 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %46, ptr noundef %__data, i64 noundef 1, ptr noundef %48, ptr noundef %11, ptr noundef null) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_spi_set_cs(ptr noundef %__data, ptr nocapture noundef readonly %spi, i1 noundef zeroext %enable) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #23
  %frombool = zext i1 %enable to i8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #21
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !730

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !731

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #21
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #21
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %controller = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 1
  %3 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %controller, align 8
  %bus_num = getelementptr inbounds %struct.spi_controller, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %bus_num to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %bus_num, align 8
  %conv = sext i16 %6 to i32
  %bus_num7 = getelementptr inbounds %struct.trace_event_raw_spi_set_cs, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %bus_num7 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %conv, ptr %bus_num7, align 4
  %chip_select = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 4
  %8 = ptrtoint ptr %chip_select to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %chip_select, align 4
  %conv8 = zext i8 %9 to i32
  %chip_select9 = getelementptr inbounds %struct.trace_event_raw_spi_set_cs, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %chip_select9 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %conv8, ptr %chip_select9, align 4
  %mode = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 7
  %11 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %mode, align 8
  %mode10 = getelementptr inbounds %struct.trace_event_raw_spi_set_cs, ptr %call3, i32 0, i32 3
  %13 = ptrtoint ptr %mode10 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %mode10, align 4
  %enable12 = getelementptr inbounds %struct.trace_event_raw_spi_set_cs, ptr %call3, i32 0, i32 4
  %14 = ptrtoint ptr %enable12 to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %frombool, ptr %enable12, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_spi_set_cs(ptr noundef %__data, ptr nocapture noundef readonly %spi, i1 noundef zeroext %enable) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  %frombool = zext i1 %enable to i8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #21
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !732
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #21
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !732
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #21
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #21
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !720) #21
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %controller = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 1
  %27 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %controller, align 8
  %bus_num = getelementptr inbounds %struct.spi_controller, ptr %28, i32 0, i32 2
  %29 = ptrtoint ptr %bus_num to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %bus_num, align 8
  %conv = sext i16 %30 to i32
  %bus_num18 = getelementptr inbounds %struct.trace_event_raw_spi_set_cs, ptr %call14, i32 0, i32 1
  %31 = ptrtoint ptr %bus_num18 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %conv, ptr %bus_num18, align 4
  %chip_select = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 4
  %32 = ptrtoint ptr %chip_select to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %chip_select, align 4
  %conv19 = zext i8 %33 to i32
  %chip_select20 = getelementptr inbounds %struct.trace_event_raw_spi_set_cs, ptr %call14, i32 0, i32 2
  %34 = ptrtoint ptr %chip_select20 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %conv19, ptr %chip_select20, align 4
  %mode = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 7
  %35 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %mode, align 8
  %mode21 = getelementptr inbounds %struct.trace_event_raw_spi_set_cs, ptr %call14, i32 0, i32 3
  %37 = ptrtoint ptr %mode21 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %mode21, align 4
  %enable23 = getelementptr inbounds %struct.trace_event_raw_spi_set_cs, ptr %call14, i32 0, i32 4
  %38 = ptrtoint ptr %enable23 to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 %frombool, ptr %enable23, align 4
  %39 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rctx, align 4
  %41 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef 28, i32 noundef %40, ptr noundef %__data, i64 noundef 1, ptr noundef %42, ptr noundef %11, ptr noundef null) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_spi_message(ptr noundef %__data, ptr noundef %msg) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #21
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !730

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !731

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #21
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #21
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %spi = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 1
  %3 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %spi, align 4
  %controller = getelementptr inbounds %struct.spi_device, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %controller, align 8
  %bus_num = getelementptr inbounds %struct.spi_controller, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %bus_num to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %bus_num, align 8
  %conv = sext i16 %8 to i32
  %bus_num6 = getelementptr inbounds %struct.trace_event_raw_spi_message, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %bus_num6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %conv, ptr %bus_num6, align 4
  %10 = load ptr, ptr %spi, align 4
  %chip_select = getelementptr inbounds %struct.spi_device, ptr %10, i32 0, i32 4
  %11 = ptrtoint ptr %chip_select to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %chip_select, align 4
  %conv8 = zext i8 %12 to i32
  %chip_select9 = getelementptr inbounds %struct.trace_event_raw_spi_message, ptr %call3, i32 0, i32 2
  %13 = ptrtoint ptr %chip_select9 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %conv8, ptr %chip_select9, align 4
  %msg10 = getelementptr inbounds %struct.trace_event_raw_spi_message, ptr %call3, i32 0, i32 3
  %14 = ptrtoint ptr %msg10 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %msg, ptr %msg10, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_spi_message(ptr noundef %__data, ptr noundef %msg) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #21
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !732
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #21
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !732
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #21
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #21
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !720) #21
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %spi = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 1
  %27 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %spi, align 4
  %controller = getelementptr inbounds %struct.spi_device, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %controller, align 8
  %bus_num = getelementptr inbounds %struct.spi_controller, ptr %30, i32 0, i32 2
  %31 = ptrtoint ptr %bus_num to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %bus_num, align 8
  %conv = sext i16 %32 to i32
  %bus_num17 = getelementptr inbounds %struct.trace_event_raw_spi_message, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %bus_num17 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %conv, ptr %bus_num17, align 4
  %34 = load ptr, ptr %spi, align 4
  %chip_select = getelementptr inbounds %struct.spi_device, ptr %34, i32 0, i32 4
  %35 = ptrtoint ptr %chip_select to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %chip_select, align 4
  %conv19 = zext i8 %36 to i32
  %chip_select20 = getelementptr inbounds %struct.trace_event_raw_spi_message, ptr %call13, i32 0, i32 2
  %37 = ptrtoint ptr %chip_select20 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %conv19, ptr %chip_select20, align 4
  %msg21 = getelementptr inbounds %struct.trace_event_raw_spi_message, ptr %call13, i32 0, i32 3
  %38 = ptrtoint ptr %msg21 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %msg, ptr %msg21, align 4
  %39 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rctx, align 4
  %41 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %40, ptr noundef %__data, i64 noundef 1, ptr noundef %42, ptr noundef %11, ptr noundef null) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_spi_message_done(ptr noundef %__data, ptr noundef %msg) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #21
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !730

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !731

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #21
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #21
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %spi = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 1
  %3 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %spi, align 4
  %controller = getelementptr inbounds %struct.spi_device, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %controller, align 8
  %bus_num = getelementptr inbounds %struct.spi_controller, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %bus_num to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %bus_num, align 8
  %conv = sext i16 %8 to i32
  %bus_num6 = getelementptr inbounds %struct.trace_event_raw_spi_message_done, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %bus_num6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %conv, ptr %bus_num6, align 4
  %10 = load ptr, ptr %spi, align 4
  %chip_select = getelementptr inbounds %struct.spi_device, ptr %10, i32 0, i32 4
  %11 = ptrtoint ptr %chip_select to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %chip_select, align 4
  %conv8 = zext i8 %12 to i32
  %chip_select9 = getelementptr inbounds %struct.trace_event_raw_spi_message_done, ptr %call3, i32 0, i32 2
  %13 = ptrtoint ptr %chip_select9 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %conv8, ptr %chip_select9, align 4
  %msg10 = getelementptr inbounds %struct.trace_event_raw_spi_message_done, ptr %call3, i32 0, i32 3
  %14 = ptrtoint ptr %msg10 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %msg, ptr %msg10, align 4
  %frame_length = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 5
  %15 = ptrtoint ptr %frame_length to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %frame_length, align 4
  %frame = getelementptr inbounds %struct.trace_event_raw_spi_message_done, ptr %call3, i32 0, i32 4
  %17 = ptrtoint ptr %frame to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %frame, align 4
  %actual_length = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 6
  %18 = ptrtoint ptr %actual_length to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %actual_length, align 4
  %actual = getelementptr inbounds %struct.trace_event_raw_spi_message_done, ptr %call3, i32 0, i32 5
  %20 = ptrtoint ptr %actual to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %actual, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_spi_message_done(ptr noundef %__data, ptr noundef %msg) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #21
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !732
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #21
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !732
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #21
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #21
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !720) #21
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %spi = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 1
  %27 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %spi, align 4
  %controller = getelementptr inbounds %struct.spi_device, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %controller, align 8
  %bus_num = getelementptr inbounds %struct.spi_controller, ptr %30, i32 0, i32 2
  %31 = ptrtoint ptr %bus_num to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %bus_num, align 8
  %conv = sext i16 %32 to i32
  %bus_num17 = getelementptr inbounds %struct.trace_event_raw_spi_message_done, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %bus_num17 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %conv, ptr %bus_num17, align 4
  %34 = load ptr, ptr %spi, align 4
  %chip_select = getelementptr inbounds %struct.spi_device, ptr %34, i32 0, i32 4
  %35 = ptrtoint ptr %chip_select to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %chip_select, align 4
  %conv19 = zext i8 %36 to i32
  %chip_select20 = getelementptr inbounds %struct.trace_event_raw_spi_message_done, ptr %call13, i32 0, i32 2
  %37 = ptrtoint ptr %chip_select20 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %conv19, ptr %chip_select20, align 4
  %msg21 = getelementptr inbounds %struct.trace_event_raw_spi_message_done, ptr %call13, i32 0, i32 3
  %38 = ptrtoint ptr %msg21 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %msg, ptr %msg21, align 4
  %frame_length = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 5
  %39 = ptrtoint ptr %frame_length to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %frame_length, align 4
  %frame = getelementptr inbounds %struct.trace_event_raw_spi_message_done, ptr %call13, i32 0, i32 4
  %41 = ptrtoint ptr %frame to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %frame, align 4
  %actual_length = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 6
  %42 = ptrtoint ptr %actual_length to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %actual_length, align 4
  %actual = getelementptr inbounds %struct.trace_event_raw_spi_message_done, ptr %call13, i32 0, i32 5
  %44 = ptrtoint ptr %actual to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %43, ptr %actual, align 4
  %45 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %rctx, align 4
  %47 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %46, ptr noundef %__data, i64 noundef 1, ptr noundef %48, ptr noundef %11, ptr noundef null) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_spi_transfer(ptr noundef %__data, ptr nocapture noundef readonly %msg, ptr noundef %xfer) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #21
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !730

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !731

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #21
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %rx_buf.i = getelementptr inbounds %struct.spi_transfer, ptr %xfer, i32 0, i32 1
  %3 = ptrtoint ptr %rx_buf.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rx_buf.i, align 4
  %tobool.not.i71 = icmp eq ptr %4, null
  br i1 %tobool.not.i71, label %if.end.cond.end7.i_crit_edge, label %land.lhs.true.i

if.end.cond.end7.i_crit_edge:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end7.i

land.lhs.true.i:                                  ; preds = %if.end
  %spi.i = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 1
  %5 = ptrtoint ptr %spi.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %spi.i, align 4
  %controller.i = getelementptr inbounds %struct.spi_device, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %controller.i, align 8
  %dummy_rx.i = getelementptr inbounds %struct.spi_controller, ptr %8, i32 0, i32 62
  %9 = ptrtoint ptr %dummy_rx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %dummy_rx.i, align 8
  %cmp.not.i = icmp eq ptr %4, %10
  br i1 %cmp.not.i, label %land.lhs.true.i.cond.end7.i_crit_edge, label %cond.true.i

land.lhs.true.i.cond.end7.i_crit_edge:            ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end7.i

cond.true.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  %len.i = getelementptr inbounds %struct.spi_transfer, ptr %xfer, i32 0, i32 2
  %11 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %len.i, align 4
  %13 = tail call i32 @llvm.umin.i32(i32 %12, i32 64) #21
  br label %cond.end7.i

cond.end7.i:                                      ; preds = %cond.true.i, %land.lhs.true.i.cond.end7.i_crit_edge, %if.end.cond.end7.i_crit_edge
  %cond8.i = phi i32 [ 0, %land.lhs.true.i.cond.end7.i_crit_edge ], [ 0, %if.end.cond.end7.i_crit_edge ], [ %13, %cond.true.i ]
  %shl.i = shl nuw nsw i32 %cond8.i, 16
  %or.i = or i32 %shl.i, 32
  %14 = ptrtoint ptr %xfer to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %xfer, align 4
  %tobool12.not.i = icmp eq ptr %15, null
  br i1 %tobool12.not.i, label %cond.end7.i.trace_event_get_offsets_spi_transfer.exit_crit_edge, label %land.lhs.true13.i

cond.end7.i.trace_event_get_offsets_spi_transfer.exit_crit_edge: ; preds = %cond.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %trace_event_get_offsets_spi_transfer.exit

land.lhs.true13.i:                                ; preds = %cond.end7.i
  %spi15.i = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 1
  %16 = ptrtoint ptr %spi15.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %spi15.i, align 4
  %controller16.i = getelementptr inbounds %struct.spi_device, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %controller16.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %controller16.i, align 8
  %dummy_tx.i = getelementptr inbounds %struct.spi_controller, ptr %19, i32 0, i32 63
  %20 = ptrtoint ptr %dummy_tx.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %dummy_tx.i, align 4
  %cmp17.not.i = icmp eq ptr %15, %21
  br i1 %cmp17.not.i, label %land.lhs.true13.i.trace_event_get_offsets_spi_transfer.exit_crit_edge, label %cond.true18.i

land.lhs.true13.i.trace_event_get_offsets_spi_transfer.exit_crit_edge: ; preds = %land.lhs.true13.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %trace_event_get_offsets_spi_transfer.exit

cond.true18.i:                                    ; preds = %land.lhs.true13.i
  call void @__sanitizer_cov_trace_pc() #23
  %len19.i = getelementptr inbounds %struct.spi_transfer, ptr %xfer, i32 0, i32 2
  %22 = ptrtoint ptr %len19.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %len19.i, align 4
  %24 = tail call i32 @llvm.umin.i32(i32 %23, i32 64) #21
  br label %trace_event_get_offsets_spi_transfer.exit

trace_event_get_offsets_spi_transfer.exit:        ; preds = %cond.true18.i, %land.lhs.true13.i.trace_event_get_offsets_spi_transfer.exit_crit_edge, %cond.end7.i.trace_event_get_offsets_spi_transfer.exit_crit_edge
  %cond28.i = phi i32 [ 0, %land.lhs.true13.i.trace_event_get_offsets_spi_transfer.exit_crit_edge ], [ 0, %cond.end7.i.trace_event_get_offsets_spi_transfer.exit_crit_edge ], [ %24, %cond.true18.i ]
  %add30.i = add nuw nsw i32 %cond8.i, 32
  %add = add nuw nsw i32 %add30.i, %cond28.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #21
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %trace_event_get_offsets_spi_transfer.exit.cleanup_crit_edge, label %if.end5

trace_event_get_offsets_spi_transfer.exit.cleanup_crit_edge: ; preds = %trace_event_get_offsets_spi_transfer.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end5:                                          ; preds = %trace_event_get_offsets_spi_transfer.exit
  %shl32.i = shl nuw nsw i32 %cond28.i, 16
  %or34.i = or i32 %shl32.i, %add30.i
  %__data_loc_rx_buf = getelementptr inbounds %struct.trace_event_raw_spi_transfer, ptr %call3, i32 0, i32 5
  %25 = ptrtoint ptr %__data_loc_rx_buf to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %or.i, ptr %__data_loc_rx_buf, align 4
  %__data_loc_tx_buf = getelementptr inbounds %struct.trace_event_raw_spi_transfer, ptr %call3, i32 0, i32 6
  %26 = ptrtoint ptr %__data_loc_tx_buf to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %or34.i, ptr %__data_loc_tx_buf, align 4
  %spi = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 1
  %27 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %spi, align 4
  %controller = getelementptr inbounds %struct.spi_device, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %controller, align 8
  %bus_num = getelementptr inbounds %struct.spi_controller, ptr %30, i32 0, i32 2
  %31 = ptrtoint ptr %bus_num to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %bus_num, align 8
  %conv = sext i16 %32 to i32
  %bus_num6 = getelementptr inbounds %struct.trace_event_raw_spi_transfer, ptr %call3, i32 0, i32 1
  %33 = ptrtoint ptr %bus_num6 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %conv, ptr %bus_num6, align 4
  %34 = load ptr, ptr %spi, align 4
  %chip_select = getelementptr inbounds %struct.spi_device, ptr %34, i32 0, i32 4
  %35 = ptrtoint ptr %chip_select to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %chip_select, align 4
  %conv8 = zext i8 %36 to i32
  %chip_select9 = getelementptr inbounds %struct.trace_event_raw_spi_transfer, ptr %call3, i32 0, i32 2
  %37 = ptrtoint ptr %chip_select9 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %conv8, ptr %chip_select9, align 4
  %xfer10 = getelementptr inbounds %struct.trace_event_raw_spi_transfer, ptr %call3, i32 0, i32 3
  %38 = ptrtoint ptr %xfer10 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %xfer, ptr %xfer10, align 4
  %len = getelementptr inbounds %struct.spi_transfer, ptr %xfer, i32 0, i32 2
  %39 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %len, align 4
  %len11 = getelementptr inbounds %struct.trace_event_raw_spi_transfer, ptr %call3, i32 0, i32 4
  %41 = ptrtoint ptr %len11 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %len11, align 4
  %42 = ptrtoint ptr %xfer to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %xfer, align 4
  %tobool13.not = icmp eq ptr %43, null
  br i1 %tobool13.not, label %if.end5.if.end23_crit_edge, label %land.lhs.true

if.end5.if.end23_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end23

land.lhs.true:                                    ; preds = %if.end5
  %44 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %spi, align 4
  %controller16 = getelementptr inbounds %struct.spi_device, ptr %45, i32 0, i32 1
  %46 = ptrtoint ptr %controller16 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %controller16, align 8
  %dummy_tx = getelementptr inbounds %struct.spi_controller, ptr %47, i32 0, i32 63
  %48 = ptrtoint ptr %dummy_tx to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %dummy_tx, align 4
  %cmp.not = icmp eq ptr %43, %49
  br i1 %cmp.not, label %land.lhs.true.if.end23_crit_edge, label %if.then18

land.lhs.true.if.end23_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end23

if.then18:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  %add.ptr = getelementptr i8, ptr %call3, i32 %add30.i
  %50 = call ptr @memcpy(ptr %add.ptr, ptr %43, i32 %cond28.i)
  br label %if.end23

if.end23:                                         ; preds = %if.then18, %land.lhs.true.if.end23_crit_edge, %if.end5.if.end23_crit_edge
  %51 = ptrtoint ptr %rx_buf.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %rx_buf.i, align 4
  %tobool25.not = icmp eq ptr %52, null
  br i1 %tobool25.not, label %if.end23.if.end40_crit_edge, label %land.lhs.true26

if.end23.if.end40_crit_edge:                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end40

land.lhs.true26:                                  ; preds = %if.end23
  %53 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %spi, align 4
  %controller29 = getelementptr inbounds %struct.spi_device, ptr %54, i32 0, i32 1
  %55 = ptrtoint ptr %controller29 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %controller29, align 8
  %dummy_rx = getelementptr inbounds %struct.spi_controller, ptr %56, i32 0, i32 62
  %57 = ptrtoint ptr %dummy_rx to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %dummy_rx, align 8
  %cmp30.not = icmp eq ptr %52, %58
  br i1 %cmp30.not, label %land.lhs.true26.if.end40_crit_edge, label %if.then32

land.lhs.true26.if.end40_crit_edge:               ; preds = %land.lhs.true26
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end40

if.then32:                                        ; preds = %land.lhs.true26
  call void @__sanitizer_cov_trace_pc() #23
  %59 = ptrtoint ptr %__data_loc_rx_buf to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %__data_loc_rx_buf, align 4
  %and34 = and i32 %60, 65535
  %add.ptr35 = getelementptr i8, ptr %call3, i32 %and34
  %shr38 = lshr i32 %60, 16
  %61 = call ptr @memcpy(ptr %add.ptr35, ptr %52, i32 %shr38)
  br label %if.end40

if.end40:                                         ; preds = %if.then32, %land.lhs.true26.if.end40_crit_edge, %if.end23.if.end40_crit_edge
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end40, %trace_event_get_offsets_spi_transfer.exit.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_spi_transfer(ptr noundef %__data, ptr nocapture noundef readonly %msg, ptr noundef %xfer) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #21
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !732
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #21
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !732
  %rx_buf.i = getelementptr inbounds %struct.spi_transfer, ptr %xfer, i32 0, i32 1
  %2 = ptrtoint ptr %rx_buf.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rx_buf.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %entry.cond.end7.i_crit_edge, label %land.lhs.true.i

entry.cond.end7.i_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end7.i

land.lhs.true.i:                                  ; preds = %entry
  %spi.i = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 1
  %4 = ptrtoint ptr %spi.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %spi.i, align 4
  %controller.i = getelementptr inbounds %struct.spi_device, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %controller.i, align 8
  %dummy_rx.i = getelementptr inbounds %struct.spi_controller, ptr %7, i32 0, i32 62
  %8 = ptrtoint ptr %dummy_rx.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dummy_rx.i, align 8
  %cmp.not.i = icmp eq ptr %3, %9
  br i1 %cmp.not.i, label %land.lhs.true.i.cond.end7.i_crit_edge, label %cond.true.i

land.lhs.true.i.cond.end7.i_crit_edge:            ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end7.i

cond.true.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  %len.i = getelementptr inbounds %struct.spi_transfer, ptr %xfer, i32 0, i32 2
  %10 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %len.i, align 4
  %12 = tail call i32 @llvm.umin.i32(i32 %11, i32 64) #21
  br label %cond.end7.i

cond.end7.i:                                      ; preds = %cond.true.i, %land.lhs.true.i.cond.end7.i_crit_edge, %entry.cond.end7.i_crit_edge
  %cond8.i = phi i32 [ 0, %land.lhs.true.i.cond.end7.i_crit_edge ], [ 0, %entry.cond.end7.i_crit_edge ], [ %12, %cond.true.i ]
  %shl.i = shl nuw nsw i32 %cond8.i, 16
  %or.i = or i32 %shl.i, 32
  %13 = ptrtoint ptr %xfer to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %xfer, align 4
  %tobool12.not.i = icmp eq ptr %14, null
  br i1 %tobool12.not.i, label %cond.end7.i.trace_event_get_offsets_spi_transfer.exit_crit_edge, label %land.lhs.true13.i

cond.end7.i.trace_event_get_offsets_spi_transfer.exit_crit_edge: ; preds = %cond.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %trace_event_get_offsets_spi_transfer.exit

land.lhs.true13.i:                                ; preds = %cond.end7.i
  %spi15.i = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 1
  %15 = ptrtoint ptr %spi15.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %spi15.i, align 4
  %controller16.i = getelementptr inbounds %struct.spi_device, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %controller16.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %controller16.i, align 8
  %dummy_tx.i = getelementptr inbounds %struct.spi_controller, ptr %18, i32 0, i32 63
  %19 = ptrtoint ptr %dummy_tx.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %dummy_tx.i, align 4
  %cmp17.not.i = icmp eq ptr %14, %20
  br i1 %cmp17.not.i, label %land.lhs.true13.i.trace_event_get_offsets_spi_transfer.exit_crit_edge, label %cond.true18.i

land.lhs.true13.i.trace_event_get_offsets_spi_transfer.exit_crit_edge: ; preds = %land.lhs.true13.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %trace_event_get_offsets_spi_transfer.exit

cond.true18.i:                                    ; preds = %land.lhs.true13.i
  call void @__sanitizer_cov_trace_pc() #23
  %len19.i = getelementptr inbounds %struct.spi_transfer, ptr %xfer, i32 0, i32 2
  %21 = ptrtoint ptr %len19.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %len19.i, align 4
  %23 = tail call i32 @llvm.umin.i32(i32 %22, i32 64) #21
  br label %trace_event_get_offsets_spi_transfer.exit

trace_event_get_offsets_spi_transfer.exit:        ; preds = %cond.true18.i, %land.lhs.true13.i.trace_event_get_offsets_spi_transfer.exit_crit_edge, %cond.end7.i.trace_event_get_offsets_spi_transfer.exit_crit_edge
  %cond28.i = phi i32 [ 0, %land.lhs.true13.i.trace_event_get_offsets_spi_transfer.exit_crit_edge ], [ 0, %cond.end7.i.trace_event_get_offsets_spi_transfer.exit_crit_edge ], [ %23, %cond.true18.i ]
  %add30.i = add nuw nsw i32 %cond8.i, 32
  %shl32.i = shl nuw nsw i32 %cond28.i, 16
  %or34.i = or i32 %shl32.i, %add30.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %24 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %perf_events, align 4
  %26 = ptrtoint ptr %25 to i32
  %27 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i = and i32 %27, -16384
  %28 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 3
  %29 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %30
  %31 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %arrayidx, align 4
  %add = add i32 %32, %26
  %33 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %34 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %35, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %trace_event_get_offsets_spi_transfer.exit.if.end_crit_edge

trace_event_get_offsets_spi_transfer.exit.if.end_crit_edge: ; preds = %trace_event_get_offsets_spi_transfer.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7:                                   ; preds = %trace_event_get_offsets_spi_transfer.exit
  %36 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile ptr, ptr %33, align 4
  %tobool.not.i96.not = icmp eq ptr %37, null
  br i1 %tobool.not.i96.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %trace_event_get_offsets_spi_transfer.exit.if.end_crit_edge
  %add35.i = add nuw nsw i32 %cond8.i, 43
  %add12 = add nuw nsw i32 %add35.i, %cond28.i
  %and = and i32 %add12, 504
  %sub = add nsw i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #21
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %38 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %__regs, align 4
  %40 = call ptr @llvm.returnaddress(i32 0) #21
  %41 = ptrtoint ptr %40 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %39, i32 0, i32 15
  %42 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %arrayidx.i, align 4
  %43 = call ptr @llvm.frameaddress.p0(i32 0) #21
  %44 = ptrtoint ptr %43 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %39, i32 0, i32 11
  %45 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %arrayidx2.i, align 4
  %46 = call i32 @llvm.read_register.i32(metadata !720) #21
  %arrayidx4.i = getelementptr [18 x i32], ptr %39, i32 0, i32 13
  %47 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %46, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %39, i32 0, i32 16
  %48 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_rx_buf = getelementptr inbounds %struct.trace_event_raw_spi_transfer, ptr %call13, i32 0, i32 5
  %49 = ptrtoint ptr %__data_loc_rx_buf to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %or.i, ptr %__data_loc_rx_buf, align 4
  %__data_loc_tx_buf = getelementptr inbounds %struct.trace_event_raw_spi_transfer, ptr %call13, i32 0, i32 6
  %50 = ptrtoint ptr %__data_loc_tx_buf to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %or34.i, ptr %__data_loc_tx_buf, align 4
  %spi = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 1
  %51 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %spi, align 4
  %controller = getelementptr inbounds %struct.spi_device, ptr %52, i32 0, i32 1
  %53 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %controller, align 8
  %bus_num = getelementptr inbounds %struct.spi_controller, ptr %54, i32 0, i32 2
  %55 = ptrtoint ptr %bus_num to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %bus_num, align 8
  %conv = sext i16 %56 to i32
  %bus_num17 = getelementptr inbounds %struct.trace_event_raw_spi_transfer, ptr %call13, i32 0, i32 1
  %57 = ptrtoint ptr %bus_num17 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %conv, ptr %bus_num17, align 4
  %58 = load ptr, ptr %spi, align 4
  %chip_select = getelementptr inbounds %struct.spi_device, ptr %58, i32 0, i32 4
  %59 = ptrtoint ptr %chip_select to i32
  call void @__asan_load1_noabort(i32 %59)
  %60 = load i8, ptr %chip_select, align 4
  %conv19 = zext i8 %60 to i32
  %chip_select20 = getelementptr inbounds %struct.trace_event_raw_spi_transfer, ptr %call13, i32 0, i32 2
  %61 = ptrtoint ptr %chip_select20 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %conv19, ptr %chip_select20, align 4
  %xfer21 = getelementptr inbounds %struct.trace_event_raw_spi_transfer, ptr %call13, i32 0, i32 3
  %62 = ptrtoint ptr %xfer21 to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %xfer, ptr %xfer21, align 4
  %len = getelementptr inbounds %struct.spi_transfer, ptr %xfer, i32 0, i32 2
  %63 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %len, align 4
  %len22 = getelementptr inbounds %struct.trace_event_raw_spi_transfer, ptr %call13, i32 0, i32 4
  %65 = ptrtoint ptr %len22 to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 %64, ptr %len22, align 4
  %66 = ptrtoint ptr %xfer to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %xfer, align 4
  %tobool24.not = icmp eq ptr %67, null
  br i1 %tobool24.not, label %if.end16.if.end36_crit_edge, label %land.lhs.true25

if.end16.if.end36_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end36

land.lhs.true25:                                  ; preds = %if.end16
  %68 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %spi, align 4
  %controller28 = getelementptr inbounds %struct.spi_device, ptr %69, i32 0, i32 1
  %70 = ptrtoint ptr %controller28 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %controller28, align 8
  %dummy_tx = getelementptr inbounds %struct.spi_controller, ptr %71, i32 0, i32 63
  %72 = ptrtoint ptr %dummy_tx to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %dummy_tx, align 4
  %cmp.not = icmp eq ptr %67, %73
  br i1 %cmp.not, label %land.lhs.true25.if.end36_crit_edge, label %if.then30

land.lhs.true25.if.end36_crit_edge:               ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end36

if.then30:                                        ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #23
  %add.ptr = getelementptr i8, ptr %call13, i32 %add30.i
  %74 = call ptr @memcpy(ptr %add.ptr, ptr %67, i32 %cond28.i)
  br label %if.end36

if.end36:                                         ; preds = %if.then30, %land.lhs.true25.if.end36_crit_edge, %if.end16.if.end36_crit_edge
  %75 = ptrtoint ptr %rx_buf.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %rx_buf.i, align 4
  %tobool38.not = icmp eq ptr %76, null
  br i1 %tobool38.not, label %if.end36.if.end53_crit_edge, label %land.lhs.true39

if.end36.if.end53_crit_edge:                      ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end53

land.lhs.true39:                                  ; preds = %if.end36
  %77 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %spi, align 4
  %controller42 = getelementptr inbounds %struct.spi_device, ptr %78, i32 0, i32 1
  %79 = ptrtoint ptr %controller42 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %controller42, align 8
  %dummy_rx = getelementptr inbounds %struct.spi_controller, ptr %80, i32 0, i32 62
  %81 = ptrtoint ptr %dummy_rx to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %dummy_rx, align 8
  %cmp43.not = icmp eq ptr %76, %82
  br i1 %cmp43.not, label %land.lhs.true39.if.end53_crit_edge, label %if.then45

land.lhs.true39.if.end53_crit_edge:               ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end53

if.then45:                                        ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #23
  %83 = ptrtoint ptr %__data_loc_rx_buf to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %__data_loc_rx_buf, align 4
  %and47 = and i32 %84, 65535
  %add.ptr48 = getelementptr i8, ptr %call13, i32 %and47
  %shr51 = lshr i32 %84, 16
  %85 = call ptr @memcpy(ptr %add.ptr48, ptr %76, i32 %shr51)
  br label %if.end53

if.end53:                                         ; preds = %if.then45, %land.lhs.true39.if.end53_crit_edge, %if.end36.if.end53_crit_edge
  %86 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %rctx, align 4
  %88 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %87, ptr noundef %__data, i64 noundef 1, ptr noundef %89, ptr noundef %33, ptr noundef null) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end53, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_spi_controller(ptr noundef %__data, ptr noundef %controller) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %controller to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_spi_setup(ptr noundef %__data, ptr noundef %spi, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %spi to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %status to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_spi_set_cs(ptr noundef %__data, ptr noundef %spi, i1 noundef zeroext %enable) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %spi to i32
  %conv = zext i32 %0 to i64
  %conv5 = zext i1 %enable to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv5) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_spi_message(ptr noundef %__data, ptr noundef %msg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %msg to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_spi_message_done(ptr noundef %__data, ptr noundef %msg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %msg to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_spi_transfer(ptr noundef %__data, ptr noundef %msg, ptr noundef %xfer) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %msg to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %xfer to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #21
  ret void
}

; Function Attrs: nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local ptr @spi_get_device_id(ptr nocapture noundef readonly %sdev) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %driver = getelementptr inbounds %struct.device, ptr %sdev, i32 0, i32 6
  %0 = ptrtoint ptr %driver to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver, align 4
  %tobool.not.i = icmp eq ptr %1, null
  %add.ptr.i = getelementptr i8, ptr %1, i32 -16
  %spec.select.i = select i1 %tobool.not.i, ptr null, ptr %add.ptr.i
  %2 = ptrtoint ptr %spec.select.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %spec.select.i, align 4
  %modalias = getelementptr inbounds %struct.spi_device, ptr %sdev, i32 0, i32 11
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %3, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not7.i = icmp eq i8 %5, 0
  br i1 %tobool.not7.i, label %entry.spi_match_id.exit_crit_edge, label %entry.while.body.i_crit_edge

entry.while.body.i_crit_edge:                     ; preds = %entry
  br label %while.body.i

entry.spi_match_id.exit_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_match_id.exit

while.body.i:                                     ; preds = %if.end.i.while.body.i_crit_edge, %entry.while.body.i_crit_edge
  %id.addr.08.i = phi ptr [ %incdec.ptr.i, %if.end.i.while.body.i_crit_edge ], [ %3, %entry.while.body.i_crit_edge ]
  %call.i = tail call i32 @strcmp(ptr noundef %modalias, ptr noundef %id.addr.08.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool3.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool3.not.i, label %while.body.i.spi_match_id.exit_crit_edge, label %if.end.i

while.body.i.spi_match_id.exit_crit_edge:         ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_match_id.exit

if.end.i:                                         ; preds = %while.body.i
  %incdec.ptr.i = getelementptr %struct.spi_device_id, ptr %id.addr.08.i, i32 1
  %6 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %incdec.ptr.i, align 4
  %tobool.not.i3 = icmp eq i8 %7, 0
  br i1 %tobool.not.i3, label %if.end.i.spi_match_id.exit_crit_edge, label %if.end.i.while.body.i_crit_edge

if.end.i.while.body.i_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body.i

if.end.i.spi_match_id.exit_crit_edge:             ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_match_id.exit

spi_match_id.exit:                                ; preds = %if.end.i.spi_match_id.exit_crit_edge, %while.body.i.spi_match_id.exit_crit_edge, %entry.spi_match_id.exit_crit_edge
  %retval.0.i = phi ptr [ null, %entry.spi_match_id.exit_crit_edge ], [ %id.addr.08.i, %while.body.i.spi_match_id.exit_crit_edge ], [ null, %if.end.i.spi_match_id.exit_crit_edge ]
  ret ptr %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_match_device(ptr noundef %dev, ptr noundef readonly %drv) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %drv, null
  %add.ptr.i = getelementptr i8, ptr %drv, i32 -16
  %spec.select.i = select i1 %tobool.not.i, ptr null, ptr %add.ptr.i
  %driver_override = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 12
  %0 = ptrtoint ptr %driver_override to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_override, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %2 = ptrtoint ptr %drv to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %drv, align 4
  %call3 = tail call i32 @strcmp(ptr noundef nonnull %1, ptr noundef %3) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %cmp = icmp eq i32 %call3, 0
  br label %cleanup

if.end:                                           ; preds = %entry
  %of_match_table.i = getelementptr inbounds %struct.device_driver, ptr %drv, i32 0, i32 6
  %4 = ptrtoint ptr %of_match_table.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %of_match_table.i, align 4
  %call.i = tail call ptr @of_match_device(ptr noundef %5, ptr noundef %dev) #21
  %cmp.i.not = icmp eq ptr %call.i, null
  br i1 %cmp.i.not, label %if.end7, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %6 = ptrtoint ptr %spec.select.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %spec.select.i, align 4
  %tobool11.not = icmp eq ptr %7, null
  %modalias18 = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 11
  br i1 %tobool11.not, label %if.end17, label %if.then12

if.then12:                                        ; preds = %if.end7
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %7, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.not7.i = icmp eq i8 %9, 0
  br i1 %tobool.not7.i, label %if.then12.spi_match_id.exit_crit_edge, label %if.then12.while.body.i_crit_edge

if.then12.while.body.i_crit_edge:                 ; preds = %if.then12
  br label %while.body.i

if.then12.spi_match_id.exit_crit_edge:            ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_match_id.exit

while.body.i:                                     ; preds = %if.end.i.while.body.i_crit_edge, %if.then12.while.body.i_crit_edge
  %id.addr.08.i = phi ptr [ %incdec.ptr.i, %if.end.i.while.body.i_crit_edge ], [ %7, %if.then12.while.body.i_crit_edge ]
  %call.i36 = tail call i32 @strcmp(ptr noundef %modalias18, ptr noundef %id.addr.08.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i36)
  %tobool3.not.i = icmp eq i32 %call.i36, 0
  br i1 %tobool3.not.i, label %while.body.i.spi_match_id.exit_crit_edge, label %if.end.i

while.body.i.spi_match_id.exit_crit_edge:         ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_match_id.exit

if.end.i:                                         ; preds = %while.body.i
  %incdec.ptr.i = getelementptr %struct.spi_device_id, ptr %id.addr.08.i, i32 1
  %10 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %incdec.ptr.i, align 4
  %tobool.not.i37 = icmp eq i8 %11, 0
  br i1 %tobool.not.i37, label %if.end.i.spi_match_id.exit_crit_edge, label %if.end.i.while.body.i_crit_edge

if.end.i.while.body.i_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body.i

if.end.i.spi_match_id.exit_crit_edge:             ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_match_id.exit

spi_match_id.exit:                                ; preds = %if.end.i.spi_match_id.exit_crit_edge, %while.body.i.spi_match_id.exit_crit_edge, %if.then12.spi_match_id.exit_crit_edge
  %retval.0.i = phi ptr [ null, %if.then12.spi_match_id.exit_crit_edge ], [ %id.addr.08.i, %while.body.i.spi_match_id.exit_crit_edge ], [ null, %if.end.i.spi_match_id.exit_crit_edge ]
  %tobool15 = icmp ne ptr %retval.0.i, null
  br label %cleanup

if.end17:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  %12 = ptrtoint ptr %drv to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %drv, align 4
  %call21 = tail call i32 @strcmp(ptr noundef %modalias18, ptr noundef %13) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %cmp22 = icmp eq i32 %call21, 0
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %spi_match_id.exit, %if.end.cleanup_crit_edge, %if.then
  %retval.0.shrunk = phi i1 [ %cmp, %if.then ], [ %tobool15, %spi_match_id.exit ], [ %cmp22, %if.end17 ], [ true, %if.end.cleanup_crit_edge ]
  %retval.0 = zext i1 %retval.0.shrunk to i32
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_uevent(ptr noundef %dev, ptr noundef %env) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %modalias = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 11
  %call2 = tail call i32 (ptr, ptr, ...) @add_uevent_var(ptr noundef %env, ptr noundef nonnull @.str.128, ptr noundef nonnull @.str.94, ptr noundef %modalias) #21
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_probe(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %driver = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 6
  %0 = ptrtoint ptr %driver to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver, align 4
  %tobool.not.i = icmp eq ptr %1, null
  %add.ptr.i = getelementptr i8, ptr %1, i32 -16
  %spec.select.i = select i1 %tobool.not.i, ptr null, ptr %add.ptr.i
  %of_node = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 27
  %2 = ptrtoint ptr %of_node to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %of_node, align 8
  %call2 = tail call i32 @of_clk_set_defaults(ptr noundef %3, i1 noundef zeroext false) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = ptrtoint ptr %of_node to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %of_node, align 8
  %tobool4.not = icmp eq ptr %5, null
  br i1 %tobool4.not, label %if.end.if.end16_crit_edge, label %if.then5

if.end.if.end16_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

if.then5:                                         ; preds = %if.end
  %call7 = tail call i32 @of_irq_get(ptr noundef nonnull %5, i32 noundef 0) #21
  %irq = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 8
  %6 = ptrtoint ptr %irq to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %call7, ptr %irq, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -517, i32 %call7)
  %cmp = icmp eq i32 %call7, -517
  br i1 %cmp, label %if.then5.cleanup_crit_edge, label %if.end10

if.then5.cleanup_crit_edge:                       ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end10:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %cmp12 = icmp slt i32 %call7, 0
  br i1 %cmp12, label %if.then13, label %if.end10.if.end16_crit_edge

if.end10.if.end16_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

if.then13:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #23
  %7 = ptrtoint ptr %irq to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %irq, align 4
  br label %if.end16

if.end16:                                         ; preds = %if.then13, %if.end10.if.end16_crit_edge, %if.end.if.end16_crit_edge
  %call17 = tail call i32 @dev_pm_domain_attach(ptr noundef %dev, i1 noundef zeroext true) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %if.end20, label %if.end16.cleanup_crit_edge

if.end16.cleanup_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end20:                                         ; preds = %if.end16
  %probe = getelementptr inbounds %struct.spi_driver, ptr %spec.select.i, i32 0, i32 1
  %8 = ptrtoint ptr %probe to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %probe, align 4
  %tobool21.not = icmp eq ptr %9, null
  br i1 %tobool21.not, label %if.end20.cleanup_crit_edge, label %if.then22

if.end20.cleanup_crit_edge:                       ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then22:                                        ; preds = %if.end20
  %call24 = tail call i32 %9(ptr noundef %dev) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %if.then22.cleanup_crit_edge, label %if.then26

if.then22.cleanup_crit_edge:                      ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then26:                                        ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @dev_pm_domain_detach(ptr noundef %dev, i1 noundef zeroext true) #21
  br label %cleanup

cleanup:                                          ; preds = %if.then26, %if.then22.cleanup_crit_edge, %if.end20.cleanup_crit_edge, %if.end16.cleanup_crit_edge, %if.then5.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %entry.cleanup_crit_edge ], [ -517, %if.then5.cleanup_crit_edge ], [ %call17, %if.end16.cleanup_crit_edge ], [ %call24, %if.then26 ], [ 0, %if.then22.cleanup_crit_edge ], [ 0, %if.end20.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @spi_remove(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %driver = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 6
  %0 = ptrtoint ptr %driver to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver, align 4
  %tobool.not.i = icmp eq ptr %1, null
  %add.ptr.i = getelementptr i8, ptr %1, i32 -16
  %spec.select.i = select i1 %tobool.not.i, ptr null, ptr %add.ptr.i
  %remove = getelementptr inbounds %struct.spi_driver, ptr %spec.select.i, i32 0, i32 2
  %2 = ptrtoint ptr %remove to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %remove, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.if.end7_crit_edge, label %if.then

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7

if.then:                                          ; preds = %entry
  %call3 = tail call i32 %3(ptr noundef %dev) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.then.if.end7_crit_edge, label %do.end

if.then.if.end7_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %4 = inttoptr i32 %call3 to ptr
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.129, ptr noundef nonnull %4) #26
  br label %if.end7

if.end7:                                          ; preds = %do.end, %if.then.if.end7_crit_edge, %entry.if.end7_crit_edge
  tail call void @dev_pm_domain_detach(ptr noundef %dev, i1 noundef zeroext true) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @spi_shutdown(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %driver = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 6
  %0 = ptrtoint ptr %driver to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end6_crit_edge, label %if.then

entry.if.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end6

if.then:                                          ; preds = %entry
  %shutdown = getelementptr i8, ptr %1, i32 -4
  %2 = ptrtoint ptr %shutdown to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %shutdown, align 4
  %tobool2.not = icmp eq ptr %3, null
  br i1 %tobool2.not, label %if.then.if.end6_crit_edge, label %if.then3

if.then.if.end6_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end6

if.then3:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %3(ptr noundef %dev) #21
  br label %if.end6

if.end6:                                          ; preds = %if.then3, %if.then.if.end6_crit_edge, %entry.if.end6_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__spi_register_driver(ptr noundef %owner, ptr noundef %sdrv) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %driver = getelementptr inbounds %struct.spi_driver, ptr %sdrv, i32 0, i32 4
  %owner1 = getelementptr inbounds %struct.spi_driver, ptr %sdrv, i32 0, i32 4, i32 2
  %0 = ptrtoint ptr %owner1 to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %owner, ptr %owner1, align 4
  %bus = getelementptr inbounds %struct.spi_driver, ptr %sdrv, i32 0, i32 4, i32 1
  %1 = ptrtoint ptr %bus to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr @spi_bus_type, ptr %bus, align 4
  %of_match_table = getelementptr inbounds %struct.spi_driver, ptr %sdrv, i32 0, i32 4, i32 6
  %2 = ptrtoint ptr %of_match_table to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %of_match_table, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.if.end34_crit_edge, label %for.cond.preheader

entry.if.end34_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end34

for.cond.preheader:                               ; preds = %entry
  %compatible56 = getelementptr inbounds %struct.of_device_id, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %compatible56 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %compatible56, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool6.not57 = icmp eq i8 %5, 0
  br i1 %tobool6.not57, label %for.cond.preheader.if.end34_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.if.end34_crit_edge:            ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end34

for.body:                                         ; preds = %cleanup30.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %compatible59 = phi ptr [ %compatible, %cleanup30.for.body_crit_edge ], [ %compatible56, %for.cond.preheader.for.body_crit_edge ]
  %of_id.058 = phi ptr [ %incdec.ptr33, %cleanup30.for.body_crit_edge ], [ %3, %for.cond.preheader.for.body_crit_edge ]
  %call = tail call ptr @strnchr(ptr noundef %compatible59, i32 noundef 128, i32 noundef 44) #21
  %tobool8.not = icmp eq ptr %call, null
  %incdec.ptr = getelementptr i8, ptr %call, i32 1
  %of_name.0 = select i1 %tobool8.not, ptr %compatible59, ptr %incdec.ptr
  %6 = ptrtoint ptr %sdrv to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sdrv, align 4
  %tobool12.not = icmp eq ptr %7, null
  br i1 %tobool12.not, label %if.else19, label %if.then13

if.then13:                                        ; preds = %for.body
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %7, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.not7.i = icmp eq i8 %9, 0
  br i1 %tobool.not7.i, label %if.then13.do.end_crit_edge, label %if.then13.while.body.i_crit_edge

if.then13.while.body.i_crit_edge:                 ; preds = %if.then13
  br label %while.body.i

if.then13.do.end_crit_edge:                       ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

while.body.i:                                     ; preds = %if.end.i.while.body.i_crit_edge, %if.then13.while.body.i_crit_edge
  %id.addr.08.i = phi ptr [ %incdec.ptr.i, %if.end.i.while.body.i_crit_edge ], [ %7, %if.then13.while.body.i_crit_edge ]
  %call.i = tail call i32 @strcmp(ptr noundef %of_name.0, ptr noundef %id.addr.08.i) #24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool3.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool3.not.i, label %spi_match_id.exit, label %if.end.i

if.end.i:                                         ; preds = %while.body.i
  %incdec.ptr.i = getelementptr %struct.spi_device_id, ptr %id.addr.08.i, i32 1
  %10 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %incdec.ptr.i, align 4
  %tobool.not.i = icmp eq i8 %11, 0
  br i1 %tobool.not.i, label %if.end.i.do.end_crit_edge, label %if.end.i.while.body.i_crit_edge

if.end.i.while.body.i_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body.i

if.end.i.do.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

spi_match_id.exit:                                ; preds = %while.body.i
  %tobool16.not = icmp eq ptr %id.addr.08.i, null
  br i1 %tobool16.not, label %spi_match_id.exit.do.end_crit_edge, label %spi_match_id.exit.cleanup30_crit_edge

spi_match_id.exit.cleanup30_crit_edge:            ; preds = %spi_match_id.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup30

spi_match_id.exit.do.end_crit_edge:               ; preds = %spi_match_id.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

if.else19:                                        ; preds = %for.body
  %12 = ptrtoint ptr %driver to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %driver, align 4
  %call21 = tail call i32 @strcmp(ptr noundef %13, ptr noundef %of_name.0) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %cmp = icmp eq i32 %call21, 0
  br i1 %cmp, label %if.else19.cleanup30_crit_edge, label %if.else19.do.end_crit_edge

if.else19.do.end_crit_edge:                       ; preds = %if.else19
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

if.else19.cleanup30_crit_edge:                    ; preds = %if.else19
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup30

do.end:                                           ; preds = %if.else19.do.end_crit_edge, %spi_match_id.exit.do.end_crit_edge, %if.end.i.do.end_crit_edge, %if.then13.do.end_crit_edge
  %14 = ptrtoint ptr %driver to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %driver, align 4
  %call29 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1, ptr noundef %15, ptr noundef %compatible59) #26
  br label %cleanup30

cleanup30:                                        ; preds = %do.end, %if.else19.cleanup30_crit_edge, %spi_match_id.exit.cleanup30_crit_edge
  %incdec.ptr33 = getelementptr %struct.of_device_id, ptr %of_id.058, i32 1
  %compatible = getelementptr %struct.of_device_id, ptr %of_id.058, i32 1, i32 2
  %16 = ptrtoint ptr %compatible to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %compatible, align 4
  %tobool6.not = icmp eq i8 %17, 0
  br i1 %tobool6.not, label %cleanup30.if.end34_crit_edge, label %cleanup30.for.body_crit_edge

cleanup30.for.body_crit_edge:                     ; preds = %cleanup30
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

cleanup30.if.end34_crit_edge:                     ; preds = %cleanup30
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end34

if.end34:                                         ; preds = %cleanup30.if.end34_crit_edge, %for.cond.preheader.if.end34_crit_edge, %entry.if.end34_crit_edge
  %call36 = tail call i32 @driver_register(ptr noundef %driver) #21
  ret i32 %call36
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @strnchr(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #4

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @driver_register(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @spi_new_device(ptr noundef %ctlr, ptr noundef %chip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @spi_alloc_device(ptr noundef %ctlr)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @strlen(ptr noundef %chip) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 31, i32 %call1)
  %cmp = icmp ugt i32 %call1, 31
  br i1 %cmp, label %do.end, label %if.end.if.end16_crit_edge, !prof !731

if.end.if.end16_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 728, i32 noundef 9, ptr noundef null) #21
  br label %if.end16

if.end16:                                         ; preds = %do.end, %if.end.if.end16_crit_edge
  %chip_select = getelementptr inbounds %struct.spi_board_info, ptr %chip, i32 0, i32 7
  %0 = ptrtoint ptr %chip_select to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %chip_select, align 2
  %conv = trunc i16 %1 to i8
  %chip_select23 = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 4
  %2 = ptrtoint ptr %chip_select23 to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 %conv, ptr %chip_select23, align 4
  %max_speed_hz = getelementptr inbounds %struct.spi_board_info, ptr %chip, i32 0, i32 5
  %3 = ptrtoint ptr %max_speed_hz to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %max_speed_hz, align 4
  %max_speed_hz24 = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 3
  %5 = ptrtoint ptr %max_speed_hz24 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %max_speed_hz24, align 8
  %mode = getelementptr inbounds %struct.spi_board_info, ptr %chip, i32 0, i32 8
  %6 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %mode, align 4
  %mode25 = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 7
  %8 = ptrtoint ptr %mode25 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %mode25, align 8
  %irq = getelementptr inbounds %struct.spi_board_info, ptr %chip, i32 0, i32 4
  %9 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %irq, align 4
  %irq26 = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 8
  %11 = ptrtoint ptr %irq26 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %irq26, align 4
  %modalias27 = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 11
  %call31 = tail call i32 @strlcpy(ptr noundef %modalias27, ptr noundef %chip, i32 noundef 32) #21
  %platform_data = getelementptr inbounds %struct.spi_board_info, ptr %chip, i32 0, i32 1
  %12 = ptrtoint ptr %platform_data to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %platform_data, align 4
  %platform_data32 = getelementptr inbounds %struct.device, ptr %call, i32 0, i32 7
  %14 = ptrtoint ptr %platform_data32 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %13, ptr %platform_data32, align 8
  %controller_data = getelementptr inbounds %struct.spi_board_info, ptr %chip, i32 0, i32 3
  %15 = ptrtoint ptr %controller_data to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %controller_data, align 4
  %controller_data33 = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 10
  %17 = ptrtoint ptr %controller_data33 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %16, ptr %controller_data33, align 4
  %controller_state = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 9
  %18 = ptrtoint ptr %controller_state to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr null, ptr %controller_state, align 8
  %swnode = getelementptr inbounds %struct.spi_board_info, ptr %chip, i32 0, i32 2
  %19 = ptrtoint ptr %swnode to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %swnode, align 4
  %tobool34.not = icmp eq ptr %20, null
  br i1 %tobool34.not, label %if.end16.if.end48_crit_edge, label %if.then35

if.end16.if.end48_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end48

if.then35:                                        ; preds = %if.end16
  %call38 = tail call i32 @device_add_software_node(ptr noundef nonnull %call, ptr noundef nonnull %20) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call38)
  %tobool39.not = icmp eq i32 %call38, 0
  br i1 %tobool39.not, label %if.then35.if.end48_crit_edge, label %do.end43

if.then35.if.end48_crit_edge:                     ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end48

do.end43:                                         ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %ctlr, ptr noundef nonnull @.str.4, ptr noundef %chip, i32 noundef %call38) #26
  br label %spi_dev_put.exit

if.end48:                                         ; preds = %if.then35.if.end48_crit_edge, %if.end16.if.end48_crit_edge
  %call49 = tail call fastcc i32 @spi_add_device(ptr noundef nonnull %call)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call49)
  %cmp50 = icmp slt i32 %call49, 0
  br i1 %cmp50, label %if.end48.spi_dev_put.exit_crit_edge, label %if.end48.cleanup_crit_edge

if.end48.cleanup_crit_edge:                       ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end48.spi_dev_put.exit_crit_edge:              ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_dev_put.exit

spi_dev_put.exit:                                 ; preds = %if.end48.spi_dev_put.exit_crit_edge, %do.end43
  tail call void @device_remove_software_node(ptr noundef nonnull %call) #21
  tail call void @put_device(ptr noundef nonnull %call) #21
  br label %cleanup

cleanup:                                          ; preds = %spi_dev_put.exit, %if.end48.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %spi_dev_put.exit ], [ null, %entry.cleanup_crit_edge ], [ %call, %if.end48.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @spi_alloc_device(ptr noundef %ctlr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %ctlr, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %lor.lhs.false.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

lor.lhs.false.i:                                  ; preds = %entry
  %call.i = tail call ptr @get_device(ptr noundef nonnull %ctlr) #21
  %tobool1.not.i = icmp eq ptr %call.i, null
  br i1 %tobool1.not.i, label %lor.lhs.false.i.cleanup_crit_edge, label %if.end

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 11) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 11), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 1192) #27
  %tobool2.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool2.not, label %spi_controller_put.exit, label %if.end4

spi_controller_put.exit:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @put_device(ptr noundef nonnull %ctlr) #21
  br label %cleanup

if.end4:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %controller = getelementptr inbounds %struct.spi_device, ptr %call7.i.i, i32 0, i32 1
  %1 = ptrtoint ptr %controller to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %ctlr, ptr %controller, align 8
  %master = getelementptr inbounds %struct.spi_device, ptr %call7.i.i, i32 0, i32 2
  %2 = ptrtoint ptr %master to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %ctlr, ptr %master, align 4
  %parent = getelementptr inbounds %struct.device, ptr %call7.i.i, i32 0, i32 1
  %3 = ptrtoint ptr %parent to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %ctlr, ptr %parent, align 8
  %bus = getelementptr inbounds %struct.device, ptr %call7.i.i, i32 0, i32 5
  %4 = ptrtoint ptr %bus to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @spi_bus_type, ptr %bus, align 8
  %release = getelementptr inbounds %struct.device, ptr %call7.i.i, i32 0, i32 35
  %5 = ptrtoint ptr %release to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr @spidev_release, ptr %release, align 4
  %cs_gpio = getelementptr inbounds %struct.spi_device, ptr %call7.i.i, i32 0, i32 13
  %6 = ptrtoint ptr %cs_gpio to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -2, ptr %cs_gpio, align 4
  %buswidth_override_bits = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 6
  %7 = ptrtoint ptr %buswidth_override_bits to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %buswidth_override_bits, align 4
  %mode = getelementptr inbounds %struct.spi_device, ptr %call7.i.i, i32 0, i32 7
  %9 = ptrtoint ptr %mode to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %mode, align 8
  %statistics = getelementptr inbounds %struct.spi_device, ptr %call7.i.i, i32 0, i32 19
  tail call void @__raw_spin_lock_init(ptr noundef %statistics, ptr noundef nonnull @.str.131, ptr noundef nonnull @spi_alloc_device.__key, i16 noundef signext 3) #21
  tail call void @device_initialize(ptr noundef nonnull %call7.i.i) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %spi_controller_put.exit, %lor.lhs.false.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %call7.i.i, %if.end4 ], [ null, %spi_controller_put.exit ], [ null, %entry.cleanup_crit_edge ], [ null, %lor.lhs.false.i.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nofree null_pointer_is_valid
declare dso_local i32 @strlcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @device_add_software_node(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @spi_add_device(ptr noundef %spi) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %controller = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 1
  %0 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %controller, align 8
  %chip_select = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 4
  %2 = ptrtoint ptr %chip_select to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %chip_select, align 4
  %conv = zext i8 %3 to i32
  %num_chipselect = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %num_chipselect to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %num_chipselect, align 2
  %conv2 = zext i16 %5 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv, i32 %conv2)
  %cmp.not = icmp ult i32 %conv, %conv2
  br i1 %cmp.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %parent = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %parent, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %7, ptr noundef nonnull @.str.132, i32 noundef %conv, i32 noundef %conv2) #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %init_name.i.i = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %9, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.end.spi_dev_set_name.exit_crit_edge

if.end.spi_dev_set_name.exit_crit_edge:           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_dev_set_name.exit

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %1, align 4
  br label %spi_dev_set_name.exit

spi_dev_set_name.exit:                            ; preds = %if.end.i.i, %if.end.spi_dev_set_name.exit_crit_edge
  %retval.0.i.i = phi ptr [ %11, %if.end.i.i ], [ %9, %if.end.spi_dev_set_name.exit_crit_edge ]
  %call5.i = tail call i32 (ptr, ptr, ...) @dev_set_name(ptr noundef %spi, ptr noundef nonnull @.str.135, ptr noundef %retval.0.i.i, i32 noundef %conv) #21
  %add_lock = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 16
  tail call void @mutex_lock_nested(ptr noundef %add_lock, i32 noundef 0) #21
  %call = tail call fastcc i32 @__spi_add_device(ptr noundef %spi)
  tail call void @mutex_unlock(ptr noundef %add_lock) #21
  br label %cleanup

cleanup:                                          ; preds = %spi_dev_set_name.exit, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ %call, %spi_dev_set_name.exit ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_remove_software_node(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @spi_unregister_device(ptr noundef %spi) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %spi, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end:                                           ; preds = %entry
  %of_node = getelementptr inbounds %struct.device, ptr %spi, i32 0, i32 27
  %0 = ptrtoint ptr %of_node to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of_node, align 8
  %tobool1.not = icmp eq ptr %1, null
  br i1 %tobool1.not, label %if.end.if.end9_crit_edge, label %if.then2

if.end.if.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %_flags.i = getelementptr inbounds %struct.device_node, ptr %1, i32 0, i32 10
  tail call void @_clear_bit(i32 noundef 3, ptr noundef %_flags.i) #21
  %2 = ptrtoint ptr %of_node to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %of_node, align 8
  tail call void @of_node_put(ptr noundef %3) #21
  br label %if.end9

if.end9:                                          ; preds = %if.then2, %if.end.if.end9_crit_edge
  tail call void @device_remove_software_node(ptr noundef nonnull %spi) #21
  tail call void @device_del(ptr noundef nonnull %spi) #21
  %controller.i = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 1
  %4 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %controller.i, align 8
  %cleanup.i = getelementptr inbounds %struct.spi_controller, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %cleanup.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %cleanup.i, align 8
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %if.end9.spi_cleanup.exit_crit_edge, label %if.then.i

if.end9.spi_cleanup.exit_crit_edge:               ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_cleanup.exit

if.then.i:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %7(ptr noundef nonnull %spi) #21
  br label %spi_cleanup.exit

spi_cleanup.exit:                                 ; preds = %if.then.i, %if.end9.spi_cleanup.exit_crit_edge
  tail call void @put_device(ptr noundef nonnull %spi) #21
  br label %return

return:                                           ; preds = %spi_cleanup.exit, %entry.return_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @of_node_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_del(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_device(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @spi_register_board_info(ptr nocapture noundef readonly %info, i32 noundef %n) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n)
  %tobool.not = icmp eq i32 %n, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %n, i32 68) #21
  %1 = extractvalue { i32, i1 } %0, 1
  br i1 %1, label %if.end.cleanup_crit_edge, label %if.end7.i.i, !prof !731

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end7.i.i:                                      ; preds = %if.end
  %2 = extractvalue { i32, i1 } %0, 0
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %2, i32 noundef 3520) #28
  %tobool1.not = icmp eq ptr %call8.i.i, null
  br i1 %tobool1.not, label %if.end7.i.i.cleanup_crit_edge, label %if.end7.i.i.for.body_crit_edge

if.end7.i.i.for.body_crit_edge:                   ; preds = %if.end7.i.i
  br label %for.body

if.end7.i.i.cleanup_crit_edge:                    ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.body:                                         ; preds = %for.end.for.body_crit_edge, %if.end7.i.i.for.body_crit_edge
  %info.addr.037 = phi ptr [ %incdec.ptr14, %for.end.for.body_crit_edge ], [ %info, %if.end7.i.i.for.body_crit_edge ]
  %bi.035 = phi ptr [ %incdec.ptr, %for.end.for.body_crit_edge ], [ %call8.i.i, %if.end7.i.i.for.body_crit_edge ]
  %i.034 = phi i32 [ %inc, %for.end.for.body_crit_edge ], [ 0, %if.end7.i.i.for.body_crit_edge ]
  %board_info = getelementptr inbounds %struct.boardinfo, ptr %bi.035, i32 0, i32 1
  %3 = call ptr @memcpy(ptr %board_info, ptr %info.addr.037, i32 60)
  tail call void @mutex_lock_nested(ptr noundef nonnull @board_lock, i32 noundef 0) #21
  %4 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @board_list, i32 0, i32 1), align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %bi.035, ptr noundef %4, ptr noundef nonnull @board_list) #21
  br i1 %call.i.i, label %if.end.i.i27, label %for.body.list_add_tail.exit_crit_edge

for.body.list_add_tail.exit_crit_edge:            ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_add_tail.exit

if.end.i.i27:                                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  store ptr %bi.035, ptr getelementptr inbounds (%struct.list_head, ptr @board_list, i32 0, i32 1), align 4
  %5 = ptrtoint ptr %bi.035 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr @board_list, ptr %bi.035, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %bi.035, i32 0, i32 1
  %6 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %4, ptr %prev3.i.i, align 4
  %7 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %bi.035, ptr %4, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i27, %for.body.list_add_tail.exit_crit_edge
  %.pn30 = load ptr, ptr @spi_controller_list, align 4
  %cmp6.not31 = icmp eq ptr %.pn30, @spi_controller_list
  br i1 %cmp6.not31, label %list_add_tail.exit.for.end_crit_edge, label %for.body7.lr.ph

list_add_tail.exit.for.end_crit_edge:             ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body7.lr.ph:                                  ; preds = %list_add_tail.exit
  %bus_num1.i = getelementptr inbounds %struct.boardinfo, ptr %bi.035, i32 0, i32 1, i32 6
  br label %for.body7

for.body7:                                        ; preds = %spi_match_controller_to_boardinfo.exit.for.body7_crit_edge, %for.body7.lr.ph
  %.pn32 = phi ptr [ %.pn30, %for.body7.lr.ph ], [ %.pn, %spi_match_controller_to_boardinfo.exit.for.body7_crit_edge ]
  %bus_num.i = getelementptr i8, ptr %.pn32, i32 8
  %8 = ptrtoint ptr %bus_num.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %bus_num.i, align 8
  %conv.i = sext i16 %9 to i32
  %10 = ptrtoint ptr %bus_num1.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %bus_num1.i, align 4
  %conv2.i = zext i16 %11 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i, i32 %conv2.i)
  %cmp.not.i = icmp eq i32 %conv.i, %conv2.i
  br i1 %cmp.not.i, label %if.end.i, label %for.body7.spi_match_controller_to_boardinfo.exit_crit_edge

for.body7.spi_match_controller_to_boardinfo.exit_crit_edge: ; preds = %for.body7
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_match_controller_to_boardinfo.exit

if.end.i:                                         ; preds = %for.body7
  %ctlr.0 = getelementptr i8, ptr %.pn32, i32 -928
  %call.i = tail call ptr @spi_new_device(ptr noundef %ctlr.0, ptr noundef %board_info) #21
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %do.end.i, label %if.end.i.spi_match_controller_to_boardinfo.exit_crit_edge

if.end.i.spi_match_controller_to_boardinfo.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_match_controller_to_boardinfo.exit

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %parent.i = getelementptr i8, ptr %.pn32, i32 -792
  %12 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %parent.i, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %13, ptr noundef nonnull @.str.147, ptr noundef %board_info) #26
  br label %spi_match_controller_to_boardinfo.exit

spi_match_controller_to_boardinfo.exit:           ; preds = %do.end.i, %if.end.i.spi_match_controller_to_boardinfo.exit_crit_edge, %for.body7.spi_match_controller_to_boardinfo.exit_crit_edge
  %14 = ptrtoint ptr %.pn32 to i32
  call void @__asan_load4_noabort(i32 %14)
  %.pn = load ptr, ptr %.pn32, align 4
  %cmp6.not = icmp eq ptr %.pn, @spi_controller_list
  br i1 %cmp6.not, label %spi_match_controller_to_boardinfo.exit.for.end_crit_edge, label %spi_match_controller_to_boardinfo.exit.for.body7_crit_edge

spi_match_controller_to_boardinfo.exit.for.body7_crit_edge: ; preds = %spi_match_controller_to_boardinfo.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body7

spi_match_controller_to_boardinfo.exit.for.end_crit_edge: ; preds = %spi_match_controller_to_boardinfo.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %spi_match_controller_to_boardinfo.exit.for.end_crit_edge, %list_add_tail.exit.for.end_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @board_lock) #21
  %inc = add nuw i32 %i.034, 1
  %incdec.ptr = getelementptr %struct.boardinfo, ptr %bi.035, i32 1
  %incdec.ptr14 = getelementptr %struct.spi_board_info, ptr %info.addr.037, i32 1
  %exitcond.not = icmp eq i32 %inc, %n
  br i1 %exitcond.not, label %for.end.cleanup_crit_edge, label %for.end.for.body_crit_edge

for.end.for.body_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

cleanup:                                          ; preds = %for.end.cleanup_crit_edge, %if.end7.i.i.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ -12, %if.end7.i.i.cleanup_crit_edge ], [ -12, %if.end.cleanup_crit_edge ], [ 0, %for.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @spi_map_buf(ptr nocapture noundef readonly %ctlr, ptr noundef %dev, ptr noundef %sgt, ptr noundef %buf, i32 noundef %len, i32 noundef %dir) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @is_vmalloc_addr(ptr noundef %buf) #21
  %dma_parms.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 22
  %0 = ptrtoint ptr %dma_parms.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dma_parms.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.if.end.i_crit_edge, label %land.lhs.true.i

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %entry
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool2.not.i = icmp eq i32 %3, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.end.i_crit_edge, label %land.lhs.true.i.dma_get_max_seg_size.exit_crit_edge

land.lhs.true.i.dma_get_max_seg_size.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %dma_get_max_seg_size.exit

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

if.end.i:                                         ; preds = %land.lhs.true.i.if.end.i_crit_edge, %entry.if.end.i_crit_edge
  br label %dma_get_max_seg_size.exit

dma_get_max_seg_size.exit:                        ; preds = %if.end.i, %land.lhs.true.i.dma_get_max_seg_size.exit_crit_edge
  %retval.0.i = phi i32 [ 65536, %if.end.i ], [ %3, %land.lhs.true.i.dma_get_max_seg_size.exit_crit_edge ]
  %4 = ptrtoint ptr %buf to i32
  %cmp = icmp ugt ptr %buf, inttoptr (i32 -1075838977 to ptr)
  %cmp2 = icmp ult ptr %buf, inttoptr (i32 -1073741824 to ptr)
  %spec.select = and i1 %cmp, %cmp2
  %brmerge = or i1 %spec.select, %call
  br i1 %brmerge, label %if.then, label %if.else

if.then:                                          ; preds = %dma_get_max_seg_size.exit
  call void @__sanitizer_cov_trace_pc() #23
  %5 = tail call i32 @llvm.umin.i32(i32 %retval.0.i, i32 4096)
  %and = and i32 %4, 4095
  %add = add i32 %len, -1
  %add6 = add i32 %add, %and
  %sub = add i32 %add6, %5
  %div = udiv i32 %sub, %5
  br label %if.end25

if.else:                                          ; preds = %dma_get_max_seg_size.exit
  %cmp7 = icmp ugt ptr %buf, inttoptr (i32 -1073741825 to ptr)
  br i1 %cmp7, label %land.lhs.true, label %if.else.cleanup_crit_edge

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

land.lhs.true:                                    ; preds = %if.else
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @high_memory to i32))
  %6 = load ptr, ptr @high_memory, align 4
  %cmp8 = icmp ugt ptr %6, %buf
  br i1 %cmp8, label %land.lhs.true9, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

land.lhs.true9:                                   ; preds = %land.lhs.true
  %sub10 = add i32 %4, 1073741824
  %shr = lshr i32 %sub10, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %7 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add11 = add i32 %7, %shr
  %call12 = tail call i32 @pfn_valid(i32 noundef %add11) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %land.lhs.true9.cleanup_crit_edge, label %if.then14

land.lhs.true9.cleanup_crit_edge:                 ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then14:                                        ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #23
  %max_dma_len = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 43
  %8 = ptrtoint ptr %max_dma_len to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %max_dma_len, align 4
  %10 = tail call i32 @llvm.umin.i32(i32 %retval.0.i, i32 %9)
  %add21 = add i32 %len, -1
  %sub22 = add i32 %add21, %10
  %div23 = udiv i32 %sub22, %10
  br label %if.end25

if.end25:                                         ; preds = %if.then14, %if.then
  %desc_len.0 = phi i32 [ %5, %if.then ], [ %10, %if.then14 ]
  %sgs.0 = phi i32 [ %div, %if.then ], [ %div23, %if.then14 ]
  %call26 = tail call i32 @sg_alloc_table(ptr noundef %sgt, i32 noundef %sgs.0, i32 noundef 3264) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %cmp27.not = icmp eq i32 %call26, 0
  br i1 %cmp27.not, label %if.end29, label %if.end25.cleanup_crit_edge

if.end25.cleanup_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end29:                                         ; preds = %if.end25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sgs.0)
  %cmp30149 = icmp sgt i32 %sgs.0, 0
  br i1 %cmp30149, label %for.body.preheader, label %if.end29.for.end_crit_edge

if.end29.for.end_crit_edge:                       ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.preheader:                               ; preds = %if.end29
  %11 = ptrtoint ptr %sgt to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %sgt, align 4
  br label %for.body

for.body:                                         ; preds = %if.end66.for.body_crit_edge, %for.body.preheader
  %buf.addr.0155 = phi ptr [ %add.ptr, %if.end66.for.body_crit_edge ], [ %buf, %for.body.preheader ]
  %len.addr.0153 = phi i32 [ %sub67, %if.end66.for.body_crit_edge ], [ %len, %for.body.preheader ]
  %i.0152 = phi i32 [ %inc, %if.end66.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %sg.0150 = phi ptr [ %call68, %if.end66.for.body_crit_edge ], [ %12, %for.body.preheader ]
  br i1 %brmerge, label %if.then34, label %if.else59

if.then34:                                        ; preds = %for.body
  %13 = ptrtoint ptr %buf.addr.0155 to i32
  %and35 = and i32 %13, 4095
  %sub36 = sub nuw nsw i32 4096, %and35
  %14 = tail call i32 @llvm.umin.i32(i32 %len.addr.0153, i32 %sub36)
  %15 = tail call i32 @llvm.umin.i32(i32 %desc_len.0, i32 %14)
  br i1 %call, label %if.then50, label %if.else52

if.then50:                                        ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #23
  %call51 = tail call ptr @vmalloc_to_page(ptr noundef %buf.addr.0155) #21
  br label %if.end54

if.else52:                                        ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #23
  %call.i = tail call ptr @__kmap_to_page(ptr noundef %buf.addr.0155) #21
  br label %if.end54

if.end54:                                         ; preds = %if.else52, %if.then50
  %vm_page.0 = phi ptr [ %call51, %if.then50 ], [ %call.i, %if.else52 ]
  %tobool55.not = icmp eq ptr %vm_page.0, null
  br i1 %tobool55.not, label %if.then56, label %if.end57

if.then56:                                        ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @sg_free_table(ptr noundef %sgt) #21
  br label %cleanup

if.end57:                                         ; preds = %if.end54
  %16 = ptrtoint ptr %vm_page.0 to i32
  %and2.i.i = and i32 %16, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i.i)
  %tobool.not.i.i = icmp eq i32 %and2.i.i, 0
  br i1 %tobool.not.i.i, label %do.body11.i.i, label %do.body5.i.i, !prof !730

do.body5.i.i:                                     ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/scatterlist.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 112, 0\0A.popsection", ""() #21, !srcloc !733
  unreachable

do.body11.i.i:                                    ; preds = %if.end57
  %17 = ptrtoint ptr %sg.0150 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %sg.0150, align 4
  %and.i.i.i = and i32 %18, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %do.body11.i.i.if.end66_crit_edge, label %do.body19.i.i, !prof !730

do.body11.i.i.if.end66_crit_edge:                 ; preds = %do.body11.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end66

do.body19.i.i:                                    ; preds = %do.body11.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/scatterlist.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 114, 0\0A.popsection", ""() #21, !srcloc !734
  unreachable

if.else59:                                        ; preds = %for.body
  %19 = tail call i32 @llvm.umin.i32(i32 %len.addr.0153, i32 %desc_len.0)
  %20 = ptrtoint ptr %buf.addr.0155 to i32
  %cmp.i = icmp ugt ptr %buf.addr.0155, inttoptr (i32 -1073741825 to ptr)
  br i1 %cmp.i, label %land.lhs.true.i146, label %if.else59.do.body5.i_crit_edge, !prof !730

if.else59.do.body5.i_crit_edge:                   ; preds = %if.else59
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body5.i

land.lhs.true.i146:                               ; preds = %if.else59
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @high_memory to i32))
  %21 = load ptr, ptr @high_memory, align 4
  %cmp1.i = icmp ugt ptr %21, %buf.addr.0155
  br i1 %cmp1.i, label %land.rhs.i, label %land.lhs.true.i146.do.body5.i_crit_edge, !prof !730

land.lhs.true.i146.do.body5.i_crit_edge:          ; preds = %land.lhs.true.i146
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body5.i

land.rhs.i:                                       ; preds = %land.lhs.true.i146
  %sub.i = add i32 %20, 1073741824
  %shr.i = lshr i32 %sub.i, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %22 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add.i = add i32 %22, %shr.i
  %call.i147 = tail call i32 @pfn_valid(i32 noundef %add.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i147)
  %tobool.i = icmp eq i32 %call.i147, 0
  br i1 %tobool.i, label %land.rhs.i.do.body5.i_crit_edge, label %do.end8.i, !prof !731

land.rhs.i.do.body5.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body5.i

do.body5.i:                                       ; preds = %land.rhs.i.do.body5.i_crit_edge, %land.lhs.true.i146.do.body5.i_crit_edge, %if.else59.do.body5.i_crit_edge
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/scatterlist.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 160, 0\0A.popsection", ""() #21, !srcloc !735
  unreachable

do.end8.i:                                        ; preds = %land.rhs.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %23 = load ptr, ptr @mem_map, align 4
  %add.ptr.i = getelementptr %struct.page, ptr %23, i32 %shr.i
  %24 = ptrtoint ptr %sg.0150 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %sg.0150, align 4
  %26 = ptrtoint ptr %add.ptr.i to i32
  %and2.i.i.i = and i32 %26, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and2.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %do.body11.i.i.i, label %do.body5.i.i.i, !prof !730

do.body5.i.i.i:                                   ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/scatterlist.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 112, 0\0A.popsection", ""() #21, !srcloc !733
  unreachable

do.body11.i.i.i:                                  ; preds = %do.end8.i
  %and.i.i.i.i = and i32 %25, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.i.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.i.not.i.i.i, label %sg_set_buf.exit, label %do.body19.i.i.i, !prof !730

do.body19.i.i.i:                                  ; preds = %do.body11.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/scatterlist.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 114, 0\0A.popsection", ""() #21, !srcloc !734
  unreachable

sg_set_buf.exit:                                  ; preds = %do.body11.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %and.i = and i32 %20, 4095
  br label %if.end66

if.end66:                                         ; preds = %sg_set_buf.exit, %do.body11.i.i.if.end66_crit_edge
  %.sink159 = phi i32 [ %25, %sg_set_buf.exit ], [ %18, %do.body11.i.i.if.end66_crit_edge ]
  %.sink158 = phi i32 [ %26, %sg_set_buf.exit ], [ %16, %do.body11.i.i.if.end66_crit_edge ]
  %and.i.sink = phi i32 [ %and.i, %sg_set_buf.exit ], [ %and35, %do.body11.i.i.if.end66_crit_edge ]
  %.sink = phi i32 [ %19, %sg_set_buf.exit ], [ %15, %do.body11.i.i.if.end66_crit_edge ]
  %and.i.i.i148 = and i32 %.sink159, 3
  %or.i.i.i = or i32 %and.i.i.i148, %.sink158
  %27 = ptrtoint ptr %sg.0150 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i.i.i, ptr %sg.0150, align 4
  %offset1.i.i = getelementptr inbounds %struct.scatterlist, ptr %sg.0150, i32 0, i32 1
  %28 = ptrtoint ptr %offset1.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %and.i.sink, ptr %offset1.i.i, align 4
  %length.i.i = getelementptr inbounds %struct.scatterlist, ptr %sg.0150, i32 0, i32 2
  %29 = ptrtoint ptr %length.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %.sink, ptr %length.i.i, align 4
  %add.ptr = getelementptr i8, ptr %buf.addr.0155, i32 %.sink
  %sub67 = sub i32 %len.addr.0153, %.sink
  %call68 = tail call ptr @sg_next(ptr noundef %sg.0150) #21
  %inc = add nuw nsw i32 %i.0152, 1
  %exitcond.not = icmp eq i32 %inc, %sgs.0
  br i1 %exitcond.not, label %if.end66.for.end_crit_edge, label %if.end66.for.body_crit_edge

if.end66.for.body_crit_edge:                      ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

if.end66.for.end_crit_edge:                       ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %if.end66.for.end_crit_edge, %if.end29.for.end_crit_edge
  %30 = ptrtoint ptr %sgt to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %sgt, align 4
  %nents = getelementptr inbounds %struct.sg_table, ptr %sgt, i32 0, i32 1
  %32 = ptrtoint ptr %nents to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %nents, align 4
  %call70 = tail call i32 @dma_map_sg_attrs(ptr noundef %dev, ptr noundef %31, i32 noundef %33, i32 noundef %dir, i32 noundef 0) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call70)
  %tobool71.not = icmp eq i32 %call70, 0
  %spec.store.select = select i1 %tobool71.not, i32 -12, i32 %call70
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.store.select)
  %cmp74 = icmp slt i32 %spec.store.select, 0
  br i1 %cmp74, label %if.then75, label %if.end76

if.then75:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @sg_free_table(ptr noundef %sgt) #21
  br label %cleanup

if.end76:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  %34 = ptrtoint ptr %nents to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %spec.store.select, ptr %nents, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end76, %if.then75, %if.then56, %if.end25.cleanup_crit_edge, %land.lhs.true9.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %if.else.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %if.then56 ], [ %spec.store.select, %if.then75 ], [ 0, %if.end76 ], [ -22, %land.lhs.true9.cleanup_crit_edge ], [ -22, %land.lhs.true.cleanup_crit_edge ], [ -22, %if.else.cleanup_crit_edge ], [ %call26, %if.end25.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @is_vmalloc_addr(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pfn_valid(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sg_alloc_table(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @vmalloc_to_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @sg_free_table(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @sg_next(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_map_sg_attrs(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @spi_unmap_buf(ptr nocapture readnone %ctlr, ptr noundef %dev, ptr noundef %sgt, i32 noundef %dir) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %orig_nents = getelementptr inbounds %struct.sg_table, ptr %sgt, i32 0, i32 2
  %0 = ptrtoint ptr %orig_nents to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %orig_nents, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %2 = ptrtoint ptr %sgt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sgt, align 4
  tail call void @dma_unmap_sg_attrs(ptr noundef %dev, ptr noundef %3, i32 noundef %1, i32 noundef %dir, i32 noundef 0) #21
  tail call void @sg_free_table(ptr noundef %sgt) #21
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_unmap_sg_attrs(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @spi_delay_to_ns(ptr nocapture noundef readonly %_delay, ptr noundef readonly %xfer) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %_delay to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %_delay, align 2
  %conv = zext i16 %1 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %1)
  %tobool.not = icmp eq i16 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %unit1 = getelementptr inbounds %struct.spi_delay, ptr %_delay, i32 0, i32 1
  %2 = ptrtoint ptr %unit1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %unit1, align 2
  %4 = zext i8 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values)
  switch i8 %3, label %if.end.cleanup_crit_edge [
    i8 0, label %sw.bb
    i8 1, label %if.end.sw.epilog_crit_edge
    i8 2, label %sw.bb3
  ]

if.end.sw.epilog_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

sw.bb:                                            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %mul = mul nuw nsw i32 %conv, 1000
  br label %sw.epilog

sw.bb3:                                           ; preds = %if.end
  %tobool4.not = icmp eq ptr %xfer, null
  br i1 %tobool4.not, label %sw.bb3.cleanup_crit_edge, label %if.end6

sw.bb3.cleanup_crit_edge:                         ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end6:                                          ; preds = %sw.bb3
  %effective_speed_hz = getelementptr inbounds %struct.spi_transfer, ptr %xfer, i32 0, i32 13
  %5 = ptrtoint ptr %effective_speed_hz to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %effective_speed_hz, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool7.not = icmp eq i32 %6, 0
  br i1 %tobool7.not, label %cond.end, label %if.end6.if.end10_crit_edge

if.end6.if.end10_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end10

cond.end:                                         ; preds = %if.end6
  %speed_hz = getelementptr inbounds %struct.spi_transfer, ptr %xfer, i32 0, i32 12
  %7 = ptrtoint ptr %speed_hz to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %speed_hz, align 4
  %div23 = lshr i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %8)
  %tobool8.not = icmp ult i32 %8, 2
  br i1 %tobool8.not, label %cond.end.cleanup_crit_edge, label %cond.end.if.end10_crit_edge

cond.end.if.end10_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end10

cond.end.cleanup_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end10:                                         ; preds = %cond.end.if.end10_crit_edge, %if.end6.if.end10_crit_edge
  %cond26 = phi i32 [ %div23, %cond.end.if.end10_crit_edge ], [ %6, %if.end6.if.end10_crit_edge ]
  %sub = add i32 %cond26, 999999999
  %div11 = udiv i32 %sub, %cond26
  %mul12 = mul i32 %div11, %conv
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end10, %sw.bb, %if.end.sw.epilog_crit_edge
  %delay.0 = phi i32 [ %mul12, %if.end10 ], [ %conv, %if.end.sw.epilog_crit_edge ], [ %mul, %sw.bb ]
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %cond.end.cleanup_crit_edge, %sw.bb3.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %delay.0, %sw.epilog ], [ 0, %entry.cleanup_crit_edge ], [ -22, %sw.bb3.cleanup_crit_edge ], [ -22, %cond.end.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @spi_delay_exec(ptr noundef readonly %_delay, ptr noundef readonly %xfer) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__might_sleep(ptr noundef nonnull @.str.3, i32 noundef 1366) #21
  %tobool.not = icmp eq ptr %_delay, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = ptrtoint ptr %_delay to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %_delay, align 2
  %conv.i = zext i16 %1 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %1)
  %tobool.not.i = icmp eq i16 %1, 0
  br i1 %tobool.not.i, label %if.end.cleanup_crit_edge, label %if.end.i

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i:                                         ; preds = %if.end
  %unit1.i = getelementptr inbounds %struct.spi_delay, ptr %_delay, i32 0, i32 1
  %2 = ptrtoint ptr %unit1.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %unit1.i, align 2
  %4 = zext i8 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.239)
  switch i8 %3, label %if.end.i.cleanup_crit_edge [
    i8 0, label %sw.bb.i
    i8 1, label %if.end.i.if.end5_crit_edge
    i8 2, label %sw.bb3.i
  ]

if.end.i.if.end5_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end5

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

sw.bb.i:                                          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i = mul nuw nsw i32 %conv.i, 1000
  br label %if.end5

sw.bb3.i:                                         ; preds = %if.end.i
  %tobool4.not.i = icmp eq ptr %xfer, null
  br i1 %tobool4.not.i, label %sw.bb3.i.cleanup_crit_edge, label %if.end6.i

sw.bb3.i.cleanup_crit_edge:                       ; preds = %sw.bb3.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end6.i:                                        ; preds = %sw.bb3.i
  %effective_speed_hz.i = getelementptr inbounds %struct.spi_transfer, ptr %xfer, i32 0, i32 13
  %5 = ptrtoint ptr %effective_speed_hz.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %effective_speed_hz.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool7.not.i = icmp eq i32 %6, 0
  br i1 %tobool7.not.i, label %cond.end.i, label %if.end6.i.spi_delay_to_ns.exit_crit_edge

if.end6.i.spi_delay_to_ns.exit_crit_edge:         ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_delay_to_ns.exit

cond.end.i:                                       ; preds = %if.end6.i
  %speed_hz.i = getelementptr inbounds %struct.spi_transfer, ptr %xfer, i32 0, i32 12
  %7 = ptrtoint ptr %speed_hz.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %speed_hz.i, align 4
  %div23.i = lshr i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %8)
  %tobool8.not.i = icmp ult i32 %8, 2
  br i1 %tobool8.not.i, label %cond.end.i.cleanup_crit_edge, label %cond.end.i.spi_delay_to_ns.exit_crit_edge

cond.end.i.spi_delay_to_ns.exit_crit_edge:        ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_delay_to_ns.exit

cond.end.i.cleanup_crit_edge:                     ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

spi_delay_to_ns.exit:                             ; preds = %cond.end.i.spi_delay_to_ns.exit_crit_edge, %if.end6.i.spi_delay_to_ns.exit_crit_edge
  %cond26.i = phi i32 [ %div23.i, %cond.end.i.spi_delay_to_ns.exit_crit_edge ], [ %6, %if.end6.i.spi_delay_to_ns.exit_crit_edge ]
  %sub.i = add i32 %cond26.i, 999999999
  %div11.i = udiv i32 %sub.i, %cond26.i
  %mul12.i = mul i32 %div11.i, %conv.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mul12.i)
  %cmp = icmp slt i32 %mul12.i, 0
  br i1 %cmp, label %spi_delay_to_ns.exit.cleanup_crit_edge, label %spi_delay_to_ns.exit.if.end5_crit_edge

spi_delay_to_ns.exit.if.end5_crit_edge:           ; preds = %spi_delay_to_ns.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end5

spi_delay_to_ns.exit.cleanup_crit_edge:           ; preds = %spi_delay_to_ns.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end5:                                          ; preds = %spi_delay_to_ns.exit.if.end5_crit_edge, %sw.bb.i, %if.end.i.if.end5_crit_edge
  %retval.0.i19 = phi i32 [ %mul12.i, %spi_delay_to_ns.exit.if.end5_crit_edge ], [ %mul.i, %sw.bb.i ], [ %conv.i, %if.end.i.if.end5_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i19)
  %tobool.not.i9 = icmp eq i32 %retval.0.i19, 0
  br i1 %tobool.not.i9, label %if.end5.cleanup_crit_edge, label %if.end.i10

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i10:                                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1001, i32 %retval.0.i19)
  %cmp.i = icmp ult i32 %retval.0.i19, 1001
  br i1 %cmp.i, label %if.then1.i, label %if.else.i

if.then1.i:                                       ; preds = %if.end.i10
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %9 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %9(i32 noundef 214748) #21
  br label %cleanup

if.else.i:                                        ; preds = %if.end.i10
  %sub.i11 = add nuw i32 %retval.0.i19, 999
  %div.i = udiv i32 %sub.i11, 1000
  call void @__sanitizer_cov_trace_const_cmp4(i32 10001, i32 %retval.0.i19)
  %cmp2.i = icmp ult i32 %retval.0.i19, 10001
  br i1 %cmp2.i, label %cond.false6.i, label %if.else8.i

cond.false6.i:                                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %10 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  tail call void %10(i32 noundef %div.i) #21
  br label %cleanup

if.else8.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  %sub10.i = add nuw nsw i32 %div.i, 9
  %div11.i13 = udiv i32 %sub10.i, 10
  %add12.i = add nuw nsw i32 %div11.i13, %div.i
  tail call void @usleep_range_state(i32 noundef %div.i, i32 noundef %add12.i, i32 noundef 2) #21
  br label %cleanup

cleanup:                                          ; preds = %if.else8.i, %cond.false6.i, %if.then1.i, %if.end5.cleanup_crit_edge, %spi_delay_to_ns.exit.cleanup_crit_edge, %cond.end.i.cleanup_crit_edge, %sw.bb3.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ %mul12.i, %spi_delay_to_ns.exit.cleanup_crit_edge ], [ 0, %if.end5.cleanup_crit_edge ], [ 0, %if.then1.i ], [ 0, %cond.false6.i ], [ 0, %if.else8.i ], [ 0, %if.end.cleanup_crit_edge ], [ -22, %sw.bb3.i.cleanup_crit_edge ], [ -22, %cond.end.i.cleanup_crit_edge ], [ -22, %if.end.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @spi_finalize_current_transfer(ptr noundef %ctlr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %xfer_completion = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 42
  tail call void @complete(ptr noundef %xfer_completion) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @complete(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @spi_take_timestamp_pre(ptr nocapture noundef writeonly %ctlr, ptr nocapture noundef %xfer, i32 noundef %progress, i1 noundef zeroext %irqs_off) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %ptp_sts = getelementptr inbounds %struct.spi_transfer, ptr %xfer, i32 0, i32 16
  %0 = ptrtoint ptr %ptp_sts to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ptp_sts, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end:                                           ; preds = %entry
  %timestamped = getelementptr inbounds %struct.spi_transfer, ptr %xfer, i32 0, i32 17
  %2 = ptrtoint ptr %timestamped to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %timestamped, align 4, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool1.not = icmp eq i8 %3, 0
  br i1 %tobool1.not, label %if.end3, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end3:                                          ; preds = %if.end
  %ptp_sts_word_pre = getelementptr inbounds %struct.spi_transfer, ptr %xfer, i32 0, i32 14
  %4 = ptrtoint ptr %ptp_sts_word_pre to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %ptp_sts_word_pre, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %progress)
  %cmp = icmp ult i32 %5, %progress
  br i1 %cmp, label %if.end3.return_crit_edge, label %if.end5

if.end3.return_crit_edge:                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end5:                                          ; preds = %if.end3
  %6 = ptrtoint ptr %ptp_sts_word_pre to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %progress, ptr %ptp_sts_word_pre, align 4
  br i1 %irqs_off, label %do.body9, label %if.end5.if.end25_crit_edge

if.end5.if.end25_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end25

do.body9:                                         ; preds = %if.end5
  %7 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !737
  %irq_flags = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 66
  %8 = ptrtoint ptr %irq_flags to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %irq_flags, align 8
  %and.i = and i32 %7, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool19.not = icmp eq i32 %and.i, 0
  br i1 %tobool19.not, label %if.then20, label %do.body9.do.body23_crit_edge

do.body9.do.body23_crit_edge:                     ; preds = %do.body9
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body23

if.then20:                                        ; preds = %do.body9
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_off() #21
  br label %do.body23

do.body23:                                        ; preds = %if.then20, %do.body9.do.body23_crit_edge
  %9 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !738
  br label %if.end25

if.end25:                                         ; preds = %do.body23, %if.end5.if.end25_crit_edge
  %13 = ptrtoint ptr %ptp_sts to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ptp_sts, align 4
  %tobool.not.i = icmp eq ptr %14, null
  br i1 %tobool.not.i, label %if.end25.return_crit_edge, label %if.then.i

if.end25.return_crit_edge:                        ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.then.i:                                        ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @ktime_get_real_ts64(ptr noundef nonnull %14) #21
  br label %return

return:                                           ; preds = %if.then.i, %if.end25.return_crit_edge, %if.end3.return_crit_edge, %if.end.return_crit_edge, %entry.return_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @spi_take_timestamp_post(ptr nocapture noundef readonly %ctlr, ptr nocapture noundef %xfer, i32 noundef %progress, i1 noundef zeroext %irqs_off) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %ptp_sts = getelementptr inbounds %struct.spi_transfer, ptr %xfer, i32 0, i32 16
  %0 = ptrtoint ptr %ptp_sts to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ptp_sts, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end:                                           ; preds = %entry
  %timestamped = getelementptr inbounds %struct.spi_transfer, ptr %xfer, i32 0, i32 17
  %2 = ptrtoint ptr %timestamped to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %timestamped, align 4, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool1.not = icmp eq i8 %3, 0
  br i1 %tobool1.not, label %if.end3, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end3:                                          ; preds = %if.end
  %ptp_sts_word_post = getelementptr inbounds %struct.spi_transfer, ptr %xfer, i32 0, i32 15
  %4 = ptrtoint ptr %ptp_sts_word_post to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %ptp_sts_word_post, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %progress)
  %cmp = icmp ugt i32 %5, %progress
  br i1 %cmp, label %if.end3.return_crit_edge, label %ptp_read_system_postts.exit

if.end3.return_crit_edge:                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

ptp_read_system_postts.exit:                      ; preds = %if.end3
  %post_ts.i = getelementptr inbounds %struct.ptp_system_timestamp, ptr %1, i32 0, i32 1
  tail call void @ktime_get_real_ts64(ptr noundef %post_ts.i) #21
  br i1 %irqs_off, label %do.body, label %ptp_read_system_postts.exit.if.end33_crit_edge

ptp_read_system_postts.exit.if.end33_crit_edge:   ; preds = %ptp_read_system_postts.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end33

do.body:                                          ; preds = %ptp_read_system_postts.exit
  %irq_flags = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 66
  %6 = ptrtoint ptr %irq_flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %irq_flags, align 8
  %and.i = and i32 %7, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool11.not = icmp eq i32 %and.i, 0
  br i1 %tobool11.not, label %if.then12, label %do.body.do.body14_crit_edge

do.body.do.body14_crit_edge:                      ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body14

if.then12:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_on() #21
  br label %do.body14

do.body14:                                        ; preds = %if.then12, %do.body.do.body14_crit_edge
  %8 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #21, !srcloc !739
  %and.i.i = and i32 %8, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool22.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool22.not, label %if.then26, label %do.body14.do.end_crit_edge, !prof !731

do.body14.do.end_crit_edge:                       ; preds = %do.body14
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

if.then26:                                        ; preds = %do.body14
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @warn_bogus_irq_restore() #21
  br label %do.end

do.end:                                           ; preds = %if.then26, %do.body14.do.end_crit_edge
  %9 = ptrtoint ptr %irq_flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %irq_flags, align 8
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %10) #21, !srcloc !740
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !741
  %11 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %preempt_count.i.i, align 4
  %sub.i = add i32 %14, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i, align 4
  br label %if.end33

if.end33:                                         ; preds = %do.end, %ptp_read_system_postts.exit.if.end33_crit_edge
  %15 = ptrtoint ptr %ptp_sts_word_post to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %progress, ptr %ptp_sts_word_post, align 4
  %16 = ptrtoint ptr %timestamped to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 1, ptr %timestamped, align 4
  br label %return

return:                                           ; preds = %if.end33, %if.end3.return_crit_edge, %if.end.return_crit_edge, %entry.return_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @spi_get_next_queued_message(ptr noundef %ctlr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %queue_lock = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 29
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %queue_lock) #21
  %queue = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 30
  %0 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %queue, align 4
  %cmp11.not = icmp eq ptr %1, %queue
  %add.ptr = getelementptr i8, ptr %1, i32 -36
  %spec.select = select i1 %cmp11.not, ptr null, ptr %add.ptr
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock, i32 noundef %call2) #21
  ret ptr %spec.select
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @spi_finalize_current_message(ptr noundef %ctlr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %queue_lock = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 29
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %queue_lock) #21
  %cur_msg = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 31
  %0 = ptrtoint ptr %cur_msg to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cur_msg, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock, i32 noundef %call2) #21
  %ptp_sts_supported = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 65
  %2 = ptrtoint ptr %ptp_sts_supported to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %ptp_sts_supported, align 4, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.for.cond27.preheader_crit_edge

entry.for.cond27.preheader_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond27.preheader

land.lhs.true:                                    ; preds = %entry
  %transfer_one = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 51
  %4 = ptrtoint ptr %transfer_one to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %transfer_one, align 4
  %tobool6.not = icmp eq ptr %5, null
  br i1 %tobool6.not, label %for.cond.preheader, label %land.lhs.true.if.endthread-pre-split_crit_edge

land.lhs.true.if.endthread-pre-split_crit_edge:   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.endthread-pre-split

for.cond.preheader:                               ; preds = %land.lhs.true
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %.pn188 = load ptr, ptr %1, align 4
  %cmp9.not189 = icmp eq ptr %.pn188, %1
  br i1 %cmp9.not189, label %for.cond.preheader.if.endthread-pre-split_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.if.endthread-pre-split_crit_edge: ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.endthread-pre-split

for.body:                                         ; preds = %ptp_read_system_postts.exit.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %.pn190 = phi ptr [ %.pn, %ptp_read_system_postts.exit.for.body_crit_edge ], [ %.pn188, %for.cond.preheader.for.body_crit_edge ]
  %ptp_sts = getelementptr i8, ptr %.pn190, i32 -8
  %7 = ptrtoint ptr %ptp_sts to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ptp_sts, align 4
  %tobool.not.i = icmp eq ptr %8, null
  br i1 %tobool.not.i, label %for.body.ptp_read_system_postts.exit_crit_edge, label %if.then.i

for.body.ptp_read_system_postts.exit_crit_edge:   ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %ptp_read_system_postts.exit

if.then.i:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %post_ts.i = getelementptr inbounds %struct.ptp_system_timestamp, ptr %8, i32 0, i32 1
  tail call void @ktime_get_real_ts64(ptr noundef %post_ts.i) #21
  br label %ptp_read_system_postts.exit

ptp_read_system_postts.exit:                      ; preds = %if.then.i, %for.body.ptp_read_system_postts.exit_crit_edge
  %len = getelementptr i8, ptr %.pn190, i32 -76
  %9 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %len, align 4
  %ptp_sts_word_post = getelementptr i8, ptr %.pn190, i32 -12
  %11 = ptrtoint ptr %ptp_sts_word_post to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %ptp_sts_word_post, align 4
  %12 = ptrtoint ptr %.pn190 to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pn = load ptr, ptr %.pn190, align 4
  %cmp9.not = icmp eq ptr %.pn, %1
  br i1 %cmp9.not, label %ptp_read_system_postts.exit.if.endthread-pre-split_crit_edge, label %ptp_read_system_postts.exit.for.body_crit_edge

ptp_read_system_postts.exit.for.body_crit_edge:   ; preds = %ptp_read_system_postts.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

ptp_read_system_postts.exit.if.endthread-pre-split_crit_edge: ; preds = %ptp_read_system_postts.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.endthread-pre-split

if.endthread-pre-split:                           ; preds = %ptp_read_system_postts.exit.if.endthread-pre-split_crit_edge, %for.cond.preheader.if.endthread-pre-split_crit_edge, %land.lhs.true.if.endthread-pre-split_crit_edge
  %13 = ptrtoint ptr %ptp_sts_supported to i32
  call void @__asan_load1_noabort(i32 %13)
  %.pr = load i8, ptr %ptp_sts_supported, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %.pr)
  %phi.cmp = icmp eq i8 %.pr, 0
  br i1 %phi.cmp, label %if.endthread-pre-split.if.end98_crit_edge, label %if.endthread-pre-split.for.cond27.preheader_crit_edge, !prof !730

if.endthread-pre-split.for.cond27.preheader_crit_edge: ; preds = %if.endthread-pre-split
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond27.preheader

if.endthread-pre-split.if.end98_crit_edge:        ; preds = %if.endthread-pre-split
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end98

for.cond27.preheader:                             ; preds = %if.endthread-pre-split.for.cond27.preheader_crit_edge, %entry.for.cond27.preheader_crit_edge
  %14 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %.pn179191 = load ptr, ptr %1, align 4
  %cmp30.not192 = icmp eq ptr %.pn179191, %1
  br i1 %cmp30.not192, label %for.cond27.preheader.if.end98_crit_edge, label %for.cond27.preheader.for.body34_crit_edge

for.cond27.preheader.for.body34_crit_edge:        ; preds = %for.cond27.preheader
  br label %for.body34

for.cond27.preheader.if.end98_crit_edge:          ; preds = %for.cond27.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end98

for.body34:                                       ; preds = %if.end83.for.body34_crit_edge, %for.cond27.preheader.for.body34_crit_edge
  %.pn179193 = phi ptr [ %.pn179, %if.end83.for.body34_crit_edge ], [ %.pn179191, %for.cond27.preheader.for.body34_crit_edge ]
  %ptp_sts35 = getelementptr i8, ptr %.pn179193, i32 -8
  %15 = ptrtoint ptr %ptp_sts35 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ptp_sts35, align 4
  %tobool36.not = icmp eq ptr %16, null
  br i1 %tobool36.not, label %for.body34.if.end83_crit_edge, label %land.rhs

for.body34.if.end83_crit_edge:                    ; preds = %for.body34
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end83

land.rhs:                                         ; preds = %for.body34
  %timestamped = getelementptr i8, ptr %.pn179193, i32 -4
  %17 = ptrtoint ptr %timestamped to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %timestamped, align 4, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool37.not = icmp eq i8 %18, 0
  br i1 %tobool37.not, label %land.rhs46, label %land.rhs.if.end83_crit_edge

land.rhs.if.end83_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end83

land.rhs46:                                       ; preds = %land.rhs
  %.b180 = load i1, ptr @spi_finalize_current_message.__already_done, align 1
  br i1 %.b180, label %land.rhs46.if.end83_crit_edge, label %if.then57, !prof !730

land.rhs46.if.end83_crit_edge:                    ; preds = %land.rhs46
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end83

if.then57:                                        ; preds = %land.rhs46
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @spi_finalize_current_message.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1899, i32 noundef 9, ptr noundef null) #21
  br label %if.end83

if.end83:                                         ; preds = %if.then57, %land.rhs46.if.end83_crit_edge, %land.rhs.if.end83_crit_edge, %for.body34.if.end83_crit_edge
  %19 = ptrtoint ptr %.pn179193 to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pn179 = load ptr, ptr %.pn179193, align 4
  %cmp30.not = icmp eq ptr %.pn179, %1
  br i1 %cmp30.not, label %if.end83.if.end98_crit_edge, label %if.end83.for.body34_crit_edge

if.end83.for.body34_crit_edge:                    ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body34

if.end83.if.end98_crit_edge:                      ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end98

if.end98:                                         ; preds = %if.end83.if.end98_crit_edge, %for.cond27.preheader.if.end98_crit_edge, %if.endthread-pre-split.if.end98_crit_edge
  %20 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %20)
  %.pn1.i = load ptr, ptr %1, align 4
  %cmp.not3.i = icmp eq ptr %.pn1.i, %1
  br i1 %cmp.not3.i, label %if.end98.spi_unmap_msg.exit_crit_edge, label %for.body.lr.ph.i

if.end98.spi_unmap_msg.exit_crit_edge:            ; preds = %if.end98
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_unmap_msg.exit

for.body.lr.ph.i:                                 ; preds = %if.end98
  %dummy_tx.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 63
  %dummy_rx.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 62
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %.pn4.i = phi ptr [ %.pn1.i, %for.body.lr.ph.i ], [ %.pn.i, %for.inc.i.for.body.i_crit_edge ]
  %xfer.05.i = getelementptr i8, ptr %.pn4.i, i32 -84
  %21 = ptrtoint ptr %xfer.05.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %xfer.05.i, align 4
  %23 = ptrtoint ptr %dummy_tx.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %dummy_tx.i, align 4
  %cmp2.i = icmp eq ptr %22, %24
  br i1 %cmp2.i, label %if.then.i182, label %for.body.i.if.end.i_crit_edge

for.body.i.if.end.i_crit_edge:                    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

if.then.i182:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  %25 = ptrtoint ptr %xfer.05.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %xfer.05.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i182, %for.body.i.if.end.i_crit_edge
  %rx_buf.i = getelementptr i8, ptr %.pn4.i, i32 -80
  %26 = ptrtoint ptr %rx_buf.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %rx_buf.i, align 4
  %28 = ptrtoint ptr %dummy_rx.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %dummy_rx.i, align 8
  %cmp4.i = icmp eq ptr %27, %29
  br i1 %cmp4.i, label %if.then5.i, label %if.end.i.for.inc.i_crit_edge

if.end.i.for.inc.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

if.then5.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %30 = ptrtoint ptr %rx_buf.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr null, ptr %rx_buf.i, align 4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then5.i, %if.end.i.for.inc.i_crit_edge
  %31 = ptrtoint ptr %.pn4.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %.pn.i = load ptr, ptr %.pn4.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %1
  br i1 %cmp.not.i, label %for.inc.i.spi_unmap_msg.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.spi_unmap_msg.exit_crit_edge:           ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_unmap_msg.exit

spi_unmap_msg.exit:                               ; preds = %for.inc.i.spi_unmap_msg.exit_crit_edge, %if.end98.spi_unmap_msg.exit_crit_edge
  tail call fastcc void @__spi_unmap_msg(ptr noundef %ctlr, ptr noundef %1) #21
  %resources.i = getelementptr inbounds %struct.spi_message, ptr %1, i32 0, i32 10
  %prev.i = getelementptr inbounds %struct.spi_message, ptr %1, i32 0, i32 10, i32 1
  %32 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %prev.i, align 4
  %cmp.not27.i = icmp eq ptr %33, %resources.i
  br i1 %cmp.not27.i, label %spi_unmap_msg.exit.spi_res_release.exit_crit_edge, label %spi_unmap_msg.exit.for.body.i184_crit_edge

spi_unmap_msg.exit.for.body.i184_crit_edge:       ; preds = %spi_unmap_msg.exit
  br label %for.body.i184

spi_unmap_msg.exit.spi_res_release.exit_crit_edge: ; preds = %spi_unmap_msg.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_res_release.exit

for.body.i184:                                    ; preds = %list_del.exit.i.for.body.i184_crit_edge, %spi_unmap_msg.exit.for.body.i184_crit_edge
  %res.028.i = phi ptr [ %tmp.031.i, %list_del.exit.i.for.body.i184_crit_edge ], [ %33, %spi_unmap_msg.exit.for.body.i184_crit_edge ]
  %tmp.0.in30.i = getelementptr inbounds %struct.list_head, ptr %res.028.i, i32 0, i32 1
  %34 = ptrtoint ptr %tmp.0.in30.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %tmp.031.i = load ptr, ptr %tmp.0.in30.i, align 4
  %release.i = getelementptr inbounds %struct.spi_res, ptr %res.028.i, i32 0, i32 1
  %35 = ptrtoint ptr %release.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %release.i, align 8
  %tobool.not.i183 = icmp eq ptr %36, null
  br i1 %tobool.not.i183, label %for.body.i184.if.end.i186_crit_edge, label %if.then.i185

for.body.i184.if.end.i186_crit_edge:              ; preds = %for.body.i184
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i186

if.then.i185:                                     ; preds = %for.body.i184
  call void @__sanitizer_cov_trace_pc() #23
  %data.i = getelementptr inbounds %struct.spi_res, ptr %res.028.i, i32 0, i32 2
  tail call void %36(ptr noundef %ctlr, ptr noundef %1, ptr noundef %data.i) #21
  br label %if.end.i186

if.end.i186:                                      ; preds = %if.then.i185, %for.body.i184.if.end.i186_crit_edge
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %res.028.i) #21
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end.i186.list_del.exit.i_crit_edge

if.end.i186.list_del.exit.i_crit_edge:            ; preds = %if.end.i186
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %if.end.i186
  call void @__sanitizer_cov_trace_pc() #23
  %37 = ptrtoint ptr %tmp.0.in30.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %tmp.0.in30.i, align 4
  %39 = ptrtoint ptr %res.028.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %res.028.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %40, i32 0, i32 1
  %41 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %38, ptr %prev1.i.i.i.i, align 4
  %42 = ptrtoint ptr %38 to i32
  call void @__asan_store4_noabort(i32 %42)
  store volatile ptr %40, ptr %38, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %if.end.i186.list_del.exit.i_crit_edge
  %43 = ptrtoint ptr %res.028.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr inttoptr (i32 256 to ptr), ptr %res.028.i, align 4
  %44 = ptrtoint ptr %tmp.0.in30.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr inttoptr (i32 290 to ptr), ptr %tmp.0.in30.i, align 4
  tail call void @kfree(ptr noundef %res.028.i) #21
  %cmp.not.i187 = icmp eq ptr %tmp.031.i, %resources.i
  br i1 %cmp.not.i187, label %list_del.exit.i.spi_res_release.exit_crit_edge, label %list_del.exit.i.for.body.i184_crit_edge

list_del.exit.i.for.body.i184_crit_edge:          ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i184

list_del.exit.i.spi_res_release.exit_crit_edge:   ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_res_release.exit

spi_res_release.exit:                             ; preds = %list_del.exit.i.spi_res_release.exit_crit_edge, %spi_unmap_msg.exit.spi_res_release.exit_crit_edge
  %cur_msg_prepared = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 37
  %45 = ptrtoint ptr %cur_msg_prepared to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %cur_msg_prepared, align 1, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %46)
  %tobool100.not = icmp eq i8 %46, 0
  br i1 %tobool100.not, label %spi_res_release.exit.do.body115_crit_edge, label %land.lhs.true102

spi_res_release.exit.do.body115_crit_edge:        ; preds = %spi_res_release.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body115

land.lhs.true102:                                 ; preds = %spi_res_release.exit
  %unprepare_message = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 48
  %47 = ptrtoint ptr %unprepare_message to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %unprepare_message, align 8
  %tobool103.not = icmp eq ptr %48, null
  br i1 %tobool103.not, label %land.lhs.true102.do.body115_crit_edge, label %if.then104

land.lhs.true102.do.body115_crit_edge:            ; preds = %land.lhs.true102
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body115

if.then104:                                       ; preds = %land.lhs.true102
  %call106 = tail call i32 %48(ptr noundef %ctlr, ptr noundef %1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call106)
  %tobool107.not = icmp eq i32 %call106, 0
  br i1 %tobool107.not, label %if.then104.do.body115_crit_edge, label %do.end111

if.then104.do.body115_crit_edge:                  ; preds = %if.then104
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body115

do.end111:                                        ; preds = %if.then104
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %ctlr, ptr noundef nonnull @.str.8, i32 noundef %call106) #26
  br label %do.body115

do.body115:                                       ; preds = %do.end111, %if.then104.do.body115_crit_edge, %land.lhs.true102.do.body115_crit_edge, %spi_res_release.exit.do.body115_crit_edge
  %call123 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %queue_lock) #21
  %49 = ptrtoint ptr %cur_msg to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr null, ptr %cur_msg, align 4
  %50 = ptrtoint ptr %cur_msg_prepared to i32
  call void @__asan_store1_noabort(i32 %50)
  store i8 0, ptr %cur_msg_prepared, align 1
  %fallback = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 41
  %51 = ptrtoint ptr %fallback to i32
  call void @__asan_store1_noabort(i32 %51)
  store i8 0, ptr %fallback, align 1
  %kworker = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 27
  %52 = ptrtoint ptr %kworker to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %kworker, align 8
  %pump_messages = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 28
  %call130 = tail call zeroext i1 @kthread_queue_work(ptr noundef %53, ptr noundef %pump_messages) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock, i32 noundef %call123) #21
  tail call fastcc void @trace_spi_message_done(ptr noundef %1)
  %state = getelementptr inbounds %struct.spi_message, ptr %1, i32 0, i32 9
  %54 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr null, ptr %state, align 4
  %complete = getelementptr inbounds %struct.spi_message, ptr %1, i32 0, i32 3
  %55 = ptrtoint ptr %complete to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %complete, align 4
  %tobool132.not = icmp eq ptr %56, null
  br i1 %tobool132.not, label %do.body115.if.end135_crit_edge, label %if.then133

do.body115.if.end135_crit_edge:                   ; preds = %do.body115
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end135

if.then133:                                       ; preds = %do.body115
  call void @__sanitizer_cov_trace_pc() #23
  %context = getelementptr inbounds %struct.spi_message, ptr %1, i32 0, i32 4
  %57 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %context, align 4
  tail call void %56(ptr noundef %58) #21
  br label %if.end135

if.end135:                                        ; preds = %if.then133, %do.body115.if.end135_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @kthread_queue_work(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_spi_message_done(ptr noundef %msg) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_message_done, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_spi_message_done, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !742

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !730

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !743
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_message_done, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %msg) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !744
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !744
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !730

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !745
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_message_done, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_spi_message_done.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_spi_message_done.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.149, i32 noundef 167, ptr noundef nonnull @.str.150) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !746
  %38 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @spi_flush_queue(ptr noundef %ctlr) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %transfer = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 22
  %0 = ptrtoint ptr %transfer to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %transfer, align 4
  %cmp = icmp eq ptr %1, @spi_queued_transfer
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @__spi_pump_messages(ptr noundef %ctlr, i1 noundef zeroext false)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_queued_transfer(ptr nocapture noundef readonly %spi, ptr noundef %msg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %controller.i = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 1
  %0 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %controller.i, align 8
  %queue_lock.i = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 29
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %queue_lock.i) #21
  %running.i = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 34
  %2 = ptrtoint ptr %running.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %running.i, align 2, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not.i = icmp eq i8 %3, 0
  br i1 %tobool.not.i, label %entry.__spi_queued_transfer.exit_crit_edge, label %if.end.i

entry.__spi_queued_transfer.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %__spi_queued_transfer.exit

if.end.i:                                         ; preds = %entry
  %actual_length.i = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 6
  %4 = ptrtoint ptr %actual_length.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %actual_length.i, align 4
  %status.i = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 7
  %5 = ptrtoint ptr %status.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 -115, ptr %status.i, align 4
  %queue.i = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 8
  %queue6.i = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 30
  %prev.i.i = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 30, i32 1
  %6 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prev.i.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %queue.i, ptr noundef %7, ptr noundef %queue6.i) #21
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end.i.list_add_tail.exit.i_crit_edge

if.end.i.list_add_tail.exit.i_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_add_tail.exit.i

if.end.i.i.i:                                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %8 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %queue.i, ptr %prev.i.i, align 4
  %9 = ptrtoint ptr %queue.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %queue6.i, ptr %queue.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 8, i32 1
  %10 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %7, ptr %prev3.i.i.i, align 4
  %11 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %queue.i, ptr %7, align 4
  br label %list_add_tail.exit.i

list_add_tail.exit.i:                             ; preds = %if.end.i.i.i, %if.end.i.list_add_tail.exit.i_crit_edge
  %busy.i = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 33
  %12 = ptrtoint ptr %busy.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %busy.i, align 1, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool7.not.i = icmp eq i8 %13, 0
  br i1 %tobool7.not.i, label %if.then10.i, label %list_add_tail.exit.i.__spi_queued_transfer.exit_crit_edge

list_add_tail.exit.i.__spi_queued_transfer.exit_crit_edge: ; preds = %list_add_tail.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__spi_queued_transfer.exit

if.then10.i:                                      ; preds = %list_add_tail.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  %kworker.i = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 27
  %14 = ptrtoint ptr %kworker.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %kworker.i, align 8
  %pump_messages.i = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 28
  %call11.i = tail call zeroext i1 @kthread_queue_work(ptr noundef %15, ptr noundef %pump_messages.i) #21
  br label %__spi_queued_transfer.exit

__spi_queued_transfer.exit:                       ; preds = %if.then10.i, %list_add_tail.exit.i.__spi_queued_transfer.exit_crit_edge, %entry.__spi_queued_transfer.exit_crit_edge
  %retval.0.i = phi i32 [ -108, %entry.__spi_queued_transfer.exit_crit_edge ], [ 0, %list_add_tail.exit.i.__spi_queued_transfer.exit_crit_edge ], [ 0, %if.then10.i ]
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock.i, i32 noundef %call2.i) #21
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__spi_pump_messages(ptr noundef %ctlr, i1 noundef zeroext %in_kthread) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %queue_lock = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 29
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %queue_lock) #21
  %cur_msg = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 31
  %0 = ptrtoint ptr %cur_msg to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cur_msg, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock, i32 noundef %call2) #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %idling = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 32
  %2 = ptrtoint ptr %idling to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %idling, align 8, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool6.not = icmp eq i8 %3, 0
  br i1 %tobool6.not, label %if.end10, label %if.then7

if.then7:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %kworker = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 27
  %4 = ptrtoint ptr %kworker to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %kworker, align 8
  %pump_messages = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 28
  %call8 = tail call zeroext i1 @kthread_queue_work(ptr noundef %5, ptr noundef %pump_messages) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock, i32 noundef %call2) #21
  br label %cleanup

if.end10:                                         ; preds = %if.end
  %queue = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 30
  %6 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %queue, align 4
  %cmp.i.not = icmp eq ptr %7, %queue
  br i1 %cmp.i.not, label %if.end10.if.then14_crit_edge, label %lor.lhs.false

if.end10.if.then14_crit_edge:                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then14

lor.lhs.false:                                    ; preds = %if.end10
  %running = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 34
  %8 = ptrtoint ptr %running to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %running, align 2, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool13.not = icmp eq i8 %9, 0
  br i1 %tobool13.not, label %lor.lhs.false.if.then14_crit_edge, label %if.end67

lor.lhs.false.if.then14_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then14

if.then14:                                        ; preds = %lor.lhs.false.if.then14_crit_edge, %if.end10.if.then14_crit_edge
  %busy = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 33
  %10 = ptrtoint ptr %busy to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %busy, align 1, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool15.not = icmp eq i8 %11, 0
  br i1 %tobool15.not, label %if.then16, label %if.end18

if.then16:                                        ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock, i32 noundef %call2) #21
  br label %cleanup

if.end18:                                         ; preds = %if.then14
  br i1 %in_kthread, label %if.end32, label %if.then20

if.then20:                                        ; preds = %if.end18
  %dummy_rx = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 62
  %12 = ptrtoint ptr %dummy_rx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dummy_rx, align 8
  %tobool21.not = icmp eq ptr %13, null
  br i1 %tobool21.not, label %land.lhs.true, label %if.then20.if.else_crit_edge

if.then20.if.else_crit_edge:                      ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

land.lhs.true:                                    ; preds = %if.then20
  %dummy_tx = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 63
  %14 = ptrtoint ptr %dummy_tx to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %dummy_tx, align 4
  %tobool22.not = icmp eq ptr %15, null
  br i1 %tobool22.not, label %land.lhs.true23, label %land.lhs.true.if.else_crit_edge

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

land.lhs.true23:                                  ; preds = %land.lhs.true
  %unprepare_transfer_hardware = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 46
  %16 = ptrtoint ptr %unprepare_transfer_hardware to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %unprepare_transfer_hardware, align 8
  %tobool24.not = icmp eq ptr %17, null
  br i1 %tobool24.not, label %if.then25, label %land.lhs.true23.if.else_crit_edge

land.lhs.true23.if.else_crit_edge:                ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

if.then25:                                        ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @spi_idle_runtime_pm(ptr noundef %ctlr)
  %18 = ptrtoint ptr %busy to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 0, ptr %busy, align 1
  tail call fastcc void @trace_spi_controller_idle(ptr noundef %ctlr)
  br label %if.end30

if.else:                                          ; preds = %land.lhs.true23.if.else_crit_edge, %land.lhs.true.if.else_crit_edge, %if.then20.if.else_crit_edge
  %kworker27 = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 27
  %19 = ptrtoint ptr %kworker27 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %kworker27, align 8
  %pump_messages28 = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 28
  %call29 = tail call zeroext i1 @kthread_queue_work(ptr noundef %20, ptr noundef %pump_messages28) #21
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then25
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock, i32 noundef %call2) #21
  br label %cleanup

if.end32:                                         ; preds = %if.end18
  %21 = ptrtoint ptr %busy to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 0, ptr %busy, align 1
  %22 = ptrtoint ptr %idling to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 1, ptr %idling, align 8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock, i32 noundef %call2) #21
  %dummy_rx36 = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 62
  %23 = ptrtoint ptr %dummy_rx36 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %dummy_rx36, align 8
  tail call void @kfree(ptr noundef %24) #21
  %25 = ptrtoint ptr %dummy_rx36 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %dummy_rx36, align 8
  %dummy_tx38 = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 63
  %26 = ptrtoint ptr %dummy_tx38 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %dummy_tx38, align 4
  tail call void @kfree(ptr noundef %27) #21
  %28 = ptrtoint ptr %dummy_tx38 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr null, ptr %dummy_tx38, align 4
  %unprepare_transfer_hardware40 = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 46
  %29 = ptrtoint ptr %unprepare_transfer_hardware40 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %unprepare_transfer_hardware40, align 8
  %tobool41.not = icmp eq ptr %30, null
  br i1 %tobool41.not, label %if.end32.if.end50_crit_edge, label %land.lhs.true42

if.end32.if.end50_crit_edge:                      ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end50

land.lhs.true42:                                  ; preds = %if.end32
  %call44 = tail call i32 %30(ptr noundef %ctlr) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call44)
  %tobool45.not = icmp eq i32 %call44, 0
  br i1 %tobool45.not, label %land.lhs.true42.if.end50_crit_edge, label %do.end49

land.lhs.true42.if.end50_crit_edge:               ; preds = %land.lhs.true42
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end50

do.end49:                                         ; preds = %land.lhs.true42
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %ctlr, ptr noundef nonnull @.str.152) #26
  br label %if.end50

if.end50:                                         ; preds = %do.end49, %land.lhs.true42.if.end50_crit_edge, %if.end32.if.end50_crit_edge
  %auto_runtime_pm.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 36
  %31 = ptrtoint ptr %auto_runtime_pm.i to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %auto_runtime_pm.i, align 4, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %32)
  %tobool.not.i = icmp eq i8 %32, 0
  br i1 %tobool.not.i, label %if.end50.spi_idle_runtime_pm.exit_crit_edge, label %if.then.i

if.end50.spi_idle_runtime_pm.exit_crit_edge:      ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_idle_runtime_pm.exit

if.then.i:                                        ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #23
  %parent.i = getelementptr inbounds %struct.device, ptr %ctlr, i32 0, i32 1
  %33 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %parent.i, align 8
  %call.i.i = tail call i64 @ktime_get_mono_fast_ns() #21
  %last_busy.i.i = getelementptr inbounds %struct.device, ptr %34, i32 0, i32 12, i32 22
  %35 = ptrtoint ptr %last_busy.i.i to i32
  call void @__asan_store8_noabort(i32 %35)
  store volatile i64 %call.i.i, ptr %last_busy.i.i, align 8
  %36 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %parent.i, align 8
  %call.i5.i = tail call i32 @__pm_runtime_suspend(ptr noundef %37, i32 noundef 13) #21
  br label %spi_idle_runtime_pm.exit

spi_idle_runtime_pm.exit:                         ; preds = %if.then.i, %if.end50.spi_idle_runtime_pm.exit_crit_edge
  tail call fastcc void @trace_spi_controller_idle(ptr noundef %ctlr)
  %call60 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %queue_lock) #21
  %38 = ptrtoint ptr %idling to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 0, ptr %idling, align 8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock, i32 noundef %call60) #21
  br label %cleanup

if.end67:                                         ; preds = %lor.lhs.false
  %add.ptr = getelementptr i8, ptr %7, i32 -36
  %39 = ptrtoint ptr %cur_msg to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %add.ptr, ptr %cur_msg, align 4
  %call.i.i280 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %7) #21
  br i1 %call.i.i280, label %if.end.i.i, label %if.end67.list_del_init.exit_crit_edge

if.end67.list_del_init.exit_crit_edge:            ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %40 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %prev.i.i, align 4
  %42 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %7, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %43, i32 0, i32 1
  %44 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %41, ptr %prev1.i.i.i, align 4
  %45 = ptrtoint ptr %41 to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile ptr %43, ptr %41, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %if.end67.list_del_init.exit_crit_edge
  %46 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %46)
  store volatile ptr %7, ptr %7, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %47 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %7, ptr %prev.i3.i, align 4
  %busy72 = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 33
  %48 = ptrtoint ptr %busy72 to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %busy72, align 1, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %49)
  %tobool73.not = icmp eq i8 %49, 0
  br i1 %tobool73.not, label %if.else75, label %list_del_init.exit.if.end77_crit_edge

list_del_init.exit.if.end77_crit_edge:            ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end77

if.else75:                                        ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #23
  %50 = ptrtoint ptr %busy72 to i32
  call void @__asan_store1_noabort(i32 %50)
  store i8 1, ptr %busy72, align 1
  br label %if.end77

if.end77:                                         ; preds = %if.else75, %list_del_init.exit.if.end77_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock, i32 noundef %call2) #21
  %io_mutex = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %io_mutex, i32 noundef 0) #21
  br i1 %tobool73.not, label %land.lhs.true80, label %if.end77.if.end122_crit_edge

if.end77.if.end122_crit_edge:                     ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end122

land.lhs.true80:                                  ; preds = %if.end77
  %auto_runtime_pm = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 36
  %51 = ptrtoint ptr %auto_runtime_pm to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %auto_runtime_pm, align 4, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %52)
  %tobool81.not = icmp eq i8 %52, 0
  br i1 %tobool81.not, label %land.lhs.true80.if.then99_crit_edge, label %if.then83

land.lhs.true80.if.then99_crit_edge:              ; preds = %land.lhs.true80
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then99

if.then83:                                        ; preds = %land.lhs.true80
  %parent = getelementptr inbounds %struct.device, ptr %ctlr, i32 0, i32 1
  %53 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %parent, align 8
  %call.i = tail call i32 @__pm_runtime_resume(ptr noundef %54, i32 noundef 4) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp86 = icmp slt i32 %call.i, 0
  br i1 %cmp86, label %if.then88, label %if.then83.if.then99_crit_edge

if.then83.if.then99_crit_edge:                    ; preds = %if.then83
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then99

if.then88:                                        ; preds = %if.then83
  call void @__sanitizer_cov_trace_pc() #23
  %55 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %parent, align 8
  tail call fastcc void @pm_runtime_put_noidle(ptr noundef %56)
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %ctlr, ptr noundef nonnull @.str.51, i32 noundef %call.i) #26
  tail call void @mutex_unlock(ptr noundef %io_mutex) #21
  br label %cleanup

if.then99:                                        ; preds = %if.then83.if.then99_crit_edge, %land.lhs.true80.if.then99_crit_edge
  tail call fastcc void @trace_spi_controller_busy(ptr noundef %ctlr)
  %prepare_transfer_hardware = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 44
  %57 = ptrtoint ptr %prepare_transfer_hardware to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %prepare_transfer_hardware, align 8
  %tobool103.not = icmp eq ptr %58, null
  br i1 %tobool103.not, label %if.then99.if.end122_crit_edge, label %if.then104

if.then99.if.end122_crit_edge:                    ; preds = %if.then99
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end122

if.then104:                                       ; preds = %if.then99
  %call106 = tail call i32 %58(ptr noundef %ctlr) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call106)
  %tobool107.not = icmp eq i32 %call106, 0
  br i1 %tobool107.not, label %if.then104.if.end122_crit_edge, label %do.end111

if.then104.if.end122_crit_edge:                   ; preds = %if.then104
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end122

do.end111:                                        ; preds = %if.then104
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %ctlr, ptr noundef nonnull @.str.157, i32 noundef %call106) #26
  %59 = ptrtoint ptr %auto_runtime_pm to i32
  call void @__asan_load1_noabort(i32 %59)
  %60 = load i8, ptr %auto_runtime_pm, align 4, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %60)
  %tobool114.not = icmp eq i8 %60, 0
  br i1 %tobool114.not, label %do.end111.if.end119_crit_edge, label %if.then115

do.end111.if.end119_crit_edge:                    ; preds = %do.end111
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end119

if.then115:                                       ; preds = %do.end111
  call void @__sanitizer_cov_trace_pc() #23
  %parent117 = getelementptr inbounds %struct.device, ptr %ctlr, i32 0, i32 1
  %61 = ptrtoint ptr %parent117 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %parent117, align 8
  %call.i281 = tail call i32 @__pm_runtime_idle(ptr noundef %62, i32 noundef 5) #21
  br label %if.end119

if.end119:                                        ; preds = %if.then115, %do.end111.if.end119_crit_edge
  %status = getelementptr i8, ptr %7, i32 -4
  %63 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %call106, ptr %status, align 4
  tail call void @spi_finalize_current_message(ptr noundef %ctlr)
  tail call void @mutex_unlock(ptr noundef %io_mutex) #21
  br label %cleanup

if.end122:                                        ; preds = %if.then104.if.end122_crit_edge, %if.then99.if.end122_crit_edge, %if.end77.if.end122_crit_edge
  tail call fastcc void @trace_spi_message_start(ptr noundef %add.ptr)
  %prepare_message = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 47
  %64 = ptrtoint ptr %prepare_message to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %prepare_message, align 4
  %tobool123.not = icmp eq ptr %65, null
  br i1 %tobool123.not, label %if.end122.if.end135_crit_edge, label %if.then124

if.end122.if.end135_crit_edge:                    ; preds = %if.end122
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end135

if.then124:                                       ; preds = %if.end122
  %call126 = tail call i32 %65(ptr noundef %ctlr, ptr noundef %add.ptr) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call126)
  %tobool127.not = icmp eq i32 %call126, 0
  br i1 %tobool127.not, label %if.end134, label %do.end131

do.end131:                                        ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %ctlr, ptr noundef nonnull @.str.160, i32 noundef %call126) #26
  %status133 = getelementptr i8, ptr %7, i32 -4
  %66 = ptrtoint ptr %status133 to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 %call126, ptr %status133, align 4
  tail call void @spi_finalize_current_message(ptr noundef %ctlr)
  br label %out

if.end134:                                        ; preds = %if.then124
  call void @__sanitizer_cov_trace_pc() #23
  %cur_msg_prepared = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 37
  %67 = ptrtoint ptr %cur_msg_prepared to i32
  call void @__asan_store1_noabort(i32 %67)
  store i8 1, ptr %cur_msg_prepared, align 1
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.end122.if.end135_crit_edge
  %flags.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 10
  %68 = ptrtoint ptr %flags.i to i32
  call void @__asan_load2_noabort(i32 %68)
  %69 = load i16, ptr %flags.i, align 4
  %70 = and i16 %69, 24
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %70)
  %tobool.not.i282 = icmp eq i16 %70, 0
  br i1 %tobool.not.i282, label %if.end135.if.end91.i_crit_edge, label %land.lhs.true.i

if.end135.if.end91.i_crit_edge:                   ; preds = %if.end135
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end91.i

land.lhs.true.i:                                  ; preds = %if.end135
  %spi.i = getelementptr i8, ptr %7, i32 -28
  %71 = ptrtoint ptr %spi.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %spi.i, align 4
  %mode.i = getelementptr inbounds %struct.spi_device, ptr %72, i32 0, i32 7
  %73 = ptrtoint ptr %mode.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %mode.i, align 8
  %and1.i = and i32 %74, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool2.not.i = icmp eq i32 %and1.i, 0
  br i1 %tobool2.not.i, label %for.cond.preheader.i, label %land.lhs.true.i.if.end91.i_crit_edge

land.lhs.true.i.if.end91.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end91.i

for.cond.preheader.i:                             ; preds = %land.lhs.true.i
  %75 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %75)
  %.pn139.i = load ptr, ptr %add.ptr, align 4
  %cmp.not141.i = icmp eq ptr %.pn139.i, %add.ptr
  br i1 %cmp.not141.i, label %for.cond.preheader.i.if.end91.i_crit_edge, label %for.body.lr.ph.i

for.cond.preheader.i.if.end91.i_crit_edge:        ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end91.i

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %76 = and i16 %69, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %76)
  %tobool9.not.i = icmp eq i16 %76, 0
  %77 = and i16 %69, 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %77)
  %tobool19.not.i = icmp eq i16 %77, 0
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %.pn144.i = phi ptr [ %.pn139.i, %for.body.lr.ph.i ], [ %.pn.i, %for.inc.i.for.body.i_crit_edge ]
  %max_tx.0143.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %max_tx.1.i, %for.inc.i.for.body.i_crit_edge ]
  %max_rx.0142.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %max_rx.1.i, %for.inc.i.for.body.i_crit_edge ]
  br i1 %tobool9.not.i, label %for.body.i.if.end.i_crit_edge, label %land.lhs.true10.i

for.body.i.if.end.i_crit_edge:                    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.lhs.true10.i:                                ; preds = %for.body.i
  %xfer.0145.i = getelementptr i8, ptr %.pn144.i, i32 -84
  %78 = ptrtoint ptr %xfer.0145.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %xfer.0145.i, align 4
  %tobool11.not.i = icmp eq ptr %79, null
  br i1 %tobool11.not.i, label %if.then12.i, label %land.lhs.true10.i.if.end.i_crit_edge

land.lhs.true10.i.if.end.i_crit_edge:             ; preds = %land.lhs.true10.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

if.then12.i:                                      ; preds = %land.lhs.true10.i
  call void @__sanitizer_cov_trace_pc() #23
  %len.i = getelementptr i8, ptr %.pn144.i, i32 -76
  %80 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %len.i, align 4
  %82 = tail call i32 @llvm.umax.i32(i32 %81, i32 %max_tx.0143.i) #21
  br label %if.end.i

if.end.i:                                         ; preds = %if.then12.i, %land.lhs.true10.i.if.end.i_crit_edge, %for.body.i.if.end.i_crit_edge
  %max_tx.1.i = phi i32 [ %max_tx.0143.i, %land.lhs.true10.i.if.end.i_crit_edge ], [ %82, %if.then12.i ], [ %max_tx.0143.i, %for.body.i.if.end.i_crit_edge ]
  br i1 %tobool19.not.i, label %if.end.i.for.inc.i_crit_edge, label %land.lhs.true20.i

if.end.i.for.inc.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

land.lhs.true20.i:                                ; preds = %if.end.i
  %rx_buf.i = getelementptr i8, ptr %.pn144.i, i32 -80
  %83 = ptrtoint ptr %rx_buf.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %rx_buf.i, align 4
  %tobool21.not.i = icmp eq ptr %84, null
  br i1 %tobool21.not.i, label %if.then22.i, label %land.lhs.true20.i.for.inc.i_crit_edge

land.lhs.true20.i.for.inc.i_crit_edge:            ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

if.then22.i:                                      ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #23
  %len23.i = getelementptr i8, ptr %.pn144.i, i32 -76
  %85 = ptrtoint ptr %len23.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %len23.i, align 4
  %87 = tail call i32 @llvm.umax.i32(i32 %86, i32 %max_rx.0142.i) #21
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then22.i, %land.lhs.true20.i.for.inc.i_crit_edge, %if.end.i.for.inc.i_crit_edge
  %max_rx.1.i = phi i32 [ %max_rx.0142.i, %land.lhs.true20.i.for.inc.i_crit_edge ], [ %87, %if.then22.i ], [ %max_rx.0142.i, %if.end.i.for.inc.i_crit_edge ]
  %88 = ptrtoint ptr %.pn144.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %.pn.i = load ptr, ptr %.pn144.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %add.ptr
  br i1 %cmp.not.i, label %for.end.i, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.end.i:                                        ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %max_tx.1.i)
  %tobool37.not.i = icmp eq i32 %max_tx.1.i, 0
  br i1 %tobool37.not.i, label %if.end43.i, label %if.then38.i

if.then38.i:                                      ; preds = %for.end.i
  %dummy_tx.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 63
  %89 = ptrtoint ptr %dummy_tx.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %dummy_tx.i, align 4
  %call.i283 = tail call noalias ptr @krealloc(ptr noundef %90, i32 noundef %max_tx.1.i, i32 noundef 3521) #29
  %tobool39.not.i = icmp eq ptr %call.i283, null
  br i1 %tobool39.not.i, label %if.then38.i.if.then138_crit_edge, label %if.end43.i.thread

if.then38.i.if.then138_crit_edge:                 ; preds = %if.then38.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then138

if.end43.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %max_rx.1.i)
  %tobool44.not.i = icmp eq i32 %max_rx.1.i, 0
  br i1 %tobool44.not.i, label %if.end43.i.if.end91.i_crit_edge, label %if.end43.i.if.then45.i_crit_edge

if.end43.i.if.then45.i_crit_edge:                 ; preds = %if.end43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then45.i

if.end43.i.if.end91.i_crit_edge:                  ; preds = %if.end43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end91.i

if.end43.i.thread:                                ; preds = %if.then38.i
  %91 = ptrtoint ptr %dummy_tx.i to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr %call.i283, ptr %dummy_tx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %max_rx.1.i)
  %tobool44.not.i301 = icmp eq i32 %max_rx.1.i, 0
  br i1 %tobool44.not.i301, label %if.end43.i.thread.for.cond60.preheader.i_crit_edge, label %if.end43.i.thread.if.then45.i_crit_edge

if.end43.i.thread.if.then45.i_crit_edge:          ; preds = %if.end43.i.thread
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then45.i

if.end43.i.thread.for.cond60.preheader.i_crit_edge: ; preds = %if.end43.i.thread
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond60.preheader.i

if.then45.i:                                      ; preds = %if.end43.i.thread.if.then45.i_crit_edge, %if.end43.i.if.then45.i_crit_edge
  %dummy_rx.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 62
  %92 = ptrtoint ptr %dummy_rx.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %dummy_rx.i, align 8
  %call46.i = tail call noalias ptr @krealloc(ptr noundef %93, i32 noundef %max_rx.1.i, i32 noundef 3265) #29
  %tobool47.not.i = icmp eq ptr %call46.i, null
  br i1 %tobool47.not.i, label %if.then45.i.if.then138_crit_edge, label %if.end51.thread.i

if.then45.i.if.then138_crit_edge:                 ; preds = %if.then45.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then138

if.end51.thread.i:                                ; preds = %if.then45.i
  call void @__sanitizer_cov_trace_pc() #23
  %94 = ptrtoint ptr %dummy_rx.i to i32
  call void @__asan_store4_noabort(i32 %94)
  store ptr %call46.i, ptr %dummy_rx.i, align 8
  br label %for.cond60.preheader.i

for.cond60.preheader.i:                           ; preds = %if.end51.thread.i, %if.end43.i.thread.for.cond60.preheader.i_crit_edge
  %95 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %95)
  %.pn136147.i = load ptr, ptr %add.ptr, align 4
  %cmp63.not149.i = icmp eq ptr %.pn136147.i, %add.ptr
  br i1 %cmp63.not149.i, label %for.cond60.preheader.i.if.end91.i_crit_edge, label %for.body66.lr.ph.i

for.cond60.preheader.i.if.end91.i_crit_edge:      ; preds = %for.cond60.preheader.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end91.i

for.body66.lr.ph.i:                               ; preds = %for.cond60.preheader.i
  %dummy_tx74.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 63
  %dummy_rx80.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 62
  br label %for.body66.i

for.body66.i:                                     ; preds = %for.inc83.i.for.body66.i_crit_edge, %for.body66.lr.ph.i
  %.pn136150.i = phi ptr [ %.pn136147.i, %for.body66.lr.ph.i ], [ %.pn136.i, %for.inc83.i.for.body66.i_crit_edge ]
  %xfer.1151.i = getelementptr i8, ptr %.pn136150.i, i32 -84
  %len67.i = getelementptr i8, ptr %.pn136150.i, i32 -76
  %96 = ptrtoint ptr %len67.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %len67.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %97)
  %tobool68.not.i = icmp eq i32 %97, 0
  br i1 %tobool68.not.i, label %for.body66.i.for.inc83.i_crit_edge, label %if.end70.i

for.body66.i.for.inc83.i_crit_edge:               ; preds = %for.body66.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc83.i

if.end70.i:                                       ; preds = %for.body66.i
  %98 = ptrtoint ptr %xfer.1151.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %xfer.1151.i, align 4
  %tobool72.not.i = icmp eq ptr %99, null
  br i1 %tobool72.not.i, label %if.then73.i, label %if.end70.i.if.end76.i_crit_edge

if.end70.i.if.end76.i_crit_edge:                  ; preds = %if.end70.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end76.i

if.then73.i:                                      ; preds = %if.end70.i
  call void @__sanitizer_cov_trace_pc() #23
  %100 = ptrtoint ptr %dummy_tx74.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %dummy_tx74.i, align 4
  %102 = ptrtoint ptr %xfer.1151.i to i32
  call void @__asan_store4_noabort(i32 %102)
  store ptr %101, ptr %xfer.1151.i, align 4
  br label %if.end76.i

if.end76.i:                                       ; preds = %if.then73.i, %if.end70.i.if.end76.i_crit_edge
  %rx_buf77.i = getelementptr i8, ptr %.pn136150.i, i32 -80
  %103 = ptrtoint ptr %rx_buf77.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %rx_buf77.i, align 4
  %tobool78.not.i = icmp eq ptr %104, null
  br i1 %tobool78.not.i, label %if.then79.i, label %if.end76.i.for.inc83.i_crit_edge

if.end76.i.for.inc83.i_crit_edge:                 ; preds = %if.end76.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc83.i

if.then79.i:                                      ; preds = %if.end76.i
  call void @__sanitizer_cov_trace_pc() #23
  %105 = ptrtoint ptr %dummy_rx80.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %dummy_rx80.i, align 8
  %107 = ptrtoint ptr %rx_buf77.i to i32
  call void @__asan_store4_noabort(i32 %107)
  store ptr %106, ptr %rx_buf77.i, align 4
  br label %for.inc83.i

for.inc83.i:                                      ; preds = %if.then79.i, %if.end76.i.for.inc83.i_crit_edge, %for.body66.i.for.inc83.i_crit_edge
  %108 = ptrtoint ptr %.pn136150.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %.pn136.i = load ptr, ptr %.pn136150.i, align 4
  %cmp63.not.i = icmp eq ptr %.pn136.i, %add.ptr
  br i1 %cmp63.not.i, label %for.inc83.i.if.end91.i_crit_edge, label %for.inc83.i.for.body66.i_crit_edge

for.inc83.i.for.body66.i_crit_edge:               ; preds = %for.inc83.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body66.i

for.inc83.i.if.end91.i_crit_edge:                 ; preds = %for.inc83.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end91.i

if.end91.i:                                       ; preds = %for.inc83.i.if.end91.i_crit_edge, %for.cond60.preheader.i.if.end91.i_crit_edge, %if.end43.i.if.end91.i_crit_edge, %for.cond.preheader.i.if.end91.i_crit_edge, %land.lhs.true.i.if.end91.i_crit_edge, %if.end135.if.end91.i_crit_edge
  %can_dma.i.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 24
  %109 = ptrtoint ptr %can_dma.i.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %can_dma.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %110, null
  br i1 %tobool.not.i.i, label %if.end91.i.if.end140_crit_edge, label %if.end.i.i284

if.end91.i.if.end140_crit_edge:                   ; preds = %if.end91.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end140

if.end.i.i284:                                    ; preds = %if.end91.i
  %dma_tx.i.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 60
  %111 = ptrtoint ptr %dma_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %dma_tx.i.i, align 8
  %tobool1.not.i.i = icmp eq ptr %112, null
  br i1 %tobool1.not.i.i, label %if.else.i.i, label %if.then2.i.i

if.then2.i.i:                                     ; preds = %if.end.i.i284
  call void @__sanitizer_cov_trace_pc() #23
  %113 = ptrtoint ptr %112 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %112, align 4
  %dev.i.i = getelementptr inbounds %struct.dma_device, ptr %114, i32 0, i32 15
  %115 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %dev.i.i, align 4
  br label %if.end10.i.i

if.else.i.i:                                      ; preds = %if.end.i.i284
  %dma_map_dev.i.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 25
  %117 = ptrtoint ptr %dma_map_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %dma_map_dev.i.i, align 8
  %tobool4.not.i.i = icmp eq ptr %118, null
  br i1 %tobool4.not.i.i, label %if.else7.i.i, label %if.else.i.i.if.end10.i.i_crit_edge

if.else.i.i.if.end10.i.i_crit_edge:               ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end10.i.i

if.else7.i.i:                                     ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %parent.i.i = getelementptr inbounds %struct.device, ptr %ctlr, i32 0, i32 1
  %119 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %parent.i.i, align 8
  br label %if.end10.i.i

if.end10.i.i:                                     ; preds = %if.else7.i.i, %if.else.i.i.if.end10.i.i_crit_edge, %if.then2.i.i
  %tx_dev.0.i.i = phi ptr [ %116, %if.then2.i.i ], [ %120, %if.else7.i.i ], [ %118, %if.else.i.i.if.end10.i.i_crit_edge ]
  %dma_rx.i.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 61
  %121 = ptrtoint ptr %dma_rx.i.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %dma_rx.i.i, align 4
  %tobool11.not.i.i = icmp eq ptr %122, null
  br i1 %tobool11.not.i.i, label %if.else16.i.i, label %if.then12.i.i

if.then12.i.i:                                    ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %123 = ptrtoint ptr %122 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %122, align 4
  %dev15.i.i = getelementptr inbounds %struct.dma_device, ptr %124, i32 0, i32 15
  %125 = ptrtoint ptr %dev15.i.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %dev15.i.i, align 4
  br label %if.end25.i.i

if.else16.i.i:                                    ; preds = %if.end10.i.i
  %dma_map_dev17.i.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 25
  %127 = ptrtoint ptr %dma_map_dev17.i.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %dma_map_dev17.i.i, align 8
  %tobool18.not.i.i = icmp eq ptr %128, null
  br i1 %tobool18.not.i.i, label %if.else21.i.i, label %if.else16.i.i.if.end25.i.i_crit_edge

if.else16.i.i.if.end25.i.i_crit_edge:             ; preds = %if.else16.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end25.i.i

if.else21.i.i:                                    ; preds = %if.else16.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %parent23.i.i = getelementptr inbounds %struct.device, ptr %ctlr, i32 0, i32 1
  %129 = ptrtoint ptr %parent23.i.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %parent23.i.i, align 8
  br label %if.end25.i.i

if.end25.i.i:                                     ; preds = %if.else21.i.i, %if.else16.i.i.if.end25.i.i_crit_edge, %if.then12.i.i
  %rx_dev.0.i.i = phi ptr [ %126, %if.then12.i.i ], [ %130, %if.else21.i.i ], [ %128, %if.else16.i.i.if.end25.i.i_crit_edge ]
  %131 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %131)
  %.pn96.i.i = load ptr, ptr %add.ptr, align 4
  %cmp.not98.i.i = icmp eq ptr %.pn96.i.i, %add.ptr
  br i1 %cmp.not98.i.i, label %if.end25.i.i.for.end.i.i_crit_edge, label %for.body.lr.ph.i.i

if.end25.i.i.for.end.i.i_crit_edge:               ; preds = %if.end25.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i.i

for.body.lr.ph.i.i:                               ; preds = %if.end25.i.i
  %spi.i.i = getelementptr i8, ptr %7, i32 -28
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %.pn99.i.i = phi ptr [ %.pn96.i.i, %for.body.lr.ph.i.i ], [ %.pn.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %xfer.0100.i.i = getelementptr i8, ptr %.pn99.i.i, i32 -84
  %132 = ptrtoint ptr %can_dma.i.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %can_dma.i.i, align 4
  %134 = ptrtoint ptr %spi.i.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %spi.i.i, align 4
  %call.i.i285 = tail call zeroext i1 %133(ptr noundef %ctlr, ptr noundef %135, ptr noundef %xfer.0100.i.i) #21
  br i1 %call.i.i285, label %if.end29.i.i, label %for.body.i.i.for.inc.i.i_crit_edge

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i.i

if.end29.i.i:                                     ; preds = %for.body.i.i
  %136 = ptrtoint ptr %xfer.0100.i.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %xfer.0100.i.i, align 4
  %cmp30.not.i.i = icmp eq ptr %137, null
  br i1 %cmp30.not.i.i, label %if.end29.i.i.if.end37.i.i_crit_edge, label %if.then31.i.i

if.end29.i.i.if.end37.i.i_crit_edge:              ; preds = %if.end29.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end37.i.i

if.then31.i.i:                                    ; preds = %if.end29.i.i
  %tx_sg.i.i = getelementptr i8, ptr %.pn99.i.i, i32 -64
  %len.i.i = getelementptr i8, ptr %.pn99.i.i, i32 -76
  %138 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %len.i.i, align 4
  %call33.i.i = tail call i32 @spi_map_buf(ptr noundef %ctlr, ptr noundef %tx_dev.0.i.i, ptr noundef %tx_sg.i.i, ptr noundef nonnull %137, i32 noundef %139, i32 noundef 1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33.i.i)
  %cmp34.not.i.i = icmp eq i32 %call33.i.i, 0
  br i1 %cmp34.not.i.i, label %if.then31.i.i.if.end37.i.i_crit_edge, label %if.then31.i.i.if.then138_crit_edge

if.then31.i.i.if.then138_crit_edge:               ; preds = %if.then31.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then138

if.then31.i.i.if.end37.i.i_crit_edge:             ; preds = %if.then31.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end37.i.i

if.end37.i.i:                                     ; preds = %if.then31.i.i.if.end37.i.i_crit_edge, %if.end29.i.i.if.end37.i.i_crit_edge
  %rx_buf.i.i = getelementptr i8, ptr %.pn99.i.i, i32 -80
  %140 = ptrtoint ptr %rx_buf.i.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %rx_buf.i.i, align 4
  %cmp38.not.i.i = icmp eq ptr %141, null
  br i1 %cmp38.not.i.i, label %if.end37.i.i.for.inc.i.i_crit_edge, label %if.then39.i.i

if.end37.i.i.for.inc.i.i_crit_edge:               ; preds = %if.end37.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i.i

if.then39.i.i:                                    ; preds = %if.end37.i.i
  %rx_sg.i.i = getelementptr i8, ptr %.pn99.i.i, i32 -52
  %len41.i.i = getelementptr i8, ptr %.pn99.i.i, i32 -76
  %142 = ptrtoint ptr %len41.i.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %len41.i.i, align 4
  %call42.i.i = tail call i32 @spi_map_buf(ptr noundef %ctlr, ptr noundef %rx_dev.0.i.i, ptr noundef %rx_sg.i.i, ptr noundef nonnull %141, i32 noundef %143, i32 noundef 2) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42.i.i)
  %cmp43.not.i.i = icmp eq i32 %call42.i.i, 0
  br i1 %cmp43.not.i.i, label %if.then39.i.i.for.inc.i.i_crit_edge, label %if.then44.i.i

if.then39.i.i.for.inc.i.i_crit_edge:              ; preds = %if.then39.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i.i

if.then44.i.i:                                    ; preds = %if.then39.i.i
  %orig_nents.i.i.i = getelementptr i8, ptr %.pn99.i.i, i32 -56
  %144 = ptrtoint ptr %orig_nents.i.i.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %orig_nents.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %145)
  %tobool.not.i.i.i = icmp eq i32 %145, 0
  br i1 %tobool.not.i.i.i, label %if.then44.i.i.if.then138_crit_edge, label %if.then.i.i.i

if.then44.i.i.if.then138_crit_edge:               ; preds = %if.then44.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then138

if.then.i.i.i:                                    ; preds = %if.then44.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %tx_sg45.i.i = getelementptr i8, ptr %.pn99.i.i, i32 -64
  %146 = ptrtoint ptr %tx_sg45.i.i to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %tx_sg45.i.i, align 4
  tail call void @dma_unmap_sg_attrs(ptr noundef %tx_dev.0.i.i, ptr noundef %147, i32 noundef %145, i32 noundef 1, i32 noundef 0) #21
  tail call void @sg_free_table(ptr noundef %tx_sg45.i.i) #21
  br label %if.then138

for.inc.i.i:                                      ; preds = %if.then39.i.i.for.inc.i.i_crit_edge, %if.end37.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %148 = ptrtoint ptr %.pn99.i.i to i32
  call void @__asan_load4_noabort(i32 %148)
  %.pn.i.i = load ptr, ptr %.pn99.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, %add.ptr
  br i1 %cmp.not.i.i, label %for.inc.i.i.for.end.i.i_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.i

for.inc.i.i.for.end.i.i_crit_edge:                ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %for.inc.i.i.for.end.i.i_crit_edge, %if.end25.i.i.for.end.i.i_crit_edge
  %cur_msg_mapped.i.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 38
  %149 = ptrtoint ptr %cur_msg_mapped.i.i to i32
  call void @__asan_store1_noabort(i32 %149)
  store i8 1, ptr %cur_msg_mapped.i.i, align 2
  br label %if.end140

if.then138:                                       ; preds = %if.then.i.i.i, %if.then44.i.i.if.then138_crit_edge, %if.then31.i.i.if.then138_crit_edge, %if.then45.i.if.then138_crit_edge, %if.then38.i.if.then138_crit_edge
  %retval.0.i.ph = phi i32 [ %call42.i.i, %if.then.i.i.i ], [ %call42.i.i, %if.then44.i.i.if.then138_crit_edge ], [ -12, %if.then45.i.if.then138_crit_edge ], [ -12, %if.then38.i.if.then138_crit_edge ], [ %call33.i.i, %if.then31.i.i.if.then138_crit_edge ]
  %status139 = getelementptr i8, ptr %7, i32 -4
  %150 = ptrtoint ptr %status139 to i32
  call void @__asan_store4_noabort(i32 %150)
  store i32 %retval.0.i.ph, ptr %status139, align 4
  tail call void @spi_finalize_current_message(ptr noundef %ctlr)
  br label %out

if.end140:                                        ; preds = %for.end.i.i, %if.end91.i.if.end140_crit_edge
  %ptp_sts_supported = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 65
  %151 = ptrtoint ptr %ptp_sts_supported to i32
  call void @__asan_load1_noabort(i32 %151)
  %152 = load i8, ptr %ptp_sts_supported, align 4, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %152)
  %tobool141.not = icmp eq i8 %152, 0
  br i1 %tobool141.not, label %land.lhs.true142, label %if.end140.if.end157_crit_edge

if.end140.if.end157_crit_edge:                    ; preds = %if.end140
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end157

land.lhs.true142:                                 ; preds = %if.end140
  %transfer_one = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 51
  %153 = ptrtoint ptr %transfer_one to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %transfer_one, align 4
  %tobool143.not = icmp eq ptr %154, null
  br i1 %tobool143.not, label %for.cond.preheader, label %land.lhs.true142.if.end157_crit_edge

land.lhs.true142.if.end157_crit_edge:             ; preds = %land.lhs.true142
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end157

for.cond.preheader:                               ; preds = %land.lhs.true142
  %155 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %155)
  %.pn296 = load ptr, ptr %add.ptr, align 4
  %cmp150.not297 = icmp eq ptr %.pn296, %add.ptr
  br i1 %cmp150.not297, label %for.cond.preheader.if.end157_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.if.end157_crit_edge:           ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end157

for.body:                                         ; preds = %ptp_read_system_prets.exit.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %.pn298 = phi ptr [ %.pn, %ptp_read_system_prets.exit.for.body_crit_edge ], [ %.pn296, %for.cond.preheader.for.body_crit_edge ]
  %ptp_sts_word_pre = getelementptr i8, ptr %.pn298, i32 -16
  %156 = ptrtoint ptr %ptp_sts_word_pre to i32
  call void @__asan_store4_noabort(i32 %156)
  store i32 0, ptr %ptp_sts_word_pre, align 4
  %ptp_sts = getelementptr i8, ptr %.pn298, i32 -8
  %157 = ptrtoint ptr %ptp_sts to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %ptp_sts, align 4
  %tobool.not.i286 = icmp eq ptr %158, null
  br i1 %tobool.not.i286, label %for.body.ptp_read_system_prets.exit_crit_edge, label %if.then.i287

for.body.ptp_read_system_prets.exit_crit_edge:    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %ptp_read_system_prets.exit

if.then.i287:                                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @ktime_get_real_ts64(ptr noundef nonnull %158) #21
  br label %ptp_read_system_prets.exit

ptp_read_system_prets.exit:                       ; preds = %if.then.i287, %for.body.ptp_read_system_prets.exit_crit_edge
  %159 = ptrtoint ptr %.pn298 to i32
  call void @__asan_load4_noabort(i32 %159)
  %.pn = load ptr, ptr %.pn298, align 4
  %cmp150.not = icmp eq ptr %.pn, %add.ptr
  br i1 %cmp150.not, label %ptp_read_system_prets.exit.if.end157_crit_edge, label %ptp_read_system_prets.exit.for.body_crit_edge

ptp_read_system_prets.exit.for.body_crit_edge:    ; preds = %ptp_read_system_prets.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

ptp_read_system_prets.exit.if.end157_crit_edge:   ; preds = %ptp_read_system_prets.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end157

if.end157:                                        ; preds = %ptp_read_system_prets.exit.if.end157_crit_edge, %for.cond.preheader.if.end157_crit_edge, %land.lhs.true142.if.end157_crit_edge, %if.end140.if.end157_crit_edge
  %transfer_one_message = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 45
  %160 = ptrtoint ptr %transfer_one_message to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %transfer_one_message, align 4
  %call158 = tail call i32 %161(ptr noundef %ctlr, ptr noundef %add.ptr) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call158)
  %tobool159.not = icmp eq i32 %call158, 0
  br i1 %tobool159.not, label %if.then168.critedge, label %do.end163

do.end163:                                        ; preds = %if.end157
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %ctlr, ptr noundef nonnull @.str.163) #26
  br label %out

out:                                              ; preds = %do.end163, %if.then138, %do.end131
  tail call void @mutex_unlock(ptr noundef %io_mutex) #21
  br label %cleanup

if.then168.critedge:                              ; preds = %if.end157
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @mutex_unlock(ptr noundef %io_mutex) #21
  tail call void @__might_resched(ptr noundef nonnull @.str.3, i32 noundef 1700, i32 noundef 0) #21
  %call.i289 = tail call i32 @__cond_resched() #21
  br label %cleanup

cleanup:                                          ; preds = %if.then168.critedge, %out, %if.end119, %if.then88, %spi_idle_runtime_pm.exit, %if.end30, %if.then16, %if.then7, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @spi_new_ancillary_device(ptr noundef %spi, i8 noundef zeroext %chip_select) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %controller = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 1
  %0 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %controller, align 8
  %call = tail call fastcc ptr @spi_alloc_device(ptr noundef %1)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.spi_dev_put.exit_crit_edge, label %if.end

entry.spi_dev_put.exit_crit_edge:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_dev_put.exit

if.end:                                           ; preds = %entry
  %modalias = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 11
  %call1 = tail call i32 @strlcpy(ptr noundef %modalias, ptr noundef nonnull @.str.10, i32 noundef 32) #21
  %chip_select2 = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 4
  %2 = ptrtoint ptr %chip_select2 to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 %chip_select, ptr %chip_select2, align 4
  %max_speed_hz = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 3
  %3 = ptrtoint ptr %max_speed_hz to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %max_speed_hz, align 8
  %max_speed_hz3 = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 3
  %5 = ptrtoint ptr %max_speed_hz3 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %max_speed_hz3, align 8
  %mode = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 7
  %6 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %mode, align 8
  %mode4 = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 7
  %8 = ptrtoint ptr %mode4 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %mode4, align 8
  %controller.i = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 1
  %9 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %controller.i, align 8
  %conv.i = zext i8 %chip_select to i32
  %num_chipselect.i = getelementptr inbounds %struct.spi_controller, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %num_chipselect.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %num_chipselect.i, align 2
  %conv2.i = zext i16 %12 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i, i32 %conv2.i)
  %cmp.not.i = icmp ult i32 %conv.i, %conv2.i
  br i1 %cmp.not.i, label %if.end.i, label %spi_add_device_locked.exit.thread

spi_add_device_locked.exit.thread:                ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %parent.i = getelementptr inbounds %struct.device, ptr %10, i32 0, i32 1
  %13 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %parent.i, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %14, ptr noundef nonnull @.str.132, i32 noundef %conv.i, i32 noundef %conv2.i) #26
  br label %if.then.i

if.end.i:                                         ; preds = %if.end
  %init_name.i.i.i = getelementptr inbounds %struct.device, ptr %10, i32 0, i32 3
  %15 = ptrtoint ptr %init_name.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %init_name.i.i.i, align 8
  %tobool.not.i.i.i = icmp eq ptr %16, null
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.end.i.spi_dev_set_name.exit.i_crit_edge

if.end.i.spi_dev_set_name.exit.i_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_dev_set_name.exit.i

if.end.i.i.i:                                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %17 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %10, align 4
  br label %spi_dev_set_name.exit.i

spi_dev_set_name.exit.i:                          ; preds = %if.end.i.i.i, %if.end.i.spi_dev_set_name.exit.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %18, %if.end.i.i.i ], [ %16, %if.end.i.spi_dev_set_name.exit.i_crit_edge ]
  %call5.i.i = tail call i32 (ptr, ptr, ...) @dev_set_name(ptr noundef nonnull %call, ptr noundef nonnull @.str.135, ptr noundef %retval.0.i.i.i, i32 noundef %conv.i) #21
  %add_lock.i = getelementptr inbounds %struct.spi_controller, ptr %10, i32 0, i32 16
  %call.i = tail call zeroext i1 @mutex_is_locked(ptr noundef %add_lock.i) #21
  br i1 %call.i, label %spi_dev_set_name.exit.i.spi_add_device_locked.exit_crit_edge, label %do.end19.i, !prof !730

spi_dev_set_name.exit.i.spi_add_device_locked.exit_crit_edge: ; preds = %spi_dev_set_name.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_add_device_locked.exit

do.end19.i:                                       ; preds = %spi_dev_set_name.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 692, i32 noundef 9, ptr noundef null) #21
  br label %spi_add_device_locked.exit

spi_add_device_locked.exit:                       ; preds = %do.end19.i, %spi_dev_set_name.exit.i.spi_add_device_locked.exit_crit_edge
  %call32.i = tail call fastcc i32 @__spi_add_device(ptr noundef nonnull %call) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call32.i)
  %tobool6.not = icmp eq i32 %call32.i, 0
  br i1 %tobool6.not, label %spi_add_device_locked.exit.cleanup_crit_edge, label %spi_add_device_locked.exit.if.then.i_crit_edge

spi_add_device_locked.exit.if.then.i_crit_edge:   ; preds = %spi_add_device_locked.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then.i

spi_add_device_locked.exit.cleanup_crit_edge:     ; preds = %spi_add_device_locked.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then.i:                                        ; preds = %spi_add_device_locked.exit.if.then.i_crit_edge, %spi_add_device_locked.exit.thread
  %retval.0.i25 = phi i32 [ -22, %spi_add_device_locked.exit.thread ], [ %call32.i, %spi_add_device_locked.exit.if.then.i_crit_edge ]
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %spi, ptr noundef nonnull @.str.11) #26
  tail call void @put_device(ptr noundef nonnull %call) #21
  br label %spi_dev_put.exit

spi_dev_put.exit:                                 ; preds = %if.then.i, %entry.spi_dev_put.exit_crit_edge
  %rc.027 = phi i32 [ %retval.0.i25, %if.then.i ], [ -12, %entry.spi_dev_put.exit_crit_edge ]
  %19 = inttoptr i32 %rc.027 to ptr
  br label %cleanup

cleanup:                                          ; preds = %spi_dev_put.exit, %spi_add_device_locked.exit.cleanup_crit_edge
  %retval.0 = phi ptr [ %19, %spi_dev_put.exit ], [ %call, %spi_add_device_locked.exit.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @spi_slave_abort(ptr nocapture noundef readonly %spi) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %controller = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 1
  %0 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %controller, align 8
  %slave.i = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 12
  %2 = ptrtoint ptr %slave.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %slave.i, align 1, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.i.not = icmp eq i8 %3, 0
  br i1 %tobool.i.not, label %entry.cleanup_crit_edge, label %land.lhs.true

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

land.lhs.true:                                    ; preds = %entry
  %slave_abort = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 49
  %4 = ptrtoint ptr %slave_abort to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %slave_abort, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %land.lhs.true.cleanup_crit_edge, label %if.then

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  %call2 = tail call i32 %5(ptr noundef %1) #21
  br label %cleanup

cleanup:                                          ; preds = %if.then, %land.lhs.true.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.then ], [ -524, %land.lhs.true.cleanup_crit_edge ], [ -524, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__spi_alloc_controller(ptr noundef %dev, i32 noundef %size, i1 noundef zeroext %slave) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %frombool = zext i1 %slave to i8
  %tobool.not = icmp eq ptr %dev, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end8.i.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end8.i.i:                                      ; preds = %entry
  %add3 = add i32 %size, 1792
  %call9.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add3, i32 noundef 3520) #28
  %tobool5.not = icmp eq ptr %call9.i.i, null
  br i1 %tobool5.not, label %if.end8.i.i.cleanup_crit_edge, label %if.end7

if.end8.i.i.cleanup_crit_edge:                    ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end7:                                          ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @device_initialize(ptr noundef nonnull %call9.i.i) #21
  %queue = getelementptr inbounds %struct.spi_controller, ptr %call9.i.i, i32 0, i32 30
  %0 = ptrtoint ptr %queue to i32
  call void @__asan_store4_noabort(i32 %0)
  store volatile ptr %queue, ptr %queue, align 4
  %prev.i = getelementptr inbounds %struct.spi_controller, ptr %call9.i.i, i32 0, i32 30, i32 1
  %1 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %queue, ptr %prev.i, align 8
  %queue_lock = getelementptr inbounds %struct.spi_controller, ptr %call9.i.i, i32 0, i32 29
  tail call void @__raw_spin_lock_init(ptr noundef %queue_lock, ptr noundef nonnull @.str.13, ptr noundef nonnull @__spi_alloc_controller.__key, i16 noundef signext 3) #21
  %bus_lock_spinlock = getelementptr inbounds %struct.spi_controller, ptr %call9.i.i, i32 0, i32 17
  tail call void @__raw_spin_lock_init(ptr noundef %bus_lock_spinlock, ptr noundef nonnull @.str.15, ptr noundef nonnull @__spi_alloc_controller.__key.14, i16 noundef signext 3) #21
  %bus_lock_mutex = getelementptr inbounds %struct.spi_controller, ptr %call9.i.i, i32 0, i32 18
  tail call void @__mutex_init(ptr noundef %bus_lock_mutex, ptr noundef nonnull @.str.17, ptr noundef nonnull @__spi_alloc_controller.__key.16) #21
  %io_mutex = getelementptr inbounds %struct.spi_controller, ptr %call9.i.i, i32 0, i32 15
  tail call void @__mutex_init(ptr noundef %io_mutex, ptr noundef nonnull @.str.19, ptr noundef nonnull @__spi_alloc_controller.__key.18) #21
  %add_lock = getelementptr inbounds %struct.spi_controller, ptr %call9.i.i, i32 0, i32 16
  tail call void @__mutex_init(ptr noundef %add_lock, ptr noundef nonnull @.str.21, ptr noundef nonnull @__spi_alloc_controller.__key.20) #21
  %bus_num = getelementptr inbounds %struct.spi_controller, ptr %call9.i.i, i32 0, i32 2
  %2 = ptrtoint ptr %bus_num to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 -1, ptr %bus_num, align 8
  %num_chipselect = getelementptr inbounds %struct.spi_controller, ptr %call9.i.i, i32 0, i32 3
  %3 = ptrtoint ptr %num_chipselect to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 1, ptr %num_chipselect, align 2
  %slave24 = getelementptr inbounds %struct.spi_controller, ptr %call9.i.i, i32 0, i32 12
  %4 = ptrtoint ptr %slave24 to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %frombool, ptr %slave24, align 1
  %spec.select = select i1 %slave, ptr @spi_slave_class, ptr @spi_master_class
  %5 = getelementptr inbounds %struct.device, ptr %call9.i.i, i32 0, i32 33
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %spec.select, ptr %5, align 4
  %parent = getelementptr inbounds %struct.device, ptr %call9.i.i, i32 0, i32 1
  %7 = ptrtoint ptr %parent to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %dev, ptr %parent, align 8
  %ignore_children.i = getelementptr inbounds %struct.device, ptr %call9.i.i, i32 0, i32 12, i32 15
  %8 = ptrtoint ptr %ignore_children.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %bf.load.i = load i16, ptr %ignore_children.i, align 4
  %bf.set.i = or i16 %bf.load.i, 128
  store i16 %bf.set.i, ptr %ignore_children.i, align 4
  %add.ptr = getelementptr i8, ptr %call9.i.i, i32 1792
  %driver_data.i.i = getelementptr inbounds %struct.device, ptr %call9.i.i, i32 0, i32 8
  %9 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %add.ptr, ptr %driver_data.i.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.end8.i.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %call9.i.i, %if.end7 ], [ null, %entry.cleanup_crit_edge ], [ null, %if.end8.i.i.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_initialize(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__devm_spi_alloc_controller(ptr noundef %dev, i32 noundef %size, i1 noundef zeroext %slave) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call noalias ptr @__devres_alloc_node(ptr noundef nonnull @devm_spi_release_controller, i32 noundef 4, i32 noundef 3264, i32 noundef -1, ptr noundef nonnull @.str.22) #21
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %call2 = tail call ptr @__spi_alloc_controller(ptr noundef %dev, i32 noundef %size, i1 noundef zeroext %slave)
  %tobool3.not = icmp eq ptr %call2, null
  br i1 %tobool3.not, label %if.else, label %if.then4

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %devm_allocated = getelementptr inbounds %struct.spi_controller, ptr %call2, i32 0, i32 11
  %0 = ptrtoint ptr %devm_allocated to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 1, ptr %devm_allocated, align 2
  %1 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %call2, ptr %call, align 4
  tail call void @devres_add(ptr noundef %dev, ptr noundef nonnull %call) #21
  br label %cleanup

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @devres_free(ptr noundef nonnull %call) #21
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then4, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %entry.cleanup_crit_edge ], [ null, %if.else ], [ %call2, %if.then4 ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @__devres_alloc_node(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @devm_spi_release_controller(ptr nocapture noundef readnone %dev, ptr nocapture noundef readonly %ctlr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ctlr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ctlr, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.spi_controller_put.exit_crit_edge, label %if.then.i

entry.spi_controller_put.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_controller_put.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @put_device(ptr noundef nonnull %1) #21
  br label %spi_controller_put.exit

spi_controller_put.exit:                          ; preds = %if.then.i, %entry.spi_controller_put.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @devres_add(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @devres_free(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @spi_register_controller(ptr noundef %ctlr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %parent = getelementptr inbounds %struct.device, ptr %ctlr, i32 0, i32 1
  %0 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %mem_ops.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 53
  %2 = ptrtoint ptr %mem_ops.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mem_ops.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  %exec_op.i = getelementptr inbounds %struct.spi_controller_mem_ops, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %exec_op.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %exec_op.i, align 4
  %tobool2.not.i = icmp eq ptr %5, null
  br i1 %tobool2.not.i, label %if.then.i.cleanup_crit_edge, label %if.then.i.if.end4_crit_edge

if.then.i.if.end4_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end4

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.else.i:                                        ; preds = %if.end
  %transfer.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 22
  %6 = ptrtoint ptr %transfer.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %transfer.i, align 4
  %tobool4.not.i = icmp eq ptr %7, null
  br i1 %tobool4.not.i, label %land.lhs.true.i, label %if.else.i.if.end4_crit_edge

if.else.i.if.end4_crit_edge:                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end4

land.lhs.true.i:                                  ; preds = %if.else.i
  %transfer_one.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 51
  %8 = ptrtoint ptr %transfer_one.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %transfer_one.i, align 4
  %tobool5.not.i = icmp eq ptr %9, null
  br i1 %tobool5.not.i, label %land.lhs.true6.i, label %land.lhs.true.i.if.end4_crit_edge

land.lhs.true.i.if.end4_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end4

land.lhs.true6.i:                                 ; preds = %land.lhs.true.i
  %transfer_one_message.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 45
  %10 = ptrtoint ptr %transfer_one_message.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %transfer_one_message.i, align 4
  %tobool7.not.i = icmp eq ptr %11, null
  br i1 %tobool7.not.i, label %land.lhs.true6.i.cleanup_crit_edge, label %land.lhs.true6.i.if.end4_crit_edge

land.lhs.true6.i.if.end4_crit_edge:               ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end4

land.lhs.true6.i.cleanup_crit_edge:               ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end4:                                          ; preds = %land.lhs.true6.i.if.end4_crit_edge, %land.lhs.true.i.if.end4_crit_edge, %if.else.i.if.end4_crit_edge, %if.then.i.if.end4_crit_edge
  %bus_num = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 2
  %12 = ptrtoint ptr %bus_num to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %bus_num, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %13)
  %cmp = icmp sgt i16 %13, -1
  br i1 %cmp, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.end4
  tail call void @mutex_lock_nested(ptr noundef nonnull @board_lock, i32 noundef 0) #21
  %14 = ptrtoint ptr %bus_num to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %bus_num, align 8
  %conv8 = sext i16 %15 to i32
  %add = add nsw i32 %conv8, 1
  %call11 = tail call i32 @idr_alloc(ptr noundef nonnull @spi_master_idr, ptr noundef %ctlr, i32 noundef %conv8, i32 noundef %add, i32 noundef 3264) #21
  tail call void @mutex_unlock(ptr noundef nonnull @board_lock) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %cmp12 = icmp slt i32 %call11, 0
  br i1 %cmp12, label %do.end, label %if.end39, !prof !731

do.end:                                           ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2914, i32 noundef 9, ptr noundef nonnull @.str.23) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 -28, i32 %call11)
  %cmp37 = icmp eq i32 %call11, -28
  %cond = select i1 %cmp37, i32 -16, i32 %call11
  br label %cleanup

if.end39:                                         ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #23
  %conv40 = trunc i32 %call11 to i16
  %16 = ptrtoint ptr %bus_num to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 %conv40, ptr %bus_num, align 8
  br label %if.end102

if.else:                                          ; preds = %if.end4
  %of_node = getelementptr inbounds %struct.device, ptr %ctlr, i32 0, i32 27
  %17 = ptrtoint ptr %of_node to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %of_node, align 8
  %tobool43.not = icmp eq ptr %18, null
  br i1 %tobool43.not, label %if.else.if.end102thread-pre-split_crit_edge, label %if.then44

if.else.if.end102thread-pre-split_crit_edge:      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end102thread-pre-split

if.then44:                                        ; preds = %if.else
  %call47 = tail call i32 @of_alias_get_id(ptr noundef nonnull %18, ptr noundef nonnull @.str) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call47)
  %cmp48 = icmp sgt i32 %call47, -1
  br i1 %cmp48, label %if.then50, label %if.then44.if.end102thread-pre-split_crit_edge

if.then44.if.end102thread-pre-split_crit_edge:    ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end102thread-pre-split

if.then50:                                        ; preds = %if.then44
  %conv51 = trunc i32 %call47 to i16
  %19 = ptrtoint ptr %bus_num to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 %conv51, ptr %bus_num, align 8
  tail call void @mutex_lock_nested(ptr noundef nonnull @board_lock, i32 noundef 0) #21
  %20 = ptrtoint ptr %bus_num to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %bus_num, align 8
  %conv54 = sext i16 %21 to i32
  %add57 = add nsw i32 %conv54, 1
  %call58 = tail call i32 @idr_alloc(ptr noundef nonnull @spi_master_idr, ptr noundef %ctlr, i32 noundef %conv54, i32 noundef %add57, i32 noundef 3264) #21
  tail call void @mutex_unlock(ptr noundef nonnull @board_lock) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %cmp60 = icmp slt i32 %call58, 0
  br i1 %cmp60, label %do.end77, label %if.then50.if.end102thread-pre-split_crit_edge, !prof !731

if.then50.if.end102thread-pre-split_crit_edge:    ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end102thread-pre-split

do.end77:                                         ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2926, i32 noundef 9, ptr noundef nonnull @.str.23) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 -28, i32 %call58)
  %cmp93 = icmp eq i32 %call58, -28
  %cond98 = select i1 %cmp93, i32 -16, i32 %call58
  br label %cleanup

if.end102thread-pre-split:                        ; preds = %if.then50.if.end102thread-pre-split_crit_edge, %if.then44.if.end102thread-pre-split_crit_edge, %if.else.if.end102thread-pre-split_crit_edge
  %22 = ptrtoint ptr %bus_num to i32
  call void @__asan_load2_noabort(i32 %22)
  %.pr = load i16, ptr %bus_num, align 8
  br label %if.end102

if.end102:                                        ; preds = %if.end102thread-pre-split, %if.end39
  %23 = phi i16 [ %.pr, %if.end102thread-pre-split ], [ %conv40, %if.end39 ]
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %23)
  %cmp105 = icmp slt i16 %23, 0
  br i1 %cmp105, label %if.then107, label %if.end102.if.end152_crit_edge

if.end102.if.end152_crit_edge:                    ; preds = %if.end102
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end152

if.then107:                                       ; preds = %if.end102
  %call108 = tail call i32 @of_alias_get_highest_id(ptr noundef nonnull @.str) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call108)
  %cmp109 = icmp slt i32 %call108, 0
  %inc = add i32 %call108, 1
  %first_dynamic.0 = select i1 %cmp109, i32 0, i32 %inc
  tail call void @mutex_lock_nested(ptr noundef nonnull @board_lock, i32 noundef 0) #21
  %call114 = tail call i32 @idr_alloc(ptr noundef nonnull @spi_master_idr, ptr noundef %ctlr, i32 noundef %first_dynamic.0, i32 noundef 0, i32 noundef 3264) #21
  tail call void @mutex_unlock(ptr noundef nonnull @board_lock) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call114)
  %cmp116 = icmp slt i32 %call114, 0
  br i1 %cmp116, label %do.end133, label %if.end149, !prof !731

do.end133:                                        ; preds = %if.then107
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2941, i32 noundef 9, ptr noundef nonnull @.str.23) #21
  br label %cleanup

if.end149:                                        ; preds = %if.then107
  call void @__sanitizer_cov_trace_pc() #23
  %conv150 = trunc i32 %call114 to i16
  %24 = ptrtoint ptr %bus_num to i32
  call void @__asan_store2_noabort(i32 %24)
  store i16 %conv150, ptr %bus_num, align 8
  br label %if.end152

if.end152:                                        ; preds = %if.end149, %if.end102.if.end152_crit_edge
  %bus_lock_flag = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 19
  %25 = ptrtoint ptr %bus_lock_flag to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 0, ptr %bus_lock_flag, align 8
  %xfer_completion = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 42
  %26 = ptrtoint ptr %xfer_completion to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 0, ptr %xfer_completion, align 4
  %wait.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 42, i32 1
  tail call void @__init_swait_queue_head(ptr noundef %wait.i, ptr noundef nonnull @.str.171, ptr noundef nonnull @init_completion.__key) #21
  %max_dma_len = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 43
  %27 = ptrtoint ptr %max_dma_len to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %max_dma_len, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool153.not = icmp eq i32 %28, 0
  br i1 %tobool153.not, label %if.then154, label %if.end152.if.end156_crit_edge

if.end152.if.end156_crit_edge:                    ; preds = %if.end152
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end156

if.then154:                                       ; preds = %if.end152
  call void @__sanitizer_cov_trace_pc() #23
  %29 = ptrtoint ptr %max_dma_len to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 2147483647, ptr %max_dma_len, align 4
  br label %if.end156

if.end156:                                        ; preds = %if.then154, %if.end152.if.end156_crit_edge
  %30 = ptrtoint ptr %bus_num to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %bus_num, align 8
  %conv159 = sext i16 %31 to i32
  %call160 = tail call i32 (ptr, ptr, ...) @dev_set_name(ptr noundef %ctlr, ptr noundef nonnull @.str.24, i32 noundef %conv159) #21
  %slave.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 12
  %32 = ptrtoint ptr %slave.i to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %slave.i, align 1, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %33)
  %tobool.i.not = icmp eq i8 %33, 0
  br i1 %tobool.i.not, label %if.then162, label %if.end156.if.end175_crit_edge

if.end156.if.end175_crit_edge:                    ; preds = %if.end156
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end175

if.then162:                                       ; preds = %if.end156
  %use_gpio_descriptors = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 56
  %34 = ptrtoint ptr %use_gpio_descriptors to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %use_gpio_descriptors, align 8, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %35)
  %tobool163.not = icmp eq i8 %35, 0
  br i1 %tobool163.not, label %if.else169, label %if.then164

if.then164:                                       ; preds = %if.then162
  %call.i = tail call i32 @gpiod_count(ptr noundef %ctlr, ptr noundef nonnull @.str.172) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp slt i32 %call.i, 0
  br i1 %cmp.i, label %if.then.i313, label %if.end4.i

if.then.i313:                                     ; preds = %if.then164
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %call.i)
  %cmp2.i = icmp eq i32 %call.i, -2
  br i1 %cmp2.i, label %if.then.i313.if.end168_crit_edge, label %if.then.i313.free_bus_id_crit_edge

if.then.i313.free_bus_id_crit_edge:               ; preds = %if.then.i313
  call void @__sanitizer_cov_trace_pc() #23
  br label %free_bus_id

if.then.i313.if.end168_crit_edge:                 ; preds = %if.then.i313
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end168

if.end4.i:                                        ; preds = %if.then164
  %num_chipselect.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 3
  %36 = ptrtoint ptr %num_chipselect.i to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %num_chipselect.i, align 2
  %conv.i = zext i16 %37 to i32
  %38 = tail call i32 @llvm.umax.i32(i32 %call.i, i32 %conv.i) #21
  %conv7.i = trunc i32 %38 to i16
  %39 = ptrtoint ptr %num_chipselect.i to i32
  call void @__asan_store2_noabort(i32 %39)
  store i16 %conv7.i, ptr %num_chipselect.i, align 2
  %conv10.i = shl i32 %38, 2
  %40 = and i32 %conv10.i, 262140
  %call5.i.i.i = tail call noalias ptr @devm_kmalloc(ptr noundef %ctlr, i32 noundef %40, i32 noundef 3520) #21
  %tobool.not.i314 = icmp eq ptr %call5.i.i.i, null
  br i1 %tobool.not.i314, label %if.end4.i.free_bus_id_crit_edge, label %if.end13.i

if.end4.i.free_bus_id_crit_edge:                  ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %free_bus_id

if.end13.i:                                       ; preds = %if.end4.i
  %cs_gpiods.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 55
  %41 = ptrtoint ptr %cs_gpiods.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %call5.i.i.i, ptr %cs_gpiods.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp14130.not.i = icmp eq i32 %call.i, 0
  br i1 %cmp14130.not.i, label %if.end13.i.for.end.thread.i_crit_edge, label %for.body.lr.ph.i

if.end13.i.for.end.thread.i_crit_edge:            ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.thread.i

for.body.lr.ph.i:                                 ; preds = %if.end13.i
  %init_name.i.i = getelementptr inbounds %struct.device, ptr %ctlr, i32 0, i32 3
  %max_native_cs.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 58
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %num_cs_gpios.0134.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %num_cs_gpios.2.i, %for.inc.i.for.body.i_crit_edge ]
  %native_cs_mask.0133.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %native_cs_mask.1.i, %for.inc.i.for.body.i_crit_edge ]
  %i.0131.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc42.i, %for.inc.i.for.body.i_crit_edge ]
  %call16.i = tail call ptr @devm_gpiod_get_index_optional(ptr noundef %ctlr, ptr noundef nonnull @.str.172, i32 noundef %i.0131.i, i32 noundef 3) #21
  %arrayidx.i = getelementptr ptr, ptr %call5.i.i.i, i32 %i.0131.i
  %42 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %call16.i, ptr %arrayidx.i, align 4
  %cmp.i.i = icmp ugt ptr %call16.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %spi_get_gpio_descs.exit, label %if.end22.i

if.end22.i:                                       ; preds = %for.body.i
  %tobool24.not.i = icmp eq ptr %call16.i, null
  br i1 %tobool24.not.i, label %if.end33.i, label %if.then25.i

if.then25.i:                                      ; preds = %if.end22.i
  %43 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %44, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then25.i.dev_name.exit.i_crit_edge

if.then25.i.dev_name.exit.i_crit_edge:            ; preds = %if.then25.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %dev_name.exit.i

if.end.i.i:                                       ; preds = %if.then25.i
  call void @__sanitizer_cov_trace_pc() #23
  %45 = ptrtoint ptr %ctlr to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %ctlr, align 4
  br label %dev_name.exit.i

dev_name.exit.i:                                  ; preds = %if.end.i.i, %if.then25.i.dev_name.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %46, %if.end.i.i ], [ %44, %if.then25.i.dev_name.exit.i_crit_edge ]
  %call27.i = tail call noalias ptr (ptr, i32, ptr, ...) @devm_kasprintf(ptr noundef %ctlr, i32 noundef 3264, ptr noundef nonnull @.str.173, ptr noundef %retval.0.i.i, i32 noundef %i.0131.i) #21
  %tobool28.not.i = icmp eq ptr %call27.i, null
  br i1 %tobool28.not.i, label %dev_name.exit.i.free_bus_id_crit_edge, label %cleanup.i

dev_name.exit.i.free_bus_id_crit_edge:            ; preds = %dev_name.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %free_bus_id

cleanup.i:                                        ; preds = %dev_name.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  %47 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %arrayidx.i, align 4
  %call32.i = tail call i32 @gpiod_set_consumer_name(ptr noundef %48, ptr noundef nonnull %call27.i) #21
  %inc.i = add i32 %num_cs_gpios.0134.i, 1
  br label %for.inc.i

if.end33.i:                                       ; preds = %if.end22.i
  %49 = ptrtoint ptr %max_native_cs.i to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %max_native_cs.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %50)
  %tobool35.not.i = icmp eq i8 %50, 0
  %conv34.i = sext i8 %50 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0131.i, i32 %conv34.i)
  %cmp38.not.i = icmp slt i32 %i.0131.i, %conv34.i
  %or.cond.i = or i1 %tobool35.not.i, %cmp38.not.i
  br i1 %or.cond.i, label %if.end41.i, label %do.end.i

do.end.i:                                         ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %ctlr, ptr noundef nonnull @.str.174, i32 noundef %i.0131.i) #26
  br label %free_bus_id

if.end41.i:                                       ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #23
  %shl.i = shl nuw i32 1, %i.0131.i
  %or.i = or i32 %shl.i, %native_cs_mask.0133.i
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end41.i, %cleanup.i
  %native_cs_mask.1.i = phi i32 [ %native_cs_mask.0133.i, %cleanup.i ], [ %or.i, %if.end41.i ]
  %num_cs_gpios.2.i = phi i32 [ %inc.i, %cleanup.i ], [ %num_cs_gpios.0134.i, %if.end41.i ]
  %inc42.i = add nuw nsw i32 %i.0131.i, 1
  %exitcond.not.i = icmp eq i32 %inc42.i, %call.i
  br i1 %exitcond.not.i, label %for.end.i, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.end.i:                                        ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  %neg.i = xor i32 %native_cs_mask.1.i, -1
  %51 = tail call i32 @llvm.cttz.i32(i32 %neg.i, i1 true) #21, !range !747
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %native_cs_mask.1.i)
  %iszero.i = icmp eq i32 %native_cs_mask.1.i, -1
  %52 = trunc i32 %51 to i8
  %spec.select.i = select i1 %iszero.i, i8 -1, i8 %52
  br label %for.end.thread.i

for.end.thread.i:                                 ; preds = %for.end.i, %if.end13.i.for.end.thread.i_crit_edge
  %num_cs_gpios.0.lcssa146.i = phi i32 [ 0, %if.end13.i.for.end.thread.i_crit_edge ], [ %num_cs_gpios.2.i, %for.end.i ]
  %53 = phi i8 [ 0, %if.end13.i.for.end.thread.i_crit_edge ], [ %spec.select.i, %for.end.i ]
  %unused_native_cs.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 57
  %54 = ptrtoint ptr %unused_native_cs.i to i32
  call void @__asan_store1_noabort(i32 %54)
  store i8 %53, ptr %unused_native_cs.i, align 1
  %flags.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 10
  %55 = ptrtoint ptr %flags.i to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %flags.i, align 4
  %57 = and i16 %56, 32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %57)
  %tobool45.not.i = icmp eq i16 %57, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %num_cs_gpios.0.lcssa146.i)
  %tobool47.not.i = icmp eq i32 %num_cs_gpios.0.lcssa146.i, 0
  %or.cond114.i = select i1 %tobool45.not.i, i1 true, i1 %tobool47.not.i
  br i1 %or.cond114.i, label %for.end.thread.i.if.end168_crit_edge, label %land.lhs.true48.i

for.end.thread.i.if.end168_crit_edge:             ; preds = %for.end.thread.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end168

land.lhs.true48.i:                                ; preds = %for.end.thread.i
  %max_native_cs49.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 58
  %58 = ptrtoint ptr %max_native_cs49.i to i32
  call void @__asan_load1_noabort(i32 %58)
  %59 = load i8, ptr %max_native_cs49.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %59)
  %tobool51.not.i = icmp eq i8 %59, 0
  call void @__sanitizer_cov_trace_cmp1(i8 %53, i8 %59)
  %cmp57.not.i = icmp slt i8 %53, %59
  %or.cond115.i = select i1 %tobool51.not.i, i1 true, i1 %cmp57.not.i
  br i1 %or.cond115.i, label %land.lhs.true48.i.if.end168_crit_edge, label %do.end62.i

land.lhs.true48.i.if.end168_crit_edge:            ; preds = %land.lhs.true48.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end168

do.end62.i:                                       ; preds = %land.lhs.true48.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %ctlr, ptr noundef nonnull @.str.177) #26
  br label %free_bus_id

spi_get_gpio_descs.exit:                          ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  %60 = ptrtoint ptr %call16.i to i32
  br label %free_bus_id

if.end168:                                        ; preds = %land.lhs.true48.i.if.end168_crit_edge, %for.end.thread.i.if.end168_crit_edge, %if.then.i313.if.end168_crit_edge
  %mode_bits = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 5
  %61 = ptrtoint ptr %mode_bits to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %mode_bits, align 8
  %or = or i32 %62, 4
  store i32 %or, ptr %mode_bits, align 8
  br label %if.end175

if.else169:                                       ; preds = %if.then162
  %of_node.i = getelementptr inbounds %struct.device, ptr %ctlr, i32 0, i32 27
  %63 = ptrtoint ptr %of_node.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %of_node.i, align 8
  %tobool.not.i315 = icmp eq ptr %64, null
  br i1 %tobool.not.i315, label %if.else169.if.end175_crit_edge, label %if.end.i

if.else169.if.end175_crit_edge:                   ; preds = %if.else169
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end175

if.end.i:                                         ; preds = %if.else169
  %call.i.i = tail call i32 @of_count_phandle_with_args(ptr noundef nonnull %64, ptr noundef nonnull @.str.179, ptr noundef nonnull @.str.180) #21
  %num_chipselect.i316 = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 3
  %65 = ptrtoint ptr %num_chipselect.i316 to i32
  call void @__asan_load2_noabort(i32 %65)
  %66 = load i16, ptr %num_chipselect.i316, align 2
  %conv.i317 = zext i16 %66 to i32
  %67 = tail call i32 @llvm.smax.i32(i32 %call.i.i, i32 %conv.i317) #21
  %conv2.i = trunc i32 %67 to i16
  %68 = ptrtoint ptr %num_chipselect.i316 to i32
  call void @__asan_store2_noabort(i32 %68)
  store i16 %conv2.i, ptr %num_chipselect.i316, align 2
  %69 = zext i32 %call.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %69, ptr @__sancov_gen_cov_switch_values.240)
  switch i32 %call.i.i, label %if.else.i318 [
    i32 0, label %if.end.i.if.end175_crit_edge
    i32 -2, label %if.end.i.if.end175_crit_edge420
  ]

if.end.i.if.end175_crit_edge420:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end175

if.end.i.if.end175_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end175

if.else.i318:                                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp9.i = icmp slt i32 %call.i.i, 0
  br i1 %cmp9.i, label %if.else.i318.free_bus_id_crit_edge, label %devm_kcalloc.exit.i

if.else.i318.free_bus_id_crit_edge:               ; preds = %if.else.i318
  call void @__sanitizer_cov_trace_pc() #23
  br label %free_bus_id

devm_kcalloc.exit.i:                              ; preds = %if.else.i318
  %conv16.i = shl i32 %67, 2
  %70 = and i32 %conv16.i, 262140
  %call5.i.i.i319 = tail call noalias ptr @devm_kmalloc(ptr noundef %ctlr, i32 noundef %70, i32 noundef 3520) #21
  %cs_gpios.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 54
  %71 = ptrtoint ptr %cs_gpios.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr %call5.i.i.i319, ptr %cs_gpios.i, align 8
  %tobool19.not.i = icmp eq ptr %call5.i.i.i319, null
  br i1 %tobool19.not.i, label %devm_kcalloc.exit.i.free_bus_id_crit_edge, label %for.cond.preheader.i

devm_kcalloc.exit.i.free_bus_id_crit_edge:        ; preds = %devm_kcalloc.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %free_bus_id

for.cond.preheader.i:                             ; preds = %devm_kcalloc.exit.i
  %72 = ptrtoint ptr %num_chipselect.i316 to i32
  call void @__asan_load2_noabort(i32 %72)
  %73 = load i16, ptr %num_chipselect.i316, align 2
  %conv23.i = zext i16 %73 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %73)
  %cmp2466.not.i = icmp eq i16 %73, 0
  br i1 %cmp2466.not.i, label %for.cond.preheader.i.for.cond26.preheader.i_crit_edge, label %for.cond.preheader.i.for.body.i323_crit_edge

for.cond.preheader.i.for.body.i323_crit_edge:     ; preds = %for.cond.preheader.i
  br label %for.body.i323

for.cond.preheader.i.for.cond26.preheader.i_crit_edge: ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond26.preheader.i

for.cond26.preheader.i:                           ; preds = %for.body.i323.for.cond26.preheader.i_crit_edge, %for.cond.preheader.i.for.cond26.preheader.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp2768.i = icmp sgt i32 %call.i.i, 0
  br i1 %cmp2768.i, label %for.cond26.preheader.i.for.body29.i_crit_edge, label %for.cond26.preheader.i.if.end175_crit_edge

for.cond26.preheader.i.if.end175_crit_edge:       ; preds = %for.cond26.preheader.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end175

for.cond26.preheader.i.for.body29.i_crit_edge:    ; preds = %for.cond26.preheader.i
  br label %for.body29.i

for.body.i323:                                    ; preds = %for.body.i323.for.body.i323_crit_edge, %for.cond.preheader.i.for.body.i323_crit_edge
  %i.067.i = phi i32 [ %inc.i321, %for.body.i323.for.body.i323_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i323_crit_edge ]
  %arrayidx.i320 = getelementptr i32, ptr %call5.i.i.i319, i32 %i.067.i
  %74 = ptrtoint ptr %arrayidx.i320 to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 -2, ptr %arrayidx.i320, align 4
  %inc.i321 = add nuw nsw i32 %i.067.i, 1
  %exitcond.not.i322 = icmp eq i32 %inc.i321, %conv23.i
  br i1 %exitcond.not.i322, label %for.body.i323.for.cond26.preheader.i_crit_edge, label %for.body.i323.for.body.i323_crit_edge

for.body.i323.for.body.i323_crit_edge:            ; preds = %for.body.i323
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i323

for.body.i323.for.cond26.preheader.i_crit_edge:   ; preds = %for.body.i323
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond26.preheader.i

for.body29.i:                                     ; preds = %for.body29.i.for.body29.i_crit_edge, %for.cond26.preheader.i.for.body29.i_crit_edge
  %i.169.i = phi i32 [ %inc33.i, %for.body29.i.for.body29.i_crit_edge ], [ 0, %for.cond26.preheader.i.for.body29.i_crit_edge ]
  %call.i62.i = tail call i32 @of_get_named_gpio_flags(ptr noundef nonnull %64, ptr noundef nonnull @.str.179, i32 noundef %i.169.i, ptr noundef null) #21
  %arrayidx31.i = getelementptr i32, ptr %call5.i.i.i319, i32 %i.169.i
  %75 = ptrtoint ptr %arrayidx31.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 %call.i62.i, ptr %arrayidx31.i, align 4
  %inc33.i = add nuw nsw i32 %i.169.i, 1
  %exitcond70.not.i = icmp eq i32 %inc33.i, %call.i.i
  br i1 %exitcond70.not.i, label %for.body29.i.if.end175_crit_edge, label %for.body29.i.for.body29.i_crit_edge

for.body29.i.for.body29.i_crit_edge:              ; preds = %for.body29.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body29.i

for.body29.i.if.end175_crit_edge:                 ; preds = %for.body29.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end175

if.end175:                                        ; preds = %for.body29.i.if.end175_crit_edge, %for.cond26.preheader.i.if.end175_crit_edge, %if.end.i.if.end175_crit_edge, %if.end.i.if.end175_crit_edge420, %if.else169.if.end175_crit_edge, %if.end168, %if.end156.if.end175_crit_edge
  %num_chipselect = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 3
  %76 = ptrtoint ptr %num_chipselect to i32
  call void @__asan_load2_noabort(i32 %76)
  %77 = load i16, ptr %num_chipselect, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %77)
  %tobool176.not = icmp eq i16 %77, 0
  br i1 %tobool176.not, label %if.end175.free_bus_id_crit_edge, label %if.end178

if.end175.free_bus_id_crit_edge:                  ; preds = %if.end175
  call void @__sanitizer_cov_trace_pc() #23
  br label %free_bus_id

if.end178:                                        ; preds = %if.end175
  %call180 = tail call i32 @device_add(ptr noundef %ctlr) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call180)
  %cmp181 = icmp slt i32 %call180, 0
  br i1 %cmp181, label %if.end178.free_bus_id_crit_edge, label %do.body185

if.end178.free_bus_id_crit_edge:                  ; preds = %if.end178
  call void @__sanitizer_cov_trace_pc() #23
  br label %free_bus_id

do.body185:                                       ; preds = %if.end178
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @spi_register_controller.__UNIQUE_ID_ddebug367, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@spi_register_controller, %do.end205)) #21
          to label %if.then197 [label %do.end205], !srcloc !742

if.then197:                                       ; preds = %do.body185
  %78 = ptrtoint ptr %slave.i to i32
  call void @__asan_load1_noabort(i32 %78)
  %79 = load i8, ptr %slave.i, align 1, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %79)
  %tobool.i327.not = icmp eq i8 %79, 0
  %cond200 = select i1 %tobool.i327.not, ptr @.str.28, ptr @.str.27
  %init_name.i = getelementptr inbounds %struct.device, ptr %ctlr, i32 0, i32 3
  %80 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i328 = icmp eq ptr %81, null
  br i1 %tobool.not.i328, label %if.end.i329, label %if.then197.dev_name.exit_crit_edge

if.then197.dev_name.exit_crit_edge:               ; preds = %if.then197
  call void @__sanitizer_cov_trace_pc() #23
  br label %dev_name.exit

if.end.i329:                                      ; preds = %if.then197
  call void @__sanitizer_cov_trace_pc() #23
  %82 = ptrtoint ptr %ctlr to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %ctlr, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i329, %if.then197.dev_name.exit_crit_edge
  %retval.0.i330 = phi ptr [ %83, %if.end.i329 ], [ %81, %if.then197.dev_name.exit_crit_edge ]
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @spi_register_controller.__UNIQUE_ID_ddebug367, ptr noundef nonnull %1, ptr noundef nonnull @.str.26, ptr noundef nonnull %cond200, ptr noundef %retval.0.i330) #21
  br label %do.end205

do.end205:                                        ; preds = %dev_name.exit, %do.body185
  %transfer = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 22
  %84 = ptrtoint ptr %transfer to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %transfer, align 4
  %tobool206.not = icmp eq ptr %85, null
  br i1 %tobool206.not, label %if.else211, label %do.end210

do.end210:                                        ; preds = %do.end205
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef nonnull %1, ptr noundef nonnull @.str.29) #26
  br label %do.body222

if.else211:                                       ; preds = %do.end205
  %transfer_one = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 51
  %86 = ptrtoint ptr %transfer_one to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %transfer_one, align 4
  %tobool212.not = icmp eq ptr %87, null
  br i1 %tobool212.not, label %lor.lhs.false, label %if.else211.if.then214_crit_edge

if.else211.if.then214_crit_edge:                  ; preds = %if.else211
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then214

lor.lhs.false:                                    ; preds = %if.else211
  %transfer_one_message = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 45
  %88 = ptrtoint ptr %transfer_one_message to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %transfer_one_message, align 4
  %tobool213.not = icmp eq ptr %89, null
  br i1 %tobool213.not, label %lor.lhs.false.do.body222_crit_edge, label %lor.lhs.false.if.then214_crit_edge

lor.lhs.false.if.then214_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then214

lor.lhs.false.do.body222_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body222

if.then214:                                       ; preds = %lor.lhs.false.if.then214_crit_edge, %if.else211.if.then214_crit_edge
  %90 = ptrtoint ptr %transfer to i32
  call void @__asan_store4_noabort(i32 %90)
  store ptr @spi_queued_transfer, ptr %transfer, align 4
  %transfer_one_message.i332 = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 45
  %91 = ptrtoint ptr %transfer_one_message.i332 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %transfer_one_message.i332, align 4
  %tobool.not.i333 = icmp eq ptr %92, null
  br i1 %tobool.not.i333, label %if.then.i334, label %if.then214.if.end.i335_crit_edge

if.then214.if.end.i335_crit_edge:                 ; preds = %if.then214
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i335

if.then.i334:                                     ; preds = %if.then214
  call void @__sanitizer_cov_trace_pc() #23
  %93 = ptrtoint ptr %transfer_one_message.i332 to i32
  call void @__asan_store4_noabort(i32 %93)
  store ptr @spi_transfer_one_message, ptr %transfer_one_message.i332, align 4
  br label %if.end.i335

if.end.i335:                                      ; preds = %if.then.i334, %if.then214.if.end.i335_crit_edge
  %running.i.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 34
  %94 = ptrtoint ptr %running.i.i to i32
  call void @__asan_store1_noabort(i32 %94)
  store i8 0, ptr %running.i.i, align 2
  %busy.i.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 33
  %95 = ptrtoint ptr %busy.i.i to i32
  call void @__asan_store1_noabort(i32 %95)
  store i8 0, ptr %busy.i.i, align 1
  %init_name.i.i.i = getelementptr inbounds %struct.device, ptr %ctlr, i32 0, i32 3
  %96 = ptrtoint ptr %init_name.i.i.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %init_name.i.i.i, align 8
  %tobool.not.i.i.i = icmp eq ptr %97, null
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.end.i335.dev_name.exit.i.i_crit_edge

if.end.i335.dev_name.exit.i.i_crit_edge:          ; preds = %if.end.i335
  call void @__sanitizer_cov_trace_pc() #23
  br label %dev_name.exit.i.i

if.end.i.i.i:                                     ; preds = %if.end.i335
  call void @__sanitizer_cov_trace_pc() #23
  %98 = ptrtoint ptr %ctlr to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %ctlr, align 4
  br label %dev_name.exit.i.i

dev_name.exit.i.i:                                ; preds = %if.end.i.i.i, %if.end.i335.dev_name.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %99, %if.end.i.i.i ], [ %97, %if.end.i335.dev_name.exit.i.i_crit_edge ]
  %call1.i.i = tail call ptr (i32, ptr, ...) @kthread_create_worker(i32 noundef 0, ptr noundef %retval.0.i.i.i) #21
  %kworker.i.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 27
  %100 = ptrtoint ptr %kworker.i.i to i32
  call void @__asan_store4_noabort(i32 %100)
  store ptr %call1.i.i, ptr %kworker.i.i, align 8
  %cmp.i.i.i = icmp ugt ptr %call1.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i, label %spi_init_queue.exit.i, label %do.body7.i.i

do.body7.i.i:                                     ; preds = %dev_name.exit.i.i
  %pump_messages.i.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 28
  %101 = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 28, i32 2
  %102 = ptrtoint ptr %101 to i32
  call void @__asan_storeN_noabort(i32 %102, i32 8)
  store i64 0, ptr %101, align 4
  %103 = ptrtoint ptr %pump_messages.i.i to i32
  call void @__asan_store4_noabort(i32 %103)
  store volatile ptr %pump_messages.i.i, ptr %pump_messages.i.i, align 4
  %prev.i.i.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 28, i32 0, i32 1
  %104 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %104)
  store ptr %pump_messages.i.i, ptr %prev.i.i.i, align 4
  %func.i.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 28, i32 1
  %105 = ptrtoint ptr %func.i.i to i32
  call void @__asan_store4_noabort(i32 %105)
  store ptr @spi_pump_messages, ptr %func.i.i, align 4
  %rt.i.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 35
  %106 = ptrtoint ptr %rt.i.i to i32
  call void @__asan_load1_noabort(i32 %106)
  %107 = load i8, ptr %rt.i.i, align 1, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %107)
  %tobool.not.i.i336 = icmp eq i8 %107, 0
  br i1 %tobool.not.i.i336, label %do.body7.i.i.if.end4.i339_crit_edge, label %if.then11.i.i

do.body7.i.i.if.end4.i339_crit_edge:              ; preds = %do.body7.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end4.i339

if.then11.i.i:                                    ; preds = %do.body7.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %ctlr, ptr noundef nonnull @.str.234) #26
  %108 = ptrtoint ptr %kworker.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %kworker.i.i, align 8
  %task.i.i.i = getelementptr inbounds %struct.kthread_worker, ptr %109, i32 0, i32 4
  %110 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %task.i.i.i, align 4
  tail call void @sched_set_fifo(ptr noundef %111) #21
  br label %if.end4.i339

spi_init_queue.exit.i:                            ; preds = %dev_name.exit.i.i
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %ctlr, ptr noundef nonnull @.str.196) #26
  %112 = ptrtoint ptr %kworker.i.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %kworker.i.i, align 8
  %tobool2.not.i337 = icmp eq ptr %113, null
  br i1 %tobool2.not.i337, label %spi_init_queue.exit.i.if.end4.i339_crit_edge, label %spi_controller_initialize_queue.exit

spi_init_queue.exit.i.if.end4.i339_crit_edge:     ; preds = %spi_init_queue.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end4.i339

if.end4.i339:                                     ; preds = %spi_init_queue.exit.i.if.end4.i339_crit_edge, %if.then11.i.i, %do.body7.i.i.if.end4.i339_crit_edge
  %queued.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 26
  %114 = ptrtoint ptr %queued.i to i32
  call void @__asan_store1_noabort(i32 %114)
  store i8 1, ptr %queued.i, align 4
  %queue_lock.i.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 29
  %call2.i.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %queue_lock.i.i) #21
  %115 = ptrtoint ptr %running.i.i to i32
  call void @__asan_load1_noabort(i32 %115)
  %116 = load i8, ptr %running.i.i, align 2, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %116)
  %tobool.not.i25.i = icmp eq i8 %116, 0
  br i1 %tobool.not.i25.i, label %lor.lhs.false.i.i, label %if.end4.i339.do.end10.i_crit_edge

if.end4.i339.do.end10.i_crit_edge:                ; preds = %if.end4.i339
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end10.i

lor.lhs.false.i.i:                                ; preds = %if.end4.i339
  %117 = ptrtoint ptr %busy.i.i to i32
  call void @__asan_load1_noabort(i32 %117)
  %118 = load i8, ptr %busy.i.i, align 1, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %118)
  %tobool6.not.i.i = icmp eq i8 %118, 0
  br i1 %tobool6.not.i.i, label %spi_controller_initialize_queue.exit.thread378, label %lor.lhs.false.i.i.do.end10.i_crit_edge

lor.lhs.false.i.i.do.end10.i_crit_edge:           ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end10.i

spi_controller_initialize_queue.exit.thread378:   ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %119 = ptrtoint ptr %running.i.i to i32
  call void @__asan_store1_noabort(i32 %119)
  store i8 1, ptr %running.i.i, align 2
  %cur_msg.i.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 31
  %120 = ptrtoint ptr %cur_msg.i.i to i32
  call void @__asan_store4_noabort(i32 %120)
  store ptr null, ptr %cur_msg.i.i, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock.i.i, i32 noundef %call2.i.i) #21
  %121 = ptrtoint ptr %kworker.i.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %kworker.i.i, align 8
  %pump_messages.i28.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 28
  %call11.i.i = tail call zeroext i1 @kthread_queue_work(ptr noundef %122, ptr noundef %pump_messages.i28.i) #21
  br label %do.body222

do.end10.i:                                       ; preds = %lor.lhs.false.i.i.do.end10.i_crit_edge, %if.end4.i339.do.end10.i_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock.i.i, i32 noundef %call2.i.i) #21
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %ctlr, ptr noundef nonnull @.str.184) #26
  %call.i.i340 = tail call fastcc i32 @spi_stop_queue(ptr noundef %ctlr) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i340)
  %tobool.not.i30.i = icmp eq i32 %call.i.i340, 0
  br i1 %tobool.not.i30.i, label %if.end.i33.i, label %do.end.i31.i

do.end.i31.i:                                     ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %ctlr, ptr noundef nonnull @.str.228) #26
  br label %if.then217

if.end.i33.i:                                     ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #23
  %123 = ptrtoint ptr %kworker.i.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %kworker.i.i, align 8
  tail call void @kthread_destroy_worker(ptr noundef %124) #21
  br label %if.then217

spi_controller_initialize_queue.exit:             ; preds = %spi_init_queue.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  %125 = ptrtoint ptr %113 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %ctlr, ptr noundef nonnull @.str.181) #26
  br label %if.then217

if.then217:                                       ; preds = %spi_controller_initialize_queue.exit, %if.end.i33.i, %do.end.i31.i
  %retval.0.i341377 = phi i32 [ %125, %spi_controller_initialize_queue.exit ], [ -16, %do.end.i31.i ], [ -16, %if.end.i33.i ]
  tail call void @device_del(ptr noundef %ctlr) #21
  br label %free_bus_id

do.body222:                                       ; preds = %spi_controller_initialize_queue.exit.thread378, %lor.lhs.false.do.body222_crit_edge, %do.end210
  %status.0 = phi i32 [ %call180, %do.end210 ], [ %call180, %lor.lhs.false.do.body222_crit_edge ], [ 0, %spi_controller_initialize_queue.exit.thread378 ]
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 59
  tail call void @__raw_spin_lock_init(ptr noundef %statistics, ptr noundef nonnull @.str.31, ptr noundef nonnull @spi_register_controller.__key, i16 noundef signext 3) #21
  tail call void @mutex_lock_nested(ptr noundef nonnull @board_lock, i32 noundef 0) #21
  %list = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 1
  %126 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @spi_controller_list, i32 0, i32 1), align 4
  %call.i.i343 = tail call zeroext i1 @__list_add_valid(ptr noundef %list, ptr noundef %126, ptr noundef nonnull @spi_controller_list) #21
  br i1 %call.i.i343, label %if.end.i.i344, label %do.body222.list_add_tail.exit_crit_edge

do.body222.list_add_tail.exit_crit_edge:          ; preds = %do.body222
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_add_tail.exit

if.end.i.i344:                                    ; preds = %do.body222
  call void @__sanitizer_cov_trace_pc() #23
  store ptr %list, ptr getelementptr inbounds (%struct.list_head, ptr @spi_controller_list, i32 0, i32 1), align 4
  %127 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %127)
  store ptr @spi_controller_list, ptr %list, align 4
  %prev3.i.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 1, i32 1
  %128 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %128)
  store ptr %126, ptr %prev3.i.i, align 4
  %129 = ptrtoint ptr %126 to i32
  call void @__asan_store4_noabort(i32 %129)
  store volatile ptr %list, ptr %126, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i344, %do.body222.list_add_tail.exit_crit_edge
  %bi.0387 = load ptr, ptr @board_list, align 4
  %cmp228.not388 = icmp eq ptr %bi.0387, @board_list
  br i1 %cmp228.not388, label %list_add_tail.exit.for.end_crit_edge, label %list_add_tail.exit.for.body_crit_edge

list_add_tail.exit.for.body_crit_edge:            ; preds = %list_add_tail.exit
  br label %for.body

list_add_tail.exit.for.end_crit_edge:             ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %spi_match_controller_to_boardinfo.exit.for.body_crit_edge, %list_add_tail.exit.for.body_crit_edge
  %bi.0389 = phi ptr [ %bi.0, %spi_match_controller_to_boardinfo.exit.for.body_crit_edge ], [ %bi.0387, %list_add_tail.exit.for.body_crit_edge ]
  %board_info = getelementptr inbounds %struct.boardinfo, ptr %bi.0389, i32 0, i32 1
  %130 = ptrtoint ptr %bus_num to i32
  call void @__asan_load2_noabort(i32 %130)
  %131 = load i16, ptr %bus_num, align 8
  %conv.i345 = sext i16 %131 to i32
  %bus_num1.i = getelementptr inbounds %struct.boardinfo, ptr %bi.0389, i32 0, i32 1, i32 6
  %132 = ptrtoint ptr %bus_num1.i to i32
  call void @__asan_load2_noabort(i32 %132)
  %133 = load i16, ptr %bus_num1.i, align 4
  %conv2.i346 = zext i16 %133 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i345, i32 %conv2.i346)
  %cmp.not.i = icmp eq i32 %conv.i345, %conv2.i346
  br i1 %cmp.not.i, label %if.end.i349, label %for.body.spi_match_controller_to_boardinfo.exit_crit_edge

for.body.spi_match_controller_to_boardinfo.exit_crit_edge: ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_match_controller_to_boardinfo.exit

if.end.i349:                                      ; preds = %for.body
  %call.i347 = tail call ptr @spi_new_device(ptr noundef %ctlr, ptr noundef %board_info) #21
  %tobool.not.i348 = icmp eq ptr %call.i347, null
  br i1 %tobool.not.i348, label %do.end.i350, label %if.end.i349.spi_match_controller_to_boardinfo.exit_crit_edge

if.end.i349.spi_match_controller_to_boardinfo.exit_crit_edge: ; preds = %if.end.i349
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_match_controller_to_boardinfo.exit

do.end.i350:                                      ; preds = %if.end.i349
  call void @__sanitizer_cov_trace_pc() #23
  %134 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %parent, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %135, ptr noundef nonnull @.str.147, ptr noundef %board_info) #26
  br label %spi_match_controller_to_boardinfo.exit

spi_match_controller_to_boardinfo.exit:           ; preds = %do.end.i350, %if.end.i349.spi_match_controller_to_boardinfo.exit_crit_edge, %for.body.spi_match_controller_to_boardinfo.exit_crit_edge
  %136 = ptrtoint ptr %bi.0389 to i32
  call void @__asan_load4_noabort(i32 %136)
  %bi.0 = load ptr, ptr %bi.0389, align 4
  %cmp228.not = icmp eq ptr %bi.0, @board_list
  br i1 %cmp228.not, label %spi_match_controller_to_boardinfo.exit.for.end_crit_edge, label %spi_match_controller_to_boardinfo.exit.for.body_crit_edge

spi_match_controller_to_boardinfo.exit.for.body_crit_edge: ; preds = %spi_match_controller_to_boardinfo.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

spi_match_controller_to_boardinfo.exit.for.end_crit_edge: ; preds = %spi_match_controller_to_boardinfo.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %spi_match_controller_to_boardinfo.exit.for.end_crit_edge, %list_add_tail.exit.for.end_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @board_lock) #21
  %of_node.i352 = getelementptr inbounds %struct.device, ptr %ctlr, i32 0, i32 27
  %137 = ptrtoint ptr %of_node.i352 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %of_node.i352, align 8
  %tobool.not.i353 = icmp eq ptr %138, null
  br i1 %tobool.not.i353, label %for.end.cleanup_crit_edge, label %if.end.i355

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i355:                                      ; preds = %for.end
  %call.i354 = tail call ptr @of_get_next_available_child(ptr noundef nonnull %138, ptr noundef null) #21
  %cmp.not26.i = icmp eq ptr %call.i354, null
  br i1 %cmp.not26.i, label %if.end.i355.cleanup_crit_edge, label %if.end.i355.for.body.i358_crit_edge

if.end.i355.for.body.i358_crit_edge:              ; preds = %if.end.i355
  br label %for.body.i358

if.end.i355.cleanup_crit_edge:                    ; preds = %if.end.i355
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.body.i358:                                    ; preds = %for.inc.i362.for.body.i358_crit_edge, %if.end.i355.for.body.i358_crit_edge
  %nc.027.i = phi ptr [ %call14.i, %for.inc.i362.for.body.i358_crit_edge ], [ %call.i354, %if.end.i355.for.body.i358_crit_edge ]
  %_flags.i.i = getelementptr inbounds %struct.device_node, ptr %nc.027.i, i32 0, i32 10
  %call.i.i356 = tail call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %_flags.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i356)
  %tobool4.not.i357 = icmp eq i32 %call.i.i356, 0
  br i1 %tobool4.not.i357, label %if.end6.i, label %for.body.i358.for.inc.i362_crit_edge

for.body.i358.for.inc.i362_crit_edge:             ; preds = %for.body.i358
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i362

if.end6.i:                                        ; preds = %for.body.i358
  %call7.i = tail call fastcc ptr @of_register_spi_device(ptr noundef %ctlr, ptr noundef nonnull %nc.027.i) #21
  %cmp.i.i359 = icmp ugt ptr %call7.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i359, label %do.end.i360, label %if.end6.i.for.inc.i362_crit_edge

if.end6.i.for.inc.i362_crit_edge:                 ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i362

do.end.i360:                                      ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %ctlr, ptr noundef nonnull @.str.198, ptr noundef nonnull %nc.027.i) #26
  tail call void @_clear_bit(i32 noundef 3, ptr noundef %_flags.i.i) #21
  br label %for.inc.i362

for.inc.i362:                                     ; preds = %do.end.i360, %if.end6.i.for.inc.i362_crit_edge, %for.body.i358.for.inc.i362_crit_edge
  %139 = ptrtoint ptr %of_node.i352 to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %of_node.i352, align 8
  %call14.i = tail call ptr @of_get_next_available_child(ptr noundef %140, ptr noundef nonnull %nc.027.i) #21
  %cmp.not.i361 = icmp eq ptr %call14.i, null
  br i1 %cmp.not.i361, label %for.inc.i362.cleanup_crit_edge, label %for.inc.i362.for.body.i358_crit_edge

for.inc.i362.for.body.i358_crit_edge:             ; preds = %for.inc.i362
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i358

for.inc.i362.cleanup_crit_edge:                   ; preds = %for.inc.i362
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

free_bus_id:                                      ; preds = %if.then217, %if.end178.free_bus_id_crit_edge, %if.end175.free_bus_id_crit_edge, %devm_kcalloc.exit.i.free_bus_id_crit_edge, %if.else.i318.free_bus_id_crit_edge, %spi_get_gpio_descs.exit, %do.end62.i, %do.end.i, %dev_name.exit.i.free_bus_id_crit_edge, %if.end4.i.free_bus_id_crit_edge, %if.then.i313.free_bus_id_crit_edge
  %status.1 = phi i32 [ %call180, %if.end178.free_bus_id_crit_edge ], [ %retval.0.i341377, %if.then217 ], [ %60, %spi_get_gpio_descs.exit ], [ -22, %if.end175.free_bus_id_crit_edge ], [ %call.i.i, %if.else.i318.free_bus_id_crit_edge ], [ -12, %devm_kcalloc.exit.i.free_bus_id_crit_edge ], [ -12, %if.end4.i.free_bus_id_crit_edge ], [ %call.i, %if.then.i313.free_bus_id_crit_edge ], [ -22, %do.end62.i ], [ -22, %do.end.i ], [ -12, %dev_name.exit.i.free_bus_id_crit_edge ]
  tail call void @mutex_lock_nested(ptr noundef nonnull @board_lock, i32 noundef 0) #21
  %141 = ptrtoint ptr %bus_num to i32
  call void @__asan_load2_noabort(i32 %141)
  %142 = load i16, ptr %bus_num, align 8
  %conv237 = sext i16 %142 to i32
  %call238 = tail call ptr @idr_remove(ptr noundef nonnull @spi_master_idr, i32 noundef %conv237) #21
  tail call void @mutex_unlock(ptr noundef nonnull @board_lock) #21
  br label %cleanup

cleanup:                                          ; preds = %free_bus_id, %for.inc.i362.cleanup_crit_edge, %if.end.i355.cleanup_crit_edge, %for.end.cleanup_crit_edge, %do.end133, %do.end77, %do.end, %land.lhs.true6.i.cleanup_crit_edge, %if.then.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %cond, %do.end ], [ %call114, %do.end133 ], [ %status.1, %free_bus_id ], [ %cond98, %do.end77 ], [ -19, %entry.cleanup_crit_edge ], [ %status.0, %for.end.cleanup_crit_edge ], [ %status.0, %if.end.i355.cleanup_crit_edge ], [ -22, %if.then.i.cleanup_crit_edge ], [ -22, %land.lhs.true6.i.cleanup_crit_edge ], [ %status.0, %for.inc.i362.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @idr_alloc(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_alias_get_id(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_alias_get_highest_id(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dev_set_name(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @device_add(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_dev_dbg(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @idr_remove(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @devm_spi_register_controller(ptr noundef %dev, ptr noundef %ctlr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @spi_register_controller(ptr noundef %ctlr)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i = tail call i32 @devm_add_action(ptr noundef %dev, ptr noundef nonnull @devm_spi_unregister, ptr noundef %ctlr) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.cleanup_crit_edge, label %if.then.i

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @spi_unregister_controller(ptr noundef %ctlr) #21
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ %call.i, %if.then.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @devm_spi_unregister(ptr noundef %ctlr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @spi_unregister_controller(ptr noundef %ctlr)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @spi_unregister_controller(ptr noundef %ctlr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %bus_num = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 2
  %0 = ptrtoint ptr %bus_num to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %bus_num, align 8
  %conv = sext i16 %1 to i32
  %add_lock = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 16
  tail call void @mutex_lock_nested(ptr noundef %add_lock, i32 noundef 0) #21
  %call = tail call i32 @device_for_each_child(ptr noundef %ctlr, ptr noundef null, ptr noundef nonnull @__unregister) #21
  tail call void @mutex_lock_nested(ptr noundef nonnull @board_lock, i32 noundef 0) #21
  %call1 = tail call ptr @idr_find(ptr noundef nonnull @spi_master_idr, i32 noundef %conv) #21
  tail call void @mutex_unlock(ptr noundef nonnull @board_lock) #21
  %queued = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 26
  %2 = ptrtoint ptr %queued to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %queued, align 4, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %entry.if.end6_crit_edge, label %if.then

entry.if.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end6

if.then:                                          ; preds = %entry
  %call.i = tail call fastcc i32 @spi_stop_queue(ptr noundef %ctlr) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %spi_destroy_queue.exit.thread, label %do.end

spi_destroy_queue.exit.thread:                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %kworker.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 27
  %4 = ptrtoint ptr %kworker.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %kworker.i, align 8
  tail call void @kthread_destroy_worker(ptr noundef %5) #21
  br label %if.end6

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %ctlr, ptr noundef nonnull @.str.228) #26
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %ctlr, ptr noundef nonnull @.str.32) #26
  br label %if.end6

if.end6:                                          ; preds = %do.end, %spi_destroy_queue.exit.thread, %entry.if.end6_crit_edge
  tail call void @mutex_lock_nested(ptr noundef nonnull @board_lock, i32 noundef 0) #21
  %list = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 1
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %list) #21
  br i1 %call.i.i, label %if.end.i.i, label %if.end6.list_del.exit_crit_edge

if.end6.list_del.exit_crit_edge:                  ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 1, i32 1
  %6 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prev.i.i, align 4
  %8 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %7, ptr %prev1.i.i.i, align 4
  %11 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %9, ptr %7, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.end6.list_del.exit_crit_edge
  %12 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr inttoptr (i32 256 to ptr), ptr %list, align 4
  %prev.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 1, i32 1
  %13 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @mutex_unlock(ptr noundef nonnull @board_lock) #21
  tail call void @device_del(ptr noundef %ctlr) #21
  tail call void @mutex_lock_nested(ptr noundef nonnull @board_lock, i32 noundef 0) #21
  %cmp = icmp eq ptr %call1, %ctlr
  br i1 %cmp, label %if.then9, label %list_del.exit.if.end11_crit_edge

list_del.exit.if.end11_crit_edge:                 ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end11

if.then9:                                         ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #23
  %call10 = tail call ptr @idr_remove(ptr noundef nonnull @spi_master_idr, i32 noundef %conv) #21
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %list_del.exit.if.end11_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @board_lock) #21
  tail call void @mutex_unlock(ptr noundef %add_lock) #21
  %devm_allocated = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 11
  %14 = ptrtoint ptr %devm_allocated to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %devm_allocated, align 2, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool13.not = icmp eq i8 %15, 0
  br i1 %tobool13.not, label %if.then14, label %if.end11.if.end16_crit_edge

if.end11.if.end16_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

if.then14:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @put_device(ptr noundef %ctlr) #21
  br label %if.end16

if.end16:                                         ; preds = %if.then14, %if.end11.if.end16_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @device_for_each_child(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @__unregister(ptr noundef %dev, ptr nocapture noundef readnone %null) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %dev, null
  br i1 %tobool.not.i, label %entry.spi_unregister_device.exit_crit_edge, label %if.end.i

entry.spi_unregister_device.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_unregister_device.exit

if.end.i:                                         ; preds = %entry
  %of_node.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 27
  %0 = ptrtoint ptr %of_node.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of_node.i, align 8
  %tobool1.not.i = icmp eq ptr %1, null
  br i1 %tobool1.not.i, label %if.end.i.if.end9.i_crit_edge, label %if.then2.i

if.end.i.if.end9.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9.i

if.then2.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %_flags.i.i = getelementptr inbounds %struct.device_node, ptr %1, i32 0, i32 10
  tail call void @_clear_bit(i32 noundef 3, ptr noundef %_flags.i.i) #21
  %2 = ptrtoint ptr %of_node.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %of_node.i, align 8
  tail call void @of_node_put(ptr noundef %3) #21
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.then2.i, %if.end.i.if.end9.i_crit_edge
  tail call void @device_remove_software_node(ptr noundef nonnull %dev) #21
  tail call void @device_del(ptr noundef nonnull %dev) #21
  %controller.i.i = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 1
  %4 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %controller.i.i, align 8
  %cleanup.i.i = getelementptr inbounds %struct.spi_controller, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %cleanup.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %cleanup.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %7, null
  br i1 %tobool.not.i.i, label %if.end9.i.spi_cleanup.exit.i_crit_edge, label %if.then.i.i

if.end9.i.spi_cleanup.exit.i_crit_edge:           ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_cleanup.exit.i

if.then.i.i:                                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %7(ptr noundef nonnull %dev) #21
  br label %spi_cleanup.exit.i

spi_cleanup.exit.i:                               ; preds = %if.then.i.i, %if.end9.i.spi_cleanup.exit.i_crit_edge
  tail call void @put_device(ptr noundef nonnull %dev) #21
  br label %spi_unregister_device.exit

spi_unregister_device.exit:                       ; preds = %spi_cleanup.exit.i, %entry.spi_unregister_device.exit_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @idr_find(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @spi_controller_suspend(ptr noundef %ctlr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %queued = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 26
  %0 = ptrtoint ptr %queued to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %queued, align 4, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @spi_stop_queue(ptr noundef %ctlr)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool1.not = icmp eq i32 %call, 0
  br i1 %tobool1.not, label %if.end.cleanup_crit_edge, label %do.end

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %ctlr, ptr noundef nonnull @.str.34) #26
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %call, %do.end ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @spi_stop_queue(ptr noundef %ctlr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %queue_lock = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 29
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %queue_lock) #21
  %queue = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 30
  %busy = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 33
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %limit.0 = phi i32 [ 500, %entry ], [ %dec, %while.body ]
  %flags.0 = phi i32 [ %call2, %entry ], [ %call19, %while.body ]
  %0 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %queue, align 4
  %cmp.i.not = icmp eq ptr %1, %queue
  br i1 %cmp.i.not, label %lor.lhs.false, label %land.rhs

lor.lhs.false:                                    ; preds = %while.cond
  %2 = ptrtoint ptr %busy to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %busy, align 1, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool6.not = icmp eq i8 %3, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %limit.0)
  %tobool8.not = icmp eq i32 %limit.0, 0
  %or.cond = select i1 %tobool6.not, i1 true, i1 %tobool8.not
  br i1 %or.cond, label %lor.lhs.false.while.end_crit_edge, label %lor.lhs.false.while.body_crit_edge

lor.lhs.false.while.body_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body

lor.lhs.false.while.end_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end

land.rhs:                                         ; preds = %while.cond
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %limit.0)
  %tobool8.not.old = icmp eq i32 %limit.0, 0
  br i1 %tobool8.not.old, label %land.rhs.while.end_crit_edge, label %land.rhs.while.body_crit_edge

land.rhs.while.body_crit_edge:                    ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body

land.rhs.while.end_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end

while.body:                                       ; preds = %land.rhs.while.body_crit_edge, %lor.lhs.false.while.body_crit_edge
  %dec = add i32 %limit.0, -1
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock, i32 noundef %flags.0) #21
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 11000, i32 noundef 2) #21
  %call19 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %queue_lock) #21
  br label %while.cond

while.end:                                        ; preds = %land.rhs.while.end_crit_edge, %lor.lhs.false.while.end_crit_edge
  %4 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %queue, align 4
  %cmp.i52.not = icmp eq ptr %5, %queue
  br i1 %cmp.i52.not, label %lor.lhs.false27, label %while.end.do.end36_crit_edge

while.end.do.end36_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end36

lor.lhs.false27:                                  ; preds = %while.end
  %6 = ptrtoint ptr %busy to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %busy, align 1, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool29.not = icmp eq i8 %7, 0
  br i1 %tobool29.not, label %if.end, label %lor.lhs.false27.do.end36_crit_edge

lor.lhs.false27.do.end36_crit_edge:               ; preds = %lor.lhs.false27
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end36

if.end:                                           ; preds = %lor.lhs.false27
  call void @__sanitizer_cov_trace_pc() #23
  %running = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 34
  %8 = ptrtoint ptr %running to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 0, ptr %running, align 2
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock, i32 noundef %flags.0) #21
  br label %cleanup

do.end36:                                         ; preds = %lor.lhs.false27.do.end36_crit_edge, %while.end.do.end36_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock, i32 noundef %flags.0) #21
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %ctlr, ptr noundef nonnull @.str.230) #26
  br label %cleanup

cleanup:                                          ; preds = %do.end36, %if.end
  %ret.057 = phi i32 [ 0, %if.end ], [ -16, %do.end36 ]
  ret i32 %ret.057
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @spi_controller_resume(ptr noundef %ctlr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %queued = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 26
  %0 = ptrtoint ptr %queued to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %queued, align 4, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %queue_lock.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 29
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %queue_lock.i) #21
  %running.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 34
  %2 = ptrtoint ptr %running.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %running.i, align 2, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not.i = icmp eq i8 %3, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %if.end.do.end_crit_edge

if.end.do.end_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

lor.lhs.false.i:                                  ; preds = %if.end
  %busy.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 33
  %4 = ptrtoint ptr %busy.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %busy.i, align 1, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool6.not.i = icmp eq i8 %5, 0
  br i1 %tobool6.not.i, label %spi_start_queue.exit.thread, label %lor.lhs.false.i.do.end_crit_edge

lor.lhs.false.i.do.end_crit_edge:                 ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

spi_start_queue.exit.thread:                      ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  %6 = ptrtoint ptr %running.i to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 1, ptr %running.i, align 2
  %cur_msg.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 31
  %7 = ptrtoint ptr %cur_msg.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr null, ptr %cur_msg.i, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock.i, i32 noundef %call2.i) #21
  %kworker.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 27
  %8 = ptrtoint ptr %kworker.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %kworker.i, align 8
  %pump_messages.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 28
  %call11.i = tail call zeroext i1 @kthread_queue_work(ptr noundef %9, ptr noundef %pump_messages.i) #21
  br label %cleanup

do.end:                                           ; preds = %lor.lhs.false.i.do.end_crit_edge, %if.end.do.end_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock.i, i32 noundef %call2.i) #21
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %ctlr, ptr noundef nonnull @.str.36) #26
  br label %cleanup

cleanup:                                          ; preds = %do.end, %spi_start_queue.exit.thread, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ -16, %do.end ], [ 0, %spi_start_queue.exit.thread ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @spi_split_transfers_maxsize(ptr noundef %ctlr, ptr noundef %msg, i32 noundef %maxsize, i32 noundef %gfp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %msg to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn21 = load ptr, ptr %msg, align 4
  %cmp.not23 = icmp eq ptr %.pn21, %msg
  br i1 %cmp.not23, label %entry.cleanup_crit_edge, label %for.body.lr.ph

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.body.lr.ph:                                   ; preds = %entry
  %add.i = add i32 %maxsize, -1
  %spi.i.i = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 1
  %or.i.i.i.i = or i32 %gfp, 256
  %resources.i.i.i = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 10
  %prev.i.i14.i.i = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 10, i32 1
  %statistics.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 59
  %transfers_split_maxsize.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 59, i32 12
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %.pn24 = phi ptr [ %.pn21, %for.body.lr.ph ], [ %.pn, %for.inc.for.body_crit_edge ]
  %storemerge25 = getelementptr i8, ptr %.pn24, i32 -84
  %len = getelementptr i8, ptr %.pn24, i32 -76
  %1 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %len, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %maxsize)
  %cmp2 = icmp ugt i32 %2, %maxsize
  br i1 %cmp2, label %if.then, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.then:                                          ; preds = %for.body
  %3 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %len, align 4
  %sub.i = add i32 %add.i, %4
  %div.i = udiv i32 %sub.i, %maxsize
  %5 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %div.i, i32 96) #21
  %6 = extractvalue { i32, i1 } %5, 1
  %7 = extractvalue { i32, i1 } %5, 0
  %.op = add i32 %7, 40
  %add.i.i.i = select i1 %6, i32 15, i32 %.op
  %call9.i.i.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add.i.i.i, i32 noundef %or.i.i.i.i) #28
  %tobool.not.i.i.i = icmp eq ptr %call9.i.i.i.i.i, null
  br i1 %tobool.not.i.i.i, label %if.then.cleanup.split.loop.exit19_crit_edge, label %spi_res_alloc.exit.i.i

if.then.cleanup.split.loop.exit19_crit_edge:      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.split.loop.exit19

spi_res_alloc.exit.i.i:                           ; preds = %if.then
  %8 = ptrtoint ptr %call9.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %call9.i.i.i.i.i, ptr %call9.i.i.i.i.i, align 128
  %prev.i.i.i.i = getelementptr %struct.list_head, ptr %call9.i.i.i.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %call9.i.i.i.i.i, ptr %prev.i.i.i.i, align 4
  %release2.i.i.i = getelementptr inbounds %struct.spi_res, ptr %call9.i.i.i.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %release2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @__spi_replace_transfers_release, ptr %release2.i.i.i, align 8
  %data.i.i.i = getelementptr inbounds %struct.spi_res, ptr %call9.i.i.i.i.i, i32 0, i32 2
  %11 = ptrtoint ptr %data.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %data.i.i.i, align 16
  %replaced_transfers.i.i = getelementptr inbounds %struct.spi_res, ptr %call9.i.i.i.i.i, i32 1, i32 1
  %12 = ptrtoint ptr %replaced_transfers.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %replaced_transfers.i.i, ptr %replaced_transfers.i.i, align 8
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %replaced_transfers.i.i, i32 0, i32 1
  %13 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %replaced_transfers.i.i, ptr %prev.i.i.i, align 4
  %prev.i.i = getelementptr i8, ptr %.pn24, i32 4
  %14 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %prev.i.i, align 4
  %replaced_after.i.i = getelementptr inbounds %struct.spi_res, ptr %call9.i.i.i.i.i, i32 2
  %16 = ptrtoint ptr %replaced_after.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %15, ptr %replaced_after.i.i, align 32
  %17 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %15, align 4
  %cmp8.i.i = icmp eq ptr %18, %msg
  br i1 %cmp8.i.i, label %do.end.i.i, label %if.end14.i.i

do.end.i.i:                                       ; preds = %spi_res_alloc.exit.i.i
  %19 = ptrtoint ptr %spi.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %spi.i.i, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %20, ptr noundef nonnull @.str.232) #26
  %21 = ptrtoint ptr %replaced_after.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %replaced_after.i.i, align 32
  %23 = ptrtoint ptr %replaced_transfers.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile ptr, ptr %replaced_transfers.i.i, align 8
  %cmp.i.not.i.i.i = icmp eq ptr %24, %replaced_transfers.i.i
  br i1 %cmp.i.not.i.i.i, label %do.end.i.i.if.end.i5.i.i_crit_edge, label %if.then.i.i.i

do.end.i.i.if.end.i5.i.i_crit_edge:               ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i5.i.i

if.then.i.i.i:                                    ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %25 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %22, align 4
  %27 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %prev.i.i.i, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %24, i32 0, i32 1
  %29 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %22, ptr %prev3.i.i.i.i, align 4
  store ptr %24, ptr %22, align 4
  %30 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %26, ptr %28, align 4
  %prev6.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %26, i32 0, i32 1
  %31 = ptrtoint ptr %prev6.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %28, ptr %prev6.i.i.i.i, align 4
  br label %if.end.i5.i.i

if.end.i5.i.i:                                    ; preds = %if.then.i.i.i, %do.end.i.i.if.end.i5.i.i_crit_edge
  %32 = ptrtoint ptr %call9.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile ptr, ptr %call9.i.i.i.i.i, align 128
  %cmp.i.not.i4.i.i = icmp eq ptr %33, %call9.i.i.i.i.i
  br i1 %cmp.i.not.i4.i.i, label %if.end.i5.i.i.spi_res_free.exit.i.i_crit_edge, label %do.end.i.i.i, !prof !730

if.end.i5.i.i.spi_res_free.exit.i.i_crit_edge:    ; preds = %if.end.i5.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_res_free.exit.i.i

do.end.i.i.i:                                     ; preds = %if.end.i5.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 893, i32 noundef 9, ptr noundef null) #21
  br label %spi_res_free.exit.i.i

spi_res_free.exit.i.i:                            ; preds = %do.end.i.i.i, %if.end.i5.i.i.spi_res_free.exit.i.i_crit_edge
  tail call void @kfree(ptr noundef nonnull %call9.i.i.i.i.i) #21
  br label %cleanup.split.loop.exit19

if.end14.i.i:                                     ; preds = %spi_res_alloc.exit.i.i
  %call.i.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %18) #21
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %if.end14.i.i.__list_del_entry.exit.i.i.i_crit_edge

if.end14.i.i.__list_del_entry.exit.i.i.i_crit_edge: ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__list_del_entry.exit.i.i.i

if.end.i.i.i.i:                                   ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i6.i.i = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  %34 = ptrtoint ptr %prev.i.i6.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %prev.i.i6.i.i, align 4
  %36 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %18, align 4
  %prev1.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %37, i32 0, i32 1
  %38 = ptrtoint ptr %prev1.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %35, ptr %prev1.i.i.i.i.i, align 4
  %39 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile ptr %37, ptr %35, align 4
  br label %__list_del_entry.exit.i.i.i

__list_del_entry.exit.i.i.i:                      ; preds = %if.end.i.i.i.i, %if.end14.i.i.__list_del_entry.exit.i.i.i_crit_edge
  %40 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %prev.i.i.i, align 4
  %call.i.i.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %18, ptr noundef %41, ptr noundef %replaced_transfers.i.i) #21
  br i1 %call.i.i.i.i.i, label %if.end.i.i.i7.i.i, label %__list_del_entry.exit.i.i.i.list_move_tail.exit.i.i_crit_edge

__list_del_entry.exit.i.i.i.list_move_tail.exit.i.i_crit_edge: ; preds = %__list_del_entry.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_move_tail.exit.i.i

if.end.i.i.i7.i.i:                                ; preds = %__list_del_entry.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %42 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %18, ptr %prev.i.i.i, align 4
  %43 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %replaced_transfers.i.i, ptr %18, align 4
  %prev3.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  %44 = ptrtoint ptr %prev3.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %41, ptr %prev3.i.i.i.i.i, align 4
  %45 = ptrtoint ptr %41 to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile ptr %18, ptr %41, align 4
  br label %list_move_tail.exit.i.i

list_move_tail.exit.i.i:                          ; preds = %if.end.i.i.i7.i.i, %__list_del_entry.exit.i.i.i.list_move_tail.exit.i.i_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %maxsize)
  %cmp1921.not.i.i = icmp ult i32 %sub.i, %maxsize
  br i1 %cmp1921.not.i.i, label %list_move_tail.exit.i.i.for.end31.i.i_crit_edge, label %for.body20.preheader.i.i

list_move_tail.exit.i.i.for.end31.i.i_crit_edge:  ; preds = %list_move_tail.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end31.i.i

for.body20.preheader.i.i:                         ; preds = %list_move_tail.exit.i.i
  %sub22.peel.i.i = add i32 %div.i, -1
  %arrayidx23.peel.i.i = getelementptr %struct.spi_replaced_transfers, ptr %data.i.i.i, i32 0, i32 5, i32 %sub22.peel.i.i
  %46 = call ptr @memcpy(ptr %arrayidx23.peel.i.i, ptr %storemerge25, i32 96)
  %transfer_list24.peel.i.i = getelementptr %struct.spi_replaced_transfers, ptr %data.i.i.i, i32 0, i32 5, i32 %sub22.peel.i.i, i32 18
  %47 = ptrtoint ptr %replaced_after.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %replaced_after.i.i, align 32
  %49 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %48, align 4
  %call.i.i8.peel.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %transfer_list24.peel.i.i, ptr noundef %48, ptr noundef %50) #21
  br i1 %call.i.i8.peel.i.i, label %if.end.i.i10.peel.i.i, label %for.body20.preheader.i.i.for.inc29.peel.i.i_crit_edge

for.body20.preheader.i.i.for.inc29.peel.i.i_crit_edge: ; preds = %for.body20.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc29.peel.i.i

if.end.i.i10.peel.i.i:                            ; preds = %for.body20.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %prev1.i.i.peel.i.i = getelementptr inbounds %struct.list_head, ptr %50, i32 0, i32 1
  %51 = ptrtoint ptr %prev1.i.i.peel.i.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %transfer_list24.peel.i.i, ptr %prev1.i.i.peel.i.i, align 4
  %52 = ptrtoint ptr %transfer_list24.peel.i.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %50, ptr %transfer_list24.peel.i.i, align 4
  %prev3.i.i9.peel.i.i = getelementptr %struct.spi_replaced_transfers, ptr %data.i.i.i, i32 0, i32 5, i32 %sub22.peel.i.i, i32 18, i32 1
  %53 = ptrtoint ptr %prev3.i.i9.peel.i.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %48, ptr %prev3.i.i9.peel.i.i, align 32
  %54 = ptrtoint ptr %48 to i32
  call void @__asan_store4_noabort(i32 %54)
  store volatile ptr %transfer_list24.peel.i.i, ptr %48, align 4
  br label %for.inc29.peel.i.i

for.inc29.peel.i.i:                               ; preds = %if.end.i.i10.peel.i.i, %for.body20.preheader.i.i.for.inc29.peel.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %div.i)
  %exitcond.peel.not.i.i = icmp eq i32 %div.i, 1
  br i1 %exitcond.peel.not.i.i, label %for.inc29.peel.i.i.for.end31.i.i_crit_edge, label %for.inc29.peel.i.i.for.body20.i.i_crit_edge

for.inc29.peel.i.i.for.body20.i.i_crit_edge:      ; preds = %for.inc29.peel.i.i
  br label %for.body20.i.i

for.inc29.peel.i.i.for.end31.i.i_crit_edge:       ; preds = %for.inc29.peel.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end31.i.i

for.body20.i.i:                                   ; preds = %for.inc29.i.i.for.body20.i.i_crit_edge, %for.inc29.peel.i.i.for.body20.i.i_crit_edge
  %i.122.i.i = phi i32 [ %inc30.i.i, %for.inc29.i.i.for.body20.i.i_crit_edge ], [ 1, %for.inc29.peel.i.i.for.body20.i.i_crit_edge ]
  %55 = xor i32 %i.122.i.i, -1
  %sub22.i.i = add i32 %div.i, %55
  %arrayidx23.i.i = getelementptr %struct.spi_replaced_transfers, ptr %data.i.i.i, i32 0, i32 5, i32 %sub22.i.i
  %56 = call ptr @memcpy(ptr %arrayidx23.i.i, ptr %storemerge25, i32 96)
  %transfer_list24.i.i = getelementptr %struct.spi_replaced_transfers, ptr %data.i.i.i, i32 0, i32 5, i32 %sub22.i.i, i32 18
  %57 = ptrtoint ptr %replaced_after.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %replaced_after.i.i, align 32
  %59 = ptrtoint ptr %58 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %58, align 4
  %call.i.i8.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %transfer_list24.i.i, ptr noundef %58, ptr noundef %60) #21
  br i1 %call.i.i8.i.i, label %if.end.i.i10.i.i, label %for.body20.i.i.for.inc29.i.i_crit_edge

for.body20.i.i.for.inc29.i.i_crit_edge:           ; preds = %for.body20.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc29.i.i

if.end.i.i10.i.i:                                 ; preds = %for.body20.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %60, i32 0, i32 1
  %61 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %transfer_list24.i.i, ptr %prev1.i.i.i.i, align 4
  %62 = ptrtoint ptr %transfer_list24.i.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %60, ptr %transfer_list24.i.i, align 4
  %prev3.i.i9.i.i = getelementptr %struct.spi_replaced_transfers, ptr %data.i.i.i, i32 0, i32 5, i32 %sub22.i.i, i32 18, i32 1
  %63 = ptrtoint ptr %prev3.i.i9.i.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %58, ptr %prev3.i.i9.i.i, align 32
  %64 = ptrtoint ptr %58 to i32
  call void @__asan_store4_noabort(i32 %64)
  store volatile ptr %transfer_list24.i.i, ptr %58, align 4
  br label %for.inc29.i.i

for.inc29.i.i:                                    ; preds = %if.end.i.i10.i.i, %for.body20.i.i.for.inc29.i.i_crit_edge
  %cs_change.i.i = getelementptr %struct.spi_replaced_transfers, ptr %data.i.i.i, i32 0, i32 5, i32 %sub22.i.i, i32 7
  %65 = ptrtoint ptr %cs_change.i.i to i32
  call void @__asan_load1_noabort(i32 %65)
  %bf.load.i.i = load i8, ptr %cs_change.i.i, align 4
  %bf.clear.i.i = and i8 %bf.load.i.i, -65
  store i8 %bf.clear.i.i, ptr %cs_change.i.i, align 4
  %delay.i.i = getelementptr %struct.spi_replaced_transfers, ptr %data.i.i.i, i32 0, i32 5, i32 %sub22.i.i, i32 9
  %66 = ptrtoint ptr %delay.i.i to i32
  call void @__asan_store2_noabort(i32 %66)
  store i16 0, ptr %delay.i.i, align 2
  %inc30.i.i = add nuw i32 %i.122.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc30.i.i, %div.i
  br i1 %exitcond.not.i.i, label %for.inc29.i.i.for.end31.i.i_crit_edge, label %for.inc29.i.i.for.body20.i.i_crit_edge, !llvm.loop !748

for.inc29.i.i.for.body20.i.i_crit_edge:           ; preds = %for.inc29.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body20.i.i

for.inc29.i.i.for.end31.i.i_crit_edge:            ; preds = %for.inc29.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end31.i.i

for.end31.i.i:                                    ; preds = %for.inc29.i.i.for.end31.i.i_crit_edge, %for.inc29.peel.i.i.for.end31.i.i_crit_edge, %list_move_tail.exit.i.i.for.end31.i.i_crit_edge
  %inserted.i.i = getelementptr inbounds %struct.spi_res, ptr %call9.i.i.i.i.i, i32 2, i32 0, i32 1
  %67 = ptrtoint ptr %inserted.i.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %div.i, ptr %inserted.i.i, align 4
  %68 = ptrtoint ptr %call9.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile ptr, ptr %call9.i.i.i.i.i, align 128
  %cmp.i.not.i12.i.i = icmp eq ptr %69, %call9.i.i.i.i.i
  br i1 %cmp.i.not.i12.i.i, label %for.end31.i.i.if.end.i16.i.i_crit_edge, label %do.end.i13.i.i, !prof !730

for.end31.i.i.if.end.i16.i.i_crit_edge:           ; preds = %for.end31.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i16.i.i

do.end.i13.i.i:                                   ; preds = %for.end31.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 906, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i16.i.i

if.end.i16.i.i:                                   ; preds = %do.end.i13.i.i, %for.end31.i.i.if.end.i16.i.i_crit_edge
  %70 = ptrtoint ptr %prev.i.i14.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %prev.i.i14.i.i, align 4
  %call.i.i.i15.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call9.i.i.i.i.i, ptr noundef %71, ptr noundef %resources.i.i.i) #21
  br i1 %call.i.i.i15.i.i, label %if.end.i.i.i18.i.i, label %if.end.i16.i.i.spi_replace_transfers.exit.i_crit_edge

if.end.i16.i.i.spi_replace_transfers.exit.i_crit_edge: ; preds = %if.end.i16.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_replace_transfers.exit.i

if.end.i.i.i18.i.i:                               ; preds = %if.end.i16.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %72 = ptrtoint ptr %prev.i.i14.i.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr %call9.i.i.i.i.i, ptr %prev.i.i14.i.i, align 4
  %73 = ptrtoint ptr %call9.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr %resources.i.i.i, ptr %call9.i.i.i.i.i, align 128
  %74 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr %71, ptr %prev.i.i.i.i, align 4
  %75 = ptrtoint ptr %71 to i32
  call void @__asan_store4_noabort(i32 %75)
  store volatile ptr %call9.i.i.i.i.i, ptr %71, align 4
  br label %spi_replace_transfers.exit.i

spi_replace_transfers.exit.i:                     ; preds = %if.end.i.i.i18.i.i, %if.end.i16.i.i.spi_replace_transfers.exit.i_crit_edge
  %cmp.i.i = icmp ugt ptr %data.i.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %spi_replace_transfers.exit.i.cleanup.split.loop.exit19_crit_edge, label %if.end.i

spi_replace_transfers.exit.i.cleanup.split.loop.exit19_crit_edge: ; preds = %spi_replace_transfers.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.split.loop.exit19

if.end.i:                                         ; preds = %spi_replace_transfers.exit.i
  %inserted_transfers.i = getelementptr inbounds %struct.spi_res, ptr %call9.i.i.i.i.i, i32 2, i32 1
  %76 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %len, align 4
  %78 = tail call i32 @llvm.umin.i32(i32 %77, i32 %maxsize) #21
  %len5.i = getelementptr inbounds %struct.spi_res, ptr %call9.i.i.i.i.i, i32 3
  %79 = ptrtoint ptr %len5.i to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 %78, ptr %len5.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %div.i)
  %cmp6147.i = icmp ugt i32 %div.i, 1
  br i1 %cmp6147.i, label %if.end.i.for.body.i_crit_edge, label %if.end.i.__spi_split_transfer_maxsize.exit.thread_crit_edge

if.end.i.__spi_split_transfer_maxsize.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__spi_split_transfer_maxsize.exit.thread

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  br label %for.body.i

for.body.i:                                       ; preds = %if.end32.i.for.body.i_crit_edge, %if.end.i.for.body.i_crit_edge
  %offset.0149.i = phi i32 [ %add44.i, %if.end32.i.for.body.i_crit_edge ], [ %maxsize, %if.end.i.for.body.i_crit_edge ]
  %i.0148.i = phi i32 [ %inc.i, %if.end32.i.for.body.i_crit_edge ], [ 1, %if.end.i.for.body.i_crit_edge ]
  %arrayidx7.i = getelementptr %struct.spi_transfer, ptr %inserted_transfers.i, i32 %i.0148.i
  %rx_buf.i = getelementptr %struct.spi_transfer, ptr %inserted_transfers.i, i32 %i.0148.i, i32 1
  %80 = ptrtoint ptr %rx_buf.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %rx_buf.i, align 4
  %tobool.not.i = icmp eq ptr %81, null
  br i1 %tobool.not.i, label %for.body.i.if.end11.i_crit_edge, label %if.then8.i

for.body.i.if.end11.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end11.i

if.then8.i:                                       ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  %add.ptr.i = getelementptr i8, ptr %81, i32 %offset.0149.i
  %82 = ptrtoint ptr %rx_buf.i to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr %add.ptr.i, ptr %rx_buf.i, align 4
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then8.i, %for.body.i.if.end11.i_crit_edge
  %rx_dma.i = getelementptr %struct.spi_transfer, ptr %inserted_transfers.i, i32 %i.0148.i, i32 4
  %83 = ptrtoint ptr %rx_dma.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %rx_dma.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %84)
  %tobool13.not.i = icmp eq i32 %84, 0
  br i1 %tobool13.not.i, label %if.end11.i.if.end18.i_crit_edge, label %if.then14.i

if.end11.i.if.end18.i_crit_edge:                  ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end18.i

if.then14.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #23
  %add17.i = add i32 %84, %offset.0149.i
  %85 = ptrtoint ptr %rx_dma.i to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 %add17.i, ptr %rx_dma.i, align 8
  br label %if.end18.i

if.end18.i:                                       ; preds = %if.then14.i, %if.end11.i.if.end18.i_crit_edge
  %86 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %arrayidx7.i, align 8
  %tobool20.not.i = icmp eq ptr %87, null
  br i1 %tobool20.not.i, label %if.end18.i.if.end25.i_crit_edge, label %if.then21.i

if.end18.i.if.end25.i_crit_edge:                  ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end25.i

if.then21.i:                                      ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #23
  %add.ptr24.i = getelementptr i8, ptr %87, i32 %offset.0149.i
  %88 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_store4_noabort(i32 %88)
  store ptr %add.ptr24.i, ptr %arrayidx7.i, align 8
  br label %if.end25.i

if.end25.i:                                       ; preds = %if.then21.i, %if.end18.i.if.end25.i_crit_edge
  %tx_dma.i = getelementptr %struct.spi_transfer, ptr %inserted_transfers.i, i32 %i.0148.i, i32 3
  %89 = ptrtoint ptr %tx_dma.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %tx_dma.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %90)
  %tobool27.not.i = icmp eq i32 %90, 0
  br i1 %tobool27.not.i, label %if.end25.i.if.end32.i_crit_edge, label %if.then28.i

if.end25.i.if.end32.i_crit_edge:                  ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end32.i

if.then28.i:                                      ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #23
  %add31.i = add i32 %90, %offset.0149.i
  %91 = ptrtoint ptr %tx_dma.i to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 %add31.i, ptr %tx_dma.i, align 4
  br label %if.end32.i

if.end32.i:                                       ; preds = %if.then28.i, %if.end25.i.if.end32.i_crit_edge
  %len34.i = getelementptr %struct.spi_transfer, ptr %inserted_transfers.i, i32 %i.0148.i, i32 2
  %92 = ptrtoint ptr %len34.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %len34.i, align 16
  %sub35.i = sub i32 %93, %offset.0149.i
  %94 = tail call i32 @llvm.umin.i32(i32 %sub35.i, i32 %maxsize) #21
  %95 = ptrtoint ptr %len34.i to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 %94, ptr %len34.i, align 16
  %add44.i = add i32 %offset.0149.i, %maxsize
  %inc.i = add nuw i32 %i.0148.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %div.i
  br i1 %exitcond.not.i, label %if.end32.i.__spi_split_transfer_maxsize.exit.thread_crit_edge, label %if.end32.i.for.body.i_crit_edge

if.end32.i.for.body.i_crit_edge:                  ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

if.end32.i.__spi_split_transfer_maxsize.exit.thread_crit_edge: ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__spi_split_transfer_maxsize.exit.thread

__spi_split_transfer_maxsize.exit.thread:         ; preds = %if.end32.i.__spi_split_transfer_maxsize.exit.thread_crit_edge, %if.end.i.__spi_split_transfer_maxsize.exit.thread_crit_edge
  %sub45.i = add i32 %div.i, -1
  %arrayidx46.i = getelementptr %struct.spi_transfer, ptr %inserted_transfers.i, i32 %sub45.i
  %call52.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics.i) #21
  %96 = ptrtoint ptr %transfers_split_maxsize.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %transfers_split_maxsize.i, align 4
  %add56.i = add i32 %97, 1
  store i32 %add56.i, ptr %transfers_split_maxsize.i, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics.i, i32 noundef %call52.i) #21
  %98 = ptrtoint ptr %spi.i.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %spi.i.i, align 4
  %statistics70.i = getelementptr inbounds %struct.spi_device, ptr %99, i32 0, i32 19
  %call73.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics70.i) #21
  %100 = ptrtoint ptr %spi.i.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %spi.i.i, align 4
  %transfers_split_maxsize80.i = getelementptr inbounds %struct.spi_device, ptr %101, i32 0, i32 19, i32 12
  %102 = ptrtoint ptr %transfers_split_maxsize80.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %transfers_split_maxsize80.i, align 4
  %add81.i = add i32 %103, 1
  store i32 %add81.i, ptr %transfers_split_maxsize80.i, align 4
  %104 = load ptr, ptr %spi.i.i, align 4
  %statistics83.i = getelementptr inbounds %struct.spi_device, ptr %104, i32 0, i32 19
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics83.i, i32 noundef %call73.i) #21
  br label %for.inc

for.inc:                                          ; preds = %__spi_split_transfer_maxsize.exit.thread, %for.body.for.inc_crit_edge
  %xfer.1 = phi ptr [ %storemerge25, %for.body.for.inc_crit_edge ], [ %arrayidx46.i, %__spi_split_transfer_maxsize.exit.thread ]
  %transfer_list6 = getelementptr inbounds %struct.spi_transfer, ptr %xfer.1, i32 0, i32 18
  %105 = ptrtoint ptr %transfer_list6 to i32
  call void @__asan_load4_noabort(i32 %105)
  %.pn = load ptr, ptr %transfer_list6, align 4
  %cmp.not = icmp eq ptr %.pn, %msg
  br i1 %cmp.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

cleanup.split.loop.exit19:                        ; preds = %spi_replace_transfers.exit.i.cleanup.split.loop.exit19_crit_edge, %spi_res_free.exit.i.i, %if.then.cleanup.split.loop.exit19_crit_edge
  %retval.0.i146.i29 = phi ptr [ inttoptr (i32 -22 to ptr), %spi_res_free.exit.i.i ], [ inttoptr (i32 -12 to ptr), %if.then.cleanup.split.loop.exit19_crit_edge ], [ %data.i.i.i, %spi_replace_transfers.exit.i.cleanup.split.loop.exit19_crit_edge ]
  %106 = ptrtoint ptr %retval.0.i146.i29 to i32
  br label %cleanup

cleanup:                                          ; preds = %cleanup.split.loop.exit19, %for.inc.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %106, %cleanup.split.loop.exit19 ], [ 0, %entry.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @spi_setup(ptr noundef %spi) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %mode = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 7
  %0 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mode, align 8
  %and = and i32 %1, -2147482880
  %call.i.i = tail call i32 @__sw_hweight32(i32 noundef %and) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i.i)
  %cmp = icmp ugt i32 %call.i.i, 1
  br i1 %cmp, label %entry.do.end_crit_edge, label %cond.false.i317

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

cond.false.i317:                                  ; preds = %entry
  %2 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mode, align 8
  %and2 = and i32 %3, 1073744896
  %call.i.i316 = tail call i32 @__sw_hweight32(i32 noundef %and2) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i.i316)
  %cmp4 = icmp ugt i32 %call.i.i316, 1
  br i1 %cmp4, label %cond.false.i317.do.end_crit_edge, label %if.end

cond.false.i317.do.end_crit_edge:                 ; preds = %cond.false.i317
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

do.end:                                           ; preds = %cond.false.i317.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %spi, ptr noundef nonnull @.str.38) #26
  br label %cleanup

if.end:                                           ; preds = %cond.false.i317
  %4 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mode, align 8
  %and6 = and i32 %5, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6)
  %tobool.not = icmp eq i32 %and6, 0
  %and8 = and i32 %5, 28416
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  %or.cond = or i1 %tobool.not, %tobool9.not
  br i1 %or.cond, label %if.end11, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end11:                                         ; preds = %if.end
  %controller = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 1
  %6 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %controller, align 8
  %mode_bits = getelementptr inbounds %struct.spi_controller, ptr %7, i32 0, i32 5
  %8 = ptrtoint ptr %mode_bits to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mode_bits, align 8
  %10 = and i32 %9, 1073737727
  %neg = xor i32 %10, 1073737727
  %and15 = and i32 %neg, %5
  %cs_gpio = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 13
  %11 = ptrtoint ptr %cs_gpio to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cs_gpio, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2048, i32 %12)
  %13 = icmp ult i32 %12, 2048
  %and18 = and i32 %and15, 1073737723
  %spec.select = select i1 %13, i32 %and18, i32 %and15
  %and20 = and i32 %spec.select, 28416
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20)
  %tobool21.not = icmp eq i32 %and20, 0
  br i1 %tobool21.not, label %if.end11.if.end32_crit_edge, label %do.end25

if.end11.if.end32_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end32

do.end25:                                         ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %spi, ptr noundef nonnull @.str.41, i32 noundef %and20) #26
  %neg27 = xor i32 %and20, -1
  %14 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %mode, align 8
  %and29 = and i32 %15, %neg27
  store i32 %and29, ptr %mode, align 8
  %and31 = and i32 %spec.select, 1073709311
  br label %if.end32

if.end32:                                         ; preds = %do.end25, %if.end11.if.end32_crit_edge
  %bad_bits.1 = phi i32 [ %and31, %do.end25 ], [ %spec.select, %if.end11.if.end32_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bad_bits.1)
  %tobool33.not = icmp eq i32 %bad_bits.1, 0
  br i1 %tobool33.not, label %if.end39, label %do.end37

do.end37:                                         ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %spi, ptr noundef nonnull @.str.45, i32 noundef %bad_bits.1) #26
  br label %cleanup

if.end39:                                         ; preds = %if.end32
  %bits_per_word = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 5
  %16 = ptrtoint ptr %bits_per_word to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %bits_per_word, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool40.not = icmp eq i8 %17, 0
  br i1 %tobool40.not, label %if.end43.thread, label %if.end43

if.end43:                                         ; preds = %if.end39
  %18 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %controller, align 8
  %bits_per_word_mask.i = getelementptr inbounds %struct.spi_controller, ptr %19, i32 0, i32 7
  %20 = ptrtoint ptr %bits_per_word_mask.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %bits_per_word_mask.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool.not.i = icmp eq i32 %21, 0
  br i1 %tobool.not.i, label %if.end43.if.end49_crit_edge, label %if.then.i

if.end43.if.end49_crit_edge:                      ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end49

if.end43.thread:                                  ; preds = %if.end39
  %22 = ptrtoint ptr %bits_per_word to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 8, ptr %bits_per_word, align 1
  %23 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %controller, align 8
  %bits_per_word_mask.i323 = getelementptr inbounds %struct.spi_controller, ptr %24, i32 0, i32 7
  %25 = ptrtoint ptr %bits_per_word_mask.i323 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %bits_per_word_mask.i323, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool.not.i324 = icmp eq i32 %26, 0
  br i1 %tobool.not.i324, label %if.end43.thread.if.end49_crit_edge, label %if.end43.thread.if.end.i_crit_edge

if.end43.thread.if.end.i_crit_edge:               ; preds = %if.end43.thread
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

if.end43.thread.if.end49_crit_edge:               ; preds = %if.end43.thread
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end49

if.then.i:                                        ; preds = %if.end43
  call void @__sanitizer_cov_trace_const_cmp1(i8 32, i8 %17)
  %cmp.i = icmp ugt i8 %17, 32
  br i1 %cmp.i, label %if.then.i.cleanup_crit_edge, label %if.then.i.if.end.i_crit_edge

if.then.i.if.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i:                                         ; preds = %if.then.i.if.end.i_crit_edge, %if.end43.thread.if.end.i_crit_edge
  %27 = phi i8 [ %17, %if.then.i.if.end.i_crit_edge ], [ 8, %if.end43.thread.if.end.i_crit_edge ]
  %28 = phi ptr [ %19, %if.then.i.if.end.i_crit_edge ], [ %24, %if.end43.thread.if.end.i_crit_edge ]
  %29 = phi i32 [ %21, %if.then.i.if.end.i_crit_edge ], [ %26, %if.end43.thread.if.end.i_crit_edge ]
  %conv.i = zext i8 %27 to i32
  %sub.i = add nsw i32 %conv.i, -1
  %shl.i = shl nuw i32 1, %sub.i
  %and.i = and i32 %shl.i, %29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool5.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool5.not.i, label %if.end.i.cleanup_crit_edge, label %if.end.i.if.end49_crit_edge

if.end.i.if.end49_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end49

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end49:                                         ; preds = %if.end.i.if.end49_crit_edge, %if.end43.thread.if.end49_crit_edge, %if.end43.if.end49_crit_edge
  %30 = phi ptr [ %24, %if.end43.thread.if.end49_crit_edge ], [ %28, %if.end.i.if.end49_crit_edge ], [ %19, %if.end43.if.end49_crit_edge ]
  %max_speed_hz = getelementptr inbounds %struct.spi_controller, ptr %30, i32 0, i32 9
  %31 = ptrtoint ptr %max_speed_hz to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %max_speed_hz, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool51.not = icmp eq i32 %32, 0
  br i1 %tobool51.not, label %if.end49.if.end64_crit_edge, label %land.lhs.true52

if.end49.if.end64_crit_edge:                      ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end64

land.lhs.true52:                                  ; preds = %if.end49
  %max_speed_hz53 = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 3
  %33 = ptrtoint ptr %max_speed_hz53 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %max_speed_hz53, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool54.not = icmp eq i32 %34, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %34, i32 %32)
  %cmp59 = icmp ugt i32 %34, %32
  %or.cond226 = select i1 %tobool54.not, i1 true, i1 %cmp59
  br i1 %or.cond226, label %if.then60, label %land.lhs.true52.if.end64_crit_edge

land.lhs.true52.if.end64_crit_edge:               ; preds = %land.lhs.true52
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end64

if.then60:                                        ; preds = %land.lhs.true52
  call void @__sanitizer_cov_trace_pc() #23
  %35 = ptrtoint ptr %max_speed_hz53 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %32, ptr %max_speed_hz53, align 8
  br label %if.end64

if.end64:                                         ; preds = %if.then60, %land.lhs.true52.if.end64_crit_edge, %if.end49.if.end64_crit_edge
  %io_mutex = getelementptr inbounds %struct.spi_controller, ptr %30, i32 0, i32 15
  tail call void @mutex_lock_nested(ptr noundef %io_mutex, i32 noundef 0) #21
  %36 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %controller, align 8
  %setup = getelementptr inbounds %struct.spi_controller, ptr %37, i32 0, i32 20
  %38 = ptrtoint ptr %setup to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %setup, align 4
  %tobool67.not = icmp eq ptr %39, null
  br i1 %tobool67.not, label %if.end64.if.end82_crit_edge, label %if.then68

if.end64.if.end82_crit_edge:                      ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end82

if.then68:                                        ; preds = %if.end64
  %call71 = tail call i32 %39(ptr noundef %spi) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call71)
  %tobool72.not = icmp eq i32 %call71, 0
  br i1 %tobool72.not, label %if.then68.if.end82_crit_edge, label %if.then73

if.then68.if.end82_crit_edge:                     ; preds = %if.then68
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end82

if.then73:                                        ; preds = %if.then68
  call void @__sanitizer_cov_trace_pc() #23
  %40 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %controller, align 8
  %io_mutex75 = getelementptr inbounds %struct.spi_controller, ptr %41, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %io_mutex75) #21
  %42 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %controller, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %43, ptr noundef nonnull @.str.48, i32 noundef %call71) #26
  br label %cleanup

if.end82:                                         ; preds = %if.then68.if.end82_crit_edge, %if.end64.if.end82_crit_edge
  %44 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %controller, align 8
  %auto_runtime_pm = getelementptr inbounds %struct.spi_controller, ptr %45, i32 0, i32 36
  %46 = ptrtoint ptr %auto_runtime_pm to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %auto_runtime_pm, align 4, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %47)
  %tobool84.not = icmp eq i8 %47, 0
  br i1 %tobool84.not, label %if.end82.if.else_crit_edge, label %land.lhs.true85

if.end82.if.else_crit_edge:                       ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

land.lhs.true85:                                  ; preds = %if.end82
  %set_cs = getelementptr inbounds %struct.spi_controller, ptr %45, i32 0, i32 50
  %48 = ptrtoint ptr %set_cs to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %set_cs, align 8
  %tobool87.not = icmp eq ptr %49, null
  br i1 %tobool87.not, label %land.lhs.true85.if.else_crit_edge, label %if.then88

land.lhs.true85.if.else_crit_edge:                ; preds = %land.lhs.true85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

if.then88:                                        ; preds = %land.lhs.true85
  %parent = getelementptr inbounds %struct.device, ptr %45, i32 0, i32 1
  %50 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %parent, align 8
  %call.i = tail call i32 @__pm_runtime_resume(ptr noundef %51, i32 noundef 4) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp92 = icmp slt i32 %call.i, 0
  br i1 %cmp92, label %if.then93, label %if.end104

if.then93:                                        ; preds = %if.then88
  call void @__sanitizer_cov_trace_pc() #23
  %52 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %controller, align 8
  %io_mutex95 = getelementptr inbounds %struct.spi_controller, ptr %53, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %io_mutex95) #21
  %54 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %controller, align 8
  %parent98 = getelementptr inbounds %struct.device, ptr %55, i32 0, i32 1
  %56 = ptrtoint ptr %parent98 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %parent98, align 8
  tail call fastcc void @pm_runtime_put_noidle(ptr noundef %57)
  %58 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %controller, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %59, ptr noundef nonnull @.str.51, i32 noundef %call.i) #26
  br label %cleanup

if.end104:                                        ; preds = %if.then88
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @spi_set_cs(ptr noundef %spi, i1 noundef zeroext false, i1 noundef zeroext true)
  %60 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %controller, align 8
  %parent107 = getelementptr inbounds %struct.device, ptr %61, i32 0, i32 1
  %62 = ptrtoint ptr %parent107 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %parent107, align 8
  %call.i321 = tail call i64 @ktime_get_mono_fast_ns() #21
  %last_busy.i = getelementptr inbounds %struct.device, ptr %63, i32 0, i32 12, i32 22
  %64 = ptrtoint ptr %last_busy.i to i32
  call void @__asan_store8_noabort(i32 %64)
  store volatile i64 %call.i321, ptr %last_busy.i, align 8
  %65 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %controller, align 8
  %parent110 = getelementptr inbounds %struct.device, ptr %66, i32 0, i32 1
  %67 = ptrtoint ptr %parent110 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %parent110, align 8
  %call.i322 = tail call i32 @__pm_runtime_suspend(ptr noundef %68, i32 noundef 13) #21
  br label %if.end112

if.else:                                          ; preds = %land.lhs.true85.if.else_crit_edge, %if.end82.if.else_crit_edge
  tail call fastcc void @spi_set_cs(ptr noundef %spi, i1 noundef zeroext false, i1 noundef zeroext true)
  br label %if.end112

if.end112:                                        ; preds = %if.else, %if.end104
  %69 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %controller, align 8
  %io_mutex114 = getelementptr inbounds %struct.spi_controller, ptr %70, i32 0, i32 15
  tail call void @mutex_unlock(ptr noundef %io_mutex114) #21
  %rt = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 6
  %71 = ptrtoint ptr %rt to i32
  call void @__asan_load1_noabort(i32 %71)
  %72 = load i8, ptr %rt, align 2, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %72)
  %tobool115.not = icmp eq i8 %72, 0
  br i1 %tobool115.not, label %if.end112.if.end124_crit_edge, label %land.lhs.true116

if.end112.if.end124_crit_edge:                    ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end124

land.lhs.true116:                                 ; preds = %if.end112
  %73 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %controller, align 8
  %rt118 = getelementptr inbounds %struct.spi_controller, ptr %74, i32 0, i32 35
  %75 = ptrtoint ptr %rt118 to i32
  call void @__asan_load1_noabort(i32 %75)
  %76 = load i8, ptr %rt118, align 1, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %76)
  %tobool119.not = icmp eq i8 %76, 0
  br i1 %tobool119.not, label %if.then120, label %land.lhs.true116.if.end124_crit_edge

land.lhs.true116.if.end124_crit_edge:             ; preds = %land.lhs.true116
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end124

if.then120:                                       ; preds = %land.lhs.true116
  call void @__sanitizer_cov_trace_pc() #23
  %77 = ptrtoint ptr %rt118 to i32
  call void @__asan_store1_noabort(i32 %77)
  store i8 1, ptr %rt118, align 1
  %78 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %controller, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %79, ptr noundef nonnull @.str.234) #26
  %kworker.i = getelementptr inbounds %struct.spi_controller, ptr %79, i32 0, i32 27
  %80 = ptrtoint ptr %kworker.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %kworker.i, align 8
  %task.i = getelementptr inbounds %struct.kthread_worker, ptr %81, i32 0, i32 4
  %82 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %task.i, align 4
  tail call void @sched_set_fifo(ptr noundef %83) #21
  br label %if.end124

if.end124:                                        ; preds = %if.then120, %land.lhs.true116.if.end124_crit_edge, %if.end112.if.end124_crit_edge
  tail call fastcc void @trace_spi_setup(ptr noundef %spi)
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @spi_setup.__UNIQUE_ID_ddebug372, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@spi_setup, %cleanup)) #21
          to label %if.then131 [label %cleanup], !srcloc !742

if.then131:                                       ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #23
  %84 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %mode, align 8
  %and134 = and i32 %85, 3
  %and136 = and i32 %85, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and136)
  %tobool137.not = icmp eq i32 %and136, 0
  %cond = select i1 %tobool137.not, ptr @.str.55, ptr @.str.54
  %and139 = and i32 %85, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and139)
  %tobool140.not = icmp eq i32 %and139, 0
  %cond141 = select i1 %tobool140.not, ptr @.str.55, ptr @.str.56
  %and143 = and i32 %85, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and143)
  %tobool144.not = icmp eq i32 %and143, 0
  %cond145 = select i1 %tobool144.not, ptr @.str.55, ptr @.str.57
  %and147 = and i32 %85, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and147)
  %tobool148.not = icmp eq i32 %and147, 0
  %cond149 = select i1 %tobool148.not, ptr @.str.55, ptr @.str.58
  %86 = ptrtoint ptr %bits_per_word to i32
  call void @__asan_load1_noabort(i32 %86)
  %87 = load i8, ptr %bits_per_word, align 1
  %conv = zext i8 %87 to i32
  %max_speed_hz151 = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 3
  %88 = ptrtoint ptr %max_speed_hz151 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %max_speed_hz151, align 8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @spi_setup.__UNIQUE_ID_ddebug372, ptr noundef %spi, ptr noundef nonnull @.str.53, i32 noundef %and134, ptr noundef nonnull %cond, ptr noundef nonnull %cond141, ptr noundef nonnull %cond145, ptr noundef nonnull %cond149, i32 noundef %conv, i32 noundef %89, i32 noundef 0) #21
  br label %cleanup

cleanup:                                          ; preds = %if.then131, %if.end124, %if.then93, %if.then73, %if.end.i.cleanup_crit_edge, %if.then.i.cleanup_crit_edge, %do.end37, %if.end.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ -22, %do.end37 ], [ %call71, %if.then73 ], [ %call.i, %if.then93 ], [ -22, %if.end.cleanup_crit_edge ], [ 0, %if.then131 ], [ -22, %if.then.i.cleanup_crit_edge ], [ -22, %if.end.i.cleanup_crit_edge ], [ 0, %if.end124 ]
  ret i32 %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pm_runtime_put_noidle(ptr noundef %dev) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %usage_count = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12, i32 13
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage_count, i32 noundef 4) #21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !750
  tail call void @llvm.prefetch.p0(ptr %usage_count, i32 1, i32 3, i32 1) #21
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %usage_count, ptr %usage_count, i32 0, i32 -1, ptr elementtype(i32) %usage_count) #21, !srcloc !751
  %asmresult.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i)
  %cmp.not.i.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %cmp.not.i.i.i, label %entry.atomic_add_unless.exit_crit_edge, label %do.end11.i.i.i

entry.atomic_add_unless.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %atomic_add_unless.exit

do.end11.i.i.i:                                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !752
  br label %atomic_add_unless.exit

atomic_add_unless.exit:                           ; preds = %do.end11.i.i.i, %entry.atomic_add_unless.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @spi_set_cs(ptr noundef %spi, i1 noundef zeroext %enable, i1 noundef zeroext %force) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %frombool = zext i1 %enable to i8
  br i1 %force, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %controller = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 1
  %0 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %controller, align 8
  %last_cs_enable = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 39
  %2 = ptrtoint ptr %last_cs_enable to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %last_cs_enable, align 1, !range !736
  call void @__sanitizer_cov_trace_cmp1(i8 %3, i8 %frombool)
  %cmp = icmp eq i8 %3, %frombool
  br i1 %cmp, label %land.lhs.true8, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true8:                                   ; preds = %land.lhs.true
  %last_cs_mode_high = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 40
  %4 = ptrtoint ptr %last_cs_mode_high to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %last_cs_mode_high, align 8, !range !736
  %6 = zext i8 %5 to i32
  %mode = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 7
  %7 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %mode, align 8
  %and = and i32 %8, 4
  call void @__sanitizer_cov_trace_cmp4(i32 %and, i32 %6)
  %cmp12 = icmp eq i32 %and, %6
  br i1 %cmp12, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  tail call fastcc void @trace_spi_set_cs(ptr noundef %spi, i1 noundef zeroext %enable)
  %controller16 = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 1
  %9 = ptrtoint ptr %controller16 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %controller16, align 8
  %last_cs_enable17 = getelementptr inbounds %struct.spi_controller, ptr %10, i32 0, i32 39
  %11 = ptrtoint ptr %last_cs_enable17 to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %frombool, ptr %last_cs_enable17, align 1
  %mode19 = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 7
  %12 = ptrtoint ptr %mode19 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %mode19, align 8
  %14 = load ptr, ptr %controller16, align 8
  %last_cs_mode_high23 = getelementptr inbounds %struct.spi_controller, ptr %14, i32 0, i32 40
  %15 = trunc i32 %13 to i8
  %16 = lshr i8 %15, 2
  %17 = and i8 %16, 1
  %18 = ptrtoint ptr %last_cs_mode_high23 to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %17, ptr %last_cs_mode_high23, align 8
  %cs_gpiod = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 14
  %19 = ptrtoint ptr %cs_gpiod to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %cs_gpiod, align 8
  %tobool25.not = icmp eq ptr %20, null
  br i1 %tobool25.not, label %lor.lhs.false, label %if.end.land.lhs.true30_crit_edge

if.end.land.lhs.true30_crit_edge:                 ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.lhs.true30

lor.lhs.false:                                    ; preds = %if.end
  %cs_gpio = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 13
  %21 = ptrtoint ptr %cs_gpio to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %cs_gpio, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2048, i32 %22)
  %23 = icmp ult i32 %22, 2048
  br i1 %23, label %lor.lhs.false.land.lhs.true30_crit_edge, label %lor.lhs.false27

lor.lhs.false.land.lhs.true30_crit_edge:          ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.lhs.true30

lor.lhs.false27:                                  ; preds = %lor.lhs.false
  %24 = ptrtoint ptr %controller16 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %controller16, align 8
  %set_cs_timing = getelementptr inbounds %struct.spi_controller, ptr %25, i32 0, i32 21
  %26 = ptrtoint ptr %set_cs_timing to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %set_cs_timing, align 8
  %tobool29.not = icmp ne ptr %27, null
  %brmerge = or i1 %tobool29.not, %enable
  br i1 %brmerge, label %lor.lhs.false27.if.end34_crit_edge, label %lor.lhs.false27.if.then32_crit_edge

lor.lhs.false27.if.then32_crit_edge:              ; preds = %lor.lhs.false27
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then32

lor.lhs.false27.if.end34_crit_edge:               ; preds = %lor.lhs.false27
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end34

land.lhs.true30:                                  ; preds = %lor.lhs.false.land.lhs.true30_crit_edge, %if.end.land.lhs.true30_crit_edge
  br i1 %enable, label %land.lhs.true30.if.end34_crit_edge, label %land.lhs.true30.if.then32_crit_edge

land.lhs.true30.if.then32_crit_edge:              ; preds = %land.lhs.true30
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then32

land.lhs.true30.if.end34_crit_edge:               ; preds = %land.lhs.true30
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end34

if.then32:                                        ; preds = %land.lhs.true30.if.then32_crit_edge, %lor.lhs.false27.if.then32_crit_edge
  %cs_hold = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 17
  tail call void @__might_sleep(ptr noundef nonnull @.str.3, i32 noundef 1366) #21
  %tobool.not.i = icmp eq ptr %cs_hold, null
  br i1 %tobool.not.i, label %if.then32.if.end34_crit_edge, label %if.end.i

if.then32.if.end34_crit_edge:                     ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end34

if.end.i:                                         ; preds = %if.then32
  %28 = ptrtoint ptr %cs_hold to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %cs_hold, align 2
  %conv.i.i = zext i16 %29 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %29)
  %tobool.not.i.i = icmp eq i16 %29, 0
  br i1 %tobool.not.i.i, label %if.end.i.if.end34_crit_edge, label %if.end.i.i

if.end.i.if.end34_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end34

if.end.i.i:                                       ; preds = %if.end.i
  %unit1.i.i = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 17, i32 1
  %30 = ptrtoint ptr %unit1.i.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %unit1.i.i, align 2
  %32 = zext i8 %31 to i64
  call void @__sanitizer_cov_trace_switch(i64 %32, ptr @__sancov_gen_cov_switch_values.241)
  switch i8 %31, label %if.end.i.i.if.end34_crit_edge [
    i8 0, label %sw.bb.i.i
    i8 1, label %if.end.i.i.if.end.i10.i_crit_edge
  ]

if.end.i.i.if.end.i10.i_crit_edge:                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i10.i

if.end.i.i.if.end34_crit_edge:                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end34

sw.bb.i.i:                                        ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i = mul nuw nsw i32 %conv.i.i, 1000
  br label %if.end.i10.i

if.end.i10.i:                                     ; preds = %sw.bb.i.i, %if.end.i.i.if.end.i10.i_crit_edge
  %retval.0.i19.i = phi i32 [ %mul.i.i, %sw.bb.i.i ], [ %conv.i.i, %if.end.i.i.if.end.i10.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1001, i32 %retval.0.i19.i)
  %cmp.i.i = icmp ult i32 %retval.0.i19.i, 1001
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.else.i.i

if.then1.i.i:                                     ; preds = %if.end.i10.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %33 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %33(i32 noundef 214748) #21
  br label %if.end34

if.else.i.i:                                      ; preds = %if.end.i10.i
  %sub.i11.i = add nuw nsw i32 %retval.0.i19.i, 999
  %div.i.i = udiv i32 %sub.i11.i, 1000
  call void @__sanitizer_cov_trace_const_cmp4(i32 10001, i32 %retval.0.i19.i)
  %cmp2.i.i = icmp ult i32 %retval.0.i19.i, 10001
  br i1 %cmp2.i.i, label %cond.false6.i.i, label %if.else8.i.i

cond.false6.i.i:                                  ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %34 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  tail call void %34(i32 noundef %div.i.i) #21
  br label %if.end34

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %sub10.i.i = add nuw nsw i32 %div.i.i, 9
  %div11.i13.i = udiv i32 %sub10.i.i, 10
  %add12.i.i = add nuw nsw i32 %div11.i13.i, %div.i.i
  tail call void @usleep_range_state(i32 noundef %div.i.i, i32 noundef %add12.i.i, i32 noundef 2) #21
  br label %if.end34

if.end34:                                         ; preds = %if.else8.i.i, %cond.false6.i.i, %if.then1.i.i, %if.end.i.i.if.end34_crit_edge, %if.end.i.if.end34_crit_edge, %if.then32.if.end34_crit_edge, %land.lhs.true30.if.end34_crit_edge, %lor.lhs.false27.if.end34_crit_edge
  %35 = ptrtoint ptr %mode19 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %mode19, align 8
  %and36 = and i32 %36, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and36)
  %tobool37.not = icmp ne i32 %and36, 0
  %spec.select = xor i1 %tobool37.not, %enable
  %37 = ptrtoint ptr %cs_gpiod to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %cs_gpiod, align 8
  %tobool43.not = icmp eq ptr %38, null
  br i1 %tobool43.not, label %lor.lhs.false44, label %if.then48.thread

lor.lhs.false44:                                  ; preds = %if.end34
  %cs_gpio45 = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 13
  %39 = ptrtoint ptr %cs_gpio45 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %cs_gpio45, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2048, i32 %40)
  %41 = icmp ult i32 %40, 2048
  br i1 %41, label %if.then48, label %if.else86

if.then48:                                        ; preds = %lor.lhs.false44
  %and50 = and i32 %36, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and50)
  %tobool51.not = icmp eq i32 %and50, 0
  br i1 %tobool51.not, label %if.else65, label %if.then48.if.end71_crit_edge

if.then48.if.end71_crit_edge:                     ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end71

if.then48.thread:                                 ; preds = %if.end34
  %and50217 = and i32 %36, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and50217)
  %tobool51.not218 = icmp eq i32 %and50217, 0
  br i1 %tobool51.not218, label %if.then55, label %if.then48.thread.if.end71_crit_edge

if.then48.thread.if.end71_crit_edge:              ; preds = %if.then48.thread
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end71

if.then55:                                        ; preds = %if.then48.thread
  call void @__sanitizer_cov_trace_pc() #23
  %conv63 = zext i1 %enable to i32
  tail call void @gpiod_set_value_cansleep(ptr noundef nonnull %38, i32 noundef %conv63) #21
  br label %if.end71

if.else65:                                        ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #23
  %42 = ptrtoint ptr %cs_gpio45 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %cs_gpio45, align 4
  %lnot68 = xor i1 %spec.select, true
  %lnot.ext69 = zext i1 %lnot68 to i32
  %call.i = tail call ptr @gpio_to_desc(i32 noundef %43) #21
  tail call void @gpiod_set_raw_value_cansleep(ptr noundef %call.i, i32 noundef %lnot.ext69) #21
  br label %if.end71

if.end71:                                         ; preds = %if.else65, %if.then55, %if.then48.thread.if.end71_crit_edge, %if.then48.if.end71_crit_edge
  %44 = ptrtoint ptr %controller16 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %controller16, align 8
  %flags = getelementptr inbounds %struct.spi_controller, ptr %45, i32 0, i32 10
  %46 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %46)
  %47 = load i16, ptr %flags, align 4
  %48 = and i16 %47, 32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %48)
  %tobool75.not = icmp eq i16 %48, 0
  br i1 %tobool75.not, label %if.end71.if.end97_crit_edge, label %land.lhs.true76

if.end71.if.end97_crit_edge:                      ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end97

land.lhs.true76:                                  ; preds = %if.end71
  %set_cs = getelementptr inbounds %struct.spi_controller, ptr %45, i32 0, i32 50
  %49 = ptrtoint ptr %set_cs to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %set_cs, align 8
  %tobool78.not = icmp eq ptr %50, null
  br i1 %tobool78.not, label %land.lhs.true76.if.end97_crit_edge, label %land.lhs.true76.if.end97.sink.split_crit_edge

land.lhs.true76.if.end97.sink.split_crit_edge:    ; preds = %land.lhs.true76
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end97.sink.split

land.lhs.true76.if.end97_crit_edge:               ; preds = %land.lhs.true76
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end97

if.else86:                                        ; preds = %lor.lhs.false44
  %51 = ptrtoint ptr %controller16 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %controller16, align 8
  %set_cs88 = getelementptr inbounds %struct.spi_controller, ptr %52, i32 0, i32 50
  %53 = ptrtoint ptr %set_cs88 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %set_cs88, align 8
  %tobool89.not = icmp eq ptr %54, null
  br i1 %tobool89.not, label %if.else86.if.end97_crit_edge, label %if.else86.if.end97.sink.split_crit_edge

if.else86.if.end97.sink.split_crit_edge:          ; preds = %if.else86
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end97.sink.split

if.else86.if.end97_crit_edge:                     ; preds = %if.else86
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end97

if.end97.sink.split:                              ; preds = %if.else86.if.end97.sink.split_crit_edge, %land.lhs.true76.if.end97.sink.split_crit_edge
  %.sink = phi ptr [ %50, %land.lhs.true76.if.end97.sink.split_crit_edge ], [ %54, %if.else86.if.end97.sink.split_crit_edge ]
  %lnot94 = xor i1 %spec.select, true
  tail call void %.sink(ptr noundef %spi, i1 noundef zeroext %lnot94) #21
  br label %if.end97

if.end97:                                         ; preds = %if.end97.sink.split, %if.else86.if.end97_crit_edge, %land.lhs.true76.if.end97_crit_edge, %if.end71.if.end97_crit_edge
  %55 = ptrtoint ptr %cs_gpiod to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %cs_gpiod, align 8
  %tobool99.not = icmp eq ptr %56, null
  br i1 %tobool99.not, label %lor.lhs.false100, label %if.end97.if.then108_crit_edge

if.end97.if.then108_crit_edge:                    ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then108

lor.lhs.false100:                                 ; preds = %if.end97
  %cs_gpio101 = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 13
  %57 = ptrtoint ptr %cs_gpio101 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %cs_gpio101, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2048, i32 %58)
  %59 = icmp ult i32 %58, 2048
  br i1 %59, label %lor.lhs.false100.if.then108_crit_edge, label %lor.lhs.false104

lor.lhs.false100.if.then108_crit_edge:            ; preds = %lor.lhs.false100
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then108

lor.lhs.false104:                                 ; preds = %lor.lhs.false100
  %60 = ptrtoint ptr %controller16 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %controller16, align 8
  %set_cs_timing106 = getelementptr inbounds %struct.spi_controller, ptr %61, i32 0, i32 21
  %62 = ptrtoint ptr %set_cs_timing106 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %set_cs_timing106, align 8
  %tobool107.not = icmp eq ptr %63, null
  br i1 %tobool107.not, label %lor.lhs.false104.if.then108_crit_edge, label %lor.lhs.false104.cleanup_crit_edge

lor.lhs.false104.cleanup_crit_edge:               ; preds = %lor.lhs.false104
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

lor.lhs.false104.if.then108_crit_edge:            ; preds = %lor.lhs.false104
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then108

if.then108:                                       ; preds = %lor.lhs.false104.if.then108_crit_edge, %lor.lhs.false100.if.then108_crit_edge, %if.end97.if.then108_crit_edge
  br i1 %enable, label %if.then110, label %if.else112

if.then110:                                       ; preds = %if.then108
  %cs_setup = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 16
  tail call void @__might_sleep(ptr noundef nonnull @.str.3, i32 noundef 1366) #21
  %tobool.not.i159 = icmp eq ptr %cs_setup, null
  br i1 %tobool.not.i159, label %if.then110.cleanup_crit_edge, label %if.end.i162

if.then110.cleanup_crit_edge:                     ; preds = %if.then110
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i162:                                      ; preds = %if.then110
  %64 = ptrtoint ptr %cs_setup to i32
  call void @__asan_load2_noabort(i32 %64)
  %65 = load i16, ptr %cs_setup, align 2
  %conv.i.i160 = zext i16 %65 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %65)
  %tobool.not.i.i161 = icmp eq i16 %65, 0
  br i1 %tobool.not.i.i161, label %if.end.i162.cleanup_crit_edge, label %if.end.i.i164

if.end.i162.cleanup_crit_edge:                    ; preds = %if.end.i162
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i.i164:                                    ; preds = %if.end.i162
  %unit1.i.i163 = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 16, i32 1
  %66 = ptrtoint ptr %unit1.i.i163 to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %unit1.i.i163, align 2
  %68 = zext i8 %67 to i64
  call void @__sanitizer_cov_trace_switch(i64 %68, ptr @__sancov_gen_cov_switch_values.242)
  switch i8 %67, label %if.end.i.i164.cleanup_crit_edge [
    i8 0, label %sw.bb.i.i166
    i8 1, label %if.end.i.i164.if.end.i10.i172_crit_edge
  ]

if.end.i.i164.if.end.i10.i172_crit_edge:          ; preds = %if.end.i.i164
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i10.i172

if.end.i.i164.cleanup_crit_edge:                  ; preds = %if.end.i.i164
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

sw.bb.i.i166:                                     ; preds = %if.end.i.i164
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i165 = mul nuw nsw i32 %conv.i.i160, 1000
  br label %if.end.i10.i172

if.end.i10.i172:                                  ; preds = %sw.bb.i.i166, %if.end.i.i164.if.end.i10.i172_crit_edge
  %retval.0.i19.i168 = phi i32 [ %mul.i.i165, %sw.bb.i.i166 ], [ %conv.i.i160, %if.end.i.i164.if.end.i10.i172_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1001, i32 %retval.0.i19.i168)
  %cmp.i.i171 = icmp ult i32 %retval.0.i19.i168, 1001
  br i1 %cmp.i.i171, label %if.then1.i.i173, label %if.else.i.i177

if.then1.i.i173:                                  ; preds = %if.end.i10.i172
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %69 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %69(i32 noundef 214748) #21
  br label %cleanup

if.else.i.i177:                                   ; preds = %if.end.i10.i172
  %sub.i11.i174 = add nuw nsw i32 %retval.0.i19.i168, 999
  %div.i.i175 = udiv i32 %sub.i11.i174, 1000
  call void @__sanitizer_cov_trace_const_cmp4(i32 10001, i32 %retval.0.i19.i168)
  %cmp2.i.i176 = icmp ult i32 %retval.0.i19.i168, 10001
  br i1 %cmp2.i.i176, label %cond.false6.i.i181, label %if.else8.i.i185

cond.false6.i.i181:                               ; preds = %if.else.i.i177
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %70 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  tail call void %70(i32 noundef %div.i.i175) #21
  br label %cleanup

if.else8.i.i185:                                  ; preds = %if.else.i.i177
  call void @__sanitizer_cov_trace_pc() #23
  %sub10.i.i182 = add nuw nsw i32 %div.i.i175, 9
  %div11.i13.i183 = udiv i32 %sub10.i.i182, 10
  %add12.i.i184 = add nuw nsw i32 %div11.i13.i183, %div.i.i175
  tail call void @usleep_range_state(i32 noundef %div.i.i175, i32 noundef %add12.i.i184, i32 noundef 2) #21
  br label %cleanup

if.else112:                                       ; preds = %if.then108
  %cs_inactive = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 18
  tail call void @__might_sleep(ptr noundef nonnull @.str.3, i32 noundef 1366) #21
  %tobool.not.i188 = icmp eq ptr %cs_inactive, null
  br i1 %tobool.not.i188, label %if.else112.cleanup_crit_edge, label %if.end.i191

if.else112.cleanup_crit_edge:                     ; preds = %if.else112
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i191:                                      ; preds = %if.else112
  %71 = ptrtoint ptr %cs_inactive to i32
  call void @__asan_load2_noabort(i32 %71)
  %72 = load i16, ptr %cs_inactive, align 2
  %conv.i.i189 = zext i16 %72 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %72)
  %tobool.not.i.i190 = icmp eq i16 %72, 0
  br i1 %tobool.not.i.i190, label %if.end.i191.cleanup_crit_edge, label %if.end.i.i193

if.end.i191.cleanup_crit_edge:                    ; preds = %if.end.i191
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i.i193:                                    ; preds = %if.end.i191
  %unit1.i.i192 = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 18, i32 1
  %73 = ptrtoint ptr %unit1.i.i192 to i32
  call void @__asan_load1_noabort(i32 %73)
  %74 = load i8, ptr %unit1.i.i192, align 2
  %75 = zext i8 %74 to i64
  call void @__sanitizer_cov_trace_switch(i64 %75, ptr @__sancov_gen_cov_switch_values.243)
  switch i8 %74, label %if.end.i.i193.cleanup_crit_edge [
    i8 0, label %sw.bb.i.i195
    i8 1, label %if.end.i.i193.if.end.i10.i201_crit_edge
  ]

if.end.i.i193.if.end.i10.i201_crit_edge:          ; preds = %if.end.i.i193
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i10.i201

if.end.i.i193.cleanup_crit_edge:                  ; preds = %if.end.i.i193
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

sw.bb.i.i195:                                     ; preds = %if.end.i.i193
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i194 = mul nuw nsw i32 %conv.i.i189, 1000
  br label %if.end.i10.i201

if.end.i10.i201:                                  ; preds = %sw.bb.i.i195, %if.end.i.i193.if.end.i10.i201_crit_edge
  %retval.0.i19.i197 = phi i32 [ %mul.i.i194, %sw.bb.i.i195 ], [ %conv.i.i189, %if.end.i.i193.if.end.i10.i201_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1001, i32 %retval.0.i19.i197)
  %cmp.i.i200 = icmp ult i32 %retval.0.i19.i197, 1001
  br i1 %cmp.i.i200, label %if.then1.i.i202, label %if.else.i.i206

if.then1.i.i202:                                  ; preds = %if.end.i10.i201
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %76 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %76(i32 noundef 214748) #21
  br label %cleanup

if.else.i.i206:                                   ; preds = %if.end.i10.i201
  %sub.i11.i203 = add nuw nsw i32 %retval.0.i19.i197, 999
  %div.i.i204 = udiv i32 %sub.i11.i203, 1000
  call void @__sanitizer_cov_trace_const_cmp4(i32 10001, i32 %retval.0.i19.i197)
  %cmp2.i.i205 = icmp ult i32 %retval.0.i19.i197, 10001
  br i1 %cmp2.i.i205, label %cond.false6.i.i210, label %if.else8.i.i214

cond.false6.i.i210:                               ; preds = %if.else.i.i206
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %77 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  tail call void %77(i32 noundef %div.i.i204) #21
  br label %cleanup

if.else8.i.i214:                                  ; preds = %if.else.i.i206
  call void @__sanitizer_cov_trace_pc() #23
  %sub10.i.i211 = add nuw nsw i32 %div.i.i204, 9
  %div11.i13.i212 = udiv i32 %sub10.i.i211, 10
  %add12.i.i213 = add nuw nsw i32 %div11.i13.i212, %div.i.i204
  tail call void @usleep_range_state(i32 noundef %div.i.i204, i32 noundef %add12.i.i213, i32 noundef 2) #21
  br label %cleanup

cleanup:                                          ; preds = %if.else8.i.i214, %cond.false6.i.i210, %if.then1.i.i202, %if.end.i.i193.cleanup_crit_edge, %if.end.i191.cleanup_crit_edge, %if.else112.cleanup_crit_edge, %if.else8.i.i185, %cond.false6.i.i181, %if.then1.i.i173, %if.end.i.i164.cleanup_crit_edge, %if.end.i162.cleanup_crit_edge, %if.then110.cleanup_crit_edge, %lor.lhs.false104.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_spi_setup(ptr noundef %spi) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_setup, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_spi_setup, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !742

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !730

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i4 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i4
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !753
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_setup, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %spi, i32 noundef 0) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !754
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !754
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i2.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i2.c to ptr
  %preempt_count.i.i3.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i3.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i3.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i3.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i5 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i5 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i6 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i6, label %if.end48.cpu_online.exit14_crit_edge, label %land.rhs.i.i.i.i8

if.end48.cpu_online.exit14_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit14

land.rhs.i.i.i.i8:                                ; preds = %if.end48
  %.b37.i.i.i.i7 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i7, label %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, label %if.then.i.i.i.i9, !prof !730

land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge:    ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit14

if.then.i.i.i.i9:                                 ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit14

cpu_online.exit14:                                ; preds = %if.then.i.i.i.i9, %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, %if.end48.cpu_online.exit14_crit_edge
  %div3.i.i.i10 = lshr i32 %27, 5
  %arrayidx.i.i.i11 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i10
  %29 = ptrtoint ptr %arrayidx.i.i.i11 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i11, align 4
  %and.i.i.i12 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i12
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i13.not = icmp eq i32 %32, 0
  br i1 %tobool.i13.not, label %cpu_online.exit14.if.end69_crit_edge, label %if.then52

cpu_online.exit14.if.end69_crit_edge:             ; preds = %cpu_online.exit14
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit14
  %33 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !745
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_setup, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b1 = load i1, ptr @trace_spi_setup.__warned, align 1
  br i1 %.b1, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_spi_setup.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.149, i32 noundef 76, ptr noundef nonnull @.str.150) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !746
  %38 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i.i15 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i15 to ptr
  %preempt_count.i.i.i16 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i16 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i16, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i16, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit14.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @spi_async(ptr noundef %spi, ptr noundef %message) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %controller = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 1
  %0 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %controller, align 8
  %call = tail call fastcc i32 @__spi_validate(ptr noundef %spi, ptr noundef %message)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp.not = icmp eq i32 %call, 0
  br i1 %cmp.not, label %do.body1, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

do.body1:                                         ; preds = %entry
  %bus_lock_spinlock = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 17
  %call4 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %bus_lock_spinlock) #21
  %bus_lock_flag = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 19
  %2 = ptrtoint ptr %bus_lock_flag to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %bus_lock_flag, align 8, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.else, label %do.body1.if.end9_crit_edge

do.body1.if.end9_crit_edge:                       ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

if.else:                                          ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #23
  %call8 = tail call fastcc i32 @__spi_async(ptr noundef %spi, ptr noundef %message)
  br label %if.end9

if.end9:                                          ; preds = %if.else, %do.body1.if.end9_crit_edge
  %ret.0 = phi i32 [ %call8, %if.else ], [ -16, %do.body1.if.end9_crit_edge ]
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %bus_lock_spinlock, i32 noundef %call4) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end9, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %if.end9 ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__spi_validate(ptr noundef %spi, ptr noundef %message) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %controller = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 1
  %0 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %controller, align 8
  %2 = ptrtoint ptr %message to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %message, align 4
  %cmp.i.not = icmp eq ptr %3, %message
  br i1 %cmp.i.not, label %entry.cleanup301_crit_edge, label %if.end

entry.cleanup301_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

if.end:                                           ; preds = %entry
  %mode = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 7
  %4 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mode, align 8
  %and = and i32 %5, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %if.end.if.end28_crit_edge, label %land.lhs.true

if.end.if.end28_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end28

land.lhs.true:                                    ; preds = %if.end
  %mode_bits = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %mode_bits to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %mode_bits, align 8
  %and2 = and i32 %7, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  br i1 %tobool3.not, label %land.lhs.true.if.then7_crit_edge, label %lor.lhs.false

land.lhs.true.if.then7_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then7

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cs_gpiod = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 14
  %8 = ptrtoint ptr %cs_gpiod to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %cs_gpiod, align 8
  %tobool4.not = icmp eq ptr %9, null
  br i1 %tobool4.not, label %lor.lhs.false5, label %lor.lhs.false.if.then7_crit_edge

lor.lhs.false.if.then7_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then7

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %cs_gpio = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 13
  %10 = ptrtoint ptr %cs_gpio to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cs_gpio, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2048, i32 %11)
  %12 = icmp ult i32 %11, 2048
  br i1 %12, label %lor.lhs.false5.if.then7_crit_edge, label %lor.lhs.false5.if.end28_crit_edge

lor.lhs.false5.if.end28_crit_edge:                ; preds = %lor.lhs.false5
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end28

lor.lhs.false5.if.then7_crit_edge:                ; preds = %lor.lhs.false5
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then7

if.then7:                                         ; preds = %lor.lhs.false5.if.then7_crit_edge, %lor.lhs.false.if.then7_crit_edge, %land.lhs.true.if.then7_crit_edge
  %bits_per_word = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 5
  %13 = ptrtoint ptr %bits_per_word to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %bits_per_word, align 1
  %conv = zext i8 %14 to i32
  %add = add nuw nsw i32 %conv, 7
  %div391 = lshr i32 %add, 3
  %spi8 = getelementptr inbounds %struct.spi_message, ptr %message, i32 0, i32 1
  %15 = ptrtoint ptr %spi8 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %spi, ptr %spi8, align 4
  %call9 = tail call i32 @spi_split_transfers_maxsize(ptr noundef %1, ptr noundef %message, i32 noundef %div391, i32 noundef 3264)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %for.cond.preheader, label %if.then7.cleanup301_crit_edge

if.then7.cleanup301_crit_edge:                    ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

for.cond.preheader:                               ; preds = %if.then7
  %16 = ptrtoint ptr %message to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pn392410 = load ptr, ptr %message, align 4
  %cmp.not411 = icmp eq ptr %.pn392410, %message
  br i1 %cmp.not411, label %for.cond.preheader.if.end28_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.if.end28_crit_edge:            ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end28

for.body:                                         ; preds = %if.end21.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %.pn392412 = phi ptr [ %.pn392, %if.end21.for.body_crit_edge ], [ %.pn392410, %for.cond.preheader.for.body_crit_edge ]
  %17 = ptrtoint ptr %.pn392412 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %.pn392412, align 4
  %cmp.i393.not = icmp eq ptr %18, %message
  br i1 %cmp.i393.not, label %for.body.if.end28_crit_edge, label %if.end21

for.body.if.end28_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end28

if.end21:                                         ; preds = %for.body
  %cs_change = getelementptr i8, ptr %.pn392412, i32 -40
  %19 = ptrtoint ptr %cs_change to i32
  call void @__asan_load1_noabort(i32 %19)
  %bf.load = load i8, ptr %cs_change, align 4
  %bf.set = or i8 %bf.load, 64
  store i8 %bf.set, ptr %cs_change, align 4
  %20 = ptrtoint ptr %.pn392412 to i32
  call void @__asan_load4_noabort(i32 %20)
  %.pn392 = load ptr, ptr %.pn392412, align 4
  %cmp.not = icmp eq ptr %.pn392, %message
  br i1 %cmp.not, label %if.end21.if.end28_crit_edge, label %if.end21.for.body_crit_edge

if.end21.for.body_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

if.end21.if.end28_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end28

if.end28:                                         ; preds = %if.end21.if.end28_crit_edge, %for.body.if.end28_crit_edge, %for.cond.preheader.if.end28_crit_edge, %lor.lhs.false5.if.end28_crit_edge, %if.end.if.end28_crit_edge
  %flags = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 10
  %21 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %flags, align 4
  %23 = and i16 %22, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %23)
  %tobool31.not = icmp eq i16 %23, 0
  br i1 %tobool31.not, label %lor.lhs.false32, label %if.end28.if.then36_crit_edge

if.end28.if.then36_crit_edge:                     ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then36

lor.lhs.false32:                                  ; preds = %if.end28
  %24 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %mode, align 8
  %and34 = and i32 %25, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34)
  %tobool35.not = icmp eq i32 %and34, 0
  br i1 %tobool35.not, label %lor.lhs.false32.if.end81_crit_edge, label %lor.lhs.false32.if.then36_crit_edge

lor.lhs.false32.if.then36_crit_edge:              ; preds = %lor.lhs.false32
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then36

lor.lhs.false32.if.end81_crit_edge:               ; preds = %lor.lhs.false32
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81

if.then36:                                        ; preds = %lor.lhs.false32.if.then36_crit_edge, %if.end28.if.then36_crit_edge
  %conv39 = zext i16 %22 to i32
  %and57 = and i32 %conv39, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and57)
  %tobool58.not = icmp eq i32 %and57, 0
  %and64 = and i32 %conv39, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and64)
  %tobool65.not = icmp eq i32 %and64, 0
  %26 = ptrtoint ptr %message to i32
  call void @__asan_load4_noabort(i32 %26)
  %.pn390422 = load ptr, ptr %message, align 4
  %cmp48.not424 = icmp eq ptr %.pn390422, %message
  br i1 %cmp48.not424, label %if.then36.if.end81_crit_edge, label %if.then36.for.body51_crit_edge

if.then36.for.body51_crit_edge:                   ; preds = %if.then36
  br label %for.body51

if.then36.if.end81_crit_edge:                     ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81

for.body51:                                       ; preds = %for.cond45.backedge.for.body51_crit_edge, %if.then36.for.body51_crit_edge
  %.pn390425 = phi ptr [ %.pn390, %for.cond45.backedge.for.body51_crit_edge ], [ %.pn390422, %if.then36.for.body51_crit_edge ]
  %xfer.1426 = getelementptr i8, ptr %.pn390425, i32 -84
  %rx_buf = getelementptr i8, ptr %.pn390425, i32 -80
  %27 = ptrtoint ptr %rx_buf to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rx_buf, align 4
  %tobool52.not = icmp eq ptr %28, null
  br i1 %tobool52.not, label %for.body51.if.end56_crit_edge, label %land.lhs.true53

for.body51.if.end56_crit_edge:                    ; preds = %for.body51
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end56

land.lhs.true53:                                  ; preds = %for.body51
  %29 = ptrtoint ptr %xfer.1426 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %xfer.1426, align 4
  %tobool54.not = icmp eq ptr %30, null
  br i1 %tobool54.not, label %land.lhs.true53.if.end56_crit_edge, label %land.lhs.true53.cleanup301_crit_edge

land.lhs.true53.cleanup301_crit_edge:             ; preds = %land.lhs.true53
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

land.lhs.true53.if.end56_crit_edge:               ; preds = %land.lhs.true53
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end56

if.end56:                                         ; preds = %land.lhs.true53.if.end56_crit_edge, %for.body51.if.end56_crit_edge
  br i1 %tobool58.not, label %if.end63, label %land.lhs.true59

land.lhs.true59:                                  ; preds = %if.end56
  %31 = ptrtoint ptr %xfer.1426 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %xfer.1426, align 4
  %tobool61.not = icmp eq ptr %32, null
  %brmerge = select i1 %tobool65.not, i1 true, i1 %tobool52.not
  %or.cond418 = select i1 %tobool61.not, i1 %brmerge, i1 false
  br i1 %or.cond418, label %land.lhs.true59.for.cond45.backedge_crit_edge, label %land.lhs.true59.cleanup301_crit_edge

land.lhs.true59.cleanup301_crit_edge:             ; preds = %land.lhs.true59
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

land.lhs.true59.for.cond45.backedge_crit_edge:    ; preds = %land.lhs.true59
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond45.backedge

if.end63:                                         ; preds = %if.end56
  %brmerge.old = select i1 %tobool65.not, i1 true, i1 %tobool52.not
  br i1 %brmerge.old, label %if.end63.for.cond45.backedge_crit_edge, label %if.end63.cleanup301_crit_edge

if.end63.cleanup301_crit_edge:                    ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

if.end63.for.cond45.backedge_crit_edge:           ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond45.backedge

for.cond45.backedge:                              ; preds = %if.end63.for.cond45.backedge_crit_edge, %land.lhs.true59.for.cond45.backedge_crit_edge
  %33 = ptrtoint ptr %.pn390425 to i32
  call void @__asan_load4_noabort(i32 %33)
  %.pn390 = load ptr, ptr %.pn390425, align 4
  %cmp48.not = icmp eq ptr %.pn390, %message
  br i1 %cmp48.not, label %for.cond45.backedge.if.end81_crit_edge, label %for.cond45.backedge.for.body51_crit_edge

for.cond45.backedge.for.body51_crit_edge:         ; preds = %for.cond45.backedge
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body51

for.cond45.backedge.if.end81_crit_edge:           ; preds = %for.cond45.backedge
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end81

if.end81:                                         ; preds = %for.cond45.backedge.if.end81_crit_edge, %if.then36.if.end81_crit_edge, %lor.lhs.false32.if.end81_crit_edge
  %frame_length = getelementptr inbounds %struct.spi_message, ptr %message, i32 0, i32 5
  %34 = ptrtoint ptr %frame_length to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 0, ptr %frame_length, align 4
  %35 = ptrtoint ptr %message to i32
  call void @__asan_load4_noabort(i32 %35)
  %.pn413 = load ptr, ptr %message, align 4
  %cmp90.not415 = icmp eq ptr %.pn413, %message
  br i1 %cmp90.not415, label %if.end81.for.end300_crit_edge, label %for.body93.lr.ph

if.end81.for.end300_crit_edge:                    ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end300

for.body93.lr.ph:                                 ; preds = %if.end81
  %bits_per_word99 = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 5
  %max_speed_hz = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 3
  %max_speed_hz106 = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 9
  %bits_per_word_mask.i = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 7
  %min_speed_hz = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 8
  %word_delay1.i = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 15
  %unit1.i22.i = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 15, i32 1
  br label %for.body93

for.body93:                                       ; preds = %_spi_xfer_word_delay_update.exit.for.body93_crit_edge, %for.body93.lr.ph
  %.pn416 = phi ptr [ %.pn413, %for.body93.lr.ph ], [ %.pn, %_spi_xfer_word_delay_update.exit.for.body93_crit_edge ]
  %xfer.2417 = getelementptr i8, ptr %.pn416, i32 -84
  %effective_speed_hz = getelementptr i8, ptr %.pn416, i32 -20
  %36 = ptrtoint ptr %effective_speed_hz to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 0, ptr %effective_speed_hz, align 4
  %len = getelementptr i8, ptr %.pn416, i32 -76
  %37 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %len, align 4
  %39 = ptrtoint ptr %frame_length to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %frame_length, align 4
  %add95 = add i32 %40, %38
  store i32 %add95, ptr %frame_length, align 4
  %bits_per_word96 = getelementptr i8, ptr %.pn416, i32 -39
  %41 = ptrtoint ptr %bits_per_word96 to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %bits_per_word96, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %42)
  %tobool97.not = icmp eq i8 %42, 0
  br i1 %tobool97.not, label %if.then98, label %for.body93.if.end101_crit_edge

for.body93.if.end101_crit_edge:                   ; preds = %for.body93
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end101

if.then98:                                        ; preds = %for.body93
  call void @__sanitizer_cov_trace_pc() #23
  %43 = ptrtoint ptr %bits_per_word99 to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %bits_per_word99, align 1
  %45 = ptrtoint ptr %bits_per_word96 to i32
  call void @__asan_store1_noabort(i32 %45)
  store i8 %44, ptr %bits_per_word96, align 1
  br label %if.end101

if.end101:                                        ; preds = %if.then98, %for.body93.if.end101_crit_edge
  %speed_hz = getelementptr i8, ptr %.pn416, i32 -24
  %46 = ptrtoint ptr %speed_hz to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %speed_hz, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool102.not = icmp eq i32 %47, 0
  br i1 %tobool102.not, label %if.then103, label %if.end101.if.end105_crit_edge

if.end101.if.end105_crit_edge:                    ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end105

if.then103:                                       ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #23
  %48 = ptrtoint ptr %max_speed_hz to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %max_speed_hz, align 8
  %50 = ptrtoint ptr %speed_hz to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %49, ptr %speed_hz, align 4
  br label %if.end105

if.end105:                                        ; preds = %if.then103, %if.end101.if.end105_crit_edge
  %51 = ptrtoint ptr %max_speed_hz106 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %max_speed_hz106, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool107.not = icmp eq i32 %52, 0
  br i1 %tobool107.not, label %if.end105.if.end116_crit_edge, label %land.lhs.true108

if.end105.if.end116_crit_edge:                    ; preds = %if.end105
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end116

land.lhs.true108:                                 ; preds = %if.end105
  %53 = ptrtoint ptr %speed_hz to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %speed_hz, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %54, i32 %52)
  %cmp111 = icmp ugt i32 %54, %52
  br i1 %cmp111, label %if.then113, label %land.lhs.true108.if.end116_crit_edge

land.lhs.true108.if.end116_crit_edge:             ; preds = %land.lhs.true108
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end116

if.then113:                                       ; preds = %land.lhs.true108
  call void @__sanitizer_cov_trace_pc() #23
  %55 = ptrtoint ptr %speed_hz to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %52, ptr %speed_hz, align 4
  br label %if.end116

if.end116:                                        ; preds = %if.then113, %land.lhs.true108.if.end116_crit_edge, %if.end105.if.end116_crit_edge
  %56 = ptrtoint ptr %bits_per_word96 to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %bits_per_word96, align 1
  %58 = ptrtoint ptr %bits_per_word_mask.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %bits_per_word_mask.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %59)
  %tobool.not.i = icmp eq i32 %59, 0
  br i1 %tobool.not.i, label %if.end116.if.end121_crit_edge, label %if.then.i

if.end116.if.end121_crit_edge:                    ; preds = %if.end116
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end121

if.then.i:                                        ; preds = %if.end116
  call void @__sanitizer_cov_trace_const_cmp1(i8 32, i8 %57)
  %cmp.i395 = icmp ugt i8 %57, 32
  br i1 %cmp.i395, label %if.then.i.cleanup301_crit_edge, label %if.end.i

if.then.i.cleanup301_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

if.end.i:                                         ; preds = %if.then.i
  %conv.i396 = zext i8 %57 to i32
  %sub.i = add nsw i32 %conv.i396, -1
  %shl.i = shl nuw i32 1, %sub.i
  %and.i = and i32 %shl.i, %59
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool5.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool5.not.i, label %if.end.i.cleanup301_crit_edge, label %if.end.i.if.end121_crit_edge

if.end.i.if.end121_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end121

if.end.i.cleanup301_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

if.end121:                                        ; preds = %if.end.i.if.end121_crit_edge, %if.end116.if.end121_crit_edge
  call void @__sanitizer_cov_trace_const_cmp1(i8 9, i8 %57)
  %cmp124 = icmp ult i8 %57, 9
  call void @__sanitizer_cov_trace_const_cmp1(i8 17, i8 %57)
  %cmp129 = icmp ult i8 %57, 17
  %60 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %len, align 4
  %..op = select i1 %cmp129, i32 1, i32 3
  %62 = select i1 %cmp124, i32 0, i32 %..op
  %rem = and i32 %61, %62
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem)
  %tobool136.not = icmp eq i32 %rem, 0
  br i1 %tobool136.not, label %if.end138, label %if.end121.cleanup301_crit_edge

if.end121.cleanup301_crit_edge:                   ; preds = %if.end121
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

if.end138:                                        ; preds = %if.end121
  %63 = ptrtoint ptr %speed_hz to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %speed_hz, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %64)
  %tobool140.not = icmp eq i32 %64, 0
  br i1 %tobool140.not, label %if.end138.if.end149_crit_edge, label %land.lhs.true141

if.end138.if.end149_crit_edge:                    ; preds = %if.end138
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end149

land.lhs.true141:                                 ; preds = %if.end138
  %65 = ptrtoint ptr %min_speed_hz to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %min_speed_hz, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %66)
  %tobool142.not = icmp ne i32 %66, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %64, i32 %66)
  %cmp146 = icmp ult i32 %64, %66
  %or.cond = select i1 %tobool142.not, i1 %cmp146, i1 false
  br i1 %or.cond, label %land.lhs.true141.cleanup301_crit_edge, label %land.lhs.true141.if.end149_crit_edge

land.lhs.true141.if.end149_crit_edge:             ; preds = %land.lhs.true141
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end149

land.lhs.true141.cleanup301_crit_edge:            ; preds = %land.lhs.true141
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

if.end149:                                        ; preds = %land.lhs.true141.if.end149_crit_edge, %if.end138.if.end149_crit_edge
  %67 = ptrtoint ptr %xfer.2417 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %xfer.2417, align 4
  %tobool151.not = icmp eq ptr %68, null
  br i1 %tobool151.not, label %if.end149.if.end161_crit_edge, label %land.lhs.true152

if.end149.if.end161_crit_edge:                    ; preds = %if.end149
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end161

land.lhs.true152:                                 ; preds = %if.end149
  %tx_nbits = getelementptr i8, ptr %.pn416, i32 -40
  %69 = ptrtoint ptr %tx_nbits to i32
  call void @__asan_load1_noabort(i32 %69)
  %bf.load153 = load i8, ptr %tx_nbits, align 4
  %70 = and i8 %bf.load153, 56
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %70)
  %tobool155.not = icmp eq i8 %70, 0
  br i1 %tobool155.not, label %if.then156, label %land.lhs.true152.if.end161_crit_edge

land.lhs.true152.if.end161_crit_edge:             ; preds = %land.lhs.true152
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end161

if.then156:                                       ; preds = %land.lhs.true152
  call void @__sanitizer_cov_trace_pc() #23
  %bf.clear159 = and i8 %bf.load153, -57
  %bf.set160 = or i8 %bf.clear159, 8
  %71 = ptrtoint ptr %tx_nbits to i32
  call void @__asan_store1_noabort(i32 %71)
  store i8 %bf.set160, ptr %tx_nbits, align 4
  br label %if.end161

if.end161:                                        ; preds = %if.then156, %land.lhs.true152.if.end161_crit_edge, %if.end149.if.end161_crit_edge
  %rx_buf162 = getelementptr i8, ptr %.pn416, i32 -80
  %72 = ptrtoint ptr %rx_buf162 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %rx_buf162, align 4
  %tobool163.not = icmp eq ptr %73, null
  br i1 %tobool163.not, label %if.end161.if.end174_crit_edge, label %land.lhs.true164

if.end161.if.end174_crit_edge:                    ; preds = %if.end161
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end174

land.lhs.true164:                                 ; preds = %if.end161
  %rx_nbits = getelementptr i8, ptr %.pn416, i32 -40
  %74 = ptrtoint ptr %rx_nbits to i32
  call void @__asan_load1_noabort(i32 %74)
  %bf.load165 = load i8, ptr %rx_nbits, align 4
  %bf.clear166 = and i8 %bf.load165, 7
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %bf.clear166)
  %tobool168.not = icmp eq i8 %bf.clear166, 0
  br i1 %tobool168.not, label %if.then169, label %land.lhs.true164.if.end174_crit_edge

land.lhs.true164.if.end174_crit_edge:             ; preds = %land.lhs.true164
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end174

if.then169:                                       ; preds = %land.lhs.true164
  call void @__sanitizer_cov_trace_pc() #23
  %bf.clear172 = and i8 %bf.load165, -8
  %bf.set173 = or i8 %bf.clear172, 1
  %75 = ptrtoint ptr %rx_nbits to i32
  call void @__asan_store1_noabort(i32 %75)
  store i8 %bf.set173, ptr %rx_nbits, align 4
  br label %if.end174

if.end174:                                        ; preds = %if.then169, %land.lhs.true164.if.end174_crit_edge, %if.end161.if.end174_crit_edge
  %76 = ptrtoint ptr %xfer.2417 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %xfer.2417, align 4
  %tobool176.not = icmp eq ptr %77, null
  br i1 %tobool176.not, label %if.end174.if.end234_crit_edge, label %if.then177

if.end174.if.end234_crit_edge:                    ; preds = %if.end174
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end234

if.then177:                                       ; preds = %if.end174
  %78 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %mode, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %79)
  %tobool180.not = icmp sgt i32 %79, -1
  br i1 %tobool180.not, label %if.end182, label %if.then177.cleanup301_crit_edge

if.then177.cleanup301_crit_edge:                  ; preds = %if.then177
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

if.end182:                                        ; preds = %if.then177
  %tx_nbits183 = getelementptr i8, ptr %.pn416, i32 -40
  %80 = ptrtoint ptr %tx_nbits183 to i32
  call void @__asan_load1_noabort(i32 %80)
  %bf.load184 = load i8, ptr %tx_nbits183, align 4
  %bf.lshr185 = lshr i8 %bf.load184, 3
  %trunc = trunc i8 %bf.lshr185 to i3
  %81 = zext i3 %trunc to i64
  call void @__sanitizer_cov_trace_switch(i64 %81, ptr @__sancov_gen_cov_switch_values.244)
  switch i3 %trunc, label %if.end182.cleanup301_crit_edge [
    i3 1, label %if.end182.if.end207_crit_edge
    i3 2, label %if.end182.if.end207_crit_edge429
    i3 -4, label %if.end182.if.end207_crit_edge430
  ]

if.end182.if.end207_crit_edge430:                 ; preds = %if.end182
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end207

if.end182.if.end207_crit_edge429:                 ; preds = %if.end182
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end207

if.end182.if.end207_crit_edge:                    ; preds = %if.end182
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end207

if.end182.cleanup301_crit_edge:                   ; preds = %if.end182
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

if.end207:                                        ; preds = %if.end182.if.end207_crit_edge, %if.end182.if.end207_crit_edge429, %if.end182.if.end207_crit_edge430
  %82 = trunc i8 %bf.load184 to i6
  %trunc407 = and i6 %82, -8
  %83 = zext i6 %trunc407 to i64
  call void @__sanitizer_cov_trace_switch(i64 %83, ptr @__sancov_gen_cov_switch_values.245)
  switch i6 %trunc407, label %if.end207.if.end234_crit_edge [
    i6 16, label %land.lhs.true215
    i6 -32, label %land.lhs.true228
  ]

if.end207.if.end234_crit_edge:                    ; preds = %if.end207
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end234

land.lhs.true215:                                 ; preds = %if.end207
  %and217 = and i32 %79, 768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and217)
  %tobool218.not = icmp eq i32 %and217, 0
  br i1 %tobool218.not, label %land.lhs.true215.cleanup301_crit_edge, label %land.lhs.true215.if.end234_crit_edge

land.lhs.true215.if.end234_crit_edge:             ; preds = %land.lhs.true215
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end234

land.lhs.true215.cleanup301_crit_edge:            ; preds = %land.lhs.true215
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

land.lhs.true228:                                 ; preds = %if.end207
  %and230 = and i32 %79, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and230)
  %tobool231.not = icmp eq i32 %and230, 0
  br i1 %tobool231.not, label %land.lhs.true228.cleanup301_crit_edge, label %land.lhs.true228.if.end234_crit_edge

land.lhs.true228.if.end234_crit_edge:             ; preds = %land.lhs.true228
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end234

land.lhs.true228.cleanup301_crit_edge:            ; preds = %land.lhs.true228
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

if.end234:                                        ; preds = %land.lhs.true228.if.end234_crit_edge, %land.lhs.true215.if.end234_crit_edge, %if.end207.if.end234_crit_edge, %if.end174.if.end234_crit_edge
  %84 = ptrtoint ptr %rx_buf162 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %rx_buf162, align 4
  %tobool236.not = icmp eq ptr %85, null
  br i1 %tobool236.not, label %if.end234.if.end289_crit_edge, label %if.then237

if.end234.if.end289_crit_edge:                    ; preds = %if.end234
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end289

if.then237:                                       ; preds = %if.end234
  %86 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %mode, align 8
  %and239 = and i32 %87, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and239)
  %tobool240.not = icmp eq i32 %and239, 0
  br i1 %tobool240.not, label %if.end242, label %if.then237.cleanup301_crit_edge

if.then237.cleanup301_crit_edge:                  ; preds = %if.then237
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

if.end242:                                        ; preds = %if.then237
  %rx_nbits243 = getelementptr i8, ptr %.pn416, i32 -40
  %88 = ptrtoint ptr %rx_nbits243 to i32
  call void @__asan_load1_noabort(i32 %88)
  %bf.load244 = load i8, ptr %rx_nbits243, align 4
  %trunc408 = trunc i8 %bf.load244 to i3
  %89 = zext i3 %trunc408 to i64
  call void @__sanitizer_cov_trace_switch(i64 %89, ptr @__sancov_gen_cov_switch_values.246)
  switch i3 %trunc408, label %if.end242.cleanup301_crit_edge [
    i3 2, label %land.lhs.true271
    i3 -4, label %land.lhs.true283
    i3 1, label %if.end242.if.end289_crit_edge
  ]

if.end242.if.end289_crit_edge:                    ; preds = %if.end242
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end289

if.end242.cleanup301_crit_edge:                   ; preds = %if.end242
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

land.lhs.true271:                                 ; preds = %if.end242
  %and273 = and i32 %87, 3072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and273)
  %tobool274.not = icmp eq i32 %and273, 0
  br i1 %tobool274.not, label %land.lhs.true271.cleanup301_crit_edge, label %land.lhs.true271.if.end289_crit_edge

land.lhs.true271.if.end289_crit_edge:             ; preds = %land.lhs.true271
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end289

land.lhs.true271.cleanup301_crit_edge:            ; preds = %land.lhs.true271
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

land.lhs.true283:                                 ; preds = %if.end242
  %and285 = and i32 %87, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and285)
  %tobool286.not = icmp eq i32 %and285, 0
  br i1 %tobool286.not, label %land.lhs.true283.cleanup301_crit_edge, label %land.lhs.true283.if.end289_crit_edge

land.lhs.true283.if.end289_crit_edge:             ; preds = %land.lhs.true283
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end289

land.lhs.true283.cleanup301_crit_edge:            ; preds = %land.lhs.true283
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

if.end289:                                        ; preds = %land.lhs.true283.if.end289_crit_edge, %land.lhs.true271.if.end289_crit_edge, %if.end242.if.end289_crit_edge, %if.end234.if.end289_crit_edge
  %word_delay.i = getelementptr i8, ptr %.pn416, i32 -30
  %90 = ptrtoint ptr %word_delay.i to i32
  call void @__asan_load2_noabort(i32 %90)
  %91 = load i16, ptr %word_delay.i, align 2
  %conv.i.i = zext i16 %91 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %91)
  %tobool.not.i.i = icmp eq i16 %91, 0
  br i1 %tobool.not.i.i, label %if.end289.if.end.i398_crit_edge, label %if.end.i.i

if.end289.if.end.i398_crit_edge:                  ; preds = %if.end289
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i398

if.end.i.i:                                       ; preds = %if.end289
  %unit1.i.i = getelementptr i8, ptr %.pn416, i32 -28
  %92 = ptrtoint ptr %unit1.i.i to i32
  call void @__asan_load1_noabort(i32 %92)
  %93 = load i8, ptr %unit1.i.i, align 2
  %94 = zext i8 %93 to i64
  call void @__sanitizer_cov_trace_switch(i64 %94, ptr @__sancov_gen_cov_switch_values.247)
  switch i8 %93, label %if.end.i.i.cleanup301_crit_edge [
    i8 0, label %sw.bb.i.i
    i8 1, label %if.end.i.i.if.end.i398_crit_edge
    i8 2, label %sw.bb3.i.i
  ]

if.end.i.i.if.end.i398_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i398

if.end.i.i.cleanup301_crit_edge:                  ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

sw.bb.i.i:                                        ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i = mul nuw nsw i32 %conv.i.i, 1000
  br label %if.end.i398

sw.bb3.i.i:                                       ; preds = %if.end.i.i
  %tobool4.not.i.i = icmp eq ptr %xfer.2417, null
  br i1 %tobool4.not.i.i, label %sw.bb3.i.i.cleanup301_crit_edge, label %if.end6.i.i

sw.bb3.i.i.cleanup301_crit_edge:                  ; preds = %sw.bb3.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

if.end6.i.i:                                      ; preds = %sw.bb3.i.i
  %95 = ptrtoint ptr %effective_speed_hz to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %effective_speed_hz, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %96)
  %tobool7.not.i.i = icmp eq i32 %96, 0
  br i1 %tobool7.not.i.i, label %cond.end.i.i, label %if.end6.i.i.spi_delay_to_ns.exit.i_crit_edge

if.end6.i.i.spi_delay_to_ns.exit.i_crit_edge:     ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_delay_to_ns.exit.i

cond.end.i.i:                                     ; preds = %if.end6.i.i
  %97 = ptrtoint ptr %speed_hz to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %speed_hz, align 4
  %div23.i.i = lshr i32 %98, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %98)
  %tobool8.not.i.i = icmp ult i32 %98, 2
  br i1 %tobool8.not.i.i, label %cond.end.i.i.cleanup301_crit_edge, label %cond.end.i.i.spi_delay_to_ns.exit.i_crit_edge

cond.end.i.i.spi_delay_to_ns.exit.i_crit_edge:    ; preds = %cond.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_delay_to_ns.exit.i

cond.end.i.i.cleanup301_crit_edge:                ; preds = %cond.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

spi_delay_to_ns.exit.i:                           ; preds = %cond.end.i.i.spi_delay_to_ns.exit.i_crit_edge, %if.end6.i.i.spi_delay_to_ns.exit.i_crit_edge
  %cond26.i.i = phi i32 [ %div23.i.i, %cond.end.i.i.spi_delay_to_ns.exit.i_crit_edge ], [ %96, %if.end6.i.i.spi_delay_to_ns.exit.i_crit_edge ]
  %sub.i.i = add i32 %cond26.i.i, 999999999
  %div11.i.i = udiv i32 %sub.i.i, %cond26.i.i
  %mul12.i.i = mul i32 %div11.i.i, %conv.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mul12.i.i)
  %cmp.i397 = icmp slt i32 %mul12.i.i, 0
  br i1 %cmp.i397, label %spi_delay_to_ns.exit.i.cleanup301_crit_edge, label %spi_delay_to_ns.exit.i.if.end.i398_crit_edge

spi_delay_to_ns.exit.i.if.end.i398_crit_edge:     ; preds = %spi_delay_to_ns.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i398

spi_delay_to_ns.exit.i.cleanup301_crit_edge:      ; preds = %spi_delay_to_ns.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

if.end.i398:                                      ; preds = %spi_delay_to_ns.exit.i.if.end.i398_crit_edge, %sw.bb.i.i, %if.end.i.i.if.end.i398_crit_edge, %if.end289.if.end.i398_crit_edge
  %retval.0.i49.i = phi i32 [ %mul12.i.i, %spi_delay_to_ns.exit.i.if.end.i398_crit_edge ], [ 0, %if.end289.if.end.i398_crit_edge ], [ %mul.i.i, %sw.bb.i.i ], [ %conv.i.i, %if.end.i.i.if.end.i398_crit_edge ]
  %99 = ptrtoint ptr %word_delay1.i to i32
  call void @__asan_load2_noabort(i32 %99)
  %100 = load i16, ptr %word_delay1.i, align 2
  %conv.i20.i = zext i16 %100 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %100)
  %tobool.not.i21.i = icmp eq i16 %100, 0
  br i1 %tobool.not.i21.i, label %if.end.i398.if.end5.i_crit_edge, label %if.end.i23.i

if.end.i398.if.end5.i_crit_edge:                  ; preds = %if.end.i398
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end5.i

if.end.i23.i:                                     ; preds = %if.end.i398
  %101 = ptrtoint ptr %unit1.i22.i to i32
  call void @__asan_load1_noabort(i32 %101)
  %102 = load i8, ptr %unit1.i22.i, align 2
  %103 = zext i8 %102 to i64
  call void @__sanitizer_cov_trace_switch(i64 %103, ptr @__sancov_gen_cov_switch_values.248)
  switch i8 %102, label %if.end.i23.i.cleanup301_crit_edge [
    i8 0, label %sw.bb.i25.i
    i8 1, label %if.end.i23.i.if.end5.i_crit_edge
    i8 2, label %sw.bb3.i27.i
  ]

if.end.i23.i.if.end5.i_crit_edge:                 ; preds = %if.end.i23.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end5.i

if.end.i23.i.cleanup301_crit_edge:                ; preds = %if.end.i23.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

sw.bb.i25.i:                                      ; preds = %if.end.i23.i
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i24.i = mul nuw nsw i32 %conv.i20.i, 1000
  br label %if.end5.i

sw.bb3.i27.i:                                     ; preds = %if.end.i23.i
  %tobool4.not.i26.i = icmp eq ptr %xfer.2417, null
  br i1 %tobool4.not.i26.i, label %sw.bb3.i27.i.cleanup301_crit_edge, label %if.end6.i30.i

sw.bb3.i27.i.cleanup301_crit_edge:                ; preds = %sw.bb3.i27.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

if.end6.i30.i:                                    ; preds = %sw.bb3.i27.i
  %104 = ptrtoint ptr %effective_speed_hz to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %effective_speed_hz, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %105)
  %tobool7.not.i29.i = icmp eq i32 %105, 0
  br i1 %tobool7.not.i29.i, label %cond.end.i34.i, label %if.end6.i30.i.spi_delay_to_ns.exit43.i_crit_edge

if.end6.i30.i.spi_delay_to_ns.exit43.i_crit_edge: ; preds = %if.end6.i30.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_delay_to_ns.exit43.i

cond.end.i34.i:                                   ; preds = %if.end6.i30.i
  %106 = ptrtoint ptr %speed_hz to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %speed_hz, align 4
  %div23.i32.i = lshr i32 %107, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %107)
  %tobool8.not.i33.i = icmp ult i32 %107, 2
  br i1 %tobool8.not.i33.i, label %cond.end.i34.i.cleanup301_crit_edge, label %cond.end.i34.i.spi_delay_to_ns.exit43.i_crit_edge

cond.end.i34.i.spi_delay_to_ns.exit43.i_crit_edge: ; preds = %cond.end.i34.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_delay_to_ns.exit43.i

cond.end.i34.i.cleanup301_crit_edge:              ; preds = %cond.end.i34.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

spi_delay_to_ns.exit43.i:                         ; preds = %cond.end.i34.i.spi_delay_to_ns.exit43.i_crit_edge, %if.end6.i30.i.spi_delay_to_ns.exit43.i_crit_edge
  %cond26.i35.i = phi i32 [ %div23.i32.i, %cond.end.i34.i.spi_delay_to_ns.exit43.i_crit_edge ], [ %105, %if.end6.i30.i.spi_delay_to_ns.exit43.i_crit_edge ]
  %sub.i36.i = add i32 %cond26.i35.i, 999999999
  %div11.i37.i = udiv i32 %sub.i36.i, %cond26.i35.i
  %mul12.i38.i = mul i32 %div11.i37.i, %conv.i20.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mul12.i38.i)
  %cmp3.i = icmp slt i32 %mul12.i38.i, 0
  br i1 %cmp3.i, label %spi_delay_to_ns.exit43.i.cleanup301_crit_edge, label %spi_delay_to_ns.exit43.i.if.end5.i_crit_edge

spi_delay_to_ns.exit43.i.if.end5.i_crit_edge:     ; preds = %spi_delay_to_ns.exit43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end5.i

spi_delay_to_ns.exit43.i.cleanup301_crit_edge:    ; preds = %spi_delay_to_ns.exit43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup301

if.end5.i:                                        ; preds = %spi_delay_to_ns.exit43.i.if.end5.i_crit_edge, %sw.bb.i25.i, %if.end.i23.i.if.end5.i_crit_edge, %if.end.i398.if.end5.i_crit_edge
  %retval.0.i4259.i = phi i32 [ %mul12.i38.i, %spi_delay_to_ns.exit43.i.if.end5.i_crit_edge ], [ 0, %if.end.i398.if.end5.i_crit_edge ], [ %mul.i24.i, %sw.bb.i25.i ], [ %conv.i20.i, %if.end.i23.i.if.end5.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i49.i, i32 %retval.0.i4259.i)
  %cmp6.i = icmp ult i32 %retval.0.i49.i, %retval.0.i4259.i
  br i1 %cmp6.i, label %if.then7.i, label %if.end5.i._spi_xfer_word_delay_update.exit_crit_edge

if.end5.i._spi_xfer_word_delay_update.exit_crit_edge: ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %_spi_xfer_word_delay_update.exit

if.then7.i:                                       ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #23
  %108 = ptrtoint ptr %word_delay1.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %word_delay1.i, align 4
  %110 = ptrtoint ptr %word_delay.i to i32
  call void @__asan_storeN_noabort(i32 %110, i32 4)
  store i32 %109, ptr %word_delay.i, align 2
  br label %_spi_xfer_word_delay_update.exit

_spi_xfer_word_delay_update.exit:                 ; preds = %if.then7.i, %if.end5.i._spi_xfer_word_delay_update.exit_crit_edge
  %111 = ptrtoint ptr %.pn416 to i32
  call void @__asan_load4_noabort(i32 %111)
  %.pn = load ptr, ptr %.pn416, align 4
  %cmp90.not = icmp eq ptr %.pn, %message
  br i1 %cmp90.not, label %_spi_xfer_word_delay_update.exit.for.end300_crit_edge, label %_spi_xfer_word_delay_update.exit.for.body93_crit_edge

_spi_xfer_word_delay_update.exit.for.body93_crit_edge: ; preds = %_spi_xfer_word_delay_update.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body93

_spi_xfer_word_delay_update.exit.for.end300_crit_edge: ; preds = %_spi_xfer_word_delay_update.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end300

for.end300:                                       ; preds = %_spi_xfer_word_delay_update.exit.for.end300_crit_edge, %if.end81.for.end300_crit_edge
  %status = getelementptr inbounds %struct.spi_message, ptr %message, i32 0, i32 7
  %112 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %112)
  store i32 -115, ptr %status, align 4
  br label %cleanup301

cleanup301:                                       ; preds = %for.end300, %spi_delay_to_ns.exit43.i.cleanup301_crit_edge, %cond.end.i34.i.cleanup301_crit_edge, %sw.bb3.i27.i.cleanup301_crit_edge, %if.end.i23.i.cleanup301_crit_edge, %spi_delay_to_ns.exit.i.cleanup301_crit_edge, %cond.end.i.i.cleanup301_crit_edge, %sw.bb3.i.i.cleanup301_crit_edge, %if.end.i.i.cleanup301_crit_edge, %land.lhs.true283.cleanup301_crit_edge, %land.lhs.true271.cleanup301_crit_edge, %if.end242.cleanup301_crit_edge, %if.then237.cleanup301_crit_edge, %land.lhs.true228.cleanup301_crit_edge, %land.lhs.true215.cleanup301_crit_edge, %if.end182.cleanup301_crit_edge, %if.then177.cleanup301_crit_edge, %land.lhs.true141.cleanup301_crit_edge, %if.end121.cleanup301_crit_edge, %if.end.i.cleanup301_crit_edge, %if.then.i.cleanup301_crit_edge, %if.end63.cleanup301_crit_edge, %land.lhs.true59.cleanup301_crit_edge, %land.lhs.true53.cleanup301_crit_edge, %if.then7.cleanup301_crit_edge, %entry.cleanup301_crit_edge
  %retval.3 = phi i32 [ 0, %for.end300 ], [ -22, %entry.cleanup301_crit_edge ], [ %call9, %if.then7.cleanup301_crit_edge ], [ -22, %if.end121.cleanup301_crit_edge ], [ -22, %land.lhs.true141.cleanup301_crit_edge ], [ -22, %if.then177.cleanup301_crit_edge ], [ -22, %if.end182.cleanup301_crit_edge ], [ -22, %land.lhs.true215.cleanup301_crit_edge ], [ -22, %land.lhs.true228.cleanup301_crit_edge ], [ -22, %if.then237.cleanup301_crit_edge ], [ -22, %land.lhs.true271.cleanup301_crit_edge ], [ -22, %land.lhs.true283.cleanup301_crit_edge ], [ -22, %if.then.i.cleanup301_crit_edge ], [ -22, %if.end.i.cleanup301_crit_edge ], [ -22, %spi_delay_to_ns.exit.i.cleanup301_crit_edge ], [ -22, %spi_delay_to_ns.exit43.i.cleanup301_crit_edge ], [ -22, %sw.bb3.i.i.cleanup301_crit_edge ], [ -22, %cond.end.i.i.cleanup301_crit_edge ], [ -22, %if.end.i.i.cleanup301_crit_edge ], [ -22, %sw.bb3.i27.i.cleanup301_crit_edge ], [ -22, %cond.end.i34.i.cleanup301_crit_edge ], [ -22, %if.end.i23.i.cleanup301_crit_edge ], [ -22, %if.end242.cleanup301_crit_edge ], [ -22, %land.lhs.true59.cleanup301_crit_edge ], [ -22, %land.lhs.true53.cleanup301_crit_edge ], [ -22, %if.end63.cleanup301_crit_edge ]
  ret i32 %retval.3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__spi_async(ptr noundef %spi, ptr noundef %message) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %controller = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 1
  %0 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %controller, align 8
  %transfer = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 22
  %2 = ptrtoint ptr %transfer to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %transfer, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %spi1 = getelementptr inbounds %struct.spi_message, ptr %message, i32 0, i32 1
  %4 = ptrtoint ptr %spi1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %spi, ptr %spi1, align 4
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 59
  %call4 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %spi_async = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 59, i32 7
  %5 = ptrtoint ptr %spi_async to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %spi_async, align 4
  %add = add i32 %6, 1
  store i32 %add, ptr %spi_async, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call4) #21
  %statistics21 = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 19
  %call24 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics21) #21
  %spi_async30 = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 19, i32 7
  %7 = ptrtoint ptr %spi_async30 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %spi_async30, align 4
  %add31 = add i32 %8, 1
  store i32 %add31, ptr %spi_async30, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics21, i32 noundef %call24) #21
  tail call fastcc void @trace_spi_message_submit(ptr noundef %message)
  %ptp_sts_supported = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 65
  %9 = ptrtoint ptr %ptp_sts_supported to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %ptp_sts_supported, align 4, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool36.not = icmp eq i8 %10, 0
  br i1 %tobool36.not, label %for.cond.preheader, label %if.end.if.end47_crit_edge

if.end.if.end47_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end47

for.cond.preheader:                               ; preds = %if.end
  %11 = ptrtoint ptr %message to i32
  call void @__asan_load4_noabort(i32 %11)
  %.pn68 = load ptr, ptr %message, align 4
  %cmp40.not69 = icmp eq ptr %.pn68, %message
  br i1 %cmp40.not69, label %for.cond.preheader.if.end47_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.if.end47_crit_edge:            ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end47

for.body:                                         ; preds = %ptp_read_system_prets.exit.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %.pn70 = phi ptr [ %.pn, %ptp_read_system_prets.exit.for.body_crit_edge ], [ %.pn68, %for.cond.preheader.for.body_crit_edge ]
  %ptp_sts_word_pre = getelementptr i8, ptr %.pn70, i32 -16
  %12 = ptrtoint ptr %ptp_sts_word_pre to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 0, ptr %ptp_sts_word_pre, align 4
  %ptp_sts = getelementptr i8, ptr %.pn70, i32 -8
  %13 = ptrtoint ptr %ptp_sts to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ptp_sts, align 4
  %tobool.not.i = icmp eq ptr %14, null
  br i1 %tobool.not.i, label %for.body.ptp_read_system_prets.exit_crit_edge, label %if.then.i

for.body.ptp_read_system_prets.exit_crit_edge:    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %ptp_read_system_prets.exit

if.then.i:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @ktime_get_real_ts64(ptr noundef nonnull %14) #21
  br label %ptp_read_system_prets.exit

ptp_read_system_prets.exit:                       ; preds = %if.then.i, %for.body.ptp_read_system_prets.exit_crit_edge
  %15 = ptrtoint ptr %.pn70 to i32
  call void @__asan_load4_noabort(i32 %15)
  %.pn = load ptr, ptr %.pn70, align 4
  %cmp40.not = icmp eq ptr %.pn, %message
  br i1 %cmp40.not, label %ptp_read_system_prets.exit.if.end47_crit_edge, label %ptp_read_system_prets.exit.for.body_crit_edge

ptp_read_system_prets.exit.for.body_crit_edge:    ; preds = %ptp_read_system_prets.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

ptp_read_system_prets.exit.if.end47_crit_edge:    ; preds = %ptp_read_system_prets.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end47

if.end47:                                         ; preds = %ptp_read_system_prets.exit.if.end47_crit_edge, %for.cond.preheader.if.end47_crit_edge, %if.end.if.end47_crit_edge
  %16 = ptrtoint ptr %transfer to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %transfer, align 4
  %call49 = tail call i32 %17(ptr noundef %spi, ptr noundef %message) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end47, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call49, %if.end47 ], [ -524, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @spi_sync(ptr noundef %spi, ptr noundef %message) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %controller = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 1
  %0 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %controller, align 8
  %bus_lock_mutex = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 18
  tail call void @mutex_lock_nested(ptr noundef %bus_lock_mutex, i32 noundef 0) #21
  %call = tail call fastcc i32 @__spi_sync(ptr noundef %spi, ptr noundef %message)
  %2 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %controller, align 8
  %bus_lock_mutex2 = getelementptr inbounds %struct.spi_controller, ptr %3, i32 0, i32 18
  tail call void @mutex_unlock(ptr noundef %bus_lock_mutex2) #21
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__spi_sync(ptr noundef %spi, ptr noundef %message) unnamed_addr #0 align 64 {
entry:
  %done = alloca %struct.completion, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %done) #21
  %0 = getelementptr inbounds i8, ptr %done, i32 4
  %1 = call ptr @memset(ptr %0, i32 255, i32 52)
  %2 = ptrtoint ptr %done to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %done, align 4
  %wait.i = getelementptr inbounds %struct.completion, ptr %done, i32 0, i32 1
  call void @__init_swait_queue_head(ptr noundef %wait.i, ptr noundef nonnull @.str.171, ptr noundef nonnull @init_completion.__key) #21
  %controller = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 1
  %3 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %controller, align 8
  %call = call fastcc i32 @__spi_validate(ptr noundef %spi, ptr noundef %message)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp.not = icmp eq i32 %call, 0
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %complete = getelementptr inbounds %struct.spi_message, ptr %message, i32 0, i32 3
  %5 = ptrtoint ptr %complete to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr @spi_complete, ptr %complete, align 4
  %context = getelementptr inbounds %struct.spi_message, ptr %message, i32 0, i32 4
  %6 = ptrtoint ptr %context to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %done, ptr %context, align 4
  %spi1 = getelementptr inbounds %struct.spi_message, ptr %message, i32 0, i32 1
  %7 = ptrtoint ptr %spi1 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %spi, ptr %spi1, align 4
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %4, i32 0, i32 59
  %call8 = call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %spi_sync = getelementptr inbounds %struct.spi_controller, ptr %4, i32 0, i32 59, i32 5
  %8 = ptrtoint ptr %spi_sync to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %spi_sync, align 4
  %add = add i32 %9, 1
  store i32 %add, ptr %spi_sync, align 4
  call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call8) #21
  %statistics25 = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 19
  %call28 = call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics25) #21
  %spi_sync34 = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 19, i32 5
  %10 = ptrtoint ptr %spi_sync34 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %spi_sync34, align 4
  %add35 = add i32 %11, 1
  store i32 %add35, ptr %spi_sync34, align 4
  call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics25, i32 noundef %call28) #21
  %transfer = getelementptr inbounds %struct.spi_controller, ptr %4, i32 0, i32 22
  %12 = ptrtoint ptr %transfer to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %transfer, align 4
  %cmp40 = icmp eq ptr %13, @spi_queued_transfer
  br i1 %cmp40, label %do.body44, label %if.else

do.body44:                                        ; preds = %if.end
  %bus_lock_spinlock = getelementptr inbounds %struct.spi_controller, ptr %4, i32 0, i32 17
  %call51 = call i32 @_raw_spin_lock_irqsave(ptr noundef %bus_lock_spinlock) #21
  call fastcc void @trace_spi_message_submit(ptr noundef %message)
  %14 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %controller, align 8
  %queue_lock.i = getelementptr inbounds %struct.spi_controller, ptr %15, i32 0, i32 29
  %call2.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %queue_lock.i) #21
  %running.i = getelementptr inbounds %struct.spi_controller, ptr %15, i32 0, i32 34
  %16 = ptrtoint ptr %running.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %running.i, align 2, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool.not.i = icmp eq i8 %17, 0
  br i1 %tobool.not.i, label %do.body44.__spi_queued_transfer.exit_crit_edge, label %if.end.i

do.body44.__spi_queued_transfer.exit_crit_edge:   ; preds = %do.body44
  call void @__sanitizer_cov_trace_pc() #23
  br label %__spi_queued_transfer.exit

if.end.i:                                         ; preds = %do.body44
  %actual_length.i = getelementptr inbounds %struct.spi_message, ptr %message, i32 0, i32 6
  %18 = ptrtoint ptr %actual_length.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 0, ptr %actual_length.i, align 4
  %status.i = getelementptr inbounds %struct.spi_message, ptr %message, i32 0, i32 7
  %19 = ptrtoint ptr %status.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 -115, ptr %status.i, align 4
  %queue.i = getelementptr inbounds %struct.spi_message, ptr %message, i32 0, i32 8
  %queue6.i = getelementptr inbounds %struct.spi_controller, ptr %15, i32 0, i32 30
  %prev.i.i = getelementptr inbounds %struct.spi_controller, ptr %15, i32 0, i32 30, i32 1
  %20 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %prev.i.i, align 4
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %queue.i, ptr noundef %21, ptr noundef %queue6.i) #21
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end.i.__spi_queued_transfer.exit_crit_edge

if.end.i.__spi_queued_transfer.exit_crit_edge:    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %__spi_queued_transfer.exit

if.end.i.i.i:                                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %22 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %queue.i, ptr %prev.i.i, align 4
  %23 = ptrtoint ptr %queue.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %queue6.i, ptr %queue.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.spi_message, ptr %message, i32 0, i32 8, i32 1
  %24 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %21, ptr %prev3.i.i.i, align 4
  %25 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %queue.i, ptr %21, align 4
  br label %__spi_queued_transfer.exit

__spi_queued_transfer.exit:                       ; preds = %if.end.i.i.i, %if.end.i.__spi_queued_transfer.exit_crit_edge, %do.body44.__spi_queued_transfer.exit_crit_edge
  %retval.0.i = phi i32 [ -108, %do.body44.__spi_queued_transfer.exit_crit_edge ], [ 0, %if.end.i.i.i ], [ 0, %if.end.i.__spi_queued_transfer.exit_crit_edge ]
  call void @_raw_spin_unlock_irqrestore(ptr noundef %queue_lock.i, i32 noundef %call2.i) #21
  call void @_raw_spin_unlock_irqrestore(ptr noundef %bus_lock_spinlock, i32 noundef %call51) #21
  br label %if.end59

if.else:                                          ; preds = %if.end
  %26 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %controller, align 8
  %call.i = call fastcc i32 @__spi_validate(ptr noundef %spi, ptr noundef %message) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not.i = icmp eq i32 %call.i, 0
  br i1 %cmp.not.i, label %do.body1.i, label %if.else.if.end116_crit_edge

if.else.if.end116_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end116

do.body1.i:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  %bus_lock_spinlock.i = getelementptr inbounds %struct.spi_controller, ptr %27, i32 0, i32 17
  %call4.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %bus_lock_spinlock.i) #21
  %call7.i = call fastcc i32 @__spi_async(ptr noundef %spi, ptr noundef %message) #21
  call void @_raw_spin_unlock_irqrestore(ptr noundef %bus_lock_spinlock.i, i32 noundef %call4.i) #21
  br label %if.end59

if.end59:                                         ; preds = %do.body1.i, %__spi_queued_transfer.exit
  %status.0 = phi i32 [ %retval.0.i, %__spi_queued_transfer.exit ], [ %call7.i, %do.body1.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %status.0)
  %cmp60 = icmp eq i32 %status.0, 0
  br i1 %cmp60, label %if.then62, label %if.end59.if.end116_crit_edge

if.end59.if.end116_crit_edge:                     ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end116

if.then62:                                        ; preds = %if.end59
  %28 = ptrtoint ptr %transfer to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %transfer, align 4
  %cmp64 = icmp eq ptr %29, @spi_queued_transfer
  br i1 %cmp64, label %do.body67, label %if.then62.if.end114_crit_edge

if.then62.if.end114_crit_edge:                    ; preds = %if.then62
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end114

do.body67:                                        ; preds = %if.then62
  call void @__sanitizer_cov_trace_pc() #23
  %call79 = call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %spi_sync_immediate = getelementptr inbounds %struct.spi_controller, ptr %4, i32 0, i32 59, i32 6
  %30 = ptrtoint ptr %spi_sync_immediate to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %spi_sync_immediate, align 8
  %add85 = add i32 %31, 1
  store i32 %add85, ptr %spi_sync_immediate, align 8
  call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call79) #21
  %call102 = call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics25) #21
  %spi_sync_immediate108 = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 19, i32 6
  %32 = ptrtoint ptr %spi_sync_immediate108 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %spi_sync_immediate108, align 8
  %add109 = add i32 %33, 1
  store i32 %add109, ptr %spi_sync_immediate108, align 8
  call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics25, i32 noundef %call102) #21
  call fastcc void @__spi_pump_messages(ptr noundef %4, i1 noundef zeroext false)
  br label %if.end114

if.end114:                                        ; preds = %do.body67, %if.then62.if.end114_crit_edge
  call void @wait_for_completion(ptr noundef nonnull %done) #21
  %status115 = getelementptr inbounds %struct.spi_message, ptr %message, i32 0, i32 7
  %34 = ptrtoint ptr %status115 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %status115, align 4
  br label %if.end116

if.end116:                                        ; preds = %if.end114, %if.end59.if.end116_crit_edge, %if.else.if.end116_crit_edge
  %status.1 = phi i32 [ %35, %if.end114 ], [ %status.0, %if.end59.if.end116_crit_edge ], [ %call.i, %if.else.if.end116_crit_edge ]
  %36 = ptrtoint ptr %context to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr null, ptr %context, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end116, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %status.1, %if.end116 ], [ %call, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %done) #21
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @spi_sync_locked(ptr noundef %spi, ptr noundef %message) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @__spi_sync(ptr noundef %spi, ptr noundef %message)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @spi_bus_lock(ptr noundef %ctlr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %bus_lock_mutex = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 18
  tail call void @mutex_lock_nested(ptr noundef %bus_lock_mutex, i32 noundef 0) #21
  %bus_lock_spinlock = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 17
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %bus_lock_spinlock) #21
  %bus_lock_flag = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 19
  %0 = ptrtoint ptr %bus_lock_flag to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 1, ptr %bus_lock_flag, align 8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %bus_lock_spinlock, i32 noundef %call2) #21
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @spi_bus_unlock(ptr noundef %ctlr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %bus_lock_flag = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 19
  %0 = ptrtoint ptr %bus_lock_flag to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 0, ptr %bus_lock_flag, align 8
  %bus_lock_mutex = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 18
  tail call void @mutex_unlock(ptr noundef %bus_lock_mutex) #21
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @spi_write_then_read(ptr noundef %spi, ptr nocapture noundef readonly %txbuf, i32 noundef %n_tx, ptr nocapture noundef writeonly %rxbuf, i32 noundef %n_rx) #0 align 64 {
entry:
  %message = alloca %struct.spi_message, align 4
  %x = alloca [2 x %struct.spi_transfer], align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %message) #21
  call void @llvm.lifetime.start.p0(i64 192, ptr nonnull %x) #21
  %add = add i32 %n_rx, %n_tx
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add)
  %cmp = icmp ugt i32 %add, 128
  br i1 %cmp, label %entry.if.end8.i_crit_edge, label %lor.lhs.false

entry.if.end8.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8.i

lor.lhs.false:                                    ; preds = %entry
  %call = tail call i32 @mutex_trylock(ptr noundef nonnull @spi_write_then_read.lock) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %lor.lhs.false.if.end8.i_crit_edge, label %if.else

lor.lhs.false.if.end8.i_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8.i

if.end8.i:                                        ; preds = %lor.lhs.false.if.end8.i_crit_edge, %entry.if.end8.i_crit_edge
  %0 = tail call i32 @llvm.umax.i32(i32 %add, i32 128)
  %call9.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %0, i32 noundef 3265) #28
  %tobool4.not = icmp eq ptr %call9.i, null
  br i1 %tobool4.not, label %if.end8.i.cleanup_crit_edge, label %if.end8.i.if.end6_crit_edge

if.end8.i.if.end6_crit_edge:                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end6

if.end8.i.cleanup_crit_edge:                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.else:                                          ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  %1 = load ptr, ptr @buf, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.end8.i.if.end6_crit_edge
  %local_buf.0 = phi ptr [ %call9.i, %if.end8.i.if.end6_crit_edge ], [ %1, %if.else ]
  %2 = getelementptr inbounds i8, ptr %message, i32 8
  %3 = call ptr @memset(ptr %2, i32 0, i32 40)
  %4 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %message, ptr %message, align 4
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %message, i32 0, i32 1
  %5 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %message, ptr %prev.i.i.i, align 4
  %resources.i.i = getelementptr inbounds %struct.spi_message, ptr %message, i32 0, i32 10
  %6 = ptrtoint ptr %resources.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %resources.i.i, ptr %resources.i.i, align 4
  %prev.i2.i.i = getelementptr inbounds %struct.spi_message, ptr %message, i32 0, i32 10, i32 1
  %7 = ptrtoint ptr %prev.i2.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %resources.i.i, ptr %prev.i2.i.i, align 4
  %8 = call ptr @memset(ptr %x, i32 0, i32 192)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n_tx)
  %tobool7.not = icmp eq i32 %n_tx, 0
  br i1 %tobool7.not, label %if.end6.if.end10_crit_edge, label %if.then8

if.end6.if.end10_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end10

if.then8:                                         ; preds = %if.end6
  %len = getelementptr inbounds %struct.spi_transfer, ptr %x, i32 0, i32 2
  %9 = ptrtoint ptr %len to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %n_tx, ptr %len, align 4
  %transfer_list.i = getelementptr inbounds %struct.spi_transfer, ptr %x, i32 0, i32 18
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %transfer_list.i, ptr noundef nonnull %message, ptr noundef nonnull %message) #21
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then8.if.end10_crit_edge

if.then8.if.end10_crit_edge:                      ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end10

if.end.i.i.i:                                     ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #23
  %10 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %transfer_list.i, ptr %prev.i.i.i, align 4
  %11 = ptrtoint ptr %transfer_list.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %message, ptr %transfer_list.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.spi_transfer, ptr %x, i32 0, i32 18, i32 1
  %12 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %message, ptr %prev3.i.i.i, align 4
  %13 = ptrtoint ptr %message to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr %transfer_list.i, ptr %message, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.end.i.i.i, %if.then8.if.end10_crit_edge, %if.end6.if.end10_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n_rx)
  %tobool11.not = icmp eq i32 %n_rx, 0
  br i1 %tobool11.not, label %if.end10.if.end16_crit_edge, label %if.then12

if.end10.if.end16_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

if.then12:                                        ; preds = %if.end10
  %len14 = getelementptr inbounds [2 x %struct.spi_transfer], ptr %x, i32 0, i32 1, i32 2
  %14 = ptrtoint ptr %len14 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %n_rx, ptr %len14, align 4
  %transfer_list.i50 = getelementptr inbounds [2 x %struct.spi_transfer], ptr %x, i32 0, i32 1, i32 18
  %15 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %prev.i.i.i, align 4
  %call.i.i.i52 = call zeroext i1 @__list_add_valid(ptr noundef %transfer_list.i50, ptr noundef %16, ptr noundef nonnull %message) #21
  br i1 %call.i.i.i52, label %if.end.i.i.i54, label %if.then12.if.end16_crit_edge

if.then12.if.end16_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

if.end.i.i.i54:                                   ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #23
  %17 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %transfer_list.i50, ptr %prev.i.i.i, align 4
  %18 = ptrtoint ptr %transfer_list.i50 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %message, ptr %transfer_list.i50, align 4
  %prev3.i.i.i53 = getelementptr inbounds [2 x %struct.spi_transfer], ptr %x, i32 0, i32 1, i32 18, i32 1
  %19 = ptrtoint ptr %prev3.i.i.i53 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %16, ptr %prev3.i.i.i53, align 4
  %20 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %transfer_list.i50, ptr %16, align 4
  br label %if.end16

if.end16:                                         ; preds = %if.end.i.i.i54, %if.then12.if.end16_crit_edge, %if.end10.if.end16_crit_edge
  %21 = call ptr @memcpy(ptr %local_buf.0, ptr %txbuf, i32 %n_tx)
  %22 = ptrtoint ptr %x to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %local_buf.0, ptr %x, align 4
  %add.ptr = getelementptr i8, ptr %local_buf.0, i32 %n_tx
  %rx_buf = getelementptr inbounds [2 x %struct.spi_transfer], ptr %x, i32 0, i32 1, i32 1
  %23 = ptrtoint ptr %rx_buf to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %add.ptr, ptr %rx_buf, align 4
  %controller.i = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 1
  %24 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %controller.i, align 8
  %bus_lock_mutex.i = getelementptr inbounds %struct.spi_controller, ptr %25, i32 0, i32 18
  call void @mutex_lock_nested(ptr noundef %bus_lock_mutex.i, i32 noundef 0) #21
  %call.i = call fastcc i32 @__spi_sync(ptr noundef %spi, ptr noundef nonnull %message) #21
  %26 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %controller.i, align 8
  %bus_lock_mutex2.i = getelementptr inbounds %struct.spi_controller, ptr %27, i32 0, i32 18
  call void @mutex_unlock(ptr noundef %bus_lock_mutex2.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp20 = icmp eq i32 %call.i, 0
  br i1 %cmp20, label %if.then21, label %if.end16.if.end24_crit_edge

if.end16.if.end24_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end24

if.then21:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #23
  %28 = ptrtoint ptr %rx_buf to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %rx_buf, align 4
  %30 = call ptr @memcpy(ptr %rxbuf, ptr %29, i32 %n_rx)
  br label %if.end24

if.end24:                                         ; preds = %if.then21, %if.end16.if.end24_crit_edge
  %31 = ptrtoint ptr %x to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %x, align 4
  %33 = load ptr, ptr @buf, align 4
  %cmp27 = icmp eq ptr %32, %33
  br i1 %cmp27, label %if.then28, label %if.else29

if.then28:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #23
  call void @mutex_unlock(ptr noundef nonnull @spi_write_then_read.lock) #21
  br label %cleanup

if.else29:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #23
  call void @kfree(ptr noundef %local_buf.0) #21
  br label %cleanup

cleanup:                                          ; preds = %if.else29, %if.then28, %if.end8.i.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %if.end8.i.cleanup_crit_edge ], [ %call.i, %if.else29 ], [ %call.i, %if.then28 ]
  call void @llvm.lifetime.end.p0(i64 192, ptr nonnull %x) #21
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %message) #21
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mutex_trylock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_init() #9 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3264, i32 noundef 128) #27
  store ptr %call7.i, ptr @buf, align 4
  %tobool.not = icmp eq ptr %call7.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @bus_register(ptr noundef nonnull @spi_bus_type) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %cmp = icmp slt i32 %call1, 0
  br i1 %cmp, label %if.end.err1_crit_edge, label %if.end3

if.end.err1_crit_edge:                            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %err1

if.end3:                                          ; preds = %if.end
  %call4 = tail call i32 @__class_register(ptr noundef nonnull @spi_master_class, ptr noundef nonnull @spi_init.__key) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %cmp5 = icmp slt i32 %call4, 0
  br i1 %cmp5, label %if.end3.err2_crit_edge, label %if.end7

if.end3.err2_crit_edge:                           ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  br label %err2

if.end7:                                          ; preds = %if.end3
  %call9 = tail call i32 @__class_register(ptr noundef nonnull @spi_slave_class, ptr noundef nonnull @spi_init.__key.236) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %cmp10 = icmp slt i32 %call9, 0
  br i1 %cmp10, label %err3, label %if.end12

if.end12:                                         ; preds = %if.end7
  %call13 = tail call i32 @of_reconfig_notifier_register(ptr noundef nonnull @spi_of_notifier) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.end12.cleanup_crit_edge, label %do.end, !prof !730

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

do.end:                                           ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 4290, i32 noundef 9, ptr noundef null) #21
  br label %cleanup

err3:                                             ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @class_unregister(ptr noundef nonnull @spi_master_class) #21
  br label %err2

err2:                                             ; preds = %err3, %if.end3.err2_crit_edge
  %status.0 = phi i32 [ %call4, %if.end3.err2_crit_edge ], [ %call9, %err3 ]
  tail call void @bus_unregister(ptr noundef nonnull @spi_bus_type) #21
  br label %err1

err1:                                             ; preds = %err2, %if.end.err1_crit_edge
  %status.1 = phi i32 [ %call1, %if.end.err1_crit_edge ], [ %status.0, %err2 ]
  %1 = load ptr, ptr @buf, align 4
  tail call void @kfree(ptr noundef %1) #21
  store ptr null, ptr @buf, align 4
  br label %cleanup

cleanup:                                          ; preds = %err1, %do.end, %if.end12.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %do.end ], [ 0, %if.end12.cleanup_crit_edge ], [ %status.1, %err1 ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_spi_controller(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %bus_num = getelementptr inbounds %struct.trace_event_raw_spi_controller, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %bus_num to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bus_num, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.63, i32 noundef %3) #21
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_spi_setup(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %bus_num = getelementptr inbounds %struct.trace_event_raw_spi_setup, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %bus_num to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bus_num, align 4
  %chip_select = getelementptr inbounds %struct.trace_event_raw_spi_setup, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %chip_select to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %chip_select, align 4
  %mode = getelementptr inbounds %struct.trace_event_raw_spi_setup, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %mode, align 4
  %and = and i32 %7, 3
  %and2 = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool.not = icmp eq i32 %and2, 0
  %cond = select i1 %tobool.not, ptr @.str.55, ptr @.str.54
  %and4 = and i32 %7, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4)
  %tobool5.not = icmp eq i32 %and4, 0
  %cond6 = select i1 %tobool5.not, ptr @.str.55, ptr @.str.56
  %and8 = and i32 %7, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  %cond10 = select i1 %tobool9.not, ptr @.str.55, ptr @.str.57
  %and12 = and i32 %7, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12)
  %tobool13.not = icmp eq i32 %and12, 0
  %cond14 = select i1 %tobool13.not, ptr @.str.55, ptr @.str.58
  %bits_per_word = getelementptr inbounds %struct.trace_event_raw_spi_setup, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %bits_per_word to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %bits_per_word, align 4
  %max_speed_hz = getelementptr inbounds %struct.trace_event_raw_spi_setup, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %max_speed_hz to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %max_speed_hz, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_spi_setup, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.71, i32 noundef %3, i32 noundef %5, i32 noundef %and, ptr noundef nonnull %cond, ptr noundef nonnull %cond6, ptr noundef nonnull %cond10, ptr noundef nonnull %cond14, i32 noundef %9, i32 noundef %11, i32 noundef %13) #21
  %call15 = tail call i32 @trace_handle_return(ptr noundef %seq) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call15, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_spi_set_cs(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %bus_num = getelementptr inbounds %struct.trace_event_raw_spi_set_cs, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %bus_num to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bus_num, align 4
  %chip_select = getelementptr inbounds %struct.trace_event_raw_spi_set_cs, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %chip_select to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %chip_select, align 4
  %enable = getelementptr inbounds %struct.trace_event_raw_spi_set_cs, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %enable to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %enable, align 4, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not = icmp eq i8 %7, 0
  %cond = select i1 %tobool.not, ptr @.str.76, ptr @.str.75
  %mode = getelementptr inbounds %struct.trace_event_raw_spi_set_cs, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mode, align 4
  %and = and i32 %9, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  %cond2 = select i1 %tobool1.not, ptr @.str.55, ptr @.str.77
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.74, i32 noundef %3, i32 noundef %5, ptr noundef nonnull %cond, ptr noundef nonnull %cond2) #21
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_spi_message(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %bus_num = getelementptr inbounds %struct.trace_event_raw_spi_message, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %bus_num to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bus_num, align 4
  %chip_select = getelementptr inbounds %struct.trace_event_raw_spi_message, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %chip_select to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %chip_select, align 4
  %msg = getelementptr inbounds %struct.trace_event_raw_spi_message, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %msg to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %msg, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.80, i32 noundef %3, i32 noundef %5, ptr noundef %7) #21
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_spi_message_done(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %bus_num = getelementptr inbounds %struct.trace_event_raw_spi_message_done, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %bus_num to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bus_num, align 4
  %chip_select = getelementptr inbounds %struct.trace_event_raw_spi_message_done, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %chip_select to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %chip_select, align 4
  %msg = getelementptr inbounds %struct.trace_event_raw_spi_message_done, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %msg to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %msg, align 4
  %actual = getelementptr inbounds %struct.trace_event_raw_spi_message_done, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %actual to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %actual, align 4
  %frame = getelementptr inbounds %struct.trace_event_raw_spi_message_done, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %frame to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %frame, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.84, i32 noundef %3, i32 noundef %5, ptr noundef %7, i32 noundef %9, i32 noundef %11) #21
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_spi_transfer(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %bus_num = getelementptr inbounds %struct.trace_event_raw_spi_transfer, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %bus_num to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bus_num, align 4
  %chip_select = getelementptr inbounds %struct.trace_event_raw_spi_transfer, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %chip_select to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %chip_select, align 4
  %xfer = getelementptr inbounds %struct.trace_event_raw_spi_transfer, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %xfer to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %xfer, align 4
  %len = getelementptr inbounds %struct.trace_event_raw_spi_transfer, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %len, align 4
  %__data_loc_tx_buf = getelementptr inbounds %struct.trace_event_raw_spi_transfer, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %__data_loc_tx_buf to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %__data_loc_tx_buf, align 4
  %shr = lshr i32 %11, 16
  %and2 = and i32 %11, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and2
  %__data_loc_rx_buf = getelementptr inbounds %struct.trace_event_raw_spi_transfer, ptr %1, i32 0, i32 5
  %12 = ptrtoint ptr %__data_loc_rx_buf to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %__data_loc_rx_buf, align 4
  %shr3 = lshr i32 %13, 16
  %and6 = and i32 %13, 65535
  %add.ptr7 = getelementptr i8, ptr %1, i32 %and6
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.91, i32 noundef %3, i32 noundef %5, ptr noundef %7, i32 noundef %9, i32 noundef %shr, ptr noundef %add.ptr, i32 noundef %shr3, ptr noundef %add.ptr7) #21
  %call8 = tail call i32 @trace_handle_return(ptr noundef %seq) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call8, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #10

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #11

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #11

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run1(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run2(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @modalias_show(ptr noundef %dev, ptr nocapture noundef readnone %a, ptr nocapture noundef writeonly %buf) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %modalias = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 11
  %call2 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.93, ptr noundef nonnull @.str.94, ptr noundef %modalias)
  ret i32 %call2
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #13

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @driver_override_show(ptr noundef %dev, ptr nocapture noundef readnone %a, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %mutex.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 10
  tail call void @mutex_lock_nested(ptr noundef %mutex.i, i32 noundef 0) #21
  %driver_override = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 12
  %0 = ptrtoint ptr %driver_override to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_override, align 8
  %tobool.not = icmp eq ptr %1, null
  %..str.55 = select i1 %tobool.not, ptr @.str.55, ptr %1
  %call1 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %buf, i32 noundef 4096, ptr noundef nonnull @.str.96, ptr noundef %..str.55)
  tail call void @mutex_unlock(ptr noundef %mutex.i) #21
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @driver_override_store(ptr noundef %dev, ptr nocapture noundef readnone %a, ptr noundef %buf, i32 noundef %count) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call1 = tail call ptr @memchr(ptr noundef %buf, i32 noundef 10, i32 noundef %count) #25
  %tobool.not = icmp eq ptr %call1, null
  %sub.ptr.lhs.cast = ptrtoint ptr %call1 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %buf to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %cond = select i1 %tobool.not, i32 %count, i32 %sub.ptr.sub
  call void @__sanitizer_cov_trace_const_cmp4(i32 4094, i32 %cond)
  %cmp = icmp ugt i32 %cond, 4094
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %call2 = tail call ptr @kstrndup(ptr noundef %buf, i32 noundef %cond, i32 noundef 3264) #21
  %tobool3.not = icmp eq ptr %call2, null
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %mutex.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 10
  tail call void @mutex_lock_nested(ptr noundef %mutex.i, i32 noundef 0) #21
  %driver_override6 = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 12
  %0 = ptrtoint ptr %driver_override6 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_override6, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond)
  %tobool7.not = icmp eq i32 %cond, 0
  br i1 %tobool7.not, label %if.else, label %if.then8

if.then8:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #23
  %2 = ptrtoint ptr %driver_override6 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %call2, ptr %driver_override6, align 8
  br label %if.end11

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #23
  %3 = ptrtoint ptr %driver_override6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %driver_override6, align 8
  tail call void @kfree(ptr noundef nonnull %call2) #21
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then8
  tail call void @mutex_unlock(ptr noundef %mutex.i) #21
  tail call void @kfree(ptr noundef %1) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end11, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %count, %if.end11 ], [ -22, %entry.cleanup_crit_edge ], [ -12, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #13

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local ptr @memchr(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kstrndup(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_messages_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %messages.i = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19, i32 1
  %0 = ptrtoint ptr %messages.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %messages.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_transfers_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %transfers.i = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19, i32 2
  %0 = ptrtoint ptr %transfers.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %transfers.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_errors_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %errors.i = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19, i32 3
  %0 = ptrtoint ptr %errors.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %errors.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_timedout_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %timedout.i = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19, i32 4
  %0 = ptrtoint ptr %timedout.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %timedout.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_spi_sync_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %spi_sync.i = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19, i32 5
  %0 = ptrtoint ptr %spi_sync.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %spi_sync.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_spi_sync_immediate_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %spi_sync_immediate.i = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19, i32 6
  %0 = ptrtoint ptr %spi_sync_immediate.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %spi_sync_immediate.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_spi_async_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %spi_async.i = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19, i32 7
  %0 = ptrtoint ptr %spi_async.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %spi_async.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_bytes_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %bytes.i = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19, i32 8
  %0 = ptrtoint ptr %bytes.i to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %bytes.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.107, i64 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_bytes_rx_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %bytes_rx.i = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19, i32 9
  %0 = ptrtoint ptr %bytes_rx.i to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %bytes_rx.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.107, i64 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_bytes_tx_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %bytes_tx.i = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19, i32 10
  %0 = ptrtoint ptr %bytes_tx.i to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %bytes_tx.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.107, i64 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_transfer_bytes_histo0_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %transfer_bytes_histo.i = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19, i32 11
  %0 = ptrtoint ptr %transfer_bytes_histo.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %transfer_bytes_histo.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_transfer_bytes_histo1_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_device, ptr %dev, i32 0, i32 19, i32 11, i32 1
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_transfer_bytes_histo2_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_device, ptr %dev, i32 0, i32 19, i32 11, i32 2
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_transfer_bytes_histo3_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_device, ptr %dev, i32 0, i32 19, i32 11, i32 3
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_transfer_bytes_histo4_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_device, ptr %dev, i32 0, i32 19, i32 11, i32 4
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_transfer_bytes_histo5_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_device, ptr %dev, i32 0, i32 19, i32 11, i32 5
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_transfer_bytes_histo6_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_device, ptr %dev, i32 0, i32 19, i32 11, i32 6
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_transfer_bytes_histo7_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_device, ptr %dev, i32 0, i32 19, i32 11, i32 7
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_transfer_bytes_histo8_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_device, ptr %dev, i32 0, i32 19, i32 11, i32 8
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_transfer_bytes_histo9_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_device, ptr %dev, i32 0, i32 19, i32 11, i32 9
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_transfer_bytes_histo10_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_device, ptr %dev, i32 0, i32 19, i32 11, i32 10
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_transfer_bytes_histo11_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_device, ptr %dev, i32 0, i32 19, i32 11, i32 11
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_transfer_bytes_histo12_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_device, ptr %dev, i32 0, i32 19, i32 11, i32 12
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_transfer_bytes_histo13_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_device, ptr %dev, i32 0, i32 19, i32 11, i32 13
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_transfer_bytes_histo14_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_device, ptr %dev, i32 0, i32 19, i32 11, i32 14
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_transfer_bytes_histo15_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_device, ptr %dev, i32 0, i32 19, i32 11, i32 15
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_transfer_bytes_histo16_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_device, ptr %dev, i32 0, i32 19, i32 11, i32 16
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_device_transfers_split_maxsize_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %transfers_split_maxsize.i = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 19, i32 12
  %0 = ptrtoint ptr %transfers_split_maxsize.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %transfers_split_maxsize.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_match_device(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @add_uevent_var(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_clk_set_defaults(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_irq_get(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dev_pm_domain_attach(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_pm_domain_detach(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @spidev_release(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %controller = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %controller, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.spi_controller_put.exit_crit_edge, label %if.then.i

entry.spi_controller_put.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_controller_put.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @put_device(ptr noundef nonnull %1) #21
  br label %spi_controller_put.exit

spi_controller_put.exit:                          ; preds = %if.then.i, %entry.spi_controller_put.exit_crit_edge
  %driver_override = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 12
  %2 = ptrtoint ptr %driver_override to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %driver_override, align 8
  tail call void @kfree(ptr noundef %3) #21
  tail call void @kfree(ptr noundef %dev) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @get_device(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__spi_add_device(ptr noundef %spi) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %controller = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 1
  %0 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %controller, align 8
  %parent = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent, align 8
  %call = tail call i32 @bus_for_each_dev(ptr noundef nonnull @spi_bus_type, ptr noundef null, ptr noundef %spi, ptr noundef nonnull @spi_dev_check) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %chip_select = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 4
  %4 = ptrtoint ptr %chip_select to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %chip_select, align 4
  %conv = zext i8 %5 to i32
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %3, ptr noundef nonnull @.str.136, i32 noundef %conv) #26
  br label %cleanup

if.end:                                           ; preds = %entry
  %state_in_sysfs.i = getelementptr inbounds %struct.kobject, ptr %1, i32 0, i32 8
  %6 = ptrtoint ptr %state_in_sysfs.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %bf.load.i = load i8, ptr %state_in_sysfs.i, align 4
  %7 = and i8 %bf.load.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool4.not = icmp eq i8 %7, 0
  br i1 %tobool4.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %cs_gpiods = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 55
  %8 = ptrtoint ptr %cs_gpiods to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %cs_gpiods, align 4
  %tobool7.not = icmp eq ptr %9, null
  br i1 %tobool7.not, label %if.else, label %if.then8

if.then8:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #23
  %chip_select10 = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 4
  %10 = ptrtoint ptr %chip_select10 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %chip_select10, align 4
  %idxprom = zext i8 %11 to i32
  %arrayidx = getelementptr ptr, ptr %9, i32 %idxprom
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx, align 4
  %cs_gpiod = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 14
  %14 = ptrtoint ptr %cs_gpiod to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %13, ptr %cs_gpiod, align 8
  br label %if.end18

if.else:                                          ; preds = %if.end6
  %cs_gpios = getelementptr inbounds %struct.spi_controller, ptr %1, i32 0, i32 54
  %15 = ptrtoint ptr %cs_gpios to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %cs_gpios, align 8
  %tobool11.not = icmp eq ptr %16, null
  br i1 %tobool11.not, label %if.else.if.end18_crit_edge, label %if.then12

if.else.if.end18_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end18

if.then12:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  %chip_select14 = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 4
  %17 = ptrtoint ptr %chip_select14 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %chip_select14, align 4
  %idxprom15 = zext i8 %18 to i32
  %arrayidx16 = getelementptr i32, ptr %16, i32 %idxprom15
  %19 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx16, align 4
  %cs_gpio = getelementptr inbounds %struct.spi_device, ptr %spi, i32 0, i32 13
  %21 = ptrtoint ptr %cs_gpio to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %cs_gpio, align 4
  br label %if.end18

if.end18:                                         ; preds = %if.then12, %if.else.if.end18_crit_edge, %if.then8
  %call19 = tail call i32 @spi_setup(ptr noundef %spi)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %cmp = icmp slt i32 %call19, 0
  br i1 %cmp, label %do.end24, label %if.end27

do.end24:                                         ; preds = %if.end18
  %init_name.i = getelementptr inbounds %struct.device, ptr %spi, i32 0, i32 3
  %22 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %23, null
  br i1 %tobool.not.i, label %if.end.i, label %do.end24.dev_name.exit_crit_edge

do.end24.dev_name.exit_crit_edge:                 ; preds = %do.end24
  call void @__sanitizer_cov_trace_pc() #23
  br label %dev_name.exit

if.end.i:                                         ; preds = %do.end24
  call void @__sanitizer_cov_trace_pc() #23
  %24 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %spi, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %do.end24.dev_name.exit_crit_edge
  %retval.0.i82 = phi ptr [ %25, %if.end.i ], [ %23, %do.end24.dev_name.exit_crit_edge ]
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %3, ptr noundef nonnull @.str.139, ptr noundef %retval.0.i82, i32 noundef %call19) #26
  br label %cleanup

if.end27:                                         ; preds = %if.end18
  %call29 = tail call i32 @device_add(ptr noundef %spi) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29)
  %cmp30 = icmp slt i32 %call29, 0
  br i1 %cmp30, label %do.end35, label %do.body39

do.end35:                                         ; preds = %if.end27
  %init_name.i83 = getelementptr inbounds %struct.device, ptr %spi, i32 0, i32 3
  %26 = ptrtoint ptr %init_name.i83 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %init_name.i83, align 8
  %tobool.not.i84 = icmp eq ptr %27, null
  br i1 %tobool.not.i84, label %if.end.i85, label %do.end35.dev_name.exit87_crit_edge

do.end35.dev_name.exit87_crit_edge:               ; preds = %do.end35
  call void @__sanitizer_cov_trace_pc() #23
  br label %dev_name.exit87

if.end.i85:                                       ; preds = %do.end35
  call void @__sanitizer_cov_trace_pc() #23
  %28 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %spi, align 4
  br label %dev_name.exit87

dev_name.exit87:                                  ; preds = %if.end.i85, %do.end35.dev_name.exit87_crit_edge
  %retval.0.i86 = phi ptr [ %29, %if.end.i85 ], [ %27, %do.end35.dev_name.exit87_crit_edge ]
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %3, ptr noundef nonnull @.str.142, ptr noundef %retval.0.i86, i32 noundef %call29) #26
  %30 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %controller, align 8
  %cleanup.i = getelementptr inbounds %struct.spi_controller, ptr %31, i32 0, i32 23
  %32 = ptrtoint ptr %cleanup.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %cleanup.i, align 8
  %tobool.not.i88 = icmp eq ptr %33, null
  br i1 %tobool.not.i88, label %dev_name.exit87.cleanup_crit_edge, label %if.then.i

dev_name.exit87.cleanup_crit_edge:                ; preds = %dev_name.exit87
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then.i:                                        ; preds = %dev_name.exit87
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %33(ptr noundef %spi) #21
  br label %cleanup

do.body39:                                        ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__spi_add_device.__UNIQUE_ID_ddebug346, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@__spi_add_device, %cleanup)) #21
          to label %if.then45 [label %cleanup], !srcloc !742

if.then45:                                        ; preds = %do.body39
  %init_name.i90 = getelementptr inbounds %struct.device, ptr %spi, i32 0, i32 3
  %34 = ptrtoint ptr %init_name.i90 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %init_name.i90, align 8
  %tobool.not.i91 = icmp eq ptr %35, null
  br i1 %tobool.not.i91, label %if.end.i92, label %if.then45.dev_name.exit94_crit_edge

if.then45.dev_name.exit94_crit_edge:              ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #23
  br label %dev_name.exit94

if.end.i92:                                       ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #23
  %36 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %spi, align 4
  br label %dev_name.exit94

dev_name.exit94:                                  ; preds = %if.end.i92, %if.then45.dev_name.exit94_crit_edge
  %retval.0.i93 = phi ptr [ %37, %if.end.i92 ], [ %35, %if.then45.dev_name.exit94_crit_edge ]
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @__spi_add_device.__UNIQUE_ID_ddebug346, ptr noundef %3, ptr noundef nonnull @.str.144, ptr noundef %retval.0.i93) #21
  br label %cleanup

cleanup:                                          ; preds = %dev_name.exit94, %do.body39, %if.then.i, %dev_name.exit87.cleanup_crit_edge, %dev_name.exit, %if.end.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ %call, %do.end ], [ %call19, %dev_name.exit ], [ -19, %if.end.cleanup_crit_edge ], [ %call29, %dev_name.exit94 ], [ %call29, %dev_name.exit87.cleanup_crit_edge ], [ %call29, %if.then.i ], [ %call29, %do.body39 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bus_for_each_dev(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @spi_dev_check(ptr nocapture noundef readonly %dev, ptr nocapture noundef readonly %data) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %controller = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 1
  %0 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %controller, align 8
  %controller1 = getelementptr inbounds %struct.spi_device, ptr %data, i32 0, i32 1
  %2 = ptrtoint ptr %controller1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %controller1, align 8
  %cmp = icmp eq ptr %1, %3
  br i1 %cmp, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %chip_select = getelementptr inbounds %struct.spi_device, ptr %dev, i32 0, i32 4
  %4 = ptrtoint ptr %chip_select to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %chip_select, align 4
  %chip_select2 = getelementptr inbounds %struct.spi_device, ptr %data, i32 0, i32 4
  %6 = ptrtoint ptr %chip_select2 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %chip_select2, align 4
  call void @__sanitizer_cov_trace_cmp1(i8 %5, i8 %7)
  %cmp4 = icmp eq i8 %5, %7
  br i1 %cmp4, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end, %land.lhs.true.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -16, %land.lhs.true.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #14

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #15

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__kmap_to_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @usleep_range_state(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ktime_get_real_ts64(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__spi_unmap_msg(ptr noundef %ctlr, ptr noundef readonly %msg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %cur_msg_mapped = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 38
  %0 = ptrtoint ptr %cur_msg_mapped to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %cur_msg_mapped, align 2, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %can_dma = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 24
  %2 = ptrtoint ptr %can_dma to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %can_dma, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %lor.lhs.false.cleanup_crit_edge, label %if.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %dma_tx = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 60
  %4 = ptrtoint ptr %dma_tx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dma_tx, align 8
  %tobool2.not = icmp eq ptr %5, null
  br i1 %tobool2.not, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %dev = getelementptr inbounds %struct.dma_device, ptr %7, i32 0, i32 15
  br label %if.end6

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %parent = getelementptr inbounds %struct.device, ptr %ctlr, i32 0, i32 1
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then3
  %tx_dev.0.in = phi ptr [ %dev, %if.then3 ], [ %parent, %if.else ]
  %8 = ptrtoint ptr %tx_dev.0.in to i32
  call void @__asan_load4_noabort(i32 %8)
  %tx_dev.0 = load ptr, ptr %tx_dev.0.in, align 4
  %dma_rx = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 61
  %9 = ptrtoint ptr %dma_rx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %dma_rx, align 4
  %tobool7.not = icmp eq ptr %10, null
  br i1 %tobool7.not, label %if.else12, label %if.then8

if.then8:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #23
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %10, align 4
  %dev11 = getelementptr inbounds %struct.dma_device, ptr %12, i32 0, i32 15
  br label %if.end15

if.else12:                                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #23
  %parent14 = getelementptr inbounds %struct.device, ptr %ctlr, i32 0, i32 1
  br label %if.end15

if.end15:                                         ; preds = %if.else12, %if.then8
  %rx_dev.0.in = phi ptr [ %dev11, %if.then8 ], [ %parent14, %if.else12 ]
  %13 = ptrtoint ptr %rx_dev.0.in to i32
  call void @__asan_load4_noabort(i32 %13)
  %rx_dev.0 = load ptr, ptr %rx_dev.0.in, align 4
  %14 = ptrtoint ptr %msg to i32
  call void @__asan_load4_noabort(i32 %14)
  %.pn5 = load ptr, ptr %msg, align 4
  %cmp.not6 = icmp eq ptr %.pn5, %msg
  br i1 %cmp.not6, label %if.end15.for.end_crit_edge, label %for.body.lr.ph

if.end15.for.end_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.end15
  %spi = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %.pn7 = phi ptr [ %.pn5, %for.body.lr.ph ], [ %.pn, %for.inc.for.body_crit_edge ]
  %xfer.0 = getelementptr i8, ptr %.pn7, i32 -84
  %15 = ptrtoint ptr %can_dma to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %can_dma, align 4
  %17 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %spi, align 4
  %call = tail call zeroext i1 %16(ptr noundef %ctlr, ptr noundef %18, ptr noundef %xfer.0) #21
  br i1 %call, label %if.end19, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.end19:                                         ; preds = %for.body
  %orig_nents.i = getelementptr i8, ptr %.pn7, i32 -44
  %19 = ptrtoint ptr %orig_nents.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %orig_nents.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.not.i = icmp eq i32 %20, 0
  br i1 %tobool.not.i, label %if.end19.spi_unmap_buf.exit_crit_edge, label %if.then.i

if.end19.spi_unmap_buf.exit_crit_edge:            ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_unmap_buf.exit

if.then.i:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #23
  %rx_sg = getelementptr i8, ptr %.pn7, i32 -52
  %21 = ptrtoint ptr %rx_sg to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %rx_sg, align 4
  tail call void @dma_unmap_sg_attrs(ptr noundef %rx_dev.0, ptr noundef %22, i32 noundef %20, i32 noundef 2, i32 noundef 0) #21
  tail call void @sg_free_table(ptr noundef %rx_sg) #21
  br label %spi_unmap_buf.exit

spi_unmap_buf.exit:                               ; preds = %if.then.i, %if.end19.spi_unmap_buf.exit_crit_edge
  %orig_nents.i1 = getelementptr i8, ptr %.pn7, i32 -56
  %23 = ptrtoint ptr %orig_nents.i1 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %orig_nents.i1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool.not.i2 = icmp eq i32 %24, 0
  br i1 %tobool.not.i2, label %spi_unmap_buf.exit.for.inc_crit_edge, label %if.then.i3

spi_unmap_buf.exit.for.inc_crit_edge:             ; preds = %spi_unmap_buf.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.then.i3:                                       ; preds = %spi_unmap_buf.exit
  call void @__sanitizer_cov_trace_pc() #23
  %tx_sg = getelementptr i8, ptr %.pn7, i32 -64
  %25 = ptrtoint ptr %tx_sg to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %tx_sg, align 4
  tail call void @dma_unmap_sg_attrs(ptr noundef %tx_dev.0, ptr noundef %26, i32 noundef %24, i32 noundef 1, i32 noundef 0) #21
  tail call void @sg_free_table(ptr noundef %tx_sg) #21
  br label %for.inc

for.inc:                                          ; preds = %if.then.i3, %spi_unmap_buf.exit.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %27 = ptrtoint ptr %.pn7 to i32
  call void @__asan_load4_noabort(i32 %27)
  %.pn = load ptr, ptr %.pn7, align 4
  %cmp.not = icmp eq ptr %.pn, %msg
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end15.for.end_crit_edge
  %28 = ptrtoint ptr %cur_msg_mapped to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 0, ptr %cur_msg_mapped, align 2
  br label %cleanup

cleanup:                                          ; preds = %for.end, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @spi_idle_runtime_pm(ptr nocapture noundef readonly %ctlr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %auto_runtime_pm = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 36
  %0 = ptrtoint ptr %auto_runtime_pm to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %auto_runtime_pm, align 4, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %parent = getelementptr inbounds %struct.device, ptr %ctlr, i32 0, i32 1
  %2 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent, align 8
  %call.i = tail call i64 @ktime_get_mono_fast_ns() #21
  %last_busy.i = getelementptr inbounds %struct.device, ptr %3, i32 0, i32 12, i32 22
  %4 = ptrtoint ptr %last_busy.i to i32
  call void @__asan_store8_noabort(i32 %4)
  store volatile i64 %call.i, ptr %last_busy.i, align 8
  %5 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %parent, align 8
  %call.i5 = tail call i32 @__pm_runtime_suspend(ptr noundef %6, i32 noundef 13) #21
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_spi_controller_idle(ptr noundef %controller) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_controller_idle, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_spi_controller_idle, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !742

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !730

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !755
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_controller_idle, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %controller) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !756
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !756
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !730

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !745
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_controller_idle, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_spi_controller_idle.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_spi_controller_idle.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.149, i32 noundef 35, ptr noundef nonnull @.str.150) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !746
  %38 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_spi_controller_busy(ptr noundef %controller) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_controller_busy, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_spi_controller_busy, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !742

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !730

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !757
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_controller_busy, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %controller) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !758
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !758
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !730

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !745
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_controller_busy, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_spi_controller_busy.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_spi_controller_busy.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.149, i32 noundef 43, ptr noundef nonnull @.str.150) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !746
  %38 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_spi_message_start(ptr noundef %msg) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_message_start, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_spi_message_start, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !742

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !730

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !759
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_message_start, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %msg) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !760
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !760
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !730

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !745
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_message_start, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_spi_message_start.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_spi_message_start.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.149, i32 noundef 139, ptr noundef nonnull @.str.150) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !746
  %38 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_idle(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(1)
declare dso_local noalias ptr @krealloc(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #16

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mutex_is_locked(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @spi_controller_release(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @kfree(ptr noundef %dev) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_messages_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %messages.i = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 1
  %0 = ptrtoint ptr %messages.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %messages.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_transfers_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %transfers.i = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 2
  %0 = ptrtoint ptr %transfers.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %transfers.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_errors_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %errors.i = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 3
  %0 = ptrtoint ptr %errors.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %errors.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_timedout_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %timedout.i = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 4
  %0 = ptrtoint ptr %timedout.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %timedout.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_spi_sync_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %spi_sync.i = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 5
  %0 = ptrtoint ptr %spi_sync.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %spi_sync.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_spi_sync_immediate_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %spi_sync_immediate.i = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 6
  %0 = ptrtoint ptr %spi_sync_immediate.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %spi_sync_immediate.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_spi_async_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %spi_async.i = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 7
  %0 = ptrtoint ptr %spi_async.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %spi_async.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_bytes_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %bytes.i = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 8
  %0 = ptrtoint ptr %bytes.i to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %bytes.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.107, i64 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_bytes_rx_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %bytes_rx.i = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 9
  %0 = ptrtoint ptr %bytes_rx.i to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %bytes_rx.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.107, i64 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_bytes_tx_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %bytes_tx.i = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 10
  %0 = ptrtoint ptr %bytes_tx.i to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %bytes_tx.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.107, i64 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_transfer_bytes_histo0_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %transfer_bytes_histo.i = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 11
  %0 = ptrtoint ptr %transfer_bytes_histo.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %transfer_bytes_histo.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_transfer_bytes_histo1_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 11, i32 1
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_transfer_bytes_histo2_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 11, i32 2
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_transfer_bytes_histo3_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 11, i32 3
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_transfer_bytes_histo4_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 11, i32 4
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_transfer_bytes_histo5_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 11, i32 5
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_transfer_bytes_histo6_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 11, i32 6
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_transfer_bytes_histo7_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 11, i32 7
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_transfer_bytes_histo8_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 11, i32 8
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_transfer_bytes_histo9_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 11, i32 9
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_transfer_bytes_histo10_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 11, i32 10
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_transfer_bytes_histo11_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 11, i32 11
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_transfer_bytes_histo12_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 11, i32 12
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_transfer_bytes_histo13_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 11, i32 13
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_transfer_bytes_histo14_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 11, i32 14
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_transfer_bytes_histo15_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 11, i32 15
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_transfer_bytes_histo16_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %arrayidx.i = getelementptr %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 11, i32 16
  %0 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx.i, align 8
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_controller_transfers_split_maxsize_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %transfers_split_maxsize.i = getelementptr inbounds %struct.spi_controller, ptr %dev, i32 0, i32 59, i32 12
  %0 = ptrtoint ptr %transfers_split_maxsize.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %transfers_split_maxsize.i, align 4
  %call5.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.99, i32 noundef %1) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call2.i) #21
  ret i32 %call5.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @slave_show(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @device_find_child(ptr noundef %dev, ptr noundef null, ptr noundef nonnull @match_true) #21
  %tobool.not = icmp eq ptr %call, null
  %modalias = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 11
  %spec.select = select i1 %tobool.not, ptr null, ptr %modalias
  %call3 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.96, ptr noundef %spec.select)
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @slave_store(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef readonly %buf, i32 noundef %count) #0 align 64 {
entry:
  %name = alloca [32 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %name) #21
  %0 = call ptr @memset(ptr %name, i32 255, i32 32)
  %call = call i32 (ptr, ptr, ...) @sscanf(ptr noundef %buf, ptr noundef nonnull @.str.167, ptr noundef nonnull %name)
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %lor.lhs.false, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %1 = ptrtoint ptr %name to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %name, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.not = icmp eq i8 %2, 0
  br i1 %tobool.not, label %lor.lhs.false.cleanup_crit_edge, label %if.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %call2 = call ptr @device_find_child(ptr noundef %dev, ptr noundef null, ptr noundef nonnull @match_true) #21
  %tobool3.not = icmp eq ptr %call2, null
  br i1 %tobool3.not, label %if.end.if.end5_crit_edge, label %if.then4

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end5

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  call void @device_unregister(ptr noundef nonnull %call2) #21
  call void @put_device(ptr noundef nonnull %call2) #21
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end.if.end5_crit_edge
  %bcmp = call i32 @bcmp(ptr noundef nonnull dereferenceable(7) %name, ptr noundef nonnull dereferenceable(7) @.str.168, i32 7) #25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %tobool8.not = icmp eq i32 %bcmp, 0
  br i1 %tobool8.not, label %if.end5.cleanup_crit_edge, label %if.then9

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then9:                                         ; preds = %if.end5
  %call10 = call fastcc ptr @spi_alloc_device(ptr noundef %dev)
  %tobool11.not = icmp eq ptr %call10, null
  br i1 %tobool11.not, label %if.then9.cleanup_crit_edge, label %if.end13

if.then9.cleanup_crit_edge:                       ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end13:                                         ; preds = %if.then9
  %modalias = getelementptr inbounds %struct.spi_device, ptr %call10, i32 0, i32 11
  %call16 = call i32 @strlcpy(ptr noundef %modalias, ptr noundef nonnull %name, i32 noundef 32) #21
  %call17 = call fastcc i32 @spi_add_device(ptr noundef nonnull %call10)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %if.end13.cleanup_crit_edge, label %spi_dev_put.exit

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

spi_dev_put.exit:                                 ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #23
  call void @put_device(ptr noundef nonnull %call10) #21
  br label %cleanup

cleanup:                                          ; preds = %spi_dev_put.exit, %if.end13.cleanup_crit_edge, %if.then9.cleanup_crit_edge, %if.end5.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call17, %spi_dev_put.exit ], [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ], [ -12, %if.then9.cleanup_crit_edge ], [ %count, %if.end13.cleanup_crit_edge ], [ %count, %if.end5.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %name) #21
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @device_find_child(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @match_true(ptr nocapture noundef readnone %dev, ptr nocapture noundef readnone %data) #17 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 1
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sscanf(ptr nocapture noundef readonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #13

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_unregister(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_swait_queue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @gpiod_count(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @devm_gpiod_get_index_optional(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @devm_kasprintf(ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @gpiod_set_consumer_name(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #14

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @devm_kmalloc(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_count_phandle_with_args(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_get_named_gpio_flags(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @spi_transfer_one_message(ptr noundef %ctlr, ptr noundef %msg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 59
  %spi = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 1
  %0 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spi, align 4
  %statistics1 = getelementptr inbounds %struct.spi_device, ptr %1, i32 0, i32 19
  tail call fastcc void @spi_set_cs(ptr noundef %1, i1 noundef zeroext true, i1 noundef zeroext false)
  %call5 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %messages = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 59, i32 1
  %2 = ptrtoint ptr %messages to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %messages, align 4
  %add = add i32 %3, 1
  store i32 %add, ptr %messages, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call5) #21
  %call22 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics1) #21
  %messages27 = getelementptr inbounds %struct.spi_device, ptr %1, i32 0, i32 19, i32 1
  %4 = ptrtoint ptr %messages27 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %messages27, align 4
  %add28 = add i32 %5, 1
  store i32 %add28, ptr %messages27, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics1, i32 noundef %call22) #21
  %6 = ptrtoint ptr %msg to i32
  call void @__asan_load4_noabort(i32 %6)
  %.pn276 = load ptr, ptr %msg, align 4
  %cmp34.not278 = icmp eq ptr %.pn276, %msg
  br i1 %cmp34.not278, label %entry.if.then158_crit_edge, label %for.body.lr.ph

entry.if.then158_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then158

for.body.lr.ph:                                   ; preds = %entry
  %ptp_sts_supported = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 65
  %xfer_completion = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 42
  %transfer_one = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 51
  %cur_msg_mapped = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 38
  %fallback = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 41
  %status = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 7
  %actual_length = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 6
  br label %for.body

for.body:                                         ; preds = %if.end146.for.body_crit_edge, %for.body.lr.ph
  %.pn281 = phi ptr [ %.pn276, %for.body.lr.ph ], [ %.pn, %if.end146.for.body_crit_edge ]
  %keep_cs.0.off0280 = phi i1 [ false, %for.body.lr.ph ], [ %keep_cs.1.off0, %if.end146.for.body_crit_edge ]
  %ret.0279 = phi i32 [ 0, %for.body.lr.ph ], [ %ret.1, %if.end146.for.body_crit_edge ]
  %xfer.0282 = getelementptr i8, ptr %.pn281, i32 -84
  tail call fastcc void @trace_spi_transfer_start(ptr noundef %msg, ptr noundef %xfer.0282)
  tail call fastcc void @spi_statistics_add_transfer_stats(ptr noundef %statistics, ptr noundef %xfer.0282, ptr noundef %ctlr)
  tail call fastcc void @spi_statistics_add_transfer_stats(ptr noundef %statistics1, ptr noundef %xfer.0282, ptr noundef %ctlr)
  %7 = ptrtoint ptr %ptp_sts_supported to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %ptp_sts_supported, align 4, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool.not = icmp eq i8 %8, 0
  br i1 %tobool.not, label %if.then, label %for.body.if.end_crit_edge

for.body.if.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %for.body
  %ptp_sts_word_pre = getelementptr i8, ptr %.pn281, i32 -16
  %9 = ptrtoint ptr %ptp_sts_word_pre to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %ptp_sts_word_pre, align 4
  %ptp_sts = getelementptr i8, ptr %.pn281, i32 -8
  %10 = ptrtoint ptr %ptp_sts to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ptp_sts, align 4
  %tobool.not.i = icmp eq ptr %11, null
  br i1 %tobool.not.i, label %if.then.if.end_crit_edge, label %if.then.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @ktime_get_real_ts64(ptr noundef nonnull %11) #21
  br label %if.end

if.end:                                           ; preds = %if.then.i, %if.then.if.end_crit_edge, %for.body.if.end_crit_edge
  %12 = ptrtoint ptr %xfer.0282 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %xfer.0282, align 4
  %tobool36.not = icmp eq ptr %13, null
  br i1 %tobool36.not, label %lor.lhs.false, label %if.end.land.lhs.true_crit_edge

if.end.land.lhs.true_crit_edge:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.lhs.true

lor.lhs.false:                                    ; preds = %if.end
  %rx_buf = getelementptr i8, ptr %.pn281, i32 -80
  %14 = ptrtoint ptr %rx_buf to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %rx_buf, align 4
  %tobool37.not = icmp eq ptr %15, null
  br i1 %tobool37.not, label %lor.lhs.false.if.else_crit_edge, label %lor.lhs.false.land.lhs.true_crit_edge

lor.lhs.false.land.lhs.true_crit_edge:            ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.lhs.true

lor.lhs.false.if.else_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

land.lhs.true:                                    ; preds = %lor.lhs.false.land.lhs.true_crit_edge, %if.end.land.lhs.true_crit_edge
  %len = getelementptr i8, ptr %.pn281, i32 -76
  %16 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %len, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool38.not = icmp eq i32 %17, 0
  br i1 %tobool38.not, label %land.lhs.true.if.else_crit_edge, label %if.then39

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

if.then39:                                        ; preds = %land.lhs.true
  %18 = ptrtoint ptr %xfer_completion to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 0, ptr %xfer_completion, align 4
  %19 = ptrtoint ptr %transfer_one to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %transfer_one, align 4
  %21 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %spi, align 4
  %call41273 = tail call i32 %20(ptr noundef %ctlr, ptr noundef %22, ptr noundef %xfer.0282) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41273)
  %cmp42274 = icmp slt i32 %call41273, 0
  br i1 %cmp42274, label %if.then44.lr.ph, label %if.then39.if.end102_crit_edge

if.then39.if.end102_crit_edge:                    ; preds = %if.then39
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end102

if.then44.lr.ph:                                  ; preds = %if.then39
  %error = getelementptr i8, ptr %.pn281, i32 8
  %23 = ptrtoint ptr %cur_msg_mapped to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %cur_msg_mapped, align 2, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %24)
  %tobool45.not301 = icmp eq i8 %24, 0
  br i1 %tobool45.not301, label %if.then44.lr.ph.out.thread_crit_edge, label %if.then44.lr.ph.land.lhs.true47_crit_edge

if.then44.lr.ph.land.lhs.true47_crit_edge:        ; preds = %if.then44.lr.ph
  br label %land.lhs.true47

if.then44.lr.ph.out.thread_crit_edge:             ; preds = %if.then44.lr.ph
  call void @__sanitizer_cov_trace_pc() #23
  br label %out.thread

if.then44:                                        ; preds = %if.then50
  %25 = ptrtoint ptr %cur_msg_mapped to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %cur_msg_mapped, align 2, !range !736
  %tobool45.not = icmp eq i8 %26, 0
  br i1 %tobool45.not, label %if.then44.out.thread_crit_edge, label %if.then44.land.lhs.true47_crit_edge

if.then44.land.lhs.true47_crit_edge:              ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.lhs.true47

if.then44.out.thread_crit_edge:                   ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #23
  br label %out.thread

land.lhs.true47:                                  ; preds = %if.then44.land.lhs.true47_crit_edge, %if.then44.lr.ph.land.lhs.true47_crit_edge
  %call41275302 = phi i32 [ %call41, %if.then44.land.lhs.true47_crit_edge ], [ %call41273, %if.then44.lr.ph.land.lhs.true47_crit_edge ]
  %27 = ptrtoint ptr %error to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %error, align 4
  %29 = and i16 %28, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %29)
  %tobool49.not = icmp eq i16 %29, 0
  br i1 %tobool49.not, label %land.lhs.true47.out.thread_crit_edge, label %if.then50

land.lhs.true47.out.thread_crit_edge:             ; preds = %land.lhs.true47
  call void @__sanitizer_cov_trace_pc() #23
  br label %out.thread

if.then50:                                        ; preds = %land.lhs.true47
  tail call fastcc void @__spi_unmap_msg(ptr noundef %ctlr, ptr noundef %msg)
  %30 = ptrtoint ptr %fallback to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 1, ptr %fallback, align 1
  %31 = ptrtoint ptr %error to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %error, align 4
  %33 = and i16 %32, -2
  store i16 %33, ptr %error, align 4
  %34 = ptrtoint ptr %transfer_one to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %transfer_one, align 4
  %36 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %spi, align 4
  %call41 = tail call i32 %35(ptr noundef %ctlr, ptr noundef %37, ptr noundef %xfer.0282) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %cmp42 = icmp slt i32 %call41, 0
  br i1 %cmp42, label %if.then44, label %if.then50.if.end102_crit_edge

if.then50.if.end102_crit_edge:                    ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end102

out.thread:                                       ; preds = %land.lhs.true47.out.thread_crit_edge, %if.then44.out.thread_crit_edge, %if.then44.lr.ph.out.thread_crit_edge
  %call41275.lcssa = phi i32 [ %call41, %if.then44.out.thread_crit_edge ], [ %call41275302, %land.lhs.true47.out.thread_crit_edge ], [ %call41273, %if.then44.lr.ph.out.thread_crit_edge ]
  %call68 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %errors = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 59, i32 3
  %38 = ptrtoint ptr %errors to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %errors, align 4
  %add73 = add i32 %39, 1
  store i32 %add73, ptr %errors, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call68) #21
  %call88 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics1) #21
  %errors93 = getelementptr inbounds %struct.spi_device, ptr %1, i32 0, i32 19, i32 3
  %40 = ptrtoint ptr %errors93 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %errors93, align 4
  %add94 = add i32 %41, 1
  store i32 %add94, ptr %errors93, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics1, i32 noundef %call88) #21
  %42 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %spi, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %43, ptr noundef nonnull @.str.186, i32 noundef %call41275.lcssa) #26
  br label %if.then158

if.end102:                                        ; preds = %if.then50.if.end102_crit_edge, %if.then39.if.end102_crit_edge
  %call41.lcssa = phi i32 [ %call41273, %if.then39.if.end102_crit_edge ], [ %call41, %if.then50.if.end102_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41.lcssa)
  %cmp103.not = icmp eq i32 %call41.lcssa, 0
  br i1 %cmp103.not, label %if.end102.if.end122_crit_edge, label %if.then105

if.end102.if.end122_crit_edge:                    ; preds = %if.end102
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end122

if.then105:                                       ; preds = %if.end102
  %call106 = tail call fastcc i32 @spi_transfer_wait(ptr noundef %ctlr, ptr noundef %msg, ptr noundef %xfer.0282)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call106)
  %cmp107 = icmp slt i32 %call106, 0
  br i1 %cmp107, label %if.then109, label %if.then105.if.end122_crit_edge

if.then105.if.end122_crit_edge:                   ; preds = %if.then105
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end122

if.then109:                                       ; preds = %if.then105
  call void @__sanitizer_cov_trace_pc() #23
  %44 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %call106, ptr %status, align 4
  br label %if.end122

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %lor.lhs.false.if.else_crit_edge
  %len112 = getelementptr i8, ptr %.pn281, i32 -76
  %45 = ptrtoint ptr %len112 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %len112, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool113.not = icmp eq i32 %46, 0
  br i1 %tobool113.not, label %if.else.if.end122_crit_edge, label %do.end117

if.else.if.end122_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end122

do.end117:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  %47 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %spi, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %48, ptr noundef nonnull @.str.189, i32 noundef %46) #26
  br label %if.end122

if.end122:                                        ; preds = %do.end117, %if.else.if.end122_crit_edge, %if.then109, %if.then105.if.end122_crit_edge, %if.end102.if.end122_crit_edge
  %ret.1 = phi i32 [ %call106, %if.then109 ], [ %call106, %if.then105.if.end122_crit_edge ], [ 0, %if.end102.if.end122_crit_edge ], [ %ret.0279, %do.end117 ], [ %ret.0279, %if.else.if.end122_crit_edge ]
  %49 = ptrtoint ptr %ptp_sts_supported to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %ptp_sts_supported, align 4, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %50)
  %tobool124.not = icmp eq i8 %50, 0
  br i1 %tobool124.not, label %if.then125, label %if.end122.if.end128_crit_edge

if.end122.if.end128_crit_edge:                    ; preds = %if.end122
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end128

if.then125:                                       ; preds = %if.end122
  %ptp_sts126 = getelementptr i8, ptr %.pn281, i32 -8
  %51 = ptrtoint ptr %ptp_sts126 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %ptp_sts126, align 4
  %tobool.not.i257 = icmp eq ptr %52, null
  br i1 %tobool.not.i257, label %if.then125.ptp_read_system_postts.exit_crit_edge, label %if.then.i258

if.then125.ptp_read_system_postts.exit_crit_edge: ; preds = %if.then125
  call void @__sanitizer_cov_trace_pc() #23
  br label %ptp_read_system_postts.exit

if.then.i258:                                     ; preds = %if.then125
  call void @__sanitizer_cov_trace_pc() #23
  %post_ts.i = getelementptr inbounds %struct.ptp_system_timestamp, ptr %52, i32 0, i32 1
  tail call void @ktime_get_real_ts64(ptr noundef %post_ts.i) #21
  br label %ptp_read_system_postts.exit

ptp_read_system_postts.exit:                      ; preds = %if.then.i258, %if.then125.ptp_read_system_postts.exit_crit_edge
  %len127 = getelementptr i8, ptr %.pn281, i32 -76
  %53 = ptrtoint ptr %len127 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %len127, align 4
  %ptp_sts_word_post = getelementptr i8, ptr %.pn281, i32 -12
  %55 = ptrtoint ptr %ptp_sts_word_post to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %54, ptr %ptp_sts_word_post, align 4
  br label %if.end128

if.end128:                                        ; preds = %ptp_read_system_postts.exit, %if.end122.if.end128_crit_edge
  tail call fastcc void @trace_spi_transfer_stop(ptr noundef %msg, ptr noundef %xfer.0282)
  %56 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %status, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -115, i32 %57)
  %cmp130.not = icmp eq i32 %57, -115
  br i1 %cmp130.not, label %if.end133, label %if.end128.out_crit_edge

if.end128.out_crit_edge:                          ; preds = %if.end128
  call void @__sanitizer_cov_trace_pc() #23
  br label %out

if.end133:                                        ; preds = %if.end128
  %delay.i = getelementptr i8, ptr %.pn281, i32 -38
  %call.i = tail call i32 @spi_delay_exec(ptr noundef %delay.i, ptr noundef %xfer.0282) #21
  %cs_change = getelementptr i8, ptr %.pn281, i32 -40
  %58 = ptrtoint ptr %cs_change to i32
  call void @__asan_load1_noabort(i32 %58)
  %bf.load = load i8, ptr %cs_change, align 4
  %59 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %59)
  %tobool135.not = icmp eq i8 %59, 0
  br i1 %tobool135.not, label %if.end133.if.end146_crit_edge, label %if.then136

if.end133.if.end146_crit_edge:                    ; preds = %if.end133
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end146

if.then136:                                       ; preds = %if.end133
  %60 = ptrtoint ptr %.pn281 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %.pn281, align 4
  %cmp.i.not = icmp eq ptr %61, %msg
  br i1 %cmp.i.not, label %if.then136.if.end146_crit_edge, label %if.else142

if.then136.if.end146_crit_edge:                   ; preds = %if.then136
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end146

if.else142:                                       ; preds = %if.then136
  %62 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %spi, align 4
  tail call fastcc void @spi_set_cs(ptr noundef %63, i1 noundef zeroext false, i1 noundef zeroext false)
  %cs_change_delay.i = getelementptr i8, ptr %.pn281, i32 -34
  %64 = ptrtoint ptr %cs_change_delay.i to i32
  call void @__asan_load2_noabort(i32 %64)
  %65 = load i16, ptr %cs_change_delay.i, align 2
  %unit2.i = getelementptr i8, ptr %.pn281, i32 -32
  %66 = ptrtoint ptr %unit2.i to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %unit2.i, align 2
  %conv3.i = zext i8 %67 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %65)
  %tobool.not.i259 = icmp eq i16 %65, 0
  br i1 %tobool.not.i259, label %if.then.i261, label %if.end6.i

if.then.i261:                                     ; preds = %if.else142
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %67)
  %cmp.i260 = icmp eq i8 %67, 0
  br i1 %cmp.i260, label %if.then.i261.cleanup.sink.split.i_crit_edge, label %if.then.i261._spi_transfer_cs_change_delay.exit_crit_edge

if.then.i261._spi_transfer_cs_change_delay.exit_crit_edge: ; preds = %if.then.i261
  call void @__sanitizer_cov_trace_pc() #23
  br label %_spi_transfer_cs_change_delay.exit

if.then.i261.cleanup.sink.split.i_crit_edge:      ; preds = %if.then.i261
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.sink.split.i

if.end6.i:                                        ; preds = %if.else142
  %call.i262 = tail call i32 @spi_delay_exec(ptr noundef %cs_change_delay.i, ptr noundef %xfer.0282) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i262)
  %tobool8.not.i = icmp eq i32 %call.i262, 0
  br i1 %tobool8.not.i, label %if.end6.i._spi_transfer_cs_change_delay.exit_crit_edge, label %do.body.i

if.end6.i._spi_transfer_cs_change_delay.exit_crit_edge: ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %_spi_transfer_cs_change_delay.exit

do.body.i:                                        ; preds = %if.end6.i
  %.b26.i = load i1, ptr @_spi_transfer_cs_change_delay.__print_once, align 1
  br i1 %.b26.i, label %do.body.i.cleanup.sink.split.i_crit_edge, label %if.then11.i

do.body.i.cleanup.sink.split.i_crit_edge:         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.sink.split.i

if.then11.i:                                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @_spi_transfer_cs_change_delay.__print_once, align 1
  %68 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %spi, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %69, ptr noundef nonnull @.str.194, i32 noundef %conv3.i, i32 noundef 10) #26
  br label %cleanup.sink.split.i

cleanup.sink.split.i:                             ; preds = %if.then11.i, %do.body.i.cleanup.sink.split.i_crit_edge, %if.then.i261.cleanup.sink.split.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %70 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %70(i32 noundef 2147480) #21
  br label %_spi_transfer_cs_change_delay.exit

_spi_transfer_cs_change_delay.exit:               ; preds = %cleanup.sink.split.i, %if.end6.i._spi_transfer_cs_change_delay.exit_crit_edge, %if.then.i261._spi_transfer_cs_change_delay.exit_crit_edge
  %71 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %spi, align 4
  tail call fastcc void @spi_set_cs(ptr noundef %72, i1 noundef zeroext true, i1 noundef zeroext false)
  br label %if.end146

if.end146:                                        ; preds = %_spi_transfer_cs_change_delay.exit, %if.then136.if.end146_crit_edge, %if.end133.if.end146_crit_edge
  %keep_cs.1.off0 = phi i1 [ %keep_cs.0.off0280, %_spi_transfer_cs_change_delay.exit ], [ %keep_cs.0.off0280, %if.end133.if.end146_crit_edge ], [ true, %if.then136.if.end146_crit_edge ]
  %len147 = getelementptr i8, ptr %.pn281, i32 -76
  %73 = ptrtoint ptr %len147 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %len147, align 4
  %75 = ptrtoint ptr %actual_length to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %actual_length, align 4
  %add148 = add i32 %76, %74
  store i32 %add148, ptr %actual_length, align 4
  %77 = ptrtoint ptr %.pn281 to i32
  call void @__asan_load4_noabort(i32 %77)
  %.pn = load ptr, ptr %.pn281, align 4
  %cmp34.not = icmp eq ptr %.pn, %msg
  br i1 %cmp34.not, label %if.end146.out_crit_edge, label %if.end146.for.body_crit_edge

if.end146.for.body_crit_edge:                     ; preds = %if.end146
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

if.end146.out_crit_edge:                          ; preds = %if.end146
  call void @__sanitizer_cov_trace_pc() #23
  br label %out

out:                                              ; preds = %if.end146.out_crit_edge, %if.end128.out_crit_edge
  %keep_cs.0.off0.lcssa = phi i1 [ %keep_cs.0.off0280, %if.end128.out_crit_edge ], [ %keep_cs.1.off0, %if.end146.out_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.1)
  %cmp154.not = icmp ne i32 %ret.1, 0
  %keep_cs.0.off0.not = xor i1 %keep_cs.0.off0.lcssa, true
  %brmerge = select i1 %cmp154.not, i1 true, i1 %keep_cs.0.off0.not
  br i1 %brmerge, label %out.if.then158_crit_edge, label %out.if.end160_crit_edge

out.if.end160_crit_edge:                          ; preds = %out
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end160

out.if.then158_crit_edge:                         ; preds = %out
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then158

if.then158:                                       ; preds = %out.if.then158_crit_edge, %out.thread, %entry.if.then158_crit_edge
  %ret.2269 = phi i32 [ %call41275.lcssa, %out.thread ], [ %ret.1, %out.if.then158_crit_edge ], [ 0, %entry.if.then158_crit_edge ]
  %78 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %spi, align 4
  tail call fastcc void @spi_set_cs(ptr noundef %79, i1 noundef zeroext false, i1 noundef zeroext false)
  br label %if.end160

if.end160:                                        ; preds = %if.then158, %out.if.end160_crit_edge
  %ret.2268 = phi i32 [ 0, %out.if.end160_crit_edge ], [ %ret.2269, %if.then158 ]
  %status161 = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 7
  %80 = ptrtoint ptr %status161 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %status161, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -115, i32 %81)
  %cmp162 = icmp eq i32 %81, -115
  br i1 %cmp162, label %if.then164, label %if.end160.if.end166_crit_edge

if.end160.if.end166_crit_edge:                    ; preds = %if.end160
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end166

if.then164:                                       ; preds = %if.end160
  call void @__sanitizer_cov_trace_pc() #23
  %82 = ptrtoint ptr %status161 to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 %ret.2268, ptr %status161, align 4
  br label %if.end166

if.end166:                                        ; preds = %if.then164, %if.end160.if.end166_crit_edge
  %83 = phi i32 [ %ret.2268, %if.then164 ], [ %81, %if.end160.if.end166_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %83)
  %tobool168.not = icmp eq i32 %83, 0
  br i1 %tobool168.not, label %if.end166.if.end173_crit_edge, label %land.lhs.true169

if.end166.if.end173_crit_edge:                    ; preds = %if.end166
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end173

land.lhs.true169:                                 ; preds = %if.end166
  %handle_err = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 52
  %84 = ptrtoint ptr %handle_err to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %handle_err, align 8
  %tobool170.not = icmp eq ptr %85, null
  br i1 %tobool170.not, label %land.lhs.true169.if.end173_crit_edge, label %if.then171

land.lhs.true169.if.end173_crit_edge:             ; preds = %land.lhs.true169
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end173

if.then171:                                       ; preds = %land.lhs.true169
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %85(ptr noundef %ctlr, ptr noundef %msg) #21
  br label %if.end173

if.end173:                                        ; preds = %if.then171, %land.lhs.true169.if.end173_crit_edge, %if.end166.if.end173_crit_edge
  tail call void @spi_finalize_current_message(ptr noundef %ctlr)
  ret i32 %ret.2268
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_spi_transfer_start(ptr noundef %msg, ptr noundef %xfer) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_transfer_start, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_spi_transfer_start, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !742

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !730

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !761
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_transfer_start, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %msg, ptr noundef %xfer) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !762
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !762
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !730

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !745
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_transfer_start, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_spi_transfer_start.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_spi_transfer_start.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.149, i32 noundef 226, ptr noundef nonnull @.str.150) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !746
  %38 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @spi_statistics_add_transfer_stats(ptr noundef %stats, ptr nocapture noundef readonly %xfer, ptr nocapture noundef readonly %ctlr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %len = getelementptr inbounds %struct.spi_transfer, ptr %xfer, i32 0, i32 2
  %0 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not.i = icmp eq i32 %1, 0
  %2 = tail call i32 @llvm.ctlz.i32(i32 %1, i1 true) #21, !range !747
  %sub.i = sub nuw nsw i32 32, %2
  %cond.i = select i1 %tobool.not.i, i32 0, i32 %sub.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %cond.i)
  %cmp.inv = icmp ugt i32 %cond.i, 16
  %3 = tail call i32 @llvm.smax.i32(i32 %cond.i, i32 1)
  %4 = add nsw i32 %3, -1
  %5 = select i1 %cmp.inv, i32 16, i32 %4
  %call6 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %stats) #21
  %transfers = getelementptr inbounds %struct.spi_statistics, ptr %stats, i32 0, i32 2
  %6 = ptrtoint ptr %transfers to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %transfers, align 8
  %inc = add i32 %7, 1
  store i32 %inc, ptr %transfers, align 8
  %arrayidx = getelementptr %struct.spi_statistics, ptr %stats, i32 0, i32 11, i32 %5
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx, align 4
  %inc9 = add i32 %9, 1
  store i32 %inc9, ptr %arrayidx, align 4
  %10 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %len, align 4
  %conv11 = zext i32 %11 to i64
  %bytes = getelementptr inbounds %struct.spi_statistics, ptr %stats, i32 0, i32 8
  %12 = ptrtoint ptr %bytes to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %bytes, align 8
  %add = add i64 %13, %conv11
  store i64 %add, ptr %bytes, align 8
  %14 = ptrtoint ptr %xfer to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %xfer, align 4
  %tobool.not = icmp eq ptr %15, null
  br i1 %tobool.not, label %entry.if.end19_crit_edge, label %land.lhs.true

entry.if.end19_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end19

land.lhs.true:                                    ; preds = %entry
  %dummy_tx = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 63
  %16 = ptrtoint ptr %dummy_tx to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %dummy_tx, align 4
  %cmp13.not = icmp eq ptr %15, %17
  br i1 %cmp13.not, label %land.lhs.true.if.end19_crit_edge, label %if.then15

land.lhs.true.if.end19_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end19

if.then15:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  %18 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %len, align 4
  %conv17 = zext i32 %19 to i64
  %bytes_tx = getelementptr inbounds %struct.spi_statistics, ptr %stats, i32 0, i32 10
  %20 = ptrtoint ptr %bytes_tx to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %bytes_tx, align 8
  %add18 = add i64 %21, %conv17
  store i64 %add18, ptr %bytes_tx, align 8
  br label %if.end19

if.end19:                                         ; preds = %if.then15, %land.lhs.true.if.end19_crit_edge, %entry.if.end19_crit_edge
  %rx_buf = getelementptr inbounds %struct.spi_transfer, ptr %xfer, i32 0, i32 1
  %22 = ptrtoint ptr %rx_buf to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %rx_buf, align 4
  %tobool20.not = icmp eq ptr %23, null
  br i1 %tobool20.not, label %if.end19.if.end29_crit_edge, label %land.lhs.true21

if.end19.if.end29_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29

land.lhs.true21:                                  ; preds = %if.end19
  %dummy_rx = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 62
  %24 = ptrtoint ptr %dummy_rx to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %dummy_rx, align 8
  %cmp23.not = icmp eq ptr %23, %25
  br i1 %cmp23.not, label %land.lhs.true21.if.end29_crit_edge, label %if.then25

land.lhs.true21.if.end29_crit_edge:               ; preds = %land.lhs.true21
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29

if.then25:                                        ; preds = %land.lhs.true21
  call void @__sanitizer_cov_trace_pc() #23
  %26 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %len, align 4
  %conv27 = zext i32 %27 to i64
  %bytes_rx = getelementptr inbounds %struct.spi_statistics, ptr %stats, i32 0, i32 9
  %28 = ptrtoint ptr %bytes_rx to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %bytes_rx, align 8
  %add28 = add i64 %29, %conv27
  store i64 %add28, ptr %bytes_rx, align 8
  br label %if.end29

if.end29:                                         ; preds = %if.then25, %land.lhs.true21.if.end29_crit_edge, %if.end19.if.end29_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %stats, i32 noundef %call6) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @spi_transfer_wait(ptr noundef %ctlr, ptr nocapture noundef readonly %msg, ptr nocapture noundef readonly %xfer) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %statistics = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 59
  %spi = getelementptr inbounds %struct.spi_message, ptr %msg, i32 0, i32 1
  %0 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %spi, align 4
  %statistics1 = getelementptr inbounds %struct.spi_device, ptr %1, i32 0, i32 19
  %slave.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 12
  %2 = ptrtoint ptr %slave.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %slave.i, align 1, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.i.not = icmp eq i8 %3, 0
  br i1 %tobool.i.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %xfer_completion = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 42
  %call3 = tail call i32 @wait_for_completion_interruptible(ptr noundef %xfer_completion) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %if.then.cleanup_crit_edge, label %do.body

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

do.body:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr (i8, ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @spi_transfer_wait.__UNIQUE_ID_ddebug361, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), i32 1), ptr blockaddress(@spi_transfer_wait, %cleanup)) #21
          to label %if.then10 [label %cleanup], !srcloc !742

if.then10:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  %4 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %spi, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @spi_transfer_wait.__UNIQUE_ID_ddebug361, ptr noundef %5, ptr noundef nonnull @.str.192) #21
  br label %cleanup

if.else:                                          ; preds = %entry
  %speed_hz2 = getelementptr inbounds %struct.spi_transfer, ptr %xfer, i32 0, i32 12
  %6 = ptrtoint ptr %speed_hz2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %speed_hz2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool13.not = icmp eq i32 %7, 0
  %spec.store.select = select i1 %tobool13.not, i32 100000, i32 %7
  %len = getelementptr inbounds %struct.spi_transfer, ptr %xfer, i32 0, i32 2
  %8 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %len, align 4
  %conv = zext i32 %9 to i64
  %mul = mul nuw nsw i64 %conv, 8000
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %mul)
  %cmp188 = icmp ult i64 %mul, 4294967296
  br i1 %cmp188, label %if.then196, label %if.else202, !prof !730

if.then196:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  %conv197 = trunc i64 %mul to i32
  %div200 = udiv i32 %conv197, %spec.store.select
  %conv201 = zext i32 %div200 to i64
  br label %if.end206

if.else202:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  %10 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %spec.store.select, i64 %mul) #30, !srcloc !763
  %asmresult1.i = extractvalue { i64, i64 } %10, 1
  br label %if.end206

if.end206:                                        ; preds = %if.else202, %if.then196
  %ms.0 = phi i64 [ %conv201, %if.then196 ], [ %asmresult1.i, %if.else202 ]
  %xfer_completion214 = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 42
  %reass.add = shl i64 %ms.0, 1
  %add209 = add i64 %reass.add, 200
  %11 = tail call i64 @llvm.umin.i64(i64 %add209, i64 4294967295)
  %conv215 = trunc i64 %11 to i32
  %call2.i = tail call i32 @__msecs_to_jiffies(i32 noundef %conv215) #21
  %call217 = tail call i32 @wait_for_completion_timeout(ptr noundef %xfer_completion214, i32 noundef %call2.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call217)
  %cmp219 = icmp eq i32 %call217, 0
  br i1 %cmp219, label %do.body222, label %if.end206.cleanup_crit_edge

if.end206.cleanup_crit_edge:                      ; preds = %if.end206
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

do.body222:                                       ; preds = %if.end206
  call void @__sanitizer_cov_trace_pc() #23
  %call229 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics) #21
  %timedout = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 59, i32 4
  %12 = ptrtoint ptr %timedout to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %timedout, align 8
  %add234 = add i32 %13, 1
  store i32 %add234, ptr %timedout, align 8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics, i32 noundef %call229) #21
  %call249 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %statistics1) #21
  %timedout254 = getelementptr inbounds %struct.spi_device, ptr %1, i32 0, i32 19, i32 4
  %14 = ptrtoint ptr %timedout254 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %timedout254, align 8
  %add255 = add i32 %15, 1
  store i32 %add255, ptr %timedout254, align 8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %statistics1, i32 noundef %call249) #21
  %16 = ptrtoint ptr %spi to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %spi, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %17, ptr noundef nonnull @.str.193) #26
  br label %cleanup

cleanup:                                          ; preds = %do.body222, %if.end206.cleanup_crit_edge, %if.then10, %do.body, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ -110, %do.body222 ], [ -4, %if.then10 ], [ 0, %if.end206.cleanup_crit_edge ], [ 0, %if.then.cleanup_crit_edge ], [ -4, %do.body ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_spi_transfer_stop(ptr noundef %msg, ptr noundef %xfer) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_transfer_stop, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_spi_transfer_stop, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !742

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !730

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !764
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_transfer_stop, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %msg, ptr noundef %xfer) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !765
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !765
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !730

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !745
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_transfer_stop, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_spi_transfer_stop.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_spi_transfer_stop.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.149, i32 noundef 234, ptr noundef nonnull @.str.150) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !746
  %38 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #14

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wait_for_completion_interruptible(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wait_for_completion_timeout(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__msecs_to_jiffies(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kthread_create_worker(i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @spi_pump_messages(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -1332
  tail call fastcc void @__spi_pump_messages(ptr noundef %add.ptr, i1 noundef zeroext true)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_get_next_available_child(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @of_register_spi_device(ptr noundef %ctlr, ptr noundef %nc) unnamed_addr #0 align 64 {
entry:
  %value.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @spi_alloc_device(ptr noundef %ctlr)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %err_out, label %if.end

if.end:                                           ; preds = %entry
  %modalias = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 11
  %call1 = tail call i32 @of_modalias_node(ptr noundef %nc, ptr noundef %modalias, i32 noundef 32) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %cmp = icmp slt i32 %call1, 0
  br i1 %cmp, label %do.end5, label %if.end7

do.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %ctlr, ptr noundef nonnull @.str.203, ptr noundef %nc) #26
  br label %if.then.i51

if.end7:                                          ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %value.i) #21
  %0 = ptrtoint ptr %value.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %value.i, align 4, !annotation !732
  %call.i.i = tail call ptr @of_find_property(ptr noundef %nc, ptr noundef nonnull @.str.208, ptr noundef null) #21
  %tobool.i.not.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.i.not.i, label %if.end7.if.end.i_crit_edge, label %if.then.i

if.end7.if.end.i_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

if.then.i:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  %mode.i = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 7
  %1 = ptrtoint ptr %mode.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %mode.i, align 8
  %or.i = or i32 %2, 1
  store i32 %or.i, ptr %mode.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end7.if.end.i_crit_edge
  %call.i111.i = tail call ptr @of_find_property(ptr noundef %nc, ptr noundef nonnull @.str.209, ptr noundef null) #21
  %tobool.i112.not.i = icmp eq ptr %call.i111.i, null
  br i1 %tobool.i112.not.i, label %if.end.i.if.end5.i_crit_edge, label %if.then2.i

if.end.i.if.end5.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end5.i

if.then2.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %mode3.i = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 7
  %3 = ptrtoint ptr %mode3.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %mode3.i, align 8
  %or4.i = or i32 %4, 2
  store i32 %or4.i, ptr %mode3.i, align 8
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then2.i, %if.end.i.if.end5.i_crit_edge
  %call.i113.i = tail call ptr @of_find_property(ptr noundef %nc, ptr noundef nonnull @.str.210, ptr noundef null) #21
  %tobool.i114.not.i = icmp eq ptr %call.i113.i, null
  br i1 %tobool.i114.not.i, label %if.end5.i.if.end10.i_crit_edge, label %if.then7.i

if.end5.i.if.end10.i_crit_edge:                   ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end10.i

if.then7.i:                                       ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #23
  %mode8.i = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 7
  %5 = ptrtoint ptr %mode8.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %mode8.i, align 8
  %or9.i = or i32 %6, 16
  store i32 %or9.i, ptr %mode8.i, align 8
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.then7.i, %if.end5.i.if.end10.i_crit_edge
  %call.i115.i = tail call ptr @of_find_property(ptr noundef %nc, ptr noundef nonnull @.str.211, ptr noundef null) #21
  %tobool.i116.not.i = icmp eq ptr %call.i115.i, null
  br i1 %tobool.i116.not.i, label %if.end10.i.if.end15.i_crit_edge, label %if.then12.i

if.end10.i.if.end15.i_crit_edge:                  ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end15.i

if.then12.i:                                      ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #23
  %mode13.i = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 7
  %7 = ptrtoint ptr %mode13.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %mode13.i, align 8
  %or14.i = or i32 %8, 8
  store i32 %or14.i, ptr %mode13.i, align 8
  br label %if.end15.i

if.end15.i:                                       ; preds = %if.then12.i, %if.end10.i.if.end15.i_crit_edge
  %call.i117.i = tail call ptr @of_find_property(ptr noundef %nc, ptr noundef nonnull @.str.212, ptr noundef null) #21
  %tobool.i118.not.i = icmp eq ptr %call.i117.i, null
  br i1 %tobool.i118.not.i, label %if.end15.i.if.end20.i_crit_edge, label %if.then17.i

if.end15.i.if.end20.i_crit_edge:                  ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end20.i

if.then17.i:                                      ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #23
  %mode18.i = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 7
  %9 = ptrtoint ptr %mode18.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %mode18.i, align 8
  %or19.i = or i32 %10, 4
  store i32 %or19.i, ptr %mode18.i, align 8
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then17.i, %if.end15.i.if.end20.i_crit_edge
  %call.i.i.i = call i32 @of_property_read_variable_u32_array(ptr noundef %nc, ptr noundef nonnull @.str.213, ptr noundef nonnull %value.i, i32 noundef 1, i32 noundef 0) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i.i.i)
  %tobool.not.i = icmp sgt i32 %call.i.i.i, -1
  br i1 %tobool.not.i, label %if.then22.i, label %if.end20.i.if.end34.i_crit_edge

if.end20.i.if.end34.i_crit_edge:                  ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end34.i

if.then22.i:                                      ; preds = %if.end20.i
  %11 = ptrtoint ptr %value.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %value.i, align 4
  %13 = zext i32 %12 to i64
  call void @__sanitizer_cov_trace_switch(i64 %13, ptr @__sancov_gen_cov_switch_values.249)
  switch i32 %12, label %do.end.i [
    i32 0, label %sw.bb.i
    i32 1, label %if.then22.i.if.end34.i_crit_edge
    i32 2, label %sw.bb25.i
    i32 4, label %sw.bb28.i
    i32 8, label %sw.bb31.i
  ]

if.then22.i.if.end34.i_crit_edge:                 ; preds = %if.then22.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end34.i

sw.bb.i:                                          ; preds = %if.then22.i
  call void @__sanitizer_cov_trace_pc() #23
  %mode23.i = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 7
  %14 = ptrtoint ptr %mode23.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %mode23.i, align 8
  %or24.i = or i32 %15, -2147483648
  store i32 %or24.i, ptr %mode23.i, align 8
  br label %if.end34.i

sw.bb25.i:                                        ; preds = %if.then22.i
  call void @__sanitizer_cov_trace_pc() #23
  %mode26.i = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 7
  %16 = ptrtoint ptr %mode26.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %mode26.i, align 8
  %or27.i = or i32 %17, 256
  store i32 %or27.i, ptr %mode26.i, align 8
  br label %if.end34.i

sw.bb28.i:                                        ; preds = %if.then22.i
  call void @__sanitizer_cov_trace_pc() #23
  %mode29.i = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 7
  %18 = ptrtoint ptr %mode29.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %mode29.i, align 8
  %or30.i = or i32 %19, 512
  store i32 %or30.i, ptr %mode29.i, align 8
  br label %if.end34.i

sw.bb31.i:                                        ; preds = %if.then22.i
  call void @__sanitizer_cov_trace_pc() #23
  %mode32.i = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 7
  %20 = ptrtoint ptr %mode32.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %mode32.i, align 8
  %or33.i = or i32 %21, 8192
  store i32 %or33.i, ptr %mode32.i, align 8
  br label %if.end34.i

do.end.i:                                         ; preds = %if.then22.i
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %ctlr, ptr noundef nonnull @.str.214, i32 noundef %12) #26
  br label %if.end34.i

if.end34.i:                                       ; preds = %do.end.i, %sw.bb31.i, %sw.bb28.i, %sw.bb25.i, %sw.bb.i, %if.then22.i.if.end34.i_crit_edge, %if.end20.i.if.end34.i_crit_edge
  %call.i.i119.i = call i32 @of_property_read_variable_u32_array(ptr noundef %nc, ptr noundef nonnull @.str.216, ptr noundef nonnull %value.i, i32 noundef 1, i32 noundef 0) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i.i119.i)
  %tobool36.not.i = icmp sgt i32 %call.i.i119.i, -1
  br i1 %tobool36.not.i, label %if.then37.i, label %if.end34.i.if.end56.i_crit_edge

if.end34.i.if.end56.i_crit_edge:                  ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end56.i

if.then37.i:                                      ; preds = %if.end34.i
  %22 = ptrtoint ptr %value.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %value.i, align 4
  %24 = zext i32 %23 to i64
  call void @__sanitizer_cov_trace_switch(i64 %24, ptr @__sancov_gen_cov_switch_values.250)
  switch i32 %23, label %do.end53.i [
    i32 0, label %sw.bb38.i
    i32 1, label %if.then37.i.if.end56.i_crit_edge
    i32 2, label %sw.bb41.i
    i32 4, label %sw.bb44.i
    i32 8, label %sw.bb47.i
  ]

if.then37.i.if.end56.i_crit_edge:                 ; preds = %if.then37.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end56.i

sw.bb38.i:                                        ; preds = %if.then37.i
  call void @__sanitizer_cov_trace_pc() #23
  %mode39.i = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 7
  %25 = ptrtoint ptr %mode39.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %mode39.i, align 8
  %or40.i = or i32 %26, 1073741824
  store i32 %or40.i, ptr %mode39.i, align 8
  br label %if.end56.i

sw.bb41.i:                                        ; preds = %if.then37.i
  call void @__sanitizer_cov_trace_pc() #23
  %mode42.i = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 7
  %27 = ptrtoint ptr %mode42.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %mode42.i, align 8
  %or43.i = or i32 %28, 1024
  store i32 %or43.i, ptr %mode42.i, align 8
  br label %if.end56.i

sw.bb44.i:                                        ; preds = %if.then37.i
  call void @__sanitizer_cov_trace_pc() #23
  %mode45.i = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 7
  %29 = ptrtoint ptr %mode45.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %mode45.i, align 8
  %or46.i = or i32 %30, 2048
  store i32 %or46.i, ptr %mode45.i, align 8
  br label %if.end56.i

sw.bb47.i:                                        ; preds = %if.then37.i
  call void @__sanitizer_cov_trace_pc() #23
  %mode48.i = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 7
  %31 = ptrtoint ptr %mode48.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %mode48.i, align 8
  %or49.i = or i32 %32, 16384
  store i32 %or49.i, ptr %mode48.i, align 8
  br label %if.end56.i

do.end53.i:                                       ; preds = %if.then37.i
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %ctlr, ptr noundef nonnull @.str.218, i32 noundef %23) #26
  br label %if.end56.i

if.end56.i:                                       ; preds = %do.end53.i, %sw.bb47.i, %sw.bb44.i, %sw.bb41.i, %sw.bb38.i, %if.then37.i.if.end56.i_crit_edge, %if.end34.i.if.end56.i_crit_edge
  %slave.i.i = getelementptr inbounds %struct.spi_controller, ptr %ctlr, i32 0, i32 12
  %33 = ptrtoint ptr %slave.i.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %slave.i.i, align 1, !range !736
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool.i120.not.i = icmp eq i8 %34, 0
  br i1 %tobool.i120.not.i, label %if.end66.i, label %if.then58.i

if.then58.i:                                      ; preds = %if.end56.i
  %call59.i = call zeroext i1 @of_node_name_eq(ptr noundef %nc, ptr noundef nonnull @.str.27) #21
  br i1 %call59.i, label %if.then58.i.if.end11_crit_edge, label %do.end63.i

if.then58.i.if.end11_crit_edge:                   ; preds = %if.then58.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end11

do.end63.i:                                       ; preds = %if.then58.i
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %ctlr, ptr noundef nonnull @.str.221, ptr noundef %nc) #26
  br label %of_spi_parse_dt.exit

if.end66.i:                                       ; preds = %if.end56.i
  %call.i.i121.i = call i32 @of_property_read_variable_u32_array(ptr noundef %nc, ptr noundef nonnull @.str.223, ptr noundef nonnull %value.i, i32 noundef 1, i32 noundef 0) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i.i121.i)
  %tobool68.not.i = icmp sgt i32 %call.i.i121.i, -1
  br i1 %tobool68.not.i, label %if.end74.i, label %do.end72.i

do.end72.i:                                       ; preds = %if.end66.i
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %ctlr, ptr noundef nonnull @.str.225, ptr noundef %nc, i32 noundef %call.i.i121.i) #26
  br label %of_spi_parse_dt.exit

if.end74.i:                                       ; preds = %if.end66.i
  %35 = ptrtoint ptr %value.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %value.i, align 4
  %conv.i = trunc i32 %36 to i8
  %chip_select.i = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 4
  %37 = ptrtoint ptr %chip_select.i to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 %conv.i, ptr %chip_select.i, align 4
  %call.i.i122.i = call i32 @of_property_read_variable_u32_array(ptr noundef %nc, ptr noundef nonnull @.str.227, ptr noundef nonnull %value.i, i32 noundef 1, i32 noundef 0) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i.i122.i)
  %tobool76.not.i = icmp sgt i32 %call.i.i122.i, -1
  br i1 %tobool76.not.i, label %if.then77.i, label %if.end74.i.if.end11_crit_edge

if.end74.i.if.end11_crit_edge:                    ; preds = %if.end74.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end11

if.then77.i:                                      ; preds = %if.end74.i
  call void @__sanitizer_cov_trace_pc() #23
  %38 = ptrtoint ptr %value.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %value.i, align 4
  %max_speed_hz.i = getelementptr inbounds %struct.spi_device, ptr %call, i32 0, i32 3
  %40 = ptrtoint ptr %max_speed_hz.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %max_speed_hz.i, align 8
  br label %if.end11

of_spi_parse_dt.exit:                             ; preds = %do.end72.i, %do.end63.i
  %retval.0.i = phi i32 [ -22, %do.end63.i ], [ %call.i.i121.i, %do.end72.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %value.i) #21
  br label %if.then.i51

if.end11:                                         ; preds = %if.then77.i, %if.end74.i.if.end11_crit_edge, %if.then58.i.if.end11_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %value.i) #21
  %call12 = call ptr @of_node_get(ptr noundef %nc) #21
  %of_node = getelementptr inbounds %struct.device, ptr %call, i32 0, i32 27
  %41 = ptrtoint ptr %of_node to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %nc, ptr %of_node, align 8
  %tobool14.not = icmp eq ptr %nc, null
  %fwnode = getelementptr inbounds %struct.device_node, ptr %nc, i32 0, i32 3
  %spec.select = select i1 %tobool14.not, ptr null, ptr %fwnode
  %fwnode16 = getelementptr inbounds %struct.device, ptr %call, i32 0, i32 28
  %42 = ptrtoint ptr %fwnode16 to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %spec.select, ptr %fwnode16, align 4
  %call17 = call fastcc i32 @spi_add_device(ptr noundef nonnull %call)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %if.end11.cleanup_crit_edge, label %do.end22

if.end11.cleanup_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

do.end22:                                         ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %ctlr, ptr noundef nonnull @.str.206, ptr noundef %nc) #26
  call void @of_node_put(ptr noundef %nc) #21
  br label %if.then.i51

err_out:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %ctlr, ptr noundef nonnull @.str.200, ptr noundef %nc) #26
  br label %spi_dev_put.exit

if.then.i51:                                      ; preds = %do.end22, %of_spi_parse_dt.exit, %do.end5
  %rc.0.ph = phi i32 [ %call17, %do.end22 ], [ %retval.0.i, %of_spi_parse_dt.exit ], [ %call1, %do.end5 ]
  call void @put_device(ptr noundef nonnull %call) #21
  br label %spi_dev_put.exit

spi_dev_put.exit:                                 ; preds = %if.then.i51, %err_out
  %rc.057 = phi i32 [ -12, %err_out ], [ %rc.0.ph, %if.then.i51 ]
  %43 = inttoptr i32 %rc.057 to ptr
  br label %cleanup

cleanup:                                          ; preds = %spi_dev_put.exit, %if.end11.cleanup_crit_edge
  %retval.0 = phi ptr [ %43, %spi_dev_put.exit ], [ %call, %if.end11.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_modalias_node(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_node_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @of_node_name_eq(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_find_property(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_property_read_variable_u32_array(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @devm_add_action(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kthread_destroy_worker(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__spi_replace_transfers_release(ptr noundef %ctlr, ptr noundef %msg, ptr noundef %res) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %res, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %1(ptr noundef %ctlr, ptr noundef %msg, ptr noundef %res) #21
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %replaced_transfers = getelementptr inbounds %struct.spi_replaced_transfers, ptr %res, i32 0, i32 2
  %replaced_after = getelementptr inbounds %struct.spi_replaced_transfers, ptr %res, i32 0, i32 3
  %2 = ptrtoint ptr %replaced_after to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %replaced_after, align 4
  %4 = ptrtoint ptr %replaced_transfers to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %replaced_transfers, align 4
  %cmp.i.not.i = icmp eq ptr %5, %replaced_transfers
  br i1 %cmp.i.not.i, label %if.end.list_splice.exit_crit_edge, label %if.then.i

if.end.list_splice.exit_crit_edge:                ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_splice.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %3, align 4
  %prev2.i.i = getelementptr inbounds %struct.spi_replaced_transfers, ptr %res, i32 0, i32 2, i32 1
  %8 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %prev2.i.i, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 1
  %10 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %3, ptr %prev3.i.i, align 4
  store ptr %5, ptr %3, align 4
  %11 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %7, ptr %9, align 4
  %prev6.i.i = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %12 = ptrtoint ptr %prev6.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %9, ptr %prev6.i.i, align 4
  br label %list_splice.exit

list_splice.exit:                                 ; preds = %if.then.i, %if.end.list_splice.exit_crit_edge
  %inserted = getelementptr inbounds %struct.spi_replaced_transfers, ptr %res, i32 0, i32 4
  %13 = ptrtoint ptr %inserted to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %inserted, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp10.not = icmp eq i32 %14, 0
  br i1 %cmp10.not, label %list_splice.exit.for.end_crit_edge, label %list_splice.exit.for.body_crit_edge

list_splice.exit.for.body_crit_edge:              ; preds = %list_splice.exit
  br label %for.body

list_splice.exit.for.end_crit_edge:               ; preds = %list_splice.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %list_del.exit.for.body_crit_edge, %list_splice.exit.for.body_crit_edge
  %i.011 = phi i32 [ %inc, %list_del.exit.for.body_crit_edge ], [ 0, %list_splice.exit.for.body_crit_edge ]
  %transfer_list = getelementptr %struct.spi_replaced_transfers, ptr %res, i32 0, i32 5, i32 %i.011, i32 18
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %transfer_list) #21
  br i1 %call.i.i, label %if.end.i.i, label %for.body.list_del.exit_crit_edge

for.body.list_del.exit_crit_edge:                 ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_del.exit

if.end.i.i:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i = getelementptr %struct.spi_replaced_transfers, ptr %res, i32 0, i32 5, i32 %i.011, i32 18, i32 1
  %15 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %prev.i.i, align 4
  %17 = ptrtoint ptr %transfer_list to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %transfer_list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %16, ptr %prev1.i.i.i, align 4
  %20 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %18, ptr %16, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %for.body.list_del.exit_crit_edge
  %21 = ptrtoint ptr %transfer_list to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr inttoptr (i32 256 to ptr), ptr %transfer_list, align 4
  %prev.i = getelementptr %struct.spi_replaced_transfers, ptr %res, i32 0, i32 5, i32 %i.011, i32 18, i32 1
  %22 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %inc = add nuw i32 %i.011, 1
  %23 = ptrtoint ptr %inserted to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %inserted, align 4
  %cmp = icmp ult i32 %inc, %24
  br i1 %cmp, label %list_del.exit.for.body_crit_edge, label %list_del.exit.for.end_crit_edge

list_del.exit.for.end_crit_edge:                  ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

list_del.exit.for.body_crit_edge:                 ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %list_del.exit.for.end_crit_edge, %list_splice.exit.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sw_hweight32(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_resume(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #18

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_spi_set_cs(ptr noundef %spi, i1 noundef zeroext %enable) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_set_cs, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_spi_set_cs, %do.body)) #21
          to label %if.end49 [label %do.body], !srcloc !742

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !730

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i76 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i76
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end70_crit_edge, label %if.end31

cpu_online.exit.if.end70_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end70

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !766
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_set_cs, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end49.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %spi, i1 noundef zeroext %enable) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool10.not.i = icmp eq ptr %19, null
  br i1 %tobool10.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !767
  br label %if.end49.sink.split

if.end49.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !767
  br label %if.end49.sink.split

if.end49.sink.split:                              ; preds = %if.end49.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i74.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i74.c to ptr
  %preempt_count.i.i75.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i75.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i75.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i75.c, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.end49.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i77 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i77 to ptr
  %cpu51 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu51 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu51, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i78 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i78, label %if.end49.cpu_online.exit86_crit_edge, label %land.rhs.i.i.i.i80

if.end49.cpu_online.exit86_crit_edge:             ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit86

land.rhs.i.i.i.i80:                               ; preds = %if.end49
  %.b37.i.i.i.i79 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i79, label %land.rhs.i.i.i.i80.cpu_online.exit86_crit_edge, label %if.then.i.i.i.i81, !prof !730

land.rhs.i.i.i.i80.cpu_online.exit86_crit_edge:   ; preds = %land.rhs.i.i.i.i80
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit86

if.then.i.i.i.i81:                                ; preds = %land.rhs.i.i.i.i80
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit86

cpu_online.exit86:                                ; preds = %if.then.i.i.i.i81, %land.rhs.i.i.i.i80.cpu_online.exit86_crit_edge, %if.end49.cpu_online.exit86_crit_edge
  %div3.i.i.i82 = lshr i32 %27, 5
  %arrayidx.i.i.i83 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i82
  %29 = ptrtoint ptr %arrayidx.i.i.i83 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i83, align 4
  %and.i.i.i84 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i84
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i85.not = icmp eq i32 %32, 0
  br i1 %tobool.i85.not, label %cpu_online.exit86.if.end70_crit_edge, label %if.then53

cpu_online.exit86.if.end70_crit_edge:             ; preds = %cpu_online.exit86
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end70

if.then53:                                        ; preds = %cpu_online.exit86
  %33 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !745
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_set_cs, i32 0, i32 7), align 4
  %call59 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call59)
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %land.lhs.true, label %if.then53.do.end68_crit_edge

if.then53.do.end68_crit_edge:                     ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end68

land.lhs.true:                                    ; preds = %if.then53
  %call61 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call61)
  %tobool62.not = icmp eq i32 %call61, 0
  br i1 %tobool62.not, label %land.lhs.true.do.end68_crit_edge, label %land.lhs.true63

land.lhs.true.do.end68_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end68

land.lhs.true63:                                  ; preds = %land.lhs.true
  %.b73 = load i1, ptr @trace_spi_set_cs.__warned, align 1
  br i1 %.b73, label %land.lhs.true63.do.end68_crit_edge, label %if.then65

land.lhs.true63.do.end68_crit_edge:               ; preds = %land.lhs.true63
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end68

if.then65:                                        ; preds = %land.lhs.true63
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_spi_set_cs.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.149, i32 noundef 100, ptr noundef nonnull @.str.150) #21
  br label %do.end68

do.end68:                                         ; preds = %if.then65, %land.lhs.true63.do.end68_crit_edge, %land.lhs.true.do.end68_crit_edge, %if.then53.do.end68_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !746
  %38 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i.i87 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i87 to ptr
  %preempt_count.i.i.i88 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i88 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i88, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i88, align 4
  br label %if.end70

if.end70:                                         ; preds = %do.end68, %cpu_online.exit86.if.end70_crit_edge, %cpu_online.exit.if.end70_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @gpiod_set_value_cansleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @gpiod_set_raw_value_cansleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @gpio_to_desc(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get_mono_fast_ns() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_suspend(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @sched_set_fifo(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_spi_message_submit(ptr noundef %msg) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_message_submit, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_spi_message_submit, %do.body)) #21
          to label %if.end48 [label %do.body], !srcloc !742

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !730

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !768
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_message_submit, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %msg) #21
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !769
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !769
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !730

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.151, i32 noundef 108, i32 noundef 9, ptr noundef null) #21
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !745
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_spi_message_submit, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_spi_message_submit.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @trace_spi_message_submit.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.149, i32 noundef 131, ptr noundef nonnull @.str.150) #21
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #21, !srcloc !746
  %38 = tail call i32 @llvm.read_register.i32(metadata !720) #21
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @spi_complete(ptr noundef %arg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @complete(ptr noundef %arg) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @wait_for_completion(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #19

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bus_register(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__class_register(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_reconfig_notifier_register(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @class_unregister(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bus_unregister(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @of_spi_notify(ptr nocapture noundef readnone %nb, i32 noundef %action, ptr noundef %arg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @of_reconfig_get_state_change(i32 noundef %action, ptr noundef %arg) #21
  %0 = zext i32 %call to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.251)
  switch i32 %call, label %entry.cleanup_crit_edge [
    i32 1, label %sw.bb
    i32 2, label %sw.bb17
  ]

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

sw.bb:                                            ; preds = %entry
  %1 = ptrtoint ptr %arg to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %arg, align 4
  %parent = getelementptr inbounds %struct.device_node, ptr %2, i32 0, i32 6
  %3 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %parent, align 4
  %call.i.i = tail call ptr @class_find_device(ptr noundef nonnull @spi_master_class, ptr noundef null, ptr noundef %4, ptr noundef nonnull @device_match_of_node) #21
  %tobool.not.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i, label %of_find_spi_controller_by_node.exit, label %sw.bb.if.end_crit_edge

sw.bb.if.end_crit_edge:                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

of_find_spi_controller_by_node.exit:              ; preds = %sw.bb
  %call.i8.i = tail call ptr @class_find_device(ptr noundef nonnull @spi_slave_class, ptr noundef null, ptr noundef %4, ptr noundef nonnull @device_match_of_node) #21
  %cmp = icmp eq ptr %call.i8.i, null
  br i1 %cmp, label %of_find_spi_controller_by_node.exit.cleanup_crit_edge, label %of_find_spi_controller_by_node.exit.if.end_crit_edge

of_find_spi_controller_by_node.exit.if.end_crit_edge: ; preds = %of_find_spi_controller_by_node.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

of_find_spi_controller_by_node.exit.cleanup_crit_edge: ; preds = %of_find_spi_controller_by_node.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %of_find_spi_controller_by_node.exit.if.end_crit_edge, %sw.bb.if.end_crit_edge
  %dev.0.i52 = phi ptr [ %call.i8.i, %of_find_spi_controller_by_node.exit.if.end_crit_edge ], [ %call.i.i, %sw.bb.if.end_crit_edge ]
  %5 = ptrtoint ptr %arg to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arg, align 4
  %_flags.i = getelementptr inbounds %struct.device_node, ptr %6, i32 0, i32 10
  %call.i = tail call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %_flags.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @put_device(ptr noundef nonnull %dev.0.i52) #21
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %7 = ptrtoint ptr %arg to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arg, align 4
  %call7 = tail call fastcc ptr @of_register_spi_device(ptr noundef nonnull %dev.0.i52, ptr noundef %8)
  tail call void @put_device(ptr noundef nonnull %dev.0.i52) #21
  %cmp.i = icmp ugt ptr %call7, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %do.end, label %if.end5.cleanup_crit_edge

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

do.end:                                           ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #23
  %9 = ptrtoint ptr %arg to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arg, align 4
  %call12 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.237, ptr noundef nonnull @.str.238, ptr noundef %10) #26
  %11 = ptrtoint ptr %arg to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arg, align 4
  %_flags.i45 = getelementptr inbounds %struct.device_node, ptr %12, i32 0, i32 10
  tail call void @_clear_bit(i32 noundef 3, ptr noundef %_flags.i45) #21
  %13 = ptrtoint ptr %call7 to i32
  %sub.i = sub i32 1, %13
  %or.i = or i32 %sub.i, 32768
  br label %cleanup

sw.bb17:                                          ; preds = %entry
  %14 = ptrtoint ptr %arg to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arg, align 4
  %_flags.i47 = getelementptr inbounds %struct.device_node, ptr %15, i32 0, i32 10
  %16 = ptrtoint ptr %_flags.i47 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %_flags.i47, align 4
  %18 = and i32 %17, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool20.not = icmp eq i32 %18, 0
  br i1 %tobool20.not, label %sw.bb17.cleanup_crit_edge, label %if.end22

sw.bb17.cleanup_crit_edge:                        ; preds = %sw.bb17
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end22:                                         ; preds = %sw.bb17
  %call.i.i48 = tail call ptr @bus_find_device(ptr noundef nonnull @spi_bus_type, ptr noundef null, ptr noundef %15, ptr noundef nonnull @device_match_of_node) #21
  %cmp25 = icmp eq ptr %call.i.i48, null
  br i1 %cmp25, label %if.end22.cleanup_crit_edge, label %if.end.i

if.end22.cleanup_crit_edge:                       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i:                                         ; preds = %if.end22
  %of_node.i = getelementptr inbounds %struct.device, ptr %call.i.i48, i32 0, i32 27
  %19 = ptrtoint ptr %of_node.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %of_node.i, align 8
  %tobool1.not.i = icmp eq ptr %20, null
  br i1 %tobool1.not.i, label %if.end.i.if.end9.i_crit_edge, label %if.then2.i

if.end.i.if.end9.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9.i

if.then2.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %_flags.i.i = getelementptr inbounds %struct.device_node, ptr %20, i32 0, i32 10
  tail call void @_clear_bit(i32 noundef 3, ptr noundef %_flags.i.i) #21
  %21 = ptrtoint ptr %of_node.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %of_node.i, align 8
  tail call void @of_node_put(ptr noundef %22) #21
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.then2.i, %if.end.i.if.end9.i_crit_edge
  tail call void @device_remove_software_node(ptr noundef nonnull %call.i.i48) #21
  tail call void @device_del(ptr noundef nonnull %call.i.i48) #21
  %controller.i.i = getelementptr inbounds %struct.spi_device, ptr %call.i.i48, i32 0, i32 1
  %23 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %controller.i.i, align 8
  %cleanup.i.i = getelementptr inbounds %struct.spi_controller, ptr %24, i32 0, i32 23
  %25 = ptrtoint ptr %cleanup.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %cleanup.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %26, null
  br i1 %tobool.not.i.i, label %if.end9.i.spi_unregister_device.exit_crit_edge, label %if.then.i.i

if.end9.i.spi_unregister_device.exit_crit_edge:   ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %spi_unregister_device.exit

if.then.i.i:                                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %26(ptr noundef nonnull %call.i.i48) #21
  br label %spi_unregister_device.exit

spi_unregister_device.exit:                       ; preds = %if.then.i.i, %if.end9.i.spi_unregister_device.exit_crit_edge
  tail call void @put_device(ptr noundef nonnull %call.i.i48) #21
  tail call void @put_device(ptr noundef nonnull %call.i.i48) #21
  br label %cleanup

cleanup:                                          ; preds = %spi_unregister_device.exit, %if.end22.cleanup_crit_edge, %sw.bb17.cleanup_crit_edge, %do.end, %if.end5.cleanup_crit_edge, %if.then4, %of_find_spi_controller_by_node.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 1, %if.then4 ], [ %or.i, %do.end ], [ 1, %of_find_spi_controller_by_node.exit.cleanup_crit_edge ], [ 1, %sw.bb17.cleanup_crit_edge ], [ 1, %if.end22.cleanup_crit_edge ], [ 1, %if.end5.cleanup_crit_edge ], [ 1, %entry.cleanup_crit_edge ], [ 1, %spi_unregister_device.exit ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_reconfig_get_state_change(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @class_find_device(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @device_match_of_node(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bus_find_device(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #20

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #14

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umin.i64(i64, i64) #14

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #14

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #14

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #21

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #22 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 348)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #22 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 348)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { nounwind readonly }
attributes #11 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #12 = { nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #15 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { null_pointer_is_valid allocsize(1) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #18 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #19 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { argmemonly nofree nounwind readonly willreturn }
attributes #21 = { nounwind }
attributes #22 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #23 = { nomerge }
attributes #24 = { nobuiltin nounwind }
attributes #25 = { nobuiltin }
attributes #26 = { cold nounwind }
attributes #27 = { nounwind allocsize(2) }
attributes #28 = { nounwind allocsize(0) }
attributes #29 = { nounwind allocsize(1) }
attributes #30 = { nounwind readnone }

!llvm.asan.globals = !{}
!llvm.named.register.sp = !{!720}
!llvm.module.flags = !{!721, !722, !723, !724, !725, !726, !727, !728}
!llvm.ident = !{!729}

!0 = !{ptr @__tracepoint_spi_controller_idle, !1, !"__tracepoint_spi_controller_idle", i1 false, i1 false}
!1 = !{!"../include/trace/events/spi.h", i32 29, i32 1}
!2 = !{ptr @__tracepoint_ptr_spi_controller_idle, !1, !"__tracepoint_ptr_spi_controller_idle", i1 false, i1 false}
!3 = !{ptr @__SCK__tp_func_spi_controller_idle, !1, !"__SCK__tp_func_spi_controller_idle", i1 false, i1 false}
!4 = !{ptr @__tracepoint_spi_controller_busy, !5, !"__tracepoint_spi_controller_busy", i1 false, i1 false}
!5 = !{!"../include/trace/events/spi.h", i32 37, i32 1}
!6 = !{ptr @__tracepoint_ptr_spi_controller_busy, !5, !"__tracepoint_ptr_spi_controller_busy", i1 false, i1 false}
!7 = !{ptr @__SCK__tp_func_spi_controller_busy, !5, !"__SCK__tp_func_spi_controller_busy", i1 false, i1 false}
!8 = !{ptr @__tracepoint_spi_setup, !9, !"__tracepoint_spi_setup", i1 false, i1 false}
!9 = !{!"../include/trace/events/spi.h", i32 45, i32 1}
!10 = !{ptr @__tracepoint_ptr_spi_setup, !9, !"__tracepoint_ptr_spi_setup", i1 false, i1 false}
!11 = !{ptr @__SCK__tp_func_spi_setup, !9, !"__SCK__tp_func_spi_setup", i1 false, i1 false}
!12 = !{ptr @__tracepoint_spi_set_cs, !13, !"__tracepoint_spi_set_cs", i1 false, i1 false}
!13 = !{!"../include/trace/events/spi.h", i32 78, i32 1}
!14 = !{ptr @__tracepoint_ptr_spi_set_cs, !13, !"__tracepoint_ptr_spi_set_cs", i1 false, i1 false}
!15 = !{ptr @__SCK__tp_func_spi_set_cs, !13, !"__SCK__tp_func_spi_set_cs", i1 false, i1 false}
!16 = !{ptr @__tracepoint_spi_message_submit, !17, !"__tracepoint_spi_message_submit", i1 false, i1 false}
!17 = !{!"../include/trace/events/spi.h", i32 125, i32 1}
!18 = !{ptr @__tracepoint_ptr_spi_message_submit, !17, !"__tracepoint_ptr_spi_message_submit", i1 false, i1 false}
!19 = !{ptr @__SCK__tp_func_spi_message_submit, !17, !"__SCK__tp_func_spi_message_submit", i1 false, i1 false}
!20 = !{ptr @__tracepoint_spi_message_start, !21, !"__tracepoint_spi_message_start", i1 false, i1 false}
!21 = !{!"../include/trace/events/spi.h", i32 133, i32 1}
!22 = !{ptr @__tracepoint_ptr_spi_message_start, !21, !"__tracepoint_ptr_spi_message_start", i1 false, i1 false}
!23 = !{ptr @__SCK__tp_func_spi_message_start, !21, !"__SCK__tp_func_spi_message_start", i1 false, i1 false}
!24 = !{ptr @__tracepoint_spi_message_done, !25, !"__tracepoint_spi_message_done", i1 false, i1 false}
!25 = !{!"../include/trace/events/spi.h", i32 141, i32 1}
!26 = !{ptr @__tracepoint_ptr_spi_message_done, !25, !"__tracepoint_ptr_spi_message_done", i1 false, i1 false}
!27 = !{ptr @__SCK__tp_func_spi_message_done, !25, !"__SCK__tp_func_spi_message_done", i1 false, i1 false}
!28 = !{ptr @__tracepoint_spi_transfer_start, !29, !"__tracepoint_spi_transfer_start", i1 false, i1 false}
!29 = !{!"../include/trace/events/spi.h", i32 220, i32 1}
!30 = !{ptr @__tracepoint_ptr_spi_transfer_start, !29, !"__tracepoint_ptr_spi_transfer_start", i1 false, i1 false}
!31 = !{ptr @__SCK__tp_func_spi_transfer_start, !29, !"__SCK__tp_func_spi_transfer_start", i1 false, i1 false}
!32 = !{ptr @__tracepoint_spi_transfer_stop, !33, !"__tracepoint_spi_transfer_stop", i1 false, i1 false}
!33 = !{!"../include/trace/events/spi.h", i32 228, i32 1}
!34 = !{ptr @__tracepoint_ptr_spi_transfer_stop, !33, !"__tracepoint_ptr_spi_transfer_stop", i1 false, i1 false}
!35 = !{ptr @__SCK__tp_func_spi_transfer_stop, !33, !"__SCK__tp_func_spi_transfer_stop", i1 false, i1 false}
!36 = !{ptr @event_class_spi_controller, !37, !"event_class_spi_controller", i1 false, i1 false}
!37 = !{!"../include/trace/events/spi.h", i32 11, i32 1}
!38 = !{ptr @event_spi_controller_idle, !1, !"event_spi_controller_idle", i1 false, i1 false}
!39 = !{ptr @__event_spi_controller_idle, !1, !"__event_spi_controller_idle", i1 false, i1 false}
!40 = !{ptr @event_spi_controller_busy, !5, !"event_spi_controller_busy", i1 false, i1 false}
!41 = !{ptr @__event_spi_controller_busy, !5, !"__event_spi_controller_busy", i1 false, i1 false}
!42 = !{ptr @event_class_spi_setup, !9, !"event_class_spi_setup", i1 false, i1 false}
!43 = !{ptr @event_spi_setup, !9, !"event_spi_setup", i1 false, i1 false}
!44 = !{ptr @__event_spi_setup, !9, !"__event_spi_setup", i1 false, i1 false}
!45 = !{ptr @event_class_spi_set_cs, !13, !"event_class_spi_set_cs", i1 false, i1 false}
!46 = !{ptr @event_spi_set_cs, !13, !"event_spi_set_cs", i1 false, i1 false}
!47 = !{ptr @__event_spi_set_cs, !13, !"__event_spi_set_cs", i1 false, i1 false}
!48 = !{ptr @event_class_spi_message, !49, !"event_class_spi_message", i1 false, i1 false}
!49 = !{!"../include/trace/events/spi.h", i32 102, i32 1}
!50 = !{ptr @event_spi_message_submit, !17, !"event_spi_message_submit", i1 false, i1 false}
!51 = !{ptr @__event_spi_message_submit, !17, !"__event_spi_message_submit", i1 false, i1 false}
!52 = !{ptr @event_spi_message_start, !21, !"event_spi_message_start", i1 false, i1 false}
!53 = !{ptr @__event_spi_message_start, !21, !"__event_spi_message_start", i1 false, i1 false}
!54 = !{ptr @event_class_spi_message_done, !25, !"event_class_spi_message_done", i1 false, i1 false}
!55 = !{ptr @event_spi_message_done, !25, !"event_spi_message_done", i1 false, i1 false}
!56 = !{ptr @__event_spi_message_done, !25, !"__event_spi_message_done", i1 false, i1 false}
!57 = !{ptr @event_class_spi_transfer, !58, !"event_class_spi_transfer", i1 false, i1 false}
!58 = !{!"../include/trace/events/spi.h", i32 179, i32 1}
!59 = !{ptr @event_spi_transfer_start, !29, !"event_spi_transfer_start", i1 false, i1 false}
!60 = !{ptr @__event_spi_transfer_start, !29, !"__event_spi_transfer_start", i1 false, i1 false}
!61 = !{ptr @event_spi_transfer_stop, !33, !"event_spi_transfer_stop", i1 false, i1 false}
!62 = !{ptr @__event_spi_transfer_stop, !33, !"__event_spi_transfer_stop", i1 false, i1 false}
!63 = !{ptr @__bpf_trace_tp_map_spi_controller_idle, !1, !"__bpf_trace_tp_map_spi_controller_idle", i1 false, i1 false}
!64 = !{ptr @__bpf_trace_tp_map_spi_controller_busy, !5, !"__bpf_trace_tp_map_spi_controller_busy", i1 false, i1 false}
!65 = !{ptr @__bpf_trace_tp_map_spi_setup, !9, !"__bpf_trace_tp_map_spi_setup", i1 false, i1 false}
!66 = !{ptr @__bpf_trace_tp_map_spi_set_cs, !13, !"__bpf_trace_tp_map_spi_set_cs", i1 false, i1 false}
!67 = !{ptr @__bpf_trace_tp_map_spi_message_submit, !17, !"__bpf_trace_tp_map_spi_message_submit", i1 false, i1 false}
!68 = !{ptr @__bpf_trace_tp_map_spi_message_start, !21, !"__bpf_trace_tp_map_spi_message_start", i1 false, i1 false}
!69 = !{ptr @__bpf_trace_tp_map_spi_message_done, !25, !"__bpf_trace_tp_map_spi_message_done", i1 false, i1 false}
!70 = !{ptr @__bpf_trace_tp_map_spi_transfer_start, !29, !"__bpf_trace_tp_map_spi_transfer_start", i1 false, i1 false}
!71 = !{ptr @__bpf_trace_tp_map_spi_transfer_stop, !33, !"__bpf_trace_tp_map_spi_transfer_stop", i1 false, i1 false}
!72 = !{ptr @__ksymtab___tracepoint_spi_transfer_start, !73, !"__ksymtab___tracepoint_spi_transfer_start", i1 false, i1 false}
!73 = !{!"../drivers/spi/spi.c", i32 40, i32 1}
!74 = !{ptr @__ksymtab___traceiter_spi_transfer_start, !73, !"__ksymtab___traceiter_spi_transfer_start", i1 false, i1 false}
!75 = !{ptr @__ksymtab___SCK__tp_func_spi_transfer_start, !73, !"__ksymtab___SCK__tp_func_spi_transfer_start", i1 false, i1 false}
!76 = !{ptr @__ksymtab___tracepoint_spi_transfer_stop, !77, !"__ksymtab___tracepoint_spi_transfer_stop", i1 false, i1 false}
!77 = !{!"../drivers/spi/spi.c", i32 41, i32 1}
!78 = !{ptr @__ksymtab___traceiter_spi_transfer_stop, !77, !"__ksymtab___traceiter_spi_transfer_stop", i1 false, i1 false}
!79 = !{ptr @__ksymtab___SCK__tp_func_spi_transfer_stop, !77, !"__ksymtab___SCK__tp_func_spi_transfer_stop", i1 false, i1 false}
!80 = !{ptr @__ksymtab_spi_get_device_id, !81, !"__ksymtab_spi_get_device_id", i1 false, i1 false}
!81 = !{!"../drivers/spi/spi.c", i32 335, i32 1}
!82 = !{ptr @.str, !83, !"<string literal>", i1 false, i1 false}
!83 = !{!"../drivers/spi/spi.c", i32 431, i32 11}
!84 = !{ptr @spi_bus_type, !85, !"spi_bus_type", i1 false, i1 false}
!85 = !{!"../drivers/spi/spi.c", i32 430, i32 17}
!86 = !{ptr @__ksymtab_spi_bus_type, !87, !"__ksymtab_spi_bus_type", i1 false, i1 false}
!87 = !{!"../drivers/spi/spi.c", i32 439, i32 1}
!88 = !{ptr @.str.1, !89, !"<string literal>", i1 false, i1 false}
!89 = !{!"../drivers/spi/spi.c", i32 485, i32 4}
!90 = !{ptr @.str.2, !89, !"<string literal>", i1 false, i1 false}
!91 = !{ptr @.str.3, !89, !"<string literal>", i1 false, i1 false}
!92 = !{ptr @__spi_register_driver._entry, !89, !"_entry", i1 false, i1 false}
!93 = !{ptr @__spi_register_driver._entry_ptr, !89, !"_entry_ptr", i1 false, i1 false}
!94 = !{ptr @__ksymtab___spi_register_driver, !95, !"__ksymtab___spi_register_driver", i1 false, i1 false}
!95 = !{!"../drivers/spi/spi.c", i32 492, i32 1}
!96 = !{ptr @.str.4, !97, !"<string literal>", i1 false, i1 false}
!97 = !{!"../drivers/spi/spi.c", i32 742, i32 4}
!98 = !{ptr @.str.5, !97, !"<string literal>", i1 false, i1 false}
!99 = !{ptr @.str.6, !97, !"<string literal>", i1 false, i1 false}
!100 = !{ptr @.str.7, !97, !"<string literal>", i1 false, i1 false}
!101 = !{ptr @spi_new_device._entry, !97, !"_entry", i1 false, i1 false}
!102 = !{ptr @spi_new_device._entry_ptr, !97, !"_entry_ptr", i1 false, i1 false}
!103 = !{ptr @__ksymtab_spi_new_device, !104, !"__ksymtab_spi_new_device", i1 false, i1 false}
!104 = !{!"../drivers/spi/spi.c", i32 759, i32 1}
!105 = !{ptr @__ksymtab_spi_unregister_device, !106, !"__ksymtab_spi_unregister_device", i1 false, i1 false}
!106 = !{!"../drivers/spi/spi.c", i32 784, i32 1}
!107 = !{ptr @__ksymtab_spi_delay_to_ns, !108, !"__ksymtab_spi_delay_to_ns", i1 false, i1 false}
!108 = !{!"../drivers/spi/spi.c", i32 1360, i32 1}
!109 = !{ptr @__ksymtab_spi_delay_exec, !110, !"__ksymtab_spi_delay_exec", i1 false, i1 false}
!110 = !{!"../drivers/spi/spi.c", i32 1379, i32 1}
!111 = !{ptr @__ksymtab_spi_finalize_current_transfer, !112, !"__ksymtab_spi_finalize_current_transfer", i1 false, i1 false}
!112 = !{!"../drivers/spi/spi.c", i32 1525, i32 1}
!113 = !{ptr @__ksymtab_spi_take_timestamp_pre, !114, !"__ksymtab_spi_take_timestamp_pre", i1 false, i1 false}
!114 = !{!"../drivers/spi/spi.c", i32 1758, i32 1}
!115 = !{ptr @__ksymtab_spi_take_timestamp_post, !116, !"__ksymtab_spi_take_timestamp_post", i1 false, i1 false}
!116 = !{!"../drivers/spi/spi.c", i32 1797, i32 1}
!117 = !{ptr @__ksymtab_spi_get_next_queued_message, !118, !"__ksymtab_spi_get_next_queued_message", i1 false, i1 false}
!118 = !{!"../drivers/spi/spi.c", i32 1870, i32 1}
!119 = distinct !{null, !120, !"__already_done", i1 false, i1 false}
!120 = !{!"../drivers/spi/spi.c", i32 1899, i32 4}
!121 = !{ptr @.str.8, !122, !"<string literal>", i1 false, i1 false}
!122 = !{!"../drivers/spi/spi.c", i32 1915, i32 4}
!123 = !{ptr @.str.9, !122, !"<string literal>", i1 false, i1 false}
!124 = !{ptr @spi_finalize_current_message._entry, !122, !"_entry", i1 false, i1 false}
!125 = !{ptr @spi_finalize_current_message._entry_ptr, !122, !"_entry_ptr", i1 false, i1 false}
!126 = !{ptr @__ksymtab_spi_finalize_current_message, !127, !"__ksymtab_spi_finalize_current_message", i1 false, i1 false}
!127 = !{!"../drivers/spi/spi.c", i32 1933, i32 1}
!128 = !{ptr @.str.10, !129, !"<string literal>", i1 false, i1 false}
!129 = !{!"../drivers/spi/spi.c", i32 2289, i32 31}
!130 = !{ptr @.str.11, !131, !"<string literal>", i1 false, i1 false}
!131 = !{!"../drivers/spi/spi.c", i32 2301, i32 3}
!132 = !{ptr @.str.12, !131, !"<string literal>", i1 false, i1 false}
!133 = !{ptr @spi_new_ancillary_device._entry, !131, !"_entry", i1 false, i1 false}
!134 = !{ptr @spi_new_ancillary_device._entry_ptr, !131, !"_entry_ptr", i1 false, i1 false}
!135 = !{ptr @__ksymtab_spi_new_ancillary_device, !136, !"__ksymtab_spi_new_ancillary_device", i1 false, i1 false}
!136 = !{!"../drivers/spi/spi.c", i32 2311, i32 1}
!137 = !{ptr @__ksymtab_spi_slave_abort, !138, !"__ksymtab_spi_slave_abort", i1 false, i1 false}
!138 = !{!"../drivers/spi/spi.c", i32 2543, i32 1}
!139 = !{ptr @__spi_alloc_controller.__key, !140, !"__key", i1 false, i1 false}
!140 = !{!"../drivers/spi/spi.c", i32 2668, i32 2}
!141 = !{ptr @.str.13, !140, !"<string literal>", i1 false, i1 false}
!142 = !{ptr @__spi_alloc_controller.__key.14, !143, !"__key", i1 false, i1 false}
!143 = !{!"../drivers/spi/spi.c", i32 2669, i32 2}
!144 = !{ptr @.str.15, !143, !"<string literal>", i1 false, i1 false}
!145 = !{ptr @__spi_alloc_controller.__key.16, !146, !"__key", i1 false, i1 false}
!146 = !{!"../drivers/spi/spi.c", i32 2670, i32 2}
!147 = !{ptr @.str.17, !146, !"<string literal>", i1 false, i1 false}
!148 = !{ptr @__spi_alloc_controller.__key.18, !149, !"__key", i1 false, i1 false}
!149 = !{!"../drivers/spi/spi.c", i32 2671, i32 2}
!150 = !{ptr @.str.19, !149, !"<string literal>", i1 false, i1 false}
!151 = !{ptr @__spi_alloc_controller.__key.20, !152, !"__key", i1 false, i1 false}
!152 = !{!"../drivers/spi/spi.c", i32 2672, i32 2}
!153 = !{ptr @.str.21, !152, !"<string literal>", i1 false, i1 false}
!154 = !{ptr @__ksymtab___spi_alloc_controller, !155, !"__ksymtab___spi_alloc_controller", i1 false, i1 false}
!155 = !{!"../drivers/spi/spi.c", i32 2686, i32 1}
!156 = !{ptr @.str.22, !157, !"<string literal>", i1 false, i1 false}
!157 = !{!"../drivers/spi/spi.c", i32 2714, i32 8}
!158 = !{ptr @__ksymtab___devm_spi_alloc_controller, !159, !"__ksymtab___devm_spi_alloc_controller", i1 false, i1 false}
!159 = !{!"../drivers/spi/spi.c", i32 2730, i32 1}
!160 = !{ptr @.str.23, !161, !"<string literal>", i1 false, i1 false}
!161 = !{!"../drivers/spi/spi.c", i32 2914, i32 7}
!162 = !{ptr @.str.24, !163, !"<string literal>", i1 false, i1 false}
!163 = !{!"../drivers/spi/spi.c", i32 2954, i32 27}
!164 = !{ptr @.str.25, !165, !"<string literal>", i1 false, i1 false}
!165 = !{!"../drivers/spi/spi.c", i32 2986, i32 2}
!166 = !{ptr @.str.26, !165, !"<string literal>", i1 false, i1 false}
!167 = !{ptr @spi_register_controller.__UNIQUE_ID_ddebug367, !165, !"__UNIQUE_ID_ddebug367", i1 false, i1 false}
!168 = !{ptr @.str.27, !165, !"<string literal>", i1 false, i1 false}
!169 = !{ptr @.str.28, !165, !"<string literal>", i1 false, i1 false}
!170 = !{ptr @.str.29, !171, !"<string literal>", i1 false, i1 false}
!171 = !{!"../drivers/spi/spi.c", i32 2996, i32 3}
!172 = !{ptr @.str.30, !171, !"<string literal>", i1 false, i1 false}
!173 = !{ptr @spi_register_controller._entry, !171, !"_entry", i1 false, i1 false}
!174 = !{ptr @spi_register_controller._entry_ptr, !171, !"_entry_ptr", i1 false, i1 false}
!175 = !{ptr @spi_register_controller.__key, !176, !"__key", i1 false, i1 false}
!176 = !{!"../drivers/spi/spi.c", i32 3005, i32 2}
!177 = !{ptr @.str.31, !176, !"<string literal>", i1 false, i1 false}
!178 = !{ptr @__ksymtab_spi_register_controller, !179, !"__ksymtab_spi_register_controller", i1 false, i1 false}
!179 = !{!"../drivers/spi/spi.c", i32 3024, i32 1}
!180 = !{ptr @__ksymtab_devm_spi_register_controller, !181, !"__ksymtab_devm_spi_register_controller", i1 false, i1 false}
!181 = !{!"../drivers/spi/spi.c", i32 3055, i32 1}
!182 = !{ptr @.str.32, !183, !"<string literal>", i1 false, i1 false}
!183 = !{!"../drivers/spi/spi.c", i32 3092, i32 4}
!184 = !{ptr @.str.33, !183, !"<string literal>", i1 false, i1 false}
!185 = !{ptr @spi_unregister_controller._entry, !183, !"_entry", i1 false, i1 false}
!186 = !{ptr @spi_unregister_controller._entry_ptr, !183, !"_entry_ptr", i1 false, i1 false}
!187 = !{ptr @__ksymtab_spi_unregister_controller, !188, !"__ksymtab_spi_unregister_controller", i1 false, i1 false}
!188 = !{!"../drivers/spi/spi.c", i32 3115, i32 1}
!189 = !{ptr @.str.34, !190, !"<string literal>", i1 false, i1 false}
!190 = !{!"../drivers/spi/spi.c", i32 3127, i32 3}
!191 = !{ptr @.str.35, !190, !"<string literal>", i1 false, i1 false}
!192 = !{ptr @spi_controller_suspend._entry, !190, !"_entry", i1 false, i1 false}
!193 = !{ptr @spi_controller_suspend._entry_ptr, !190, !"_entry_ptr", i1 false, i1 false}
!194 = !{ptr @__ksymtab_spi_controller_suspend, !195, !"__ksymtab_spi_controller_suspend", i1 false, i1 false}
!195 = !{!"../drivers/spi/spi.c", i32 3131, i32 1}
!196 = !{ptr @.str.36, !197, !"<string literal>", i1 false, i1 false}
!197 = !{!"../drivers/spi/spi.c", i32 3142, i32 3}
!198 = !{ptr @.str.37, !197, !"<string literal>", i1 false, i1 false}
!199 = !{ptr @spi_controller_resume._entry, !197, !"_entry", i1 false, i1 false}
!200 = !{ptr @spi_controller_resume._entry_ptr, !197, !"_entry_ptr", i1 false, i1 false}
!201 = !{ptr @__ksymtab_spi_controller_resume, !202, !"__ksymtab_spi_controller_resume", i1 false, i1 false}
!202 = !{!"../drivers/spi/spi.c", i32 3146, i32 1}
!203 = !{ptr @__ksymtab_spi_split_transfers_maxsize, !204, !"__ksymtab_spi_split_transfers_maxsize", i1 false, i1 false}
!204 = !{!"../drivers/spi/spi.c", i32 3388, i32 1}
!205 = !{ptr @.str.38, !206, !"<string literal>", i1 false, i1 false}
!206 = !{!"../drivers/spi/spi.c", i32 3443, i32 3}
!207 = !{ptr @.str.39, !206, !"<string literal>", i1 false, i1 false}
!208 = !{ptr @spi_setup._entry, !206, !"_entry", i1 false, i1 false}
!209 = !{ptr @spi_setup._entry_ptr, !206, !"_entry_ptr", i1 false, i1 false}
!210 = !{ptr @.str.41, !211, !"<string literal>", i1 false, i1 false}
!211 = !{!"../drivers/spi/spi.c", i32 3470, i32 3}
!212 = !{ptr @.str.42, !211, !"<string literal>", i1 false, i1 false}
!213 = !{ptr @spi_setup._entry.40, !211, !"_entry", i1 false, i1 false}
!214 = !{ptr @spi_setup._entry_ptr.43, !211, !"_entry_ptr", i1 false, i1 false}
!215 = !{ptr @.str.45, !216, !"<string literal>", i1 false, i1 false}
!216 = !{!"../drivers/spi/spi.c", i32 3477, i32 3}
!217 = !{ptr @spi_setup._entry.44, !216, !"_entry", i1 false, i1 false}
!218 = !{ptr @spi_setup._entry_ptr.46, !216, !"_entry_ptr", i1 false, i1 false}
!219 = !{ptr @.str.48, !220, !"<string literal>", i1 false, i1 false}
!220 = !{!"../drivers/spi/spi.c", i32 3501, i32 4}
!221 = !{ptr @spi_setup._entry.47, !220, !"_entry", i1 false, i1 false}
!222 = !{ptr @spi_setup._entry_ptr.49, !220, !"_entry_ptr", i1 false, i1 false}
!223 = !{ptr @.str.51, !224, !"<string literal>", i1 false, i1 false}
!224 = !{!"../drivers/spi/spi.c", i32 3512, i32 4}
!225 = !{ptr @spi_setup._entry.50, !224, !"_entry", i1 false, i1 false}
!226 = !{ptr @spi_setup._entry_ptr.52, !224, !"_entry_ptr", i1 false, i1 false}
!227 = !{ptr @.str.53, !228, !"<string literal>", i1 false, i1 false}
!228 = !{!"../drivers/spi/spi.c", i32 3541, i32 2}
!229 = !{ptr @spi_setup.__UNIQUE_ID_ddebug372, !228, !"__UNIQUE_ID_ddebug372", i1 false, i1 false}
!230 = !{ptr @.str.54, !228, !"<string literal>", i1 false, i1 false}
!231 = !{ptr @.str.55, !228, !"<string literal>", i1 false, i1 false}
!232 = !{ptr @.str.56, !228, !"<string literal>", i1 false, i1 false}
!233 = !{ptr @.str.57, !228, !"<string literal>", i1 false, i1 false}
!234 = !{ptr @.str.58, !228, !"<string literal>", i1 false, i1 false}
!235 = !{ptr @__ksymtab_spi_setup, !236, !"__ksymtab_spi_setup", i1 false, i1 false}
!236 = !{!"../drivers/spi/spi.c", i32 3552, i32 1}
!237 = !{ptr @__ksymtab_spi_async, !238, !"__ksymtab_spi_async", i1 false, i1 false}
!238 = !{!"../drivers/spi/spi.c", i32 3806, i32 1}
!239 = !{ptr @__ksymtab_spi_sync, !240, !"__ksymtab_spi_sync", i1 false, i1 false}
!240 = !{!"../drivers/spi/spi.c", i32 3956, i32 1}
!241 = !{ptr @__ksymtab_spi_sync_locked, !242, !"__ksymtab_spi_sync_locked", i1 false, i1 false}
!242 = !{!"../drivers/spi/spi.c", i32 3978, i32 1}
!243 = !{ptr @__ksymtab_spi_bus_lock, !244, !"__ksymtab_spi_bus_lock", i1 false, i1 false}
!244 = !{!"../drivers/spi/spi.c", i32 4009, i32 1}
!245 = !{ptr @__ksymtab_spi_bus_unlock, !246, !"__ksymtab_spi_bus_unlock", i1 false, i1 false}
!246 = !{!"../drivers/spi/spi.c", i32 4032, i32 1}
!247 = !{ptr @.str.59, !248, !"<string literal>", i1 false, i1 false}
!248 = !{!"../drivers/spi/spi.c", i32 4063, i32 9}
!249 = !{ptr @.str.60, !248, !"<string literal>", i1 false, i1 false}
!250 = !{ptr @spi_write_then_read.lock, !248, !"lock", i1 false, i1 false}
!251 = !{ptr @__ksymtab_spi_write_then_read, !252, !"__ksymtab_spi_write_then_read", i1 false, i1 false}
!252 = !{!"../drivers/spi/spi.c", i32 4112, i32 1}
!253 = !{ptr @__initcall__kmod_spi__381_4315_spi_init2, !254, !"__initcall__kmod_spi__381_4315_spi_init2", i1 false, i1 false}
!254 = !{!"../drivers/spi/spi.c", i32 4315, i32 1}
!255 = !{ptr @buf, !256, !"buf", i1 false, i1 false}
!256 = !{!"../drivers/spi/spi.c", i32 4037, i32 12}
!257 = !{ptr @__tpstrtab_spi_controller_idle, !1, !"__tpstrtab_spi_controller_idle", i1 false, i1 false}
!258 = !{ptr @__tpstrtab_spi_controller_busy, !5, !"__tpstrtab_spi_controller_busy", i1 false, i1 false}
!259 = !{ptr @__tpstrtab_spi_setup, !9, !"__tpstrtab_spi_setup", i1 false, i1 false}
!260 = !{ptr @__tpstrtab_spi_set_cs, !13, !"__tpstrtab_spi_set_cs", i1 false, i1 false}
!261 = !{ptr @__tpstrtab_spi_message_submit, !17, !"__tpstrtab_spi_message_submit", i1 false, i1 false}
!262 = !{ptr @__tpstrtab_spi_message_start, !21, !"__tpstrtab_spi_message_start", i1 false, i1 false}
!263 = !{ptr @__tpstrtab_spi_message_done, !25, !"__tpstrtab_spi_message_done", i1 false, i1 false}
!264 = !{ptr @__tpstrtab_spi_transfer_start, !29, !"__tpstrtab_spi_transfer_start", i1 false, i1 false}
!265 = !{ptr @__tpstrtab_spi_transfer_stop, !33, !"__tpstrtab_spi_transfer_stop", i1 false, i1 false}
!266 = !{ptr @str__spi__trace_system_name, !267, !"str__spi__trace_system_name", i1 false, i1 false}
!267 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!268 = !{ptr @.str.61, !37, !"<string literal>", i1 false, i1 false}
!269 = !{ptr @.str.62, !37, !"<string literal>", i1 false, i1 false}
!270 = !{ptr @trace_event_fields_spi_controller, !37, !"trace_event_fields_spi_controller", i1 false, i1 false}
!271 = !{ptr @trace_event_type_funcs_spi_controller, !37, !"trace_event_type_funcs_spi_controller", i1 false, i1 false}
!272 = !{ptr @.str.63, !37, !"<string literal>", i1 false, i1 false}
!273 = !{ptr @print_fmt_spi_controller, !37, !"print_fmt_spi_controller", i1 false, i1 false}
!274 = !{ptr @.str.64, !9, !"<string literal>", i1 false, i1 false}
!275 = !{ptr @.str.65, !9, !"<string literal>", i1 false, i1 false}
!276 = !{ptr @.str.66, !9, !"<string literal>", i1 false, i1 false}
!277 = !{ptr @.str.67, !9, !"<string literal>", i1 false, i1 false}
!278 = !{ptr @.str.68, !9, !"<string literal>", i1 false, i1 false}
!279 = !{ptr @.str.69, !9, !"<string literal>", i1 false, i1 false}
!280 = !{ptr @.str.70, !9, !"<string literal>", i1 false, i1 false}
!281 = !{ptr @trace_event_fields_spi_setup, !9, !"trace_event_fields_spi_setup", i1 false, i1 false}
!282 = !{ptr @trace_event_type_funcs_spi_setup, !9, !"trace_event_type_funcs_spi_setup", i1 false, i1 false}
!283 = !{ptr @.str.71, !9, !"<string literal>", i1 false, i1 false}
!284 = !{ptr @print_fmt_spi_setup, !9, !"print_fmt_spi_setup", i1 false, i1 false}
!285 = !{ptr @.str.72, !13, !"<string literal>", i1 false, i1 false}
!286 = !{ptr @.str.73, !13, !"<string literal>", i1 false, i1 false}
!287 = !{ptr @trace_event_fields_spi_set_cs, !13, !"trace_event_fields_spi_set_cs", i1 false, i1 false}
!288 = !{ptr @trace_event_type_funcs_spi_set_cs, !13, !"trace_event_type_funcs_spi_set_cs", i1 false, i1 false}
!289 = !{ptr @.str.74, !13, !"<string literal>", i1 false, i1 false}
!290 = !{ptr @.str.75, !13, !"<string literal>", i1 false, i1 false}
!291 = !{ptr @.str.76, !13, !"<string literal>", i1 false, i1 false}
!292 = !{ptr @.str.77, !13, !"<string literal>", i1 false, i1 false}
!293 = !{ptr @print_fmt_spi_set_cs, !13, !"print_fmt_spi_set_cs", i1 false, i1 false}
!294 = !{ptr @.str.78, !49, !"<string literal>", i1 false, i1 false}
!295 = !{ptr @.str.79, !49, !"<string literal>", i1 false, i1 false}
!296 = !{ptr @trace_event_fields_spi_message, !49, !"trace_event_fields_spi_message", i1 false, i1 false}
!297 = !{ptr @trace_event_type_funcs_spi_message, !49, !"trace_event_type_funcs_spi_message", i1 false, i1 false}
!298 = !{ptr @.str.80, !49, !"<string literal>", i1 false, i1 false}
!299 = !{ptr @print_fmt_spi_message, !49, !"print_fmt_spi_message", i1 false, i1 false}
!300 = !{ptr @.str.81, !25, !"<string literal>", i1 false, i1 false}
!301 = !{ptr @.str.82, !25, !"<string literal>", i1 false, i1 false}
!302 = !{ptr @.str.83, !25, !"<string literal>", i1 false, i1 false}
!303 = !{ptr @trace_event_fields_spi_message_done, !25, !"trace_event_fields_spi_message_done", i1 false, i1 false}
!304 = !{ptr @trace_event_type_funcs_spi_message_done, !25, !"trace_event_type_funcs_spi_message_done", i1 false, i1 false}
!305 = !{ptr @.str.84, !25, !"<string literal>", i1 false, i1 false}
!306 = !{ptr @print_fmt_spi_message_done, !25, !"print_fmt_spi_message_done", i1 false, i1 false}
!307 = !{ptr @.str.85, !58, !"<string literal>", i1 false, i1 false}
!308 = !{ptr @.str.86, !58, !"<string literal>", i1 false, i1 false}
!309 = !{ptr @.str.87, !58, !"<string literal>", i1 false, i1 false}
!310 = !{ptr @.str.88, !58, !"<string literal>", i1 false, i1 false}
!311 = !{ptr @.str.89, !58, !"<string literal>", i1 false, i1 false}
!312 = !{ptr @.str.90, !58, !"<string literal>", i1 false, i1 false}
!313 = !{ptr @trace_event_fields_spi_transfer, !58, !"trace_event_fields_spi_transfer", i1 false, i1 false}
!314 = !{ptr @trace_event_type_funcs_spi_transfer, !58, !"trace_event_type_funcs_spi_transfer", i1 false, i1 false}
!315 = !{ptr @.str.91, !58, !"<string literal>", i1 false, i1 false}
!316 = !{ptr @print_fmt_spi_transfer, !58, !"print_fmt_spi_transfer", i1 false, i1 false}
!317 = !{ptr @spi_dev_groups, !318, !"spi_dev_groups", i1 false, i1 false}
!318 = !{!"../drivers/spi/spi.c", i32 241, i32 38}
!319 = !{ptr @spi_dev_group, !320, !"spi_dev_group", i1 false, i1 false}
!320 = !{!"../drivers/spi/spi.c", i32 200, i32 37}
!321 = !{ptr @spi_dev_attrs, !322, !"spi_dev_attrs", i1 false, i1 false}
!322 = !{!"../drivers/spi/spi.c", i32 194, i32 26}
!323 = !{ptr @.str.92, !324, !"<string literal>", i1 false, i1 false}
!324 = !{!"../drivers/spi/spi.c", i32 68, i32 8}
!325 = !{ptr @dev_attr_modalias, !324, !"dev_attr_modalias", i1 false, i1 false}
!326 = !{ptr @.str.93, !327, !"<string literal>", i1 false, i1 false}
!327 = !{!"../drivers/spi/spi.c", i32 66, i32 22}
!328 = !{ptr @.str.94, !329, !"<string literal>", i1 false, i1 false}
!329 = !{!"../drivers/spi/spi.c", i32 66, i32 32}
!330 = !{ptr @.str.95, !331, !"<string literal>", i1 false, i1 false}
!331 = !{!"../drivers/spi/spi.c", i32 113, i32 8}
!332 = !{ptr @dev_attr_driver_override, !331, !"dev_attr_driver_override", i1 false, i1 false}
!333 = !{ptr @.str.96, !334, !"<string literal>", i1 false, i1 false}
!334 = !{!"../drivers/spi/spi.c", i32 109, i32 33}
!335 = !{ptr @.str.97, !336, !"<string literal>", i1 false, i1 false}
!336 = !{!"../drivers/spi/spi.c", i32 237, i32 11}
!337 = !{ptr @spi_device_statistics_group, !338, !"spi_device_statistics_group", i1 false, i1 false}
!338 = !{!"../drivers/spi/spi.c", i32 236, i32 37}
!339 = !{ptr @spi_device_statistics_attrs, !340, !"spi_device_statistics_attrs", i1 false, i1 false}
!340 = !{!"../drivers/spi/spi.c", i32 204, i32 26}
!341 = !{ptr @.str.98, !342, !"<string literal>", i1 false, i1 false}
!342 = !{!"../drivers/spi/spi.c", i32 157, i32 1}
!343 = !{ptr @dev_attr_spi_device_messages, !342, !"dev_attr_spi_device_messages", i1 false, i1 false}
!344 = !{ptr @.str.99, !342, !"<string literal>", i1 false, i1 false}
!345 = !{ptr @.str.100, !346, !"<string literal>", i1 false, i1 false}
!346 = !{!"../drivers/spi/spi.c", i32 158, i32 1}
!347 = !{ptr @dev_attr_spi_device_transfers, !346, !"dev_attr_spi_device_transfers", i1 false, i1 false}
!348 = !{ptr @.str.101, !349, !"<string literal>", i1 false, i1 false}
!349 = !{!"../drivers/spi/spi.c", i32 159, i32 1}
!350 = !{ptr @dev_attr_spi_device_errors, !349, !"dev_attr_spi_device_errors", i1 false, i1 false}
!351 = !{ptr @.str.102, !352, !"<string literal>", i1 false, i1 false}
!352 = !{!"../drivers/spi/spi.c", i32 160, i32 1}
!353 = !{ptr @dev_attr_spi_device_timedout, !352, !"dev_attr_spi_device_timedout", i1 false, i1 false}
!354 = !{ptr @.str.103, !355, !"<string literal>", i1 false, i1 false}
!355 = !{!"../drivers/spi/spi.c", i32 162, i32 1}
!356 = !{ptr @dev_attr_spi_device_spi_sync, !355, !"dev_attr_spi_device_spi_sync", i1 false, i1 false}
!357 = !{ptr @.str.104, !358, !"<string literal>", i1 false, i1 false}
!358 = !{!"../drivers/spi/spi.c", i32 163, i32 1}
!359 = !{ptr @dev_attr_spi_device_spi_sync_immediate, !358, !"dev_attr_spi_device_spi_sync_immediate", i1 false, i1 false}
!360 = !{ptr @.str.105, !361, !"<string literal>", i1 false, i1 false}
!361 = !{!"../drivers/spi/spi.c", i32 164, i32 1}
!362 = !{ptr @dev_attr_spi_device_spi_async, !361, !"dev_attr_spi_device_spi_async", i1 false, i1 false}
!363 = !{ptr @.str.106, !364, !"<string literal>", i1 false, i1 false}
!364 = !{!"../drivers/spi/spi.c", i32 166, i32 1}
!365 = !{ptr @dev_attr_spi_device_bytes, !364, !"dev_attr_spi_device_bytes", i1 false, i1 false}
!366 = !{ptr @.str.107, !364, !"<string literal>", i1 false, i1 false}
!367 = !{ptr @.str.108, !368, !"<string literal>", i1 false, i1 false}
!368 = !{!"../drivers/spi/spi.c", i32 167, i32 1}
!369 = !{ptr @dev_attr_spi_device_bytes_rx, !368, !"dev_attr_spi_device_bytes_rx", i1 false, i1 false}
!370 = !{ptr @.str.109, !371, !"<string literal>", i1 false, i1 false}
!371 = !{!"../drivers/spi/spi.c", i32 168, i32 1}
!372 = !{ptr @dev_attr_spi_device_bytes_tx, !371, !"dev_attr_spi_device_bytes_tx", i1 false, i1 false}
!373 = !{ptr @.str.110, !374, !"<string literal>", i1 false, i1 false}
!374 = !{!"../drivers/spi/spi.c", i32 174, i32 1}
!375 = !{ptr @dev_attr_spi_device_transfer_bytes_histo0, !374, !"dev_attr_spi_device_transfer_bytes_histo0", i1 false, i1 false}
!376 = !{ptr @.str.111, !377, !"<string literal>", i1 false, i1 false}
!377 = !{!"../drivers/spi/spi.c", i32 175, i32 1}
!378 = !{ptr @dev_attr_spi_device_transfer_bytes_histo1, !377, !"dev_attr_spi_device_transfer_bytes_histo1", i1 false, i1 false}
!379 = !{ptr @.str.112, !380, !"<string literal>", i1 false, i1 false}
!380 = !{!"../drivers/spi/spi.c", i32 176, i32 1}
!381 = !{ptr @dev_attr_spi_device_transfer_bytes_histo2, !380, !"dev_attr_spi_device_transfer_bytes_histo2", i1 false, i1 false}
!382 = !{ptr @.str.113, !383, !"<string literal>", i1 false, i1 false}
!383 = !{!"../drivers/spi/spi.c", i32 177, i32 1}
!384 = !{ptr @dev_attr_spi_device_transfer_bytes_histo3, !383, !"dev_attr_spi_device_transfer_bytes_histo3", i1 false, i1 false}
!385 = !{ptr @.str.114, !386, !"<string literal>", i1 false, i1 false}
!386 = !{!"../drivers/spi/spi.c", i32 178, i32 1}
!387 = !{ptr @dev_attr_spi_device_transfer_bytes_histo4, !386, !"dev_attr_spi_device_transfer_bytes_histo4", i1 false, i1 false}
!388 = !{ptr @.str.115, !389, !"<string literal>", i1 false, i1 false}
!389 = !{!"../drivers/spi/spi.c", i32 179, i32 1}
!390 = !{ptr @dev_attr_spi_device_transfer_bytes_histo5, !389, !"dev_attr_spi_device_transfer_bytes_histo5", i1 false, i1 false}
!391 = !{ptr @.str.116, !392, !"<string literal>", i1 false, i1 false}
!392 = !{!"../drivers/spi/spi.c", i32 180, i32 1}
!393 = !{ptr @dev_attr_spi_device_transfer_bytes_histo6, !392, !"dev_attr_spi_device_transfer_bytes_histo6", i1 false, i1 false}
!394 = !{ptr @.str.117, !395, !"<string literal>", i1 false, i1 false}
!395 = !{!"../drivers/spi/spi.c", i32 181, i32 1}
!396 = !{ptr @dev_attr_spi_device_transfer_bytes_histo7, !395, !"dev_attr_spi_device_transfer_bytes_histo7", i1 false, i1 false}
!397 = !{ptr @.str.118, !398, !"<string literal>", i1 false, i1 false}
!398 = !{!"../drivers/spi/spi.c", i32 182, i32 1}
!399 = !{ptr @dev_attr_spi_device_transfer_bytes_histo8, !398, !"dev_attr_spi_device_transfer_bytes_histo8", i1 false, i1 false}
!400 = !{ptr @.str.119, !401, !"<string literal>", i1 false, i1 false}
!401 = !{!"../drivers/spi/spi.c", i32 183, i32 1}
!402 = !{ptr @dev_attr_spi_device_transfer_bytes_histo9, !401, !"dev_attr_spi_device_transfer_bytes_histo9", i1 false, i1 false}
!403 = !{ptr @.str.120, !404, !"<string literal>", i1 false, i1 false}
!404 = !{!"../drivers/spi/spi.c", i32 184, i32 1}
!405 = !{ptr @dev_attr_spi_device_transfer_bytes_histo10, !404, !"dev_attr_spi_device_transfer_bytes_histo10", i1 false, i1 false}
!406 = !{ptr @.str.121, !407, !"<string literal>", i1 false, i1 false}
!407 = !{!"../drivers/spi/spi.c", i32 185, i32 1}
!408 = !{ptr @dev_attr_spi_device_transfer_bytes_histo11, !407, !"dev_attr_spi_device_transfer_bytes_histo11", i1 false, i1 false}
!409 = !{ptr @.str.122, !410, !"<string literal>", i1 false, i1 false}
!410 = !{!"../drivers/spi/spi.c", i32 186, i32 1}
!411 = !{ptr @dev_attr_spi_device_transfer_bytes_histo12, !410, !"dev_attr_spi_device_transfer_bytes_histo12", i1 false, i1 false}
!412 = !{ptr @.str.123, !413, !"<string literal>", i1 false, i1 false}
!413 = !{!"../drivers/spi/spi.c", i32 187, i32 1}
!414 = !{ptr @dev_attr_spi_device_transfer_bytes_histo13, !413, !"dev_attr_spi_device_transfer_bytes_histo13", i1 false, i1 false}
!415 = !{ptr @.str.124, !416, !"<string literal>", i1 false, i1 false}
!416 = !{!"../drivers/spi/spi.c", i32 188, i32 1}
!417 = !{ptr @dev_attr_spi_device_transfer_bytes_histo14, !416, !"dev_attr_spi_device_transfer_bytes_histo14", i1 false, i1 false}
!418 = !{ptr @.str.125, !419, !"<string literal>", i1 false, i1 false}
!419 = !{!"../drivers/spi/spi.c", i32 189, i32 1}
!420 = !{ptr @dev_attr_spi_device_transfer_bytes_histo15, !419, !"dev_attr_spi_device_transfer_bytes_histo15", i1 false, i1 false}
!421 = !{ptr @.str.126, !422, !"<string literal>", i1 false, i1 false}
!422 = !{!"../drivers/spi/spi.c", i32 190, i32 1}
!423 = !{ptr @dev_attr_spi_device_transfer_bytes_histo16, !422, !"dev_attr_spi_device_transfer_bytes_histo16", i1 false, i1 false}
!424 = !{ptr @.str.127, !425, !"<string literal>", i1 false, i1 false}
!425 = !{!"../drivers/spi/spi.c", i32 192, i32 1}
!426 = !{ptr @dev_attr_spi_device_transfers_split_maxsize, !425, !"dev_attr_spi_device_transfers_split_maxsize", i1 false, i1 false}
!427 = !{ptr @.str.128, !428, !"<string literal>", i1 false, i1 false}
!428 = !{!"../drivers/spi/spi.c", i32 369, i32 29}
!429 = !{ptr @.str.129, !430, !"<string literal>", i1 false, i1 false}
!430 = !{!"../drivers/spi/spi.c", i32 412, i32 4}
!431 = !{ptr @.str.130, !430, !"<string literal>", i1 false, i1 false}
!432 = !{ptr @spi_remove._entry, !430, !"_entry", i1 false, i1 false}
!433 = !{ptr @spi_remove._entry_ptr, !430, !"_entry_ptr", i1 false, i1 false}
!434 = !{ptr @spi_alloc_device.__key, !435, !"__key", i1 false, i1 false}
!435 = !{!"../drivers/spi/spi.c", i32 555, i32 2}
!436 = !{ptr @.str.131, !435, !"<string literal>", i1 false, i1 false}
!437 = !{ptr @.str.132, !438, !"<string literal>", i1 false, i1 false}
!438 = !{!"../drivers/spi/spi.c", i32 663, i32 3}
!439 = !{ptr @.str.133, !438, !"<string literal>", i1 false, i1 false}
!440 = !{ptr @spi_add_device._entry, !438, !"_entry", i1 false, i1 false}
!441 = !{ptr @spi_add_device._entry_ptr, !438, !"_entry_ptr", i1 false, i1 false}
!442 = distinct !{null, !443, !"<string literal>", i1 false, i1 false}
!443 = !{!"../drivers/spi/spi.c", i32 566, i32 27}
!444 = !{ptr @.str.135, !445, !"<string literal>", i1 false, i1 false}
!445 = !{!"../drivers/spi/spi.c", i32 570, i32 26}
!446 = !{ptr @.str.136, !447, !"<string literal>", i1 false, i1 false}
!447 = !{!"../drivers/spi/spi.c", i32 604, i32 3}
!448 = !{ptr @.str.137, !447, !"<string literal>", i1 false, i1 false}
!449 = !{ptr @__spi_add_device._entry, !447, !"_entry", i1 false, i1 false}
!450 = !{ptr @__spi_add_device._entry_ptr, !447, !"_entry_ptr", i1 false, i1 false}
!451 = !{ptr @.str.139, !452, !"<string literal>", i1 false, i1 false}
!452 = !{!"../drivers/spi/spi.c", i32 628, i32 3}
!453 = !{ptr @__spi_add_device._entry.138, !452, !"_entry", i1 false, i1 false}
!454 = !{ptr @__spi_add_device._entry_ptr.140, !452, !"_entry_ptr", i1 false, i1 false}
!455 = !{ptr @.str.142, !456, !"<string literal>", i1 false, i1 false}
!456 = !{!"../drivers/spi/spi.c", i32 636, i32 3}
!457 = !{ptr @__spi_add_device._entry.141, !456, !"_entry", i1 false, i1 false}
!458 = !{ptr @__spi_add_device._entry_ptr.143, !456, !"_entry_ptr", i1 false, i1 false}
!459 = !{ptr @.str.144, !460, !"<string literal>", i1 false, i1 false}
!460 = !{!"../drivers/spi/spi.c", i32 640, i32 3}
!461 = !{ptr @__spi_add_device.__UNIQUE_ID_ddebug346, !460, !"__UNIQUE_ID_ddebug346", i1 false, i1 false}
!462 = !{ptr @.str.145, !463, !"<string literal>", i1 false, i1 false}
!463 = !{!"../drivers/spi/spi.c", i32 516, i32 8}
!464 = !{ptr @.str.146, !463, !"<string literal>", i1 false, i1 false}
!465 = !{ptr @board_lock, !463, !"board_lock", i1 false, i1 false}
!466 = !{ptr @board_list, !467, !"board_list", i1 false, i1 false}
!467 = !{!"../drivers/spi/spi.c", i32 508, i32 8}
!468 = !{ptr @spi_controller_list, !469, !"spi_controller_list", i1 false, i1 false}
!469 = !{!"../drivers/spi/spi.c", i32 509, i32 8}
!470 = !{ptr @.str.147, !471, !"<string literal>", i1 false, i1 false}
!471 = !{!"../drivers/spi/spi.c", i32 796, i32 3}
!472 = !{ptr @.str.148, !471, !"<string literal>", i1 false, i1 false}
!473 = !{ptr @spi_match_controller_to_boardinfo._entry, !471, !"_entry", i1 false, i1 false}
!474 = !{ptr @spi_match_controller_to_boardinfo._entry_ptr, !471, !"_entry_ptr", i1 false, i1 false}
!475 = distinct !{null, !25, !"__already_done", i1 false, i1 false}
!476 = !{ptr @.str.149, !25, !"<string literal>", i1 false, i1 false}
!477 = distinct !{null, !25, !"__warned", i1 false, i1 false}
!478 = !{ptr @.str.150, !25, !"<string literal>", i1 false, i1 false}
!479 = distinct !{null, !480, !"__already_done", i1 false, i1 false}
!480 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!481 = !{ptr @.str.151, !480, !"<string literal>", i1 false, i1 false}
!482 = !{ptr @.str.152, !483, !"<string literal>", i1 false, i1 false}
!483 = !{!"../drivers/spi/spi.c", i32 1604, i32 4}
!484 = !{ptr @.str.153, !483, !"<string literal>", i1 false, i1 false}
!485 = !{ptr @__spi_pump_messages._entry, !483, !"_entry", i1 false, i1 false}
!486 = !{ptr @__spi_pump_messages._entry_ptr, !483, !"_entry_ptr", i1 false, i1 false}
!487 = !{ptr @__spi_pump_messages._entry.154, !488, !"_entry", i1 false, i1 false}
!488 = !{!"../drivers/spi/spi.c", i32 1632, i32 4}
!489 = !{ptr @__spi_pump_messages._entry_ptr.155, !488, !"_entry_ptr", i1 false, i1 false}
!490 = !{ptr @.str.157, !491, !"<string literal>", i1 false, i1 false}
!491 = !{!"../drivers/spi/spi.c", i32 1645, i32 4}
!492 = !{ptr @__spi_pump_messages._entry.156, !491, !"_entry", i1 false, i1 false}
!493 = !{ptr @__spi_pump_messages._entry_ptr.158, !491, !"_entry_ptr", i1 false, i1 false}
!494 = !{ptr @.str.160, !495, !"<string literal>", i1 false, i1 false}
!495 = !{!"../drivers/spi/spi.c", i32 1665, i32 4}
!496 = !{ptr @__spi_pump_messages._entry.159, !495, !"_entry", i1 false, i1 false}
!497 = !{ptr @__spi_pump_messages._entry_ptr.161, !495, !"_entry_ptr", i1 false, i1 false}
!498 = !{ptr @.str.163, !499, !"<string literal>", i1 false, i1 false}
!499 = !{!"../drivers/spi/spi.c", i32 1690, i32 3}
!500 = !{ptr @__spi_pump_messages._entry.162, !499, !"_entry", i1 false, i1 false}
!501 = !{ptr @__spi_pump_messages._entry_ptr.164, !499, !"_entry_ptr", i1 false, i1 false}
!502 = distinct !{null, !1, !"__already_done", i1 false, i1 false}
!503 = distinct !{null, !1, !"__warned", i1 false, i1 false}
!504 = distinct !{null, !5, !"__already_done", i1 false, i1 false}
!505 = distinct !{null, !5, !"__warned", i1 false, i1 false}
!506 = distinct !{null, !21, !"__already_done", i1 false, i1 false}
!507 = distinct !{null, !21, !"__warned", i1 false, i1 false}
!508 = !{ptr @.str.165, !509, !"<string literal>", i1 false, i1 false}
!509 = !{!"../drivers/spi/spi.c", i32 684, i32 3}
!510 = !{ptr @spi_add_device_locked._entry, !509, !"_entry", i1 false, i1 false}
!511 = !{ptr @spi_add_device_locked._entry_ptr, !509, !"_entry_ptr", i1 false, i1 false}
!512 = !{ptr @.str.166, !513, !"<string literal>", i1 false, i1 false}
!513 = !{!"../drivers/spi/spi.c", i32 2619, i32 11}
!514 = !{ptr @spi_slave_class, !515, !"spi_slave_class", i1 false, i1 false}
!515 = !{!"../drivers/spi/spi.c", i32 2618, i32 21}
!516 = !{ptr @spi_slave_groups, !517, !"spi_slave_groups", i1 false, i1 false}
!517 = !{!"../drivers/spi/spi.c", i32 2612, i32 38}
!518 = !{ptr @spi_controller_statistics_group, !519, !"spi_controller_statistics_group", i1 false, i1 false}
!519 = !{!"../drivers/spi/spi.c", i32 279, i32 37}
!520 = !{ptr @spi_controller_statistics_attrs, !521, !"spi_controller_statistics_attrs", i1 false, i1 false}
!521 = !{!"../drivers/spi/spi.c", i32 247, i32 26}
!522 = !{ptr @dev_attr_spi_controller_messages, !342, !"dev_attr_spi_controller_messages", i1 false, i1 false}
!523 = !{ptr @dev_attr_spi_controller_transfers, !346, !"dev_attr_spi_controller_transfers", i1 false, i1 false}
!524 = !{ptr @dev_attr_spi_controller_errors, !349, !"dev_attr_spi_controller_errors", i1 false, i1 false}
!525 = !{ptr @dev_attr_spi_controller_timedout, !352, !"dev_attr_spi_controller_timedout", i1 false, i1 false}
!526 = !{ptr @dev_attr_spi_controller_spi_sync, !355, !"dev_attr_spi_controller_spi_sync", i1 false, i1 false}
!527 = !{ptr @dev_attr_spi_controller_spi_sync_immediate, !358, !"dev_attr_spi_controller_spi_sync_immediate", i1 false, i1 false}
!528 = !{ptr @dev_attr_spi_controller_spi_async, !361, !"dev_attr_spi_controller_spi_async", i1 false, i1 false}
!529 = !{ptr @dev_attr_spi_controller_bytes, !364, !"dev_attr_spi_controller_bytes", i1 false, i1 false}
!530 = !{ptr @dev_attr_spi_controller_bytes_rx, !368, !"dev_attr_spi_controller_bytes_rx", i1 false, i1 false}
!531 = !{ptr @dev_attr_spi_controller_bytes_tx, !371, !"dev_attr_spi_controller_bytes_tx", i1 false, i1 false}
!532 = !{ptr @dev_attr_spi_controller_transfer_bytes_histo0, !374, !"dev_attr_spi_controller_transfer_bytes_histo0", i1 false, i1 false}
!533 = !{ptr @dev_attr_spi_controller_transfer_bytes_histo1, !377, !"dev_attr_spi_controller_transfer_bytes_histo1", i1 false, i1 false}
!534 = !{ptr @dev_attr_spi_controller_transfer_bytes_histo2, !380, !"dev_attr_spi_controller_transfer_bytes_histo2", i1 false, i1 false}
!535 = !{ptr @dev_attr_spi_controller_transfer_bytes_histo3, !383, !"dev_attr_spi_controller_transfer_bytes_histo3", i1 false, i1 false}
!536 = !{ptr @dev_attr_spi_controller_transfer_bytes_histo4, !386, !"dev_attr_spi_controller_transfer_bytes_histo4", i1 false, i1 false}
!537 = !{ptr @dev_attr_spi_controller_transfer_bytes_histo5, !389, !"dev_attr_spi_controller_transfer_bytes_histo5", i1 false, i1 false}
!538 = !{ptr @dev_attr_spi_controller_transfer_bytes_histo6, !392, !"dev_attr_spi_controller_transfer_bytes_histo6", i1 false, i1 false}
!539 = !{ptr @dev_attr_spi_controller_transfer_bytes_histo7, !395, !"dev_attr_spi_controller_transfer_bytes_histo7", i1 false, i1 false}
!540 = !{ptr @dev_attr_spi_controller_transfer_bytes_histo8, !398, !"dev_attr_spi_controller_transfer_bytes_histo8", i1 false, i1 false}
!541 = !{ptr @dev_attr_spi_controller_transfer_bytes_histo9, !401, !"dev_attr_spi_controller_transfer_bytes_histo9", i1 false, i1 false}
!542 = !{ptr @dev_attr_spi_controller_transfer_bytes_histo10, !404, !"dev_attr_spi_controller_transfer_bytes_histo10", i1 false, i1 false}
!543 = !{ptr @dev_attr_spi_controller_transfer_bytes_histo11, !407, !"dev_attr_spi_controller_transfer_bytes_histo11", i1 false, i1 false}
!544 = !{ptr @dev_attr_spi_controller_transfer_bytes_histo12, !410, !"dev_attr_spi_controller_transfer_bytes_histo12", i1 false, i1 false}
!545 = !{ptr @dev_attr_spi_controller_transfer_bytes_histo13, !413, !"dev_attr_spi_controller_transfer_bytes_histo13", i1 false, i1 false}
!546 = !{ptr @dev_attr_spi_controller_transfer_bytes_histo14, !416, !"dev_attr_spi_controller_transfer_bytes_histo14", i1 false, i1 false}
!547 = !{ptr @dev_attr_spi_controller_transfer_bytes_histo15, !419, !"dev_attr_spi_controller_transfer_bytes_histo15", i1 false, i1 false}
!548 = !{ptr @dev_attr_spi_controller_transfer_bytes_histo16, !422, !"dev_attr_spi_controller_transfer_bytes_histo16", i1 false, i1 false}
!549 = !{ptr @dev_attr_spi_controller_transfers_split_maxsize, !425, !"dev_attr_spi_controller_transfers_split_maxsize", i1 false, i1 false}
!550 = !{ptr @spi_slave_group, !551, !"spi_slave_group", i1 false, i1 false}
!551 = !{!"../drivers/spi/spi.c", i32 2608, i32 37}
!552 = !{ptr @spi_slave_attrs, !553, !"spi_slave_attrs", i1 false, i1 false}
!553 = !{!"../drivers/spi/spi.c", i32 2603, i32 26}
!554 = !{ptr @dev_attr_slave, !555, !"dev_attr_slave", i1 false, i1 false}
!555 = !{!"../drivers/spi/spi.c", i32 2601, i32 8}
!556 = !{ptr @.str.167, !557, !"<string literal>", i1 false, i1 false}
!557 = !{!"../drivers/spi/spi.c", i32 2572, i32 19}
!558 = !{ptr @.str.168, !559, !"<string literal>", i1 false, i1 false}
!559 = !{!"../drivers/spi/spi.c", i32 2583, i32 19}
!560 = !{ptr @.str.169, !561, !"<string literal>", i1 false, i1 false}
!561 = !{!"../drivers/spi/spi.c", i32 2522, i32 11}
!562 = !{ptr @spi_master_class, !563, !"spi_master_class", i1 false, i1 false}
!563 = !{!"../drivers/spi/spi.c", i32 2521, i32 21}
!564 = !{ptr @spi_master_groups, !565, !"spi_master_groups", i1 false, i1 false}
!565 = !{!"../drivers/spi/spi.c", i32 284, i32 38}
!566 = !{ptr @.str.170, !567, !"<string literal>", i1 false, i1 false}
!567 = !{!"../drivers/spi/spi.c", i32 45, i32 8}
!568 = !{ptr @spi_master_idr, !567, !"spi_master_idr", i1 false, i1 false}
!569 = !{ptr @init_completion.__key, !570, !"__key", i1 false, i1 false}
!570 = !{!"../include/linux/completion.h", i32 87, i32 2}
!571 = !{ptr @.str.171, !570, !"<string literal>", i1 false, i1 false}
!572 = !{ptr @.str.172, !573, !"<string literal>", i1 false, i1 false}
!573 = !{!"../drivers/spi/spi.c", i32 2784, i32 24}
!574 = !{ptr @.str.173, !575, !"<string literal>", i1 false, i1 false}
!575 = !{!"../drivers/spi/spi.c", i32 2820, i32 47}
!576 = !{ptr @.str.174, !577, !"<string literal>", i1 false, i1 false}
!577 = !{!"../drivers/spi/spi.c", i32 2830, i32 4}
!578 = !{ptr @.str.175, !577, !"<string literal>", i1 false, i1 false}
!579 = !{ptr @spi_get_gpio_descs._entry, !577, !"_entry", i1 false, i1 false}
!580 = !{ptr @spi_get_gpio_descs._entry_ptr, !577, !"_entry_ptr", i1 false, i1 false}
!581 = !{ptr @.str.177, !582, !"<string literal>", i1 false, i1 false}
!582 = !{!"../drivers/spi/spi.c", i32 2840, i32 3}
!583 = !{ptr @spi_get_gpio_descs._entry.176, !582, !"_entry", i1 false, i1 false}
!584 = !{ptr @spi_get_gpio_descs._entry_ptr.178, !582, !"_entry_ptr", i1 false, i1 false}
!585 = !{ptr @.str.179, !586, !"<string literal>", i1 false, i1 false}
!586 = !{!"../drivers/spi/spi.c", i32 2741, i32 31}
!587 = !{ptr @.str.180, !588, !"<string literal>", i1 false, i1 false}
!588 = !{!"../include/linux/of_gpio.h", i32 104, i32 50}
!589 = !{ptr @.str.181, !590, !"<string literal>", i1 false, i1 false}
!590 = !{!"../drivers/spi/spi.c", i32 2058, i32 3}
!591 = !{ptr @.str.182, !590, !"<string literal>", i1 false, i1 false}
!592 = !{ptr @spi_controller_initialize_queue._entry, !590, !"_entry", i1 false, i1 false}
!593 = !{ptr @spi_controller_initialize_queue._entry_ptr, !590, !"_entry_ptr", i1 false, i1 false}
!594 = !{ptr @.str.184, !595, !"<string literal>", i1 false, i1 false}
!595 = !{!"../drivers/spi/spi.c", i32 2064, i32 3}
!596 = !{ptr @spi_controller_initialize_queue._entry.183, !595, !"_entry", i1 false, i1 false}
!597 = !{ptr @spi_controller_initialize_queue._entry_ptr.185, !595, !"_entry_ptr", i1 false, i1 false}
!598 = !{ptr @.str.186, !599, !"<string literal>", i1 false, i1 false}
!599 = !{!"../drivers/spi/spi.c", i32 1455, i32 5}
!600 = !{ptr @.str.187, !599, !"<string literal>", i1 false, i1 false}
!601 = !{ptr @spi_transfer_one_message._entry, !599, !"_entry", i1 false, i1 false}
!602 = !{ptr @spi_transfer_one_message._entry_ptr, !599, !"_entry_ptr", i1 false, i1 false}
!603 = !{ptr @.str.189, !604, !"<string literal>", i1 false, i1 false}
!604 = !{!"../drivers/spi/spi.c", i32 1467, i32 5}
!605 = !{ptr @spi_transfer_one_message._entry.188, !604, !"_entry", i1 false, i1 false}
!606 = !{ptr @spi_transfer_one_message._entry_ptr.190, !604, !"_entry_ptr", i1 false, i1 false}
!607 = distinct !{null, !29, !"__already_done", i1 false, i1 false}
!608 = distinct !{null, !29, !"__warned", i1 false, i1 false}
!609 = !{ptr @.str.191, !610, !"<string literal>", i1 false, i1 false}
!610 = !{!"../drivers/spi/spi.c", i32 1268, i32 4}
!611 = !{ptr @.str.192, !610, !"<string literal>", i1 false, i1 false}
!612 = !{ptr @spi_transfer_wait.__UNIQUE_ID_ddebug361, !610, !"__UNIQUE_ID_ddebug361", i1 false, i1 false}
!613 = !{ptr @.str.193, !614, !"<string literal>", i1 false, i1 false}
!614 = !{!"../drivers/spi/spi.c", i32 1298, i32 4}
!615 = !{ptr @spi_transfer_wait._entry, !614, !"_entry", i1 false, i1 false}
!616 = !{ptr @spi_transfer_wait._entry_ptr, !614, !"_entry_ptr", i1 false, i1 false}
!617 = distinct !{null, !33, !"__already_done", i1 false, i1 false}
!618 = distinct !{null, !33, !"__warned", i1 false, i1 false}
!619 = distinct !{null, !620, !"__print_once", i1 false, i1 false}
!620 = !{!"../drivers/spi/spi.c", i32 1398, i32 3}
!621 = !{ptr @.str.194, !620, !"<string literal>", i1 false, i1 false}
!622 = !{ptr @.str.195, !620, !"<string literal>", i1 false, i1 false}
!623 = !{ptr @_spi_transfer_cs_change_delay._entry, !620, !"_entry", i1 false, i1 false}
!624 = !{ptr @_spi_transfer_cs_change_delay._entry_ptr, !620, !"_entry_ptr", i1 false, i1 false}
!625 = !{ptr @.str.196, !626, !"<string literal>", i1 false, i1 false}
!626 = !{!"../drivers/spi/spi.c", i32 1828, i32 3}
!627 = !{ptr @.str.197, !626, !"<string literal>", i1 false, i1 false}
!628 = !{ptr @spi_init_queue._entry, !626, !"_entry", i1 false, i1 false}
!629 = !{ptr @spi_init_queue._entry_ptr, !626, !"_entry_ptr", i1 false, i1 false}
!630 = !{ptr @.str.198, !631, !"<string literal>", i1 false, i1 false}
!631 = !{!"../drivers/spi/spi.c", i32 2254, i32 4}
!632 = !{ptr @.str.199, !631, !"<string literal>", i1 false, i1 false}
!633 = !{ptr @of_register_spi_devices._entry, !631, !"_entry", i1 false, i1 false}
!634 = !{ptr @of_register_spi_devices._entry_ptr, !631, !"_entry_ptr", i1 false, i1 false}
!635 = !{ptr @.str.200, !636, !"<string literal>", i1 false, i1 false}
!636 = !{!"../drivers/spi/spi.c", i32 2196, i32 3}
!637 = !{ptr @.str.201, !636, !"<string literal>", i1 false, i1 false}
!638 = !{ptr @of_register_spi_device._entry, !636, !"_entry", i1 false, i1 false}
!639 = !{ptr @of_register_spi_device._entry_ptr, !636, !"_entry_ptr", i1 false, i1 false}
!640 = !{ptr @.str.203, !641, !"<string literal>", i1 false, i1 false}
!641 = !{!"../drivers/spi/spi.c", i32 2205, i32 3}
!642 = !{ptr @of_register_spi_device._entry.202, !641, !"_entry", i1 false, i1 false}
!643 = !{ptr @of_register_spi_device._entry_ptr.204, !641, !"_entry_ptr", i1 false, i1 false}
!644 = !{ptr @.str.206, !645, !"<string literal>", i1 false, i1 false}
!645 = !{!"../drivers/spi/spi.c", i32 2221, i32 3}
!646 = !{ptr @of_register_spi_device._entry.205, !645, !"_entry", i1 false, i1 false}
!647 = !{ptr @of_register_spi_device._entry_ptr.207, !645, !"_entry_ptr", i1 false, i1 false}
!648 = !{ptr @.str.208, !649, !"<string literal>", i1 false, i1 false}
!649 = !{!"../drivers/spi/spi.c", i32 2102, i32 32}
!650 = !{ptr @.str.209, !651, !"<string literal>", i1 false, i1 false}
!651 = !{!"../drivers/spi/spi.c", i32 2104, i32 32}
!652 = !{ptr @.str.210, !653, !"<string literal>", i1 false, i1 false}
!653 = !{!"../drivers/spi/spi.c", i32 2106, i32 32}
!654 = !{ptr @.str.211, !655, !"<string literal>", i1 false, i1 false}
!655 = !{!"../drivers/spi/spi.c", i32 2108, i32 32}
!656 = !{ptr @.str.212, !657, !"<string literal>", i1 false, i1 false}
!657 = !{!"../drivers/spi/spi.c", i32 2110, i32 32}
!658 = !{ptr @.str.213, !659, !"<string literal>", i1 false, i1 false}
!659 = !{!"../drivers/spi/spi.c", i32 2114, i32 32}
!660 = !{ptr @.str.214, !661, !"<string literal>", i1 false, i1 false}
!661 = !{!"../drivers/spi/spi.c", i32 2131, i32 4}
!662 = !{ptr @.str.215, !661, !"<string literal>", i1 false, i1 false}
!663 = !{ptr @of_spi_parse_dt._entry, !661, !"_entry", i1 false, i1 false}
!664 = !{ptr @of_spi_parse_dt._entry_ptr, !661, !"_entry_ptr", i1 false, i1 false}
!665 = !{ptr @.str.216, !666, !"<string literal>", i1 false, i1 false}
!666 = !{!"../drivers/spi/spi.c", i32 2138, i32 32}
!667 = !{ptr @.str.218, !668, !"<string literal>", i1 false, i1 false}
!668 = !{!"../drivers/spi/spi.c", i32 2155, i32 4}
!669 = !{ptr @of_spi_parse_dt._entry.217, !668, !"_entry", i1 false, i1 false}
!670 = !{ptr @of_spi_parse_dt._entry_ptr.219, !668, !"_entry_ptr", i1 false, i1 false}
!671 = !{ptr @.str.221, !672, !"<string literal>", i1 false, i1 false}
!672 = !{!"../drivers/spi/spi.c", i32 2164, i32 4}
!673 = !{ptr @of_spi_parse_dt._entry.220, !672, !"_entry", i1 false, i1 false}
!674 = !{ptr @of_spi_parse_dt._entry_ptr.222, !672, !"_entry_ptr", i1 false, i1 false}
!675 = !{ptr @.str.223, !676, !"<string literal>", i1 false, i1 false}
!676 = !{!"../drivers/spi/spi.c", i32 2172, i32 32}
!677 = !{ptr @.str.225, !678, !"<string literal>", i1 false, i1 false}
!678 = !{!"../drivers/spi/spi.c", i32 2174, i32 3}
!679 = !{ptr @of_spi_parse_dt._entry.224, !678, !"_entry", i1 false, i1 false}
!680 = !{ptr @of_spi_parse_dt._entry_ptr.226, !678, !"_entry_ptr", i1 false, i1 false}
!681 = !{ptr @.str.227, !682, !"<string literal>", i1 false, i1 false}
!682 = !{!"../drivers/spi/spi.c", i32 2181, i32 32}
!683 = !{ptr @.str.228, !684, !"<string literal>", i1 false, i1 false}
!684 = !{!"../drivers/spi/spi.c", i32 2002, i32 3}
!685 = !{ptr @.str.229, !684, !"<string literal>", i1 false, i1 false}
!686 = !{ptr @spi_destroy_queue._entry, !684, !"_entry", i1 false, i1 false}
!687 = !{ptr @spi_destroy_queue._entry_ptr, !684, !"_entry_ptr", i1 false, i1 false}
!688 = !{ptr @.str.230, !689, !"<string literal>", i1 false, i1 false}
!689 = !{!"../drivers/spi/spi.c", i32 1983, i32 3}
!690 = !{ptr @.str.231, !689, !"<string literal>", i1 false, i1 false}
!691 = !{ptr @spi_stop_queue._entry, !689, !"_entry", i1 false, i1 false}
!692 = !{ptr @spi_stop_queue._entry_ptr, !689, !"_entry_ptr", i1 false, i1 false}
!693 = !{ptr @.str.232, !694, !"<string literal>", i1 false, i1 false}
!694 = !{!"../drivers/spi/spi.c", i32 3232, i32 4}
!695 = !{ptr @.str.233, !694, !"<string literal>", i1 false, i1 false}
!696 = !{ptr @spi_replace_transfers._entry, !694, !"_entry", i1 false, i1 false}
!697 = !{ptr @spi_replace_transfers._entry_ptr, !694, !"_entry_ptr", i1 false, i1 false}
!698 = distinct !{null, !13, !"__already_done", i1 false, i1 false}
!699 = distinct !{null, !13, !"__warned", i1 false, i1 false}
!700 = !{ptr @.str.234, !701, !"<string literal>", i1 false, i1 false}
!701 = !{!"../drivers/spi/spi.c", i32 1816, i32 2}
!702 = !{ptr @.str.235, !701, !"<string literal>", i1 false, i1 false}
!703 = !{ptr @spi_set_thread_rt._entry, !701, !"_entry", i1 false, i1 false}
!704 = !{ptr @spi_set_thread_rt._entry_ptr, !701, !"_entry_ptr", i1 false, i1 false}
!705 = distinct !{null, !9, !"__already_done", i1 false, i1 false}
!706 = distinct !{null, !9, !"__warned", i1 false, i1 false}
!707 = distinct !{null, !17, !"__already_done", i1 false, i1 false}
!708 = distinct !{null, !17, !"__warned", i1 false, i1 false}
!709 = !{ptr @spi_init.__key, !710, !"__key", i1 false, i1 false}
!710 = !{!"../drivers/spi/spi.c", i32 4279, i32 11}
!711 = !{ptr @spi_init.__key.236, !712, !"__key", i1 false, i1 false}
!712 = !{!"../drivers/spi/spi.c", i32 4284, i32 12}
!713 = !{ptr @spi_of_notifier, !714, !"spi_of_notifier", i1 false, i1 false}
!714 = !{!"../drivers/spi/spi.c", i32 4190, i32 30}
!715 = !{ptr @.str.237, !716, !"<string literal>", i1 false, i1 false}
!716 = !{!"../drivers/spi/spi.c", i32 4162, i32 4}
!717 = !{ptr @.str.238, !716, !"<string literal>", i1 false, i1 false}
!718 = !{ptr @of_spi_notify._entry, !716, !"_entry", i1 false, i1 false}
!719 = !{ptr @of_spi_notify._entry_ptr, !716, !"_entry_ptr", i1 false, i1 false}
!720 = !{!"sp"}
!721 = !{i32 1, !"wchar_size", i32 2}
!722 = !{i32 1, !"min_enum_size", i32 4}
!723 = !{i32 8, !"branch-target-enforcement", i32 0}
!724 = !{i32 8, !"sign-return-address", i32 0}
!725 = !{i32 8, !"sign-return-address-all", i32 0}
!726 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!727 = !{i32 7, !"uwtable", i32 1}
!728 = !{i32 7, !"frame-pointer", i32 2}
!729 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!730 = !{!"branch_weights", i32 2000, i32 1}
!731 = !{!"branch_weights", i32 1, i32 2000}
!732 = !{!"auto-init"}
!733 = !{i64 2153890201, i64 2153890693, i64 2153890238, i64 2153890294, i64 2153890328, i64 2153890352, i64 2153890393, i64 2153890414, i64 2153890442, i64 2153890476}
!734 = !{i64 2153891811, i64 2153892303, i64 2153891848, i64 2153891904, i64 2153891938, i64 2153891962, i64 2153892003, i64 2153892024, i64 2153892052, i64 2153892086}
!735 = !{i64 2153896520, i64 2153897012, i64 2153896557, i64 2153896613, i64 2153896647, i64 2153896671, i64 2153896712, i64 2153896733, i64 2153896761, i64 2153896795}
!736 = !{i8 0, i8 2}
!737 = !{i64 717560, i64 717621}
!738 = !{i64 2157700831}
!739 = !{i64 720292}
!740 = !{i64 720577}
!741 = !{i64 2157703422}
!742 = !{i64 2148806894, i64 2148806899, i64 2148806912, i64 2148806956, i64 2148806990, i64 2148807011}
!743 = !{i64 2155945305}
!744 = !{i64 2155945506}
!745 = !{i64 2149415483}
!746 = !{i64 2149416519}
!747 = !{i32 0, i32 33}
!748 = distinct !{!748, !749}
!749 = !{!"llvm.loop.peeled.count", i32 1}
!750 = !{i64 2148324498}
!751 = !{i64 809321, i64 809346, i64 809368, i64 809384, i64 809396, i64 809416, i64 809440, i64 809456, i64 809468}
!752 = !{i64 2148324686}
!753 = !{i64 2155876938}
!754 = !{i64 2155877141}
!755 = !{i64 2155843917}
!756 = !{i64 2155844138}
!757 = !{i64 2155860606}
!758 = !{i64 2155860827}
!759 = !{i64 2155929114}
!760 = !{i64 2155929317}
!761 = !{i64 2155966011}
!762 = !{i64 2155966228}
!763 = !{i64 2148715613, i64 2148715893, i64 2148716227, i64 2148716561}
!764 = !{i64 2155982828}
!765 = !{i64 2155983043}
!766 = !{i64 2155896854}
!767 = !{i64 2155897059}
!768 = !{i64 2155912831}
!769 = !{i64 2155913036}
