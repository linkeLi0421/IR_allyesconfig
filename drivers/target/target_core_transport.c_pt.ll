; ModuleID = '/llk/IR_all_yes/drivers/target/target_core_transport.c_pt.bc'
source_filename = "../drivers/target/target_core_transport.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab+transport_init_session\22, \22a\22\09"
module asm "\09.weak\09__crc_transport_init_session\09\09\09\09"
module asm "\09.long\09__crc_transport_init_session\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_transport_init_session:\09\09\09\09\09"
module asm "\09.asciz \09\22transport_init_session\22\09\09\09\09\09"
module asm "__kstrtabns_transport_init_session:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+transport_alloc_session\22, \22a\22\09"
module asm "\09.weak\09__crc_transport_alloc_session\09\09\09\09"
module asm "\09.long\09__crc_transport_alloc_session\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_transport_alloc_session:\09\09\09\09\09"
module asm "\09.asciz \09\22transport_alloc_session\22\09\09\09\09\09"
module asm "__kstrtabns_transport_alloc_session:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+transport_alloc_session_tags\22, \22a\22\09"
module asm "\09.weak\09__crc_transport_alloc_session_tags\09\09\09\09"
module asm "\09.long\09__crc_transport_alloc_session_tags\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_transport_alloc_session_tags:\09\09\09\09\09"
module asm "\09.asciz \09\22transport_alloc_session_tags\22\09\09\09\09\09"
module asm "__kstrtabns_transport_alloc_session_tags:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__transport_register_session\22, \22a\22\09"
module asm "\09.weak\09__crc___transport_register_session\09\09\09\09"
module asm "\09.long\09__crc___transport_register_session\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___transport_register_session:\09\09\09\09\09"
module asm "\09.asciz \09\22__transport_register_session\22\09\09\09\09\09"
module asm "__kstrtabns___transport_register_session:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+transport_register_session\22, \22a\22\09"
module asm "\09.weak\09__crc_transport_register_session\09\09\09\09"
module asm "\09.long\09__crc_transport_register_session\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_transport_register_session:\09\09\09\09\09"
module asm "\09.asciz \09\22transport_register_session\22\09\09\09\09\09"
module asm "__kstrtabns_transport_register_session:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+target_setup_session\22, \22a\22\09"
module asm "\09.weak\09__crc_target_setup_session\09\09\09\09"
module asm "\09.long\09__crc_target_setup_session\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_setup_session:\09\09\09\09\09"
module asm "\09.asciz \09\22target_setup_session\22\09\09\09\09\09"
module asm "__kstrtabns_target_setup_session:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+target_show_dynamic_sessions\22, \22a\22\09"
module asm "\09.weak\09__crc_target_show_dynamic_sessions\09\09\09\09"
module asm "\09.long\09__crc_target_show_dynamic_sessions\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_show_dynamic_sessions:\09\09\09\09\09"
module asm "\09.asciz \09\22target_show_dynamic_sessions\22\09\09\09\09\09"
module asm "__kstrtabns_target_show_dynamic_sessions:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+target_put_nacl\22, \22a\22\09"
module asm "\09.weak\09__crc_target_put_nacl\09\09\09\09"
module asm "\09.long\09__crc_target_put_nacl\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_put_nacl:\09\09\09\09\09"
module asm "\09.asciz \09\22target_put_nacl\22\09\09\09\09\09"
module asm "__kstrtabns_target_put_nacl:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+transport_deregister_session_configfs\22, \22a\22\09"
module asm "\09.weak\09__crc_transport_deregister_session_configfs\09\09\09\09"
module asm "\09.long\09__crc_transport_deregister_session_configfs\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_transport_deregister_session_configfs:\09\09\09\09\09"
module asm "\09.asciz \09\22transport_deregister_session_configfs\22\09\09\09\09\09"
module asm "__kstrtabns_transport_deregister_session_configfs:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+transport_free_session\22, \22a\22\09"
module asm "\09.weak\09__crc_transport_free_session\09\09\09\09"
module asm "\09.long\09__crc_transport_free_session\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_transport_free_session:\09\09\09\09\09"
module asm "\09.asciz \09\22transport_free_session\22\09\09\09\09\09"
module asm "__kstrtabns_transport_free_session:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+transport_deregister_session\22, \22a\22\09"
module asm "\09.weak\09__crc_transport_deregister_session\09\09\09\09"
module asm "\09.long\09__crc_transport_deregister_session\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_transport_deregister_session:\09\09\09\09\09"
module asm "\09.asciz \09\22transport_deregister_session\22\09\09\09\09\09"
module asm "__kstrtabns_transport_deregister_session:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+target_remove_session\22, \22a\22\09"
module asm "\09.weak\09__crc_target_remove_session\09\09\09\09"
module asm "\09.long\09__crc_target_remove_session\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_remove_session:\09\09\09\09\09"
module asm "\09.asciz \09\22target_remove_session\22\09\09\09\09\09"
module asm "__kstrtabns_target_remove_session:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+transport_copy_sense_to_cmd\22, \22a\22\09"
module asm "\09.weak\09__crc_transport_copy_sense_to_cmd\09\09\09\09"
module asm "\09.long\09__crc_transport_copy_sense_to_cmd\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_transport_copy_sense_to_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22transport_copy_sense_to_cmd\22\09\09\09\09\09"
module asm "__kstrtabns_transport_copy_sense_to_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+target_complete_cmd_with_sense\22, \22a\22\09"
module asm "\09.weak\09__crc_target_complete_cmd_with_sense\09\09\09\09"
module asm "\09.long\09__crc_target_complete_cmd_with_sense\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_complete_cmd_with_sense:\09\09\09\09\09"
module asm "\09.asciz \09\22target_complete_cmd_with_sense\22\09\09\09\09\09"
module asm "__kstrtabns_target_complete_cmd_with_sense:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+target_complete_cmd\22, \22a\22\09"
module asm "\09.weak\09__crc_target_complete_cmd\09\09\09\09"
module asm "\09.long\09__crc_target_complete_cmd\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_complete_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22target_complete_cmd\22\09\09\09\09\09"
module asm "__kstrtabns_target_complete_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+target_set_cmd_data_length\22, \22a\22\09"
module asm "\09.weak\09__crc_target_set_cmd_data_length\09\09\09\09"
module asm "\09.long\09__crc_target_set_cmd_data_length\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_set_cmd_data_length:\09\09\09\09\09"
module asm "\09.asciz \09\22target_set_cmd_data_length\22\09\09\09\09\09"
module asm "__kstrtabns_target_set_cmd_data_length:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+target_complete_cmd_with_length\22, \22a\22\09"
module asm "\09.weak\09__crc_target_complete_cmd_with_length\09\09\09\09"
module asm "\09.long\09__crc_target_complete_cmd_with_length\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_complete_cmd_with_length:\09\09\09\09\09"
module asm "\09.asciz \09\22target_complete_cmd_with_length\22\09\09\09\09\09"
module asm "__kstrtabns_target_complete_cmd_with_length:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+transport_set_vpd_proto_id\22, \22a\22\09"
module asm "\09.weak\09__crc_transport_set_vpd_proto_id\09\09\09\09"
module asm "\09.long\09__crc_transport_set_vpd_proto_id\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_transport_set_vpd_proto_id:\09\09\09\09\09"
module asm "\09.asciz \09\22transport_set_vpd_proto_id\22\09\09\09\09\09"
module asm "__kstrtabns_transport_set_vpd_proto_id:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+transport_set_vpd_assoc\22, \22a\22\09"
module asm "\09.weak\09__crc_transport_set_vpd_assoc\09\09\09\09"
module asm "\09.long\09__crc_transport_set_vpd_assoc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_transport_set_vpd_assoc:\09\09\09\09\09"
module asm "\09.asciz \09\22transport_set_vpd_assoc\22\09\09\09\09\09"
module asm "__kstrtabns_transport_set_vpd_assoc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+transport_set_vpd_ident_type\22, \22a\22\09"
module asm "\09.weak\09__crc_transport_set_vpd_ident_type\09\09\09\09"
module asm "\09.long\09__crc_transport_set_vpd_ident_type\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_transport_set_vpd_ident_type:\09\09\09\09\09"
module asm "\09.asciz \09\22transport_set_vpd_ident_type\22\09\09\09\09\09"
module asm "__kstrtabns_transport_set_vpd_ident_type:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+transport_set_vpd_ident\22, \22a\22\09"
module asm "\09.weak\09__crc_transport_set_vpd_ident\09\09\09\09"
module asm "\09.long\09__crc_transport_set_vpd_ident\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_transport_set_vpd_ident:\09\09\09\09\09"
module asm "\09.asciz \09\22transport_set_vpd_ident\22\09\09\09\09\09"
module asm "__kstrtabns_transport_set_vpd_ident:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+__target_init_cmd\22, \22a\22\09"
module asm "\09.weak\09__crc___target_init_cmd\09\09\09\09"
module asm "\09.long\09__crc___target_init_cmd\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab___target_init_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22__target_init_cmd\22\09\09\09\09\09"
module asm "__kstrtabns___target_init_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+target_cmd_init_cdb\22, \22a\22\09"
module asm "\09.weak\09__crc_target_cmd_init_cdb\09\09\09\09"
module asm "\09.long\09__crc_target_cmd_init_cdb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_cmd_init_cdb:\09\09\09\09\09"
module asm "\09.asciz \09\22target_cmd_init_cdb\22\09\09\09\09\09"
module asm "__kstrtabns_target_cmd_init_cdb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+target_cmd_parse_cdb\22, \22a\22\09"
module asm "\09.weak\09__crc_target_cmd_parse_cdb\09\09\09\09"
module asm "\09.long\09__crc_target_cmd_parse_cdb\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_cmd_parse_cdb:\09\09\09\09\09"
module asm "\09.asciz \09\22target_cmd_parse_cdb\22\09\09\09\09\09"
module asm "__kstrtabns_target_cmd_parse_cdb:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+transport_handle_cdb_direct\22, \22a\22\09"
module asm "\09.weak\09__crc_transport_handle_cdb_direct\09\09\09\09"
module asm "\09.long\09__crc_transport_handle_cdb_direct\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_transport_handle_cdb_direct:\09\09\09\09\09"
module asm "\09.asciz \09\22transport_handle_cdb_direct\22\09\09\09\09\09"
module asm "__kstrtabns_transport_handle_cdb_direct:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+target_init_cmd\22, \22a\22\09"
module asm "\09.weak\09__crc_target_init_cmd\09\09\09\09"
module asm "\09.long\09__crc_target_init_cmd\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_init_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22target_init_cmd\22\09\09\09\09\09"
module asm "__kstrtabns_target_init_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+target_submit_prep\22, \22a\22\09"
module asm "\09.weak\09__crc_target_submit_prep\09\09\09\09"
module asm "\09.long\09__crc_target_submit_prep\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_submit_prep:\09\09\09\09\09"
module asm "\09.asciz \09\22target_submit_prep\22\09\09\09\09\09"
module asm "__kstrtabns_target_submit_prep:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+target_submit\22, \22a\22\09"
module asm "\09.weak\09__crc_target_submit\09\09\09\09"
module asm "\09.long\09__crc_target_submit\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_submit:\09\09\09\09\09"
module asm "\09.asciz \09\22target_submit\22\09\09\09\09\09"
module asm "__kstrtabns_target_submit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+target_submit_cmd\22, \22a\22\09"
module asm "\09.weak\09__crc_target_submit_cmd\09\09\09\09"
module asm "\09.long\09__crc_target_submit_cmd\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_submit_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22target_submit_cmd\22\09\09\09\09\09"
module asm "__kstrtabns_target_submit_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+target_queue_submission\22, \22a\22\09"
module asm "\09.weak\09__crc_target_queue_submission\09\09\09\09"
module asm "\09.long\09__crc_target_queue_submission\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_queue_submission:\09\09\09\09\09"
module asm "\09.asciz \09\22target_queue_submission\22\09\09\09\09\09"
module asm "__kstrtabns_target_queue_submission:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+target_submit_tmr\22, \22a\22\09"
module asm "\09.weak\09__crc_target_submit_tmr\09\09\09\09"
module asm "\09.long\09__crc_target_submit_tmr\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_submit_tmr:\09\09\09\09\09"
module asm "\09.asciz \09\22target_submit_tmr\22\09\09\09\09\09"
module asm "__kstrtabns_target_submit_tmr:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+transport_generic_request_failure\22, \22a\22\09"
module asm "\09.weak\09__crc_transport_generic_request_failure\09\09\09\09"
module asm "\09.long\09__crc_transport_generic_request_failure\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_transport_generic_request_failure:\09\09\09\09\09"
module asm "\09.asciz \09\22transport_generic_request_failure\22\09\09\09\09\09"
module asm "__kstrtabns_transport_generic_request_failure:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+target_execute_cmd\22, \22a\22\09"
module asm "\09.weak\09__crc_target_execute_cmd\09\09\09\09"
module asm "\09.long\09__crc_target_execute_cmd\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_execute_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22target_execute_cmd\22\09\09\09\09\09"
module asm "__kstrtabns_target_execute_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+target_free_sgl\22, \22a\22\09"
module asm "\09.weak\09__crc_target_free_sgl\09\09\09\09"
module asm "\09.long\09__crc_target_free_sgl\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_free_sgl:\09\09\09\09\09"
module asm "\09.asciz \09\22target_free_sgl\22\09\09\09\09\09"
module asm "__kstrtabns_target_free_sgl:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+transport_kmap_data_sg\22, \22a\22\09"
module asm "\09.weak\09__crc_transport_kmap_data_sg\09\09\09\09"
module asm "\09.long\09__crc_transport_kmap_data_sg\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_transport_kmap_data_sg:\09\09\09\09\09"
module asm "\09.asciz \09\22transport_kmap_data_sg\22\09\09\09\09\09"
module asm "__kstrtabns_transport_kmap_data_sg:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+transport_kunmap_data_sg\22, \22a\22\09"
module asm "\09.weak\09__crc_transport_kunmap_data_sg\09\09\09\09"
module asm "\09.long\09__crc_transport_kunmap_data_sg\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_transport_kunmap_data_sg:\09\09\09\09\09"
module asm "\09.asciz \09\22transport_kunmap_data_sg\22\09\09\09\09\09"
module asm "__kstrtabns_transport_kunmap_data_sg:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+target_alloc_sgl\22, \22a\22\09"
module asm "\09.weak\09__crc_target_alloc_sgl\09\09\09\09"
module asm "\09.long\09__crc_target_alloc_sgl\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_alloc_sgl:\09\09\09\09\09"
module asm "\09.asciz \09\22target_alloc_sgl\22\09\09\09\09\09"
module asm "__kstrtabns_target_alloc_sgl:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+transport_generic_new_cmd\22, \22a\22\09"
module asm "\09.weak\09__crc_transport_generic_new_cmd\09\09\09\09"
module asm "\09.long\09__crc_transport_generic_new_cmd\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_transport_generic_new_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22transport_generic_new_cmd\22\09\09\09\09\09"
module asm "__kstrtabns_transport_generic_new_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+transport_generic_free_cmd\22, \22a\22\09"
module asm "\09.weak\09__crc_transport_generic_free_cmd\09\09\09\09"
module asm "\09.long\09__crc_transport_generic_free_cmd\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_transport_generic_free_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22transport_generic_free_cmd\22\09\09\09\09\09"
module asm "__kstrtabns_transport_generic_free_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+target_get_sess_cmd\22, \22a\22\09"
module asm "\09.weak\09__crc_target_get_sess_cmd\09\09\09\09"
module asm "\09.long\09__crc_target_get_sess_cmd\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_get_sess_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22target_get_sess_cmd\22\09\09\09\09\09"
module asm "__kstrtabns_target_get_sess_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+target_put_sess_cmd\22, \22a\22\09"
module asm "\09.weak\09__crc_target_put_sess_cmd\09\09\09\09"
module asm "\09.long\09__crc_target_put_sess_cmd\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_put_sess_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22target_put_sess_cmd\22\09\09\09\09\09"
module asm "__kstrtabns_target_put_sess_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+target_show_cmd\22, \22a\22\09"
module asm "\09.weak\09__crc_target_show_cmd\09\09\09\09"
module asm "\09.long\09__crc_target_show_cmd\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_show_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22target_show_cmd\22\09\09\09\09\09"
module asm "__kstrtabns_target_show_cmd:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+target_stop_session\22, \22a\22\09"
module asm "\09.weak\09__crc_target_stop_session\09\09\09\09"
module asm "\09.long\09__crc_target_stop_session\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_stop_session:\09\09\09\09\09"
module asm "\09.asciz \09\22target_stop_session\22\09\09\09\09\09"
module asm "__kstrtabns_target_stop_session:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+target_wait_for_sess_cmds\22, \22a\22\09"
module asm "\09.weak\09__crc_target_wait_for_sess_cmds\09\09\09\09"
module asm "\09.long\09__crc_target_wait_for_sess_cmds\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_wait_for_sess_cmds:\09\09\09\09\09"
module asm "\09.asciz \09\22target_wait_for_sess_cmds\22\09\09\09\09\09"
module asm "__kstrtabns_target_wait_for_sess_cmds:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+transport_wait_for_tasks\22, \22a\22\09"
module asm "\09.weak\09__crc_transport_wait_for_tasks\09\09\09\09"
module asm "\09.long\09__crc_transport_wait_for_tasks\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_transport_wait_for_tasks:\09\09\09\09\09"
module asm "\09.asciz \09\22transport_wait_for_tasks\22\09\09\09\09\09"
module asm "__kstrtabns_transport_wait_for_tasks:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+transport_send_check_condition_and_sense\22, \22a\22\09"
module asm "\09.weak\09__crc_transport_send_check_condition_and_sense\09\09\09\09"
module asm "\09.long\09__crc_transport_send_check_condition_and_sense\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_transport_send_check_condition_and_sense:\09\09\09\09\09"
module asm "\09.asciz \09\22transport_send_check_condition_and_sense\22\09\09\09\09\09"
module asm "__kstrtabns_transport_send_check_condition_and_sense:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+target_send_busy\22, \22a\22\09"
module asm "\09.weak\09__crc_target_send_busy\09\09\09\09"
module asm "\09.long\09__crc_target_send_busy\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_target_send_busy:\09\09\09\09\09"
module asm "\09.asciz \09\22target_send_busy\22\09\09\09\09\09"
module asm "__kstrtabns_target_send_busy:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+transport_generic_handle_tmr\22, \22a\22\09"
module asm "\09.weak\09__crc_transport_generic_handle_tmr\09\09\09\09"
module asm "\09.long\09__crc_transport_generic_handle_tmr\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_transport_generic_handle_tmr:\09\09\09\09\09"
module asm "\09.asciz \09\22transport_generic_handle_tmr\22\09\09\09\09\09"
module asm "__kstrtabns_transport_generic_handle_tmr:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_event_fields = type { ptr, %union.anon.217 }
%union.anon.217 = type { %struct.anon.218 }
%struct.anon.218 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.219, %struct.trace_event, ptr, ptr, %union.anon.220, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.219 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.220 = type { ptr }
%union.anon.221 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.222 = type { %struct.bpf_raw_event_map }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.lock_class_key = type { %union.anon.2 }
%union.anon.2 = type { %struct.hlist_node }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.trace_print_flags = type { i32, ptr }
%struct.cpumask = type { [1 x i32] }
%struct.sense_detail = type { i8, i8, i8, i8 }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.se_cmd = type { i32, i8, i16, i8, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, ptr, %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, %struct.llist_node, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [32 x i8], i64, i32, i32, %struct.spinlock, %struct.kref, %struct.completion, %struct.work_struct, ptr, ptr, i32, i32, ptr, ptr, i32, i32, %struct.list_head, ptr, i32, i32, i8, i8, i32, i32, ptr, i32, i32, i64, i32 }
%struct.llist_node = type { ptr }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.se_session = type { %struct.atomic_t, i64, i32, i32, ptr, ptr, ptr, %struct.percpu_ref, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.wait_queue_head, %struct.completion, ptr, %struct.sbitmap_queue }
%struct.percpu_ref = type { i32, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.sbitmap_queue = type { %struct.sbitmap, i32, %struct.atomic_t, ptr, %struct.atomic_t, i32 }
%struct.sbitmap = type { i32, i32, i32, i8, ptr, ptr }
%struct.trace_event_raw_target_sequencer_start = type { %struct.trace_entry, i32, i64, i32, i32, i32, i8, [32 x i8], i32, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.trace_event_raw_target_cmd_complete = type { %struct.trace_entry, i32, i64, i32, i32, i32, i8, i8, i8, [32 x i8], [18 x i8], i32, [0 x i8] }
%struct.percpu_ref_data = type { %struct.atomic_t, ptr, ptr, i8, %struct.callback_head, ptr }
%struct.callback_head = type { ptr, ptr }
%struct.se_portal_group = type { i32, i8, %struct.atomic_t, %struct.mutex, %struct.spinlock, %struct.mutex, %struct.list_head, %struct.hlist_head, ptr, %struct.list_head, ptr, ptr, %struct.config_group, %struct.config_group, %struct.config_group, %struct.config_group, %struct.config_group, %struct.config_group, %struct.config_group }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.hlist_head = type { ptr }
%struct.config_group = type { %struct.config_item, %struct.list_head, ptr, %struct.list_head, %struct.list_head }
%struct.config_item = type { ptr, [20 x i8], %struct.kref, %struct.list_head, ptr, ptr, ptr, ptr }
%struct.se_node_acl = type { [224 x i8], i8, i8, i32, i32, i32, [64 x i8], %struct.atomic_t, %struct.hlist_head, ptr, ptr, %struct.mutex, %struct.spinlock, %struct.config_group, %struct.config_group, %struct.config_group, %struct.config_group, %struct.config_group, %struct.list_head, %struct.list_head, %struct.completion, %struct.kref }
%struct.target_core_fabric_ops = type { ptr, ptr, ptr, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8 }
%struct.se_device = type { i16, i32, i32, i8, i32, i64, i32, i64, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, i8, %struct.atomic_t, %struct.atomic_t, i32, %struct.spinlock, %struct.spinlock, i32, %struct.spinlock, %struct.spinlock, %struct.spinlock, %struct.semaphore, ptr, ptr, ptr, %struct.list_head, %struct.list_head, %struct.work_struct, %struct.work_struct, %struct.list_head, %struct.list_head, ptr, %struct.t10_wwn, %struct.t10_alua, %struct.t10_reservation, %struct.se_dev_attrib, %struct.config_group, %struct.config_group, %struct.config_group, %struct.se_dev_stat_grps, [512 x i8], [512 x i8], ptr, %struct.se_lun, i32, i32, %struct.callback_head, i32, ptr }
%struct.semaphore = type { %struct.raw_spinlock, i32, %struct.list_head }
%struct.t10_wwn = type { [9 x i8], [17 x i8], [5 x i8], [254 x i8], i32, %struct.spinlock, ptr, %struct.config_group, %struct.list_head }
%struct.t10_alua = type { i16, i32, %struct.spinlock, i32, i32, %struct.list_head, %struct.spinlock, ptr, ptr, %struct.config_group, %struct.list_head }
%struct.t10_reservation = type { i32, i32, i32, %struct.spinlock, %struct.spinlock, ptr, %struct.list_head, %struct.list_head }
%struct.se_dev_attrib = type { i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, %struct.config_group }
%struct.se_dev_stat_grps = type { %struct.config_group, %struct.config_group, %struct.config_group, %struct.config_group }
%struct.se_lun = type { i64, i8, i8, i32, i16, %struct.atomic_t, ptr, %struct.list_head, %struct.spinlock, i32, i32, %struct.atomic_t, %struct.mutex, %struct.list_head, ptr, %struct.spinlock, ptr, %struct.scsi_port_stats, %struct.config_group, %struct.se_port_stat_grps, %struct.completion, %struct.percpu_ref, %struct.list_head, %struct.hlist_node, %struct.callback_head }
%struct.scsi_port_stats = type { %struct.atomic_t, %struct.atomic_t, %struct.atomic_t }
%struct.se_port_stat_grps = type { %struct.config_group, %struct.config_group, %struct.config_group, %struct.config_group }
%struct.se_hba = type { i16, i32, i32, i32, i32, ptr, %struct.list_head, %struct.spinlock, %struct.config_group, %struct.mutex, ptr }
%struct.se_wwn = type { ptr, ptr, %struct.config_group, %struct.config_group, %struct.config_group, i32 }
%struct.t10_vpd = type { [254 x i8], i32, i32, i32, i32, i32, %struct.list_head }
%struct.scsi_varlen_cdb_hdr = type { i8, i8, [5 x i8], i8, i16 }
%struct.target_backend_ops = type { [16 x i8], [16 x i8], [4 x i8], ptr, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.se_device_queue = type { %struct.list_head, %struct.spinlock, %struct.se_cmd_queue }
%struct.se_cmd_queue = type { %struct.llist_head, %struct.work_struct }
%struct.llist_head = type { ptr }
%struct.scatterlist = type { i32, i32, i32, i32, i32 }
%struct.se_tmr_req = type { i8, i8, i32, i64, ptr, ptr, ptr, %struct.list_head }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }

@__tpstrtab_target_sequencer_start = internal constant [23 x i8] c"target_sequencer_start\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_target_sequencer_start = dso_local global %struct.static_call_key { ptr @__traceiter_target_sequencer_start }, align 4
@__tracepoint_target_sequencer_start = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_target_sequencer_start, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_target_sequencer_start, ptr null, ptr @__traceiter_target_sequencer_start, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_target_sequencer_start = internal constant ptr @__tracepoint_target_sequencer_start, section "__tracepoints_ptrs", align 4
@__tpstrtab_target_cmd_complete = internal constant [20 x i8] c"target_cmd_complete\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_target_cmd_complete = dso_local global %struct.static_call_key { ptr @__traceiter_target_cmd_complete }, align 4
@__tracepoint_target_cmd_complete = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_target_cmd_complete, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_target_cmd_complete, ptr null, ptr @__traceiter_target_cmd_complete, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_target_cmd_complete = internal constant ptr @__tracepoint_target_cmd_complete, section "__tracepoints_ptrs", align 4
@str__target__trace_system_name = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"target\00", [25 x i8] zeroinitializer }, align 32
@trace_event_fields_target_sequencer_start = internal global { [9 x %struct.trace_event_fields], [40 x i8] } { [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.157, %union.anon.217 { %struct.anon.218 { ptr @.str.158, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.159, %union.anon.217 { %struct.anon.218 { ptr @.str.160, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.157, %union.anon.217 { %struct.anon.218 { ptr @.str.161, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.157, %union.anon.217 { %struct.anon.218 { ptr @.str.162, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.157, %union.anon.217 { %struct.anon.218 { ptr @.str.163, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.164, %union.anon.217 { %struct.anon.218 { ptr @.str.165, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.166, %union.anon.217 { %struct.anon.218 { ptr @.str.167, i32 32, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.217 { %struct.anon.218 { ptr @.str.169, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_target_sequencer_start = internal global %struct.trace_event_class { ptr @str__target__trace_system_name, ptr @trace_event_raw_event_target_sequencer_start, ptr @perf_trace_target_sequencer_start, ptr @trace_event_reg, ptr @trace_event_fields_target_sequencer_start, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_target_sequencer_start, i64 24), ptr getelementptr (i8, ptr @event_class_target_sequencer_start, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_target_sequencer_start = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_target_sequencer_start, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_target_sequencer_start = internal global { [2726 x i8], [698 x i8] } { [2726 x i8] c"\22%s -> LUN %03u tag %#llx %s data_length %6u  CDB %s  (TA:%s C:%02x)\22, __get_str(initiator), REC->unpacked_lun, REC->tag, __print_symbolic(REC->opcode, { 0x00, \22TEST_UNIT_READY\22 }, { 0x01, \22REZERO_UNIT\22 }, { 0x03, \22REQUEST_SENSE\22 }, { 0x04, \22FORMAT_UNIT\22 }, { 0x05, \22READ_BLOCK_LIMITS\22 }, { 0x07, \22REASSIGN_BLOCKS\22 }, { 0x07, \22INITIALIZE_ELEMENT_STATUS\22 }, { 0x08, \22READ_6\22 }, { 0x0a, \22WRITE_6\22 }, { 0x0b, \22SEEK_6\22 }, { 0x0f, \22READ_REVERSE\22 }, { 0x10, \22WRITE_FILEMARKS\22 }, { 0x11, \22SPACE\22 }, { 0x12, \22INQUIRY\22 }, { 0x14, \22RECOVER_BUFFERED_DATA\22 }, { 0x15, \22MODE_SELECT\22 }, { 0x16, \22RESERVE\22 }, { 0x17, \22RELEASE\22 }, { 0x18, \22COPY\22 }, { 0x19, \22ERASE\22 }, { 0x1a, \22MODE_SENSE\22 }, { 0x1b, \22START_STOP\22 }, { 0x1c, \22RECEIVE_DIAGNOSTIC\22 }, { 0x1d, \22SEND_DIAGNOSTIC\22 }, { 0x1e, \22ALLOW_MEDIUM_REMOVAL\22 }, { 0x24, \22SET_WINDOW\22 }, { 0x25, \22READ_CAPACITY\22 }, { 0x28, \22READ_10\22 }, { 0x2a, \22WRITE_10\22 }, { 0x2b, \22SEEK_10\22 }, { 0x2b, \22POSITION_TO_ELEMENT\22 }, { 0x2e, \22WRITE_VERIFY\22 }, { 0x2f, \22VERIFY\22 }, { 0x30, \22SEARCH_HIGH\22 }, { 0x31, \22SEARCH_EQUAL\22 }, { 0x32, \22SEARCH_LOW\22 }, { 0x33, \22SET_LIMITS\22 }, { 0x34, \22PRE_FETCH\22 }, { 0x34, \22READ_POSITION\22 }, { 0x35, \22SYNCHRONIZE_CACHE\22 }, { 0x36, \22LOCK_UNLOCK_CACHE\22 }, { 0x37, \22READ_DEFECT_DATA\22 }, { 0x38, \22MEDIUM_SCAN\22 }, { 0x39, \22COMPARE\22 }, { 0x3a, \22COPY_VERIFY\22 }, { 0x3b, \22WRITE_BUFFER\22 }, { 0x3c, \22READ_BUFFER\22 }, { 0x3d, \22UPDATE_BLOCK\22 }, { 0x3e, \22READ_LONG\22 }, { 0x3f, \22WRITE_LONG\22 }, { 0x40, \22CHANGE_DEFINITION\22 }, { 0x41, \22WRITE_SAME\22 }, { 0x42, \22UNMAP\22 }, { 0x43, \22READ_TOC\22 }, { 0x4c, \22LOG_SELECT\22 }, { 0x4d, \22LOG_SENSE\22 }, { 0x53, \22XDWRITEREAD_10\22 }, { 0x55, \22MODE_SELECT_10\22 }, { 0x56, \22RESERVE_10\22 }, { 0x57, \22RELEASE_10\22 }, { 0x5a, \22MODE_SENSE_10\22 }, { 0x5e, \22PERSISTENT_RESERVE_IN\22 }, { 0x5f, \22PERSISTENT_RESERVE_OUT\22 }, { 0x7f, \22VARIABLE_LENGTH_CMD\22 }, { 0xa0, \22REPORT_LUNS\22 }, { 0xa3, \22MAINTENANCE_IN\22 }, { 0xa4, \22MAINTENANCE_OUT\22 }, { 0xa5, \22MOVE_MEDIUM\22 }, { 0xa6, \22EXCHANGE_MEDIUM\22 }, { 0xa8, \22READ_12\22 }, { 0xaa, \22WRITE_12\22 }, { 0xae, \22WRITE_VERIFY_12\22 }, { 0xb0, \22SEARCH_HIGH_12\22 }, { 0xb1, \22SEARCH_EQUAL_12\22 }, { 0xb2, \22SEARCH_LOW_12\22 }, { 0xb8, \22READ_ELEMENT_STATUS\22 }, { 0xb6, \22SEND_VOLUME_TAG\22 }, { 0xea, \22WRITE_LONG_2\22 }, { 0x88, \22READ_16\22 }, { 0x8a, \22WRITE_16\22 }, { 0x8f, \22VERIFY_16\22 }, { 0x93, \22WRITE_SAME_16\22 }, { 0x9e, \22SERVICE_ACTION_IN_16\22 }, { 0x10, \22SAI_READ_CAPACITY_16\22 }, { 0x12, \22SAI_GET_LBA_STATUS\22 }, { 0x0a, \22MI_REPORT_TARGET_PGS\22 }, { 0x0a, \22MO_SET_TARGET_PGS\22 }, { 0x09, \22READ_32\22 }, { 0x0b, \22WRITE_32\22 }, { 0x0d, \22WRITE_SAME_32\22 }, { 0x85, \22ATA_16\22 }, { 0xa1, \22ATA_12\22 }), REC->data_length, __print_hex(REC->cdb, 16), __print_symbolic(REC->task_attribute, { 0x20, \22SIMPLE\22 }, { 0x21, \22HEAD\22 }, { 0x22, \22ORDERED\22 }, { 0x24, \22ACA\22 } ), REC->control\00", [698 x i8] zeroinitializer }, align 32
@event_target_sequencer_start = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_target_sequencer_start, %union.anon.219 { ptr @__tracepoint_target_sequencer_start }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_target_sequencer_start }, ptr @print_fmt_target_sequencer_start, ptr null, %union.anon.220 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_target_sequencer_start = internal global ptr @event_target_sequencer_start, section "_ftrace_events", align 4
@trace_event_fields_target_cmd_complete = internal global { [12 x %struct.trace_event_fields], [64 x i8] } { [12 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.157, %union.anon.217 { %struct.anon.218 { ptr @.str.158, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.159, %union.anon.217 { %struct.anon.218 { ptr @.str.160, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.157, %union.anon.217 { %struct.anon.218 { ptr @.str.161, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.157, %union.anon.217 { %struct.anon.218 { ptr @.str.162, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.157, %union.anon.217 { %struct.anon.218 { ptr @.str.163, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.164, %union.anon.217 { %struct.anon.218 { ptr @.str.165, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.164, %union.anon.217 { %struct.anon.218 { ptr @.str.268, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.164, %union.anon.217 { %struct.anon.218 { ptr @.str.269, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.166, %union.anon.217 { %struct.anon.218 { ptr @.str.167, i32 32, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.270, %union.anon.217 { %struct.anon.218 { ptr @.str.271, i32 18, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.168, %union.anon.217 { %struct.anon.218 { ptr @.str.169, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [64 x i8] zeroinitializer }, align 32
@event_class_target_cmd_complete = internal global %struct.trace_event_class { ptr @str__target__trace_system_name, ptr @trace_event_raw_event_target_cmd_complete, ptr @perf_trace_target_cmd_complete, ptr @trace_event_reg, ptr @trace_event_fields_target_cmd_complete, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_target_cmd_complete, i64 24), ptr getelementptr (i8, ptr @event_class_target_cmd_complete, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_target_cmd_complete = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_target_cmd_complete, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_target_cmd_complete = internal global { [3396 x i8], [860 x i8] } { [3396 x i8] c"\22%s <- LUN %03u tag %#llx status %s (sense len %d%s%s)  %s data_length %6u  CDB %s  (TA:%s C:%02x)\22, __get_str(initiator), REC->unpacked_lun, REC->tag, __print_symbolic(REC->scsi_status, { SAM_STAT_GOOD, \22GOOD\22 }, { SAM_STAT_CHECK_CONDITION, \22CHECK CONDITION\22 }, { SAM_STAT_CONDITION_MET, \22CONDITION MET\22 }, { SAM_STAT_BUSY, \22BUSY\22 }, { SAM_STAT_INTERMEDIATE, \22INTERMEDIATE\22 }, { SAM_STAT_INTERMEDIATE_CONDITION_MET, \22INTERMEDIATE CONDITION MET\22 }, { SAM_STAT_RESERVATION_CONFLICT, \22RESERVATION CONFLICT\22 }, { SAM_STAT_COMMAND_TERMINATED, \22COMMAND TERMINATED\22 }, { SAM_STAT_TASK_SET_FULL, \22TASK SET FULL\22 }, { SAM_STAT_ACA_ACTIVE, \22ACA ACTIVE\22 }, { SAM_STAT_TASK_ABORTED, \22TASK ABORTED\22 } ), REC->sense_length, REC->sense_length ? \22 / \22 : \22\22, __print_hex(REC->sense_data, REC->sense_length), __print_symbolic(REC->opcode, { 0x00, \22TEST_UNIT_READY\22 }, { 0x01, \22REZERO_UNIT\22 }, { 0x03, \22REQUEST_SENSE\22 }, { 0x04, \22FORMAT_UNIT\22 }, { 0x05, \22READ_BLOCK_LIMITS\22 }, { 0x07, \22REASSIGN_BLOCKS\22 }, { 0x07, \22INITIALIZE_ELEMENT_STATUS\22 }, { 0x08, \22READ_6\22 }, { 0x0a, \22WRITE_6\22 }, { 0x0b, \22SEEK_6\22 }, { 0x0f, \22READ_REVERSE\22 }, { 0x10, \22WRITE_FILEMARKS\22 }, { 0x11, \22SPACE\22 }, { 0x12, \22INQUIRY\22 }, { 0x14, \22RECOVER_BUFFERED_DATA\22 }, { 0x15, \22MODE_SELECT\22 }, { 0x16, \22RESERVE\22 }, { 0x17, \22RELEASE\22 }, { 0x18, \22COPY\22 }, { 0x19, \22ERASE\22 }, { 0x1a, \22MODE_SENSE\22 }, { 0x1b, \22START_STOP\22 }, { 0x1c, \22RECEIVE_DIAGNOSTIC\22 }, { 0x1d, \22SEND_DIAGNOSTIC\22 }, { 0x1e, \22ALLOW_MEDIUM_REMOVAL\22 }, { 0x24, \22SET_WINDOW\22 }, { 0x25, \22READ_CAPACITY\22 }, { 0x28, \22READ_10\22 }, { 0x2a, \22WRITE_10\22 }, { 0x2b, \22SEEK_10\22 }, { 0x2b, \22POSITION_TO_ELEMENT\22 }, { 0x2e, \22WRITE_VERIFY\22 }, { 0x2f, \22VERIFY\22 }, { 0x30, \22SEARCH_HIGH\22 }, { 0x31, \22SEARCH_EQUAL\22 }, { 0x32, \22SEARCH_LOW\22 }, { 0x33, \22SET_LIMITS\22 }, { 0x34, \22PRE_FETCH\22 }, { 0x34, \22READ_POSITION\22 }, { 0x35, \22SYNCHRONIZE_CACHE\22 }, { 0x36, \22LOCK_UNLOCK_CACHE\22 }, { 0x37, \22READ_DEFECT_DATA\22 }, { 0x38, \22MEDIUM_SCAN\22 }, { 0x39, \22COMPARE\22 }, { 0x3a, \22COPY_VERIFY\22 }, { 0x3b, \22WRITE_BUFFER\22 }, { 0x3c, \22READ_BUFFER\22 }, { 0x3d, \22UPDATE_BLOCK\22 }, { 0x3e, \22READ_LONG\22 }, { 0x3f, \22WRITE_LONG\22 }, { 0x40, \22CHANGE_DEFINITION\22 }, { 0x41, \22WRITE_SAME\22 }, { 0x42, \22UNMAP\22 }, { 0x43, \22READ_TOC\22 }, { 0x4c, \22LOG_SELECT\22 }, { 0x4d, \22LOG_SENSE\22 }, { 0x53, \22XDWRITEREAD_10\22 }, { 0x55, \22MODE_SELECT_10\22 }, { 0x56, \22RESERVE_10\22 }, { 0x57, \22RELEASE_10\22 }, { 0x5a, \22MODE_SENSE_10\22 }, { 0x5e, \22PERSISTENT_RESERVE_IN\22 }, { 0x5f, \22PERSISTENT_RESERVE_OUT\22 }, { 0x7f, \22VARIABLE_LENGTH_CMD\22 }, { 0xa0, \22REPORT_LUNS\22 }, { 0xa3, \22MAINTENANCE_IN\22 }, { 0xa4, \22MAINTENANCE_OUT\22 }, { 0xa5, \22MOVE_MEDIUM\22 }, { 0xa6, \22EXCHANGE_MEDIUM\22 }, { 0xa8, \22READ_12\22 }, { 0xaa, \22WRITE_12\22 }, { 0xae, \22WRITE_VERIFY_12\22 }, { 0xb0, \22SEARCH_HIGH_12\22 }, { 0xb1, \22SEARCH_EQUAL_12\22 }, { 0xb2, \22SEARCH_LOW_12\22 }, { 0xb8, \22READ_ELEMENT_STATUS\22 }, { 0xb6, \22SEND_VOLUME_TAG\22 }, { 0xea, \22WRITE_LONG_2\22 }, { 0x88, \22READ_16\22 }, { 0x8a, \22WRITE_16\22 }, { 0x8f, \22VERIFY_16\22 }, { 0x93, \22WRITE_SAME_16\22 }, { 0x9e, \22SERVICE_ACTION_IN_16\22 }, { 0x10, \22SAI_READ_CAPACITY_16\22 }, { 0x12, \22SAI_GET_LBA_STATUS\22 }, { 0x0a, \22MI_REPORT_TARGET_PGS\22 }, { 0x0a, \22MO_SET_TARGET_PGS\22 }, { 0x09, \22READ_32\22 }, { 0x0b, \22WRITE_32\22 }, { 0x0d, \22WRITE_SAME_32\22 }, { 0x85, \22ATA_16\22 }, { 0xa1, \22ATA_12\22 }), REC->data_length, __print_hex(REC->cdb, 16), __print_symbolic(REC->task_attribute, { 0x20, \22SIMPLE\22 }, { 0x21, \22HEAD\22 }, { 0x22, \22ORDERED\22 }, { 0x24, \22ACA\22 } ), REC->control\00", [860 x i8] zeroinitializer }, align 32
@event_target_cmd_complete = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_target_cmd_complete, %union.anon.219 { ptr @__tracepoint_target_cmd_complete }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_target_cmd_complete }, ptr @print_fmt_target_cmd_complete, ptr null, %union.anon.220 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_target_cmd_complete = internal global ptr @event_target_cmd_complete, section "_ftrace_events", align 4
@__bpf_trace_tp_map_target_sequencer_start = internal global %union.anon.221 { %struct.bpf_raw_event_map { ptr @__tracepoint_target_sequencer_start, ptr @__bpf_trace_target_sequencer_start, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_target_cmd_complete = internal global %union.anon.222 { %struct.bpf_raw_event_map { ptr @__tracepoint_target_cmd_complete, ptr @__bpf_trace_target_cmd_complete, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@.str = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"se_sess_cache\00", [18 x i8] zeroinitializer }, align 32
@se_sess_cache = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@init_se_kmem_caches._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1, ptr @.str.2, ptr @.str.3, i32 67, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\013kmem_cache_create() for struct se_session failed\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"init_se_kmem_caches\00", [44 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"drivers/target/target_core_transport.c\00", [57 x i8] zeroinitializer }, align 32
@init_se_kmem_caches._entry_ptr = internal global ptr @init_se_kmem_caches._entry, section ".printk_index", align 4
@.str.4 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"se_ua_cache\00", [20 x i8] zeroinitializer }, align 32
@se_ua_cache = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@init_se_kmem_caches._entry.5 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.6, ptr @.str.2, ptr @.str.3, i32 74, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"\013kmem_cache_create() for struct se_ua failed\0A\00", [49 x i8] zeroinitializer }, align 32
@init_se_kmem_caches._entry_ptr.7 = internal global ptr @init_se_kmem_caches._entry.5, section ".printk_index", align 4
@.str.8 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"t10_pr_reg_cache\00", [47 x i8] zeroinitializer }, align 32
@t10_pr_reg_cache = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@init_se_kmem_caches._entry.9 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.10, ptr @.str.2, ptr @.str.3, i32 82, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\013kmem_cache_create() for struct t10_pr_registration failed\0A\00", [35 x i8] zeroinitializer }, align 32
@init_se_kmem_caches._entry_ptr.11 = internal global ptr @init_se_kmem_caches._entry.9, section ".printk_index", align 4
@.str.12 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"t10_alua_lu_gp_cache\00", [43 x i8] zeroinitializer }, align 32
@t10_alua_lu_gp_cache = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@init_se_kmem_caches._entry.13 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.14, ptr @.str.2, ptr @.str.3, i32 90, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"\013kmem_cache_create() for t10_alua_lu_gp_cache failed\0A\00", [41 x i8] zeroinitializer }, align 32
@init_se_kmem_caches._entry_ptr.15 = internal global ptr @init_se_kmem_caches._entry.13, section ".printk_index", align 4
@.str.16 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"t10_alua_lu_gp_mem_cache\00", [39 x i8] zeroinitializer }, align 32
@t10_alua_lu_gp_mem_cache = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@init_se_kmem_caches._entry.17 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.18, ptr @.str.2, ptr @.str.3, i32 98, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013kmem_cache_create() for t10_alua_lu_gp_mem_cache failed\0A\00", [37 x i8] zeroinitializer }, align 32
@init_se_kmem_caches._entry_ptr.19 = internal global ptr @init_se_kmem_caches._entry.17, section ".printk_index", align 4
@.str.20 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"t10_alua_tg_pt_gp_cache\00", [40 x i8] zeroinitializer }, align 32
@t10_alua_tg_pt_gp_cache = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@init_se_kmem_caches._entry.21 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.22, ptr @.str.2, ptr @.str.3, i32 106, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"\013kmem_cache_create() for t10_alua_tg_pt_gp_cache failed\0A\00", [38 x i8] zeroinitializer }, align 32
@init_se_kmem_caches._entry_ptr.23 = internal global ptr @init_se_kmem_caches._entry.21, section ".printk_index", align 4
@.str.24 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"t10_alua_lba_map_cache\00", [41 x i8] zeroinitializer }, align 32
@t10_alua_lba_map_cache = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@init_se_kmem_caches._entry.25 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.26, ptr @.str.2, ptr @.str.3, i32 115, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\013kmem_cache_create() for t10_alua_lba_map_cache failed\0A\00", [39 x i8] zeroinitializer }, align 32
@init_se_kmem_caches._entry_ptr.27 = internal global ptr @init_se_kmem_caches._entry.25, section ".printk_index", align 4
@.str.28 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"t10_alua_lba_map_mem_cache\00", [37 x i8] zeroinitializer }, align 32
@t10_alua_lba_map_mem_cache = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@init_se_kmem_caches._entry.29 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.30, ptr @.str.2, ptr @.str.3, i32 124, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\013kmem_cache_create() for t10_alua_lba_map_mem_cache failed\0A\00", [35 x i8] zeroinitializer }, align 32
@init_se_kmem_caches._entry_ptr.31 = internal global ptr @init_se_kmem_caches._entry.29, section ".printk_index", align 4
@.str.32 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"target_completion\00", [46 x i8] zeroinitializer }, align 32
@target_completion_wq = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@.str.33 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"target_submission\00", [46 x i8] zeroinitializer }, align 32
@target_submission_wq = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@scsi_mib_index_lock = internal global { %struct.spinlock, [52 x i8] } { %struct.spinlock { %union.anon.0 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.288, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, [52 x i8] zeroinitializer }, align 32
@scsi_mib_index = internal global { [2 x i32], [24 x i8] } zeroinitializer, align 32
@transport_subsystem_check_init.sub_api_initialized = internal global { i1, [31 x i8] } zeroinitializer, align 32
@.str.34 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"target_core_iblock\00", [45 x i8] zeroinitializer }, align 32
@transport_subsystem_check_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.35, ptr @.str.36, ptr @.str.3, i32 206, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\013Unable to load target_core_iblock\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"transport_subsystem_check_init\00", [33 x i8] zeroinitializer }, align 32
@transport_subsystem_check_init._entry_ptr = internal global ptr @transport_subsystem_check_init._entry, section ".printk_index", align 4
@.str.37 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"target_core_file\00", [47 x i8] zeroinitializer }, align 32
@transport_subsystem_check_init._entry.38 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.39, ptr @.str.36, ptr @.str.3, i32 210, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"\013Unable to load target_core_file\0A\00", [61 x i8] zeroinitializer }, align 32
@transport_subsystem_check_init._entry_ptr.40 = internal global ptr @transport_subsystem_check_init._entry.38, section ".printk_index", align 4
@.str.41 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"target_core_pscsi\00", [46 x i8] zeroinitializer }, align 32
@transport_subsystem_check_init._entry.42 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.43, ptr @.str.36, ptr @.str.3, i32 214, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"\013Unable to load target_core_pscsi\0A\00", [60 x i8] zeroinitializer }, align 32
@transport_subsystem_check_init._entry_ptr.44 = internal global ptr @transport_subsystem_check_init._entry.42, section ".printk_index", align 4
@.str.45 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"target_core_user\00", [47 x i8] zeroinitializer }, align 32
@transport_subsystem_check_init._entry.46 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.47, ptr @.str.36, ptr @.str.3, i32 218, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"\013Unable to load target_core_user\0A\00", [61 x i8] zeroinitializer }, align 32
@transport_subsystem_check_init._entry_ptr.48 = internal global ptr @transport_subsystem_check_init._entry.46, section ".printk_index", align 4
@transport_init_session.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.49 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"&se_sess->sess_cmd_lock\00", [40 x i8] zeroinitializer }, align 32
@transport_init_session.__key.50 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.51 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"&se_sess->cmd_count_wq\00", [41 x i8] zeroinitializer }, align 32
@__kstrtab_transport_init_session = external dso_local constant [0 x i8], align 1
@__kstrtabns_transport_init_session = external dso_local constant [0 x i8], align 1
@__ksymtab_transport_init_session = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @transport_init_session to i32), ptr @__kstrtab_transport_init_session, ptr @__kstrtabns_transport_init_session }, section "___ksymtab+transport_init_session", align 4
@transport_alloc_session._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.52, ptr @.str.53, ptr @.str.3, i32 274, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013Unable to allocate struct se_session from se_sess_cache\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"transport_alloc_session\00", [40 x i8] zeroinitializer }, align 32
@transport_alloc_session._entry_ptr = internal global ptr @transport_alloc_session._entry, section ".printk_index", align 4
@__kstrtab_transport_alloc_session = external dso_local constant [0 x i8], align 1
@__kstrtabns_transport_alloc_session = external dso_local constant [0 x i8], align 1
@__ksymtab_transport_alloc_session = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @transport_alloc_session to i32), ptr @__kstrtab_transport_alloc_session, ptr @__kstrtabns_transport_alloc_session }, section "___ksymtab+transport_alloc_session", align 4
@transport_alloc_session_tags._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.54, ptr @.str.55, ptr @.str.3, i32 303, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\013Unable to allocate se_sess->sess_cmd_map\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"transport_alloc_session_tags\00", [35 x i8] zeroinitializer }, align 32
@transport_alloc_session_tags._entry_ptr = internal global ptr @transport_alloc_session_tags._entry, section ".printk_index", align 4
@transport_alloc_session_tags._entry.56 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.57, ptr @.str.55, ptr @.str.3, i32 311, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\013Unable to init se_sess->sess_tag_pool, tag_num: %u\0A\00", [42 x i8] zeroinitializer }, align 32
@transport_alloc_session_tags._entry_ptr.58 = internal global ptr @transport_alloc_session_tags._entry.56, section ".printk_index", align 4
@__kstrtab_transport_alloc_session_tags = external dso_local constant [0 x i8], align 1
@__kstrtabns_transport_alloc_session_tags = external dso_local constant [0 x i8], align 1
@__ksymtab_transport_alloc_session_tags = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @transport_alloc_session_tags to i32), ptr @__kstrtab_transport_alloc_session_tags, ptr @__kstrtabns_transport_alloc_session_tags }, section "___ksymtab+transport_alloc_session_tags", align 4
@__transport_register_session.__UNIQUE_ID_ddebug657 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.60, ptr @.str.3, ptr @.str.61, i8 0, i8 105, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.59 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"target_core_mod\00", [16 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"__transport_register_session\00", [35 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"TARGET_CORE[%s]: Registered fabric_sess_ptr: %p\0A\00", [47 x i8] zeroinitializer }, align 32
@__kstrtab___transport_register_session = external dso_local constant [0 x i8], align 1
@__kstrtabns___transport_register_session = external dso_local constant [0 x i8], align 1
@__ksymtab___transport_register_session = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__transport_register_session to i32), ptr @__kstrtab___transport_register_session, ptr @__kstrtabns___transport_register_session }, section "___ksymtab+__transport_register_session", align 4
@__kstrtab_transport_register_session = external dso_local constant [0 x i8], align 1
@__kstrtabns_transport_register_session = external dso_local constant [0 x i8], align 1
@__ksymtab_transport_register_session = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @transport_register_session to i32), ptr @__kstrtab_transport_register_session, ptr @__kstrtabns_transport_register_session }, section "___ksymtab+transport_register_session", align 4
@__kstrtab_target_setup_session = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_setup_session = external dso_local constant [0 x i8], align 1
@__ksymtab_target_setup_session = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_setup_session to i32), ptr @__kstrtab_target_setup_session, ptr @__kstrtabns_target_setup_session }, section "___ksymtab+target_setup_session", align 4
@.str.62 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%s\0A\00", [28 x i8] zeroinitializer }, align 32
@__kstrtab_target_show_dynamic_sessions = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_show_dynamic_sessions = external dso_local constant [0 x i8], align 1
@__ksymtab_target_show_dynamic_sessions = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_show_dynamic_sessions to i32), ptr @__kstrtab_target_show_dynamic_sessions, ptr @__kstrtabns_target_show_dynamic_sessions }, section "___ksymtab+target_show_dynamic_sessions", align 4
@__kstrtab_target_put_nacl = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_put_nacl = external dso_local constant [0 x i8], align 1
@__ksymtab_target_put_nacl = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_put_nacl to i32), ptr @__kstrtab_target_put_nacl, ptr @__kstrtabns_target_put_nacl }, section "___ksymtab+target_put_nacl", align 4
@__kstrtab_transport_deregister_session_configfs = external dso_local constant [0 x i8], align 1
@__kstrtabns_transport_deregister_session_configfs = external dso_local constant [0 x i8], align 1
@__ksymtab_transport_deregister_session_configfs = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @transport_deregister_session_configfs to i32), ptr @__kstrtab_transport_deregister_session_configfs, ptr @__kstrtabns_transport_deregister_session_configfs }, section "___ksymtab+transport_deregister_session_configfs", align 4
@__kstrtab_transport_free_session = external dso_local constant [0 x i8], align 1
@__kstrtabns_transport_free_session = external dso_local constant [0 x i8], align 1
@__ksymtab_transport_free_session = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @transport_free_session to i32), ptr @__kstrtab_transport_free_session, ptr @__kstrtabns_transport_free_session }, section "___ksymtab+transport_free_session", align 4
@transport_deregister_session.__UNIQUE_ID_ddebug658 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.63, ptr @.str.3, ptr @.str.64, i8 0, i8 -96, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.63 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"transport_deregister_session\00", [35 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"TARGET_CORE[%s]: Deregistered fabric_sess\0A\00", [53 x i8] zeroinitializer }, align 32
@__kstrtab_transport_deregister_session = external dso_local constant [0 x i8], align 1
@__kstrtabns_transport_deregister_session = external dso_local constant [0 x i8], align 1
@__ksymtab_transport_deregister_session = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @transport_deregister_session to i32), ptr @__kstrtab_transport_deregister_session, ptr @__kstrtabns_transport_deregister_session }, section "___ksymtab+transport_deregister_session", align 4
@__kstrtab_target_remove_session = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_remove_session = external dso_local constant [0 x i8], align 1
@__ksymtab_target_remove_session = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_remove_session to i32), ptr @__kstrtab_target_remove_session, ptr @__kstrtabns_target_remove_session }, section "___ksymtab+target_remove_session", align 4
@__kstrtab_transport_copy_sense_to_cmd = external dso_local constant [0 x i8], align 1
@__kstrtabns_transport_copy_sense_to_cmd = external dso_local constant [0 x i8], align 1
@__ksymtab_transport_copy_sense_to_cmd = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @transport_copy_sense_to_cmd to i32), ptr @__kstrtab_transport_copy_sense_to_cmd, ptr @__kstrtabns_transport_copy_sense_to_cmd }, section "___ksymtab+transport_copy_sense_to_cmd", align 4
@target_complete_cmd_with_sense.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.65 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"(work_completion)(&cmd->work)\00", [34 x i8] zeroinitializer }, align 32
@__kstrtab_target_complete_cmd_with_sense = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_complete_cmd_with_sense = external dso_local constant [0 x i8], align 1
@__ksymtab_target_complete_cmd_with_sense = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_complete_cmd_with_sense to i32), ptr @__kstrtab_target_complete_cmd_with_sense, ptr @__kstrtabns_target_complete_cmd_with_sense }, section "___ksymtab+target_complete_cmd_with_sense", align 4
@__kstrtab_target_complete_cmd = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_complete_cmd = external dso_local constant [0 x i8], align 1
@__ksymtab_target_complete_cmd = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_complete_cmd to i32), ptr @__kstrtab_target_complete_cmd, ptr @__kstrtabns_target_complete_cmd }, section "___ksymtab+target_complete_cmd", align 4
@__kstrtab_target_set_cmd_data_length = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_set_cmd_data_length = external dso_local constant [0 x i8], align 1
@__ksymtab_target_set_cmd_data_length = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_set_cmd_data_length to i32), ptr @__kstrtab_target_set_cmd_data_length, ptr @__kstrtabns_target_set_cmd_data_length }, section "___ksymtab+target_set_cmd_data_length", align 4
@__kstrtab_target_complete_cmd_with_length = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_complete_cmd_with_length = external dso_local constant [0 x i8], align 1
@__ksymtab_target_complete_cmd_with_length = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_complete_cmd_with_length to i32), ptr @__kstrtab_target_complete_cmd_with_length, ptr @__kstrtabns_target_complete_cmd_with_length }, section "___ksymtab+target_complete_cmd_with_length", align 4
@target_qf_do_work.__UNIQUE_ID_ddebug663 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.66, ptr @.str.3, ptr @.str.67, i8 0, i8 -9, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.66 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"target_qf_do_work\00", [46 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"Processing %s cmd: %p QUEUE_FULL in work queue context: %s\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"COMPLETE_OK\00", [20 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"WRITE_PENDING\00", [18 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"UNKNOWN\00", [24 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"NONE\00", [27 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"READ\00", [27 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"WRITE\00", [26 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"BIDI\00", [27 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Status: \00", [23 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ACTIVATED\00", [22 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"DEACTIVATED\00", [20 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"  Max Queue Depth: %d\00", [42 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"  SectorSize: %u  HwMaxSectors: %u\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"        \00", [23 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"T10 VPD Protocol Identifier: \00", [34 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Fibre Channel\0A\00", [17 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"Parallel SCSI\0A\00", [17 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"SSA\0A\00", [27 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"IEEE 1394\0A\00", [21 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"SCSI Remote Direct Memory Access Protocol\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Internet SCSI (iSCSI)\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"SAS Serial SCSI Protocol\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"Automation/Drive Interface Transport Protocol\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"AT Attachment Interface ATA/ATAPI\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Unknown 0x%02x\0A\00", [16 x i8] zeroinitializer }, align 32
@transport_dump_vpd_proto_id.__UNIQUE_ID_ddebug664 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.92, ptr @.str.3, ptr @.str.93, i8 1, i8 15, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.92 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"transport_dump_vpd_proto_id\00", [36 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"%s\00", [29 x i8] zeroinitializer }, align 32
@__kstrtab_transport_set_vpd_proto_id = external dso_local constant [0 x i8], align 1
@__kstrtabns_transport_set_vpd_proto_id = external dso_local constant [0 x i8], align 1
@__ksymtab_transport_set_vpd_proto_id = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @transport_set_vpd_proto_id to i32), ptr @__kstrtab_transport_set_vpd_proto_id, ptr @__kstrtabns_transport_set_vpd_proto_id }, section "___ksymtab+transport_set_vpd_proto_id", align 4
@.str.94 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"T10 VPD Identifier Association: \00", [63 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"addressed logical unit\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"target port\0A\00", [19 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"SCSI target device\0A\00", [44 x i8] zeroinitializer }, align 32
@transport_dump_vpd_assoc.__UNIQUE_ID_ddebug665 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.98, ptr @.str.3, ptr @.str.93, i8 1, i8 27, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.98 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"transport_dump_vpd_assoc\00", [39 x i8] zeroinitializer }, align 32
@__kstrtab_transport_set_vpd_assoc = external dso_local constant [0 x i8], align 1
@__kstrtabns_transport_set_vpd_assoc = external dso_local constant [0 x i8], align 1
@__ksymtab_transport_set_vpd_assoc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @transport_set_vpd_assoc to i32), ptr @__kstrtab_transport_set_vpd_assoc, ptr @__kstrtabns_transport_set_vpd_assoc }, section "___ksymtab+transport_set_vpd_assoc", align 4
@.str.99 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"T10 VPD Identifier Type: \00", [38 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Vendor specific\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"T10 Vendor ID based\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"EUI-64 based\0A\00", [18 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"NAA\0A\00", [27 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Relative target port identifier\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"SCSI name string\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Unsupported: 0x%02x\0A\00", [43 x i8] zeroinitializer }, align 32
@transport_dump_vpd_ident_type.__UNIQUE_ID_ddebug666 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.107, ptr @.str.3, ptr @.str.93, i8 1, i8 42, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.107 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"transport_dump_vpd_ident_type\00", [34 x i8] zeroinitializer }, align 32
@__kstrtab_transport_set_vpd_ident_type = external dso_local constant [0 x i8], align 1
@__kstrtabns_transport_set_vpd_ident_type = external dso_local constant [0 x i8], align 1
@__ksymtab_transport_set_vpd_ident_type = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @transport_set_vpd_ident_type to i32), ptr @__kstrtab_transport_set_vpd_ident_type, ptr @__kstrtabns_transport_set_vpd_ident_type }, section "___ksymtab+transport_set_vpd_ident_type", align 4
@.str.108 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"T10 VPD Binary Device Identifier: %s\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"T10 VPD ASCII Device Identifier: %s\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"T10 VPD UTF-8 Device Identifier: %s\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"T10 VPD Device Identifier encoding unsupported: 0x%02x\00", [41 x i8] zeroinitializer }, align 32
@transport_dump_vpd_ident.__UNIQUE_ID_ddebug667 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.112, ptr @.str.3, ptr @.str.93, i8 1, i8 56, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.112 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"transport_dump_vpd_ident\00", [39 x i8] zeroinitializer }, align 32
@transport_set_vpd_ident.hex_str = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"0123456789abcdef\00", [47 x i8] zeroinitializer }, align 32
@__kstrtab_transport_set_vpd_ident = external dso_local constant [0 x i8], align 1
@__kstrtabns_transport_set_vpd_ident = external dso_local constant [0 x i8], align 1
@__ksymtab_transport_set_vpd_ident = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @transport_set_vpd_ident to i32), ptr @__kstrtab_transport_set_vpd_ident, ptr @__kstrtabns_transport_set_vpd_ident }, section "___ksymtab+transport_set_vpd_ident", align 4
@target_cmd_size_check._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.113, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"_rs.lock\00", [23 x i8] zeroinitializer }, align 32
@__func__.target_cmd_size_check = private unnamed_addr constant [22 x i8] c"target_cmd_size_check\00", align 1
@target_cmd_size_check._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.114, ptr @__func__.target_cmd_size_check, ptr @.str.3, i32 1363, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [107 x i8], [53 x i8] } { [107 x i8] c"\014TARGET_CORE[%s]: Expected Transfer Length: %u does not match SCSI CDB Length: %u for SAM Opcode: 0x%02x\0A\00", [53 x i8] zeroinitializer }, align 32
@target_cmd_size_check._entry_ptr = internal global ptr @target_cmd_size_check._entry, section ".printk_index", align 4
@target_cmd_size_check._rs.115 = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.113, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@target_cmd_size_check._entry.116 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.117, ptr @__func__.target_cmd_size_check, ptr @.str.3, i32 1388, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\013Rejecting underflow/overflow for WRITE data CDB\0A\00", [45 x i8] zeroinitializer }, align 32
@target_cmd_size_check._entry_ptr.118 = internal global ptr @target_cmd_size_check._entry.116, section ".printk_index", align 4
@target_cmd_size_check._rs.119 = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.113, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@target_cmd_size_check._entry.120 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.121, ptr @__func__.target_cmd_size_check, ptr @.str.3, i32 1399, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\013Rejecting overflow for WRITE control CDB\0A\00", [52 x i8] zeroinitializer }, align 32
@target_cmd_size_check._entry_ptr.122 = internal global ptr @target_cmd_size_check._entry.120, section ".printk_index", align 4
@__target_init_cmd.__key = internal global %struct.lock_class_key zeroinitializer, align 4
@.str.123 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"&cmd->t_state_lock\00", [45 x i8] zeroinitializer }, align 32
@__target_init_cmd.__key.124 = internal global %struct.lock_class_key zeroinitializer, align 4
@__kstrtab___target_init_cmd = external dso_local constant [0 x i8], align 1
@__kstrtabns___target_init_cmd = external dso_local constant [0 x i8], align 1
@__ksymtab___target_init_cmd = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @__target_init_cmd to i32), ptr @__kstrtab___target_init_cmd, ptr @__kstrtabns___target_init_cmd }, section "___ksymtab+__target_init_cmd", align 4
@target_cmd_init_cdb._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.125, ptr @.str.126, ptr @.str.3, i32 1483, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [85 x i8], [43 x i8] } { [85 x i8] c"\013Received SCSI CDB with command_size: %d that exceeds SCSI_MAX_VARLEN_CDB_SIZE: %d\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"target_cmd_init_cdb\00", [44 x i8] zeroinitializer }, align 32
@target_cmd_init_cdb._entry_ptr = internal global ptr @target_cmd_init_cdb._entry, section ".printk_index", align 4
@target_cmd_init_cdb._entry.127 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.128, ptr @.str.126, ptr @.str.3, i32 1498, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [78 x i8], [50 x i8] } { [78 x i8] c"\013Unable to allocate cmd->t_task_cdb %u > sizeof(cmd->__t_task_cdb): %lu ops\0A\00", [50 x i8] zeroinitializer }, align 32
@target_cmd_init_cdb._entry_ptr.129 = internal global ptr @target_cmd_init_cdb._entry.127, section ".printk_index", align 4
@__kstrtab_target_cmd_init_cdb = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_cmd_init_cdb = external dso_local constant [0 x i8], align 1
@__ksymtab_target_cmd_init_cdb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_cmd_init_cdb to i32), ptr @__kstrtab_target_cmd_init_cdb, ptr @__kstrtabns_target_cmd_init_cdb }, section "___ksymtab+target_cmd_init_cdb", align 4
@target_cmd_parse_cdb._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.113, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@target_cmd_parse_cdb.descriptor = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.130, ptr @.str.3, ptr @.str.131, i8 1, i8 127, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.130 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"target_cmd_parse_cdb\00", [43 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"%s/%s: Unsupported SCSI Opcode 0x%02x, sending CHECK_CONDITION.\0A\00", [63 x i8] zeroinitializer }, align 32
@__kstrtab_target_cmd_parse_cdb = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_cmd_parse_cdb = external dso_local constant [0 x i8], align 1
@__ksymtab_target_cmd_parse_cdb = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_cmd_parse_cdb to i32), ptr @__kstrtab_target_cmd_parse_cdb, ptr @__kstrtabns_target_cmd_parse_cdb }, section "___ksymtab+target_cmd_parse_cdb", align 4
@transport_handle_cdb_direct._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.132, ptr @.str.133, ptr @.str.3, i32 1560, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"\013cmd->se_lun is NULL\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"transport_handle_cdb_direct\00", [36 x i8] zeroinitializer }, align 32
@transport_handle_cdb_direct._entry_ptr = internal global ptr @transport_handle_cdb_direct._entry, section ".printk_index", align 4
@__kstrtab_transport_handle_cdb_direct = external dso_local constant [0 x i8], align 1
@__kstrtabns_transport_handle_cdb_direct = external dso_local constant [0 x i8], align 1
@__ksymtab_transport_handle_cdb_direct = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @transport_handle_cdb_direct to i32), ptr @__kstrtab_transport_handle_cdb_direct, ptr @__kstrtabns_transport_handle_cdb_direct }, section "___ksymtab+transport_handle_cdb_direct", align 4
@transport_generic_map_mem_to_cmd._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.134, ptr @.str.135, ptr @.str.3, i32 1601, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [83 x i8], [45 x i8] } { [83 x i8] c"\014Rejecting SCSI DATA overflow for fabric using SCF_PASSTHROUGH_SG_TO_MEM_NOALLOC\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"transport_generic_map_mem_to_cmd\00", [63 x i8] zeroinitializer }, align 32
@transport_generic_map_mem_to_cmd._entry_ptr = internal global ptr @transport_generic_map_mem_to_cmd._entry, section ".printk_index", align 4
@__kstrtab_target_init_cmd = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_init_cmd = external dso_local constant [0 x i8], align 1
@__ksymtab_target_init_cmd = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_init_cmd to i32), ptr @__kstrtab_target_init_cmd, ptr @__kstrtabns_target_init_cmd }, section "___ksymtab_gpl+target_init_cmd", align 4
@__kstrtab_target_submit_prep = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_submit_prep = external dso_local constant [0 x i8], align 1
@__ksymtab_target_submit_prep = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_submit_prep to i32), ptr @__kstrtab_target_submit_prep, ptr @__kstrtabns_target_submit_prep }, section "___ksymtab_gpl+target_submit_prep", align 4
@__kstrtab_target_submit = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_submit = external dso_local constant [0 x i8], align 1
@__ksymtab_target_submit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_submit to i32), ptr @__kstrtab_target_submit, ptr @__kstrtabns_target_submit }, section "___ksymtab_gpl+target_submit", align 4
@.str.136 = internal constant { [106 x i8], [54 x i8] } { [106 x i8] c"Invalid target_submit_cmd use. Driver must not use target_stop_session or call target_init_cmd directly.\0A\00", [54 x i8] zeroinitializer }, align 32
@__kstrtab_target_submit_cmd = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_submit_cmd = external dso_local constant [0 x i8], align 1
@__ksymtab_target_submit_cmd = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_submit_cmd to i32), ptr @__kstrtab_target_submit_cmd, ptr @__kstrtabns_target_submit_cmd }, section "___ksymtab+target_submit_cmd", align 4
@__kstrtab_target_queue_submission = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_queue_submission = external dso_local constant [0 x i8], align 1
@__ksymtab_target_queue_submission = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_queue_submission to i32), ptr @__kstrtab_target_queue_submission, ptr @__kstrtabns_target_queue_submission }, section "___ksymtab_gpl+target_queue_submission", align 4
@target_submit_tmr.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.137 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"(work_completion)(&se_cmd->work)\00", [63 x i8] zeroinitializer }, align 32
@__kstrtab_target_submit_tmr = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_submit_tmr = external dso_local constant [0 x i8], align 1
@__ksymtab_target_submit_tmr = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_submit_tmr to i32), ptr @__kstrtab_target_submit_tmr, ptr @__kstrtabns_target_submit_tmr }, section "___ksymtab+target_submit_tmr", align 4
@transport_generic_request_failure.__UNIQUE_ID_ddebug671 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.138, ptr @.str.3, ptr @.str.139, i8 1, i8 -12, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.138 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"transport_generic_request_failure\00", [62 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"-----[ Storage Engine Exception; sense_reason %d\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"-----[ \00", [24 x i8] zeroinitializer }, align 32
@transport_generic_request_failure.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@transport_generic_request_failure._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.141, ptr @.str.138, ptr @.str.3, i32 2077, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\013Unknown transport error for CDB 0x%02x: %d\0A\00", [50 x i8] zeroinitializer }, align 32
@transport_generic_request_failure._entry_ptr = internal global ptr @transport_generic_request_failure._entry, section ".printk_index", align 4
@__kstrtab_transport_generic_request_failure = external dso_local constant [0 x i8], align 1
@__kstrtabns_transport_generic_request_failure = external dso_local constant [0 x i8], align 1
@__ksymtab_transport_generic_request_failure = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @transport_generic_request_failure to i32), ptr @__kstrtab_transport_generic_request_failure, ptr @__kstrtabns_transport_generic_request_failure }, section "___ksymtab+transport_generic_request_failure", align 4
@__kstrtab_target_execute_cmd = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_execute_cmd = external dso_local constant [0 x i8], align 1
@__ksymtab_target_execute_cmd = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_execute_cmd to i32), ptr @__kstrtab_target_execute_cmd, ptr @__kstrtabns_target_execute_cmd }, section "___ksymtab+target_execute_cmd", align 4
@__kstrtab_target_free_sgl = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_free_sgl = external dso_local constant [0 x i8], align 1
@__ksymtab_target_free_sgl = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_free_sgl to i32), ptr @__kstrtab_target_free_sgl, ptr @__kstrtabns_target_free_sgl }, section "___ksymtab+target_free_sgl", align 4
@pgprot_kernel = external dso_local local_unnamed_addr global i32, align 4
@__kstrtab_transport_kmap_data_sg = external dso_local constant [0 x i8], align 1
@__kstrtabns_transport_kmap_data_sg = external dso_local constant [0 x i8], align 1
@__ksymtab_transport_kmap_data_sg = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @transport_kmap_data_sg to i32), ptr @__kstrtab_transport_kmap_data_sg, ptr @__kstrtabns_transport_kmap_data_sg }, section "___ksymtab+transport_kmap_data_sg", align 4
@__kstrtab_transport_kunmap_data_sg = external dso_local constant [0 x i8], align 1
@__kstrtabns_transport_kunmap_data_sg = external dso_local constant [0 x i8], align 1
@__ksymtab_transport_kunmap_data_sg = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @transport_kunmap_data_sg to i32), ptr @__kstrtab_transport_kunmap_data_sg, ptr @__kstrtabns_transport_kunmap_data_sg }, section "___ksymtab+transport_kunmap_data_sg", align 4
@__kstrtab_target_alloc_sgl = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_alloc_sgl = external dso_local constant [0 x i8], align 1
@__ksymtab_target_alloc_sgl = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_alloc_sgl to i32), ptr @__kstrtab_target_alloc_sgl, ptr @__kstrtabns_target_alloc_sgl }, section "___ksymtab+target_alloc_sgl", align 4
@transport_generic_new_cmd.__UNIQUE_ID_ddebug678 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.142, ptr @.str.3, ptr @.str.143, i8 2, i8 -63, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.142 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"transport_generic_new_cmd\00", [38 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"%s:%d CMD_T_STOP for ITT: 0x%08llx\0A\00", [60 x i8] zeroinitializer }, align 32
@transport_generic_new_cmd.__UNIQUE_ID_ddebug679 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.142, ptr @.str.3, ptr @.str.144, i8 2, i8 -59, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.144 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"Handling write_pending QUEUE__FULL: se_cmd: %p\0A\00", [48 x i8] zeroinitializer }, align 32
@__kstrtab_transport_generic_new_cmd = external dso_local constant [0 x i8], align 1
@__kstrtabns_transport_generic_new_cmd = external dso_local constant [0 x i8], align 1
@__ksymtab_transport_generic_new_cmd = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @transport_generic_new_cmd to i32), ptr @__kstrtab_transport_generic_new_cmd, ptr @__kstrtabns_transport_generic_new_cmd }, section "___ksymtab+transport_generic_new_cmd", align 4
@target_put_cmd_and_wait.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@transport_generic_free_cmd.__UNIQUE_ID_ddebug682 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.145, ptr @.str.3, ptr @.str.146, i8 2, i8 -32, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.145 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"transport_generic_free_cmd\00", [37 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Detected CMD_T_ABORTED for ITT: %llu\0A\00", [58 x i8] zeroinitializer }, align 32
@__kstrtab_transport_generic_free_cmd = external dso_local constant [0 x i8], align 1
@__kstrtabns_transport_generic_free_cmd = external dso_local constant [0 x i8], align 1
@__ksymtab_transport_generic_free_cmd = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @transport_generic_free_cmd to i32), ptr @__kstrtab_transport_generic_free_cmd, ptr @__kstrtabns_transport_generic_free_cmd }, section "___ksymtab+transport_generic_free_cmd", align 4
@__kstrtab_target_get_sess_cmd = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_get_sess_cmd = external dso_local constant [0 x i8], align 1
@__ksymtab_target_get_sess_cmd = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_get_sess_cmd to i32), ptr @__kstrtab_target_get_sess_cmd, ptr @__kstrtabns_target_get_sess_cmd }, section "___ksymtab+target_get_sess_cmd", align 4
@__kstrtab_target_put_sess_cmd = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_put_sess_cmd = external dso_local constant [0 x i8], align 1
@__ksymtab_target_put_sess_cmd = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_put_sess_cmd to i32), ptr @__kstrtab_target_put_sess_cmd, ptr @__kstrtabns_target_put_sess_cmd }, section "___ksymtab+target_put_sess_cmd", align 4
@target_show_cmd.__UNIQUE_ID_ddebug683 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.147, ptr @.str.3, ptr @.str.148, i8 3, i8 10, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.147 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"target_show_cmd\00", [16 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [99 x i8], [61 x i8] } { [99 x i8] c"%scmd %#02x:%#02x with tag %#llx dir %s i_state %d t_state %s len %d refcnt %d transport_state %s\0A\00", [61 x i8] zeroinitializer }, align 32
@target_show_cmd.__UNIQUE_ID_ddebug684 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.147, ptr @.str.3, ptr @.str.149, i8 3, i8 12, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.149 = internal constant { [95 x i8], [33 x i8] } { [95 x i8] c"%stmf %s with tag %#llx ref_task_tag %#llx i_state %d t_state %s refcnt %d transport_state %s\0A\00", [33 x i8] zeroinitializer }, align 32
@__kstrtab_target_show_cmd = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_show_cmd = external dso_local constant [0 x i8], align 1
@__ksymtab_target_show_cmd = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_show_cmd to i32), ptr @__kstrtab_target_show_cmd, ptr @__kstrtabns_target_show_cmd }, section "___ksymtab+target_show_cmd", align 4
@target_stop_session.__UNIQUE_ID_ddebug685 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.150, ptr @.str.3, ptr @.str.151, i8 3, i8 16, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.150 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"target_stop_session\00", [44 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Stopping session queue.\0A\00", [39 x i8] zeroinitializer }, align 32
@__kstrtab_target_stop_session = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_stop_session = external dso_local constant [0 x i8], align 1
@__ksymtab_target_stop_session = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_stop_session to i32), ptr @__kstrtab_target_stop_session, ptr @__kstrtabns_target_stop_session }, section "___ksymtab+target_stop_session", align 4
@target_wait_for_sess_cmds.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@target_wait_for_sess_cmds.__UNIQUE_ID_ddebug686 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.152, ptr @.str.3, ptr @.str.153, i8 3, i8 21, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.152 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"target_wait_for_sess_cmds\00", [38 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Waiting for running cmds to complete.\0A\00", [57 x i8] zeroinitializer }, align 32
@target_wait_for_sess_cmds.__UNIQUE_ID_ddebug687 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.152, ptr @.str.3, ptr @.str.154, i8 3, i8 23, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.154 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"Waiting for cmds done.\0A\00", [40 x i8] zeroinitializer }, align 32
@__kstrtab_target_wait_for_sess_cmds = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_wait_for_sess_cmds = external dso_local constant [0 x i8], align 1
@__ksymtab_target_wait_for_sess_cmds = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_wait_for_sess_cmds to i32), ptr @__kstrtab_target_wait_for_sess_cmds, ptr @__kstrtabns_target_wait_for_sess_cmds }, section "___ksymtab+target_wait_for_sess_cmds", align 4
@__kstrtab_transport_wait_for_tasks = external dso_local constant [0 x i8], align 1
@__kstrtabns_transport_wait_for_tasks = external dso_local constant [0 x i8], align 1
@__ksymtab_transport_wait_for_tasks = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @transport_wait_for_tasks to i32), ptr @__kstrtab_transport_wait_for_tasks, ptr @__kstrtabns_transport_wait_for_tasks }, section "___ksymtab+transport_wait_for_tasks", align 4
@transport_send_check_condition_and_sense.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_transport_send_check_condition_and_sense = external dso_local constant [0 x i8], align 1
@__kstrtabns_transport_send_check_condition_and_sense = external dso_local constant [0 x i8], align 1
@__ksymtab_transport_send_check_condition_and_sense = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @transport_send_check_condition_and_sense to i32), ptr @__kstrtab_transport_send_check_condition_and_sense, ptr @__kstrtabns_transport_send_check_condition_and_sense }, section "___ksymtab+transport_send_check_condition_and_sense", align 4
@target_send_busy.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__kstrtab_target_send_busy = external dso_local constant [0 x i8], align 1
@__kstrtabns_target_send_busy = external dso_local constant [0 x i8], align 1
@__ksymtab_target_send_busy = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @target_send_busy to i32), ptr @__kstrtab_target_send_busy, ptr @__kstrtabns_target_send_busy }, section "___ksymtab+target_send_busy", align 4
@transport_generic_handle_tmr._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.113, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@__func__.transport_generic_handle_tmr = private unnamed_addr constant [29 x i8] c"transport_generic_handle_tmr\00", align 1
@transport_generic_handle_tmr._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.155, ptr @__func__.transport_generic_handle_tmr, ptr @.str.3, i32 3583, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\014handle_tmr caught CMD_T_ABORTED TMR %d ref_tag: %llu tag: %llu\0A\00", [62 x i8] zeroinitializer }, align 32
@transport_generic_handle_tmr._entry_ptr = internal global ptr @transport_generic_handle_tmr._entry, section ".printk_index", align 4
@transport_generic_handle_tmr.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@__kstrtab_transport_generic_handle_tmr = external dso_local constant [0 x i8], align 1
@__kstrtabns_transport_generic_handle_tmr = external dso_local constant [0 x i8], align 1
@__ksymtab_transport_generic_handle_tmr = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @transport_generic_handle_tmr to i32), ptr @__kstrtab_transport_generic_handle_tmr, ptr @__kstrtabns_transport_generic_handle_tmr }, section "___ksymtab+transport_generic_handle_tmr", align 4
@.str.156 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"(null)\00", [25 x i8] zeroinitializer }, align 32
@scsi_command_size_tbl = external dso_local local_unnamed_addr constant [8 x i8], align 1
@.str.157 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unsigned int\00", [19 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unpacked_lun\00", [19 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"unsigned long long\00", [45 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"tag\00", [28 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"opcode\00", [25 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"data_length\00", [20 x i8] zeroinitializer }, align 32
@.str.163 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"task_attribute\00", [17 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"unsigned char\00", [18 x i8] zeroinitializer }, align 32
@.str.165 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"control\00", [24 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"unsigned char[32]\00", [46 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"cdb\00", [28 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"__data_loc char[]\00", [46 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"initiator\00", [22 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"%s -> LUN %03u tag %#llx %s data_length %6u  CDB %s  (TA:%s C:%02x)\0A\00", [59 x i8] zeroinitializer }, align 32
@trace_raw_output_target_sequencer_start.symbols = internal constant { [93 x %struct.trace_print_flags], [184 x i8] } { [93 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.171 }, %struct.trace_print_flags { i32 1, ptr @.str.172 }, %struct.trace_print_flags { i32 3, ptr @.str.173 }, %struct.trace_print_flags { i32 4, ptr @.str.174 }, %struct.trace_print_flags { i32 5, ptr @.str.175 }, %struct.trace_print_flags { i32 7, ptr @.str.176 }, %struct.trace_print_flags { i32 7, ptr @.str.177 }, %struct.trace_print_flags { i32 8, ptr @.str.178 }, %struct.trace_print_flags { i32 10, ptr @.str.179 }, %struct.trace_print_flags { i32 11, ptr @.str.180 }, %struct.trace_print_flags { i32 15, ptr @.str.181 }, %struct.trace_print_flags { i32 16, ptr @.str.182 }, %struct.trace_print_flags { i32 17, ptr @.str.183 }, %struct.trace_print_flags { i32 18, ptr @.str.184 }, %struct.trace_print_flags { i32 20, ptr @.str.185 }, %struct.trace_print_flags { i32 21, ptr @.str.186 }, %struct.trace_print_flags { i32 22, ptr @.str.187 }, %struct.trace_print_flags { i32 23, ptr @.str.188 }, %struct.trace_print_flags { i32 24, ptr @.str.189 }, %struct.trace_print_flags { i32 25, ptr @.str.190 }, %struct.trace_print_flags { i32 26, ptr @.str.191 }, %struct.trace_print_flags { i32 27, ptr @.str.192 }, %struct.trace_print_flags { i32 28, ptr @.str.193 }, %struct.trace_print_flags { i32 29, ptr @.str.194 }, %struct.trace_print_flags { i32 30, ptr @.str.195 }, %struct.trace_print_flags { i32 36, ptr @.str.196 }, %struct.trace_print_flags { i32 37, ptr @.str.197 }, %struct.trace_print_flags { i32 40, ptr @.str.198 }, %struct.trace_print_flags { i32 42, ptr @.str.199 }, %struct.trace_print_flags { i32 43, ptr @.str.200 }, %struct.trace_print_flags { i32 43, ptr @.str.201 }, %struct.trace_print_flags { i32 46, ptr @.str.202 }, %struct.trace_print_flags { i32 47, ptr @.str.203 }, %struct.trace_print_flags { i32 48, ptr @.str.204 }, %struct.trace_print_flags { i32 49, ptr @.str.205 }, %struct.trace_print_flags { i32 50, ptr @.str.206 }, %struct.trace_print_flags { i32 51, ptr @.str.207 }, %struct.trace_print_flags { i32 52, ptr @.str.208 }, %struct.trace_print_flags { i32 52, ptr @.str.209 }, %struct.trace_print_flags { i32 53, ptr @.str.210 }, %struct.trace_print_flags { i32 54, ptr @.str.211 }, %struct.trace_print_flags { i32 55, ptr @.str.212 }, %struct.trace_print_flags { i32 56, ptr @.str.213 }, %struct.trace_print_flags { i32 57, ptr @.str.214 }, %struct.trace_print_flags { i32 58, ptr @.str.215 }, %struct.trace_print_flags { i32 59, ptr @.str.216 }, %struct.trace_print_flags { i32 60, ptr @.str.217 }, %struct.trace_print_flags { i32 61, ptr @.str.218 }, %struct.trace_print_flags { i32 62, ptr @.str.219 }, %struct.trace_print_flags { i32 63, ptr @.str.220 }, %struct.trace_print_flags { i32 64, ptr @.str.221 }, %struct.trace_print_flags { i32 65, ptr @.str.222 }, %struct.trace_print_flags { i32 66, ptr @.str.223 }, %struct.trace_print_flags { i32 67, ptr @.str.224 }, %struct.trace_print_flags { i32 76, ptr @.str.225 }, %struct.trace_print_flags { i32 77, ptr @.str.226 }, %struct.trace_print_flags { i32 83, ptr @.str.227 }, %struct.trace_print_flags { i32 85, ptr @.str.228 }, %struct.trace_print_flags { i32 86, ptr @.str.229 }, %struct.trace_print_flags { i32 87, ptr @.str.230 }, %struct.trace_print_flags { i32 90, ptr @.str.231 }, %struct.trace_print_flags { i32 94, ptr @.str.232 }, %struct.trace_print_flags { i32 95, ptr @.str.233 }, %struct.trace_print_flags { i32 127, ptr @.str.234 }, %struct.trace_print_flags { i32 160, ptr @.str.235 }, %struct.trace_print_flags { i32 163, ptr @.str.236 }, %struct.trace_print_flags { i32 164, ptr @.str.237 }, %struct.trace_print_flags { i32 165, ptr @.str.238 }, %struct.trace_print_flags { i32 166, ptr @.str.239 }, %struct.trace_print_flags { i32 168, ptr @.str.240 }, %struct.trace_print_flags { i32 170, ptr @.str.241 }, %struct.trace_print_flags { i32 174, ptr @.str.242 }, %struct.trace_print_flags { i32 176, ptr @.str.243 }, %struct.trace_print_flags { i32 177, ptr @.str.244 }, %struct.trace_print_flags { i32 178, ptr @.str.245 }, %struct.trace_print_flags { i32 184, ptr @.str.246 }, %struct.trace_print_flags { i32 182, ptr @.str.247 }, %struct.trace_print_flags { i32 234, ptr @.str.248 }, %struct.trace_print_flags { i32 136, ptr @.str.249 }, %struct.trace_print_flags { i32 138, ptr @.str.250 }, %struct.trace_print_flags { i32 143, ptr @.str.251 }, %struct.trace_print_flags { i32 147, ptr @.str.252 }, %struct.trace_print_flags { i32 158, ptr @.str.253 }, %struct.trace_print_flags { i32 16, ptr @.str.254 }, %struct.trace_print_flags { i32 18, ptr @.str.255 }, %struct.trace_print_flags { i32 10, ptr @.str.256 }, %struct.trace_print_flags { i32 10, ptr @.str.257 }, %struct.trace_print_flags { i32 9, ptr @.str.258 }, %struct.trace_print_flags { i32 11, ptr @.str.259 }, %struct.trace_print_flags { i32 13, ptr @.str.260 }, %struct.trace_print_flags { i32 133, ptr @.str.261 }, %struct.trace_print_flags { i32 161, ptr @.str.262 }, %struct.trace_print_flags { i32 -1, ptr null }], [184 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"TEST_UNIT_READY\00", [16 x i8] zeroinitializer }, align 32
@.str.172 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"REZERO_UNIT\00", [20 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"REQUEST_SENSE\00", [18 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"FORMAT_UNIT\00", [20 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"READ_BLOCK_LIMITS\00", [46 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"REASSIGN_BLOCKS\00", [16 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"INITIALIZE_ELEMENT_STATUS\00", [38 x i8] zeroinitializer }, align 32
@.str.178 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"READ_6\00", [25 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"WRITE_6\00", [24 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"SEEK_6\00", [25 x i8] zeroinitializer }, align 32
@.str.181 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"READ_REVERSE\00", [19 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"WRITE_FILEMARKS\00", [16 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"SPACE\00", [26 x i8] zeroinitializer }, align 32
@.str.184 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"INQUIRY\00", [24 x i8] zeroinitializer }, align 32
@.str.185 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"RECOVER_BUFFERED_DATA\00", [42 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"MODE_SELECT\00", [20 x i8] zeroinitializer }, align 32
@.str.187 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"RESERVE\00", [24 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"RELEASE\00", [24 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"COPY\00", [27 x i8] zeroinitializer }, align 32
@.str.190 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"ERASE\00", [26 x i8] zeroinitializer }, align 32
@.str.191 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"MODE_SENSE\00", [21 x i8] zeroinitializer }, align 32
@.str.192 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"START_STOP\00", [21 x i8] zeroinitializer }, align 32
@.str.193 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"RECEIVE_DIAGNOSTIC\00", [45 x i8] zeroinitializer }, align 32
@.str.194 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"SEND_DIAGNOSTIC\00", [16 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"ALLOW_MEDIUM_REMOVAL\00", [43 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"SET_WINDOW\00", [21 x i8] zeroinitializer }, align 32
@.str.197 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"READ_CAPACITY\00", [18 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"READ_10\00", [24 x i8] zeroinitializer }, align 32
@.str.199 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"WRITE_10\00", [23 x i8] zeroinitializer }, align 32
@.str.200 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"SEEK_10\00", [24 x i8] zeroinitializer }, align 32
@.str.201 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"POSITION_TO_ELEMENT\00", [44 x i8] zeroinitializer }, align 32
@.str.202 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"WRITE_VERIFY\00", [19 x i8] zeroinitializer }, align 32
@.str.203 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"VERIFY\00", [25 x i8] zeroinitializer }, align 32
@.str.204 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"SEARCH_HIGH\00", [20 x i8] zeroinitializer }, align 32
@.str.205 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"SEARCH_EQUAL\00", [19 x i8] zeroinitializer }, align 32
@.str.206 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"SEARCH_LOW\00", [21 x i8] zeroinitializer }, align 32
@.str.207 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"SET_LIMITS\00", [21 x i8] zeroinitializer }, align 32
@.str.208 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"PRE_FETCH\00", [22 x i8] zeroinitializer }, align 32
@.str.209 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"READ_POSITION\00", [18 x i8] zeroinitializer }, align 32
@.str.210 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"SYNCHRONIZE_CACHE\00", [46 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"LOCK_UNLOCK_CACHE\00", [46 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"READ_DEFECT_DATA\00", [47 x i8] zeroinitializer }, align 32
@.str.213 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"MEDIUM_SCAN\00", [20 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"COMPARE\00", [24 x i8] zeroinitializer }, align 32
@.str.215 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"COPY_VERIFY\00", [20 x i8] zeroinitializer }, align 32
@.str.216 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"WRITE_BUFFER\00", [19 x i8] zeroinitializer }, align 32
@.str.217 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"READ_BUFFER\00", [20 x i8] zeroinitializer }, align 32
@.str.218 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"UPDATE_BLOCK\00", [19 x i8] zeroinitializer }, align 32
@.str.219 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"READ_LONG\00", [22 x i8] zeroinitializer }, align 32
@.str.220 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"WRITE_LONG\00", [21 x i8] zeroinitializer }, align 32
@.str.221 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"CHANGE_DEFINITION\00", [46 x i8] zeroinitializer }, align 32
@.str.222 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"WRITE_SAME\00", [21 x i8] zeroinitializer }, align 32
@.str.223 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"UNMAP\00", [26 x i8] zeroinitializer }, align 32
@.str.224 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"READ_TOC\00", [23 x i8] zeroinitializer }, align 32
@.str.225 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"LOG_SELECT\00", [21 x i8] zeroinitializer }, align 32
@.str.226 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"LOG_SENSE\00", [22 x i8] zeroinitializer }, align 32
@.str.227 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"XDWRITEREAD_10\00", [17 x i8] zeroinitializer }, align 32
@.str.228 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"MODE_SELECT_10\00", [17 x i8] zeroinitializer }, align 32
@.str.229 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"RESERVE_10\00", [21 x i8] zeroinitializer }, align 32
@.str.230 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"RELEASE_10\00", [21 x i8] zeroinitializer }, align 32
@.str.231 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"MODE_SENSE_10\00", [18 x i8] zeroinitializer }, align 32
@.str.232 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"PERSISTENT_RESERVE_IN\00", [42 x i8] zeroinitializer }, align 32
@.str.233 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"PERSISTENT_RESERVE_OUT\00", [41 x i8] zeroinitializer }, align 32
@.str.234 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"VARIABLE_LENGTH_CMD\00", [44 x i8] zeroinitializer }, align 32
@.str.235 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"REPORT_LUNS\00", [20 x i8] zeroinitializer }, align 32
@.str.236 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"MAINTENANCE_IN\00", [17 x i8] zeroinitializer }, align 32
@.str.237 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"MAINTENANCE_OUT\00", [16 x i8] zeroinitializer }, align 32
@.str.238 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"MOVE_MEDIUM\00", [20 x i8] zeroinitializer }, align 32
@.str.239 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"EXCHANGE_MEDIUM\00", [16 x i8] zeroinitializer }, align 32
@.str.240 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"READ_12\00", [24 x i8] zeroinitializer }, align 32
@.str.241 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"WRITE_12\00", [23 x i8] zeroinitializer }, align 32
@.str.242 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"WRITE_VERIFY_12\00", [16 x i8] zeroinitializer }, align 32
@.str.243 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"SEARCH_HIGH_12\00", [17 x i8] zeroinitializer }, align 32
@.str.244 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"SEARCH_EQUAL_12\00", [16 x i8] zeroinitializer }, align 32
@.str.245 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"SEARCH_LOW_12\00", [18 x i8] zeroinitializer }, align 32
@.str.246 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"READ_ELEMENT_STATUS\00", [44 x i8] zeroinitializer }, align 32
@.str.247 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"SEND_VOLUME_TAG\00", [16 x i8] zeroinitializer }, align 32
@.str.248 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"WRITE_LONG_2\00", [19 x i8] zeroinitializer }, align 32
@.str.249 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"READ_16\00", [24 x i8] zeroinitializer }, align 32
@.str.250 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"WRITE_16\00", [23 x i8] zeroinitializer }, align 32
@.str.251 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"VERIFY_16\00", [22 x i8] zeroinitializer }, align 32
@.str.252 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"WRITE_SAME_16\00", [18 x i8] zeroinitializer }, align 32
@.str.253 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"SERVICE_ACTION_IN_16\00", [43 x i8] zeroinitializer }, align 32
@.str.254 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"SAI_READ_CAPACITY_16\00", [43 x i8] zeroinitializer }, align 32
@.str.255 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"SAI_GET_LBA_STATUS\00", [45 x i8] zeroinitializer }, align 32
@.str.256 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"MI_REPORT_TARGET_PGS\00", [43 x i8] zeroinitializer }, align 32
@.str.257 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"MO_SET_TARGET_PGS\00", [46 x i8] zeroinitializer }, align 32
@.str.258 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"READ_32\00", [24 x i8] zeroinitializer }, align 32
@.str.259 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"WRITE_32\00", [23 x i8] zeroinitializer }, align 32
@.str.260 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"WRITE_SAME_32\00", [18 x i8] zeroinitializer }, align 32
@.str.261 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ATA_16\00", [25 x i8] zeroinitializer }, align 32
@.str.262 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ATA_12\00", [25 x i8] zeroinitializer }, align 32
@trace_raw_output_target_sequencer_start.symbols.263 = internal constant { [5 x %struct.trace_print_flags], [56 x i8] } { [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 32, ptr @.str.264 }, %struct.trace_print_flags { i32 33, ptr @.str.265 }, %struct.trace_print_flags { i32 34, ptr @.str.266 }, %struct.trace_print_flags { i32 36, ptr @.str.267 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.264 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"SIMPLE\00", [25 x i8] zeroinitializer }, align 32
@.str.265 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"HEAD\00", [27 x i8] zeroinitializer }, align 32
@.str.266 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ORDERED\00", [24 x i8] zeroinitializer }, align 32
@.str.267 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"ACA\00", [28 x i8] zeroinitializer }, align 32
@.str.268 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"scsi_status\00", [20 x i8] zeroinitializer }, align 32
@.str.269 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"sense_length\00", [19 x i8] zeroinitializer }, align 32
@.str.270 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"unsigned char[18]\00", [46 x i8] zeroinitializer }, align 32
@.str.271 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"sense_data\00", [21 x i8] zeroinitializer }, align 32
@.str.272 = internal constant { [99 x i8], [61 x i8] } { [99 x i8] c"%s <- LUN %03u tag %#llx status %s (sense len %d%s%s)  %s data_length %6u  CDB %s  (TA:%s C:%02x)\0A\00", [61 x i8] zeroinitializer }, align 32
@trace_raw_output_target_cmd_complete.symbols = internal constant { [12 x %struct.trace_print_flags], [32 x i8] } { [12 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.273 }, %struct.trace_print_flags { i32 2, ptr @.str.274 }, %struct.trace_print_flags { i32 4, ptr @.str.275 }, %struct.trace_print_flags { i32 8, ptr @.str.276 }, %struct.trace_print_flags { i32 16, ptr @.str.277 }, %struct.trace_print_flags { i32 20, ptr @.str.278 }, %struct.trace_print_flags { i32 24, ptr @.str.279 }, %struct.trace_print_flags { i32 34, ptr @.str.280 }, %struct.trace_print_flags { i32 40, ptr @.str.281 }, %struct.trace_print_flags { i32 48, ptr @.str.282 }, %struct.trace_print_flags { i32 64, ptr @.str.283 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.273 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"GOOD\00", [27 x i8] zeroinitializer }, align 32
@.str.274 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"CHECK CONDITION\00", [16 x i8] zeroinitializer }, align 32
@.str.275 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"CONDITION MET\00", [18 x i8] zeroinitializer }, align 32
@.str.276 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"BUSY\00", [27 x i8] zeroinitializer }, align 32
@.str.277 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"INTERMEDIATE\00", [19 x i8] zeroinitializer }, align 32
@.str.278 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"INTERMEDIATE CONDITION MET\00", [37 x i8] zeroinitializer }, align 32
@.str.279 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"RESERVATION CONFLICT\00", [43 x i8] zeroinitializer }, align 32
@.str.280 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"COMMAND TERMINATED\00", [45 x i8] zeroinitializer }, align 32
@.str.281 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"TASK SET FULL\00", [18 x i8] zeroinitializer }, align 32
@.str.282 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"ACA ACTIVE\00", [21 x i8] zeroinitializer }, align 32
@.str.283 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"TASK ABORTED\00", [19 x i8] zeroinitializer }, align 32
@.str.284 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c" / \00", [28 x i8] zeroinitializer }, align 32
@.str.285 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@trace_raw_output_target_cmd_complete.symbols.286 = internal constant { [93 x %struct.trace_print_flags], [184 x i8] } { [93 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.171 }, %struct.trace_print_flags { i32 1, ptr @.str.172 }, %struct.trace_print_flags { i32 3, ptr @.str.173 }, %struct.trace_print_flags { i32 4, ptr @.str.174 }, %struct.trace_print_flags { i32 5, ptr @.str.175 }, %struct.trace_print_flags { i32 7, ptr @.str.176 }, %struct.trace_print_flags { i32 7, ptr @.str.177 }, %struct.trace_print_flags { i32 8, ptr @.str.178 }, %struct.trace_print_flags { i32 10, ptr @.str.179 }, %struct.trace_print_flags { i32 11, ptr @.str.180 }, %struct.trace_print_flags { i32 15, ptr @.str.181 }, %struct.trace_print_flags { i32 16, ptr @.str.182 }, %struct.trace_print_flags { i32 17, ptr @.str.183 }, %struct.trace_print_flags { i32 18, ptr @.str.184 }, %struct.trace_print_flags { i32 20, ptr @.str.185 }, %struct.trace_print_flags { i32 21, ptr @.str.186 }, %struct.trace_print_flags { i32 22, ptr @.str.187 }, %struct.trace_print_flags { i32 23, ptr @.str.188 }, %struct.trace_print_flags { i32 24, ptr @.str.189 }, %struct.trace_print_flags { i32 25, ptr @.str.190 }, %struct.trace_print_flags { i32 26, ptr @.str.191 }, %struct.trace_print_flags { i32 27, ptr @.str.192 }, %struct.trace_print_flags { i32 28, ptr @.str.193 }, %struct.trace_print_flags { i32 29, ptr @.str.194 }, %struct.trace_print_flags { i32 30, ptr @.str.195 }, %struct.trace_print_flags { i32 36, ptr @.str.196 }, %struct.trace_print_flags { i32 37, ptr @.str.197 }, %struct.trace_print_flags { i32 40, ptr @.str.198 }, %struct.trace_print_flags { i32 42, ptr @.str.199 }, %struct.trace_print_flags { i32 43, ptr @.str.200 }, %struct.trace_print_flags { i32 43, ptr @.str.201 }, %struct.trace_print_flags { i32 46, ptr @.str.202 }, %struct.trace_print_flags { i32 47, ptr @.str.203 }, %struct.trace_print_flags { i32 48, ptr @.str.204 }, %struct.trace_print_flags { i32 49, ptr @.str.205 }, %struct.trace_print_flags { i32 50, ptr @.str.206 }, %struct.trace_print_flags { i32 51, ptr @.str.207 }, %struct.trace_print_flags { i32 52, ptr @.str.208 }, %struct.trace_print_flags { i32 52, ptr @.str.209 }, %struct.trace_print_flags { i32 53, ptr @.str.210 }, %struct.trace_print_flags { i32 54, ptr @.str.211 }, %struct.trace_print_flags { i32 55, ptr @.str.212 }, %struct.trace_print_flags { i32 56, ptr @.str.213 }, %struct.trace_print_flags { i32 57, ptr @.str.214 }, %struct.trace_print_flags { i32 58, ptr @.str.215 }, %struct.trace_print_flags { i32 59, ptr @.str.216 }, %struct.trace_print_flags { i32 60, ptr @.str.217 }, %struct.trace_print_flags { i32 61, ptr @.str.218 }, %struct.trace_print_flags { i32 62, ptr @.str.219 }, %struct.trace_print_flags { i32 63, ptr @.str.220 }, %struct.trace_print_flags { i32 64, ptr @.str.221 }, %struct.trace_print_flags { i32 65, ptr @.str.222 }, %struct.trace_print_flags { i32 66, ptr @.str.223 }, %struct.trace_print_flags { i32 67, ptr @.str.224 }, %struct.trace_print_flags { i32 76, ptr @.str.225 }, %struct.trace_print_flags { i32 77, ptr @.str.226 }, %struct.trace_print_flags { i32 83, ptr @.str.227 }, %struct.trace_print_flags { i32 85, ptr @.str.228 }, %struct.trace_print_flags { i32 86, ptr @.str.229 }, %struct.trace_print_flags { i32 87, ptr @.str.230 }, %struct.trace_print_flags { i32 90, ptr @.str.231 }, %struct.trace_print_flags { i32 94, ptr @.str.232 }, %struct.trace_print_flags { i32 95, ptr @.str.233 }, %struct.trace_print_flags { i32 127, ptr @.str.234 }, %struct.trace_print_flags { i32 160, ptr @.str.235 }, %struct.trace_print_flags { i32 163, ptr @.str.236 }, %struct.trace_print_flags { i32 164, ptr @.str.237 }, %struct.trace_print_flags { i32 165, ptr @.str.238 }, %struct.trace_print_flags { i32 166, ptr @.str.239 }, %struct.trace_print_flags { i32 168, ptr @.str.240 }, %struct.trace_print_flags { i32 170, ptr @.str.241 }, %struct.trace_print_flags { i32 174, ptr @.str.242 }, %struct.trace_print_flags { i32 176, ptr @.str.243 }, %struct.trace_print_flags { i32 177, ptr @.str.244 }, %struct.trace_print_flags { i32 178, ptr @.str.245 }, %struct.trace_print_flags { i32 184, ptr @.str.246 }, %struct.trace_print_flags { i32 182, ptr @.str.247 }, %struct.trace_print_flags { i32 234, ptr @.str.248 }, %struct.trace_print_flags { i32 136, ptr @.str.249 }, %struct.trace_print_flags { i32 138, ptr @.str.250 }, %struct.trace_print_flags { i32 143, ptr @.str.251 }, %struct.trace_print_flags { i32 147, ptr @.str.252 }, %struct.trace_print_flags { i32 158, ptr @.str.253 }, %struct.trace_print_flags { i32 16, ptr @.str.254 }, %struct.trace_print_flags { i32 18, ptr @.str.255 }, %struct.trace_print_flags { i32 10, ptr @.str.256 }, %struct.trace_print_flags { i32 10, ptr @.str.257 }, %struct.trace_print_flags { i32 9, ptr @.str.258 }, %struct.trace_print_flags { i32 11, ptr @.str.259 }, %struct.trace_print_flags { i32 13, ptr @.str.260 }, %struct.trace_print_flags { i32 133, ptr @.str.261 }, %struct.trace_print_flags { i32 161, ptr @.str.262 }, %struct.trace_print_flags { i32 -1, ptr null }], [184 x i8] zeroinitializer }, align 32
@trace_raw_output_target_cmd_complete.symbols.287 = internal constant { [5 x %struct.trace_print_flags], [56 x i8] } { [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 32, ptr @.str.264 }, %struct.trace_print_flags { i32 33, ptr @.str.265 }, %struct.trace_print_flags { i32 34, ptr @.str.266 }, %struct.trace_print_flags { i32 36, ptr @.str.267 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@.str.288 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"scsi_mib_index_lock\00", [44 x i8] zeroinitializer }, align 32
@init_completion.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.289 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"&x->wait\00", [23 x i8] zeroinitializer }, align 32
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.290 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.291 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.292 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@transport_init_session_tags._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.293, ptr @.str.294, ptr @.str.3, i32 337, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.293 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"\013init_session_tags called with percpu-ida tag_num: %u, but zero tag_size\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.294 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"transport_init_session_tags\00", [36 x i8] zeroinitializer }, align 32
@transport_init_session_tags._entry_ptr = internal global ptr @transport_init_session_tags._entry, section ".printk_index", align 4
@transport_init_session_tags._entry.295 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.296, ptr @.str.294, ptr @.str.3, i32 342, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.296 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"\013init_session_tags called with percpu-ida tag_size: %u, but zero tag_num\0A\00", [53 x i8] zeroinitializer }, align 32
@transport_init_session_tags._entry_ptr.297 = internal global ptr @transport_init_session_tags._entry.295, section ".printk_index", align 4
@transport_get_sense_buffer.__UNIQUE_ID_ddebug660 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.298, ptr @.str.3, ptr @.str.299, i8 0, i8 -62, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.298 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"transport_get_sense_buffer\00", [37 x i8] zeroinitializer }, align 32
@.str.299 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"HBA_[%u]_PLUG[%s]: Requesting sense for SAM STATUS: 0x%02x\0A\00", [36 x i8] zeroinitializer }, align 32
@target_cmd_interrupted.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.300 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"include/trace/events/target.h\00", [34 x i8] zeroinitializer }, align 32
@trace_target_sequencer_start.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.301 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.302 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@transport_check_alloc_task_attr.__UNIQUE_ID_ddebug668 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.303, ptr @.str.3, ptr @.str.304, i8 1, i8 110, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.303 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"transport_check_alloc_task_attr\00", [32 x i8] zeroinitializer }, align 32
@.str.304 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"SAM Task Attribute ACA emulation is not supported\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.305 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"./../include/linux/highmem-internal.h\00", [58 x i8] zeroinitializer }, align 32
@movable_zone = external dso_local local_unnamed_addr global i32, align 4
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@transport_cmd_check_stop_to_fabric.__UNIQUE_ID_ddebug659 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.306, ptr @.str.3, ptr @.str.143, i8 0, i8 -78, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.306 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"transport_cmd_check_stop_to_fabric\00", [61 x i8] zeroinitializer }, align 32
@trace_target_cmd_complete.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@target_handle_task_attr.__UNIQUE_ID_ddebug672 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.307, ptr @.str.3, ptr @.str.308, i8 2, i8 36, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.307 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"target_handle_task_attr\00", [40 x i8] zeroinitializer }, align 32
@.str.308 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Added HEAD_OF_QUEUE for CDB: 0x%02x\0A\00", [59 x i8] zeroinitializer }, align 32
@target_handle_task_attr.__UNIQUE_ID_ddebug673 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.307, ptr @.str.3, ptr @.str.309, i8 2, i8 38, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.309 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"Added ORDERED for CDB: 0x%02x to ordered list\0A\00", [49 x i8] zeroinitializer }, align 32
@target_handle_task_attr.__UNIQUE_ID_ddebug674 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.307, ptr @.str.3, ptr @.str.310, i8 2, i8 45, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.310 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"Added CDB: 0x%02x Task Attr: 0x%02x to delayed CMD listn\00", [39 x i8] zeroinitializer }, align 32
@transport_complete_task_attr.__UNIQUE_ID_ddebug675 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.311, ptr @.str.3, ptr @.str.312, i8 2, i8 72, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.311 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"transport_complete_task_attr\00", [35 x i8] zeroinitializer }, align 32
@.str.312 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"Incremented dev_cur_ordered_id: %u for HEAD_OF_QUEUE\0A\00", [42 x i8] zeroinitializer }, align 32
@transport_complete_task_attr.__UNIQUE_ID_ddebug676 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.311, ptr @.str.3, ptr @.str.313, i8 2, i8 74, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.313 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"Incremented dev_cur_ordered_id: %u for ORDERED\0A\00", [48 x i8] zeroinitializer }, align 32
@transport_handle_queue_full._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.113, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@__func__.transport_handle_queue_full = private unnamed_addr constant [28 x i8] c"transport_handle_queue_full\00", align 1
@transport_handle_queue_full._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.314, ptr @__func__.transport_handle_queue_full, ptr @.str.3, i32 2436, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.314 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\014Got unknown fabric queue status: %d\0A\00", [57 x i8] zeroinitializer }, align 32
@transport_handle_queue_full._entry_ptr = internal global ptr @transport_handle_queue_full._entry, section ".printk_index", align 4
@target_complete_ok_work.__UNIQUE_ID_ddebug677 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.315, ptr @.str.3, ptr @.str.316, i8 2, i8 -114, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.315 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"target_complete_ok_work\00", [40 x i8] zeroinitializer }, align 32
@.str.316 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"Handling complete_ok QUEUE_FULL: se_cmd: %p, data_direction: %d\0A\00", [63 x i8] zeroinitializer }, align 32
@transport_write_pending_qf.__UNIQUE_ID_ddebug680 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.317, ptr @.str.3, ptr @.str.318, i8 2, i8 -54, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.317 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"transport_write_pending_qf\00", [37 x i8] zeroinitializer }, align 32
@.str.318 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"%s:%d CMD_T_STOP|CMD_T_ABORTED for ITT: 0x%08llx\0A\00", [46 x i8] zeroinitializer }, align 32
@transport_write_pending_qf.__UNIQUE_ID_ddebug681 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.317, ptr @.str.3, ptr @.str.144, i8 2, i8 -52, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@percpu_ref_tryget_live_rcu.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.319 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"include/linux/percpu-refcount.h\00", [32 x i8] zeroinitializer }, align 32
@.str.320 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"aborted\00", [24 x i8] zeroinitializer }, align 32
@.str.321 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"active\00", [25 x i8] zeroinitializer }, align 32
@.str.322 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"complete\00", [23 x i8] zeroinitializer }, align 32
@.str.323 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"sent\00", [27 x i8] zeroinitializer }, align 32
@.str.324 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"stop\00", [27 x i8] zeroinitializer }, align 32
@.str.325 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"fabric_stop\00", [20 x i8] zeroinitializer }, align 32
@.str.326 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%s,%s\00", [26 x i8] zeroinitializer }, align 32
@.str.327 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"(?)\00", [28 x i8] zeroinitializer }, align 32
@.str.328 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"NO_STATE\00", [23 x i8] zeroinitializer }, align 32
@.str.329 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"NEW_CMD\00", [24 x i8] zeroinitializer }, align 32
@.str.330 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"PROCESSING\00", [21 x i8] zeroinitializer }, align 32
@.str.331 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"COMPLETE\00", [23 x i8] zeroinitializer }, align 32
@.str.332 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"ISTATE_PROCESSING\00", [46 x i8] zeroinitializer }, align 32
@.str.333 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"COMPLETE_QF_WP\00", [17 x i8] zeroinitializer }, align 32
@.str.334 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"COMPLETE_QF_OK\00", [17 x i8] zeroinitializer }, align 32
@.str.335 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"COMPLETE_QF_ERR\00", [16 x i8] zeroinitializer }, align 32
@.str.336 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"ABORT_TASK\00", [21 x i8] zeroinitializer }, align 32
@.str.337 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"ABORT_TASK_SET\00", [17 x i8] zeroinitializer }, align 32
@.str.338 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"CLEAR_ACA\00", [22 x i8] zeroinitializer }, align 32
@.str.339 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"CLEAR_TASK_SET\00", [17 x i8] zeroinitializer }, align 32
@.str.340 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"LUN_RESET\00", [22 x i8] zeroinitializer }, align 32
@.str.341 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"TARGET_WARM_RESET\00", [46 x i8] zeroinitializer }, align 32
@.str.342 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"TARGET_COLD_RESET\00", [46 x i8] zeroinitializer }, align 32
@.str.343 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"LUN_RESET_PRO\00", [18 x i8] zeroinitializer }, align 32
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@.str.344 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"wait_for_tasks: Stopping \00", [38 x i8] zeroinitializer }, align 32
@.str.345 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"wait for tasks: \00", [47 x i8] zeroinitializer }, align 32
@__transport_wait_for_tasks.__UNIQUE_ID_ddebug688 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.346, ptr @.str.3, ptr @.str.347, i8 3, i8 37, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.346 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"__transport_wait_for_tasks\00", [37 x i8] zeroinitializer }, align 32
@.str.347 = internal constant { [92 x i8], [36 x i8] } { [92 x i8] c"wait_for_tasks: Stopped wait_for_completion(&cmd->t_transport_stop_comp) for ITT: 0x%08llx\0A\00", [36 x i8] zeroinitializer }, align 32
@sense_detail_table = internal constant { [36 x %struct.sense_detail], [48 x i8] } { [36 x %struct.sense_detail] [%struct.sense_detail { i8 2, i8 0, i8 0, i8 0 }, %struct.sense_detail { i8 5, i8 37, i8 0, i8 0 }, %struct.sense_detail { i8 5, i8 32, i8 0, i8 0 }, %struct.sense_detail { i8 11, i8 12, i8 13, i8 0 }, %struct.sense_detail { i8 5, i8 12, i8 12, i8 0 }, %struct.sense_detail { i8 11, i8 71, i8 5, i8 0 }, %struct.sense_detail { i8 11, i8 17, i8 19, i8 0 }, %struct.sense_detail { i8 5, i8 32, i8 0, i8 0 }, %struct.sense_detail { i8 5, i8 36, i8 0, i8 0 }, %struct.sense_detail { i8 5, i8 38, i8 0, i8 0 }, %struct.sense_detail { i8 2, i8 8, i8 0, i8 0 }, %struct.sense_detail { i8 5, i8 36, i8 0, i8 0 }, %struct.sense_detail { i8 7, i8 39, i8 0, i8 0 }, %struct.sense_detail { i8 11, i8 41, i8 3, i8 0 }, %struct.sense_detail { i8 6, i8 0, i8 0, i8 0 }, %struct.sense_detail zeroinitializer, %struct.sense_detail zeroinitializer, %struct.sense_detail { i8 5, i8 33, i8 0, i8 0 }, %struct.sense_detail zeroinitializer, %struct.sense_detail { i8 5, i8 26, i8 0, i8 0 }, %struct.sense_detail { i8 14, i8 29, i8 0, i8 1 }, %struct.sense_detail { i8 11, i8 16, i8 1, i8 1 }, %struct.sense_detail { i8 11, i8 16, i8 2, i8 1 }, %struct.sense_detail { i8 11, i8 16, i8 3, i8 1 }, %struct.sense_detail { i8 10, i8 13, i8 2, i8 0 }, %struct.sense_detail { i8 5, i8 38, i8 6, i8 0 }, %struct.sense_detail { i8 5, i8 38, i8 7, i8 0 }, %struct.sense_detail { i8 5, i8 38, i8 8, i8 0 }, %struct.sense_detail { i8 5, i8 38, i8 9, i8 0 }, %struct.sense_detail { i8 5, i8 85, i8 4, i8 0 }, %struct.sense_detail zeroinitializer, %struct.sense_detail { i8 5, i8 14, i8 3, i8 0 }, %struct.sense_detail { i8 2, i8 4, i8 11, i8 0 }, %struct.sense_detail { i8 2, i8 4, i8 12, i8 0 }, %struct.sense_detail { i8 2, i8 4, i8 10, i8 0 }, %struct.sense_detail { i8 2, i8 4, i8 18, i8 0 }], [48 x i8] zeroinitializer }, align 32
@translate_sense_reason.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@translate_sense_reason.__already_done.348 = internal unnamed_addr global i1 false, section ".data.once", align 1
@target_handle_abort.__UNIQUE_ID_ddebug661 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.349, ptr @.str.3, ptr @.str.350, i8 0, i8 -55, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.349 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"target_handle_abort\00", [44 x i8] zeroinitializer }, align 32
@.str.350 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"tag %#llx: send_abort_response = %d\0A\00", [59 x i8] zeroinitializer }, align 32
@target_handle_abort.__UNIQUE_ID_ddebug662 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.59, ptr @.str.349, ptr @.str.3, ptr @.str.351, i8 0, i8 -54, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.351 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"Setting SAM_STAT_TASK_ABORTED status for CDB: 0x%02x, ITT: 0x%08llx\0A\00", [59 x i8] zeroinitializer }, align 32
@target_handle_abort.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@target_handle_abort.__already_done.352 = internal unnamed_addr global i1 false, section ".data.once", align 1
@target_tmr_work._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.353, ptr @.str.354, ptr @.str.3, i32 3547, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.353 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\013Unknown TMR function: 0x%02x.\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.354 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"target_tmr_work\00", [16 x i8] zeroinitializer }, align 32
@target_tmr_work._entry_ptr = internal global ptr @target_tmr_work._entry, section ".printk_index", align 4
@switch.table.transport_dump_cmd_direction = internal constant { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.74, ptr @.str.73, ptr @.str.72, ptr @.str.71], [16 x i8] zeroinitializer }, align 32
@switch.table.target_show_cmd = internal constant { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.74, ptr @.str.73, ptr @.str.72, ptr @.str.71], [16 x i8] zeroinitializer }, align 32
@switch.table.target_show_cmd.355 = internal constant { [21 x ptr], [44 x i8] } { [21 x ptr] [ptr @.str.328, ptr @.str.329, ptr @.str.327, ptr @.str.69, ptr @.str.327, ptr @.str.330, ptr @.str.331, ptr @.str.327, ptr @.str.327, ptr @.str.327, ptr @.str.327, ptr @.str.332, ptr @.str.327, ptr @.str.327, ptr @.str.327, ptr @.str.327, ptr @.str.327, ptr @.str.327, ptr @.str.333, ptr @.str.334, ptr @.str.335], [44 x i8] zeroinitializer }, align 32
@switch.table.target_show_cmd.356 = internal constant { [21 x ptr], [44 x i8] } { [21 x ptr] [ptr @.str.328, ptr @.str.329, ptr @.str.327, ptr @.str.69, ptr @.str.327, ptr @.str.330, ptr @.str.331, ptr @.str.327, ptr @.str.327, ptr @.str.327, ptr @.str.327, ptr @.str.332, ptr @.str.327, ptr @.str.327, ptr @.str.327, ptr @.str.327, ptr @.str.327, ptr @.str.327, ptr @.str.333, ptr @.str.334, ptr @.str.335], [44 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.357 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 4]
@__sancov_gen_cov_switch_values.358 = internal global [5 x i64] [i64 3, i64 32, i64 18, i64 19, i64 20]
@__sancov_gen_cov_switch_values.359 = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.360 = internal global [11 x i64] [i64 9, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8]
@__sancov_gen_cov_switch_values.361 = internal global [11 x i64] [i64 9, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8]
@__sancov_gen_cov_switch_values.362 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 16, i64 32]
@__sancov_gen_cov_switch_values.363 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 16, i64 32]
@__sancov_gen_cov_switch_values.364 = internal global [8 x i64] [i64 6, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 8]
@__sancov_gen_cov_switch_values.365 = internal global [8 x i64] [i64 6, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 8]
@__sancov_gen_cov_switch_values.366 = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.367 = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.368 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.369 = internal global [29 x i64] [i64 27, i64 32, i64 1, i64 2, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 16, i64 17, i64 18, i64 19, i64 21, i64 22, i64 23, i64 24, i64 25, i64 26, i64 27, i64 28, i64 30, i64 31, i64 32, i64 33, i64 34, i64 35]
@__sancov_gen_cov_switch_values.370 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 3]
@__sancov_gen_cov_switch_values.371 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 3]
@__sancov_gen_cov_switch_values.372 = internal global [10 x i64] [i64 8, i64 8, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 128]
@__sancov_gen_cov_switch_values.373 = internal global [5 x i64] [i64 3, i64 32, i64 32, i64 33, i64 34]
@__sancov_gen_cov_switch_values.374 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 8]
@__sancov_gen_cov_switch_values.375 = internal global [4 x i64] [i64 2, i64 32, i64 33, i64 34]
@__sancov_gen_cov_switch_values.376 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 3]
@__sancov_gen_cov_switch_values.377 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.378 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 3]
@__sancov_gen_cov_switch_values.379 = internal global [9 x i64] [i64 7, i64 8, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7]
@___asan_gen_.380 = private unnamed_addr constant [31 x i8] c"str__target__trace_system_name\00", align 1
@___asan_gen_.381 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.381, i32 36, i32 1 }
@___asan_gen_.383 = private unnamed_addr constant [42 x i8] c"trace_event_fields_target_sequencer_start\00", align 1
@___asan_gen_.386 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_target_sequencer_start\00", align 1
@___asan_gen_.389 = private unnamed_addr constant [33 x i8] c"print_fmt_target_sequencer_start\00", align 1
@___asan_gen_.392 = private unnamed_addr constant [29 x i8] c"event_target_sequencer_start\00", align 1
@___asan_gen_.395 = private unnamed_addr constant [39 x i8] c"trace_event_fields_target_cmd_complete\00", align 1
@___asan_gen_.398 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_target_cmd_complete\00", align 1
@___asan_gen_.401 = private unnamed_addr constant [30 x i8] c"print_fmt_target_cmd_complete\00", align 1
@___asan_gen_.404 = private unnamed_addr constant [26 x i8] c"event_target_cmd_complete\00", align 1
@___asan_gen_.409 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 62, i32 36 }
@___asan_gen_.410 = private unnamed_addr constant [14 x i8] c"se_sess_cache\00", align 1
@___asan_gen_.412 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 45, i32 27 }
@___asan_gen_.424 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 66, i32 3 }
@___asan_gen_.427 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 70, i32 34 }
@___asan_gen_.428 = private unnamed_addr constant [12 x i8] c"se_ua_cache\00", align 1
@___asan_gen_.430 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 46, i32 20 }
@___asan_gen_.436 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 74, i32 3 }
@___asan_gen_.439 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 77, i32 39 }
@___asan_gen_.440 = private unnamed_addr constant [17 x i8] c"t10_pr_reg_cache\00", align 1
@___asan_gen_.442 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 47, i32 20 }
@___asan_gen_.448 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 81, i32 3 }
@___asan_gen_.451 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 85, i32 43 }
@___asan_gen_.452 = private unnamed_addr constant [21 x i8] c"t10_alua_lu_gp_cache\00", align 1
@___asan_gen_.454 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 48, i32 20 }
@___asan_gen_.460 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 89, i32 3 }
@___asan_gen_.463 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 93, i32 47 }
@___asan_gen_.464 = private unnamed_addr constant [25 x i8] c"t10_alua_lu_gp_mem_cache\00", align 1
@___asan_gen_.466 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 49, i32 20 }
@___asan_gen_.472 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 97, i32 3 }
@___asan_gen_.475 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 101, i32 46 }
@___asan_gen_.476 = private unnamed_addr constant [24 x i8] c"t10_alua_tg_pt_gp_cache\00", align 1
@___asan_gen_.478 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 50, i32 20 }
@___asan_gen_.484 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 105, i32 3 }
@___asan_gen_.487 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 110, i32 4 }
@___asan_gen_.488 = private unnamed_addr constant [23 x i8] c"t10_alua_lba_map_cache\00", align 1
@___asan_gen_.490 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 51, i32 20 }
@___asan_gen_.496 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 114, i32 3 }
@___asan_gen_.499 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 119, i32 4 }
@___asan_gen_.500 = private unnamed_addr constant [27 x i8] c"t10_alua_lba_map_mem_cache\00", align 1
@___asan_gen_.502 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 52, i32 20 }
@___asan_gen_.508 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 123, i32 3 }
@___asan_gen_.511 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 128, i32 41 }
@___asan_gen_.512 = private unnamed_addr constant [21 x i8] c"target_completion_wq\00", align 1
@___asan_gen_.514 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 43, i32 33 }
@___asan_gen_.517 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 133, i32 41 }
@___asan_gen_.518 = private unnamed_addr constant [21 x i8] c"target_submission_wq\00", align 1
@___asan_gen_.520 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 44, i32 33 }
@___asan_gen_.521 = private unnamed_addr constant [20 x i8] c"scsi_mib_index_lock\00", align 1
@___asan_gen_.524 = private unnamed_addr constant [15 x i8] c"scsi_mib_index\00", align 1
@___asan_gen_.526 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 178, i32 12 }
@___asan_gen_.527 = private unnamed_addr constant [51 x i8] c"transport_subsystem_check_init.sub_api_initialized\00", align 1
@___asan_gen_.530 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 204, i32 41 }
@___asan_gen_.539 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 206, i32 3 }
@___asan_gen_.542 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 208, i32 41 }
@___asan_gen_.548 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 210, i32 3 }
@___asan_gen_.551 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 212, i32 40 }
@___asan_gen_.557 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 214, i32 3 }
@___asan_gen_.560 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 216, i32 40 }
@___asan_gen_.566 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 218, i32 3 }
@___asan_gen_.572 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 240, i32 2 }
@___asan_gen_.578 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 241, i32 2 }
@___asan_gen_.587 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 273, i32 3 }
@___asan_gen_.596 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 303, i32 3 }
@___asan_gen_.602 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 310, i32 3 }
@___asan_gen_.611 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 420, i32 2 }
@___asan_gen_.614 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 498, i32 48 }
@___asan_gen_.620 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 641, i32 2 }
@___asan_gen_.626 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 903, i32 2 }
@___asan_gen_.641 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 984, i32 3 }
@___asan_gen_.644 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1002, i32 10 }
@___asan_gen_.647 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1004, i32 10 }
@___asan_gen_.650 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1006, i32 10 }
@___asan_gen_.653 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1008, i32 10 }
@___asan_gen_.656 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1021, i32 26 }
@___asan_gen_.659 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1023, i32 27 }
@___asan_gen_.662 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1025, i32 27 }
@___asan_gen_.665 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1027, i32 26 }
@___asan_gen_.668 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1028, i32 26 }
@___asan_gen_.671 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1031, i32 26 }
@___asan_gen_.674 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1043, i32 21 }
@___asan_gen_.677 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1047, i32 20 }
@___asan_gen_.680 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1050, i32 20 }
@___asan_gen_.683 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1053, i32 20 }
@___asan_gen_.686 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1056, i32 20 }
@___asan_gen_.689 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1059, i32 20 }
@___asan_gen_.692 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1063, i32 20 }
@___asan_gen_.695 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1066, i32 20 }
@___asan_gen_.698 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1069, i32 20 }
@___asan_gen_.701 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1073, i32 20 }
@___asan_gen_.704 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1076, i32 20 }
@___asan_gen_.710 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1084, i32 3 }
@___asan_gen_.713 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1113, i32 21 }
@___asan_gen_.716 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1117, i32 20 }
@___asan_gen_.719 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1120, i32 20 }
@___asan_gen_.722 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1123, i32 20 }
@___asan_gen_.725 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1134, i32 3 }
@___asan_gen_.728 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1161, i32 21 }
@___asan_gen_.731 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1165, i32 20 }
@___asan_gen_.734 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1168, i32 20 }
@___asan_gen_.737 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1171, i32 20 }
@___asan_gen_.740 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1174, i32 20 }
@___asan_gen_.743 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1177, i32 20 }
@___asan_gen_.746 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1180, i32 20 }
@___asan_gen_.749 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1183, i32 20 }
@___asan_gen_.752 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1194, i32 3 }
@___asan_gen_.755 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1225, i32 4 }
@___asan_gen_.758 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1230, i32 4 }
@___asan_gen_.761 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1235, i32 4 }
@___asan_gen_.764 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1239, i32 16 }
@___asan_gen_.767 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1248, i32 3 }
@___asan_gen_.768 = private unnamed_addr constant [8 x i8] c"hex_str\00", align 1
@___asan_gen_.770 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1256, i32 20 }
@___asan_gen_.782 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1360, i32 3 }
@___asan_gen_.791 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1387, i32 5 }
@___asan_gen_.800 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1398, i32 5 }
@___asan_gen_.803 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1430, i32 2 }
@___asan_gen_.812 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1481, i32 3 }
@___asan_gen_.818 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1495, i32 4 }
@___asan_gen_.827 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1530, i32 3 }
@___asan_gen_.836 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1560, i32 3 }
@___asan_gen_.845 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1600, i32 3 }
@___asan_gen_.848 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1831, i32 2 }
@___asan_gen_.854 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1987, i32 2 }
@___asan_gen_.860 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 2001, i32 2 }
@___asan_gen_.863 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 2003, i32 18 }
@___asan_gen_.866 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 2014, i32 3 }
@___asan_gen_.872 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 2076, i32 3 }
@___asan_gen_.878 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 2821, i32 3 }
@___asan_gen_.881 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 2839, i32 2 }
@___asan_gen_.887 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 2945, i32 3 }
@___asan_gen_.893 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3109, i32 3 }
@___asan_gen_.896 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3116, i32 3 }
@___asan_gen_.902 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3139, i32 2 }
@___asan_gen_.908 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3157, i32 3 }
@___asan_gen_.911 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3164, i32 2 }
@___asan_gen_.920 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3581, i32 3 }
@___asan_gen_.923 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3588, i32 2 }
@___asan_gen_.1323 = private unnamed_addr constant [8 x i8] c"symbols\00", align 1
@___asan_gen_.1325 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1372, i32 169, i32 1 }
@___asan_gen_.1328 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 177, i32 8 }
@___asan_gen_.1333 = private unnamed_addr constant [30 x i8] c"../include/linux/completion.h\00", align 1
@___asan_gen_.1334 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1333, i32 87, i32 2 }
@___asan_gen_.1340 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1342, i32 695, i32 2 }
@___asan_gen_.1342 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.1343 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1342, i32 723, i32 2 }
@___asan_gen_.1352 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 336, i32 3 }
@___asan_gen_.1358 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 341, i32 3 }
@___asan_gen_.1364 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 776, i32 2 }
@___asan_gen_.1365 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.1367 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 859, i32 3 }
@___asan_gen_.1372 = private unnamed_addr constant [33 x i8] c"../include/trace/events/target.h\00", align 1
@___asan_gen_.1373 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1372, i32 132, i32 1 }
@___asan_gen_.1375 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.1376 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1375, i32 108, i32 2 }
@___asan_gen_.1382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 1463, i32 3 }
@___asan_gen_.1384 = private unnamed_addr constant [38 x i8] c"./../include/linux/highmem-internal.h\00", align 1
@___asan_gen_.1385 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1384, i32 44, i32 2 }
@___asan_gen_.1388 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 711, i32 3 }
@___asan_gen_.1394 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 2193, i32 3 }
@___asan_gen_.1397 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 2199, i32 3 }
@___asan_gen_.1400 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 2230, i32 2 }
@___asan_gen_.1406 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 2335, i32 3 }
@___asan_gen_.1409 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 2343, i32 3 }
@___asan_gen_.1410 = private unnamed_addr constant [4 x i8] c"_rs\00", align 1
@___asan_gen_.1418 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 2436, i32 3 }
@___asan_gen_.1424 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 2615, i32 2 }
@___asan_gen_.1430 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 2856, i32 3 }
@___asan_gen_.1432 = private unnamed_addr constant [35 x i8] c"../include/linux/percpu-refcount.h\00", align 1
@___asan_gen_.1433 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1432, i32 280, i32 2 }
@___asan_gen_.1436 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3071, i32 27 }
@___asan_gen_.1439 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3073, i32 27 }
@___asan_gen_.1442 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3075, i32 27 }
@___asan_gen_.1445 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3077, i32 27 }
@___asan_gen_.1448 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3079, i32 27 }
@___asan_gen_.1451 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3081, i32 27 }
@___asan_gen_.1454 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3057, i32 38 }
@___asan_gen_.1457 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3032, i32 9 }
@___asan_gen_.1460 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3038, i32 34 }
@___asan_gen_.1463 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3039, i32 34 }
@___asan_gen_.1466 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3041, i32 36 }
@___asan_gen_.1469 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3042, i32 34 }
@___asan_gen_.1472 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3044, i32 13 }
@___asan_gen_.1475 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3045, i32 40 }
@___asan_gen_.1478 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3046, i32 40 }
@___asan_gen_.1481 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3047, i32 41 }
@___asan_gen_.1484 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3089, i32 31 }
@___asan_gen_.1487 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3090, i32 34 }
@___asan_gen_.1490 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3091, i32 30 }
@___asan_gen_.1493 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3092, i32 34 }
@___asan_gen_.1496 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3093, i32 30 }
@___asan_gen_.1499 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3094, i32 37 }
@___asan_gen_.1502 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3095, i32 37 }
@___asan_gen_.1505 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3096, i32 34 }
@___asan_gen_.1508 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3211, i32 18 }
@___asan_gen_.1511 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3217, i32 19 }
@___asan_gen_.1517 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3222, i32 2 }
@___asan_gen_.1518 = private unnamed_addr constant [19 x i8] c"sense_detail_table\00", align 1
@___asan_gen_.1520 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3252, i32 34 }
@___asan_gen_.1526 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 805, i32 2 }
@___asan_gen_.1529 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 810, i32 4 }
@___asan_gen_.1530 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.1536 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.1537 = private constant [42 x i8] c"../drivers/target/target_core_transport.c\00", align 1
@___asan_gen_.1538 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1537, i32 3546, i32 3 }
@___asan_gen_.1539 = private unnamed_addr constant [42 x i8] c"switch.table.transport_dump_cmd_direction\00", align 1
@___asan_gen_.1540 = private unnamed_addr constant [29 x i8] c"switch.table.target_show_cmd\00", align 1
@___asan_gen_.1541 = private unnamed_addr constant [33 x i8] c"switch.table.target_show_cmd.355\00", align 1
@___asan_gen_.1542 = private unnamed_addr constant [33 x i8] c"switch.table.target_show_cmd.356\00", align 1
@llvm.compiler.used = appending global [477 x ptr] [ptr @__bpf_trace_tp_map_target_cmd_complete, ptr @__bpf_trace_tp_map_target_sequencer_start, ptr @__event_target_cmd_complete, ptr @__event_target_sequencer_start, ptr @__ksymtab___target_init_cmd, ptr @__ksymtab___transport_register_session, ptr @__ksymtab_target_alloc_sgl, ptr @__ksymtab_target_cmd_init_cdb, ptr @__ksymtab_target_cmd_parse_cdb, ptr @__ksymtab_target_complete_cmd, ptr @__ksymtab_target_complete_cmd_with_length, ptr @__ksymtab_target_complete_cmd_with_sense, ptr @__ksymtab_target_execute_cmd, ptr @__ksymtab_target_free_sgl, ptr @__ksymtab_target_get_sess_cmd, ptr @__ksymtab_target_init_cmd, ptr @__ksymtab_target_put_nacl, ptr @__ksymtab_target_put_sess_cmd, ptr @__ksymtab_target_queue_submission, ptr @__ksymtab_target_remove_session, ptr @__ksymtab_target_send_busy, ptr @__ksymtab_target_set_cmd_data_length, ptr @__ksymtab_target_setup_session, ptr @__ksymtab_target_show_cmd, ptr @__ksymtab_target_show_dynamic_sessions, ptr @__ksymtab_target_stop_session, ptr @__ksymtab_target_submit, ptr @__ksymtab_target_submit_cmd, ptr @__ksymtab_target_submit_prep, ptr @__ksymtab_target_submit_tmr, ptr @__ksymtab_target_wait_for_sess_cmds, ptr @__ksymtab_transport_alloc_session, ptr @__ksymtab_transport_alloc_session_tags, ptr @__ksymtab_transport_copy_sense_to_cmd, ptr @__ksymtab_transport_deregister_session, ptr @__ksymtab_transport_deregister_session_configfs, ptr @__ksymtab_transport_free_session, ptr @__ksymtab_transport_generic_free_cmd, ptr @__ksymtab_transport_generic_handle_tmr, ptr @__ksymtab_transport_generic_new_cmd, ptr @__ksymtab_transport_generic_request_failure, ptr @__ksymtab_transport_handle_cdb_direct, ptr @__ksymtab_transport_init_session, ptr @__ksymtab_transport_kmap_data_sg, ptr @__ksymtab_transport_kunmap_data_sg, ptr @__ksymtab_transport_register_session, ptr @__ksymtab_transport_send_check_condition_and_sense, ptr @__ksymtab_transport_set_vpd_assoc, ptr @__ksymtab_transport_set_vpd_ident, ptr @__ksymtab_transport_set_vpd_ident_type, ptr @__ksymtab_transport_set_vpd_proto_id, ptr @__ksymtab_transport_wait_for_tasks, ptr @__tracepoint_ptr_target_cmd_complete, ptr @__tracepoint_ptr_target_sequencer_start, ptr @__tracepoint_target_cmd_complete, ptr @__tracepoint_target_sequencer_start, ptr @event_class_target_cmd_complete, ptr @event_class_target_sequencer_start, ptr @event_target_cmd_complete, ptr @event_target_sequencer_start, ptr @init_se_kmem_caches._entry, ptr @init_se_kmem_caches._entry.13, ptr @init_se_kmem_caches._entry.17, ptr @init_se_kmem_caches._entry.21, ptr @init_se_kmem_caches._entry.25, ptr @init_se_kmem_caches._entry.29, ptr @init_se_kmem_caches._entry.5, ptr @init_se_kmem_caches._entry.9, ptr @init_se_kmem_caches._entry_ptr, ptr @init_se_kmem_caches._entry_ptr.11, ptr @init_se_kmem_caches._entry_ptr.15, ptr @init_se_kmem_caches._entry_ptr.19, ptr @init_se_kmem_caches._entry_ptr.23, ptr @init_se_kmem_caches._entry_ptr.27, ptr @init_se_kmem_caches._entry_ptr.31, ptr @init_se_kmem_caches._entry_ptr.7, ptr @target_cmd_init_cdb._entry, ptr @target_cmd_init_cdb._entry.127, ptr @target_cmd_init_cdb._entry_ptr, ptr @target_cmd_init_cdb._entry_ptr.129, ptr @target_cmd_size_check._entry, ptr @target_cmd_size_check._entry.116, ptr @target_cmd_size_check._entry.120, ptr @target_cmd_size_check._entry_ptr, ptr @target_cmd_size_check._entry_ptr.118, ptr @target_cmd_size_check._entry_ptr.122, ptr @target_tmr_work._entry, ptr @target_tmr_work._entry_ptr, ptr @transport_alloc_session._entry, ptr @transport_alloc_session._entry_ptr, ptr @transport_alloc_session_tags._entry, ptr @transport_alloc_session_tags._entry.56, ptr @transport_alloc_session_tags._entry_ptr, ptr @transport_alloc_session_tags._entry_ptr.58, ptr @transport_generic_handle_tmr._entry, ptr @transport_generic_handle_tmr._entry_ptr, ptr @transport_generic_map_mem_to_cmd._entry, ptr @transport_generic_map_mem_to_cmd._entry_ptr, ptr @transport_generic_request_failure._entry, ptr @transport_generic_request_failure._entry_ptr, ptr @transport_handle_cdb_direct._entry, ptr @transport_handle_cdb_direct._entry_ptr, ptr @transport_handle_queue_full._entry, ptr @transport_handle_queue_full._entry_ptr, ptr @transport_init_session_tags._entry, ptr @transport_init_session_tags._entry.295, ptr @transport_init_session_tags._entry_ptr, ptr @transport_init_session_tags._entry_ptr.297, ptr @transport_subsystem_check_init._entry, ptr @transport_subsystem_check_init._entry.38, ptr @transport_subsystem_check_init._entry.42, ptr @transport_subsystem_check_init._entry.46, ptr @transport_subsystem_check_init._entry_ptr, ptr @transport_subsystem_check_init._entry_ptr.40, ptr @transport_subsystem_check_init._entry_ptr.44, ptr @transport_subsystem_check_init._entry_ptr.48, ptr @str__target__trace_system_name, ptr @trace_event_fields_target_sequencer_start, ptr @trace_event_type_funcs_target_sequencer_start, ptr @print_fmt_target_sequencer_start, ptr @trace_event_fields_target_cmd_complete, ptr @trace_event_type_funcs_target_cmd_complete, ptr @print_fmt_target_cmd_complete, ptr @.str, ptr @se_sess_cache, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @se_ua_cache, ptr @.str.6, ptr @.str.8, ptr @t10_pr_reg_cache, ptr @.str.10, ptr @.str.12, ptr @t10_alua_lu_gp_cache, ptr @.str.14, ptr @.str.16, ptr @t10_alua_lu_gp_mem_cache, ptr @.str.18, ptr @.str.20, ptr @t10_alua_tg_pt_gp_cache, ptr @.str.22, ptr @.str.24, ptr @t10_alua_lba_map_cache, ptr @.str.26, ptr @.str.28, ptr @t10_alua_lba_map_mem_cache, ptr @.str.30, ptr @.str.32, ptr @target_completion_wq, ptr @.str.33, ptr @target_submission_wq, ptr @scsi_mib_index_lock, ptr @scsi_mib_index, ptr @transport_subsystem_check_init.sub_api_initialized, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.39, ptr @.str.41, ptr @.str.43, ptr @.str.45, ptr @.str.47, ptr @transport_init_session.__key, ptr @.str.49, ptr @transport_init_session.__key.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.57, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @target_complete_cmd_with_sense.__key, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @transport_set_vpd_ident.hex_str, ptr @target_cmd_size_check._rs, ptr @.str.113, ptr @.str.114, ptr @target_cmd_size_check._rs.115, ptr @.str.117, ptr @target_cmd_size_check._rs.119, ptr @.str.121, ptr @.str.123, ptr @.str.125, ptr @.str.126, ptr @.str.128, ptr @target_cmd_parse_cdb._rs, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @target_submit_tmr.__key, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @transport_generic_request_failure.__key, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @transport_generic_handle_tmr._rs, ptr @.str.155, ptr @transport_generic_handle_tmr.__key, ptr @.str.156, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @.str.160, ptr @.str.161, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @.str.165, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @trace_raw_output_target_sequencer_start.symbols, ptr @.str.171, ptr @.str.172, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @.str.178, ptr @.str.179, ptr @.str.180, ptr @.str.181, ptr @.str.182, ptr @.str.183, ptr @.str.184, ptr @.str.185, ptr @.str.186, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.190, ptr @.str.191, ptr @.str.192, ptr @.str.193, ptr @.str.194, ptr @.str.195, ptr @.str.196, ptr @.str.197, ptr @.str.198, ptr @.str.199, ptr @.str.200, ptr @.str.201, ptr @.str.202, ptr @.str.203, ptr @.str.204, ptr @.str.205, ptr @.str.206, ptr @.str.207, ptr @.str.208, ptr @.str.209, ptr @.str.210, ptr @.str.211, ptr @.str.212, ptr @.str.213, ptr @.str.214, ptr @.str.215, ptr @.str.216, ptr @.str.217, ptr @.str.218, ptr @.str.219, ptr @.str.220, ptr @.str.221, ptr @.str.222, ptr @.str.223, ptr @.str.224, ptr @.str.225, ptr @.str.226, ptr @.str.227, ptr @.str.228, ptr @.str.229, ptr @.str.230, ptr @.str.231, ptr @.str.232, ptr @.str.233, ptr @.str.234, ptr @.str.235, ptr @.str.236, ptr @.str.237, ptr @.str.238, ptr @.str.239, ptr @.str.240, ptr @.str.241, ptr @.str.242, ptr @.str.243, ptr @.str.244, ptr @.str.245, ptr @.str.246, ptr @.str.247, ptr @.str.248, ptr @.str.249, ptr @.str.250, ptr @.str.251, ptr @.str.252, ptr @.str.253, ptr @.str.254, ptr @.str.255, ptr @.str.256, ptr @.str.257, ptr @.str.258, ptr @.str.259, ptr @.str.260, ptr @.str.261, ptr @.str.262, ptr @trace_raw_output_target_sequencer_start.symbols.263, ptr @.str.264, ptr @.str.265, ptr @.str.266, ptr @.str.267, ptr @.str.268, ptr @.str.269, ptr @.str.270, ptr @.str.271, ptr @.str.272, ptr @trace_raw_output_target_cmd_complete.symbols, ptr @.str.273, ptr @.str.274, ptr @.str.275, ptr @.str.276, ptr @.str.277, ptr @.str.278, ptr @.str.279, ptr @.str.280, ptr @.str.281, ptr @.str.282, ptr @.str.283, ptr @.str.284, ptr @.str.285, ptr @trace_raw_output_target_cmd_complete.symbols.286, ptr @trace_raw_output_target_cmd_complete.symbols.287, ptr @.str.288, ptr @init_completion.__key, ptr @.str.289, ptr @.str.290, ptr @.str.291, ptr @.str.292, ptr @.str.293, ptr @.str.294, ptr @.str.296, ptr @.str.298, ptr @.str.299, ptr @target_cmd_interrupted.__key, ptr @.str.300, ptr @.str.301, ptr @.str.302, ptr @.str.303, ptr @.str.304, ptr @.str.305, ptr @.str.306, ptr @.str.307, ptr @.str.308, ptr @.str.309, ptr @.str.310, ptr @.str.311, ptr @.str.312, ptr @.str.313, ptr @transport_handle_queue_full._rs, ptr @.str.314, ptr @.str.315, ptr @.str.316, ptr @.str.317, ptr @.str.318, ptr @.str.319, ptr @.str.320, ptr @.str.321, ptr @.str.322, ptr @.str.323, ptr @.str.324, ptr @.str.325, ptr @.str.326, ptr @.str.327, ptr @.str.328, ptr @.str.329, ptr @.str.330, ptr @.str.331, ptr @.str.332, ptr @.str.333, ptr @.str.334, ptr @.str.335, ptr @.str.336, ptr @.str.337, ptr @.str.338, ptr @.str.339, ptr @.str.340, ptr @.str.341, ptr @.str.342, ptr @.str.343, ptr @.str.344, ptr @.str.345, ptr @.str.346, ptr @.str.347, ptr @sense_detail_table, ptr @.str.349, ptr @.str.350, ptr @.str.351, ptr @.str.353, ptr @.str.354, ptr @switch.table.transport_dump_cmd_direction, ptr @switch.table.target_show_cmd, ptr @switch.table.target_show_cmd.355, ptr @switch.table.target_show_cmd.356], section "llvm.metadata"
@0 = internal global [391 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__target__trace_system_name to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.380 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_target_sequencer_start to i32), i32 216, i32 256, i32 ptrtoint (ptr @___asan_gen_.383 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_target_sequencer_start to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.386 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_target_sequencer_start to i32), i32 2726, i32 3424, i32 ptrtoint (ptr @___asan_gen_.389 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_target_sequencer_start to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.392 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_target_cmd_complete to i32), i32 288, i32 352, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_target_cmd_complete to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.398 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_target_cmd_complete to i32), i32 3396, i32 4256, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_target_cmd_complete to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @se_sess_cache to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.412 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_se_kmem_caches._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @se_ua_cache to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.430 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_se_kmem_caches._entry.5 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.439 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t10_pr_reg_cache to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_se_kmem_caches._entry.9 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.448 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.448 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t10_alua_lu_gp_cache to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.452 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_se_kmem_caches._entry.13 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t10_alua_lu_gp_mem_cache to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_se_kmem_caches._entry.17 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t10_alua_tg_pt_gp_cache to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.476 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.478 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_se_kmem_caches._entry.21 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t10_alua_lba_map_cache to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_se_kmem_caches._entry.25 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.499 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t10_alua_lba_map_mem_cache to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_se_kmem_caches._entry.29 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @target_completion_wq to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.512 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.517 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @target_submission_wq to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.518 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @scsi_mib_index_lock to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.521 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @scsi_mib_index to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.524 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @transport_subsystem_check_init.sub_api_initialized to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @transport_subsystem_check_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.542 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @transport_subsystem_check_init._entry.38 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @transport_subsystem_check_init._entry.42 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.557 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.557 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @transport_subsystem_check_init._entry.46 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.566 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.566 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @transport_init_session.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1365 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.572 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.572 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @transport_init_session.__key.50 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1365 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @transport_alloc_session._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @transport_alloc_session_tags._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @transport_alloc_session_tags._entry.56 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.620 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.620 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @target_complete_cmd_with_sense.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1365 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.626 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.641 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.641 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.641 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.641 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.641 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.659 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.680 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.683 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.701 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.704 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.713 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.716 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.719 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.731 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.737 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.743 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.746 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.749 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.755 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.758 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.761 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.764 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.767 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @transport_set_vpd_ident.hex_str to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.768 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @target_cmd_size_check._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.1410 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @target_cmd_size_check._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 107, i32 160, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @target_cmd_size_check._rs.115 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.1410 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @target_cmd_size_check._entry.116 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @target_cmd_size_check._rs.119 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.1410 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @target_cmd_size_check._entry.120 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.803 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @target_cmd_init_cdb._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.812 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 85, i32 128, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.812 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.812 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @target_cmd_init_cdb._entry.127 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 78, i32 128, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @target_cmd_parse_cdb._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.1410 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.827 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.827 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.827 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @transport_handle_cdb_direct._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @transport_generic_map_mem_to_cmd._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.845 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 83, i32 128, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.845 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.845 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 106, i32 160, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @target_submit_tmr.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1365 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.854 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.863 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @transport_generic_request_failure.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1365 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.866 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @transport_generic_request_failure._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.872 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.872 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.878 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.878 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.881 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.887 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.887 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.893 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 99, i32 160, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.893 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 95, i32 128, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.896 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.902 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.908 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.911 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @transport_generic_handle_tmr._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.1410 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.920 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @transport_generic_handle_tmr._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.920 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.920 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @transport_generic_handle_tmr.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1365 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.923 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_target_sequencer_start.symbols to i32), i32 744, i32 928, i32 ptrtoint (ptr @___asan_gen_.1323 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.184 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.190 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.194 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.199 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.202 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.205 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.206 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.207 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.208 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.209 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.213 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.215 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.216 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.217 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.218 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.219 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.220 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.221 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.222 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.223 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.224 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.225 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.226 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.227 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.228 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.230 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.231 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.232 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.233 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.234 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.235 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.236 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.238 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.239 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.240 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.241 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.242 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.243 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.244 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.245 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.246 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.247 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.248 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.249 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.250 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.251 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.252 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.253 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.254 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.255 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.256 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.257 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.258 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.259 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.260 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.261 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.262 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_target_sequencer_start.symbols.263 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1323 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.264 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.265 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.266 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.267 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.268 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.269 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.270 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.271 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.272 to i32), i32 99, i32 160, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_target_cmd_complete.symbols to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1323 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.273 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.274 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.275 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.276 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.277 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.278 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.279 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.280 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.281 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.282 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.283 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.284 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.285 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_target_cmd_complete.symbols.286 to i32), i32 744, i32 928, i32 ptrtoint (ptr @___asan_gen_.1323 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_target_cmd_complete.symbols.287 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1323 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.288 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_completion.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1365 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.289 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.290 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.291 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.292 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1343 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @transport_init_session_tags._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.293 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.294 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @transport_init_session_tags._entry.295 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.296 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.298 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.299 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @target_cmd_interrupted.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1365 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.300 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.301 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.302 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.303 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.304 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.305 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1385 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.306 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.307 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.308 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.309 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1397 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.310 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.311 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1406 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.312 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1406 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.313 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @transport_handle_queue_full._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.1410 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @transport_handle_queue_full._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.314 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.315 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.316 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.317 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1430 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.318 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1430 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.319 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.320 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.321 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1439 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.322 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.323 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1445 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.324 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1448 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.325 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.326 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.327 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.328 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.329 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1463 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.330 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.331 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1469 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.332 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.333 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.334 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1478 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.335 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1481 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.336 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.337 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.338 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.339 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.340 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.341 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1499 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.342 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.343 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.344 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.345 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.346 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1517 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.347 to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1517 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sense_detail_table to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.1518 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.349 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.350 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.351 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @target_tmr_work._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1530 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.353 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.354 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1536 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.transport_dump_cmd_direction to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1539 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.target_show_cmd to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1540 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.target_show_cmd.355 to i32), i32 84, i32 128, i32 ptrtoint (ptr @___asan_gen_.1541 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.target_show_cmd.356 to i32), i32 84, i32 128, i32 ptrtoint (ptr @___asan_gen_.1542 to i32), i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_target_sequencer_start(ptr nocapture readnone %__data, ptr noundef %cmd) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_target_sequencer_start, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %cmd) #16
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_target_cmd_complete(ptr nocapture readnone %__data, ptr noundef %cmd) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_target_cmd_complete, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %cmd) #16
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_target_sequencer_start(ptr noundef %__data, ptr nocapture noundef readonly %cmd) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #16
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !767

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !768

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #16
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %se_sess.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 21
  %3 = ptrtoint ptr %se_sess.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %se_sess.i, align 4
  %se_node_acl.i = getelementptr inbounds %struct.se_session, ptr %4, i32 0, i32 4
  %5 = ptrtoint ptr %se_node_acl.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %se_node_acl.i, align 8
  %tobool.not.i44 = icmp eq ptr %6, null
  %spec.select.i = select i1 %tobool.not.i44, ptr @.str.156, ptr %6
  %call.i45 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #19
  %add = add i32 %call.i45, 81
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #16
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %add.i = shl i32 %call.i45, 16
  %or.i = add i32 %add.i, 65612
  %__data_loc_initiator = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %call3, i32 0, i32 8
  %7 = ptrtoint ptr %__data_loc_initiator to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_initiator, align 8
  %orig_fe_lun = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 14
  %8 = ptrtoint ptr %orig_fe_lun to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %orig_fe_lun, align 8
  %conv = trunc i64 %9 to i32
  %unpacked_lun = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %call3, i32 0, i32 1
  %10 = ptrtoint ptr %unpacked_lun to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %conv, ptr %unpacked_lun, align 8
  %tag = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 4
  %11 = ptrtoint ptr %tag to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %tag, align 8
  %tag6 = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %call3, i32 0, i32 2
  %13 = ptrtoint ptr %tag6 to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %12, ptr %tag6, align 8
  %t_task_cdb = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 30
  %14 = ptrtoint ptr %t_task_cdb to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %t_task_cdb, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %15, align 1
  %conv7 = zext i8 %17 to i32
  %opcode = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %call3, i32 0, i32 3
  %18 = ptrtoint ptr %opcode to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %conv7, ptr %opcode, align 8
  %data_length = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 12
  %19 = ptrtoint ptr %data_length to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %data_length, align 4
  %data_length8 = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %call3, i32 0, i32 4
  %21 = ptrtoint ptr %data_length8 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %data_length8, align 4
  %sam_task_attr = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 7
  %22 = ptrtoint ptr %sam_task_attr to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %sam_task_attr, align 8
  %task_attribute = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %call3, i32 0, i32 5
  %24 = ptrtoint ptr %task_attribute to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %task_attribute, align 8
  %25 = load ptr, ptr %t_task_cdb, align 8
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %25, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 127, i8 %27)
  %cmp.i = icmp eq i8 %27, 127
  br i1 %cmp.i, label %if.end5.scsi_command_control.exit_crit_edge, label %cond.false.i

if.end5.scsi_command_control.exit_crit_edge:      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  br label %scsi_command_control.exit

cond.false.i:                                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  %28 = lshr i8 %27, 5
  %29 = zext i8 %28 to i32
  %arrayidx6.i = getelementptr [8 x i8], ptr @scsi_command_size_tbl, i32 0, i32 %29
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %arrayidx6.i, align 1
  %conv7.i = zext i8 %31 to i32
  %sub.i = add nsw i32 %conv7.i, -1
  br label %scsi_command_control.exit

scsi_command_control.exit:                        ; preds = %cond.false.i, %if.end5.scsi_command_control.exit_crit_edge
  %sub.sink.i = phi i32 [ %sub.i, %cond.false.i ], [ 1, %if.end5.scsi_command_control.exit_crit_edge ]
  %arrayidx8.i = getelementptr i8, ptr %25, i32 %sub.sink.i
  %32 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load1_noabort(i32 %32)
  %cond.in14.i = load i8, ptr %arrayidx8.i, align 1
  %control = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %call3, i32 0, i32 6
  %33 = ptrtoint ptr %control to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 %cond.in14.i, ptr %control, align 4
  %cdb = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %call3, i32 0, i32 7
  %34 = ptrtoint ptr %t_task_cdb to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %t_task_cdb, align 8
  %36 = call ptr @memcpy(ptr %cdb, ptr %35, i32 32)
  %add.ptr = getelementptr i8, ptr %call3, i32 76
  %37 = ptrtoint ptr %se_sess.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %se_sess.i, align 4
  %se_node_acl = getelementptr inbounds %struct.se_session, ptr %38, i32 0, i32 4
  %39 = ptrtoint ptr %se_node_acl to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %se_node_acl, align 8
  %tobool14.not = icmp eq ptr %40, null
  %spec.select = select i1 %tobool14.not, ptr @.str.156, ptr %40
  %call19 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #20
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #16
  br label %cleanup

cleanup:                                          ; preds = %scsi_command_control.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_target_sequencer_start(ptr noundef %__data, ptr nocapture noundef readonly %cmd) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #16
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !769
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #16
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !769
  %se_sess.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 21
  %2 = ptrtoint ptr %se_sess.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %se_sess.i, align 4
  %se_node_acl.i = getelementptr inbounds %struct.se_session, ptr %3, i32 0, i32 4
  %4 = ptrtoint ptr %se_node_acl.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %se_node_acl.i, align 8
  %tobool.not.i = icmp eq ptr %5, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.156, ptr %5
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #19
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65612
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !757) #16
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i69.not = icmp eq ptr %19, null
  br i1 %tobool.not.i69.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 92
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #16
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #16
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #16
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !757) #16
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_initiator = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %call13, i32 0, i32 8
  %31 = ptrtoint ptr %__data_loc_initiator to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_initiator, align 8
  %orig_fe_lun = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 14
  %32 = ptrtoint ptr %orig_fe_lun to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %orig_fe_lun, align 8
  %conv = trunc i64 %33 to i32
  %unpacked_lun = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %call13, i32 0, i32 1
  %34 = ptrtoint ptr %unpacked_lun to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %conv, ptr %unpacked_lun, align 8
  %tag = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 4
  %35 = ptrtoint ptr %tag to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %tag, align 8
  %tag17 = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %call13, i32 0, i32 2
  %37 = ptrtoint ptr %tag17 to i32
  call void @__asan_store8_noabort(i32 %37)
  store i64 %36, ptr %tag17, align 8
  %t_task_cdb = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 30
  %38 = ptrtoint ptr %t_task_cdb to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %t_task_cdb, align 8
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %39, align 1
  %conv19 = zext i8 %41 to i32
  %opcode = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %call13, i32 0, i32 3
  %42 = ptrtoint ptr %opcode to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %conv19, ptr %opcode, align 8
  %data_length = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 12
  %43 = ptrtoint ptr %data_length to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %data_length, align 4
  %data_length20 = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %call13, i32 0, i32 4
  %45 = ptrtoint ptr %data_length20 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %data_length20, align 4
  %sam_task_attr = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 7
  %46 = ptrtoint ptr %sam_task_attr to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %sam_task_attr, align 8
  %task_attribute = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %call13, i32 0, i32 5
  %48 = ptrtoint ptr %task_attribute to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %task_attribute, align 8
  %49 = load ptr, ptr %t_task_cdb, align 8
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %49, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 127, i8 %51)
  %cmp.i = icmp eq i8 %51, 127
  br i1 %cmp.i, label %if.end16.scsi_command_control.exit_crit_edge, label %cond.false.i

if.end16.scsi_command_control.exit_crit_edge:     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  br label %scsi_command_control.exit

cond.false.i:                                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  %52 = lshr i8 %51, 5
  %53 = zext i8 %52 to i32
  %arrayidx6.i70 = getelementptr [8 x i8], ptr @scsi_command_size_tbl, i32 0, i32 %53
  %54 = ptrtoint ptr %arrayidx6.i70 to i32
  call void @__asan_load1_noabort(i32 %54)
  %55 = load i8, ptr %arrayidx6.i70, align 1
  %conv7.i = zext i8 %55 to i32
  %sub.i = add nsw i32 %conv7.i, -1
  br label %scsi_command_control.exit

scsi_command_control.exit:                        ; preds = %cond.false.i, %if.end16.scsi_command_control.exit_crit_edge
  %sub.sink.i = phi i32 [ %sub.i, %cond.false.i ], [ 1, %if.end16.scsi_command_control.exit_crit_edge ]
  %arrayidx8.i = getelementptr i8, ptr %49, i32 %sub.sink.i
  %56 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load1_noabort(i32 %56)
  %cond.in14.i = load i8, ptr %arrayidx8.i, align 1
  %control = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %call13, i32 0, i32 6
  %57 = ptrtoint ptr %control to i32
  call void @__asan_store1_noabort(i32 %57)
  store i8 %cond.in14.i, ptr %control, align 4
  %cdb = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %call13, i32 0, i32 7
  %58 = ptrtoint ptr %t_task_cdb to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %t_task_cdb, align 8
  %60 = call ptr @memcpy(ptr %cdb, ptr %59, i32 32)
  %add.ptr = getelementptr i8, ptr %call13, i32 76
  %61 = ptrtoint ptr %se_sess.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %se_sess.i, align 4
  %se_node_acl = getelementptr inbounds %struct.se_session, ptr %62, i32 0, i32 4
  %63 = ptrtoint ptr %se_node_acl to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %se_node_acl, align 8
  %tobool27.not = icmp eq ptr %64, null
  %spec.select = select i1 %tobool27.not, ptr @.str.156, ptr %64
  %call32 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #20
  %65 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %rctx, align 4
  %67 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %66, ptr noundef %__data, i64 noundef 1, ptr noundef %68, ptr noundef %15, ptr noundef null) #16
  br label %cleanup

cleanup:                                          ; preds = %scsi_command_control.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_target_cmd_complete(ptr noundef %__data, ptr nocapture noundef readonly %cmd) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #16
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !767

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !768

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #16
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %se_sess.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 21
  %3 = ptrtoint ptr %se_sess.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %se_sess.i, align 4
  %se_node_acl.i = getelementptr inbounds %struct.se_session, ptr %4, i32 0, i32 4
  %5 = ptrtoint ptr %se_node_acl.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %se_node_acl.i, align 8
  %tobool.not.i76 = icmp eq ptr %6, null
  %spec.select.i = select i1 %tobool.not.i76, ptr @.str.156, ptr %6
  %call.i77 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #19
  %add = add i32 %call.i77, 97
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #16
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %add.i = shl i32 %call.i77, 16
  %or.i = add i32 %add.i, 65632
  %__data_loc_initiator = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %call3, i32 0, i32 11
  %7 = ptrtoint ptr %__data_loc_initiator to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_initiator, align 4
  %orig_fe_lun = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 14
  %8 = ptrtoint ptr %orig_fe_lun to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %orig_fe_lun, align 8
  %conv = trunc i64 %9 to i32
  %unpacked_lun = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %call3, i32 0, i32 1
  %10 = ptrtoint ptr %unpacked_lun to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %conv, ptr %unpacked_lun, align 8
  %tag = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 4
  %11 = ptrtoint ptr %tag to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %tag, align 8
  %tag6 = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %call3, i32 0, i32 2
  %13 = ptrtoint ptr %tag6 to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %12, ptr %tag6, align 8
  %t_task_cdb = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 30
  %14 = ptrtoint ptr %t_task_cdb to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %t_task_cdb, align 8
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %15, align 1
  %conv7 = zext i8 %17 to i32
  %opcode = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %call3, i32 0, i32 3
  %18 = ptrtoint ptr %opcode to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %conv7, ptr %opcode, align 8
  %data_length = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 12
  %19 = ptrtoint ptr %data_length to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %data_length, align 4
  %data_length8 = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %call3, i32 0, i32 4
  %21 = ptrtoint ptr %data_length8 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %data_length8, align 4
  %sam_task_attr = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 7
  %22 = ptrtoint ptr %sam_task_attr to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %sam_task_attr, align 8
  %task_attribute = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %call3, i32 0, i32 5
  %24 = ptrtoint ptr %task_attribute to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %task_attribute, align 8
  %25 = load ptr, ptr %t_task_cdb, align 8
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %25, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 127, i8 %27)
  %cmp.i = icmp eq i8 %27, 127
  br i1 %cmp.i, label %if.end5.scsi_command_control.exit_crit_edge, label %cond.false.i

if.end5.scsi_command_control.exit_crit_edge:      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  br label %scsi_command_control.exit

cond.false.i:                                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  %28 = lshr i8 %27, 5
  %29 = zext i8 %28 to i32
  %arrayidx6.i = getelementptr [8 x i8], ptr @scsi_command_size_tbl, i32 0, i32 %29
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %arrayidx6.i, align 1
  %conv7.i = zext i8 %31 to i32
  %sub.i = add nsw i32 %conv7.i, -1
  br label %scsi_command_control.exit

scsi_command_control.exit:                        ; preds = %cond.false.i, %if.end5.scsi_command_control.exit_crit_edge
  %sub.sink.i = phi i32 [ %sub.i, %cond.false.i ], [ 1, %if.end5.scsi_command_control.exit_crit_edge ]
  %arrayidx8.i = getelementptr i8, ptr %25, i32 %sub.sink.i
  %32 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load1_noabort(i32 %32)
  %cond.in14.i = load i8, ptr %arrayidx8.i, align 1
  %control = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %call3, i32 0, i32 6
  %33 = ptrtoint ptr %control to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 %cond.in14.i, ptr %control, align 4
  %scsi_status = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 1
  %34 = ptrtoint ptr %scsi_status to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %scsi_status, align 4
  %scsi_status11 = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %call3, i32 0, i32 7
  %36 = ptrtoint ptr %scsi_status11 to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 %35, ptr %scsi_status11, align 1
  %37 = load i8, ptr %scsi_status, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %37)
  %cmp = icmp eq i8 %37, 2
  br i1 %cmp, label %cond.true, label %scsi_command_control.exit.cond.end22_crit_edge

scsi_command_control.exit.cond.end22_crit_edge:   ; preds = %scsi_command_control.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end22

cond.true:                                        ; preds = %scsi_command_control.exit
  call void @__sanitizer_cov_trace_pc() #18
  %sense_buffer = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 16
  %38 = ptrtoint ptr %sense_buffer to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %sense_buffer, align 8
  %arrayidx15 = getelementptr i8, ptr %39, i32 7
  %40 = ptrtoint ptr %arrayidx15 to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %arrayidx15, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 10, i8 %41)
  %cmp18 = icmp ugt i8 %41, 10
  %add17 = add i8 %41, 8
  %cond = select i1 %cmp18, i8 18, i8 %add17
  br label %cond.end22

cond.end22:                                       ; preds = %cond.true, %scsi_command_control.exit.cond.end22_crit_edge
  %cond23 = phi i8 [ %cond, %cond.true ], [ 0, %scsi_command_control.exit.cond.end22_crit_edge ]
  %sense_length = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %call3, i32 0, i32 8
  %42 = ptrtoint ptr %sense_length to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 %cond23, ptr %sense_length, align 2
  %cdb = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %call3, i32 0, i32 9
  %43 = ptrtoint ptr %t_task_cdb to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %t_task_cdb, align 8
  %45 = call ptr @memcpy(ptr %cdb, ptr %44, i32 32)
  %sense_data = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %call3, i32 0, i32 10
  %sense_buffer27 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 16
  %46 = ptrtoint ptr %sense_buffer27 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %sense_buffer27, align 8
  %conv29 = zext i8 %cond23 to i32
  %48 = call ptr @memcpy(ptr %sense_data, ptr %47, i32 %conv29)
  %49 = ptrtoint ptr %__data_loc_initiator to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %__data_loc_initiator, align 4
  %and = and i32 %50, 65535
  %add.ptr = getelementptr i8, ptr %call3, i32 %and
  %51 = ptrtoint ptr %se_sess.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %se_sess.i, align 4
  %se_node_acl = getelementptr inbounds %struct.se_session, ptr %52, i32 0, i32 4
  %53 = ptrtoint ptr %se_node_acl to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %se_node_acl, align 8
  %tobool32.not = icmp eq ptr %54, null
  %spec.select = select i1 %tobool32.not, ptr @.str.156, ptr %54
  %call41 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #20
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #16
  br label %cleanup

cleanup:                                          ; preds = %cond.end22, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_target_cmd_complete(ptr noundef %__data, ptr nocapture noundef readonly %cmd) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #16
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !769
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #16
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !769
  %se_sess.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 21
  %2 = ptrtoint ptr %se_sess.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %se_sess.i, align 4
  %se_node_acl.i = getelementptr inbounds %struct.se_session, ptr %3, i32 0, i32 4
  %4 = ptrtoint ptr %se_node_acl.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %se_node_acl.i, align 8
  %tobool.not.i = icmp eq ptr %5, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.156, ptr %5
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #19
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65632
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !757) #16
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i102.not = icmp eq ptr %19, null
  br i1 %tobool.not.i102.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 108
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #16
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #16
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #16
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !757) #16
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_initiator = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %call13, i32 0, i32 11
  %31 = ptrtoint ptr %__data_loc_initiator to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_initiator, align 4
  %orig_fe_lun = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 14
  %32 = ptrtoint ptr %orig_fe_lun to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %orig_fe_lun, align 8
  %conv = trunc i64 %33 to i32
  %unpacked_lun = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %call13, i32 0, i32 1
  %34 = ptrtoint ptr %unpacked_lun to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %conv, ptr %unpacked_lun, align 8
  %tag = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 4
  %35 = ptrtoint ptr %tag to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %tag, align 8
  %tag17 = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %call13, i32 0, i32 2
  %37 = ptrtoint ptr %tag17 to i32
  call void @__asan_store8_noabort(i32 %37)
  store i64 %36, ptr %tag17, align 8
  %t_task_cdb = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 30
  %38 = ptrtoint ptr %t_task_cdb to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %t_task_cdb, align 8
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %39, align 1
  %conv19 = zext i8 %41 to i32
  %opcode = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %call13, i32 0, i32 3
  %42 = ptrtoint ptr %opcode to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %conv19, ptr %opcode, align 8
  %data_length = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 12
  %43 = ptrtoint ptr %data_length to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %data_length, align 4
  %data_length20 = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %call13, i32 0, i32 4
  %45 = ptrtoint ptr %data_length20 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %data_length20, align 4
  %sam_task_attr = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 7
  %46 = ptrtoint ptr %sam_task_attr to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %sam_task_attr, align 8
  %task_attribute = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %call13, i32 0, i32 5
  %48 = ptrtoint ptr %task_attribute to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %task_attribute, align 8
  %49 = load ptr, ptr %t_task_cdb, align 8
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %49, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 127, i8 %51)
  %cmp.i = icmp eq i8 %51, 127
  br i1 %cmp.i, label %if.end16.scsi_command_control.exit_crit_edge, label %cond.false.i

if.end16.scsi_command_control.exit_crit_edge:     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  br label %scsi_command_control.exit

cond.false.i:                                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  %52 = lshr i8 %51, 5
  %53 = zext i8 %52 to i32
  %arrayidx6.i103 = getelementptr [8 x i8], ptr @scsi_command_size_tbl, i32 0, i32 %53
  %54 = ptrtoint ptr %arrayidx6.i103 to i32
  call void @__asan_load1_noabort(i32 %54)
  %55 = load i8, ptr %arrayidx6.i103, align 1
  %conv7.i = zext i8 %55 to i32
  %sub.i = add nsw i32 %conv7.i, -1
  br label %scsi_command_control.exit

scsi_command_control.exit:                        ; preds = %cond.false.i, %if.end16.scsi_command_control.exit_crit_edge
  %sub.sink.i = phi i32 [ %sub.i, %cond.false.i ], [ 1, %if.end16.scsi_command_control.exit_crit_edge ]
  %arrayidx8.i = getelementptr i8, ptr %49, i32 %sub.sink.i
  %56 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load1_noabort(i32 %56)
  %cond.in14.i = load i8, ptr %arrayidx8.i, align 1
  %control = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %call13, i32 0, i32 6
  %57 = ptrtoint ptr %control to i32
  call void @__asan_store1_noabort(i32 %57)
  store i8 %cond.in14.i, ptr %control, align 4
  %scsi_status = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 1
  %58 = ptrtoint ptr %scsi_status to i32
  call void @__asan_load1_noabort(i32 %58)
  %59 = load i8, ptr %scsi_status, align 4
  %scsi_status23 = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %call13, i32 0, i32 7
  %60 = ptrtoint ptr %scsi_status23 to i32
  call void @__asan_store1_noabort(i32 %60)
  store i8 %59, ptr %scsi_status23, align 1
  %61 = load i8, ptr %scsi_status, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %61)
  %cmp = icmp eq i8 %61, 2
  br i1 %cmp, label %cond.true, label %scsi_command_control.exit.cond.end35_crit_edge

scsi_command_control.exit.cond.end35_crit_edge:   ; preds = %scsi_command_control.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end35

cond.true:                                        ; preds = %scsi_command_control.exit
  call void @__sanitizer_cov_trace_pc() #18
  %sense_buffer = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 16
  %62 = ptrtoint ptr %sense_buffer to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %sense_buffer, align 8
  %arrayidx27 = getelementptr i8, ptr %63, i32 7
  %64 = ptrtoint ptr %arrayidx27 to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %arrayidx27, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 10, i8 %65)
  %cmp31 = icmp ugt i8 %65, 10
  %add29 = add i8 %65, 8
  %cond = select i1 %cmp31, i8 18, i8 %add29
  br label %cond.end35

cond.end35:                                       ; preds = %cond.true, %scsi_command_control.exit.cond.end35_crit_edge
  %cond36 = phi i8 [ %cond, %cond.true ], [ 0, %scsi_command_control.exit.cond.end35_crit_edge ]
  %sense_length = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %call13, i32 0, i32 8
  %66 = ptrtoint ptr %sense_length to i32
  call void @__asan_store1_noabort(i32 %66)
  store i8 %cond36, ptr %sense_length, align 2
  %cdb = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %call13, i32 0, i32 9
  %67 = ptrtoint ptr %t_task_cdb to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %t_task_cdb, align 8
  %69 = call ptr @memcpy(ptr %cdb, ptr %68, i32 32)
  %sense_data = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %call13, i32 0, i32 10
  %sense_buffer40 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 16
  %70 = ptrtoint ptr %sense_buffer40 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %sense_buffer40, align 8
  %conv42 = zext i8 %cond36 to i32
  %72 = call ptr @memcpy(ptr %sense_data, ptr %71, i32 %conv42)
  %73 = ptrtoint ptr %__data_loc_initiator to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %__data_loc_initiator, align 4
  %and44 = and i32 %74, 65535
  %add.ptr = getelementptr i8, ptr %call13, i32 %and44
  %75 = ptrtoint ptr %se_sess.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %se_sess.i, align 4
  %se_node_acl = getelementptr inbounds %struct.se_session, ptr %76, i32 0, i32 4
  %77 = ptrtoint ptr %se_node_acl to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %se_node_acl, align 8
  %tobool46.not = icmp eq ptr %78, null
  %spec.select = select i1 %tobool46.not, ptr @.str.156, ptr %78
  %call55 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #20
  %79 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %rctx, align 4
  %81 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %80, ptr noundef %__data, i64 noundef 1, ptr noundef %82, ptr noundef %15, ptr noundef null) #16
  br label %cleanup

cleanup:                                          ; preds = %cond.end35, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_target_sequencer_start(ptr noundef %__data, ptr noundef %cmd) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %0 = ptrtoint ptr %cmd to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_target_cmd_complete(ptr noundef %__data, ptr noundef %cmd) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %0 = ptrtoint ptr %cmd to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @init_se_kmem_caches() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str, i32 noundef 264, i32 noundef 8, i32 noundef 0, ptr noundef null) #16
  store ptr %call, ptr @se_sess_cache, align 4
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call1 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #21
  br label %return

if.end:                                           ; preds = %entry
  %call2 = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.4, i32 noundef 12, i32 noundef 4, i32 noundef 0, ptr noundef null) #16
  store ptr %call2, ptr @se_ua_cache, align 4
  %tobool3.not = icmp eq ptr %call2, null
  br i1 %tobool3.not, label %do.end6, label %if.end9

do.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.6) #21
  br label %out_free_sess_cache

if.end9:                                          ; preds = %if.end
  %call10 = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.8, i32 noundef 656, i32 noundef 8, i32 noundef 0, ptr noundef null) #16
  store ptr %call10, ptr @t10_pr_reg_cache, align 4
  %tobool11.not = icmp eq ptr %call10, null
  br i1 %tobool11.not, label %do.end14, label %if.end17

do.end14:                                         ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  %call16 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.10) #21
  br label %out_free_ua_cache

if.end17:                                         ; preds = %if.end9
  %call18 = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.12, i32 noundef 156, i32 noundef 4, i32 noundef 0, ptr noundef null) #16
  store ptr %call18, ptr @t10_alua_lu_gp_cache, align 4
  %tobool19.not = icmp eq ptr %call18, null
  br i1 %tobool19.not, label %do.end22, label %if.end25

do.end22:                                         ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  %call24 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.14) #21
  br label %out_free_pr_reg_cache

if.end25:                                         ; preds = %if.end17
  %call26 = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.16, i32 noundef 68, i32 noundef 4, i32 noundef 0, ptr noundef null) #16
  store ptr %call26, ptr @t10_alua_lu_gp_mem_cache, align 4
  %tobool27.not = icmp eq ptr %call26, null
  br i1 %tobool27.not, label %do.end30, label %if.end33

do.end30:                                         ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #18
  %call32 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.18) #21
  br label %out_free_lu_gp_cache

if.end33:                                         ; preds = %if.end25
  %call34 = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.20, i32 noundef 296, i32 noundef 4, i32 noundef 0, ptr noundef null) #16
  store ptr %call34, ptr @t10_alua_tg_pt_gp_cache, align 4
  %tobool35.not = icmp eq ptr %call34, null
  br i1 %tobool35.not, label %do.end38, label %if.end41

do.end38:                                         ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #18
  %call40 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.22) #21
  br label %out_free_lu_gp_mem_cache

if.end41:                                         ; preds = %if.end33
  %call42 = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.24, i32 noundef 32, i32 noundef 8, i32 noundef 0, ptr noundef null) #16
  store ptr %call42, ptr @t10_alua_lba_map_cache, align 4
  %tobool43.not = icmp eq ptr %call42, null
  br i1 %tobool43.not, label %do.end46, label %if.end49

do.end46:                                         ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #18
  %call48 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.26) #21
  br label %out_free_tg_pt_gp_cache

if.end49:                                         ; preds = %if.end41
  %call50 = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.28, i32 noundef 16, i32 noundef 4, i32 noundef 0, ptr noundef null) #16
  store ptr %call50, ptr @t10_alua_lba_map_mem_cache, align 4
  %tobool51.not = icmp eq ptr %call50, null
  br i1 %tobool51.not, label %do.end54, label %if.end57

do.end54:                                         ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #18
  %call56 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.30) #21
  br label %out_free_lba_map_cache

if.end57:                                         ; preds = %if.end49
  %call58 = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.32, i32 noundef 8, i32 noundef 0) #16
  store ptr %call58, ptr @target_completion_wq, align 4
  %tobool59.not = icmp eq ptr %call58, null
  br i1 %tobool59.not, label %if.end57.out_free_lba_map_mem_cache_crit_edge, label %if.end61

if.end57.out_free_lba_map_mem_cache_crit_edge:    ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_free_lba_map_mem_cache

if.end61:                                         ; preds = %if.end57
  %call62 = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.33, i32 noundef 8, i32 noundef 0) #16
  store ptr %call62, ptr @target_submission_wq, align 4
  %tobool63.not = icmp eq ptr %call62, null
  br i1 %tobool63.not, label %out_free_completion_wq, label %if.end61.return_crit_edge

if.end61.return_crit_edge:                        ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

out_free_completion_wq:                           ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #18
  %0 = load ptr, ptr @target_completion_wq, align 4
  tail call void @destroy_workqueue(ptr noundef %0) #16
  br label %out_free_lba_map_mem_cache

out_free_lba_map_mem_cache:                       ; preds = %out_free_completion_wq, %if.end57.out_free_lba_map_mem_cache_crit_edge
  %1 = load ptr, ptr @t10_alua_lba_map_mem_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %1) #16
  br label %out_free_lba_map_cache

out_free_lba_map_cache:                           ; preds = %out_free_lba_map_mem_cache, %do.end54
  %2 = load ptr, ptr @t10_alua_lba_map_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %2) #16
  br label %out_free_tg_pt_gp_cache

out_free_tg_pt_gp_cache:                          ; preds = %out_free_lba_map_cache, %do.end46
  %3 = load ptr, ptr @t10_alua_tg_pt_gp_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %3) #16
  br label %out_free_lu_gp_mem_cache

out_free_lu_gp_mem_cache:                         ; preds = %out_free_tg_pt_gp_cache, %do.end38
  %4 = load ptr, ptr @t10_alua_lu_gp_mem_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %4) #16
  br label %out_free_lu_gp_cache

out_free_lu_gp_cache:                             ; preds = %out_free_lu_gp_mem_cache, %do.end30
  %5 = load ptr, ptr @t10_alua_lu_gp_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %5) #16
  br label %out_free_pr_reg_cache

out_free_pr_reg_cache:                            ; preds = %out_free_lu_gp_cache, %do.end22
  %6 = load ptr, ptr @t10_pr_reg_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %6) #16
  br label %out_free_ua_cache

out_free_ua_cache:                                ; preds = %out_free_pr_reg_cache, %do.end14
  %7 = load ptr, ptr @se_ua_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %7) #16
  br label %out_free_sess_cache

out_free_sess_cache:                              ; preds = %out_free_ua_cache, %do.end6
  %8 = load ptr, ptr @se_sess_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %8) #16
  br label %return

return:                                           ; preds = %out_free_sess_cache, %if.end61.return_crit_edge, %do.end
  %retval.0 = phi i32 [ 0, %if.end61.return_crit_edge ], [ -12, %out_free_sess_cache ], [ -12, %do.end ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmem_cache_create(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_workqueue(ptr noundef, i32 noundef, i32 noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @destroy_workqueue(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @release_se_kmem_caches() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @target_submission_wq, align 4
  tail call void @destroy_workqueue(ptr noundef %0) #16
  %1 = load ptr, ptr @target_completion_wq, align 4
  tail call void @destroy_workqueue(ptr noundef %1) #16
  %2 = load ptr, ptr @se_sess_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %2) #16
  %3 = load ptr, ptr @se_ua_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %3) #16
  %4 = load ptr, ptr @t10_pr_reg_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %4) #16
  %5 = load ptr, ptr @t10_alua_lu_gp_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %5) #16
  %6 = load ptr, ptr @t10_alua_lu_gp_mem_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %6) #16
  %7 = load ptr, ptr @t10_alua_tg_pt_gp_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %7) #16
  %8 = load ptr, ptr @t10_alua_lba_map_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %8) #16
  %9 = load ptr, ptr @t10_alua_lba_map_mem_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %9) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @scsi_get_new_index(i32 noundef %type) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %type)
  %cmp1 = icmp ugt i32 %type, 1
  br i1 %cmp1, label %do.body3, label %do.end8, !prof !768

do.body3:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/target/target_core_transport.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 187, 0\0A.popsection", ""() #16, !srcloc !770
  unreachable

do.end8:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_raw_spin_lock(ptr noundef nonnull @scsi_mib_index_lock) #16
  %arrayidx = getelementptr [2 x i32], ptr @scsi_mib_index, i32 0, i32 %type
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %inc = add i32 %1, 1
  store i32 %inc, ptr %arrayidx, align 4
  tail call void @_raw_spin_unlock(ptr noundef nonnull @scsi_mib_index_lock) #16
  ret i32 %inc
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @transport_subsystem_check_init() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %.b = load i1, ptr @transport_subsystem_check_init.sub_api_initialized, align 4
  br i1 %.b, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call i32 (i1, ptr, ...) @__request_module(i1 noundef zeroext true, ptr noundef nonnull @.str.34) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool1.not = icmp eq i32 %call, 0
  br i1 %tobool1.not, label %if.end.if.end4_crit_edge, label %do.end

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call3 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.35) #21
  br label %if.end4

if.end4:                                          ; preds = %do.end, %if.end.if.end4_crit_edge
  %call5 = tail call i32 (i1, ptr, ...) @__request_module(i1 noundef zeroext true, ptr noundef nonnull @.str.37) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end4.if.end15_crit_edge, label %do.end12

if.end4.if.end15_crit_edge:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

do.end12:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  %call14 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.39) #21
  br label %if.end15

if.end15:                                         ; preds = %do.end12, %if.end4.if.end15_crit_edge
  %call16 = tail call i32 (i1, ptr, ...) @__request_module(i1 noundef zeroext true, ptr noundef nonnull @.str.41) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %if.end15.if.end26_crit_edge, label %do.end23

if.end15.if.end26_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end26

do.end23:                                         ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #18
  %call25 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.43) #21
  br label %if.end26

if.end26:                                         ; preds = %do.end23, %if.end15.if.end26_crit_edge
  %call27 = tail call i32 (i1, ptr, ...) @__request_module(i1 noundef zeroext true, ptr noundef nonnull @.str.45) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %if.end26.if.end37_crit_edge, label %do.end34

if.end26.if.end37_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end37

do.end34:                                         ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #18
  %call36 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.47) #21
  br label %if.end37

if.end37:                                         ; preds = %do.end34, %if.end26.if.end37_crit_edge
  store i1 true, ptr @transport_subsystem_check_init.sub_api_initialized, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end37, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__request_module(i1 noundef zeroext, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @transport_init_session(ptr noundef %se_sess) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %sess_list = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 8
  %0 = ptrtoint ptr %sess_list to i32
  call void @__asan_store4_noabort(i32 %0)
  store volatile ptr %sess_list, ptr %sess_list, align 4
  %prev.i = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 8, i32 1
  %1 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %sess_list, ptr %prev.i, align 4
  %sess_acl_list = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 9
  %2 = ptrtoint ptr %sess_acl_list to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %sess_acl_list, ptr %sess_acl_list, align 4
  %prev.i10 = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 9, i32 1
  %3 = ptrtoint ptr %prev.i10 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %sess_acl_list, ptr %prev.i10, align 4
  %sess_cmd_lock = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 10
  tail call void @__raw_spin_lock_init(ptr noundef %sess_cmd_lock, ptr noundef nonnull @.str.49, ptr noundef nonnull @transport_init_session.__key, i16 noundef signext 3) #16
  %cmd_count_wq = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 11
  tail call void @__init_waitqueue_head(ptr noundef %cmd_count_wq, ptr noundef nonnull @.str.51, ptr noundef nonnull @transport_init_session.__key.50) #16
  %stop_done = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 12
  %4 = ptrtoint ptr %stop_done to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %stop_done, align 4
  %wait.i = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 12, i32 1
  tail call void @__init_swait_queue_head(ptr noundef %wait.i, ptr noundef nonnull @.str.289, ptr noundef nonnull @init_completion.__key) #16
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %se_sess, i32 noundef 4) #16
  %5 = ptrtoint ptr %se_sess to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile i32 0, ptr %se_sess, align 4
  %cmd_count = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 7
  %call3 = tail call i32 @percpu_ref_init(ptr noundef %cmd_count, ptr noundef nonnull @target_release_sess_cmd_refcnt, i32 noundef 0, i32 noundef 3264) #16
  ret i32 %call3
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_waitqueue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @percpu_ref_init(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @target_release_sess_cmd_refcnt(ptr noundef %ref) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %cmd_count_wq = getelementptr i8, ptr %ref, i32 68
  tail call void @__wake_up(ptr noundef %cmd_count_wq, i32 noundef 3, i32 noundef 1, ptr noundef null) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @transport_uninit_session(ptr noundef %se_sess) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %se_sess, i32 noundef 4) #16
  %0 = ptrtoint ptr %se_sess to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %se_sess, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %cmd_count = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 7
  tail call fastcc void @percpu_ref_put(ptr noundef %cmd_count)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %cmd_count1 = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 7
  tail call void @percpu_ref_exit(ptr noundef %cmd_count1) #16
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @percpu_ref_put(ptr noundef %ref) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %0 = tail call i32 @llvm.read_register.i32(metadata !757) #16
  %and.i.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !771
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #16
  %call.i.i = tail call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i.i, label %entry.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

entry.rcu_read_lock.exit.i_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %entry
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.290, i32 noundef 696, ptr noundef nonnull @.str.291) #16
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %entry.rcu_read_lock.exit.i_crit_edge
  %4 = ptrtoint ptr %ref to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %ref, align 4
  %and.i.i = and i32 %5, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i1.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i1.i, label %do.body1.i, label %if.else.i, !prof !767

do.body1.i:                                       ; preds = %rcu_read_lock.exit.i
  %6 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #16, !srcloc !772
  %7 = tail call i32 @llvm.read_register.i32(metadata !757) #16
  %and.i2.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i2.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %12, %5
  %13 = inttoptr i32 %add.i to ptr
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  %add15.i = add i32 %15, -1
  store i32 %add15.i, ptr %13, align 4
  %16 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #16, !srcloc !773
  %and.i.i.i = and i32 %16, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %if.then29.i, label %do.body1.i.do.end31.i_crit_edge, !prof !768

do.body1.i.do.end31.i_crit_edge:                  ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end31.i

if.then29.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @warn_bogus_irq_restore() #16
  br label %do.end31.i

do.end31.i:                                       ; preds = %if.then29.i, %do.body1.i.do.end31.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %6) #16, !srcloc !774
  br label %if.end48.i

if.else.i:                                        ; preds = %rcu_read_lock.exit.i
  %data.i = getelementptr inbounds %struct.percpu_ref, ptr %ref, i32 0, i32 1
  %17 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %data.i, align 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %18, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !775
  tail call void @llvm.prefetch.p0(ptr %18, i32 1, i32 3, i32 1) #16
  %19 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %18, ptr %18, i32 1, ptr elementtype(i32) %18) #16, !srcloc !776
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %19, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !777
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %if.then45.i, label %if.else.i.if.end48.i_crit_edge, !prof !768

if.else.i.if.end48.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end48.i

if.then45.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  %20 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %data.i, align 4
  %release.i = getelementptr inbounds %struct.percpu_ref_data, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %release.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %release.i, align 4
  tail call void %23(ptr noundef %ref) #16
  br label %if.end48.i

if.end48.i:                                       ; preds = %if.then45.i, %if.else.i.if.end48.i_crit_edge, %do.end31.i
  %call.i3.i = tail call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i3.i, label %if.end48.i.percpu_ref_put_many.exit_crit_edge, label %land.lhs.true.i6.i

if.end48.i.percpu_ref_put_many.exit_crit_edge:    ; preds = %if.end48.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %percpu_ref_put_many.exit

land.lhs.true.i6.i:                               ; preds = %if.end48.i
  %call1.i4.i = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i4.i)
  %tobool.not.i5.i = icmp eq i32 %call1.i4.i, 0
  br i1 %tobool.not.i5.i, label %land.lhs.true.i6.i.percpu_ref_put_many.exit_crit_edge, label %land.lhs.true2.i8.i

land.lhs.true.i6.i.percpu_ref_put_many.exit_crit_edge: ; preds = %land.lhs.true.i6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %percpu_ref_put_many.exit

land.lhs.true2.i8.i:                              ; preds = %land.lhs.true.i6.i
  %.b4.i7.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i7.i, label %land.lhs.true2.i8.i.percpu_ref_put_many.exit_crit_edge, label %if.then.i9.i

land.lhs.true2.i8.i.percpu_ref_put_many.exit_crit_edge: ; preds = %land.lhs.true2.i8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %percpu_ref_put_many.exit

if.then.i9.i:                                     ; preds = %land.lhs.true2.i8.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.290, i32 noundef 724, ptr noundef nonnull @.str.292) #16
  br label %percpu_ref_put_many.exit

percpu_ref_put_many.exit:                         ; preds = %if.then.i9.i, %land.lhs.true2.i8.i.percpu_ref_put_many.exit_crit_edge, %land.lhs.true.i6.i.percpu_ref_put_many.exit_crit_edge, %if.end48.i.percpu_ref_put_many.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !778
  %24 = tail call i32 @llvm.read_register.i32(metadata !757) #16
  %and.i.i.i.i.i10.i = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i.i.i10.i to ptr
  %preempt_count.i.i.i.i11.i = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i.i.i11.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i.i.i11.i, align 4
  %sub.i.i.i.i = add i32 %27, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i11.i, align 4
  tail call void @rcu_read_unlock_strict() #16
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @percpu_ref_exit(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @transport_alloc_session(i32 noundef %sup_prot_ops) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @se_sess_cache, align 4
  %call.i = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %0, i32 noundef 3520) #16
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call1 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.52) #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %sess_list.i = getelementptr inbounds %struct.se_session, ptr %call.i, i32 0, i32 8
  %1 = ptrtoint ptr %sess_list.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store volatile ptr %sess_list.i, ptr %sess_list.i, align 4
  %prev.i.i = getelementptr inbounds %struct.se_session, ptr %call.i, i32 0, i32 8, i32 1
  %2 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %sess_list.i, ptr %prev.i.i, align 8
  %sess_acl_list.i = getelementptr inbounds %struct.se_session, ptr %call.i, i32 0, i32 9
  %3 = ptrtoint ptr %sess_acl_list.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile ptr %sess_acl_list.i, ptr %sess_acl_list.i, align 4
  %prev.i10.i = getelementptr inbounds %struct.se_session, ptr %call.i, i32 0, i32 9, i32 1
  %4 = ptrtoint ptr %prev.i10.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %sess_acl_list.i, ptr %prev.i10.i, align 8
  %sess_cmd_lock.i = getelementptr inbounds %struct.se_session, ptr %call.i, i32 0, i32 10
  tail call void @__raw_spin_lock_init(ptr noundef %sess_cmd_lock.i, ptr noundef nonnull @.str.49, ptr noundef nonnull @transport_init_session.__key, i16 noundef signext 3) #16
  %cmd_count_wq.i = getelementptr inbounds %struct.se_session, ptr %call.i, i32 0, i32 11
  tail call void @__init_waitqueue_head(ptr noundef %cmd_count_wq.i, ptr noundef nonnull @.str.51, ptr noundef nonnull @transport_init_session.__key.50) #16
  %stop_done.i = getelementptr inbounds %struct.se_session, ptr %call.i, i32 0, i32 12
  %5 = ptrtoint ptr %stop_done.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %stop_done.i, align 4
  %wait.i.i = getelementptr inbounds %struct.se_session, ptr %call.i, i32 0, i32 12, i32 1
  tail call void @__init_swait_queue_head(ptr noundef %wait.i.i, ptr noundef nonnull @.str.289, ptr noundef nonnull @init_completion.__key) #16
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call.i, i32 noundef 4) #16
  %6 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile i32 0, ptr %call.i, align 8
  %cmd_count.i = getelementptr inbounds %struct.se_session, ptr %call.i, i32 0, i32 7
  %call3.i = tail call i32 @percpu_ref_init(ptr noundef %cmd_count.i, ptr noundef nonnull @target_release_sess_cmd_refcnt, i32 noundef 0, i32 noundef 3264) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %cmp = icmp slt i32 %call3.i, 0
  br i1 %cmp, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %7 = load ptr, ptr @se_sess_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %7, ptr noundef nonnull %call.i) #16
  %8 = inttoptr i32 %call3.i to ptr
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %sup_prot_ops7 = getelementptr inbounds %struct.se_session, ptr %call.i, i32 0, i32 2
  %9 = ptrtoint ptr %sup_prot_ops7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %sup_prot_ops, ptr %sup_prot_ops7, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.then4, %do.end
  %retval.0 = phi ptr [ %8, %if.then4 ], [ %call.i, %if.end6 ], [ inttoptr (i32 -12 to ptr), %do.end ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_free(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @transport_alloc_session_tags(ptr noundef %se_sess, i32 noundef %tag_num, i32 noundef %tag_size) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %tag_size, i32 %tag_num) #16
  %1 = extractvalue { i32, i1 } %0, 1
  br i1 %1, label %kvcalloc.exit.thread, label %kvcalloc.exit, !prof !768

kvcalloc.exit.thread:                             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %sess_cmd_map20 = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 13
  %2 = ptrtoint ptr %sess_cmd_map20 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %sess_cmd_map20, align 4
  br label %do.end

kvcalloc.exit:                                    ; preds = %entry
  %3 = extractvalue { i32, i1 } %0, 0
  %call.i.i.i = tail call noalias ptr @kvmalloc_node(i32 noundef %3, i32 noundef 19904, i32 noundef -1) #22
  %sess_cmd_map = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 13
  %4 = ptrtoint ptr %sess_cmd_map to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %call.i.i.i, ptr %sess_cmd_map, align 4
  %tobool.not = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not, label %kvcalloc.exit.do.end_crit_edge, label %if.end

kvcalloc.exit.do.end_crit_edge:                   ; preds = %kvcalloc.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

do.end:                                           ; preds = %kvcalloc.exit.do.end_crit_edge, %kvcalloc.exit.thread
  %call2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.54) #21
  br label %cleanup

if.end:                                           ; preds = %kvcalloc.exit
  %sess_tag_pool = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 14
  %call3 = tail call i32 @sbitmap_queue_init_node(ptr noundef %sess_tag_pool, i32 noundef %tag_num, i32 noundef -1, i1 noundef zeroext false, i32 noundef 3264, i32 noundef -1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %cmp = icmp slt i32 %call3, 0
  br i1 %cmp, label %do.end7, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end7:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call9 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.57, i32 noundef %tag_num) #21
  %5 = ptrtoint ptr %sess_cmd_map to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %sess_cmd_map, align 4
  tail call void @kvfree(ptr noundef %6) #16
  %7 = ptrtoint ptr %sess_cmd_map to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr null, ptr %sess_cmd_map, align 4
  br label %cleanup

cleanup:                                          ; preds = %do.end7, %if.end.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ -12, %do.end7 ], [ -12, %do.end ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sbitmap_queue_init_node(ptr noundef, i32 noundef, i32 noundef, i1 noundef zeroext, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__transport_register_session(ptr noundef %se_tpg, ptr noundef %se_nacl, ptr noundef %se_sess, ptr noundef %fabric_sess_ptr) #0 align 64 {
entry:
  %buf = alloca [16 x i8], align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %se_tpg_tfo = getelementptr inbounds %struct.se_portal_group, ptr %se_tpg, i32 0, i32 10
  %0 = ptrtoint ptr %se_tpg_tfo to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %se_tpg_tfo, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %buf) #16
  %se_tpg1 = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 5
  %2 = call ptr @memset(ptr %buf, i32 255, i32 16)
  %3 = ptrtoint ptr %se_tpg1 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %se_tpg, ptr %se_tpg1, align 4
  %fabric_sess_ptr2 = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 6
  %4 = ptrtoint ptr %fabric_sess_ptr2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %fabric_sess_ptr, ptr %fabric_sess_ptr2, align 8
  %tobool.not = icmp eq ptr %se_nacl, null
  br i1 %tobool.not, label %entry.if.end28_crit_edge, label %if.then

entry.if.end28_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end28

if.then:                                          ; preds = %entry
  %saved_prot_type = getelementptr inbounds %struct.se_node_acl, ptr %se_nacl, i32 0, i32 5
  %5 = ptrtoint ptr %saved_prot_type to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %saved_prot_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool3.not = icmp eq i32 %6, 0
  br i1 %tobool3.not, label %if.else, label %if.then.if.end11.sink.split_crit_edge

if.then.if.end11.sink.split_crit_edge:            ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11.sink.split

if.else:                                          ; preds = %if.then
  %tpg_check_prot_fabric_only = getelementptr inbounds %struct.target_core_fabric_ops, ptr %1, i32 0, i32 13
  %7 = ptrtoint ptr %tpg_check_prot_fabric_only to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %tpg_check_prot_fabric_only, align 4
  %tobool6.not = icmp eq ptr %8, null
  br i1 %tobool6.not, label %if.else.if.end11_crit_edge, label %if.then7

if.else.if.end11_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11

if.then7:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %call = tail call i32 %8(ptr noundef %se_tpg) #16
  %9 = ptrtoint ptr %saved_prot_type to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %call, ptr %saved_prot_type, align 4
  br label %if.end11.sink.split

if.end11.sink.split:                              ; preds = %if.then7, %if.then.if.end11.sink.split_crit_edge
  %call.sink = phi i32 [ %call, %if.then7 ], [ %6, %if.then.if.end11.sink.split_crit_edge ]
  %sess_prot_type10 = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 3
  %10 = ptrtoint ptr %sess_prot_type10 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %call.sink, ptr %sess_prot_type10, align 4
  br label %if.end11

if.end11:                                         ; preds = %if.end11.sink.split, %if.else.if.end11_crit_edge
  %11 = ptrtoint ptr %se_tpg_tfo to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %se_tpg_tfo, align 4
  %sess_get_initiator_sid = getelementptr inbounds %struct.target_core_fabric_ops, ptr %12, i32 0, i32 19
  %13 = ptrtoint ptr %sess_get_initiator_sid to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %sess_get_initiator_sid, align 4
  %cmp.not = icmp eq ptr %14, null
  br i1 %cmp.not, label %if.end11.do.body21_crit_edge, label %if.then13

if.end11.do.body21_crit_edge:                     ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body21

if.then13:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  %15 = call ptr @memset(ptr %buf, i32 0, i32 16)
  %call17 = call i32 %14(ptr noundef %se_sess, ptr noundef nonnull %buf, i32 noundef 16) #16
  %16 = ptrtoint ptr %buf to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %buf, align 8
  %sess_bin_isid = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 1
  %18 = ptrtoint ptr %sess_bin_isid to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %17, ptr %sess_bin_isid, align 8
  br label %do.body21

do.body21:                                        ; preds = %if.then13, %if.end11.do.body21_crit_edge
  %nacl_sess_lock = getelementptr inbounds %struct.se_node_acl, ptr %se_nacl, i32 0, i32 12
  %call24 = call i32 @_raw_spin_lock_irqsave(ptr noundef %nacl_sess_lock) #16
  %nacl_sess = getelementptr inbounds %struct.se_node_acl, ptr %se_nacl, i32 0, i32 9
  %19 = ptrtoint ptr %nacl_sess to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %se_sess, ptr %nacl_sess, align 4
  %sess_acl_list = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 9
  %acl_sess_list = getelementptr inbounds %struct.se_node_acl, ptr %se_nacl, i32 0, i32 19
  %prev.i = getelementptr inbounds %struct.se_node_acl, ptr %se_nacl, i32 0, i32 19, i32 1
  %20 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %prev.i, align 4
  %call.i.i = call zeroext i1 @__list_add_valid(ptr noundef %sess_acl_list, ptr noundef %21, ptr noundef %acl_sess_list) #16
  br i1 %call.i.i, label %if.end.i.i, label %do.body21.list_add_tail.exit_crit_edge

do.body21.list_add_tail.exit_crit_edge:           ; preds = %do.body21
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %do.body21
  call void @__sanitizer_cov_trace_pc() #18
  %22 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %sess_acl_list, ptr %prev.i, align 4
  %23 = ptrtoint ptr %sess_acl_list to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %acl_sess_list, ptr %sess_acl_list, align 4
  %prev3.i.i = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 9, i32 1
  %24 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %21, ptr %prev3.i.i, align 4
  %25 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %sess_acl_list, ptr %21, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %do.body21.list_add_tail.exit_crit_edge
  call void @_raw_spin_unlock_irqrestore(ptr noundef %nacl_sess_lock, i32 noundef %call24) #16
  br label %if.end28

if.end28:                                         ; preds = %list_add_tail.exit, %entry.if.end28_crit_edge
  %sess_list = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 8
  %tpg_sess_list = getelementptr inbounds %struct.se_portal_group, ptr %se_tpg, i32 0, i32 9
  %prev.i65 = getelementptr inbounds %struct.se_portal_group, ptr %se_tpg, i32 0, i32 9, i32 1
  %26 = ptrtoint ptr %prev.i65 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %prev.i65, align 4
  %call.i.i66 = call zeroext i1 @__list_add_valid(ptr noundef %sess_list, ptr noundef %27, ptr noundef %tpg_sess_list) #16
  br i1 %call.i.i66, label %if.end.i.i68, label %if.end28.list_add_tail.exit69_crit_edge

if.end28.list_add_tail.exit69_crit_edge:          ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_add_tail.exit69

if.end.i.i68:                                     ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #18
  %28 = ptrtoint ptr %prev.i65 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %sess_list, ptr %prev.i65, align 4
  %29 = ptrtoint ptr %sess_list to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %tpg_sess_list, ptr %sess_list, align 4
  %prev3.i.i67 = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 8, i32 1
  %30 = ptrtoint ptr %prev3.i.i67 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %27, ptr %prev3.i.i67, align 4
  %31 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %31)
  store volatile ptr %sess_list, ptr %27, align 4
  br label %list_add_tail.exit69

list_add_tail.exit69:                             ; preds = %if.end.i.i68, %if.end28.list_add_tail.exit69_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__transport_register_session.__UNIQUE_ID_ddebug657, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__transport_register_session, %if.then35)) #16
          to label %do.end40 [label %if.then35], !srcloc !779

if.then35:                                        ; preds = %list_add_tail.exit69
  call void @__sanitizer_cov_trace_pc() #18
  %32 = ptrtoint ptr %se_tpg_tfo to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %se_tpg_tfo, align 4
  %fabric_name = getelementptr inbounds %struct.target_core_fabric_ops, ptr %33, i32 0, i32 2
  %34 = ptrtoint ptr %fabric_name to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %fabric_name, align 4
  %36 = ptrtoint ptr %fabric_sess_ptr2 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %fabric_sess_ptr2, align 8
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__transport_register_session.__UNIQUE_ID_ddebug657, ptr noundef nonnull @.str.61, ptr noundef %35, ptr noundef %37) #16
  br label %do.end40

do.end40:                                         ; preds = %if.then35, %list_add_tail.exit69
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %buf) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_pr_debug(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @transport_register_session(ptr noundef %se_tpg, ptr noundef %se_nacl, ptr noundef %se_sess, ptr noundef %fabric_sess_ptr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %session_lock = getelementptr inbounds %struct.se_portal_group, ptr %se_tpg, i32 0, i32 4
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %session_lock) #16
  tail call void @__transport_register_session(ptr noundef %se_tpg, ptr noundef %se_nacl, ptr noundef %se_sess, ptr noundef %fabric_sess_ptr)
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %session_lock, i32 noundef %call2) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @target_setup_session(ptr noundef %tpg, i32 noundef %tag_num, i32 noundef %tag_size, i32 noundef %prot_op, ptr noundef %initiatorname, ptr noundef %private, ptr noundef readonly %callback) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %tag_num)
  %cmp.not = icmp eq i32 %tag_num, 0
  br i1 %cmp.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %tag_size)
  %tobool.not.i = icmp eq i32 %tag_size, 0
  br i1 %tobool.not.i, label %do.end.i, label %if.end12.i

do.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.293, i32 noundef %tag_num) #21
  br label %cleanup19

if.end12.i:                                       ; preds = %if.then
  %call13.i = tail call ptr @transport_alloc_session(i32 noundef %prot_op) #16
  %cmp.i.i = icmp ugt ptr %call13.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.end12.i.if.end_crit_edge, label %if.end16.i

if.end12.i.if.end_crit_edge:                      ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end16.i:                                       ; preds = %if.end12.i
  %0 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %tag_size, i32 %tag_num) #16
  %1 = extractvalue { i32, i1 } %0, 1
  br i1 %1, label %kvcalloc.exit.thread.i.i, label %kvcalloc.exit.i.i, !prof !768

kvcalloc.exit.thread.i.i:                         ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #18
  %sess_cmd_map20.i.i = getelementptr inbounds %struct.se_session, ptr %call13.i, i32 0, i32 13
  %2 = ptrtoint ptr %sess_cmd_map20.i.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %sess_cmd_map20.i.i, align 4
  br label %do.end.i.i

kvcalloc.exit.i.i:                                ; preds = %if.end16.i
  %3 = extractvalue { i32, i1 } %0, 0
  %call.i.i.i.i.i = tail call noalias ptr @kvmalloc_node(i32 noundef %3, i32 noundef 19904, i32 noundef -1) #22
  %sess_cmd_map.i.i = getelementptr inbounds %struct.se_session, ptr %call13.i, i32 0, i32 13
  %4 = ptrtoint ptr %sess_cmd_map.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %call.i.i.i.i.i, ptr %sess_cmd_map.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %call.i.i.i.i.i, null
  br i1 %tobool.not.i.i, label %kvcalloc.exit.i.i.do.end.i.i_crit_edge, label %if.end.i.i

kvcalloc.exit.i.i.do.end.i.i_crit_edge:           ; preds = %kvcalloc.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i.i

do.end.i.i:                                       ; preds = %kvcalloc.exit.i.i.do.end.i.i_crit_edge, %kvcalloc.exit.thread.i.i
  %call2.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.54) #21
  br label %if.then19.i

if.end.i.i:                                       ; preds = %kvcalloc.exit.i.i
  %sess_tag_pool.i.i = getelementptr inbounds %struct.se_session, ptr %call13.i, i32 0, i32 14
  %call3.i.i = tail call i32 @sbitmap_queue_init_node(ptr noundef %sess_tag_pool.i.i, i32 noundef %tag_num, i32 noundef -1, i1 noundef zeroext false, i32 noundef 3264, i32 noundef -1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i.i)
  %cmp.i33.i = icmp slt i32 %call3.i.i, 0
  br i1 %cmp.i33.i, label %do.end7.i.i, label %if.end.i.i.if.end_crit_edge

if.end.i.i.if.end_crit_edge:                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end7.i.i:                                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %call9.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.57, i32 noundef %tag_num) #21
  %5 = ptrtoint ptr %sess_cmd_map.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %sess_cmd_map.i.i, align 4
  tail call void @kvfree(ptr noundef %6) #16
  %7 = ptrtoint ptr %sess_cmd_map.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr null, ptr %sess_cmd_map.i.i, align 4
  br label %if.then19.i

if.then19.i:                                      ; preds = %do.end7.i.i, %do.end.i.i
  tail call void @transport_free_session(ptr noundef %call13.i) #16
  br label %cleanup19

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call1 = tail call ptr @transport_alloc_session(i32 noundef %prot_op)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.end.i.i.if.end_crit_edge, %if.end12.i.if.end_crit_edge
  %sess.0 = phi ptr [ %call1, %if.else ], [ %call13.i, %if.end12.i.if.end_crit_edge ], [ %call13.i, %if.end.i.i.if.end_crit_edge ]
  %cmp.i = icmp ugt ptr %sess.0, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end.cleanup19_crit_edge, label %if.end4

if.end.cleanup19_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup19

if.end4:                                          ; preds = %if.end
  %call5 = tail call ptr @core_tpg_check_initiator_node_acl(ptr noundef %tpg, ptr noundef %initiatorname) #16
  %se_node_acl = getelementptr inbounds %struct.se_session, ptr %sess.0, i32 0, i32 4
  %8 = ptrtoint ptr %se_node_acl to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %call5, ptr %se_node_acl, align 8
  %tobool.not = icmp eq ptr %call5, null
  br i1 %tobool.not, label %if.then7, label %if.end9

if.then7:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @transport_free_session(ptr noundef %sess.0)
  br label %cleanup19

if.end9:                                          ; preds = %if.end4
  %cmp10.not = icmp eq ptr %callback, null
  br i1 %cmp10.not, label %if.end9.if.end17_crit_edge, label %if.then11

if.end9.if.end17_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

if.then11:                                        ; preds = %if.end9
  %call12 = tail call i32 %callback(ptr noundef %tpg, ptr noundef %sess.0, ptr noundef %private) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %if.then11.if.end17_crit_edge, label %cleanup

if.then11.if.end17_crit_edge:                     ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

cleanup:                                          ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @transport_free_session(ptr noundef %sess.0)
  %9 = inttoptr i32 %call12 to ptr
  br label %cleanup19

if.end17:                                         ; preds = %if.then11.if.end17_crit_edge, %if.end9.if.end17_crit_edge
  %10 = ptrtoint ptr %se_node_acl to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %se_node_acl, align 8
  %session_lock.i = getelementptr inbounds %struct.se_portal_group, ptr %tpg, i32 0, i32 4
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %session_lock.i) #16
  tail call void @__transport_register_session(ptr noundef %tpg, ptr noundef %11, ptr noundef %sess.0, ptr noundef %private) #16
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %session_lock.i, i32 noundef %call2.i) #16
  br label %cleanup19

cleanup19:                                        ; preds = %if.end17, %cleanup, %if.then7, %if.end.cleanup19_crit_edge, %if.then19.i, %do.end.i
  %retval.1 = phi ptr [ %sess.0, %if.end17 ], [ %9, %cleanup ], [ inttoptr (i32 -13 to ptr), %if.then7 ], [ %sess.0, %if.end.cleanup19_crit_edge ], [ inttoptr (i32 -22 to ptr), %do.end.i ], [ inttoptr (i32 -12 to ptr), %if.then19.i ]
  ret ptr %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @core_tpg_check_initiator_node_acl(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @transport_free_session(ptr noundef %se_sess) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %se_node_acl = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 4
  %0 = ptrtoint ptr %se_node_acl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %se_node_acl, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end25_crit_edge, label %if.then

entry.if.end25_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end25

if.then:                                          ; preds = %entry
  %se_tpg1 = getelementptr inbounds %struct.se_node_acl, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %se_tpg1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %se_tpg1, align 4
  %se_tpg_tfo = getelementptr inbounds %struct.se_portal_group, ptr %3, i32 0, i32 10
  %4 = ptrtoint ptr %se_tpg_tfo to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %se_tpg_tfo, align 4
  %6 = ptrtoint ptr %se_node_acl to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %se_node_acl, align 8
  %acl_node_mutex = getelementptr inbounds %struct.se_portal_group, ptr %3, i32 0, i32 3
  tail call void @mutex_lock_nested(ptr noundef %acl_node_mutex, i32 noundef 0) #16
  %dynamic_node_acl = getelementptr inbounds %struct.se_node_acl, ptr %1, i32 0, i32 1
  %7 = ptrtoint ptr %dynamic_node_acl to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %dynamic_node_acl, align 4, !range !780
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool3.not = icmp eq i8 %8, 0
  br i1 %tobool3.not, label %if.then.if.end19_crit_edge, label %land.lhs.true

if.then.if.end19_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

land.lhs.true:                                    ; preds = %if.then
  %tpg_check_demo_mode_cache = getelementptr inbounds %struct.target_core_fabric_ops, ptr %5, i32 0, i32 9
  %9 = ptrtoint ptr %tpg_check_demo_mode_cache to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tpg_check_demo_mode_cache, align 4
  %call = tail call i32 %10(ptr noundef %3) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool4.not = icmp eq i32 %call, 0
  br i1 %tobool4.not, label %do.body6, label %land.lhs.true.if.end19_crit_edge

land.lhs.true.if.end19_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

do.body6:                                         ; preds = %land.lhs.true
  %nacl_sess_lock = getelementptr inbounds %struct.se_node_acl, ptr %1, i32 0, i32 12
  %call8 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %nacl_sess_lock) #16
  %acl_sess_list = getelementptr inbounds %struct.se_node_acl, ptr %1, i32 0, i32 19
  %11 = ptrtoint ptr %acl_sess_list to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %acl_sess_list, align 4
  %cmp.i.not = icmp eq ptr %12, %acl_sess_list
  br i1 %cmp.i.not, label %if.then13, label %do.body6.if.end_crit_edge

do.body6.if.end_crit_edge:                        ; preds = %do.body6
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then13:                                        ; preds = %do.body6
  call void @__sanitizer_cov_trace_pc() #18
  %dynamic_stop = getelementptr inbounds %struct.se_node_acl, ptr %1, i32 0, i32 2
  %13 = ptrtoint ptr %dynamic_stop to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 1, ptr %dynamic_stop, align 1
  br label %if.end

if.end:                                           ; preds = %if.then13, %do.body6.if.end_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %nacl_sess_lock, i32 noundef %call8) #16
  %dynamic_stop15 = getelementptr inbounds %struct.se_node_acl, ptr %1, i32 0, i32 2
  %14 = ptrtoint ptr %dynamic_stop15 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %dynamic_stop15, align 1, !range !780
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool16.not = icmp eq i8 %15, 0
  br i1 %tobool16.not, label %if.end.if.end19_crit_edge, label %if.then17

if.end.if.end19_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

if.then17:                                        ; preds = %if.end
  %acl_list = getelementptr inbounds %struct.se_node_acl, ptr %1, i32 0, i32 18
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %acl_list) #16
  br i1 %call.i.i, label %if.end.i.i, label %if.then17.list_del_init.exit_crit_edge

if.then17.list_del_init.exit_crit_edge:           ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i = getelementptr inbounds %struct.se_node_acl, ptr %1, i32 0, i32 18, i32 1
  %16 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %prev.i.i, align 4
  %18 = ptrtoint ptr %acl_list to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %acl_list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %17, ptr %prev1.i.i.i, align 4
  %21 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %19, ptr %17, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %if.then17.list_del_init.exit_crit_edge
  %22 = ptrtoint ptr %acl_list to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %acl_list, ptr %acl_list, align 4
  %prev.i3.i = getelementptr inbounds %struct.se_node_acl, ptr %1, i32 0, i32 18, i32 1
  %23 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %acl_list, ptr %prev.i3.i, align 4
  br label %if.end19

if.end19:                                         ; preds = %list_del_init.exit, %if.end.if.end19_crit_edge, %land.lhs.true.if.end19_crit_edge, %if.then.if.end19_crit_edge
  tail call void @mutex_unlock(ptr noundef %acl_node_mutex) #16
  %dynamic_stop21 = getelementptr inbounds %struct.se_node_acl, ptr %1, i32 0, i32 2
  %24 = ptrtoint ptr %dynamic_stop21 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %dynamic_stop21, align 1, !range !780
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %tobool22.not = icmp eq i8 %25, 0
  br i1 %tobool22.not, label %if.end19.if.end24_crit_edge, label %if.then23

if.end19.if.end24_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end24

if.then23:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @target_put_nacl(ptr noundef nonnull %1)
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %if.end19.if.end24_crit_edge
  tail call void @target_put_nacl(ptr noundef nonnull %1)
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %entry.if.end25_crit_edge
  %sess_cmd_map = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 13
  %26 = ptrtoint ptr %sess_cmd_map to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %sess_cmd_map, align 4
  %tobool26.not = icmp eq ptr %27, null
  br i1 %tobool26.not, label %if.end25.if.end29_crit_edge, label %if.then27

if.end25.if.end29_crit_edge:                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end29

if.then27:                                        ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #18
  %ws.i = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 14, i32 3
  %28 = ptrtoint ptr %ws.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ws.i, align 4
  tail call void @kfree(ptr noundef %29) #16
  %alloc_hint.i.i = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 14, i32 0, i32 5
  %30 = ptrtoint ptr %alloc_hint.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %alloc_hint.i.i, align 4
  tail call void @free_percpu(ptr noundef %31) #16
  %map.i.i = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 14, i32 0, i32 4
  %32 = ptrtoint ptr %map.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %map.i.i, align 4
  tail call void @kfree(ptr noundef %33) #16
  %34 = ptrtoint ptr %map.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr null, ptr %map.i.i, align 4
  %35 = ptrtoint ptr %sess_cmd_map to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %sess_cmd_map, align 4
  tail call void @kvfree(ptr noundef %36) #16
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %if.end25.if.end29_crit_edge
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %se_sess, i32 noundef 4) #16
  %37 = ptrtoint ptr %se_sess to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %se_sess, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool.not.i = icmp eq i32 %38, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.end29.transport_uninit_session.exit_crit_edge

if.end29.transport_uninit_session.exit_crit_edge: ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #18
  br label %transport_uninit_session.exit

if.then.i:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #18
  %cmd_count.i = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 7
  tail call fastcc void @percpu_ref_put(ptr noundef %cmd_count.i) #16
  br label %transport_uninit_session.exit

transport_uninit_session.exit:                    ; preds = %if.then.i, %if.end29.transport_uninit_session.exit_crit_edge
  %cmd_count1.i = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 7
  tail call void @percpu_ref_exit(ptr noundef %cmd_count1.i) #16
  %39 = load ptr, ptr @se_sess_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %39, ptr noundef %se_sess) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @target_show_dynamic_sessions(ptr noundef %se_tpg, ptr nocapture noundef writeonly %page) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %session_lock = getelementptr inbounds %struct.se_portal_group, ptr %se_tpg, i32 0, i32 4
  tail call void @_raw_spin_lock_bh(ptr noundef %session_lock) #16
  %tpg_sess_list = getelementptr inbounds %struct.se_portal_group, ptr %se_tpg, i32 0, i32 9
  %0 = ptrtoint ptr %tpg_sess_list to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn37 = load ptr, ptr %tpg_sess_list, align 4
  %cmp.not38 = icmp eq ptr %.pn37, %tpg_sess_list
  br i1 %cmp.not38, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn40 = phi ptr [ %.pn, %for.inc.for.body_crit_edge ], [ %.pn37, %entry.for.body_crit_edge ]
  %len.039 = phi i32 [ %len.1, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %se_node_acl = getelementptr i8, ptr %.pn40, i32 -20
  %1 = ptrtoint ptr %se_node_acl to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %se_node_acl, align 8
  %tobool.not = icmp eq ptr %2, null
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end:                                           ; preds = %for.body
  %dynamic_node_acl = getelementptr inbounds %struct.se_node_acl, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %dynamic_node_acl to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %dynamic_node_acl, align 4, !range !780
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool3.not = icmp eq i8 %4, 0
  br i1 %tobool3.not, label %if.end.for.inc_crit_edge, label %if.end5

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end5:                                          ; preds = %if.end
  %call = tail call i32 @strlen(ptr noundef nonnull %2) #20
  %add = add i32 %len.039, 1
  %add7 = add i32 %add, %call
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %add7)
  %cmp8 = icmp ugt i32 %add7, 4096
  br i1 %cmp8, label %if.end5.for.end_crit_edge, label %if.end10

if.end5.for.end_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

if.end10:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr11 = getelementptr i8, ptr %page, i32 %len.039
  %sub = sub i32 4096, %len.039
  %call15 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %add.ptr11, i32 noundef %sub, ptr noundef nonnull @.str.62, ptr noundef nonnull %2)
  %add17 = add i32 %add, %call15
  br label %for.inc

for.inc:                                          ; preds = %if.end10, %if.end.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %len.1 = phi i32 [ %add17, %if.end10 ], [ %len.039, %if.end.for.inc_crit_edge ], [ %len.039, %for.body.for.inc_crit_edge ]
  %5 = ptrtoint ptr %.pn40 to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn = load ptr, ptr %.pn40, align 4
  %cmp.not = icmp eq ptr %.pn, %tpg_sess_list
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end5.for.end_crit_edge, %entry.for.end_crit_edge
  %len.0.lcssa = phi i32 [ 0, %entry.for.end_crit_edge ], [ %len.039, %if.end5.for.end_crit_edge ], [ %len.1, %for.inc.for.end_crit_edge ]
  tail call void @_raw_spin_unlock_bh(ptr noundef %session_lock) #16
  ret i32 %len.0.lcssa
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @target_put_nacl(ptr noundef %nacl) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %acl_kref = getelementptr inbounds %struct.se_node_acl, ptr %nacl, i32 0, i32 21
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %acl_kref, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !781
  tail call void @llvm.prefetch.p0(ptr %acl_kref, i32 1, i32 3, i32 1) #16
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %acl_kref, ptr %acl_kref, i32 1, ptr elementtype(i32) %acl_kref) #16, !srcloc !782
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.kref_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !767

if.end5.i.i.i.i.kref_put.exit_crit_edge:          ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %kref_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @refcount_warn_saturate(ptr noundef %acl_kref, i32 noundef 3) #16
  br label %kref_put.exit

if.then.i:                                        ; preds = %entry
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !783
  %dynamic_stop.i = getelementptr %struct.se_node_acl, ptr %nacl, i32 0, i32 2
  %1 = ptrtoint ptr %dynamic_stop.i to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %dynamic_stop.i, align 1, !range !780
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.not.i = icmp eq i8 %2, 0
  br i1 %tobool.not.i, label %if.then.i1, label %if.end.i

if.then.i1:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %acl_free_comp.i = getelementptr %struct.se_node_acl, ptr %nacl, i32 0, i32 20
  tail call void @complete(ptr noundef %acl_free_comp.i) #16
  br label %kref_put.exit

if.end.i:                                         ; preds = %if.then.i
  %se_tpg1.i = getelementptr %struct.se_node_acl, ptr %nacl, i32 0, i32 10
  %3 = ptrtoint ptr %se_tpg1.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %se_tpg1.i, align 4
  %acl_node_mutex.i = getelementptr inbounds %struct.se_portal_group, ptr %4, i32 0, i32 3
  tail call void @mutex_lock_nested(ptr noundef %acl_node_mutex.i, i32 noundef 0) #16
  %acl_list.i = getelementptr %struct.se_node_acl, ptr %nacl, i32 0, i32 18
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %acl_list.i) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end.i.list_del_init.exit.i_crit_edge

if.end.i.list_del_init.exit.i_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del_init.exit.i

if.end.i.i.i:                                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr %struct.se_node_acl, ptr %nacl, i32 0, i32 18, i32 1
  %5 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %prev.i.i.i, align 4
  %7 = ptrtoint ptr %acl_list.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %acl_list.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %6, ptr %prev1.i.i.i.i, align 4
  %10 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %8, ptr %6, align 4
  br label %list_del_init.exit.i

list_del_init.exit.i:                             ; preds = %if.end.i.i.i, %if.end.i.list_del_init.exit.i_crit_edge
  %11 = ptrtoint ptr %acl_list.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %acl_list.i, ptr %acl_list.i, align 4
  %prev.i3.i.i = getelementptr %struct.se_node_acl, ptr %nacl, i32 0, i32 18, i32 1
  %12 = ptrtoint ptr %prev.i3.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %acl_list.i, ptr %prev.i3.i.i, align 4
  tail call void @mutex_unlock(ptr noundef %acl_node_mutex.i) #16
  tail call void @core_tpg_wait_for_nacl_pr_ref(ptr noundef %nacl) #16
  tail call void @core_free_device_list_for_node(ptr noundef %nacl, ptr noundef %4) #16
  tail call void @kfree(ptr noundef %nacl) #16
  br label %kref_put.exit

kref_put.exit:                                    ; preds = %list_del_init.exit.i, %if.then.i1, %if.then10.i.i.i.i, %if.end5.i.i.i.i.kref_put.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @transport_deregister_session_configfs(ptr noundef %se_sess) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %se_node_acl = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 4
  %0 = ptrtoint ptr %se_node_acl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %se_node_acl, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end17_crit_edge, label %do.body1

entry.if.end17_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

do.body1:                                         ; preds = %entry
  %nacl_sess_lock = getelementptr inbounds %struct.se_node_acl, ptr %1, i32 0, i32 12
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %nacl_sess_lock) #16
  %sess_acl_list = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 9
  %2 = ptrtoint ptr %sess_acl_list to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %sess_acl_list, align 4
  %cmp.i.not = icmp eq ptr %3, %sess_acl_list
  br i1 %cmp.i.not, label %do.body1.if.end_crit_edge, label %if.then7

do.body1.if.end_crit_edge:                        ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then7:                                         ; preds = %do.body1
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %sess_acl_list) #16
  br i1 %call.i.i, label %if.end.i.i, label %if.then7.list_del_init.exit_crit_edge

if.then7.list_del_init.exit_crit_edge:            ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 9, i32 1
  %4 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prev.i.i, align 4
  %6 = ptrtoint ptr %sess_acl_list to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sess_acl_list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %prev1.i.i.i, align 4
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %7, ptr %5, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %if.then7.list_del_init.exit_crit_edge
  %10 = ptrtoint ptr %sess_acl_list to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %sess_acl_list, ptr %sess_acl_list, align 4
  %prev.i3.i = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 9, i32 1
  %11 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %sess_acl_list, ptr %prev.i3.i, align 4
  br label %if.end

if.end:                                           ; preds = %list_del_init.exit, %do.body1.if.end_crit_edge
  %acl_sess_list = getelementptr inbounds %struct.se_node_acl, ptr %1, i32 0, i32 19
  %12 = ptrtoint ptr %acl_sess_list to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %acl_sess_list, align 4
  %cmp.i26.not = icmp eq ptr %13, %acl_sess_list
  br i1 %cmp.i26.not, label %if.end.if.end15_crit_edge, label %if.else

if.end.if.end15_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %prev = getelementptr inbounds %struct.se_node_acl, ptr %1, i32 0, i32 19, i32 1
  %14 = ptrtoint ptr %prev to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %prev, align 4
  %add.ptr = getelementptr i8, ptr %15, i32 -52
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.end.if.end15_crit_edge
  %add.ptr.sink = phi ptr [ %add.ptr, %if.else ], [ null, %if.end.if.end15_crit_edge ]
  %16 = getelementptr inbounds %struct.se_node_acl, ptr %1, i32 0, i32 9
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %add.ptr.sink, ptr %16, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %nacl_sess_lock, i32 noundef %call2) #16
  br label %if.end17

if.end17:                                         ; preds = %if.end15, %entry.if.end17_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @transport_deregister_session(ptr noundef %se_sess) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %se_tpg1 = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 5
  %0 = ptrtoint ptr %se_tpg1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %se_tpg1, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %do.body2

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body2:                                         ; preds = %entry
  %session_lock = getelementptr inbounds %struct.se_portal_group, ptr %1, i32 0, i32 4
  %call3 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %session_lock) #16
  %sess_list = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 8
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %sess_list) #16
  br i1 %call.i.i, label %if.end.i.i, label %do.body2.list_del.exit_crit_edge

do.body2.list_del.exit_crit_edge:                 ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit

if.end.i.i:                                       ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 8, i32 1
  %2 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prev.i.i, align 4
  %4 = ptrtoint ptr %sess_list to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sess_list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %3, ptr %prev1.i.i.i, align 4
  %7 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %5, ptr %3, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %do.body2.list_del.exit_crit_edge
  %8 = ptrtoint ptr %sess_list to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr inttoptr (i32 256 to ptr), ptr %sess_list, align 4
  %prev.i = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 8, i32 1
  %9 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %10 = ptrtoint ptr %se_tpg1 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %se_tpg1, align 4
  %fabric_sess_ptr = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 6
  %11 = ptrtoint ptr %fabric_sess_ptr to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %fabric_sess_ptr, align 8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %session_lock, i32 noundef %call3) #16
  %call8 = tail call i32 @target_for_each_device(ptr noundef nonnull @target_release_res, ptr noundef %se_sess) #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @transport_deregister_session.__UNIQUE_ID_ddebug658, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@transport_deregister_session, %if.then15)) #16
          to label %cleanup [label %if.then15], !srcloc !779

if.then15:                                        ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #18
  %se_tpg_tfo = getelementptr inbounds %struct.se_portal_group, ptr %1, i32 0, i32 10
  %12 = ptrtoint ptr %se_tpg_tfo to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %se_tpg_tfo, align 4
  %fabric_name = getelementptr inbounds %struct.target_core_fabric_ops, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %fabric_name to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %fabric_name, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @transport_deregister_session.__UNIQUE_ID_ddebug658, ptr noundef nonnull @.str.64, ptr noundef %15) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then15, %list_del.exit, %entry.cleanup_crit_edge
  tail call void @transport_free_session(ptr noundef %se_sess)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @target_for_each_device(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @target_release_res(ptr noundef %dev, ptr noundef readnone %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %reservation_holder = getelementptr inbounds %struct.se_device, ptr %dev, i32 0, i32 26
  %0 = ptrtoint ptr %reservation_holder to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %reservation_holder, align 4
  %cmp = icmp eq ptr %1, %data
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @target_release_reservation(ptr noundef %dev) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @target_remove_session(ptr noundef %se_sess) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %se_node_acl.i = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 4
  %0 = ptrtoint ptr %se_node_acl.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %se_node_acl.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.transport_deregister_session_configfs.exit_crit_edge, label %do.body1.i

entry.transport_deregister_session_configfs.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %transport_deregister_session_configfs.exit

do.body1.i:                                       ; preds = %entry
  %nacl_sess_lock.i = getelementptr inbounds %struct.se_node_acl, ptr %1, i32 0, i32 12
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %nacl_sess_lock.i) #16
  %sess_acl_list.i = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 9
  %2 = ptrtoint ptr %sess_acl_list.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %sess_acl_list.i, align 4
  %cmp.i.not.i = icmp eq ptr %3, %sess_acl_list.i
  br i1 %cmp.i.not.i, label %do.body1.i.if.end.i_crit_edge, label %if.then7.i

do.body1.i.if.end.i_crit_edge:                    ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.then7.i:                                       ; preds = %do.body1.i
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %sess_acl_list.i) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then7.i.list_del_init.exit.i_crit_edge

if.then7.i.list_del_init.exit.i_crit_edge:        ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del_init.exit.i

if.end.i.i.i:                                     ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 9, i32 1
  %4 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prev.i.i.i, align 4
  %6 = ptrtoint ptr %sess_acl_list.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sess_acl_list.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %prev1.i.i.i.i, align 4
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %7, ptr %5, align 4
  br label %list_del_init.exit.i

list_del_init.exit.i:                             ; preds = %if.end.i.i.i, %if.then7.i.list_del_init.exit.i_crit_edge
  %10 = ptrtoint ptr %sess_acl_list.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %sess_acl_list.i, ptr %sess_acl_list.i, align 4
  %prev.i3.i.i = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 9, i32 1
  %11 = ptrtoint ptr %prev.i3.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %sess_acl_list.i, ptr %prev.i3.i.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %list_del_init.exit.i, %do.body1.i.if.end.i_crit_edge
  %acl_sess_list.i = getelementptr inbounds %struct.se_node_acl, ptr %1, i32 0, i32 19
  %12 = ptrtoint ptr %acl_sess_list.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %acl_sess_list.i, align 4
  %cmp.i26.not.i = icmp eq ptr %13, %acl_sess_list.i
  br i1 %cmp.i26.not.i, label %if.end.i.if.end15.i_crit_edge, label %if.else.i

if.end.i.if.end15.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.i

if.else.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i = getelementptr inbounds %struct.se_node_acl, ptr %1, i32 0, i32 19, i32 1
  %14 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %prev.i, align 4
  %add.ptr.i = getelementptr i8, ptr %15, i32 -52
  br label %if.end15.i

if.end15.i:                                       ; preds = %if.else.i, %if.end.i.if.end15.i_crit_edge
  %add.ptr.sink.i = phi ptr [ %add.ptr.i, %if.else.i ], [ null, %if.end.i.if.end15.i_crit_edge ]
  %16 = getelementptr inbounds %struct.se_node_acl, ptr %1, i32 0, i32 9
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %add.ptr.sink.i, ptr %16, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %nacl_sess_lock.i, i32 noundef %call2.i) #16
  br label %transport_deregister_session_configfs.exit

transport_deregister_session_configfs.exit:       ; preds = %if.end15.i, %entry.transport_deregister_session_configfs.exit_crit_edge
  tail call void @transport_deregister_session(ptr noundef %se_sess)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @transport_copy_sense_to_cmd(ptr noundef %cmd, ptr nocapture noundef readonly %sense) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %t_state_lock = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 35
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %t_state_lock) #16
  %se_dev.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 19
  %0 = ptrtoint ptr %se_dev.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %se_dev.i, align 4
  %se_lun.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 20
  %2 = ptrtoint ptr %se_lun.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %se_lun.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %do.end.i, label %entry.if.end.i_crit_edge, !prof !768

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 766, i32 noundef 9, ptr noundef null) #16
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %entry.if.end.i_crit_edge
  %tobool21.not.i = icmp eq ptr %1, null
  br i1 %tobool21.not.i, label %if.end.i.cleanup_crit_edge, label %if.end23.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end23.i:                                       ; preds = %if.end.i
  %se_cmd_flags.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 11
  %4 = ptrtoint ptr %se_cmd_flags.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %se_cmd_flags.i, align 8
  %and.i = and i32 %5, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool24.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool24.not.i, label %if.end26.i, label %if.end23.i.cleanup_crit_edge

if.end23.i.cleanup_crit_edge:                     ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end26.i:                                       ; preds = %if.end23.i
  %scsi_sense_length.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 2
  %6 = ptrtoint ptr %scsi_sense_length.i to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 96, ptr %scsi_sense_length.i, align 2
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @transport_get_sense_buffer.__UNIQUE_ID_ddebug660, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@transport_copy_sense_to_cmd, %if.then36.i)) #16
          to label %transport_get_sense_buffer.exit [label %if.then36.i], !srcloc !779

if.then36.i:                                      ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #18
  %se_hba.i = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 35
  %7 = ptrtoint ptr %se_hba.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %se_hba.i, align 8
  %hba_id.i = getelementptr inbounds %struct.se_hba, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %hba_id.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %hba_id.i, align 4
  %transport.i = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 46
  %11 = ptrtoint ptr %transport.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %transport.i, align 8
  %scsi_status.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 1
  %13 = ptrtoint ptr %scsi_status.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %scsi_status.i, align 4
  %conv.i = zext i8 %14 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @transport_get_sense_buffer.__UNIQUE_ID_ddebug660, ptr noundef nonnull @.str.299, i32 noundef %10, ptr noundef %12, i32 noundef %conv.i) #16
  br label %transport_get_sense_buffer.exit

transport_get_sense_buffer.exit:                  ; preds = %if.then36.i, %if.end26.i
  %sense_buffer.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 16
  %15 = ptrtoint ptr %sense_buffer.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %sense_buffer.i, align 8
  %tobool.not = icmp eq ptr %16, null
  br i1 %tobool.not, label %transport_get_sense_buffer.exit.cleanup_crit_edge, label %if.end

transport_get_sense_buffer.exit.cleanup_crit_edge: ; preds = %transport_get_sense_buffer.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %transport_get_sense_buffer.exit
  call void @__sanitizer_cov_trace_pc() #18
  %17 = ptrtoint ptr %se_cmd_flags.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %se_cmd_flags.i, align 8
  %or = or i32 %18, 2
  store i32 %or, ptr %se_cmd_flags.i, align 8
  %19 = ptrtoint ptr %scsi_sense_length.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %scsi_sense_length.i, align 2
  %conv7 = zext i16 %20 to i32
  %21 = call ptr @memcpy(ptr %16, ptr %sense, i32 %conv7)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %transport_get_sense_buffer.exit.cleanup_crit_edge, %if.end23.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %t_state_lock, i32 noundef %call2) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @target_complete_cmd_with_sense(ptr noundef %cmd, i8 noundef zeroext %scsi_status, i32 noundef %sense_reason) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %se_sess = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 21
  %0 = ptrtoint ptr %se_sess to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %se_sess, align 4
  %se_tpg = getelementptr inbounds %struct.se_session, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %se_tpg to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %se_tpg, align 4
  %se_tpg_wwn = getelementptr inbounds %struct.se_portal_group, ptr %3, i32 0, i32 11
  %4 = ptrtoint ptr %se_tpg_wwn to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %se_tpg_wwn, align 4
  %call = tail call fastcc zeroext i1 @target_cmd_interrupted(ptr noundef %cmd)
  br i1 %call, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %scsi_status1 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 1
  %6 = ptrtoint ptr %scsi_status1 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %scsi_status, ptr %scsi_status1, align 4
  %7 = ptrtoint ptr %cmd to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %sense_reason, ptr %cmd, align 8
  %t_state_lock = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 35
  %call5 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %t_state_lock) #16
  %8 = ptrtoint ptr %scsi_status1 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %scsi_status1, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %9)
  %cond34 = icmp eq i8 %9, 2
  br i1 %cond34, label %sw.bb, label %if.end.sw.epilog_crit_edge

if.end.sw.epilog_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %se_cmd_flags = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 11
  %10 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %se_cmd_flags, align 8
  %and = and i32 %11, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %target_complete_failure_work.target_complete_ok_work = select i1 %tobool.not, ptr @target_complete_failure_work, ptr @target_complete_ok_work
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb, %if.end.sw.epilog_crit_edge
  %tobool18.not = phi ptr [ %target_complete_failure_work.target_complete_ok_work, %sw.bb ], [ @target_complete_ok_work, %if.end.sw.epilog_crit_edge ]
  %t_state = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 10
  %12 = ptrtoint ptr %t_state to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 6, ptr %t_state, align 4
  %transport_state = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 34
  %13 = ptrtoint ptr %transport_state to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %transport_state, align 4
  %or = or i32 %14, 6
  store i32 %or, ptr %transport_state, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %t_state_lock, i32 noundef %call5) #16
  %work = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38
  tail call void @__init_work(ptr noundef %work, i32 noundef 0) #16
  %15 = ptrtoint ptr %work to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 -64, ptr %work, align 8
  %lockdep_map = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.65, ptr noundef nonnull @target_complete_cmd_with_sense.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #16
  %entry17 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38, i32 1
  %16 = ptrtoint ptr %entry17 to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %entry17, ptr %entry17, align 4
  %prev.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38, i32 1, i32 1
  %17 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %entry17, ptr %prev.i, align 4
  %func = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38, i32 2
  %18 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %tobool18.not, ptr %func, align 4
  %tobool22.not = icmp eq ptr %5, null
  br i1 %tobool22.not, label %sw.epilog.if.then25_crit_edge, label %lor.lhs.false

sw.epilog.if.then25_crit_edge:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then25

lor.lhs.false:                                    ; preds = %sw.epilog
  %cmd_compl_affinity = getelementptr inbounds %struct.se_wwn, ptr %5, i32 0, i32 5
  %19 = ptrtoint ptr %cmd_compl_affinity to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cmd_compl_affinity, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %20)
  %cmp23 = icmp eq i32 %20, -1
  br i1 %cmp23, label %lor.lhs.false.if.then25_crit_edge, label %lor.lhs.false.if.end28_crit_edge

lor.lhs.false.if.end28_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end28

lor.lhs.false.if.then25_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then25

if.then25:                                        ; preds = %lor.lhs.false.if.then25_crit_edge, %sw.epilog.if.then25_crit_edge
  %cpuid = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 59
  %21 = ptrtoint ptr %cpuid to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %cpuid, align 8
  br label %if.end28

if.end28:                                         ; preds = %if.then25, %lor.lhs.false.if.end28_crit_edge
  %cpu.0 = phi i32 [ %22, %if.then25 ], [ %20, %lor.lhs.false.if.end28_crit_edge ]
  %23 = load ptr, ptr @target_completion_wq, align 4
  %call30 = tail call zeroext i1 @queue_work_on(i32 noundef %cpu.0, ptr noundef %23, ptr noundef %work) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end28, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @target_cmd_interrupted(ptr noundef %cmd) unnamed_addr #0 align 64 {
entry:
  %post_ret = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %post_ret) #16
  %0 = ptrtoint ptr %post_ret to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %post_ret, align 4, !annotation !769
  %transport_state = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 34
  %1 = ptrtoint ptr %transport_state to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %transport_state, align 4
  %and = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %transport_complete_callback = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 28
  %3 = ptrtoint ptr %transport_complete_callback to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %transport_complete_callback, align 8
  %tobool1.not = icmp eq ptr %4, null
  br i1 %tobool1.not, label %if.then.do.body_crit_edge, label %if.then2

if.then.do.body_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body

if.then2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %call = call i32 %4(ptr noundef %cmd, i1 noundef zeroext false, ptr noundef nonnull %post_ret) #16
  br label %do.body

do.body:                                          ; preds = %if.then2, %if.then.do.body_crit_edge
  %work = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38
  call void @__init_work(ptr noundef %work, i32 noundef 0) #16
  %5 = ptrtoint ptr %work to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 -64, ptr %work, align 8
  %lockdep_map = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38, i32 3
  call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.65, ptr noundef nonnull @target_cmd_interrupted.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #16
  %entry7 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38, i32 1
  %6 = ptrtoint ptr %entry7 to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %entry7, ptr %entry7, align 4
  %prev.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38, i32 1, i32 1
  %7 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %entry7, ptr %prev.i, align 4
  %func = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38, i32 2
  %8 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr @target_abort_work, ptr %func, align 4
  %9 = load ptr, ptr @target_completion_wq, align 4
  %call.i = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %9, ptr noundef %work) #16
  br label %cleanup

if.else:                                          ; preds = %entry
  %and12 = and i32 %2, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12)
  %tobool13.not = icmp eq i32 %and12, 0
  br i1 %tobool13.not, label %if.else.cleanup_crit_edge, label %if.then14

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then14:                                        ; preds = %if.else
  %transport_complete_callback15 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 28
  %10 = ptrtoint ptr %transport_complete_callback15 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %transport_complete_callback15, align 8
  %tobool16.not = icmp eq ptr %11, null
  br i1 %tobool16.not, label %if.then14.if.end20_crit_edge, label %if.then17

if.then14.if.end20_crit_edge:                     ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20

if.then17:                                        ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #18
  %call19 = call i32 %11(ptr noundef %cmd, i1 noundef zeroext false, ptr noundef nonnull %post_ret) #16
  br label %if.end20

if.end20:                                         ; preds = %if.then17, %if.then14.if.end20_crit_edge
  %t_transport_stop_comp = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 37
  call void @complete_all(ptr noundef %t_transport_stop_comp) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end20, %if.else.cleanup_crit_edge, %do.body
  %retval.0 = phi i1 [ true, %do.body ], [ true, %if.end20 ], [ false, %if.else.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %post_ret) #16
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @target_complete_ok_work(ptr noundef %work) #0 align 64 {
entry:
  %post_ret = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -304
  tail call fastcc void @transport_complete_task_attr(ptr noundef %add.ptr)
  %se_dev = getelementptr i8, ptr %work, i32 -204
  %0 = ptrtoint ptr %se_dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %se_dev, align 4
  %dev_qf_count = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 17
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dev_qf_count, i32 noundef 4) #16
  %2 = ptrtoint ptr %dev_qf_count to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %dev_qf_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.not = icmp eq i32 %3, 0
  br i1 %cmp.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %4 = ptrtoint ptr %se_dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %se_dev, align 4
  %qf_work_queue = getelementptr inbounds %struct.se_device, ptr %5, i32 0, i32 31
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %6 = load ptr, ptr @system_wq, align 4
  %call.i.i196 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %6, ptr noundef %qf_work_queue) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %se_cmd_flags = getelementptr i8, ptr %work, i32 -256
  %7 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %se_cmd_flags, align 8
  %9 = and i32 %8, 262146
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %9)
  %.not = icmp eq i32 %9, 2
  br i1 %.not, label %if.then6, label %if.end36

if.then6:                                         ; preds = %if.end
  %scsi_status = getelementptr i8, ptr %work, i32 -300
  %10 = ptrtoint ptr %scsi_status to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %scsi_status, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool7.not = icmp eq i8 %11, 0
  br i1 %tobool7.not, label %do.end, label %if.then6.if.end23_crit_edge, !prof !768

if.then6.if.end23_crit_edge:                      ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23

do.end:                                           ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2506, i32 noundef 9, ptr noundef null) #16
  br label %if.end23

if.end23:                                         ; preds = %do.end, %if.then6.if.end23_crit_edge
  %call31 = tail call i32 @transport_send_check_condition_and_sense(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %if.end34, label %if.end23.do.body118_crit_edge

if.end23.do.body118_crit_edge:                    ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body118

if.end34:                                         ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #18
  tail call fastcc void @transport_lun_remove_cmd(ptr noundef %add.ptr)
  tail call fastcc void @transport_cmd_check_stop_to_fabric(ptr noundef %add.ptr)
  br label %cleanup135

if.end36:                                         ; preds = %if.end
  %transport_complete_callback = getelementptr i8, ptr %work, i32 -168
  %12 = ptrtoint ptr %transport_complete_callback to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %transport_complete_callback, align 8
  %tobool37.not = icmp eq ptr %13, null
  br i1 %tobool37.not, label %if.end36.queue_rsp_crit_edge, label %if.then38

if.end36.queue_rsp_crit_edge:                     ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #18
  br label %queue_rsp

if.then38:                                        ; preds = %if.end36
  %data_length = getelementptr i8, ptr %work, i32 -252
  %14 = ptrtoint ptr %data_length to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %data_length, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %post_ret) #16
  %16 = ptrtoint ptr %post_ret to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %post_ret, align 4
  %call47 = call i32 %13(ptr noundef %add.ptr, i1 noundef zeroext true, ptr noundef nonnull %post_ret) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call47)
  %tobool48.not = icmp eq i32 %call47, 0
  br i1 %tobool48.not, label %land.lhs.true49, label %if.then58.critedge

land.lhs.true49:                                  ; preds = %if.then38
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool42.not = icmp ne i32 %15, 0
  %and40 = and i32 %8, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and40)
  %tobool41.not = icmp eq i32 %and40, 0
  %17 = ptrtoint ptr %post_ret to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %post_ret, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool50.not = icmp eq i32 %18, 0
  %brmerge = select i1 %tobool41.not, i1 true, i1 %tobool42.not
  %or.cond205 = select i1 %tobool50.not, i1 %brmerge, i1 false
  br i1 %or.cond205, label %land.lhs.true49.cleanup.thread_crit_edge, label %cleanup.thread200

land.lhs.true49.cleanup.thread_crit_edge:         ; preds = %land.lhs.true49
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.thread

if.then58.critedge:                               ; preds = %if.then38
  %call59 = call i32 @transport_send_check_condition_and_sense(ptr noundef %add.ptr, i32 noundef %call47, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call59)
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %if.end62, label %cleanup

if.end62:                                         ; preds = %if.then58.critedge
  call void @__sanitizer_cov_trace_pc() #18
  call fastcc void @transport_lun_remove_cmd(ptr noundef %add.ptr)
  call fastcc void @transport_cmd_check_stop_to_fabric(ptr noundef %add.ptr)
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %if.end62, %land.lhs.true49.cleanup.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %post_ret) #16
  br label %cleanup135

cleanup.thread200:                                ; preds = %land.lhs.true49
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %post_ret) #16
  br label %queue_rsp

cleanup:                                          ; preds = %if.then58.critedge
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %post_ret) #16
  br label %do.body118

queue_rsp:                                        ; preds = %cleanup.thread200, %if.end36.queue_rsp_crit_edge
  %data_direction = getelementptr i8, ptr %work, i32 -276
  %19 = ptrtoint ptr %data_direction to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %data_direction, align 4
  %21 = zext i32 %20 to i64
  call void @__sanitizer_cov_trace_switch(i64 %21, ptr @__sancov_gen_cov_switch_values)
  switch i32 %20, label %queue_rsp.sw.epilog_crit_edge [
    i32 2, label %sw.bb
    i32 1, label %sw.bb91
    i32 3, label %queue_rsp.queue_status_crit_edge
  ]

queue_rsp.queue_status_crit_edge:                 ; preds = %queue_rsp
  call void @__sanitizer_cov_trace_pc() #18
  br label %queue_status

queue_rsp.sw.epilog_crit_edge:                    ; preds = %queue_rsp
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

sw.bb:                                            ; preds = %queue_rsp
  %scsi_status70 = getelementptr i8, ptr %work, i32 -300
  %22 = ptrtoint ptr %scsi_status70 to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %scsi_status70, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool71.not = icmp eq i8 %23, 0
  br i1 %tobool71.not, label %sw.bb.if.end77_crit_edge, label %land.lhs.true72

sw.bb.if.end77_crit_edge:                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end77

land.lhs.true72:                                  ; preds = %sw.bb
  %24 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %se_cmd_flags, align 8
  %and74 = and i32 %25, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and74)
  %tobool75.not = icmp eq i32 %and74, 0
  br i1 %tobool75.not, label %land.lhs.true72.queue_status_crit_edge, label %land.lhs.true72.if.end77_crit_edge

land.lhs.true72.if.end77_crit_edge:               ; preds = %land.lhs.true72
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end77

land.lhs.true72.queue_status_crit_edge:           ; preds = %land.lhs.true72
  call void @__sanitizer_cov_trace_pc() #18
  br label %queue_status

if.end77:                                         ; preds = %land.lhs.true72.if.end77_crit_edge, %sw.bb.if.end77_crit_edge
  %data_length78 = getelementptr i8, ptr %work, i32 -252
  %26 = ptrtoint ptr %data_length78 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %data_length78, align 4
  %se_lun = getelementptr i8, ptr %work, i32 -200
  %28 = ptrtoint ptr %se_lun to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %se_lun, align 8
  %tx_data_octets = getelementptr inbounds %struct.se_lun, ptr %29, i32 0, i32 17, i32 1
  %call.i.i193 = call zeroext i1 @__kasan_check_write(ptr noundef %tx_data_octets, i32 noundef 4) #16
  call void @llvm.prefetch.p0(ptr %tx_data_octets, i32 1, i32 3, i32 1) #16
  %30 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %tx_data_octets, ptr %tx_data_octets, i32 %27, ptr elementtype(i32) %tx_data_octets) #16, !srcloc !784
  %prot_op.i = getelementptr i8, ptr %work, i32 88
  %31 = ptrtoint ptr %prot_op.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %prot_op.i, align 8
  %33 = zext i32 %32 to i64
  call void @__sanitizer_cov_trace_switch(i64 %33, ptr @__sancov_gen_cov_switch_values.357)
  switch i32 %32, label %if.end77.if.end86_crit_edge [
    i32 4, label %sw.bb.i
    i32 1, label %sw.bb19.i
  ]

if.end77.if.end86_crit_edge:                      ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end86

sw.bb.i:                                          ; preds = %if.end77
  %se_sess.i = getelementptr i8, ptr %work, i32 -196
  %34 = ptrtoint ptr %se_sess.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %se_sess.i, align 4
  %sup_prot_ops.i = getelementptr inbounds %struct.se_session, ptr %35, i32 0, i32 2
  %36 = ptrtoint ptr %sup_prot_ops.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %sup_prot_ops.i, align 8
  %and.i = and i32 %37, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %sw.bb.i.if.end86_crit_edge

sw.bb.i.if.end86_crit_edge:                       ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end86

if.then.i:                                        ; preds = %sw.bb.i
  %38 = ptrtoint ptr %data_length78 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %data_length78, align 4
  %40 = ptrtoint ptr %se_dev to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %se_dev, align 4
  %block_size.i = getelementptr inbounds %struct.se_device, ptr %41, i32 0, i32 39, i32 21
  %42 = ptrtoint ptr %block_size.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %block_size.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %tobool.not.i.i.i = icmp eq i32 %43, 0
  %44 = call i32 @llvm.ctlz.i32(i32 %43, i1 true) #16, !range !785
  %sub.i.op.i.i = xor i32 %44, 31
  %sub.i.i = select i1 %tobool.not.i.i.i, i32 -1, i32 %sub.i.op.i.i
  %shr.i = lshr i32 %39, %sub.i.i
  %t_task_lba.i = getelementptr i8, ptr %work, i32 -120
  %45 = ptrtoint ptr %t_task_lba.i to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %t_task_lba.i, align 8
  %t_prot_sg.i = getelementptr i8, ptr %work, i32 108
  %47 = ptrtoint ptr %t_prot_sg.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %t_prot_sg.i, align 4
  %call14.i = call i32 @sbc_dif_verify(ptr noundef %add.ptr, i64 noundef %46, i32 noundef %shr.i, i32 noundef 0, ptr noundef %48, i32 noundef 0) #16
  %pi_err.i = getelementptr i8, ptr %work, i32 116
  %49 = ptrtoint ptr %pi_err.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %call14.i, ptr %pi_err.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.i)
  %tobool16.not.i = icmp eq i32 %call14.i, 0
  br i1 %tobool16.not.i, label %if.then.i.if.end86_crit_edge, label %if.then80

if.then.i.if.end86_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end86

sw.bb19.i:                                        ; preds = %if.end77
  %se_sess20.i = getelementptr i8, ptr %work, i32 -196
  %50 = ptrtoint ptr %se_sess20.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %se_sess20.i, align 4
  %sup_prot_ops21.i = getelementptr inbounds %struct.se_session, ptr %51, i32 0, i32 2
  %52 = ptrtoint ptr %sup_prot_ops21.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %sup_prot_ops21.i, align 8
  %and22.i = and i32 %53, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22.i)
  %tobool23.not.i = icmp eq i32 %and22.i, 0
  br i1 %tobool23.not.i, label %if.end25.i, label %sw.bb19.i.if.end86_crit_edge

sw.bb19.i.if.end86_crit_edge:                     ; preds = %sw.bb19.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end86

if.end25.i:                                       ; preds = %sw.bb19.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @sbc_dif_generate(ptr noundef %add.ptr) #16
  br label %if.end86

if.then80:                                        ; preds = %if.then.i
  %54 = ptrtoint ptr %pi_err.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %pi_err.i, align 4
  %call81 = call i32 @transport_send_check_condition_and_sense(ptr noundef %add.ptr, i32 noundef %55, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call81)
  %tobool82.not = icmp eq i32 %call81, 0
  br i1 %tobool82.not, label %if.end84, label %if.then80.do.body118_crit_edge

if.then80.do.body118_crit_edge:                   ; preds = %if.then80
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body118

if.end84:                                         ; preds = %if.then80
  call void @__sanitizer_cov_trace_pc() #18
  call fastcc void @transport_lun_remove_cmd(ptr noundef %add.ptr)
  call fastcc void @transport_cmd_check_stop_to_fabric(ptr noundef %add.ptr)
  br label %cleanup135

if.end86:                                         ; preds = %if.end25.i, %sw.bb19.i.if.end86_crit_edge, %if.then.i.if.end86_crit_edge, %sw.bb.i.if.end86_crit_edge, %if.end77.if.end86_crit_edge
  call fastcc void @trace_target_cmd_complete(ptr noundef %add.ptr)
  %se_tfo = getelementptr i8, ptr %work, i32 -176
  %56 = ptrtoint ptr %se_tfo to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %se_tfo, align 8
  %queue_data_in = getelementptr inbounds %struct.target_core_fabric_ops, ptr %57, i32 0, i32 23
  %58 = ptrtoint ptr %queue_data_in to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %queue_data_in, align 4
  %call87 = call i32 %59(ptr noundef %add.ptr) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call87)
  %tobool88.not = icmp eq i32 %call87, 0
  br i1 %tobool88.not, label %if.end86.sw.epilog_crit_edge, label %if.end86.do.body118_crit_edge

if.end86.do.body118_crit_edge:                    ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body118

if.end86.sw.epilog_crit_edge:                     ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

sw.bb91:                                          ; preds = %queue_rsp
  %data_length92 = getelementptr i8, ptr %work, i32 -252
  %60 = ptrtoint ptr %data_length92 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %data_length92, align 4
  %se_lun93 = getelementptr i8, ptr %work, i32 -200
  %62 = ptrtoint ptr %se_lun93 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %se_lun93, align 8
  %rx_data_octets = getelementptr inbounds %struct.se_lun, ptr %63, i32 0, i32 17, i32 2
  %call.i.i194 = call zeroext i1 @__kasan_check_write(ptr noundef %rx_data_octets, i32 noundef 4) #16
  call void @llvm.prefetch.p0(ptr %rx_data_octets, i32 1, i32 3, i32 1) #16
  %64 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %rx_data_octets, ptr %rx_data_octets, i32 %61, ptr elementtype(i32) %rx_data_octets) #16, !srcloc !784
  %65 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %se_cmd_flags, align 8
  %and96 = and i32 %66, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and96)
  %tobool97.not = icmp eq i32 %and96, 0
  br i1 %tobool97.not, label %sw.bb91.queue_status_crit_edge, label %if.then98

sw.bb91.queue_status_crit_edge:                   ; preds = %sw.bb91
  call void @__sanitizer_cov_trace_pc() #18
  br label %queue_status

if.then98:                                        ; preds = %sw.bb91
  %67 = ptrtoint ptr %data_length92 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %data_length92, align 4
  %69 = ptrtoint ptr %se_lun93 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %se_lun93, align 8
  %tx_data_octets102 = getelementptr inbounds %struct.se_lun, ptr %70, i32 0, i32 17, i32 1
  %call.i.i195 = call zeroext i1 @__kasan_check_write(ptr noundef %tx_data_octets102, i32 noundef 4) #16
  call void @llvm.prefetch.p0(ptr %tx_data_octets102, i32 1, i32 3, i32 1) #16
  %71 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %tx_data_octets102, ptr %tx_data_octets102, i32 %68, ptr elementtype(i32) %tx_data_octets102) #16, !srcloc !784
  %se_tfo103 = getelementptr i8, ptr %work, i32 -176
  %72 = ptrtoint ptr %se_tfo103 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %se_tfo103, align 8
  %queue_data_in104 = getelementptr inbounds %struct.target_core_fabric_ops, ptr %73, i32 0, i32 23
  %74 = ptrtoint ptr %queue_data_in104 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %queue_data_in104, align 4
  %call105 = call i32 %75(ptr noundef %add.ptr) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call105)
  %tobool106.not = icmp eq i32 %call105, 0
  br i1 %tobool106.not, label %if.then98.sw.epilog_crit_edge, label %if.then98.do.body118_crit_edge

if.then98.do.body118_crit_edge:                   ; preds = %if.then98
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body118

if.then98.sw.epilog_crit_edge:                    ; preds = %if.then98
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

queue_status:                                     ; preds = %sw.bb91.queue_status_crit_edge, %land.lhs.true72.queue_status_crit_edge, %queue_rsp.queue_status_crit_edge
  call fastcc void @trace_target_cmd_complete(ptr noundef %add.ptr)
  %se_tfo111 = getelementptr i8, ptr %work, i32 -176
  %76 = ptrtoint ptr %se_tfo111 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %se_tfo111, align 8
  %queue_status112 = getelementptr inbounds %struct.target_core_fabric_ops, ptr %77, i32 0, i32 24
  %78 = ptrtoint ptr %queue_status112 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %queue_status112, align 4
  %call113 = call i32 %79(ptr noundef %add.ptr) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call113)
  %tobool114.not = icmp eq i32 %call113, 0
  br i1 %tobool114.not, label %queue_status.sw.epilog_crit_edge, label %queue_status.do.body118_crit_edge

queue_status.do.body118_crit_edge:                ; preds = %queue_status
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body118

queue_status.sw.epilog_crit_edge:                 ; preds = %queue_status
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

sw.epilog:                                        ; preds = %queue_status.sw.epilog_crit_edge, %if.then98.sw.epilog_crit_edge, %if.end86.sw.epilog_crit_edge, %queue_rsp.sw.epilog_crit_edge
  call fastcc void @transport_lun_remove_cmd(ptr noundef %add.ptr)
  call fastcc void @transport_cmd_check_stop_to_fabric(ptr noundef %add.ptr)
  br label %cleanup135

do.body118:                                       ; preds = %queue_status.do.body118_crit_edge, %if.then98.do.body118_crit_edge, %if.end86.do.body118_crit_edge, %if.then80.do.body118_crit_edge, %cleanup, %if.end23.do.body118_crit_edge
  %ret.1 = phi i32 [ %call59, %cleanup ], [ %call113, %queue_status.do.body118_crit_edge ], [ %call105, %if.then98.do.body118_crit_edge ], [ %call81, %if.then80.do.body118_crit_edge ], [ %call87, %if.end86.do.body118_crit_edge ], [ %call31, %if.end23.do.body118_crit_edge ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @target_complete_ok_work.__UNIQUE_ID_ddebug677, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@target_complete_ok_work, %if.then129)) #16
          to label %do.end133 [label %if.then129], !srcloc !779

if.then129:                                       ; preds = %do.body118
  call void @__sanitizer_cov_trace_pc() #18
  %data_direction130 = getelementptr i8, ptr %work, i32 -276
  %80 = ptrtoint ptr %data_direction130 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %data_direction130, align 4
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @target_complete_ok_work.__UNIQUE_ID_ddebug677, ptr noundef nonnull @.str.316, ptr noundef %add.ptr, i32 noundef %81) #16
  br label %do.end133

do.end133:                                        ; preds = %if.then129, %do.body118
  %82 = ptrtoint ptr %se_dev to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %se_dev, align 4
  call fastcc void @transport_handle_queue_full(ptr noundef %add.ptr, ptr noundef %83, i32 noundef %ret.1, i1 noundef zeroext false)
  br label %cleanup135

cleanup135:                                       ; preds = %do.end133, %sw.epilog, %if.end84, %cleanup.thread, %if.end34
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @target_complete_failure_work(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -304
  %0 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %add.ptr, align 8
  tail call void @transport_generic_request_failure(ptr noundef %add.ptr, i32 noundef %1)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @target_complete_cmd(ptr noundef %cmd, i8 noundef zeroext %scsi_status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %scsi_status)
  %tobool.not = icmp eq i8 %scsi_status, 0
  %cond = select i1 %tobool.not, i32 0, i32 10
  tail call void @target_complete_cmd_with_sense(ptr noundef %cmd, i8 noundef zeroext %scsi_status, i32 noundef %cond)
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @target_set_cmd_data_length(ptr nocapture noundef %cmd, i32 noundef %length) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %data_length = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 12
  %0 = ptrtoint ptr %data_length to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %data_length, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %length)
  %cmp = icmp ugt i32 %1, %length
  br i1 %cmp, label %if.then, label %entry.if.end8_crit_edge

entry.if.end8_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

if.then:                                          ; preds = %entry
  %se_cmd_flags = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 11
  %2 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %se_cmd_flags, align 8
  %and = and i32 %3, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then1

if.then1:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %sub = sub i32 %1, %length
  %residual_count = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 13
  %4 = ptrtoint ptr %residual_count to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %residual_count, align 8
  %add = add i32 %sub, %5
  store i32 %add, ptr %residual_count, align 8
  br label %if.end

if.else:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %or = or i32 %3, 1024
  %6 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %or, ptr %se_cmd_flags, align 8
  %sub5 = sub i32 %1, %length
  %residual_count6 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 13
  %7 = ptrtoint ptr %residual_count6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %sub5, ptr %residual_count6, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  %8 = ptrtoint ptr %data_length to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %length, ptr %data_length, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.end, %entry.if.end8_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @target_complete_cmd_with_length(ptr noundef %cmd, i8 noundef zeroext %scsi_status, i32 noundef %length) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %scsi_status)
  %cmp = icmp eq i8 %scsi_status, 0
  br i1 %cmp, label %entry.if.then_crit_edge, label %lor.lhs.false

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

lor.lhs.false:                                    ; preds = %entry
  %se_cmd_flags = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 11
  %0 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %se_cmd_flags, align 8
  %and = and i32 %1, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %lor.lhs.false.if.end_crit_edge, label %lor.lhs.false.if.then_crit_edge

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

lor.lhs.false.if.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %entry.if.then_crit_edge
  %data_length.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 12
  %2 = ptrtoint ptr %data_length.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %data_length.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %length)
  %cmp.i = icmp ugt i32 %3, %length
  br i1 %cmp.i, label %if.then.i, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.i:                                        ; preds = %if.then
  %se_cmd_flags.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 11
  %4 = ptrtoint ptr %se_cmd_flags.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %se_cmd_flags.i, align 8
  %and.i = and i32 %5, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.then1.i

if.then1.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %sub.i = sub i32 %3, %length
  %residual_count.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 13
  %6 = ptrtoint ptr %residual_count.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %residual_count.i, align 8
  %add.i = add i32 %sub.i, %7
  store i32 %add.i, ptr %residual_count.i, align 8
  br label %if.end.i

if.else.i:                                        ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %or.i = or i32 %5, 1024
  %8 = ptrtoint ptr %se_cmd_flags.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or.i, ptr %se_cmd_flags.i, align 8
  %sub5.i = sub i32 %3, %length
  %residual_count6.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 13
  %9 = ptrtoint ptr %residual_count6.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %sub5.i, ptr %residual_count6.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then1.i
  %10 = ptrtoint ptr %data_length.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %length, ptr %data_length.i, align 4
  br label %if.end

if.end:                                           ; preds = %if.end.i, %if.then.if.end_crit_edge, %lor.lhs.false.if.end_crit_edge
  %cond.i = select i1 %cmp, i32 0, i32 10
  tail call void @target_complete_cmd_with_sense(ptr noundef %cmd, i8 noundef zeroext %scsi_status, i32 noundef %cond.i) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @target_qf_do_work(ptr noundef %work) local_unnamed_addr #0 align 64 {
entry:
  %qf_cmd_list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %qf_cmd_list) #16
  %0 = getelementptr inbounds %struct.list_head, ptr %qf_cmd_list, i32 0, i32 1
  %1 = ptrtoint ptr %qf_cmd_list to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %qf_cmd_list, ptr %qf_cmd_list, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %qf_cmd_list, ptr %0, align 4
  %qf_cmd_lock = getelementptr i8, ptr %work, i32 -128
  call void @_raw_spin_lock_irq(ptr noundef %qf_cmd_lock) #16
  %qf_cmd_list1 = getelementptr i8, ptr %work, i32 96
  %3 = ptrtoint ptr %qf_cmd_list1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile ptr, ptr %qf_cmd_list1, align 4
  %cmp.i.not.i = icmp eq ptr %4, %qf_cmd_list1
  br i1 %cmp.i.not.i, label %entry.list_splice_init.exit_crit_edge, label %if.then.i

entry.list_splice_init.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_splice_init.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %5 = ptrtoint ptr %qf_cmd_list to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %qf_cmd_list, align 4
  %prev2.i.i = getelementptr i8, ptr %work, i32 100
  %7 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev2.i.i, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  %9 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %qf_cmd_list, ptr %prev3.i.i, align 4
  store ptr %4, ptr %qf_cmd_list, align 4
  %10 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %6, ptr %8, align 4
  %prev6.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %11 = ptrtoint ptr %prev6.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %8, ptr %prev6.i.i, align 4
  %12 = ptrtoint ptr %qf_cmd_list1 to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %qf_cmd_list1, ptr %qf_cmd_list1, align 4
  store ptr %qf_cmd_list1, ptr %prev2.i.i, align 4
  br label %list_splice_init.exit

list_splice_init.exit:                            ; preds = %if.then.i, %entry.list_splice_init.exit_crit_edge
  call void @_raw_spin_unlock_irq(ptr noundef %qf_cmd_lock) #16
  %13 = ptrtoint ptr %qf_cmd_list to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %qf_cmd_list, align 4
  %cmp.not57 = icmp eq ptr %14, %qf_cmd_list
  br i1 %cmp.not57, label %list_splice_init.exit.for.end_crit_edge, label %for.body.lr.ph

list_splice_init.exit.for.end_crit_edge:          ; preds = %list_splice_init.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.lr.ph:                                   ; preds = %list_splice_init.exit
  %dev_qf_count = getelementptr i8, ptr %work, i32 -316
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %.pn.in58 = phi ptr [ %14, %for.body.lr.ph ], [ %.pn65, %for.inc.for.body_crit_edge ]
  %cmd.061 = getelementptr i8, ptr %.pn.in58, i32 -92
  %15 = ptrtoint ptr %.pn.in58 to i32
  call void @__asan_load4_noabort(i32 %15)
  %.pn65 = load ptr, ptr %.pn.in58, align 4
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in58) #16
  br i1 %call.i.i, label %if.end.i.i, label %for.body.list_del.exit_crit_edge

for.body.list_del.exit_crit_edge:                 ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit

if.end.i.i:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in58, i32 0, i32 1
  %16 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %prev.i.i, align 4
  %18 = ptrtoint ptr %.pn.in58 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %.pn.in58, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %17, ptr %prev1.i.i.i, align 4
  %21 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %19, ptr %17, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %for.body.list_del.exit_crit_edge
  %22 = ptrtoint ptr %.pn.in58 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn.in58, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %.pn.in58, i32 0, i32 1
  %23 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !786
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %dev_qf_count, i32 noundef 4) #16
  call void @llvm.prefetch.p0(ptr %dev_qf_count, i32 1, i32 3, i32 1) #16
  %24 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %dev_qf_count, ptr %dev_qf_count, i32 1, ptr elementtype(i32) %dev_qf_count) #16, !srcloc !787
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !788
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @target_qf_do_work.__UNIQUE_ID_ddebug663, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@target_qf_do_work, %if.then)) #16
          to label %do.end [label %if.then], !srcloc !779

if.then:                                          ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #18
  %se_tfo = getelementptr i8, ptr %.pn.in58, i32 36
  %25 = ptrtoint ptr %se_tfo to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %se_tfo, align 8
  %fabric_name = getelementptr inbounds %struct.target_core_fabric_ops, ptr %26, i32 0, i32 2
  %27 = ptrtoint ptr %fabric_name to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fabric_name, align 4
  %t_state = getelementptr i8, ptr %.pn.in58, i32 -48
  %29 = ptrtoint ptr %t_state to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %t_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 19, i32 %30)
  %cmp17 = icmp eq i32 %30, 19
  call void @__sanitizer_cov_trace_const_cmp4(i32 18, i32 %30)
  %cmp19 = icmp eq i32 %30, 18
  %cond = select i1 %cmp19, ptr @.str.69, ptr @.str.70
  %cond20 = select i1 %cmp17, ptr @.str.68, ptr %cond
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @target_qf_do_work.__UNIQUE_ID_ddebug663, ptr noundef nonnull @.str.67, ptr noundef %28, ptr noundef %cmd.061, ptr noundef nonnull %cond20) #16
  br label %do.end

do.end:                                           ; preds = %if.then, %list_del.exit
  %t_state21 = getelementptr i8, ptr %.pn.in58, i32 -48
  %31 = ptrtoint ptr %t_state21 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %t_state21, align 4
  %33 = zext i32 %32 to i64
  call void @__sanitizer_cov_trace_switch(i64 %33, ptr @__sancov_gen_cov_switch_values.358)
  switch i32 %32, label %do.end.for.inc_crit_edge [
    i32 18, label %if.then23
    i32 19, label %do.end.if.then28_crit_edge
    i32 20, label %do.end.if.then28_crit_edge66
  ]

do.end.if.then28_crit_edge66:                     ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then28

do.end.if.then28_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then28

do.end.for.inc_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.then23:                                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  call fastcc void @transport_write_pending_qf(ptr noundef %cmd.061)
  br label %for.inc

if.then28:                                        ; preds = %do.end.if.then28_crit_edge, %do.end.if.then28_crit_edge66
  call fastcc void @transport_complete_task_attr(ptr noundef %cmd.061) #16
  %34 = ptrtoint ptr %t_state21 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %t_state21, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 20, i32 %35)
  %cmp.i = icmp eq i32 %35, 20
  br i1 %cmp.i, label %if.then.i53, label %if.end2.i

if.then.i53:                                      ; preds = %if.then28
  %scsi_status.i = getelementptr i8, ptr %.pn.in58, i32 -88
  %36 = ptrtoint ptr %scsi_status.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %scsi_status.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %37)
  %tobool.not.i = icmp eq i8 %37, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i53.queue_status.i_crit_edge

if.then.i53.queue_status.i_crit_edge:             ; preds = %if.then.i53
  call void @__sanitizer_cov_trace_pc() #18
  br label %queue_status.i

if.end.i:                                         ; preds = %if.then.i53
  call void @__sanitizer_cov_trace_pc() #18
  call fastcc void @translate_sense_reason(ptr noundef %cmd.061, i32 noundef 10) #16
  br label %queue_status.i

if.end2.i:                                        ; preds = %if.then28
  %se_cmd_flags.i = getelementptr i8, ptr %.pn.in58, i32 -44
  %38 = ptrtoint ptr %se_cmd_flags.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %se_cmd_flags.i, align 8
  %and.i = and i32 %39, 262144
  %40 = and i32 %39, 262146
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %40)
  %.not.i = icmp eq i32 %40, 2
  br i1 %.not.i, label %if.end2.i.queue_status.i_crit_edge, label %if.end8.i

if.end2.i.queue_status.i_crit_edge:               ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %queue_status.i

if.end8.i:                                        ; preds = %if.end2.i
  %data_direction.i = getelementptr i8, ptr %.pn.in58, i32 -64
  %41 = ptrtoint ptr %data_direction.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %data_direction.i, align 4
  %43 = zext i32 %42 to i64
  call void @__sanitizer_cov_trace_switch(i64 %43, ptr @__sancov_gen_cov_switch_values.359)
  switch i32 %42, label %if.end8.i.if.end33.i_crit_edge [
    i32 2, label %sw.bb.i
    i32 1, label %sw.bb17.i
    i32 3, label %if.end8.i.queue_status.i_crit_edge
  ]

if.end8.i.queue_status.i_crit_edge:               ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %queue_status.i

if.end8.i.if.end33.i_crit_edge:                   ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end33.i

sw.bb.i:                                          ; preds = %if.end8.i
  %scsi_status9.i = getelementptr i8, ptr %.pn.in58, i32 -88
  %44 = ptrtoint ptr %scsi_status9.i to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %scsi_status9.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %45)
  %tobool10.not.i = icmp ne i8 %45, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool14.not.i = icmp eq i32 %and.i, 0
  %or.cond59.i = select i1 %tobool10.not.i, i1 %tobool14.not.i, i1 false
  br i1 %or.cond59.i, label %sw.bb.i.queue_status.i_crit_edge, label %if.end16.i

sw.bb.i.queue_status.i_crit_edge:                 ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %queue_status.i

if.end16.i:                                       ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  call fastcc void @trace_target_cmd_complete(ptr noundef %cmd.061) #16
  %se_tfo.i = getelementptr i8, ptr %.pn.in58, i32 36
  %46 = ptrtoint ptr %se_tfo.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %se_tfo.i, align 8
  %queue_data_in.i = getelementptr inbounds %struct.target_core_fabric_ops, ptr %47, i32 0, i32 23
  br label %sw.epilog.i

sw.bb17.i:                                        ; preds = %if.end8.i
  %and19.i = and i32 %39, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19.i)
  %tobool20.not.i = icmp eq i32 %and19.i, 0
  br i1 %tobool20.not.i, label %sw.bb17.i.queue_status.i_crit_edge, label %if.then21.i

sw.bb17.i.queue_status.i_crit_edge:               ; preds = %sw.bb17.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %queue_status.i

if.then21.i:                                      ; preds = %sw.bb17.i
  call void @__sanitizer_cov_trace_pc() #18
  %se_tfo22.i = getelementptr i8, ptr %.pn.in58, i32 36
  %48 = ptrtoint ptr %se_tfo22.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %se_tfo22.i, align 8
  %queue_data_in23.i = getelementptr inbounds %struct.target_core_fabric_ops, ptr %49, i32 0, i32 23
  br label %sw.epilog.i

queue_status.i:                                   ; preds = %sw.bb17.i.queue_status.i_crit_edge, %sw.bb.i.queue_status.i_crit_edge, %if.end8.i.queue_status.i_crit_edge, %if.end2.i.queue_status.i_crit_edge, %if.end.i, %if.then.i53.queue_status.i_crit_edge
  call fastcc void @trace_target_cmd_complete(ptr noundef %cmd.061) #16
  %se_tfo27.i = getelementptr i8, ptr %.pn.in58, i32 36
  %50 = ptrtoint ptr %se_tfo27.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %se_tfo27.i, align 8
  %queue_status28.i = getelementptr inbounds %struct.target_core_fabric_ops, ptr %51, i32 0, i32 24
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %queue_status.i, %if.then21.i, %if.end16.i
  %queue_status28.sink.i = phi ptr [ %queue_status28.i, %queue_status.i ], [ %queue_data_in23.i, %if.then21.i ], [ %queue_data_in.i, %if.end16.i ]
  %52 = ptrtoint ptr %queue_status28.sink.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %queue_status28.sink.i, align 4
  %call29.i = call i32 %53(ptr noundef %cmd.061) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29.i)
  %cmp30.i = icmp slt i32 %call29.i, 0
  br i1 %cmp30.i, label %if.then32.i, label %sw.epilog.i.if.end33.i_crit_edge

sw.epilog.i.if.end33.i_crit_edge:                 ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end33.i

if.then32.i:                                      ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  %se_dev.i = getelementptr i8, ptr %.pn.in58, i32 8
  %54 = ptrtoint ptr %se_dev.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %se_dev.i, align 4
  call fastcc void @transport_handle_queue_full(ptr noundef %cmd.061, ptr noundef %55, i32 noundef %call29.i, i1 noundef zeroext false) #16
  br label %for.inc

if.end33.i:                                       ; preds = %sw.epilog.i.if.end33.i_crit_edge, %if.end8.i.if.end33.i_crit_edge
  call fastcc void @transport_lun_remove_cmd(ptr noundef %cmd.061) #16
  call fastcc void @transport_cmd_check_stop_to_fabric(ptr noundef %cmd.061) #16
  br label %for.inc

for.inc:                                          ; preds = %if.end33.i, %if.then32.i, %if.then23, %do.end.for.inc_crit_edge
  %cmp.not = icmp eq ptr %.pn65, %qf_cmd_list
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %list_splice_init.exit.for.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %qf_cmd_list) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @transport_write_pending_qf(ptr noundef %cmd) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %t_state_lock = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 35
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %t_state_lock) #16
  %transport_state = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 34
  %0 = ptrtoint ptr %transport_state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %transport_state, align 4
  %and = and i32 %1, 33
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %t_state_lock, i32 noundef %call2) #16
  br i1 %tobool.not, label %if.end17, label %do.body7

do.body7:                                         ; preds = %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @transport_write_pending_qf.__UNIQUE_ID_ddebug680, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@transport_write_pending_qf, %if.then14)) #16
          to label %do.end16 [label %if.then14], !srcloc !779

if.then14:                                        ; preds = %do.body7
  call void @__sanitizer_cov_trace_pc() #18
  %tag = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 4
  %2 = ptrtoint ptr %tag to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %tag, align 8
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @transport_write_pending_qf.__UNIQUE_ID_ddebug680, ptr noundef nonnull @.str.318, ptr noundef nonnull @.str.317, i32 noundef 2857, i64 noundef %3) #16
  br label %do.end16

do.end16:                                         ; preds = %if.then14, %do.body7
  %t_transport_stop_comp = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 37
  tail call void @complete_all(ptr noundef %t_transport_stop_comp) #16
  br label %cleanup

if.end17:                                         ; preds = %entry
  %se_tfo = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 26
  %4 = ptrtoint ptr %se_tfo to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %se_tfo, align 8
  %write_pending = getelementptr inbounds %struct.target_core_fabric_ops, ptr %5, i32 0, i32 20
  %6 = ptrtoint ptr %write_pending to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %write_pending, align 4
  %call18 = tail call i32 %7(ptr noundef %cmd) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %if.end17.cleanup_crit_edge, label %do.body21

if.end17.cleanup_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body21:                                        ; preds = %if.end17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @transport_write_pending_qf.__UNIQUE_ID_ddebug681, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@transport_write_pending_qf, %if.then33)) #16
          to label %do.end36 [label %if.then33], !srcloc !779

if.then33:                                        ; preds = %do.body21
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @transport_write_pending_qf.__UNIQUE_ID_ddebug681, ptr noundef nonnull @.str.144, ptr noundef %cmd) #16
  br label %do.end36

do.end36:                                         ; preds = %if.then33, %do.body21
  %se_dev = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 19
  %8 = ptrtoint ptr %se_dev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %se_dev, align 4
  tail call fastcc void @transport_handle_queue_full(ptr noundef %cmd, ptr noundef %9, i32 noundef %call18, i1 noundef zeroext true)
  br label %cleanup

cleanup:                                          ; preds = %do.end36, %if.end17.cleanup_crit_edge, %do.end16
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local nonnull ptr @transport_dump_cmd_direction(ptr nocapture noundef readonly %cmd) local_unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %data_direction = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 6
  %0 = ptrtoint ptr %data_direction to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %data_direction, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %1)
  %2 = icmp ult i32 %1, 4
  br i1 %2, label %switch.lookup, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %switch.gep = getelementptr inbounds [4 x ptr], ptr @switch.table.transport_dump_cmd_direction, i32 0, i32 %1
  %3 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %3)
  %switch.load = load ptr, ptr %switch.gep, align 4
  br label %return

return:                                           ; preds = %switch.lookup, %entry.return_crit_edge
  %retval.0 = phi ptr [ %switch.load, %switch.lookup ], [ @.str.70, %entry.return_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @transport_dump_dev_state(ptr nocapture noundef readonly %dev, ptr nocapture noundef writeonly %b, ptr nocapture noundef %bl) local_unnamed_addr #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %bl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %bl, align 4
  %add.ptr = getelementptr i8, ptr %b, i32 %1
  %2 = call ptr @memcpy(ptr %add.ptr, ptr @.str.75, i32 9)
  %3 = load i32, ptr %bl, align 4
  %add = add i32 %3, 8
  store i32 %add, ptr %bl, align 4
  %export_count = getelementptr inbounds %struct.se_device, ptr %dev, i32 0, i32 18
  %4 = ptrtoint ptr %export_count to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %export_count, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  %add.ptr4 = getelementptr i8, ptr %b, i32 %add
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %6 = call ptr @memcpy(ptr %add.ptr4, ptr @.str.76, i32 10)
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %7 = call ptr @memcpy(ptr %add.ptr4, ptr @.str.77, i32 12)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %.sink36 = phi i32 [ 11, %if.else ], [ 9, %if.then ]
  %8 = ptrtoint ptr %bl to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %bl, align 4
  %add6 = add i32 %9, %.sink36
  store i32 %add6, ptr %bl, align 4
  %add.ptr7 = getelementptr i8, ptr %b, i32 %add6
  %queue_depth = getelementptr inbounds %struct.se_device, ptr %dev, i32 0, i32 4
  %10 = ptrtoint ptr %queue_depth to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %queue_depth, align 8
  %call8 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %add.ptr7, ptr noundef nonnull @.str.78, i32 noundef %11)
  %12 = ptrtoint ptr %bl to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %bl, align 4
  %add9 = add i32 %13, %call8
  store i32 %add9, ptr %bl, align 4
  %add.ptr10 = getelementptr i8, ptr %b, i32 %add9
  %block_size = getelementptr inbounds %struct.se_device, ptr %dev, i32 0, i32 39, i32 21
  %14 = ptrtoint ptr %block_size to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %block_size, align 8
  %hw_max_sectors = getelementptr inbounds %struct.se_device, ptr %dev, i32 0, i32 39, i32 22
  %16 = ptrtoint ptr %hw_max_sectors to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %hw_max_sectors, align 4
  %call12 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %add.ptr10, ptr noundef nonnull @.str.79, i32 noundef %15, i32 noundef %17)
  %18 = ptrtoint ptr %bl to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %bl, align 4
  %add13 = add i32 %19, %call12
  store i32 %add13, ptr %bl, align 4
  %add.ptr14 = getelementptr i8, ptr %b, i32 %add13
  %20 = call ptr @memcpy(ptr %add.ptr14, ptr @.str.80, i32 9)
  %21 = load i32, ptr %bl, align 4
  %add16 = add i32 %21, 8
  store i32 %add16, ptr %bl, align 4
  ret void
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @transport_dump_vpd_proto_id(ptr nocapture noundef readonly %vpd, ptr noundef %p_buf, i32 noundef %p_buf_len) local_unnamed_addr #0 align 64 {
entry:
  %buf = alloca [254 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 254, ptr nonnull %buf) #16
  %0 = getelementptr inbounds i8, ptr %buf, i32 30
  %1 = call ptr @memset(ptr %0, i32 0, i32 224)
  %2 = call ptr @memcpy(ptr %buf, ptr @.str.81, i32 30)
  %protocol_identifier = getelementptr inbounds %struct.t10_vpd, ptr %vpd, i32 0, i32 2
  %3 = ptrtoint ptr %protocol_identifier to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %protocol_identifier, align 4
  %5 = tail call i32 @llvm.fshl.i32(i32 %4, i32 %4, i32 28)
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.360)
  switch i32 %5, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb4
    i32 2, label %sw.bb8
    i32 3, label %sw.bb12
    i32 4, label %sw.bb16
    i32 5, label %sw.bb20
    i32 6, label %sw.bb24
    i32 7, label %sw.bb28
    i32 8, label %sw.bb32
  ]

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr = getelementptr inbounds i8, ptr %buf, i32 29
  %7 = call ptr @memcpy(ptr %add.ptr, ptr @.str.82, i32 15)
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr6 = getelementptr inbounds i8, ptr %buf, i32 29
  %8 = call ptr @memcpy(ptr %add.ptr6, ptr @.str.83, i32 15)
  br label %sw.epilog

sw.bb8:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr10 = getelementptr inbounds i8, ptr %buf, i32 29
  %9 = call ptr @memcpy(ptr %add.ptr10, ptr @.str.84, i32 5)
  br label %sw.epilog

sw.bb12:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr14 = getelementptr inbounds i8, ptr %buf, i32 29
  %10 = call ptr @memcpy(ptr %add.ptr14, ptr @.str.85, i32 11)
  br label %sw.epilog

sw.bb16:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr18 = getelementptr inbounds i8, ptr %buf, i32 29
  %11 = call ptr @memcpy(ptr %add.ptr18, ptr @.str.86, i32 43)
  br label %sw.epilog

sw.bb20:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr22 = getelementptr inbounds i8, ptr %buf, i32 29
  %12 = call ptr @memcpy(ptr %add.ptr22, ptr @.str.87, i32 23)
  br label %sw.epilog

sw.bb24:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr26 = getelementptr inbounds i8, ptr %buf, i32 29
  %13 = call ptr @memcpy(ptr %add.ptr26, ptr @.str.88, i32 26)
  br label %sw.epilog

sw.bb28:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr30 = getelementptr inbounds i8, ptr %buf, i32 29
  %14 = call ptr @memcpy(ptr %add.ptr30, ptr @.str.89, i32 47)
  br label %sw.epilog

sw.bb32:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr34 = getelementptr inbounds i8, ptr %buf, i32 29
  %15 = call ptr @memcpy(ptr %add.ptr34, ptr @.str.90, i32 35)
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr37 = getelementptr inbounds i8, ptr %buf, i32 29
  %call39 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef %add.ptr37, ptr noundef nonnull @.str.91, i32 noundef %4)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb32, %sw.bb28, %sw.bb24, %sw.bb20, %sw.bb16, %sw.bb12, %sw.bb8, %sw.bb4, %sw.bb
  %tobool.not = icmp eq ptr %p_buf, null
  br i1 %tobool.not, label %do.body, label %if.then

if.then:                                          ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  %call41 = call ptr @strncpy(ptr noundef nonnull %p_buf, ptr noundef nonnull %buf, i32 noundef %p_buf_len)
  br label %if.end48

do.body:                                          ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @transport_dump_vpd_proto_id.__UNIQUE_ID_ddebug664, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@transport_dump_vpd_proto_id, %if.then46)) #16
          to label %if.end48 [label %if.then46], !srcloc !779

if.then46:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @transport_dump_vpd_proto_id.__UNIQUE_ID_ddebug664, ptr noundef nonnull @.str.93, ptr noundef nonnull %buf) #16
  br label %if.end48

if.end48:                                         ; preds = %if.then46, %do.body, %if.then
  call void @llvm.lifetime.end.p0(i64 254, ptr nonnull %buf) #16
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strncpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly, i32 noundef) local_unnamed_addr #10

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @transport_set_vpd_proto_id(ptr nocapture noundef %vpd, ptr nocapture noundef readonly %page_83) #0 align 64 {
entry:
  %buf.i = alloca [254 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr i8, ptr %page_83, i32 1
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %1)
  %tobool.not = icmp sgt i8 %1, -1
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  %2 = ptrtoint ptr %page_83 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %page_83, align 1
  %4 = and i8 %3, -16
  %and3 = zext i8 %4 to i32
  %protocol_identifier = getelementptr inbounds %struct.t10_vpd, ptr %vpd, i32 0, i32 2
  %5 = ptrtoint ptr %protocol_identifier to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %and3, ptr %protocol_identifier, align 4
  %protocol_identifier_set = getelementptr inbounds %struct.t10_vpd, ptr %vpd, i32 0, i32 1
  %6 = ptrtoint ptr %protocol_identifier_set to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 1, ptr %protocol_identifier_set, align 4
  call void @llvm.lifetime.start.p0(i64 254, ptr nonnull %buf.i) #16
  %7 = getelementptr inbounds i8, ptr %buf.i, i32 30
  %8 = call ptr @memset(ptr %7, i32 0, i32 224)
  %9 = call ptr @memcpy(ptr %buf.i, ptr @.str.81, i32 30)
  %10 = lshr exact i32 %and3, 4
  %11 = zext i32 %10 to i64
  call void @__sanitizer_cov_trace_switch(i64 %11, ptr @__sancov_gen_cov_switch_values.361)
  switch i32 %10, label %sw.default.i [
    i32 0, label %sw.bb.i
    i32 1, label %sw.bb4.i
    i32 2, label %sw.bb8.i
    i32 3, label %sw.bb12.i
    i32 4, label %sw.bb16.i
    i32 5, label %sw.bb20.i
    i32 6, label %sw.bb24.i
    i32 7, label %sw.bb28.i
    i32 8, label %sw.bb32.i
  ]

sw.bb.i:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i = getelementptr inbounds i8, ptr %buf.i, i32 29
  %12 = call ptr @memcpy(ptr %add.ptr.i, ptr @.str.82, i32 15)
  br label %sw.epilog.i

sw.bb4.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr6.i = getelementptr inbounds i8, ptr %buf.i, i32 29
  %13 = call ptr @memcpy(ptr %add.ptr6.i, ptr @.str.83, i32 15)
  br label %sw.epilog.i

sw.bb8.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr10.i = getelementptr inbounds i8, ptr %buf.i, i32 29
  %14 = call ptr @memcpy(ptr %add.ptr10.i, ptr @.str.84, i32 5)
  br label %sw.epilog.i

sw.bb12.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr14.i = getelementptr inbounds i8, ptr %buf.i, i32 29
  %15 = call ptr @memcpy(ptr %add.ptr14.i, ptr @.str.85, i32 11)
  br label %sw.epilog.i

sw.bb16.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr18.i = getelementptr inbounds i8, ptr %buf.i, i32 29
  %16 = call ptr @memcpy(ptr %add.ptr18.i, ptr @.str.86, i32 43)
  br label %sw.epilog.i

sw.bb20.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr22.i = getelementptr inbounds i8, ptr %buf.i, i32 29
  %17 = call ptr @memcpy(ptr %add.ptr22.i, ptr @.str.87, i32 23)
  br label %sw.epilog.i

sw.bb24.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr26.i = getelementptr inbounds i8, ptr %buf.i, i32 29
  %18 = call ptr @memcpy(ptr %add.ptr26.i, ptr @.str.88, i32 26)
  br label %sw.epilog.i

sw.bb28.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr30.i = getelementptr inbounds i8, ptr %buf.i, i32 29
  %19 = call ptr @memcpy(ptr %add.ptr30.i, ptr @.str.89, i32 47)
  br label %sw.epilog.i

sw.bb32.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr34.i = getelementptr inbounds i8, ptr %buf.i, i32 29
  %20 = call ptr @memcpy(ptr %add.ptr34.i, ptr @.str.90, i32 35)
  br label %sw.epilog.i

sw.default.i:                                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr37.i = getelementptr inbounds i8, ptr %buf.i, i32 29
  %call39.i = call i32 (ptr, ptr, ...) @sprintf(ptr noundef %add.ptr37.i, ptr noundef nonnull @.str.91, i32 noundef %and3) #16
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.default.i, %sw.bb32.i, %sw.bb28.i, %sw.bb24.i, %sw.bb20.i, %sw.bb16.i, %sw.bb12.i, %sw.bb8.i, %sw.bb4.i, %sw.bb.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @transport_dump_vpd_proto_id.__UNIQUE_ID_ddebug664, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@transport_set_vpd_proto_id, %if.then46.i)) #16
          to label %transport_dump_vpd_proto_id.exit [label %if.then46.i], !srcloc !779

if.then46.i:                                      ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @transport_dump_vpd_proto_id.__UNIQUE_ID_ddebug664, ptr noundef nonnull @.str.93, ptr noundef nonnull %buf.i) #16
  br label %transport_dump_vpd_proto_id.exit

transport_dump_vpd_proto_id.exit:                 ; preds = %if.then46.i, %sw.epilog.i
  call void @llvm.lifetime.end.p0(i64 254, ptr nonnull %buf.i) #16
  br label %if.end

if.end:                                           ; preds = %transport_dump_vpd_proto_id.exit, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @transport_dump_vpd_assoc(ptr nocapture noundef readonly %vpd, ptr noundef %p_buf, i32 noundef %p_buf_len) local_unnamed_addr #0 align 64 {
entry:
  %buf = alloca [254 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 254, ptr nonnull %buf) #16
  %0 = getelementptr inbounds i8, ptr %buf, i32 33
  %1 = call ptr @memset(ptr %0, i32 0, i32 221)
  %2 = call ptr @memcpy(ptr %buf, ptr @.str.94, i32 33)
  %association = getelementptr inbounds %struct.t10_vpd, ptr %vpd, i32 0, i32 4
  %3 = ptrtoint ptr %association to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %association, align 4
  %5 = zext i32 %4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.362)
  switch i32 %4, label %sw.default [
    i32 0, label %sw.bb
    i32 16, label %sw.bb4
    i32 32, label %sw.bb8
  ]

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr = getelementptr inbounds i8, ptr %buf, i32 32
  %6 = call ptr @memcpy(ptr %add.ptr, ptr @.str.95, i32 24)
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr6 = getelementptr inbounds i8, ptr %buf, i32 32
  %7 = call ptr @memcpy(ptr %add.ptr6, ptr @.str.96, i32 13)
  br label %sw.epilog

sw.bb8:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr10 = getelementptr inbounds i8, ptr %buf, i32 32
  %8 = call ptr @memcpy(ptr %add.ptr10, ptr @.str.97, i32 20)
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr13 = getelementptr inbounds i8, ptr %buf, i32 32
  %call15 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef %add.ptr13, ptr noundef nonnull @.str.91, i32 noundef %4)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb8, %sw.bb4, %sw.bb
  %ret.0 = phi i32 [ -22, %sw.default ], [ 0, %sw.bb8 ], [ 0, %sw.bb4 ], [ 0, %sw.bb ]
  %tobool.not = icmp eq ptr %p_buf, null
  br i1 %tobool.not, label %do.body, label %if.then

if.then:                                          ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  %call17 = call ptr @strncpy(ptr noundef nonnull %p_buf, ptr noundef nonnull %buf, i32 noundef %p_buf_len)
  br label %if.end24

do.body:                                          ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @transport_dump_vpd_assoc.__UNIQUE_ID_ddebug665, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@transport_dump_vpd_assoc, %if.then22)) #16
          to label %if.end24 [label %if.then22], !srcloc !779

if.then22:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @transport_dump_vpd_assoc.__UNIQUE_ID_ddebug665, ptr noundef nonnull @.str.93, ptr noundef nonnull %buf) #16
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %do.body, %if.then
  call void @llvm.lifetime.end.p0(i64 254, ptr nonnull %buf) #16
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @transport_set_vpd_assoc(ptr nocapture noundef %vpd, ptr nocapture noundef readonly %page_83) #0 align 64 {
entry:
  %buf.i = alloca [254 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr i8, ptr %page_83, i32 1
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %arrayidx, align 1
  %2 = and i8 %1, 48
  %and = zext i8 %2 to i32
  %association = getelementptr inbounds %struct.t10_vpd, ptr %vpd, i32 0, i32 4
  %3 = ptrtoint ptr %association to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %and, ptr %association, align 4
  call void @llvm.lifetime.start.p0(i64 254, ptr nonnull %buf.i) #16
  %4 = getelementptr inbounds i8, ptr %buf.i, i32 33
  %5 = call ptr @memset(ptr %4, i32 0, i32 221)
  %6 = call ptr @memcpy(ptr %buf.i, ptr @.str.94, i32 33)
  %7 = zext i32 %and to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.363)
  switch i32 %and, label %sw.default.i [
    i32 0, label %sw.bb.i
    i32 16, label %sw.bb4.i
    i32 32, label %sw.bb8.i
  ]

sw.bb.i:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i = getelementptr inbounds i8, ptr %buf.i, i32 32
  %8 = call ptr @memcpy(ptr %add.ptr.i, ptr @.str.95, i32 24)
  br label %sw.epilog.i

sw.bb4.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr6.i = getelementptr inbounds i8, ptr %buf.i, i32 32
  %9 = call ptr @memcpy(ptr %add.ptr6.i, ptr @.str.96, i32 13)
  br label %sw.epilog.i

sw.bb8.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr10.i = getelementptr inbounds i8, ptr %buf.i, i32 32
  %10 = call ptr @memcpy(ptr %add.ptr10.i, ptr @.str.97, i32 20)
  br label %sw.epilog.i

sw.default.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr13.i = getelementptr inbounds i8, ptr %buf.i, i32 32
  %call15.i = call i32 (ptr, ptr, ...) @sprintf(ptr noundef %add.ptr13.i, ptr noundef nonnull @.str.91, i32 noundef %and) #16
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.default.i, %sw.bb8.i, %sw.bb4.i, %sw.bb.i
  %ret.0.i = phi i32 [ -22, %sw.default.i ], [ 0, %sw.bb8.i ], [ 0, %sw.bb4.i ], [ 0, %sw.bb.i ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @transport_dump_vpd_assoc.__UNIQUE_ID_ddebug665, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@transport_set_vpd_assoc, %if.then22.i)) #16
          to label %transport_dump_vpd_assoc.exit [label %if.then22.i], !srcloc !779

if.then22.i:                                      ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @transport_dump_vpd_assoc.__UNIQUE_ID_ddebug665, ptr noundef nonnull @.str.93, ptr noundef nonnull %buf.i) #16
  br label %transport_dump_vpd_assoc.exit

transport_dump_vpd_assoc.exit:                    ; preds = %if.then22.i, %sw.epilog.i
  call void @llvm.lifetime.end.p0(i64 254, ptr nonnull %buf.i) #16
  ret i32 %ret.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @transport_dump_vpd_ident_type(ptr nocapture noundef readonly %vpd, ptr noundef %p_buf, i32 noundef %p_buf_len) local_unnamed_addr #0 align 64 {
entry:
  %buf = alloca [254 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 254, ptr nonnull %buf) #16
  %0 = getelementptr inbounds i8, ptr %buf, i32 26
  %1 = call ptr @memset(ptr %0, i32 0, i32 228)
  %2 = call ptr @memcpy(ptr %buf, ptr @.str.99, i32 26)
  %device_identifier_type = getelementptr inbounds %struct.t10_vpd, ptr %vpd, i32 0, i32 5
  %3 = ptrtoint ptr %device_identifier_type to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %device_identifier_type, align 4
  %5 = zext i32 %4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.364)
  switch i32 %4, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb4
    i32 2, label %sw.bb8
    i32 3, label %sw.bb12
    i32 4, label %sw.bb16
    i32 8, label %sw.bb20
  ]

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr = getelementptr inbounds i8, ptr %buf, i32 25
  %6 = call ptr @memcpy(ptr %add.ptr, ptr @.str.100, i32 17)
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr6 = getelementptr inbounds i8, ptr %buf, i32 25
  %7 = call ptr @memcpy(ptr %add.ptr6, ptr @.str.101, i32 21)
  br label %sw.epilog

sw.bb8:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr10 = getelementptr inbounds i8, ptr %buf, i32 25
  %8 = call ptr @memcpy(ptr %add.ptr10, ptr @.str.102, i32 14)
  br label %sw.epilog

sw.bb12:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr14 = getelementptr inbounds i8, ptr %buf, i32 25
  %9 = call ptr @memcpy(ptr %add.ptr14, ptr @.str.103, i32 5)
  br label %sw.epilog

sw.bb16:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr18 = getelementptr inbounds i8, ptr %buf, i32 25
  %10 = call ptr @memcpy(ptr %add.ptr18, ptr @.str.104, i32 33)
  br label %sw.epilog

sw.bb20:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr22 = getelementptr inbounds i8, ptr %buf, i32 25
  %11 = call ptr @memcpy(ptr %add.ptr22, ptr @.str.105, i32 18)
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr25 = getelementptr inbounds i8, ptr %buf, i32 25
  %call27 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef %add.ptr25, ptr noundef nonnull @.str.106, i32 noundef %4)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb20, %sw.bb16, %sw.bb12, %sw.bb8, %sw.bb4, %sw.bb
  %ret.0 = phi i32 [ -22, %sw.default ], [ 0, %sw.bb20 ], [ 0, %sw.bb16 ], [ 0, %sw.bb12 ], [ 0, %sw.bb8 ], [ 0, %sw.bb4 ], [ 0, %sw.bb ]
  %tobool.not = icmp eq ptr %p_buf, null
  br i1 %tobool.not, label %do.body, label %if.then

if.then:                                          ; preds = %sw.epilog
  %call29 = call i32 @strlen(ptr noundef nonnull %buf) #20
  %add = add i32 %call29, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %p_buf_len)
  %cmp = icmp ugt i32 %add, %p_buf_len
  br i1 %cmp, label %if.then.cleanup_crit_edge, label %if.end

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %call32 = call ptr @strncpy(ptr noundef nonnull %p_buf, ptr noundef nonnull %buf, i32 noundef %p_buf_len)
  br label %cleanup

do.body:                                          ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @transport_dump_vpd_ident_type.__UNIQUE_ID_ddebug666, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@transport_dump_vpd_ident_type, %if.then37)) #16
          to label %cleanup [label %if.then37], !srcloc !779

if.then37:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @transport_dump_vpd_ident_type.__UNIQUE_ID_ddebug666, ptr noundef nonnull @.str.93, ptr noundef nonnull %buf) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then37, %do.body, %if.end, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %if.then.cleanup_crit_edge ], [ %ret.0, %if.then37 ], [ %ret.0, %if.end ], [ %ret.0, %do.body ]
  call void @llvm.lifetime.end.p0(i64 254, ptr nonnull %buf) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @transport_set_vpd_ident_type(ptr nocapture noundef %vpd, ptr nocapture noundef readonly %page_83) #0 align 64 {
entry:
  %buf.i = alloca [254 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr i8, ptr %page_83, i32 1
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %arrayidx, align 1
  %2 = and i8 %1, 15
  %and = zext i8 %2 to i32
  %device_identifier_type = getelementptr inbounds %struct.t10_vpd, ptr %vpd, i32 0, i32 5
  %3 = ptrtoint ptr %device_identifier_type to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %and, ptr %device_identifier_type, align 4
  call void @llvm.lifetime.start.p0(i64 254, ptr nonnull %buf.i) #16
  %4 = getelementptr inbounds i8, ptr %buf.i, i32 26
  %5 = call ptr @memset(ptr %4, i32 0, i32 228)
  %6 = call ptr @memcpy(ptr %buf.i, ptr @.str.99, i32 26)
  %7 = zext i32 %and to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.365)
  switch i32 %and, label %sw.default.i [
    i32 0, label %sw.bb.i
    i32 1, label %sw.bb4.i
    i32 2, label %sw.bb8.i
    i32 3, label %sw.bb12.i
    i32 4, label %sw.bb16.i
    i32 8, label %sw.bb20.i
  ]

sw.bb.i:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i = getelementptr inbounds i8, ptr %buf.i, i32 25
  %8 = call ptr @memcpy(ptr %add.ptr.i, ptr @.str.100, i32 17)
  br label %sw.epilog.i

sw.bb4.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr6.i = getelementptr inbounds i8, ptr %buf.i, i32 25
  %9 = call ptr @memcpy(ptr %add.ptr6.i, ptr @.str.101, i32 21)
  br label %sw.epilog.i

sw.bb8.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr10.i = getelementptr inbounds i8, ptr %buf.i, i32 25
  %10 = call ptr @memcpy(ptr %add.ptr10.i, ptr @.str.102, i32 14)
  br label %sw.epilog.i

sw.bb12.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr14.i = getelementptr inbounds i8, ptr %buf.i, i32 25
  %11 = call ptr @memcpy(ptr %add.ptr14.i, ptr @.str.103, i32 5)
  br label %sw.epilog.i

sw.bb16.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr18.i = getelementptr inbounds i8, ptr %buf.i, i32 25
  %12 = call ptr @memcpy(ptr %add.ptr18.i, ptr @.str.104, i32 33)
  br label %sw.epilog.i

sw.bb20.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr22.i = getelementptr inbounds i8, ptr %buf.i, i32 25
  %13 = call ptr @memcpy(ptr %add.ptr22.i, ptr @.str.105, i32 18)
  br label %sw.epilog.i

sw.default.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr25.i = getelementptr inbounds i8, ptr %buf.i, i32 25
  %call27.i = call i32 (ptr, ptr, ...) @sprintf(ptr noundef %add.ptr25.i, ptr noundef nonnull @.str.106, i32 noundef %and) #16
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.default.i, %sw.bb20.i, %sw.bb16.i, %sw.bb12.i, %sw.bb8.i, %sw.bb4.i, %sw.bb.i
  %ret.0.i = phi i32 [ -22, %sw.default.i ], [ 0, %sw.bb20.i ], [ 0, %sw.bb16.i ], [ 0, %sw.bb12.i ], [ 0, %sw.bb8.i ], [ 0, %sw.bb4.i ], [ 0, %sw.bb.i ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @transport_dump_vpd_ident_type.__UNIQUE_ID_ddebug666, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@transport_set_vpd_ident_type, %if.then37.i)) #16
          to label %transport_dump_vpd_ident_type.exit [label %if.then37.i], !srcloc !779

if.then37.i:                                      ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @transport_dump_vpd_ident_type.__UNIQUE_ID_ddebug666, ptr noundef nonnull @.str.93, ptr noundef nonnull %buf.i) #16
  br label %transport_dump_vpd_ident_type.exit

transport_dump_vpd_ident_type.exit:               ; preds = %if.then37.i, %sw.epilog.i
  call void @llvm.lifetime.end.p0(i64 254, ptr nonnull %buf.i) #16
  ret i32 %ret.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @transport_dump_vpd_ident(ptr noundef %vpd, ptr noundef %p_buf, i32 noundef %p_buf_len) local_unnamed_addr #0 align 64 {
entry:
  %buf = alloca [254 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 254, ptr nonnull %buf) #16
  %0 = call ptr @memset(ptr %buf, i32 0, i32 254)
  %device_identifier_code_set = getelementptr inbounds %struct.t10_vpd, ptr %vpd, i32 0, i32 3
  %1 = ptrtoint ptr %device_identifier_code_set to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %device_identifier_code_set, align 4
  %3 = zext i32 %2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.366)
  switch i32 %2, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
    i32 3, label %sw.bb7
  ]

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %buf, i32 noundef 254, ptr noundef nonnull @.str.108, ptr noundef %vpd)
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call6 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %buf, i32 noundef 254, ptr noundef nonnull @.str.109, ptr noundef %vpd)
  br label %sw.epilog

sw.bb7:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call11 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %buf, i32 noundef 254, ptr noundef nonnull @.str.110, ptr noundef %vpd)
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call14 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %buf, ptr noundef nonnull @.str.111, i32 noundef %2)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb7, %sw.bb2, %sw.bb
  %ret.0 = phi i32 [ -22, %sw.default ], [ 0, %sw.bb7 ], [ 0, %sw.bb2 ], [ 0, %sw.bb ]
  %tobool.not = icmp eq ptr %p_buf, null
  br i1 %tobool.not, label %do.body, label %if.then

if.then:                                          ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  %call16 = call ptr @strncpy(ptr noundef nonnull %p_buf, ptr noundef nonnull %buf, i32 noundef %p_buf_len)
  br label %if.end23

do.body:                                          ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @transport_dump_vpd_ident.__UNIQUE_ID_ddebug667, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@transport_dump_vpd_ident, %if.then21)) #16
          to label %if.end23 [label %if.then21], !srcloc !779

if.then21:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @transport_dump_vpd_ident.__UNIQUE_ID_ddebug667, ptr noundef nonnull @.str.93, ptr noundef nonnull %buf) #16
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %do.body, %if.then
  call void @llvm.lifetime.end.p0(i64 254, ptr nonnull %buf) #16
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @transport_set_vpd_ident(ptr noundef %vpd, ptr nocapture noundef readonly %page_83) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %page_83 to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %page_83, align 1
  %2 = and i8 %1, 15
  %and = zext i8 %2 to i32
  %device_identifier_code_set = getelementptr inbounds %struct.t10_vpd, ptr %vpd, i32 0, i32 3
  %3 = ptrtoint ptr %device_identifier_code_set to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %and, ptr %device_identifier_code_set, align 4
  %4 = zext i32 %and to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.367)
  switch i32 %and, label %entry.sw.epilog_crit_edge [
    i32 1, label %sw.bb
    i32 2, label %entry.sw.bb22_crit_edge
    i32 3, label %entry.sw.bb22_crit_edge71
  ]

entry.sw.bb22_crit_edge71:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb22

entry.sw.bb22_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb22

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  %device_identifier_type = getelementptr inbounds %struct.t10_vpd, ptr %vpd, i32 0, i32 5
  %5 = ptrtoint ptr %device_identifier_type to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %device_identifier_type, align 4
  %arrayidx2 = getelementptr [17 x i8], ptr @transport_set_vpd_ident.hex_str, i32 0, i32 %6
  %7 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %arrayidx2, align 1
  %9 = ptrtoint ptr %vpd to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %8, ptr %vpd, align 1
  %arrayidx4 = getelementptr i8, ptr %page_83, i32 3
  %10 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx4, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %cmp64.not = icmp eq i8 %11, 0
  br i1 %cmp64.not, label %sw.bb.sw.epilog_crit_edge, label %sw.bb.while.body_crit_edge

sw.bb.while.body_crit_edge:                       ; preds = %sw.bb
  br label %while.body

sw.bb.sw.epilog_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

while.body:                                       ; preds = %while.body.while.body_crit_edge, %sw.bb.while.body_crit_edge
  %i.066 = phi i32 [ %inc21, %while.body.while.body_crit_edge ], [ 4, %sw.bb.while.body_crit_edge ]
  %j.065 = phi i32 [ %inc19, %while.body.while.body_crit_edge ], [ 1, %sw.bb.while.body_crit_edge ]
  %arrayidx7 = getelementptr i8, ptr %page_83, i32 %i.066
  %12 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx7, align 1
  %14 = lshr i8 %13, 4
  %15 = zext i8 %14 to i32
  %arrayidx10 = getelementptr [17 x i8], ptr @transport_set_vpd_ident.hex_str, i32 0, i32 %15
  %16 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %arrayidx10, align 1
  %inc12 = add nuw nsw i32 %j.065, 1
  %arrayidx13 = getelementptr [254 x i8], ptr %vpd, i32 0, i32 %j.065
  %18 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %17, ptr %arrayidx13, align 1
  %19 = load i8, ptr %arrayidx7, align 1
  %20 = and i8 %19, 15
  %and16 = zext i8 %20 to i32
  %arrayidx17 = getelementptr [17 x i8], ptr @transport_set_vpd_ident.hex_str, i32 0, i32 %and16
  %21 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %arrayidx17, align 1
  %inc19 = add nuw nsw i32 %j.065, 2
  %arrayidx20 = getelementptr [254 x i8], ptr %vpd, i32 0, i32 %inc12
  %23 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 %22, ptr %arrayidx20, align 1
  %inc21 = add nuw nsw i32 %i.066, 1
  %24 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %arrayidx4, align 1
  %conv5 = zext i8 %25 to i32
  %add = add nuw nsw i32 %conv5, 4
  %cmp = icmp ult i32 %inc21, %add
  br i1 %cmp, label %while.body.while.body_crit_edge, label %while.body.sw.epilog_crit_edge

while.body.sw.epilog_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body

sw.bb22:                                          ; preds = %entry.sw.bb22_crit_edge, %entry.sw.bb22_crit_edge71
  %arrayidx24 = getelementptr i8, ptr %page_83, i32 3
  %26 = ptrtoint ptr %arrayidx24 to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %arrayidx24, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %27)
  %cmp2759.not = icmp eq i8 %27, 0
  br i1 %cmp2759.not, label %sw.bb22.sw.epilog_crit_edge, label %sw.bb22.while.body29_crit_edge

sw.bb22.while.body29_crit_edge:                   ; preds = %sw.bb22
  br label %while.body29

sw.bb22.sw.epilog_crit_edge:                      ; preds = %sw.bb22
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

while.body29:                                     ; preds = %while.body29.while.body29_crit_edge, %sw.bb22.while.body29_crit_edge
  %i.161 = phi i32 [ %inc30, %while.body29.while.body29_crit_edge ], [ 4, %sw.bb22.while.body29_crit_edge ]
  %j.160 = phi i32 [ %inc33, %while.body29.while.body29_crit_edge ], [ 0, %sw.bb22.while.body29_crit_edge ]
  %inc30 = add nuw nsw i32 %i.161, 1
  %arrayidx31 = getelementptr i8, ptr %page_83, i32 %i.161
  %28 = ptrtoint ptr %arrayidx31 to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %arrayidx31, align 1
  %inc33 = add nuw nsw i32 %j.160, 1
  %arrayidx34 = getelementptr [254 x i8], ptr %vpd, i32 0, i32 %j.160
  %30 = ptrtoint ptr %arrayidx34 to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 %29, ptr %arrayidx34, align 1
  %31 = ptrtoint ptr %arrayidx24 to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %arrayidx24, align 1
  %conv25 = zext i8 %32 to i32
  %add26 = add nuw nsw i32 %conv25, 4
  %cmp27 = icmp ult i32 %inc30, %add26
  br i1 %cmp27, label %while.body29.while.body29_crit_edge, label %while.body29.sw.epilog_crit_edge

while.body29.sw.epilog_crit_edge:                 ; preds = %while.body29
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

while.body29.while.body29_crit_edge:              ; preds = %while.body29
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body29

sw.epilog:                                        ; preds = %while.body29.sw.epilog_crit_edge, %sw.bb22.sw.epilog_crit_edge, %while.body.sw.epilog_crit_edge, %sw.bb.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge
  %call = tail call i32 @transport_dump_vpd_ident(ptr noundef %vpd, ptr noundef null, i32 noundef 0)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @target_cmd_size_check(ptr nocapture noundef %cmd, i32 noundef %size) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %se_dev = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 19
  %0 = ptrtoint ptr %se_dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %se_dev, align 4
  %unknown_data_length = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 3
  %2 = ptrtoint ptr %unknown_data_length to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %unknown_data_length, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool.not = icmp sgt i8 %bf.load, -1
  %data_length1 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 12
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %3 = ptrtoint ptr %data_length1 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %size, ptr %data_length1, align 4
  br label %if.end57

if.else:                                          ; preds = %entry
  %4 = ptrtoint ptr %data_length1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %data_length1, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %size)
  %cmp.not = icmp eq i32 %5, %size
  br i1 %cmp.not, label %if.else.if.end57_crit_edge, label %if.then2

if.else.if.end57_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end57

if.then2:                                         ; preds = %if.else
  %call = tail call i32 @___ratelimit(ptr noundef nonnull @target_cmd_size_check._rs, ptr noundef nonnull @__func__.target_cmd_size_check) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool3.not = icmp eq i32 %call, 0
  br i1 %tobool3.not, label %if.then2.if.end_crit_edge, label %do.end

if.then2.if.end_crit_edge:                        ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end:                                           ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #18
  %se_tfo = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 26
  %6 = ptrtoint ptr %se_tfo to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %se_tfo, align 8
  %fabric_name = getelementptr inbounds %struct.target_core_fabric_ops, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %fabric_name to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %fabric_name, align 4
  %10 = ptrtoint ptr %data_length1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %data_length1, align 4
  %t_task_cdb = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 30
  %12 = ptrtoint ptr %t_task_cdb to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %t_task_cdb, align 8
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %13, align 1
  %conv = zext i8 %15 to i32
  %call6 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.114, ptr noundef %9, i32 noundef %11, i32 noundef %size, i32 noundef %conv) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %if.then2.if.end_crit_edge
  %16 = ptrtoint ptr %data_length1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %data_length1, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %size)
  %cmp8 = icmp ult i32 %17, %size
  %se_cmd_flags = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 11
  %18 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %se_cmd_flags, align 8
  br i1 %cmp8, label %if.then10, label %if.else12

if.then10:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %or = or i32 %19, 512
  %20 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %or, ptr %se_cmd_flags, align 8
  %sub = sub i32 %size, %17
  %residual_count = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 13
  %21 = ptrtoint ptr %residual_count to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %sub, ptr %residual_count, align 8
  br label %if.end23

if.else12:                                        ; preds = %if.end
  %or14 = or i32 %19, 1024
  %22 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %or14, ptr %se_cmd_flags, align 8
  %sub16 = sub i32 %17, %size
  %residual_count17 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 13
  %23 = ptrtoint ptr %residual_count17 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %sub16, ptr %residual_count17, align 8
  %data_direction = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 6
  %24 = ptrtoint ptr %data_direction to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %data_direction, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %25)
  %cmp18 = icmp eq i32 %25, 2
  br i1 %cmp18, label %if.then20, label %if.else12.if.end23_crit_edge

if.else12.if.end23_crit_edge:                     ; preds = %if.else12
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23

if.then20:                                        ; preds = %if.else12
  call void @__sanitizer_cov_trace_pc() #18
  %26 = ptrtoint ptr %data_length1 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %size, ptr %data_length1, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.then20, %if.else12.if.end23_crit_edge, %if.then10
  %data_direction24 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 6
  %27 = ptrtoint ptr %data_direction24 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %data_direction24, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %28)
  %cmp25 = icmp eq i32 %28, 1
  br i1 %cmp25, label %if.then27, label %if.end23.if.end57_crit_edge

if.end23.if.end57_crit_edge:                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end57

if.then27:                                        ; preds = %if.end23
  %se_cmd_flags28 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 11
  %29 = ptrtoint ptr %se_cmd_flags28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %se_cmd_flags28, align 8
  %and = and i32 %30, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool29.not = icmp eq i32 %and, 0
  br i1 %tobool29.not, label %if.end40, label %if.then30

if.then30:                                        ; preds = %if.then27
  %call31 = tail call i32 @___ratelimit(ptr noundef nonnull @target_cmd_size_check._rs.115, ptr noundef nonnull @__func__.target_cmd_size_check) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %if.then30.cleanup_crit_edge, label %do.end36

if.then30.cleanup_crit_edge:                      ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end36:                                         ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #18
  %call38 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.117) #21
  br label %cleanup

if.end40:                                         ; preds = %if.then27
  %31 = ptrtoint ptr %data_length1 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %data_length1, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %32, i32 %size)
  %cmp42 = icmp ult i32 %32, %size
  br i1 %cmp42, label %if.then44, label %if.end40.if.end57_crit_edge

if.end40.if.end57_crit_edge:                      ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end57

if.then44:                                        ; preds = %if.end40
  %call45 = tail call i32 @___ratelimit(ptr noundef nonnull @target_cmd_size_check._rs.119, ptr noundef nonnull @__func__.target_cmd_size_check) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call45)
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %if.then44.cleanup_crit_edge, label %do.end50

if.then44.cleanup_crit_edge:                      ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end50:                                         ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #18
  %call52 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.121) #21
  br label %cleanup

if.end57:                                         ; preds = %if.end40.if.end57_crit_edge, %if.end23.if.end57_crit_edge, %if.else.if.end57_crit_edge, %if.then
  %se_tfo.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 26
  %33 = ptrtoint ptr %se_tfo.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %se_tfo.i, align 8
  %max_data_sg_nents.i = getelementptr inbounds %struct.target_core_fabric_ops, ptr %34, i32 0, i32 4
  %35 = ptrtoint ptr %max_data_sg_nents.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %max_data_sg_nents.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool.not.i = icmp eq i32 %36, 0
  br i1 %tobool.not.i, label %if.end57.cleanup_crit_edge, label %if.end.i

if.end57.cleanup_crit_edge:                       ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i:                                         ; preds = %if.end57
  %mul.i = shl i32 %36, 12
  %data_length.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 12
  %37 = ptrtoint ptr %data_length.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %data_length.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %38, i32 %mul.i)
  %cmp.i = icmp ugt i32 %38, %mul.i
  br i1 %cmp.i, label %if.then3.i, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then3.i:                                       ; preds = %if.end.i
  %se_cmd_flags.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 11
  %39 = ptrtoint ptr %se_cmd_flags.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %se_cmd_flags.i, align 8
  %and.i = and i32 %40, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool4.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool4.not.i, label %if.else.i, label %if.then5.i

if.then5.i:                                       ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #18
  %sub.i = sub i32 %size, %mul.i
  %residual_count.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 13
  %41 = ptrtoint ptr %residual_count.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %sub.i, ptr %residual_count.i, align 8
  br label %if.end19.i

if.else.i:                                        ; preds = %if.then3.i
  %and7.i = and i32 %40, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7.i)
  %tobool8.not.i = icmp eq i32 %and7.i, 0
  br i1 %tobool8.not.i, label %if.else13.i, label %if.then9.i

if.then9.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  %residual_count10.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 13
  %42 = ptrtoint ptr %residual_count10.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %residual_count10.i, align 8
  %add.i = sub i32 %size, %mul.i
  %sub11.i = add i32 %add.i, %43
  store i32 %sub11.i, ptr %residual_count10.i, align 8
  br label %if.end19.i

if.else13.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  %or.i = or i32 %40, 1024
  %44 = ptrtoint ptr %se_cmd_flags.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %or.i, ptr %se_cmd_flags.i, align 8
  %sub16.i = sub i32 %38, %mul.i
  %residual_count17.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 13
  %45 = ptrtoint ptr %residual_count17.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %sub16.i, ptr %residual_count17.i, align 8
  br label %if.end19.i

if.end19.i:                                       ; preds = %if.else13.i, %if.then9.i, %if.then5.i
  %46 = ptrtoint ptr %data_length.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %mul.i, ptr %data_length.i, align 4
  %prot_length.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 53
  %47 = ptrtoint ptr %prot_length.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %prot_length.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool21.not.i = icmp eq i32 %48, 0
  br i1 %tobool21.not.i, label %if.end19.i.cleanup_crit_edge, label %if.then22.i

if.end19.i.cleanup_crit_edge:                     ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then22.i:                                      ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #18
  %block_size.i = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 39, i32 21
  %49 = ptrtoint ptr %block_size.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %block_size.i, align 8
  %div.i = udiv i32 %mul.i, %50
  %prot_length23.i = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 48
  %51 = ptrtoint ptr %prot_length23.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %prot_length23.i, align 8
  %mul24.i = mul i32 %52, %div.i
  %53 = ptrtoint ptr %prot_length.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %mul24.i, ptr %prot_length.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then22.i, %if.end19.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %if.end57.cleanup_crit_edge, %do.end50, %if.then44.cleanup_crit_edge, %do.end36, %if.then30.cleanup_crit_edge
  %retval.0 = phi i32 [ 31, %do.end36 ], [ 31, %if.then30.cleanup_crit_edge ], [ 8, %do.end50 ], [ 8, %if.then44.cleanup_crit_edge ], [ 0, %if.end57.cleanup_crit_edge ], [ 0, %if.end.i.cleanup_crit_edge ], [ 0, %if.end19.i.cleanup_crit_edge ], [ 0, %if.then22.i ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @___ratelimit(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__target_init_cmd(ptr noundef %cmd, ptr noundef %tfo, ptr noundef %se_sess, i32 noundef %data_length, i32 noundef %data_direction, i32 noundef %task_attr, ptr noundef %sense_buffer, i64 noundef %unpacked_lun) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %se_delayed_node = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 17
  %0 = ptrtoint ptr %se_delayed_node to i32
  call void @__asan_store4_noabort(i32 %0)
  store volatile ptr %se_delayed_node, ptr %se_delayed_node, align 4
  %prev.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 17, i32 1
  %1 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %se_delayed_node, ptr %prev.i, align 4
  %se_qf_node = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 18
  %2 = ptrtoint ptr %se_qf_node to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %se_qf_node, ptr %se_qf_node, align 4
  %prev.i37 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 18, i32 1
  %3 = ptrtoint ptr %prev.i37 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %se_qf_node, ptr %prev.i37, align 4
  %state_list = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 47
  %4 = ptrtoint ptr %state_list to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %state_list, ptr %state_list, align 4
  %prev.i38 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 47, i32 1
  %5 = ptrtoint ptr %prev.i38 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %state_list, ptr %prev.i38, align 4
  %t_transport_stop_comp = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 37
  %6 = ptrtoint ptr %t_transport_stop_comp to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %t_transport_stop_comp, align 4
  %wait.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 37, i32 1
  tail call void @__init_swait_queue_head(ptr noundef %wait.i, ptr noundef nonnull @.str.289, ptr noundef nonnull @init_completion.__key) #16
  %free_compl = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 24
  %7 = ptrtoint ptr %free_compl to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr null, ptr %free_compl, align 8
  %abrt_compl = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 25
  %8 = ptrtoint ptr %abrt_compl to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %abrt_compl, align 4
  %t_state_lock = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 35
  tail call void @__raw_spin_lock_init(ptr noundef %t_state_lock, ptr noundef nonnull @.str.123, ptr noundef nonnull @__target_init_cmd.__key, i16 noundef signext 3) #16
  %work = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38
  tail call void @__init_work(ptr noundef %work, i32 noundef 0) #16
  %9 = ptrtoint ptr %work to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -64, ptr %work, align 8
  %lockdep_map = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.65, ptr noundef nonnull @__target_init_cmd.__key.124, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #16
  %entry5 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38, i32 1
  %10 = ptrtoint ptr %entry5 to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %entry5, ptr %entry5, align 4
  %prev.i39 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38, i32 1, i32 1
  %11 = ptrtoint ptr %prev.i39 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %entry5, ptr %prev.i39, align 4
  %func = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38, i32 2
  %12 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %func, align 4
  %cmd_kref = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 36
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %cmd_kref, i32 noundef 4) #16
  %13 = ptrtoint ptr %cmd_kref to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile i32 1, ptr %cmd_kref, align 4
  %__t_task_cdb = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 31
  %t_task_cdb = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 30
  %14 = ptrtoint ptr %t_task_cdb to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %__t_task_cdb, ptr %t_task_cdb, align 8
  %se_tfo = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 26
  %15 = ptrtoint ptr %se_tfo to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %tfo, ptr %se_tfo, align 8
  %se_sess8 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 21
  %16 = ptrtoint ptr %se_sess8 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %se_sess, ptr %se_sess8, align 4
  %data_length9 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 12
  %17 = ptrtoint ptr %data_length9 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %data_length, ptr %data_length9, align 4
  %data_direction10 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 6
  %18 = ptrtoint ptr %data_direction10 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %data_direction, ptr %data_direction10, align 4
  %sam_task_attr = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 7
  %19 = ptrtoint ptr %sam_task_attr to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %task_attr, ptr %sam_task_attr, align 8
  %sense_buffer11 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 16
  %20 = ptrtoint ptr %sense_buffer11 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %sense_buffer, ptr %sense_buffer11, align 8
  %orig_fe_lun = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 14
  %21 = ptrtoint ptr %orig_fe_lun to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %unpacked_lun, ptr %orig_fe_lun, align 8
  %se_cmd_flags = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 11
  %22 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %se_cmd_flags, align 8
  %and = and i32 %23, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %24 = tail call i32 @llvm.read_register.i32(metadata !757) #16
  %and.i = and i32 %24, -16384
  %25 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu, align 4
  %cpuid = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 59
  %28 = ptrtoint ptr %cpuid to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %cpuid, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %state_active = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 3
  %29 = ptrtoint ptr %state_active to i32
  call void @__asan_load1_noabort(i32 %29)
  %bf.load = load i8, ptr %state_active, align 8
  %bf.clear = and i8 %bf.load, -65
  store i8 %bf.clear, ptr %state_active, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @target_cmd_init_cdb(ptr noundef %cmd, ptr nocapture noundef readonly %cdb, i32 noundef %gfp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %cdb to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %cdb, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 127, i8 %1)
  %cmp.i = icmp eq i8 %1, 127
  br i1 %cmp.i, label %scsi_command_size.exit, label %scsi_command_size.exit57.thread

scsi_command_size.exit:                           ; preds = %entry
  %additional_cdb_length.i.i = getelementptr inbounds %struct.scsi_varlen_cdb_hdr, ptr %cdb, i32 0, i32 3
  %2 = ptrtoint ptr %additional_cdb_length.i.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %additional_cdb_length.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -4, i8 %3)
  %cmp = icmp ugt i8 %3, -4
  br i1 %cmp, label %scsi_command_size.exit47, label %scsi_command_size.exit57

scsi_command_size.exit47:                         ; preds = %scsi_command_size.exit
  call void @__sanitizer_cov_trace_pc() #18
  %conv.i.i40 = zext i8 %3 to i32
  %add.i.i41 = add nuw nsw i32 %conv.i.i40, 8
  %call2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.125, i32 noundef %add.i.i41, i32 noundef 260) #21
  br label %err

scsi_command_size.exit57:                         ; preds = %scsi_command_size.exit
  call void @__sanitizer_cov_trace_const_cmp1(i8 24, i8 %3)
  %cmp4 = icmp ugt i8 %3, 24
  br i1 %cmp4, label %cond.true.i62, label %scsi_command_size.exit57.if.end17_crit_edge

scsi_command_size.exit57.if.end17_crit_edge:      ; preds = %scsi_command_size.exit57
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

scsi_command_size.exit57.thread:                  ; preds = %entry
  %4 = lshr i8 %1, 5
  %5 = zext i8 %4 to i32
  %arrayidx4.i53 = getelementptr [8 x i8], ptr @scsi_command_size_tbl, i32 0, i32 %5
  %6 = ptrtoint ptr %arrayidx4.i53 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx4.i53, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 32, i8 %7)
  %cmp4101 = icmp ugt i8 %7, 32
  br i1 %cmp4101, label %cond.false.i65, label %scsi_command_size.exit57.thread.if.end17_crit_edge

scsi_command_size.exit57.thread.if.end17_crit_edge: ; preds = %scsi_command_size.exit57.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

cond.true.i62:                                    ; preds = %scsi_command_size.exit57
  call void @__sanitizer_cov_trace_pc() #18
  %8 = ptrtoint ptr %additional_cdb_length.i.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %additional_cdb_length.i.i, align 1
  %conv.i.i60 = zext i8 %9 to i32
  %add.i.i61 = add nuw nsw i32 %conv.i.i60, 8
  br label %if.end8.i.i

cond.false.i65:                                   ; preds = %scsi_command_size.exit57.thread
  call void @__sanitizer_cov_trace_pc() #18
  %10 = ptrtoint ptr %arrayidx4.i53 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx4.i53, align 1
  %conv5.i64 = zext i8 %11 to i32
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %cond.false.i65, %cond.true.i62
  %cond.i66 = phi i32 [ %add.i.i61, %cond.true.i62 ], [ %conv5.i64, %cond.false.i65 ]
  %or.i = or i32 %gfp, 256
  %call9.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %cond.i66, i32 noundef %or.i) #22
  %t_task_cdb = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 30
  %12 = ptrtoint ptr %t_task_cdb to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %call9.i.i, ptr %t_task_cdb, align 8
  %tobool.not = icmp eq ptr %call9.i.i, null
  br i1 %tobool.not, label %do.end12, label %if.end8.i.i.if.end17_crit_edge

if.end8.i.i.if.end17_crit_edge:                   ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

do.end12:                                         ; preds = %if.end8.i.i
  %13 = ptrtoint ptr %cdb to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %cdb, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 127, i8 %14)
  %cmp.i68 = icmp eq i8 %14, 127
  br i1 %cmp.i68, label %cond.true.i72, label %cond.false.i75

cond.true.i72:                                    ; preds = %do.end12
  call void @__sanitizer_cov_trace_pc() #18
  %additional_cdb_length.i.i69 = getelementptr inbounds %struct.scsi_varlen_cdb_hdr, ptr %cdb, i32 0, i32 3
  %15 = ptrtoint ptr %additional_cdb_length.i.i69 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %additional_cdb_length.i.i69, align 1
  %conv.i.i70 = zext i8 %16 to i32
  %add.i.i71 = add nuw nsw i32 %conv.i.i70, 8
  br label %scsi_command_size.exit77

cond.false.i75:                                   ; preds = %do.end12
  call void @__sanitizer_cov_trace_pc() #18
  %17 = lshr i8 %14, 5
  %18 = zext i8 %17 to i32
  %arrayidx4.i73 = getelementptr [8 x i8], ptr @scsi_command_size_tbl, i32 0, i32 %18
  %19 = ptrtoint ptr %arrayidx4.i73 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %arrayidx4.i73, align 1
  %conv5.i74 = zext i8 %20 to i32
  br label %scsi_command_size.exit77

scsi_command_size.exit77:                         ; preds = %cond.false.i75, %cond.true.i72
  %cond.i76 = phi i32 [ %add.i.i71, %cond.true.i72 ], [ %conv5.i74, %cond.false.i75 ]
  %call15 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.128, i32 noundef %cond.i76, i32 noundef 32) #21
  br label %err

if.end17:                                         ; preds = %if.end8.i.i.if.end17_crit_edge, %scsi_command_size.exit57.thread.if.end17_crit_edge, %scsi_command_size.exit57.if.end17_crit_edge
  %t_task_cdb18 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 30
  %21 = ptrtoint ptr %t_task_cdb18 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %t_task_cdb18, align 8
  %23 = ptrtoint ptr %cdb to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %cdb, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 127, i8 %24)
  %cmp.i78 = icmp eq i8 %24, 127
  br i1 %cmp.i78, label %cond.true.i82, label %cond.false.i85

cond.true.i82:                                    ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  %additional_cdb_length.i.i79 = getelementptr inbounds %struct.scsi_varlen_cdb_hdr, ptr %cdb, i32 0, i32 3
  %25 = ptrtoint ptr %additional_cdb_length.i.i79 to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %additional_cdb_length.i.i79, align 1
  %conv.i.i80 = zext i8 %26 to i32
  %add.i.i81 = add nuw nsw i32 %conv.i.i80, 8
  br label %scsi_command_size.exit87

cond.false.i85:                                   ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  %27 = lshr i8 %24, 5
  %28 = zext i8 %27 to i32
  %arrayidx4.i83 = getelementptr [8 x i8], ptr @scsi_command_size_tbl, i32 0, i32 %28
  %29 = ptrtoint ptr %arrayidx4.i83 to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %arrayidx4.i83, align 1
  %conv5.i84 = zext i8 %30 to i32
  br label %scsi_command_size.exit87

scsi_command_size.exit87:                         ; preds = %cond.false.i85, %cond.true.i82
  %cond.i86 = phi i32 [ %add.i.i81, %cond.true.i82 ], [ %conv5.i84, %cond.false.i85 ]
  %31 = call ptr @memcpy(ptr %22, ptr %cdb, i32 %cond.i86)
  tail call fastcc void @trace_target_sequencer_start(ptr noundef %cmd)
  br label %cleanup

err:                                              ; preds = %scsi_command_size.exit77, %scsi_command_size.exit47
  %ret.0 = phi i32 [ 8, %scsi_command_size.exit47 ], [ 18, %scsi_command_size.exit77 ]
  %t_task_cdb20 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 30
  %32 = ptrtoint ptr %t_task_cdb20 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %t_task_cdb20, align 8
  %34 = ptrtoint ptr %cdb to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %cdb, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 127, i8 %35)
  %cmp.i88 = icmp eq i8 %35, 127
  br i1 %cmp.i88, label %cond.true.i92, label %cond.false.i95

cond.true.i92:                                    ; preds = %err
  call void @__sanitizer_cov_trace_pc() #18
  %additional_cdb_length.i.i89 = getelementptr inbounds %struct.scsi_varlen_cdb_hdr, ptr %cdb, i32 0, i32 3
  %36 = ptrtoint ptr %additional_cdb_length.i.i89 to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %additional_cdb_length.i.i89, align 1
  %conv.i.i90 = zext i8 %37 to i32
  %add.i.i91 = add nuw nsw i32 %conv.i.i90, 8
  br label %scsi_command_size.exit97

cond.false.i95:                                   ; preds = %err
  call void @__sanitizer_cov_trace_pc() #18
  %38 = lshr i8 %35, 5
  %39 = zext i8 %38 to i32
  %arrayidx4.i93 = getelementptr [8 x i8], ptr @scsi_command_size_tbl, i32 0, i32 %39
  %40 = ptrtoint ptr %arrayidx4.i93 to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %arrayidx4.i93, align 1
  %conv5.i94 = zext i8 %41 to i32
  br label %scsi_command_size.exit97

scsi_command_size.exit97:                         ; preds = %cond.false.i95, %cond.true.i92
  %cond.i96 = phi i32 [ %add.i.i91, %cond.true.i92 ], [ %conv5.i94, %cond.false.i95 ]
  %42 = tail call i32 @llvm.umin.i32(i32 %cond.i96, i32 32)
  %43 = call ptr @memcpy(ptr %33, ptr %cdb, i32 %42)
  br label %cleanup

cleanup:                                          ; preds = %scsi_command_size.exit97, %scsi_command_size.exit87
  %retval.0 = phi i32 [ %ret.0, %scsi_command_size.exit97 ], [ 0, %scsi_command_size.exit87 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_target_sequencer_start(ptr noundef %cmd) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_target_sequencer_start, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_target_sequencer_start, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !779

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !757) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !767

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.302, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div1.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !757) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !789
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_target_sequencer_start, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %cmd) #16
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !790
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !790
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !757) #16
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !757) #16
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !767

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.302, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div1.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !757) #16
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !791
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_target_sequencer_start, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_target_sequencer_start.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_target_sequencer_start.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.300, i32 noundef 167, ptr noundef nonnull @.str.301) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !792
  %38 = tail call i32 @llvm.read_register.i32(metadata !757) #16
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @target_cmd_parse_cdb(ptr noundef %cmd) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %se_dev = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 19
  %0 = ptrtoint ptr %se_dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %se_dev, align 4
  %transport = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 46
  %2 = ptrtoint ptr %transport to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %transport, align 8
  %parse_cdb = getelementptr inbounds %struct.target_backend_ops, ptr %3, i32 0, i32 17
  %4 = ptrtoint ptr %parse_cdb to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parse_cdb, align 4
  %call = tail call i32 %5(ptr noundef %cmd) #16
  %6 = zext i32 %call to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.368)
  switch i32 %call, label %entry.cleanup_crit_edge [
    i32 2, label %do.body
    i32 0, label %if.end10
  ]

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @target_cmd_parse_cdb.descriptor, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@target_cmd_parse_cdb, %land.lhs.true)) #16
          to label %cleanup [label %land.lhs.true], !srcloc !779

land.lhs.true:                                    ; preds = %do.body
  %call4 = tail call i32 @___ratelimit(ptr noundef nonnull @target_cmd_parse_cdb._rs, ptr noundef nonnull @.str.130) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %land.lhs.true.cleanup_crit_edge, label %if.then6

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then6:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %se_tfo = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 26
  %7 = ptrtoint ptr %se_tfo to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %se_tfo, align 8
  %fabric_name = getelementptr inbounds %struct.target_core_fabric_ops, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %fabric_name to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %fabric_name, align 4
  %se_sess = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 21
  %11 = ptrtoint ptr %se_sess to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %se_sess, align 4
  %se_node_acl = getelementptr inbounds %struct.se_session, ptr %12, i32 0, i32 4
  %13 = ptrtoint ptr %se_node_acl to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %se_node_acl, align 8
  %t_task_cdb = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 30
  %15 = ptrtoint ptr %t_task_cdb to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %t_task_cdb, align 8
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %16, align 1
  %conv = zext i8 %18 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @target_cmd_parse_cdb.descriptor, ptr noundef nonnull @.str.131, ptr noundef %10, ptr noundef %14, i32 noundef %conv) #16
  br label %cleanup

if.end10:                                         ; preds = %entry
  %19 = ptrtoint ptr %se_dev to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %se_dev, align 4
  %transport_flags.i = getelementptr inbounds %struct.se_device, ptr %20, i32 0, i32 3
  %21 = ptrtoint ptr %transport_flags.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %transport_flags.i, align 4
  %23 = and i8 %22, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool.not.i = icmp eq i8 %23, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.end10.if.end14_crit_edge

if.end10.if.end14_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

if.end.i:                                         ; preds = %if.end10
  %sam_task_attr.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 7
  %24 = ptrtoint ptr %sam_task_attr.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %sam_task_attr.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 36, i32 %25)
  %cmp.i = icmp eq i32 %25, 36
  br i1 %cmp.i, label %do.body.i, label %if.end.i.if.end14_crit_edge

if.end.i.if.end14_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

do.body.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @transport_check_alloc_task_attr.__UNIQUE_ID_ddebug668, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@target_cmd_parse_cdb, %if.then6.i)) #16
          to label %cleanup [label %if.then6.i], !srcloc !779

if.then6.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @transport_check_alloc_task_attr.__UNIQUE_ID_ddebug668, ptr noundef nonnull @.str.304) #16
  br label %cleanup

if.end14:                                         ; preds = %if.end.i.if.end14_crit_edge, %if.end10.if.end14_crit_edge
  %se_cmd_flags = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 11
  %26 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %se_cmd_flags, align 8
  %or = or i32 %27, 1
  store i32 %or, ptr %se_cmd_flags, align 8
  %se_lun = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 20
  %28 = ptrtoint ptr %se_lun to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %se_lun, align 8
  %lun_stats = getelementptr inbounds %struct.se_lun, ptr %29, i32 0, i32 17
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %lun_stats, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %lun_stats, i32 1, i32 3, i32 1) #16
  %30 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %lun_stats, ptr %lun_stats, i32 1, ptr elementtype(i32) %lun_stats) #16, !srcloc !784
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.then6.i, %do.body.i, %if.then6, %land.lhs.true.cleanup_crit_edge, %do.body, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end14 ], [ %call, %entry.cleanup_crit_edge ], [ 2, %do.body ], [ 2, %land.lhs.true.cleanup_crit_edge ], [ 2, %if.then6 ], [ 8, %if.then6.i ], [ 8, %do.body.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @transport_handle_cdb_direct(ptr noundef %cmd) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__might_sleep(ptr noundef nonnull @.str.3, i32 noundef 1556) #16
  %se_lun = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 20
  %0 = ptrtoint ptr %se_lun to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %se_lun, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @dump_stack() #21
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.132) #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %t_state = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 10
  %2 = ptrtoint ptr %t_state to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 1, ptr %t_state, align 4
  %transport_state = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 34
  %3 = ptrtoint ptr %transport_state to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %transport_state, align 4
  %or = or i32 %4, 2
  store i32 %or, ptr %transport_state, align 4
  %call7 = tail call i32 @transport_generic_new_cmd(ptr noundef %cmd)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.end.cleanup_crit_edge, label %if.then9

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then9:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @transport_generic_request_failure(ptr noundef %cmd, i32 noundef %call7)
  br label %cleanup

cleanup:                                          ; preds = %if.then9, %if.end.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ -22, %if.then ], [ 0, %if.then9 ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @dump_stack() local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @transport_generic_new_cmd(ptr noundef %cmd) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %se_cmd_flags = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 11
  %0 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %se_cmd_flags, align 8
  %and = and i32 %1, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %prot_op = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 49
  %2 = ptrtoint ptr %prot_op to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %prot_op, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.not = icmp ne i32 %3, 0
  %and2 = and i32 %1, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  %or.cond = select i1 %cmp.not, i1 %tobool3.not, i1 false
  br i1 %or.cond, label %if.then, label %entry.if.end6_crit_edge

entry.if.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6

if.then:                                          ; preds = %entry
  %t_prot_sg = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 55
  %t_prot_nents = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 56
  %prot_length = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 53
  %4 = ptrtoint ptr %prot_length to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %prot_length, align 4
  %conv.i = zext i32 %5 to i64
  %call.i = tail call ptr @sgl_alloc_order(i64 noundef %conv.i, i32 noundef 0, i1 noundef zeroext false, i32 noundef 3520, ptr noundef %t_prot_nents) #16
  %6 = ptrtoint ptr %t_prot_sg to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %call.i, ptr %t_prot_sg, align 4
  %tobool3.not.i = icmp eq ptr %call.i, null
  br i1 %tobool3.not.i, label %if.then.cleanup119_crit_edge, label %if.then.if.end6_crit_edge

if.then.if.end6_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6

if.then.cleanup119_crit_edge:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup119

if.end6:                                          ; preds = %if.then.if.end6_crit_edge, %entry.if.end6_crit_edge
  %7 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %se_cmd_flags, align 8
  %and8 = and i32 %8, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  br i1 %tobool9.not, label %land.lhs.true10, label %if.end6.if.else38_crit_edge

if.end6.if.else38_crit_edge:                      ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else38

land.lhs.true10:                                  ; preds = %if.end6
  %data_length = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 12
  %9 = ptrtoint ptr %data_length to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %data_length, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool11.not = icmp eq i32 %10, 0
  br i1 %tobool11.not, label %land.lhs.true10.if.else38_crit_edge, label %if.then12

land.lhs.true10.if.else38_crit_edge:              ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else38

if.then12:                                        ; preds = %land.lhs.true10
  %11 = and i32 %8, 8320
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %if.then12.if.end31_crit_edge, label %if.then19

if.then12.if.end31_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #18
  %.pre = select i1 %tobool.not, i32 3520, i32 3264
  br label %if.end31

if.then19:                                        ; preds = %if.then12
  %and17 = and i32 %8, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17)
  %tobool18.not = icmp eq i32 %and17, 0
  br i1 %tobool18.not, label %if.then19.if.end25_crit_edge, label %if.then23

if.then19.if.end25_crit_edge:                     ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end25

if.then23:                                        ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #18
  %t_task_nolb = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 33
  %13 = ptrtoint ptr %t_task_nolb to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %t_task_nolb, align 8
  %se_dev = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 19
  %15 = ptrtoint ptr %se_dev to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %se_dev, align 4
  %block_size = getelementptr inbounds %struct.se_device, ptr %16, i32 0, i32 39, i32 21
  %17 = ptrtoint ptr %block_size to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %block_size, align 8
  %mul = mul i32 %18, %14
  br label %if.end25

if.end25:                                         ; preds = %if.then23, %if.then19.if.end25_crit_edge
  %bidi_length.0 = phi i32 [ %mul, %if.then23 ], [ %10, %if.then19.if.end25_crit_edge ]
  %t_bidi_data_sg = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 44
  %t_bidi_data_nents = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 45
  %or.i = select i1 %tobool.not, i32 3520, i32 3264
  %conv.i178 = zext i32 %bidi_length.0 to i64
  %call.i179 = tail call ptr @sgl_alloc_order(i64 noundef %conv.i178, i32 noundef 0, i1 noundef zeroext false, i32 noundef %or.i, ptr noundef %t_bidi_data_nents) #16
  %19 = ptrtoint ptr %t_bidi_data_sg to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %call.i179, ptr %t_bidi_data_sg, align 4
  %tobool3.not.i180 = icmp eq ptr %call.i179, null
  br i1 %tobool3.not.i180, label %if.end25.cleanup119_crit_edge, label %if.end25.if.end31_crit_edge

if.end25.if.end31_crit_edge:                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end31

if.end25.cleanup119_crit_edge:                    ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup119

if.end31:                                         ; preds = %if.end25.if.end31_crit_edge, %if.then12.if.end31_crit_edge
  %or.i182.pre-phi = phi i32 [ %.pre, %if.then12.if.end31_crit_edge ], [ %or.i, %if.end25.if.end31_crit_edge ]
  %t_data_sg = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 39
  %t_data_nents = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 41
  %20 = ptrtoint ptr %data_length to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %data_length, align 4
  %conv.i183 = zext i32 %21 to i64
  %call.i184 = tail call ptr @sgl_alloc_order(i64 noundef %conv.i183, i32 noundef 0, i1 noundef zeroext false, i32 noundef %or.i182.pre-phi, ptr noundef %t_data_nents) #16
  %22 = ptrtoint ptr %t_data_sg to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %call.i184, ptr %t_data_sg, align 4
  %tobool3.not.i185 = icmp eq ptr %call.i184, null
  br i1 %tobool3.not.i185, label %if.end31.cleanup119_crit_edge, label %if.end31.if.end62_crit_edge

if.end31.if.end62_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end62

if.end31.cleanup119_crit_edge:                    ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup119

if.else38:                                        ; preds = %land.lhs.true10.if.else38_crit_edge, %if.end6.if.else38_crit_edge
  %and40 = and i32 %8, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and40)
  %tobool41.not = icmp eq i32 %and40, 0
  br i1 %tobool41.not, label %if.else38.if.end62_crit_edge, label %land.lhs.true42

if.else38.if.end62_crit_edge:                     ; preds = %if.else38
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end62

land.lhs.true42:                                  ; preds = %if.else38
  %data_length43 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 12
  %23 = ptrtoint ptr %data_length43 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %data_length43, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool44.not = icmp eq i32 %24, 0
  br i1 %tobool44.not, label %land.lhs.true42.if.end62_crit_edge, label %if.then45

land.lhs.true42.if.end62_crit_edge:               ; preds = %land.lhs.true42
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end62

if.then45:                                        ; preds = %land.lhs.true42
  %t_task_nolb46 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 33
  %25 = ptrtoint ptr %t_task_nolb46 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %t_task_nolb46, align 8
  %se_dev47 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 19
  %27 = ptrtoint ptr %se_dev47 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %se_dev47, align 4
  %block_size49 = getelementptr inbounds %struct.se_device, ptr %28, i32 0, i32 39, i32 21
  %29 = ptrtoint ptr %block_size49 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %block_size49, align 8
  %mul50 = mul i32 %30, %26
  %t_bidi_data_sg51 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 44
  %t_bidi_data_nents52 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 45
  %or.i187 = select i1 %tobool.not, i32 3520, i32 3264
  %conv.i188 = zext i32 %mul50 to i64
  %call.i189 = tail call ptr @sgl_alloc_order(i64 noundef %conv.i188, i32 noundef 0, i1 noundef zeroext false, i32 noundef %or.i187, ptr noundef %t_bidi_data_nents52) #16
  %31 = ptrtoint ptr %t_bidi_data_sg51 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %call.i189, ptr %t_bidi_data_sg51, align 4
  %tobool3.not.i190 = icmp eq ptr %call.i189, null
  br i1 %tobool3.not.i190, label %if.then45.cleanup119_crit_edge, label %if.then45.if.end62_crit_edge

if.then45.if.end62_crit_edge:                     ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end62

if.then45.cleanup119_crit_edge:                   ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup119

if.end62:                                         ; preds = %if.then45.if.end62_crit_edge, %land.lhs.true42.if.end62_crit_edge, %if.else38.if.end62_crit_edge, %if.end31.if.end62_crit_edge
  %se_dev.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 19
  %32 = ptrtoint ptr %se_dev.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %se_dev.i, align 4
  %queues.i = getelementptr inbounds %struct.se_device, ptr %33, i32 0, i32 52
  %34 = ptrtoint ptr %queues.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %queues.i, align 4
  %cpuid.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 59
  %36 = ptrtoint ptr %cpuid.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %cpuid.i, align 8
  %lock.i = getelementptr %struct.se_device_queue, ptr %35, i32 %37, i32 1
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i) #16
  %state_active.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 3
  %38 = ptrtoint ptr %state_active.i to i32
  call void @__asan_load1_noabort(i32 %38)
  %bf.load.i = load i8, ptr %state_active.i, align 8
  %39 = and i8 %bf.load.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %39)
  %bf.cast.not.i = icmp eq i8 %39, 0
  br i1 %bf.cast.not.i, label %if.then.i, label %if.end62.target_add_to_state_list.exit_crit_edge

if.end62.target_add_to_state_list.exit_crit_edge: ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #18
  br label %target_add_to_state_list.exit

if.then.i:                                        ; preds = %if.end62
  %state_list.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 47
  %40 = ptrtoint ptr %queues.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %queues.i, align 4
  %42 = ptrtoint ptr %cpuid.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %cpuid.i, align 8
  %arrayidx7.i = getelementptr %struct.se_device_queue, ptr %41, i32 %43
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %arrayidx7.i, i32 0, i32 1
  %44 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %prev.i.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %state_list.i, ptr noundef %45, ptr noundef %arrayidx7.i) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then.i.list_add_tail.exit.i_crit_edge

if.then.i.list_add_tail.exit.i_crit_edge:         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_add_tail.exit.i

if.end.i.i.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %46 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %state_list.i, ptr %prev.i.i, align 4
  %47 = ptrtoint ptr %state_list.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %arrayidx7.i, ptr %state_list.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 47, i32 1
  %48 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %45, ptr %prev3.i.i.i, align 4
  %49 = ptrtoint ptr %45 to i32
  call void @__asan_store4_noabort(i32 %49)
  store volatile ptr %state_list.i, ptr %45, align 4
  br label %list_add_tail.exit.i

list_add_tail.exit.i:                             ; preds = %if.end.i.i.i, %if.then.i.list_add_tail.exit.i_crit_edge
  %50 = ptrtoint ptr %state_active.i to i32
  call void @__asan_load1_noabort(i32 %50)
  %bf.load10.i = load i8, ptr %state_active.i, align 8
  %bf.set.i = or i8 %bf.load10.i, 64
  store i8 %bf.set.i, ptr %state_active.i, align 8
  br label %target_add_to_state_list.exit

target_add_to_state_list.exit:                    ; preds = %list_add_tail.exit.i, %if.end62.target_add_to_state_list.exit_crit_edge
  %51 = ptrtoint ptr %queues.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %queues.i, align 4
  %53 = ptrtoint ptr %cpuid.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %cpuid.i, align 8
  %lock15.i = getelementptr %struct.se_device_queue, ptr %52, i32 %54, i32 1
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock15.i, i32 noundef %call2.i) #16
  %data_direction = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 6
  %55 = ptrtoint ptr %data_direction to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %data_direction, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %56)
  %cmp63.not = icmp eq i32 %56, 1
  br i1 %cmp63.not, label %lor.lhs.false64, label %target_add_to_state_list.exit.if.then67_crit_edge

target_add_to_state_list.exit.if.then67_crit_edge: ; preds = %target_add_to_state_list.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then67

lor.lhs.false64:                                  ; preds = %target_add_to_state_list.exit
  %data_length65 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 12
  %57 = ptrtoint ptr %data_length65 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %data_length65, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %cmp66 = icmp eq i32 %58, 0
  br i1 %cmp66, label %lor.lhs.false64.if.then67_crit_edge, label %do.body69

lor.lhs.false64.if.then67_crit_edge:              ; preds = %lor.lhs.false64
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then67

if.then67:                                        ; preds = %lor.lhs.false64.if.then67_crit_edge, %target_add_to_state_list.exit.if.then67_crit_edge
  tail call void @target_execute_cmd(ptr noundef %cmd)
  br label %cleanup119

do.body69:                                        ; preds = %lor.lhs.false64
  %t_state_lock = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 35
  %call72 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %t_state_lock) #16
  %t_state = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 10
  %59 = ptrtoint ptr %t_state to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 3, ptr %t_state, align 4
  %transport_state = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 34
  %60 = ptrtoint ptr %transport_state to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %transport_state, align 4
  %and75 = and i32 %61, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and75)
  %tobool76.not = icmp eq i32 %and75, 0
  br i1 %tobool76.not, label %do.body69.if.end93_crit_edge, label %land.lhs.true77

do.body69.if.end93_crit_edge:                     ; preds = %do.body69
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end93

land.lhs.true77:                                  ; preds = %do.body69
  %se_tfo = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 26
  %62 = ptrtoint ptr %se_tfo to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %se_tfo, align 8
  %write_pending_must_be_called = getelementptr inbounds %struct.target_core_fabric_ops, ptr %63, i32 0, i32 49
  %64 = ptrtoint ptr %write_pending_must_be_called to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %write_pending_must_be_called, align 4, !range !780
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %65)
  %tobool78.not = icmp eq i8 %65, 0
  br i1 %tobool78.not, label %do.body80, label %land.lhs.true77.if.end93_crit_edge

land.lhs.true77.if.end93_crit_edge:               ; preds = %land.lhs.true77
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end93

do.body80:                                        ; preds = %land.lhs.true77
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @transport_generic_new_cmd.__UNIQUE_ID_ddebug678, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@transport_generic_new_cmd, %if.then88)) #16
          to label %do.end91 [label %if.then88], !srcloc !779

if.then88:                                        ; preds = %do.body80
  call void @__sanitizer_cov_trace_pc() #18
  %tag = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 4
  %66 = ptrtoint ptr %tag to i32
  call void @__asan_load8_noabort(i32 %66)
  %67 = load i64, ptr %tag, align 8
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @transport_generic_new_cmd.__UNIQUE_ID_ddebug678, ptr noundef nonnull @.str.143, ptr noundef nonnull @.str.142, i32 noundef 2822, i64 noundef %67) #16
  br label %do.end91

do.end91:                                         ; preds = %if.then88, %do.body80
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %t_state_lock, i32 noundef %call72) #16
  %t_transport_stop_comp = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 37
  tail call void @complete_all(ptr noundef %t_transport_stop_comp) #16
  br label %cleanup119

if.end93:                                         ; preds = %land.lhs.true77.if.end93_crit_edge, %do.body69.if.end93_crit_edge
  %and95 = and i32 %61, -3
  %68 = ptrtoint ptr %transport_state to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 %and95, ptr %transport_state, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %t_state_lock, i32 noundef %call72) #16
  %se_tfo97 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 26
  %69 = ptrtoint ptr %se_tfo97 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %se_tfo97, align 8
  %write_pending = getelementptr inbounds %struct.target_core_fabric_ops, ptr %70, i32 0, i32 20
  %71 = ptrtoint ptr %write_pending to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %write_pending, align 4
  %call98 = tail call i32 %72(ptr noundef %cmd) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call98)
  %tobool99.not = icmp eq i32 %call98, 0
  br i1 %tobool99.not, label %if.end93.cleanup119_crit_edge, label %do.body102

if.end93.cleanup119_crit_edge:                    ; preds = %if.end93
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup119

do.body102:                                       ; preds = %if.end93
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @transport_generic_new_cmd.__UNIQUE_ID_ddebug679, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@transport_generic_new_cmd, %if.then114)) #16
          to label %do.end117 [label %if.then114], !srcloc !779

if.then114:                                       ; preds = %do.body102
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @transport_generic_new_cmd.__UNIQUE_ID_ddebug679, ptr noundef nonnull @.str.144, ptr noundef %cmd) #16
  br label %do.end117

do.end117:                                        ; preds = %if.then114, %do.body102
  %73 = ptrtoint ptr %se_dev.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %se_dev.i, align 4
  tail call fastcc void @transport_handle_queue_full(ptr noundef %cmd, ptr noundef %74, i32 noundef %call98, i1 noundef zeroext true)
  br label %cleanup119

cleanup119:                                       ; preds = %do.end117, %if.end93.cleanup119_crit_edge, %do.end91, %if.then67, %if.then45.cleanup119_crit_edge, %if.end31.cleanup119_crit_edge, %if.end25.cleanup119_crit_edge, %if.then.cleanup119_crit_edge
  %retval.2 = phi i32 [ 0, %if.then67 ], [ 0, %do.end117 ], [ 0, %do.end91 ], [ 10, %if.then45.cleanup119_crit_edge ], [ 10, %if.end25.cleanup119_crit_edge ], [ 10, %if.then.cleanup119_crit_edge ], [ 10, %if.end31.cleanup119_crit_edge ], [ 0, %if.end93.cleanup119_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @transport_generic_request_failure(ptr noundef %cmd, i32 noundef %sense_reason) #0 align 64 {
entry:
  %post_ret = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %post_ret) #16
  %0 = ptrtoint ptr %post_ret to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %post_ret, align 4, !annotation !769
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @transport_generic_request_failure.__UNIQUE_ID_ddebug671, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@transport_generic_request_failure, %if.then)) #16
          to label %do.end [label %if.then], !srcloc !779

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @transport_generic_request_failure.__UNIQUE_ID_ddebug671, ptr noundef nonnull @.str.139, i32 noundef %sense_reason) #16
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  tail call void @target_show_cmd(ptr noundef nonnull @.str.140, ptr noundef %cmd)
  tail call fastcc void @transport_complete_task_attr(ptr noundef %cmd)
  %transport_complete_callback = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 28
  %1 = ptrtoint ptr %transport_complete_callback to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %transport_complete_callback, align 8
  %tobool3.not = icmp eq ptr %2, null
  br i1 %tobool3.not, label %do.end.if.end7_crit_edge, label %if.then4

do.end.if.end7_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

if.then4:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  %call6 = call i32 %2(ptr noundef %cmd, i1 noundef zeroext false, ptr noundef nonnull %post_ret) #16
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %do.end.if.end7_crit_edge
  %transport_state = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 34
  %3 = ptrtoint ptr %transport_state to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %transport_state, align 4
  %and = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool8.not = icmp eq i32 %and, 0
  br i1 %tobool8.not, label %if.end20, label %do.body10

do.body10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  %work = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38
  call void @__init_work(ptr noundef %work, i32 noundef 0) #16
  %5 = ptrtoint ptr %work to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 -64, ptr %work, align 8
  %lockdep_map = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38, i32 3
  call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.65, ptr noundef nonnull @transport_generic_request_failure.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #16
  %entry14 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38, i32 1
  %6 = ptrtoint ptr %entry14 to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %entry14, ptr %entry14, align 4
  %prev.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38, i32 1, i32 1
  %7 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %entry14, ptr %prev.i, align 4
  %func = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38, i32 2
  %8 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr @target_abort_work, ptr %func, align 4
  %9 = load ptr, ptr @target_completion_wq, align 4
  %call.i = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %9, ptr noundef %work) #16
  br label %cleanup

if.end20:                                         ; preds = %if.end7
  %10 = zext i32 %sense_reason to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.369)
  switch i32 %sense_reason, label %do.end32 [
    i32 1, label %if.end20.sw.epilog_crit_edge
    i32 2, label %if.end20.sw.epilog_crit_edge82
    i32 8, label %if.end20.sw.epilog_crit_edge83
    i32 9, label %if.end20.sw.epilog_crit_edge84
    i32 19, label %if.end20.sw.epilog_crit_edge85
    i32 10, label %if.end20.sw.epilog_crit_edge86
    i32 11, label %if.end20.sw.epilog_crit_edge87
    i32 12, label %if.end20.sw.epilog_crit_edge88
    i32 17, label %if.end20.sw.epilog_crit_edge89
    i32 13, label %if.end20.sw.epilog_crit_edge90
    i32 14, label %if.end20.sw.epilog_crit_edge91
    i32 21, label %if.end20.sw.epilog_crit_edge92
    i32 22, label %if.end20.sw.epilog_crit_edge93
    i32 23, label %if.end20.sw.epilog_crit_edge94
    i32 24, label %if.end20.sw.epilog_crit_edge95
    i32 25, label %if.end20.sw.epilog_crit_edge96
    i32 26, label %if.end20.sw.epilog_crit_edge97
    i32 27, label %if.end20.sw.epilog_crit_edge98
    i32 28, label %if.end20.sw.epilog_crit_edge99
    i32 31, label %if.end20.sw.epilog_crit_edge100
    i32 32, label %if.end20.sw.epilog_crit_edge101
    i32 33, label %if.end20.sw.epilog_crit_edge102
    i32 34, label %if.end20.sw.epilog_crit_edge103
    i32 35, label %if.end20.sw.epilog_crit_edge104
    i32 18, label %sw.bb21
    i32 30, label %sw.bb22
    i32 16, label %sw.bb24
  ]

if.end20.sw.epilog_crit_edge104:                  ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end20.sw.epilog_crit_edge103:                  ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end20.sw.epilog_crit_edge102:                  ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end20.sw.epilog_crit_edge101:                  ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end20.sw.epilog_crit_edge100:                  ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end20.sw.epilog_crit_edge99:                   ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end20.sw.epilog_crit_edge98:                   ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end20.sw.epilog_crit_edge97:                   ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end20.sw.epilog_crit_edge96:                   ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end20.sw.epilog_crit_edge95:                   ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end20.sw.epilog_crit_edge94:                   ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end20.sw.epilog_crit_edge93:                   ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end20.sw.epilog_crit_edge92:                   ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end20.sw.epilog_crit_edge91:                   ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end20.sw.epilog_crit_edge90:                   ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end20.sw.epilog_crit_edge89:                   ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end20.sw.epilog_crit_edge88:                   ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end20.sw.epilog_crit_edge87:                   ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end20.sw.epilog_crit_edge86:                   ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end20.sw.epilog_crit_edge85:                   ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end20.sw.epilog_crit_edge84:                   ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end20.sw.epilog_crit_edge83:                   ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end20.sw.epilog_crit_edge82:                   ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end20.sw.epilog_crit_edge:                     ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

sw.bb21:                                          ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  %scsi_status = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 1
  %11 = ptrtoint ptr %scsi_status to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 40, ptr %scsi_status, align 4
  br label %queue_status

sw.bb22:                                          ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  %scsi_status23 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 1
  %12 = ptrtoint ptr %scsi_status23 to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 8, ptr %scsi_status23, align 4
  br label %queue_status

sw.bb24:                                          ; preds = %if.end20
  %scsi_status25 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 1
  %13 = ptrtoint ptr %scsi_status25 to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 24, ptr %scsi_status25, align 4
  %se_sess = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 21
  %14 = ptrtoint ptr %se_sess to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %se_sess, align 4
  %tobool26.not = icmp eq ptr %15, null
  br i1 %tobool26.not, label %sw.bb24.queue_status_crit_edge, label %land.lhs.true

sw.bb24.queue_status_crit_edge:                   ; preds = %sw.bb24
  call void @__sanitizer_cov_trace_pc() #18
  br label %queue_status

land.lhs.true:                                    ; preds = %sw.bb24
  %se_dev = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 19
  %16 = ptrtoint ptr %se_dev to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %se_dev, align 4
  %emulate_ua_intlck_ctrl = getelementptr inbounds %struct.se_device, ptr %17, i32 0, i32 39, i32 5
  %18 = ptrtoint ptr %emulate_ua_intlck_ctrl to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %emulate_ua_intlck_ctrl, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %19)
  %cmp = icmp eq i32 %19, 2
  br i1 %cmp, label %if.then27, label %land.lhs.true.queue_status_crit_edge

land.lhs.true.queue_status_crit_edge:             ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %queue_status

if.then27:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %se_node_acl = getelementptr inbounds %struct.se_session, ptr %15, i32 0, i32 4
  %20 = ptrtoint ptr %se_node_acl to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %se_node_acl, align 8
  %orig_fe_lun = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 14
  %22 = ptrtoint ptr %orig_fe_lun to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %orig_fe_lun, align 8
  %conv = trunc i64 %23 to i32
  call void @target_ua_allocate_lun(ptr noundef %21, i32 noundef %conv, i8 noundef zeroext 44, i8 noundef zeroext 9) #16
  br label %queue_status

do.end32:                                         ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  %t_task_cdb = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 30
  %24 = ptrtoint ptr %t_task_cdb to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %t_task_cdb, align 8
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %25, align 1
  %conv34 = zext i8 %27 to i32
  %call35 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.141, i32 noundef %conv34, i32 noundef %sense_reason) #21
  br label %sw.epilog

sw.epilog:                                        ; preds = %do.end32, %if.end20.sw.epilog_crit_edge, %if.end20.sw.epilog_crit_edge82, %if.end20.sw.epilog_crit_edge83, %if.end20.sw.epilog_crit_edge84, %if.end20.sw.epilog_crit_edge85, %if.end20.sw.epilog_crit_edge86, %if.end20.sw.epilog_crit_edge87, %if.end20.sw.epilog_crit_edge88, %if.end20.sw.epilog_crit_edge89, %if.end20.sw.epilog_crit_edge90, %if.end20.sw.epilog_crit_edge91, %if.end20.sw.epilog_crit_edge92, %if.end20.sw.epilog_crit_edge93, %if.end20.sw.epilog_crit_edge94, %if.end20.sw.epilog_crit_edge95, %if.end20.sw.epilog_crit_edge96, %if.end20.sw.epilog_crit_edge97, %if.end20.sw.epilog_crit_edge98, %if.end20.sw.epilog_crit_edge99, %if.end20.sw.epilog_crit_edge100, %if.end20.sw.epilog_crit_edge101, %if.end20.sw.epilog_crit_edge102, %if.end20.sw.epilog_crit_edge103, %if.end20.sw.epilog_crit_edge104
  %sense_reason.addr.0 = phi i32 [ 2, %do.end32 ], [ %sense_reason, %if.end20.sw.epilog_crit_edge ], [ %sense_reason, %if.end20.sw.epilog_crit_edge82 ], [ %sense_reason, %if.end20.sw.epilog_crit_edge83 ], [ %sense_reason, %if.end20.sw.epilog_crit_edge84 ], [ %sense_reason, %if.end20.sw.epilog_crit_edge85 ], [ %sense_reason, %if.end20.sw.epilog_crit_edge86 ], [ %sense_reason, %if.end20.sw.epilog_crit_edge87 ], [ %sense_reason, %if.end20.sw.epilog_crit_edge88 ], [ %sense_reason, %if.end20.sw.epilog_crit_edge89 ], [ %sense_reason, %if.end20.sw.epilog_crit_edge90 ], [ %sense_reason, %if.end20.sw.epilog_crit_edge91 ], [ %sense_reason, %if.end20.sw.epilog_crit_edge92 ], [ %sense_reason, %if.end20.sw.epilog_crit_edge93 ], [ %sense_reason, %if.end20.sw.epilog_crit_edge94 ], [ %sense_reason, %if.end20.sw.epilog_crit_edge95 ], [ %sense_reason, %if.end20.sw.epilog_crit_edge96 ], [ %sense_reason, %if.end20.sw.epilog_crit_edge97 ], [ %sense_reason, %if.end20.sw.epilog_crit_edge98 ], [ %sense_reason, %if.end20.sw.epilog_crit_edge99 ], [ %sense_reason, %if.end20.sw.epilog_crit_edge100 ], [ %sense_reason, %if.end20.sw.epilog_crit_edge101 ], [ %sense_reason, %if.end20.sw.epilog_crit_edge102 ], [ %sense_reason, %if.end20.sw.epilog_crit_edge103 ], [ %sense_reason, %if.end20.sw.epilog_crit_edge104 ]
  %call36 = call i32 @transport_send_check_condition_and_sense(ptr noundef %cmd, i32 noundef %sense_reason.addr.0, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36)
  %tobool37.not = icmp eq i32 %call36, 0
  br i1 %tobool37.not, label %sw.epilog.check_stop_crit_edge, label %sw.epilog.queue_full_crit_edge

sw.epilog.queue_full_crit_edge:                   ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  br label %queue_full

sw.epilog.check_stop_crit_edge:                   ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  br label %check_stop

check_stop:                                       ; preds = %queue_status.check_stop_crit_edge, %sw.epilog.check_stop_crit_edge
  call fastcc void @transport_lun_remove_cmd(ptr noundef %cmd)
  call fastcc void @transport_cmd_check_stop_to_fabric(ptr noundef %cmd)
  br label %cleanup

queue_status:                                     ; preds = %if.then27, %land.lhs.true.queue_status_crit_edge, %sw.bb24.queue_status_crit_edge, %sw.bb22, %sw.bb21
  call fastcc void @trace_target_cmd_complete(ptr noundef %cmd)
  %se_tfo = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 26
  %28 = ptrtoint ptr %se_tfo to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %se_tfo, align 8
  %queue_status41 = getelementptr inbounds %struct.target_core_fabric_ops, ptr %29, i32 0, i32 24
  %30 = ptrtoint ptr %queue_status41 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %queue_status41, align 4
  %call42 = call i32 %31(ptr noundef %cmd) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42)
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %queue_status.check_stop_crit_edge, label %queue_status.queue_full_crit_edge

queue_status.queue_full_crit_edge:                ; preds = %queue_status
  call void @__sanitizer_cov_trace_pc() #18
  br label %queue_full

queue_status.check_stop_crit_edge:                ; preds = %queue_status
  call void @__sanitizer_cov_trace_pc() #18
  br label %check_stop

queue_full:                                       ; preds = %queue_status.queue_full_crit_edge, %sw.epilog.queue_full_crit_edge
  %ret.0 = phi i32 [ %call36, %sw.epilog.queue_full_crit_edge ], [ %call42, %queue_status.queue_full_crit_edge ]
  %se_dev46 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 19
  %32 = ptrtoint ptr %se_dev46 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %se_dev46, align 4
  call fastcc void @transport_handle_queue_full(ptr noundef %cmd, ptr noundef %33, i32 noundef %ret.0, i1 noundef zeroext false)
  br label %cleanup

cleanup:                                          ; preds = %queue_full, %check_stop, %do.body10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %post_ret) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @transport_generic_map_mem_to_cmd(ptr nocapture noundef %cmd, ptr noundef %sgl, i32 noundef %sgl_count, ptr noundef %sgl_bidi, i32 noundef %sgl_bidi_count) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %sgl, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sgl_count)
  %tobool1.not = icmp eq i32 %sgl_count, 0
  %or.cond = or i1 %tobool.not, %tobool1.not
  br i1 %or.cond, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end:                                           ; preds = %entry
  %se_cmd_flags = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 11
  %0 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %se_cmd_flags, align 8
  %and = and i32 %1, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %tobool2.not, label %if.end4, label %do.end

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.134) #21
  br label %return

if.end4:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %t_data_sg = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 39
  %2 = ptrtoint ptr %t_data_sg to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %sgl, ptr %t_data_sg, align 4
  %t_data_nents = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 41
  %3 = ptrtoint ptr %t_data_nents to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %sgl_count, ptr %t_data_nents, align 4
  %t_bidi_data_sg = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 44
  %4 = ptrtoint ptr %t_bidi_data_sg to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %sgl_bidi, ptr %t_bidi_data_sg, align 8
  %t_bidi_data_nents = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 45
  %5 = ptrtoint ptr %t_bidi_data_nents to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %sgl_bidi_count, ptr %t_bidi_data_nents, align 4
  %or = or i32 %1, 4096
  %6 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %or, ptr %se_cmd_flags, align 8
  br label %return

return:                                           ; preds = %if.end4, %do.end, %entry.return_crit_edge
  %retval.0 = phi i32 [ 8, %do.end ], [ 0, %if.end4 ], [ 0, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @target_init_cmd(ptr noundef %se_cmd, ptr noundef %se_sess, ptr noundef %sense, i64 noundef %unpacked_lun, i32 noundef %data_length, i32 noundef %task_attr, i32 noundef %data_dir, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %se_tpg1 = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 5
  %0 = ptrtoint ptr %se_tpg1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %se_tpg1, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %do.body5, label %do.body11, !prof !768

do.body5:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/target/target_core_transport.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1642, 0\0A.popsection", ""() #16, !srcloc !793
  unreachable

do.body11:                                        ; preds = %entry
  %se_tfo = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 26
  %2 = ptrtoint ptr %se_tfo to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %se_tfo, align 8
  %tobool12.not = icmp eq ptr %3, null
  br i1 %tobool12.not, label %lor.rhs, label %do.body11.do.body22_crit_edge, !prof !767

do.body11.do.body22_crit_edge:                    ; preds = %do.body11
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body22

lor.rhs:                                          ; preds = %do.body11
  %se_sess13 = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 21
  %4 = ptrtoint ptr %se_sess13 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %se_sess13, align 4
  %tobool14.not = icmp eq ptr %5, null
  br i1 %tobool14.not, label %do.end30, label %lor.rhs.do.body22_crit_edge, !prof !767

lor.rhs.do.body22_crit_edge:                      ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body22

do.body22:                                        ; preds = %lor.rhs.do.body22_crit_edge, %do.body11.do.body22_crit_edge
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/target/target_core_transport.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1643, 0\0A.popsection", ""() #16, !srcloc !794
  unreachable

do.end30:                                         ; preds = %lor.rhs
  %and = and i32 %flags, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool31.not = icmp eq i32 %and, 0
  br i1 %tobool31.not, label %do.end30.if.end33_crit_edge, label %if.then32

do.end30.if.end33_crit_edge:                      ; preds = %do.end30
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end33

if.then32:                                        ; preds = %do.end30
  call void @__sanitizer_cov_trace_pc() #18
  %se_cmd_flags = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 11
  %6 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %se_cmd_flags, align 8
  %or = or i32 %7, 65536
  store i32 %or, ptr %se_cmd_flags, align 8
  br label %if.end33

if.end33:                                         ; preds = %if.then32, %do.end30.if.end33_crit_edge
  %and34 = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34)
  %tobool35.not = icmp eq i32 %and34, 0
  br i1 %tobool35.not, label %if.end33.if.end39_crit_edge, label %if.then36

if.end33.if.end39_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end39

if.then36:                                        ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #18
  %se_cmd_flags37 = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 11
  %8 = ptrtoint ptr %se_cmd_flags37 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %se_cmd_flags37, align 8
  %or38 = or i32 %9, 128
  store i32 %or38, ptr %se_cmd_flags37, align 8
  br label %if.end39

if.end39:                                         ; preds = %if.then36, %if.end33.if.end39_crit_edge
  %and40 = and i32 %flags, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and40)
  %tobool41.not = icmp eq i32 %and40, 0
  br i1 %tobool41.not, label %if.end39.if.end43_crit_edge, label %if.then42

if.end39.if.end43_crit_edge:                      ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end43

if.then42:                                        ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #18
  %unknown_data_length = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 3
  %10 = ptrtoint ptr %unknown_data_length to i32
  call void @__asan_load1_noabort(i32 %10)
  %bf.load = load i8, ptr %unknown_data_length, align 8
  %bf.set = or i8 %bf.load, -128
  store i8 %bf.set, ptr %unknown_data_length, align 8
  br label %if.end43

if.end43:                                         ; preds = %if.then42, %if.end39.if.end43_crit_edge
  %se_tpg_tfo = getelementptr inbounds %struct.se_portal_group, ptr %1, i32 0, i32 10
  %11 = ptrtoint ptr %se_tpg_tfo to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %se_tpg_tfo, align 4
  tail call void @__target_init_cmd(ptr noundef %se_cmd, ptr noundef %12, ptr noundef %se_sess, i32 noundef %data_length, i32 noundef %data_dir, i32 noundef %task_attr, ptr noundef %sense, i64 noundef %unpacked_lun)
  %and44 = and i32 %flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and44)
  %tobool45 = icmp ne i32 %and44, 0
  %call = tail call i32 @target_get_sess_cmd(ptr noundef %se_cmd, i1 noundef zeroext %tobool45)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @target_get_sess_cmd(ptr noundef %se_cmd, i1 noundef zeroext %ack_kref) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %se_sess1 = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 21
  %0 = ptrtoint ptr %se_sess1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %se_sess1, align 4
  br i1 %ack_kref, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  %cmd_kref = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 36
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %cmd_kref, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %cmd_kref, i32 1, i32 3, i32 1) #16
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %cmd_kref, ptr %cmd_kref, i32 1, ptr elementtype(i32) %cmd_kref) #16, !srcloc !795
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %2, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !768

if.then.if.end15.sink.split.i.i.i.i_crit_edge:    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %3 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %3)
  %.not.i.i.i.i = icmp sgt i32 %3, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.kref_get.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !767

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.kref_get.exit_crit_edge:          ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %kref_get.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %cmd_kref, i32 noundef %.sink.i.i.i.i) #16
  br label %kref_get.exit

kref_get.exit:                                    ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.kref_get.exit_crit_edge
  %se_cmd_flags = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 11
  %4 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %se_cmd_flags, align 8
  %or = or i32 %5, 32768
  store i32 %or, ptr %se_cmd_flags, align 8
  br label %if.end

if.end:                                           ; preds = %kref_get.exit, %entry.if.end_crit_edge
  %cmd_count = getelementptr inbounds %struct.se_session, ptr %1, i32 0, i32 7
  %6 = tail call i32 @llvm.read_register.i32(metadata !757) #16
  %and.i.i.i.i.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i14 = add i32 %9, 1
  store volatile i32 %add.i.i.i.i14, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !771
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #16
  %call.i.i = tail call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i.i, label %if.end.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

if.end.rcu_read_lock.exit.i_crit_edge:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %if.end
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.290, i32 noundef 696, ptr noundef nonnull @.str.291) #16
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %if.end.rcu_read_lock.exit.i_crit_edge
  %call.i1.i = tail call i32 @rcu_read_lock_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i1.i)
  %tobool.not.i2.i = icmp eq i32 %call.i1.i, 0
  br i1 %tobool.not.i2.i, label %land.rhs.i.i, label %rcu_read_lock.exit.i.if.end29.i.i_crit_edge

rcu_read_lock.exit.i.if.end29.i.i_crit_edge:      ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end29.i.i

land.rhs.i.i:                                     ; preds = %rcu_read_lock.exit.i
  %.b104.i.i = load i1, ptr @percpu_ref_tryget_live_rcu.__already_done, align 1
  br i1 %.b104.i.i, label %land.rhs.i.i.if.end29.i.i_crit_edge, label %if.then.i3.i, !prof !767

land.rhs.i.i.if.end29.i.i_crit_edge:              ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end29.i.i

if.then.i3.i:                                     ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @percpu_ref_tryget_live_rcu.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.319, i32 noundef 280, i32 noundef 9, ptr noundef null) #16
  br label %if.end29.i.i

if.end29.i.i:                                     ; preds = %if.then.i3.i, %land.rhs.i.i.if.end29.i.i_crit_edge, %rcu_read_lock.exit.i.if.end29.i.i_crit_edge
  %10 = ptrtoint ptr %cmd_count to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %cmd_count, align 4
  %and.i.i.i = and i32 %11, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %do.body46.i.i, label %if.else.i.i, !prof !767

do.body46.i.i:                                    ; preds = %if.end29.i.i
  %12 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #16, !srcloc !772
  %13 = tail call i32 @llvm.read_register.i32(metadata !757) #16
  %and.i105.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i105.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 3
  %15 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %16
  %17 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %18, %11
  %19 = inttoptr i32 %add.i.i to ptr
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %19, align 4
  %add63.i.i = add i32 %21, 1
  store i32 %add63.i.i, ptr %19, align 4
  %22 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #16, !srcloc !773
  %and.i.i.i.i = and i32 %22, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool74.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool74.not.i.i, label %if.then83.i.i, label %do.body46.i.i.do.end86.i.i_crit_edge, !prof !768

do.body46.i.i.do.end86.i.i_crit_edge:             ; preds = %do.body46.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end86.i.i

if.then83.i.i:                                    ; preds = %do.body46.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @warn_bogus_irq_restore() #16
  br label %do.end86.i.i

do.end86.i.i:                                     ; preds = %if.then83.i.i, %do.body46.i.i.do.end86.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %12) #16, !srcloc !774
  br label %percpu_ref_tryget_live_rcu.exit.i

if.else.i.i:                                      ; preds = %if.end29.i.i
  %and.i.i = and i32 %11, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool93.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool93.not.i.i, label %if.then94.i.i, label %if.else.i.i.percpu_ref_tryget_live_rcu.exit.i_crit_edge

if.else.i.i.percpu_ref_tryget_live_rcu.exit.i_crit_edge: ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %percpu_ref_tryget_live_rcu.exit.i

if.then94.i.i:                                    ; preds = %if.else.i.i
  %data.i.i = getelementptr inbounds %struct.se_session, ptr %1, i32 0, i32 7, i32 1
  %23 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %data.i.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %24, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !796
  tail call void @llvm.prefetch.p0(ptr %24, i32 1, i32 3, i32 1) #16
  %25 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %24, ptr %24, i32 0, i32 1, ptr elementtype(i32) %24) #16, !srcloc !797
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %25, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.not.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i.i.i, label %if.then94.i.i.atomic_long_inc_not_zero.exit.i.i_crit_edge, label %do.end11.i.i.i.i.i.i.i

if.then94.i.i.atomic_long_inc_not_zero.exit.i.i_crit_edge: ; preds = %if.then94.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %atomic_long_inc_not_zero.exit.i.i

do.end11.i.i.i.i.i.i.i:                           ; preds = %if.then94.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !798
  br label %atomic_long_inc_not_zero.exit.i.i

atomic_long_inc_not_zero.exit.i.i:                ; preds = %do.end11.i.i.i.i.i.i.i, %if.then94.i.i.atomic_long_inc_not_zero.exit.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp ne i32 %asmresult.i.i.i.i.i.i.i, 0
  br label %percpu_ref_tryget_live_rcu.exit.i

percpu_ref_tryget_live_rcu.exit.i:                ; preds = %atomic_long_inc_not_zero.exit.i.i, %if.else.i.i.percpu_ref_tryget_live_rcu.exit.i_crit_edge, %do.end86.i.i
  %ret.0.off0.i.i = phi i1 [ true, %do.end86.i.i ], [ false, %if.else.i.i.percpu_ref_tryget_live_rcu.exit.i_crit_edge ], [ %cmp.i.i.i.i.i.i, %atomic_long_inc_not_zero.exit.i.i ]
  %call.i4.i = tail call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i4.i, label %percpu_ref_tryget_live_rcu.exit.i.percpu_ref_tryget_live.exit_crit_edge, label %land.lhs.true.i7.i

percpu_ref_tryget_live_rcu.exit.i.percpu_ref_tryget_live.exit_crit_edge: ; preds = %percpu_ref_tryget_live_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %percpu_ref_tryget_live.exit

land.lhs.true.i7.i:                               ; preds = %percpu_ref_tryget_live_rcu.exit.i
  %call1.i5.i = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i5.i)
  %tobool.not.i6.i = icmp eq i32 %call1.i5.i, 0
  br i1 %tobool.not.i6.i, label %land.lhs.true.i7.i.percpu_ref_tryget_live.exit_crit_edge, label %land.lhs.true2.i9.i

land.lhs.true.i7.i.percpu_ref_tryget_live.exit_crit_edge: ; preds = %land.lhs.true.i7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %percpu_ref_tryget_live.exit

land.lhs.true2.i9.i:                              ; preds = %land.lhs.true.i7.i
  %.b4.i8.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i8.i, label %land.lhs.true2.i9.i.percpu_ref_tryget_live.exit_crit_edge, label %if.then.i10.i

land.lhs.true2.i9.i.percpu_ref_tryget_live.exit_crit_edge: ; preds = %land.lhs.true2.i9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %percpu_ref_tryget_live.exit

if.then.i10.i:                                    ; preds = %land.lhs.true2.i9.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.290, i32 noundef 724, ptr noundef nonnull @.str.292) #16
  br label %percpu_ref_tryget_live.exit

percpu_ref_tryget_live.exit:                      ; preds = %if.then.i10.i, %land.lhs.true2.i9.i.percpu_ref_tryget_live.exit_crit_edge, %land.lhs.true.i7.i.percpu_ref_tryget_live.exit_crit_edge, %percpu_ref_tryget_live_rcu.exit.i.percpu_ref_tryget_live.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !778
  %26 = tail call i32 @llvm.read_register.i32(metadata !757) #16
  %and.i.i.i.i.i11.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i.i11.i to ptr
  %preempt_count.i.i.i.i12.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i.i12.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i.i12.i, align 4
  %sub.i.i.i.i = add i32 %29, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i12.i, align 4
  tail call void @rcu_read_unlock_strict() #16
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #16
  %ack_kref.not = xor i1 %ack_kref, true
  %brmerge = or i1 %ret.0.off0.i.i, %ack_kref.not
  br i1 %brmerge, label %percpu_ref_tryget_live.exit.if.end8_crit_edge, label %if.then6

percpu_ref_tryget_live.exit.if.end8_crit_edge:    ; preds = %percpu_ref_tryget_live.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

if.then6:                                         ; preds = %percpu_ref_tryget_live.exit
  call void @__sanitizer_cov_trace_pc() #18
  %call7 = tail call i32 @target_put_sess_cmd(ptr noundef %se_cmd)
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %percpu_ref_tryget_live.exit.if.end8_crit_edge
  %spec.select = select i1 %ret.0.off0.i.i, i32 0, i32 -108
  ret i32 %spec.select
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @target_submit_prep(ptr noundef %se_cmd, ptr nocapture noundef readonly %cdb, ptr noundef %sgl, i32 noundef %sgl_count, ptr noundef %sgl_bidi, i32 noundef %sgl_bidi_count, ptr noundef %sgl_prot, i32 noundef %sgl_prot_count, i32 noundef %gfp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @target_cmd_init_cdb(ptr noundef %se_cmd, ptr noundef %cdb, i32 noundef %gfp)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.send_cc_direct_crit_edge

entry.send_cc_direct_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %send_cc_direct

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @transport_lookup_cmd_lun(ptr noundef %se_cmd) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.end4, label %if.end.send_cc_direct_crit_edge

if.end.send_cc_direct_crit_edge:                  ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %send_cc_direct

if.end4:                                          ; preds = %if.end
  %call5 = tail call i32 @target_cmd_parse_cdb(ptr noundef %se_cmd)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %cmp.not = icmp eq i32 %call5, 0
  br i1 %cmp.not, label %if.end7, label %if.end4.generic_fail_crit_edge

if.end4.generic_fail_crit_edge:                   ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %generic_fail

if.end7:                                          ; preds = %if.end4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sgl_prot_count)
  %tobool8.not = icmp eq i32 %sgl_prot_count, 0
  br i1 %tobool8.not, label %if.end7.if.end10_crit_edge, label %if.then9

if.end7.if.end10_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10

if.then9:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  %t_prot_sg = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 55
  %0 = ptrtoint ptr %t_prot_sg to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %sgl_prot, ptr %t_prot_sg, align 4
  %t_prot_nents = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 56
  %1 = ptrtoint ptr %t_prot_nents to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %sgl_prot_count, ptr %t_prot_nents, align 8
  %se_cmd_flags = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 11
  %2 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %se_cmd_flags, align 8
  %or = or i32 %3, 16384
  store i32 %or, ptr %se_cmd_flags, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %if.end7.if.end10_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sgl_count)
  %cmp11.not = icmp eq i32 %sgl_count, 0
  br i1 %cmp11.not, label %if.end10.cleanup_crit_edge, label %do.body

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body:                                          ; preds = %if.end10
  %tobool13.not = icmp eq ptr %sgl, null
  br i1 %tobool13.not, label %do.body18, label %if.end.i, !prof !768

do.body18:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/target/target_core_transport.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1730, 0\0A.popsection", ""() #16, !srcloc !799
  unreachable

if.end.i:                                         ; preds = %do.body
  %se_cmd_flags.i = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 11
  %4 = ptrtoint ptr %se_cmd_flags.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %se_cmd_flags.i, align 8
  %and.i = and i32 %5, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool2.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool2.not.i, label %transport_generic_map_mem_to_cmd.exit.thread, label %transport_generic_map_mem_to_cmd.exit

transport_generic_map_mem_to_cmd.exit.thread:     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %t_data_sg.i = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 39
  %6 = ptrtoint ptr %t_data_sg.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %sgl, ptr %t_data_sg.i, align 4
  %t_data_nents.i = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 41
  %7 = ptrtoint ptr %t_data_nents.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %sgl_count, ptr %t_data_nents.i, align 4
  %t_bidi_data_sg.i = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 44
  %8 = ptrtoint ptr %t_bidi_data_sg.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %sgl_bidi, ptr %t_bidi_data_sg.i, align 8
  %t_bidi_data_nents.i = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 45
  %9 = ptrtoint ptr %t_bidi_data_nents.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %sgl_bidi_count, ptr %t_bidi_data_nents.i, align 4
  %or.i = or i32 %5, 4096
  %10 = ptrtoint ptr %se_cmd_flags.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %or.i, ptr %se_cmd_flags.i, align 8
  br label %cleanup

transport_generic_map_mem_to_cmd.exit:            ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.134) #21
  br label %generic_fail

send_cc_direct:                                   ; preds = %if.end.send_cc_direct_crit_edge, %entry.send_cc_direct_crit_edge
  %rc.0 = phi i32 [ %call, %entry.send_cc_direct_crit_edge ], [ %call1, %if.end.send_cc_direct_crit_edge ]
  %call30 = tail call i32 @transport_send_check_condition_and_sense(ptr noundef %se_cmd, i32 noundef %rc.0, i32 noundef 0)
  %call31 = tail call i32 @target_put_sess_cmd(ptr noundef %se_cmd)
  br label %cleanup

generic_fail:                                     ; preds = %transport_generic_map_mem_to_cmd.exit, %if.end4.generic_fail_crit_edge
  %rc.1 = phi i32 [ %call5, %if.end4.generic_fail_crit_edge ], [ 8, %transport_generic_map_mem_to_cmd.exit ]
  tail call void @transport_generic_request_failure(ptr noundef %se_cmd, i32 noundef %rc.1)
  br label %cleanup

cleanup:                                          ; preds = %generic_fail, %send_cc_direct, %transport_generic_map_mem_to_cmd.exit.thread, %if.end10.cleanup_crit_edge
  %retval.0 = phi i32 [ -5, %send_cc_direct ], [ -5, %generic_fail ], [ 0, %if.end10.cleanup_crit_edge ], [ 0, %transport_generic_map_mem_to_cmd.exit.thread ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @transport_lookup_cmd_lun(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @transport_send_check_condition_and_sense(ptr noundef %cmd, i32 noundef %reason, i32 noundef %from_transport) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %se_cmd_flags = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 11
  %0 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %se_cmd_flags, align 8
  %and = and i32 %1, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end28_crit_edge, label %land.rhs

entry.if.end28_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end28

land.rhs:                                         ; preds = %entry
  %.b68 = load i1, ptr @transport_send_check_condition_and_sense.__already_done, align 1
  br i1 %.b68, label %land.rhs.if.end28_crit_edge, label %if.then, !prof !767

land.rhs.if.end28_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end28

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @transport_send_check_condition_and_sense.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 3476, i32 noundef 9, ptr noundef null) #16
  br label %if.end28

if.end28:                                         ; preds = %if.then, %land.rhs.if.end28_crit_edge, %entry.if.end28_crit_edge
  %t_state_lock = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 35
  %call39 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %t_state_lock) #16
  %2 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %se_cmd_flags, align 8
  %and45 = and i32 %3, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and45)
  %tobool46.not = icmp eq i32 %and45, 0
  br i1 %tobool46.not, label %if.end49, label %if.then47

if.then47:                                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %t_state_lock, i32 noundef %call39) #16
  br label %cleanup

if.end49:                                         ; preds = %if.end28
  %or = or i32 %3, 256
  %4 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or, ptr %se_cmd_flags, align 8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %t_state_lock, i32 noundef %call39) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %from_transport)
  %tobool52.not = icmp eq i32 %from_transport, 0
  br i1 %tobool52.not, label %if.then53, label %if.end49.if.end54_crit_edge

if.end49.if.end54_crit_edge:                      ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end54

if.then53:                                        ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #18
  tail call fastcc void @translate_sense_reason(ptr noundef %cmd, i32 noundef %reason)
  br label %if.end54

if.end54:                                         ; preds = %if.then53, %if.end49.if.end54_crit_edge
  tail call fastcc void @trace_target_cmd_complete(ptr noundef %cmd)
  %se_tfo = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 26
  %5 = ptrtoint ptr %se_tfo to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %se_tfo, align 8
  %queue_status = getelementptr inbounds %struct.target_core_fabric_ops, ptr %6, i32 0, i32 24
  %7 = ptrtoint ptr %queue_status to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %queue_status, align 4
  %call55 = tail call i32 %8(ptr noundef %cmd) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end54, %if.then47
  %retval.0 = phi i32 [ 0, %if.then47 ], [ %call55, %if.end54 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @target_put_sess_cmd(ptr noundef %se_cmd) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %cmd_kref = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 36
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %cmd_kref, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !781
  tail call void @llvm.prefetch.p0(ptr %cmd_kref, i32 1, i32 3, i32 1) #16
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %cmd_kref, ptr %cmd_kref, i32 1, ptr elementtype(i32) %cmd_kref) #16, !srcloc !782
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.kref_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !767

if.end5.i.i.i.i.kref_put.exit_crit_edge:          ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %kref_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @refcount_warn_saturate(ptr noundef %cmd_kref, i32 noundef 3) #16
  br label %kref_put.exit

if.then.i:                                        ; preds = %entry
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !783
  %se_sess1.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 21
  %1 = ptrtoint ptr %se_sess1.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %se_sess1.i, align 4
  %free_compl2.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 24
  %3 = ptrtoint ptr %free_compl2.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %free_compl2.i, align 8
  %abrt_compl3.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 25
  %5 = ptrtoint ptr %abrt_compl3.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %abrt_compl3.i, align 4
  %se_cmd_flags.i.i.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 11
  %7 = ptrtoint ptr %se_cmd_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %se_cmd_flags.i.i.i, align 8
  %and.i.i.i = and i32 %8, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.then.i.if.end.i.i.i_crit_edge

if.then.i.if.end.i.i.i_crit_edge:                 ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %t_prot_sg.i.i.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 55
  %9 = ptrtoint ptr %t_prot_sg.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %t_prot_sg.i.i.i, align 4
  %t_prot_nents.i.i.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 56
  %11 = ptrtoint ptr %t_prot_nents.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %t_prot_nents.i.i.i, align 8
  tail call void @sgl_free_n_order(ptr noundef %10, i32 noundef %12, i32 noundef 0) #16
  %13 = ptrtoint ptr %t_prot_sg.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %t_prot_sg.i.i.i, align 4
  %14 = ptrtoint ptr %t_prot_nents.i.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 0, ptr %t_prot_nents.i.i.i, align 8
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then.i.i.i, %if.then.i.if.end.i.i.i_crit_edge
  %15 = ptrtoint ptr %se_cmd_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %se_cmd_flags.i.i.i, align 8
  %and4.i.i.i = and i32 %16, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i.i.i)
  %tobool5.not.i.i.i = icmp eq i32 %and4.i.i.i, 0
  br i1 %tobool5.not.i.i.i, label %if.end14.i.i.i, label %if.then6.i.i.i

if.then6.i.i.i:                                   ; preds = %if.end.i.i.i
  %and8.i.i.i = and i32 %16, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i.i.i)
  %tobool9.not.i.i.i = icmp eq i32 %and8.i.i.i, 0
  br i1 %tobool9.not.i.i.i, label %if.then6.i.i.i.if.end13.i.i.i_crit_edge, label %if.then10.i.i.i

if.then6.i.i.i.if.end13.i.i.i_crit_edge:          ; preds = %if.then6.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i.i.i

if.then10.i.i.i:                                  ; preds = %if.then6.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %t_bidi_data_sg.i.i.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 44
  %17 = ptrtoint ptr %t_bidi_data_sg.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %t_bidi_data_sg.i.i.i, align 8
  %t_bidi_data_nents.i.i.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 45
  %19 = ptrtoint ptr %t_bidi_data_nents.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %t_bidi_data_nents.i.i.i, align 4
  tail call void @sgl_free_n_order(ptr noundef %18, i32 noundef %20, i32 noundef 0) #16
  %21 = ptrtoint ptr %t_bidi_data_sg.i.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %t_bidi_data_sg.i.i.i, align 8
  %22 = ptrtoint ptr %t_bidi_data_nents.i.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 0, ptr %t_bidi_data_nents.i.i.i, align 4
  br label %if.end13.i.i.i

if.end13.i.i.i:                                   ; preds = %if.then10.i.i.i, %if.then6.i.i.i.if.end13.i.i.i_crit_edge
  %t_data_sg_orig.i.i.i.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 40
  %23 = ptrtoint ptr %t_data_sg_orig.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %t_data_sg_orig.i.i.i.i, align 8
  %tobool.not.i.i.i.i = icmp eq ptr %24, null
  br i1 %tobool.not.i.i.i.i, label %if.end13.i.i.i.transport_free_pages.exit.i.i_crit_edge, label %if.end.i.i.i.i

if.end13.i.i.i.transport_free_pages.exit.i.i_crit_edge: ; preds = %if.end13.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %transport_free_pages.exit.i.i

if.end.i.i.i.i:                                   ; preds = %if.end13.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %t_data_sg.i.i.i.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 39
  %25 = ptrtoint ptr %t_data_sg.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %t_data_sg.i.i.i.i, align 4
  tail call void @kfree(ptr noundef %26) #16
  %27 = ptrtoint ptr %t_data_sg_orig.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %t_data_sg_orig.i.i.i.i, align 8
  %29 = ptrtoint ptr %t_data_sg.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %28, ptr %t_data_sg.i.i.i.i, align 4
  store ptr null, ptr %t_data_sg_orig.i.i.i.i, align 8
  %t_data_nents_orig.i.i.i.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 42
  %30 = ptrtoint ptr %t_data_nents_orig.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %t_data_nents_orig.i.i.i.i, align 8
  %t_data_nents.i.i.i.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 41
  %32 = ptrtoint ptr %t_data_nents.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %t_data_nents.i.i.i.i, align 4
  store i32 0, ptr %t_data_nents_orig.i.i.i.i, align 8
  br label %transport_free_pages.exit.i.i

if.end14.i.i.i:                                   ; preds = %if.end.i.i.i
  %t_data_sg_orig.i41.i.i.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 40
  %33 = ptrtoint ptr %t_data_sg_orig.i41.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %t_data_sg_orig.i41.i.i.i, align 8
  %tobool.not.i42.i.i.i = icmp eq ptr %34, null
  br i1 %tobool.not.i42.i.i.i, label %if.end14.i.i.i.transport_reset_sgl_orig.exit47.i.i.i_crit_edge, label %if.end.i46.i.i.i

if.end14.i.i.i.transport_reset_sgl_orig.exit47.i.i.i_crit_edge: ; preds = %if.end14.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %transport_reset_sgl_orig.exit47.i.i.i

if.end.i46.i.i.i:                                 ; preds = %if.end14.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %t_data_sg.i43.i.i.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 39
  %35 = ptrtoint ptr %t_data_sg.i43.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %t_data_sg.i43.i.i.i, align 4
  tail call void @kfree(ptr noundef %36) #16
  %37 = ptrtoint ptr %t_data_sg_orig.i41.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %t_data_sg_orig.i41.i.i.i, align 8
  %39 = ptrtoint ptr %t_data_sg.i43.i.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %38, ptr %t_data_sg.i43.i.i.i, align 4
  store ptr null, ptr %t_data_sg_orig.i41.i.i.i, align 8
  %t_data_nents_orig.i44.i.i.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 42
  %40 = ptrtoint ptr %t_data_nents_orig.i44.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %t_data_nents_orig.i44.i.i.i, align 8
  %t_data_nents.i45.i.i.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 41
  %42 = ptrtoint ptr %t_data_nents.i45.i.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %t_data_nents.i45.i.i.i, align 4
  store i32 0, ptr %t_data_nents_orig.i44.i.i.i, align 8
  br label %transport_reset_sgl_orig.exit47.i.i.i

transport_reset_sgl_orig.exit47.i.i.i:            ; preds = %if.end.i46.i.i.i, %if.end14.i.i.i.transport_reset_sgl_orig.exit47.i.i.i_crit_edge
  %t_data_sg.i.i.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 39
  %43 = ptrtoint ptr %t_data_sg.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %t_data_sg.i.i.i, align 4
  %t_data_nents.i.i.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 41
  %45 = ptrtoint ptr %t_data_nents.i.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %t_data_nents.i.i.i, align 4
  tail call void @sgl_free_n_order(ptr noundef %44, i32 noundef %46, i32 noundef 0) #16
  %47 = ptrtoint ptr %t_data_sg.i.i.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr null, ptr %t_data_sg.i.i.i, align 4
  %48 = ptrtoint ptr %t_data_nents.i.i.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 0, ptr %t_data_nents.i.i.i, align 4
  %t_bidi_data_sg17.i.i.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 44
  %49 = ptrtoint ptr %t_bidi_data_sg17.i.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %t_bidi_data_sg17.i.i.i, align 8
  %t_bidi_data_nents18.i.i.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 45
  %51 = ptrtoint ptr %t_bidi_data_nents18.i.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %t_bidi_data_nents18.i.i.i, align 4
  tail call void @sgl_free_n_order(ptr noundef %50, i32 noundef %52, i32 noundef 0) #16
  %53 = ptrtoint ptr %t_bidi_data_sg17.i.i.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr null, ptr %t_bidi_data_sg17.i.i.i, align 8
  %54 = ptrtoint ptr %t_bidi_data_nents18.i.i.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 0, ptr %t_bidi_data_nents18.i.i.i, align 4
  br label %transport_free_pages.exit.i.i

transport_free_pages.exit.i.i:                    ; preds = %transport_reset_sgl_orig.exit47.i.i.i, %if.end.i.i.i.i, %if.end13.i.i.i.transport_free_pages.exit.i.i_crit_edge
  %55 = ptrtoint ptr %se_cmd_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %se_cmd_flags.i.i.i, align 8
  %and.i.i = and i32 %56, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %transport_free_pages.exit.i.i.if.end.i.i_crit_edge, label %if.then.i.i

transport_free_pages.exit.i.i.if.end.i.i_crit_edge: ; preds = %transport_free_pages.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i

if.then.i.i:                                      ; preds = %transport_free_pages.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %se_tmr_req.i.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 22
  %57 = ptrtoint ptr %se_tmr_req.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %se_tmr_req.i.i, align 8
  tail call void @core_tmr_release_req(ptr noundef %58) #16
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %transport_free_pages.exit.i.i.if.end.i.i_crit_edge
  %t_task_cdb.i.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 30
  %59 = ptrtoint ptr %t_task_cdb.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %t_task_cdb.i.i, align 8
  %__t_task_cdb.i.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 31
  %cmp.not.i.i = icmp eq ptr %60, %__t_task_cdb.i.i
  br i1 %cmp.not.i.i, label %if.end.i.i.target_free_cmd_mem.exit.i_crit_edge, label %if.then1.i.i

if.end.i.i.target_free_cmd_mem.exit.i_crit_edge:  ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %target_free_cmd_mem.exit.i

if.then1.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @kfree(ptr noundef %60) #16
  br label %target_free_cmd_mem.exit.i

target_free_cmd_mem.exit.i:                       ; preds = %if.then1.i.i, %if.end.i.i.target_free_cmd_mem.exit.i_crit_edge
  %se_tfo.i = getelementptr %struct.se_cmd, ptr %se_cmd, i32 0, i32 26
  %61 = ptrtoint ptr %se_tfo.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %se_tfo.i, align 8
  %release_cmd.i = getelementptr inbounds %struct.target_core_fabric_ops, ptr %62, i32 0, i32 16
  %63 = ptrtoint ptr %release_cmd.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %release_cmd.i, align 4
  tail call void %64(ptr noundef %se_cmd) #16
  %tobool.not.i = icmp eq ptr %4, null
  br i1 %tobool.not.i, label %target_free_cmd_mem.exit.i.if.end.i_crit_edge, label %if.then.i1

target_free_cmd_mem.exit.i.if.end.i_crit_edge:    ; preds = %target_free_cmd_mem.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.then.i1:                                       ; preds = %target_free_cmd_mem.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @complete(ptr noundef nonnull %4) #16
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i1, %target_free_cmd_mem.exit.i.if.end.i_crit_edge
  %tobool4.not.i = icmp eq ptr %6, null
  br i1 %tobool4.not.i, label %if.end.i.target_release_cmd_kref.exit_crit_edge, label %if.then5.i

if.end.i.target_release_cmd_kref.exit_crit_edge:  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %target_release_cmd_kref.exit

if.then5.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @complete(ptr noundef nonnull %6) #16
  br label %target_release_cmd_kref.exit

target_release_cmd_kref.exit:                     ; preds = %if.then5.i, %if.end.i.target_release_cmd_kref.exit_crit_edge
  %cmd_count.i = getelementptr inbounds %struct.se_session, ptr %2, i32 0, i32 7
  tail call fastcc void @percpu_ref_put(ptr noundef %cmd_count.i) #16
  br label %kref_put.exit

kref_put.exit:                                    ; preds = %target_release_cmd_kref.exit, %if.then10.i.i.i.i, %if.end5.i.i.i.i.kref_put.exit_crit_edge
  %retval.0.i = phi i32 [ 1, %target_release_cmd_kref.exit ], [ 0, %if.end5.i.i.i.i.kref_put.exit_crit_edge ], [ 0, %if.then10.i.i.i.i ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @target_submit(ptr noundef %se_cmd) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %t_data_sg = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 39
  %0 = ptrtoint ptr %t_data_sg to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %t_data_sg, align 4
  tail call void @__might_sleep(ptr noundef nonnull @.str.3, i32 noundef 1763) #16
  %t_data_nents = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 41
  %2 = ptrtoint ptr %t_data_nents to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %t_data_nents, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.not = icmp eq i32 %3, 0
  br i1 %cmp.not, label %entry.if.end29_crit_edge, label %do.body4

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end29

do.body4:                                         ; preds = %entry
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %do.body9, label %do.end16, !prof !768

do.body9:                                         ; preds = %do.body4
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/target/target_core_transport.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1766, 0\0A.popsection", ""() #16, !srcloc !800
  unreachable

do.end16:                                         ; preds = %do.body4
  %se_cmd_flags = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 11
  %4 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %se_cmd_flags, align 8
  %and = and i32 %5, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool17.not = icmp eq i32 %and, 0
  br i1 %tobool17.not, label %land.lhs.true, label %do.end16.if.end29_crit_edge

do.end16.if.end29_crit_edge:                      ; preds = %do.end16
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end29

land.lhs.true:                                    ; preds = %do.end16
  %data_direction = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 6
  %6 = ptrtoint ptr %data_direction to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %data_direction, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %7)
  %cmp18 = icmp eq i32 %7, 2
  br i1 %cmp18, label %if.then21.critedge, label %land.lhs.true.if.end29_crit_edge

land.lhs.true.if.end29_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end29

if.then21.critedge:                               ; preds = %land.lhs.true
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %1, align 4
  %and.i.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %sg_page.exit, label %do.body2.i, !prof !767

do.body2.i:                                       ; preds = %if.then21.critedge
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/scatterlist.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 144, 0\0A.popsection", ""() #16, !srcloc !801
  unreachable

sg_page.exit:                                     ; preds = %if.then21.critedge
  %and.i = and i32 %9, -4
  %10 = inttoptr i32 %and.i to ptr
  tail call void @__might_sleep(ptr noundef nonnull @.str.305, i32 noundef 44) #16
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %10, align 4
  %shr.i.i = lshr i32 %12, 30
  %13 = zext i32 %shr.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %13, ptr @__sancov_gen_cov_switch_values.370)
  switch i32 %shr.i.i, label %sg_page.exit.if.then.i_crit_edge [
    i32 2, label %sg_page.exit.if.else.i_crit_edge
    i32 3, label %is_highmem_idx.exit.i
  ]

sg_page.exit.if.else.i_crit_edge:                 ; preds = %sg_page.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

sg_page.exit.if.then.i_crit_edge:                 ; preds = %sg_page.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i

is_highmem_idx.exit.i:                            ; preds = %sg_page.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @movable_zone to i32))
  %14 = load i32, ptr @movable_zone, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %14)
  %cmp2.i.not.i = icmp eq i32 %14, 2
  br i1 %cmp2.i.not.i, label %is_highmem_idx.exit.i.if.else.i_crit_edge, label %is_highmem_idx.exit.i.if.then.i_crit_edge

is_highmem_idx.exit.i.if.then.i_crit_edge:        ; preds = %is_highmem_idx.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i

is_highmem_idx.exit.i.if.else.i_crit_edge:        ; preds = %is_highmem_idx.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

if.then.i:                                        ; preds = %is_highmem_idx.exit.i.if.then.i_crit_edge, %sg_page.exit.if.then.i_crit_edge
  %call5.i = tail call ptr @page_address(ptr noundef %10) #16
  br label %kmap.exit

if.else.i:                                        ; preds = %is_highmem_idx.exit.i.if.else.i_crit_edge, %sg_page.exit.if.else.i_crit_edge
  %call6.i = tail call ptr @kmap_high(ptr noundef %10) #16
  br label %kmap.exit

kmap.exit:                                        ; preds = %if.else.i, %if.then.i
  %addr.0.i = phi ptr [ %call6.i, %if.else.i ], [ %call5.i, %if.then.i ]
  %offset = getelementptr inbounds %struct.scatterlist, ptr %1, i32 0, i32 1
  %15 = ptrtoint ptr %offset to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %offset, align 4
  %add.ptr = getelementptr i8, ptr %addr.0.i, i32 %16
  %tobool24.not = icmp eq ptr %add.ptr, null
  br i1 %tobool24.not, label %kmap.exit.if.end29_crit_edge, label %if.then25

kmap.exit.if.end29_crit_edge:                     ; preds = %kmap.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end29

if.then25:                                        ; preds = %kmap.exit
  %length = getelementptr inbounds %struct.scatterlist, ptr %1, i32 0, i32 2
  %17 = ptrtoint ptr %length to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %length, align 4
  %19 = call ptr @memset(ptr %add.ptr, i32 0, i32 %18)
  %20 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %1, align 4
  %and.i.i43 = and i32 %21, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i43)
  %tobool.i.not.i44 = icmp eq i32 %and.i.i43, 0
  br i1 %tobool.i.not.i44, label %sg_page.exit47, label %do.body2.i45, !prof !767

do.body2.i45:                                     ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/scatterlist.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 144, 0\0A.popsection", ""() #16, !srcloc !801
  unreachable

sg_page.exit47:                                   ; preds = %if.then25
  %and.i46 = and i32 %21, -4
  %22 = inttoptr i32 %and.i46 to ptr
  tail call void @__might_sleep(ptr noundef nonnull @.str.305, i32 noundef 55) #16
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %22, align 4
  %shr.i.i48 = lshr i32 %24, 30
  %25 = zext i32 %shr.i.i48 to i64
  call void @__sanitizer_cov_trace_switch(i64 %25, ptr @__sancov_gen_cov_switch_values.371)
  switch i32 %shr.i.i48, label %sg_page.exit47.if.end29_crit_edge [
    i32 2, label %sg_page.exit47.if.end.i_crit_edge
    i32 3, label %is_highmem_idx.exit.i50
  ]

sg_page.exit47.if.end.i_crit_edge:                ; preds = %sg_page.exit47
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

sg_page.exit47.if.end29_crit_edge:                ; preds = %sg_page.exit47
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end29

is_highmem_idx.exit.i50:                          ; preds = %sg_page.exit47
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @movable_zone to i32))
  %26 = load i32, ptr @movable_zone, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %26)
  %cmp2.i.not.i49 = icmp eq i32 %26, 2
  br i1 %cmp2.i.not.i49, label %is_highmem_idx.exit.i50.if.end.i_crit_edge, label %is_highmem_idx.exit.i50.if.end29_crit_edge

is_highmem_idx.exit.i50.if.end29_crit_edge:       ; preds = %is_highmem_idx.exit.i50
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end29

is_highmem_idx.exit.i50.if.end.i_crit_edge:       ; preds = %is_highmem_idx.exit.i50
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.end.i:                                         ; preds = %is_highmem_idx.exit.i50.if.end.i_crit_edge, %sg_page.exit47.if.end.i_crit_edge
  tail call void @kunmap_high(ptr noundef %22) #16
  br label %if.end29

if.end29:                                         ; preds = %if.end.i, %is_highmem_idx.exit.i50.if.end29_crit_edge, %sg_page.exit47.if.end29_crit_edge, %kmap.exit.if.end29_crit_edge, %land.lhs.true.if.end29_crit_edge, %do.end16.if.end29_crit_edge, %entry.if.end29_crit_edge
  %call30 = tail call i32 @core_alua_check_nonop_delay(ptr noundef %se_cmd) #16
  tail call void @__might_sleep(ptr noundef nonnull @.str.3, i32 noundef 1556) #16
  %se_lun.i = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 20
  %27 = ptrtoint ptr %se_lun.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %se_lun.i, align 8
  %tobool.not.i = icmp eq ptr %28, null
  br i1 %tobool.not.i, label %if.then.i51, label %if.end.i52

if.then.i51:                                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @dump_stack() #21
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.132) #21
  br label %transport_handle_cdb_direct.exit

if.end.i52:                                       ; preds = %if.end29
  %t_state.i = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 10
  %29 = ptrtoint ptr %t_state.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 1, ptr %t_state.i, align 4
  %transport_state.i = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 34
  %30 = ptrtoint ptr %transport_state.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %transport_state.i, align 4
  %or.i = or i32 %31, 2
  store i32 %or.i, ptr %transport_state.i, align 4
  %call7.i = tail call i32 @transport_generic_new_cmd(ptr noundef %se_cmd) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %if.end.i52.transport_handle_cdb_direct.exit_crit_edge, label %if.then9.i

if.end.i52.transport_handle_cdb_direct.exit_crit_edge: ; preds = %if.end.i52
  call void @__sanitizer_cov_trace_pc() #18
  br label %transport_handle_cdb_direct.exit

if.then9.i:                                       ; preds = %if.end.i52
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @transport_generic_request_failure(ptr noundef %se_cmd, i32 noundef %call7.i) #16
  br label %transport_handle_cdb_direct.exit

transport_handle_cdb_direct.exit:                 ; preds = %if.then9.i, %if.end.i52.transport_handle_cdb_direct.exit_crit_edge, %if.then.i51
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @core_alua_check_nonop_delay(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @target_submit_cmd(ptr noundef %se_cmd, ptr noundef %se_sess, ptr nocapture noundef readonly %cdb, ptr noundef %sense, i64 noundef %unpacked_lun, i32 noundef %data_length, i32 noundef %task_attr, i32 noundef %data_dir, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %se_tpg1.i = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 5
  %0 = ptrtoint ptr %se_tpg1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %se_tpg1.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %do.body5.i, label %do.body11.i, !prof !768

do.body5.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/target/target_core_transport.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1642, 0\0A.popsection", ""() #16, !srcloc !793
  unreachable

do.body11.i:                                      ; preds = %entry
  %se_tfo.i = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 26
  %2 = ptrtoint ptr %se_tfo.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %se_tfo.i, align 8
  %tobool12.not.i = icmp eq ptr %3, null
  br i1 %tobool12.not.i, label %lor.rhs.i, label %do.body11.i.do.body22.i_crit_edge, !prof !767

do.body11.i.do.body22.i_crit_edge:                ; preds = %do.body11.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body22.i

lor.rhs.i:                                        ; preds = %do.body11.i
  %se_sess13.i = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 21
  %4 = ptrtoint ptr %se_sess13.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %se_sess13.i, align 4
  %tobool14.not.i = icmp eq ptr %5, null
  br i1 %tobool14.not.i, label %do.end30.i, label %lor.rhs.i.do.body22.i_crit_edge, !prof !767

lor.rhs.i.do.body22.i_crit_edge:                  ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body22.i

do.body22.i:                                      ; preds = %lor.rhs.i.do.body22.i_crit_edge, %do.body11.i.do.body22.i_crit_edge
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/target/target_core_transport.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1643, 0\0A.popsection", ""() #16, !srcloc !794
  unreachable

do.end30.i:                                       ; preds = %lor.rhs.i
  %and.i = and i32 %flags, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool31.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool31.not.i, label %do.end30.i.if.end33.i_crit_edge, label %if.then32.i

do.end30.i.if.end33.i_crit_edge:                  ; preds = %do.end30.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end33.i

if.then32.i:                                      ; preds = %do.end30.i
  call void @__sanitizer_cov_trace_pc() #18
  %se_cmd_flags.i = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 11
  %6 = ptrtoint ptr %se_cmd_flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %se_cmd_flags.i, align 8
  %or.i = or i32 %7, 65536
  store i32 %or.i, ptr %se_cmd_flags.i, align 8
  br label %if.end33.i

if.end33.i:                                       ; preds = %if.then32.i, %do.end30.i.if.end33.i_crit_edge
  %and34.i = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34.i)
  %tobool35.not.i = icmp eq i32 %and34.i, 0
  br i1 %tobool35.not.i, label %if.end33.i.if.end39.i_crit_edge, label %if.then36.i

if.end33.i.if.end39.i_crit_edge:                  ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end39.i

if.then36.i:                                      ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #18
  %se_cmd_flags37.i = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 11
  %8 = ptrtoint ptr %se_cmd_flags37.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %se_cmd_flags37.i, align 8
  %or38.i = or i32 %9, 128
  store i32 %or38.i, ptr %se_cmd_flags37.i, align 8
  br label %if.end39.i

if.end39.i:                                       ; preds = %if.then36.i, %if.end33.i.if.end39.i_crit_edge
  %and40.i = and i32 %flags, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and40.i)
  %tobool41.not.i = icmp eq i32 %and40.i, 0
  br i1 %tobool41.not.i, label %if.end39.i.target_init_cmd.exit_crit_edge, label %if.then42.i

if.end39.i.target_init_cmd.exit_crit_edge:        ; preds = %if.end39.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %target_init_cmd.exit

if.then42.i:                                      ; preds = %if.end39.i
  call void @__sanitizer_cov_trace_pc() #18
  %unknown_data_length.i = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 3
  %10 = ptrtoint ptr %unknown_data_length.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %bf.load.i = load i8, ptr %unknown_data_length.i, align 8
  %bf.set.i = or i8 %bf.load.i, -128
  store i8 %bf.set.i, ptr %unknown_data_length.i, align 8
  br label %target_init_cmd.exit

target_init_cmd.exit:                             ; preds = %if.then42.i, %if.end39.i.target_init_cmd.exit_crit_edge
  %se_tpg_tfo.i = getelementptr inbounds %struct.se_portal_group, ptr %1, i32 0, i32 10
  %11 = ptrtoint ptr %se_tpg_tfo.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %se_tpg_tfo.i, align 4
  tail call void @__target_init_cmd(ptr noundef %se_cmd, ptr noundef %12, ptr noundef %se_sess, i32 noundef %data_length, i32 noundef %data_dir, i32 noundef %task_attr, ptr noundef %sense, i64 noundef %unpacked_lun) #16
  %and44.i = and i32 %flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and44.i)
  %tobool45.i = icmp ne i32 %and44.i, 0
  %call.i = tail call i32 @target_get_sess_cmd(ptr noundef %se_cmd, i1 noundef zeroext %tobool45.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end22, label %do.end, !prof !767

do.end:                                           ; preds = %target_init_cmd.exit
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1831, i32 noundef 9, ptr noundef nonnull @.str.136) #16
  br label %cleanup

if.end22:                                         ; preds = %target_init_cmd.exit
  %call.i31 = tail call i32 @target_cmd_init_cdb(ptr noundef %se_cmd, ptr noundef %cdb, i32 noundef 3264) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i31)
  %tobool.not.i32 = icmp eq i32 %call.i31, 0
  br i1 %tobool.not.i32, label %if.end.i, label %if.end22.send_cc_direct.i_crit_edge

if.end22.send_cc_direct.i_crit_edge:              ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  br label %send_cc_direct.i

if.end.i:                                         ; preds = %if.end22
  %call1.i = tail call i32 @transport_lookup_cmd_lun(ptr noundef %se_cmd) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %if.end4.i, label %if.end.i.send_cc_direct.i_crit_edge

if.end.i.send_cc_direct.i_crit_edge:              ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %send_cc_direct.i

if.end4.i:                                        ; preds = %if.end.i
  %call5.i = tail call i32 @target_cmd_parse_cdb(ptr noundef %se_cmd) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %cmp.not.i = icmp eq i32 %call5.i, 0
  br i1 %cmp.not.i, label %if.end26, label %generic_fail.i

send_cc_direct.i:                                 ; preds = %if.end.i.send_cc_direct.i_crit_edge, %if.end22.send_cc_direct.i_crit_edge
  %rc.0.i = phi i32 [ %call.i31, %if.end22.send_cc_direct.i_crit_edge ], [ %call1.i, %if.end.i.send_cc_direct.i_crit_edge ]
  %call30.i = tail call i32 @transport_send_check_condition_and_sense(ptr noundef %se_cmd, i32 noundef %rc.0.i, i32 noundef 0) #16
  %call31.i = tail call i32 @target_put_sess_cmd(ptr noundef %se_cmd) #16
  br label %cleanup

generic_fail.i:                                   ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @transport_generic_request_failure(ptr noundef %se_cmd, i32 noundef %call5.i) #16
  br label %cleanup

if.end26:                                         ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @target_submit(ptr noundef %se_cmd)
  br label %cleanup

cleanup:                                          ; preds = %if.end26, %generic_fail.i, %send_cc_direct.i, %do.end
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @target_queued_submit_work(ptr noundef %work) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -4
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %add.ptr, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !802
  tail call void @llvm.prefetch.p0(ptr %add.ptr, i32 1, i32 3, i32 1) #16
  %0 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 0, ptr %add.ptr) #16, !srcloc !803
  %asmresult.i.i = extractvalue { i32, i32 } %0, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !804
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %tobool.not = icmp eq i32 %asmresult.i.i, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = inttoptr i32 %asmresult.i.i to ptr
  %call2 = tail call ptr @llist_reverse_order(ptr noundef nonnull %1) #16
  %se_cmd.032 = getelementptr i8, ptr %call2, i32 -116
  %cmp.not33 = icmp eq ptr %se_cmd.032, inttoptr (i32 -116 to ptr)
  br i1 %cmp.not33, label %if.end.cleanup_crit_edge, label %if.end.land.rhs_crit_edge

if.end.land.rhs_crit_edge:                        ; preds = %if.end
  br label %land.rhs

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.rhs:                                         ; preds = %if.end13.land.rhs_crit_edge, %if.end.land.rhs_crit_edge
  %se_cmd.037 = phi ptr [ %se_cmd.0, %if.end13.land.rhs_crit_edge ], [ %se_cmd.032, %if.end.land.rhs_crit_edge ]
  %call2.pn36 = phi ptr [ %3, %if.end13.land.rhs_crit_edge ], [ %call2, %if.end.land.rhs_crit_edge ]
  %se_plug.035 = phi ptr [ %se_plug.1, %if.end13.land.rhs_crit_edge ], [ null, %if.end.land.rhs_crit_edge ]
  %se_dev.034 = phi ptr [ %se_dev.1, %if.end13.land.rhs_crit_edge ], [ null, %if.end.land.rhs_crit_edge ]
  %2 = ptrtoint ptr %call2.pn36 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %call2.pn36, align 4
  %tobool9.not = icmp eq ptr %se_dev.034, null
  br i1 %tobool9.not, label %if.then10, label %land.rhs.if.end13_crit_edge

land.rhs.if.end13_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

if.then10:                                        ; preds = %land.rhs
  %se_dev11 = getelementptr i8, ptr %call2.pn36, i32 -16
  %4 = ptrtoint ptr %se_dev11 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %se_dev11, align 4
  %transport.i = getelementptr inbounds %struct.se_device, ptr %5, i32 0, i32 46
  %6 = ptrtoint ptr %transport.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %transport.i, align 8
  %plug_device.i = getelementptr inbounds %struct.target_backend_ops, ptr %7, i32 0, i32 13
  %8 = ptrtoint ptr %plug_device.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %plug_device.i, align 4
  %tobool.not.i = icmp eq ptr %9, null
  br i1 %tobool.not.i, label %if.then10.if.end13_crit_edge, label %if.end.i

if.then10.if.end13_crit_edge:                     ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

if.end.i:                                         ; preds = %if.then10
  %call.i = tail call ptr %9(ptr noundef %5) #16
  %tobool3.not.i = icmp eq ptr %call.i, null
  br i1 %tobool3.not.i, label %if.end.i.if.end13_crit_edge, label %if.end5.i

if.end.i.if.end13_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

if.end5.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %10 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %5, ptr %call.i, align 4
  %dev_group.i = getelementptr inbounds %struct.se_device, ptr %5, i32 0, i32 41
  %call.i.i29 = tail call ptr @config_item_get(ptr noundef nonnull %dev_group.i) #16
  br label %if.end13

if.end13:                                         ; preds = %if.end5.i, %if.end.i.if.end13_crit_edge, %if.then10.if.end13_crit_edge, %land.rhs.if.end13_crit_edge
  %se_dev.1 = phi ptr [ %se_dev.034, %land.rhs.if.end13_crit_edge ], [ %5, %if.then10.if.end13_crit_edge ], [ %5, %if.end.i.if.end13_crit_edge ], [ %5, %if.end5.i ]
  %se_plug.1 = phi ptr [ %se_plug.035, %land.rhs.if.end13_crit_edge ], [ null, %if.then10.if.end13_crit_edge ], [ null, %if.end.i.if.end13_crit_edge ], [ %call.i, %if.end5.i ]
  tail call void @target_submit(ptr noundef %se_cmd.037)
  %se_cmd.0 = getelementptr i8, ptr %3, i32 -116
  %cmp.not = icmp eq ptr %se_cmd.0, inttoptr (i32 -116 to ptr)
  br i1 %cmp.not, label %for.end, label %if.end13.land.rhs_crit_edge

if.end13.land.rhs_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.rhs

for.end:                                          ; preds = %if.end13
  %tobool14.not = icmp eq ptr %se_plug.1, null
  br i1 %tobool14.not, label %for.end.cleanup_crit_edge, label %if.then15

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then15:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  %11 = ptrtoint ptr %se_plug.1 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %se_plug.1, align 4
  %transport.i30 = getelementptr inbounds %struct.se_device, ptr %12, i32 0, i32 46
  %13 = ptrtoint ptr %transport.i30 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %transport.i30, align 8
  %unplug_device.i = getelementptr inbounds %struct.target_backend_ops, ptr %14, i32 0, i32 14
  %15 = ptrtoint ptr %unplug_device.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %unplug_device.i, align 4
  tail call void %16(ptr noundef nonnull %se_plug.1) #16
  %dev_group.i31 = getelementptr inbounds %struct.se_device, ptr %12, i32 0, i32 41
  tail call void @config_item_put(ptr noundef %dev_group.i31) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then15, %for.end.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @llist_reverse_order(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @target_queue_submission(ptr noundef %se_cmd) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %se_dev1 = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 19
  %0 = ptrtoint ptr %se_dev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %se_dev1, align 4
  %cpuid = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 59
  %2 = ptrtoint ptr %cpuid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpuid, align 8
  %queues = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 52
  %4 = ptrtoint ptr %queues to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %queues, align 4
  %sq2 = getelementptr %struct.se_device_queue, ptr %5, i32 %3, i32 2
  %se_cmd_list = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 23
  %call.i = tail call zeroext i1 @llist_add_batch(ptr noundef %se_cmd_list, ptr noundef %se_cmd_list, ptr noundef %sq2) #16
  %6 = load ptr, ptr @target_submission_wq, align 4
  %work = getelementptr %struct.se_device_queue, ptr %5, i32 %3, i32 2, i32 1
  %call3 = tail call zeroext i1 @queue_work_on(i32 noundef %3, ptr noundef %6, ptr noundef %work) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @target_submit_tmr(ptr noundef %se_cmd, ptr noundef %se_sess, ptr noundef %sense, i64 noundef %unpacked_lun, ptr noundef %fabric_tmr_ptr, i8 noundef zeroext %tm_type, i32 noundef %gfp, i64 noundef %tag, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %se_tpg1 = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 5
  %0 = ptrtoint ptr %se_tpg1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %se_tpg1, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %do.body5, label %do.end10, !prof !768

do.body5:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/target/target_core_transport.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1953, 0\0A.popsection", ""() #16, !srcloc !805
  unreachable

do.end10:                                         ; preds = %entry
  %se_tpg_tfo = getelementptr inbounds %struct.se_portal_group, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %se_tpg_tfo to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %se_tpg_tfo, align 4
  tail call void @__target_init_cmd(ptr noundef %se_cmd, ptr noundef %3, ptr noundef %se_sess, i32 noundef 0, i32 noundef 3, i32 noundef 32, ptr noundef %sense, i64 noundef %unpacked_lun)
  %call = tail call i32 @core_tmr_alloc_req(ptr noundef %se_cmd, ptr noundef %fabric_tmr_ptr, i8 noundef zeroext %tm_type, i32 noundef %gfp) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %do.end10.cleanup_crit_edge, label %if.end12

do.end10.cleanup_crit_edge:                       ; preds = %do.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end12:                                         ; preds = %do.end10
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %tm_type)
  %cmp13 = icmp eq i8 %tm_type, 1
  br i1 %cmp13, label %if.then15, label %if.end12.if.end16_crit_edge

if.end12.if.end16_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end16

if.then15:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  %se_tmr_req = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 22
  %4 = ptrtoint ptr %se_tmr_req to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %se_tmr_req, align 8
  %ref_task_tag = getelementptr inbounds %struct.se_tmr_req, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %ref_task_tag to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 %tag, ptr %ref_task_tag, align 8
  br label %if.end16

if.end16:                                         ; preds = %if.then15, %if.end12.if.end16_crit_edge
  %and = and i32 %flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool17 = icmp ne i32 %and, 0
  %call18 = tail call i32 @target_get_sess_cmd(ptr noundef %se_cmd, i1 noundef zeroext %tobool17)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %if.end22, label %if.then20

if.then20:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  %se_tmr_req21 = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 22
  %7 = ptrtoint ptr %se_tmr_req21 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %se_tmr_req21, align 8
  tail call void @core_tmr_release_req(ptr noundef %8) #16
  br label %cleanup

if.end22:                                         ; preds = %if.end16
  %call23 = tail call i32 @transport_lookup_tmr_lun(ptr noundef %se_cmd) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %tobool24.not = icmp eq i32 %call23, 0
  br i1 %tobool24.not, label %if.end26, label %do.body28

if.end26:                                         ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  %call27 = tail call i32 @transport_generic_handle_tmr(ptr noundef %se_cmd)
  br label %cleanup

do.body28:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  %work = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 38
  tail call void @__init_work(ptr noundef %work, i32 noundef 0) #16
  %9 = ptrtoint ptr %work to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -64, ptr %work, align 8
  %lockdep_map = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 38, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.137, ptr noundef nonnull @target_submit_tmr.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #16
  %entry32 = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 38, i32 1
  %10 = ptrtoint ptr %entry32 to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %entry32, ptr %entry32, align 4
  %prev.i = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 38, i32 1, i32 1
  %11 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %entry32, ptr %prev.i, align 4
  %func = getelementptr inbounds %struct.se_cmd, ptr %se_cmd, i32 0, i32 38, i32 2
  %12 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr @target_complete_tmr_failure, ptr %func, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %13 = load ptr, ptr @system_wq, align 4
  %call.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %13, ptr noundef %work) #16
  br label %cleanup

cleanup:                                          ; preds = %do.body28, %if.end26, %if.then20, %do.end10.cleanup_crit_edge
  %retval.0 = phi i32 [ %call18, %if.then20 ], [ 0, %do.body28 ], [ 0, %if.end26 ], [ -12, %do.end10.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @core_tmr_alloc_req(ptr noundef, ptr noundef, i8 noundef zeroext, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @core_tmr_release_req(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @transport_lookup_tmr_lun(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @transport_generic_handle_tmr(ptr noundef %cmd) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %t_state_lock = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 35
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %t_state_lock) #16
  %transport_state = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 34
  %0 = ptrtoint ptr %transport_state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %transport_state, align 4
  %and = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then8.critedge

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %t_state = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 10
  %2 = ptrtoint ptr %t_state to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 11, ptr %t_state, align 4
  %or = or i32 %1, 2
  %3 = ptrtoint ptr %transport_state to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or, ptr %transport_state, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %t_state_lock, i32 noundef %call2) #16
  %work = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38
  tail call void @__init_work(ptr noundef %work, i32 noundef 0) #16
  %4 = ptrtoint ptr %work to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -64, ptr %work, align 8
  %lockdep_map = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.65, ptr noundef nonnull @transport_generic_handle_tmr.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #16
  %entry25 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38, i32 1
  %5 = ptrtoint ptr %entry25 to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %entry25, ptr %entry25, align 4
  %prev.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38, i32 1, i32 1
  %6 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %entry25, ptr %prev.i, align 4
  %func = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 38, i32 2
  %7 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr @target_tmr_work, ptr %func, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %8 = load ptr, ptr @system_wq, align 4
  %call.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %8, ptr noundef %work) #16
  br label %cleanup

if.then8.critedge:                                ; preds = %entry
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %t_state_lock, i32 noundef %call2) #16
  %call9 = tail call i32 @___ratelimit(ptr noundef nonnull @transport_generic_handle_tmr._rs, ptr noundef nonnull @__func__.transport_generic_handle_tmr) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.then8.critedge.if.end19_crit_edge, label %do.end14

if.then8.critedge.if.end19_crit_edge:             ; preds = %if.then8.critedge
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

do.end14:                                         ; preds = %if.then8.critedge
  call void @__sanitizer_cov_trace_pc() #18
  %se_tmr_req = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 22
  %9 = ptrtoint ptr %se_tmr_req to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %se_tmr_req, align 8
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %10, align 8
  %conv16 = zext i8 %12 to i32
  %ref_task_tag = getelementptr inbounds %struct.se_tmr_req, ptr %10, i32 0, i32 3
  %13 = ptrtoint ptr %ref_task_tag to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %ref_task_tag, align 8
  %tag = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 4
  %15 = ptrtoint ptr %tag to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %tag, align 8
  %call18 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.155, i32 noundef %conv16, i64 noundef %14, i64 noundef %16) #21
  br label %if.end19

if.end19:                                         ; preds = %do.end14, %if.then8.critedge.if.end19_crit_edge
  tail call fastcc void @target_handle_abort(ptr noundef %cmd)
  br label %cleanup

cleanup:                                          ; preds = %if.end19, %if.else
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @target_complete_tmr_failure(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -304
  %se_tmr_req = getelementptr i8, ptr %work, i32 -192
  %0 = ptrtoint ptr %se_tmr_req to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %se_tmr_req, align 8
  %response = getelementptr inbounds %struct.se_tmr_req, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %response to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 3, ptr %response, align 1
  %se_tfo = getelementptr i8, ptr %work, i32 -176
  %3 = ptrtoint ptr %se_tfo to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %se_tfo, align 8
  %queue_tm_rsp = getelementptr inbounds %struct.target_core_fabric_ops, ptr %4, i32 0, i32 25
  %5 = ptrtoint ptr %queue_tm_rsp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %queue_tm_rsp, align 4
  tail call void %6(ptr noundef %add.ptr) #16
  tail call fastcc void @transport_lun_remove_cmd(ptr noundef %add.ptr)
  tail call fastcc void @transport_cmd_check_stop_to_fabric(ptr noundef %add.ptr)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @target_show_cmd(ptr noundef %pfx, ptr noundef %cmd) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %transport_state = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 34
  %0 = ptrtoint ptr %transport_state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %transport_state, align 4
  %and.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.thread.i, label %if.end.i

if.end.i:                                         ; preds = %entry
  %call1.i.i = tail call noalias ptr @kstrdup(ptr noundef nonnull @.str.320, i32 noundef 2592) #16
  tail call void @kfree(ptr noundef null) #16
  %and1.i = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool2.not.i = icmp eq i32 %and1.i, 0
  br i1 %tobool2.not.i, label %if.end.i.if.end4.i_crit_edge, label %if.then3.i

if.end.i.if.end4.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4.i

if.end.thread.i:                                  ; preds = %entry
  %and168.i = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and168.i)
  %tobool2.not69.i = icmp eq i32 %and168.i, 0
  br i1 %tobool2.not69.i, label %if.end4.thread.i, label %if.end.thread.i.cond.false.i30.i_crit_edge

if.end.thread.i.cond.false.i30.i_crit_edge:       ; preds = %if.end.thread.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.false.i30.i

if.then3.i:                                       ; preds = %if.end.i
  %tobool.not.i26.i = icmp eq ptr %call1.i.i, null
  br i1 %tobool.not.i26.i, label %if.then3.i.cond.false.i30.i_crit_edge, label %cond.true.i28.i

if.then3.i.cond.false.i30.i_crit_edge:            ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.false.i30.i

cond.true.i28.i:                                  ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #18
  %call.i27.i = tail call noalias ptr (i32, ptr, ...) @kasprintf(i32 noundef 2592, ptr noundef nonnull @.str.326, ptr noundef nonnull %call1.i.i, ptr noundef nonnull @.str.321) #16
  br label %target_append_str.exit32.i

cond.false.i30.i:                                 ; preds = %if.then3.i.cond.false.i30.i_crit_edge, %if.end.thread.i.cond.false.i30.i_crit_edge
  %call1.i29.i = tail call noalias ptr @kstrdup(ptr noundef nonnull @.str.321, i32 noundef 2592) #16
  br label %target_append_str.exit32.i

target_append_str.exit32.i:                       ; preds = %cond.false.i30.i, %cond.true.i28.i
  %str.071.i = phi ptr [ %call1.i.i, %cond.true.i28.i ], [ null, %cond.false.i30.i ]
  %cond.i31.i = phi ptr [ %call.i27.i, %cond.true.i28.i ], [ %call1.i29.i, %cond.false.i30.i ]
  tail call void @kfree(ptr noundef %str.071.i) #16
  br label %if.end4.i

if.end4.i:                                        ; preds = %target_append_str.exit32.i, %if.end.i.if.end4.i_crit_edge
  %str.1.i = phi ptr [ %call1.i.i, %if.end.i.if.end4.i_crit_edge ], [ %cond.i31.i, %target_append_str.exit32.i ]
  %and5.i = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i)
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  br i1 %tobool6.not.i, label %if.end4.i.if.end8.i_crit_edge, label %if.then7.i

if.end4.i.if.end8.i_crit_edge:                    ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8.i

if.end4.thread.i:                                 ; preds = %if.end.thread.i
  %and576.i = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and576.i)
  %tobool6.not77.i = icmp eq i32 %and576.i, 0
  br i1 %tobool6.not77.i, label %if.end8.thread.i, label %if.end4.thread.i.cond.false.i37.i_crit_edge

if.end4.thread.i.cond.false.i37.i_crit_edge:      ; preds = %if.end4.thread.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.false.i37.i

if.then7.i:                                       ; preds = %if.end4.i
  %tobool.not.i33.i = icmp eq ptr %str.1.i, null
  br i1 %tobool.not.i33.i, label %if.then7.i.cond.false.i37.i_crit_edge, label %cond.true.i35.i

if.then7.i.cond.false.i37.i_crit_edge:            ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.false.i37.i

cond.true.i35.i:                                  ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #18
  %call.i34.i = tail call noalias ptr (i32, ptr, ...) @kasprintf(i32 noundef 2592, ptr noundef nonnull @.str.326, ptr noundef nonnull %str.1.i, ptr noundef nonnull @.str.322) #16
  br label %target_append_str.exit39.i

cond.false.i37.i:                                 ; preds = %if.then7.i.cond.false.i37.i_crit_edge, %if.end4.thread.i.cond.false.i37.i_crit_edge
  %call1.i36.i = tail call noalias ptr @kstrdup(ptr noundef nonnull @.str.322, i32 noundef 2592) #16
  br label %target_append_str.exit39.i

target_append_str.exit39.i:                       ; preds = %cond.false.i37.i, %cond.true.i35.i
  %str.179.i = phi ptr [ %str.1.i, %cond.true.i35.i ], [ null, %cond.false.i37.i ]
  %cond.i38.i = phi ptr [ %call.i34.i, %cond.true.i35.i ], [ %call1.i36.i, %cond.false.i37.i ]
  tail call void @kfree(ptr noundef %str.179.i) #16
  br label %if.end8.i

if.end8.i:                                        ; preds = %target_append_str.exit39.i, %if.end4.i.if.end8.i_crit_edge
  %str.2.i = phi ptr [ %str.1.i, %if.end4.i.if.end8.i_crit_edge ], [ %cond.i38.i, %target_append_str.exit39.i ]
  %and9.i = and i32 %1, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9.i)
  %tobool10.not.i = icmp eq i32 %and9.i, 0
  br i1 %tobool10.not.i, label %if.end8.i.if.end12.i_crit_edge, label %if.then11.i

if.end8.i.if.end12.i_crit_edge:                   ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end12.i

if.end8.thread.i:                                 ; preds = %if.end4.thread.i
  %and984.i = and i32 %1, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and984.i)
  %tobool10.not85.i = icmp eq i32 %and984.i, 0
  br i1 %tobool10.not85.i, label %if.end12.thread.i, label %if.end8.thread.i.cond.false.i44.i_crit_edge

if.end8.thread.i.cond.false.i44.i_crit_edge:      ; preds = %if.end8.thread.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.false.i44.i

if.then11.i:                                      ; preds = %if.end8.i
  %tobool.not.i40.i = icmp eq ptr %str.2.i, null
  br i1 %tobool.not.i40.i, label %if.then11.i.cond.false.i44.i_crit_edge, label %cond.true.i42.i

if.then11.i.cond.false.i44.i_crit_edge:           ; preds = %if.then11.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.false.i44.i

cond.true.i42.i:                                  ; preds = %if.then11.i
  call void @__sanitizer_cov_trace_pc() #18
  %call.i41.i = tail call noalias ptr (i32, ptr, ...) @kasprintf(i32 noundef 2592, ptr noundef nonnull @.str.326, ptr noundef nonnull %str.2.i, ptr noundef nonnull @.str.323) #16
  br label %target_append_str.exit46.i

cond.false.i44.i:                                 ; preds = %if.then11.i.cond.false.i44.i_crit_edge, %if.end8.thread.i.cond.false.i44.i_crit_edge
  %call1.i43.i = tail call noalias ptr @kstrdup(ptr noundef nonnull @.str.323, i32 noundef 2592) #16
  br label %target_append_str.exit46.i

target_append_str.exit46.i:                       ; preds = %cond.false.i44.i, %cond.true.i42.i
  %str.287.i = phi ptr [ %str.2.i, %cond.true.i42.i ], [ null, %cond.false.i44.i ]
  %cond.i45.i = phi ptr [ %call.i41.i, %cond.true.i42.i ], [ %call1.i43.i, %cond.false.i44.i ]
  tail call void @kfree(ptr noundef %str.287.i) #16
  br label %if.end12.i

if.end12.i:                                       ; preds = %target_append_str.exit46.i, %if.end8.i.if.end12.i_crit_edge
  %str.3.i = phi ptr [ %str.2.i, %if.end8.i.if.end12.i_crit_edge ], [ %cond.i45.i, %target_append_str.exit46.i ]
  %and13.i = and i32 %1, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and13.i)
  %tobool14.not.i = icmp eq i32 %and13.i, 0
  br i1 %tobool14.not.i, label %if.end12.i.if.end16.i_crit_edge, label %if.then15.i

if.end12.i.if.end16.i_crit_edge:                  ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end16.i

if.end12.thread.i:                                ; preds = %if.end8.thread.i
  %and1392.i = and i32 %1, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1392.i)
  %tobool14.not93.i = icmp eq i32 %and1392.i, 0
  br i1 %tobool14.not93.i, label %if.end16.thread.i, label %if.end12.thread.i.cond.false.i51.i_crit_edge

if.end12.thread.i.cond.false.i51.i_crit_edge:     ; preds = %if.end12.thread.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.false.i51.i

if.then15.i:                                      ; preds = %if.end12.i
  %tobool.not.i47.i = icmp eq ptr %str.3.i, null
  br i1 %tobool.not.i47.i, label %if.then15.i.cond.false.i51.i_crit_edge, label %cond.true.i49.i

if.then15.i.cond.false.i51.i_crit_edge:           ; preds = %if.then15.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.false.i51.i

cond.true.i49.i:                                  ; preds = %if.then15.i
  call void @__sanitizer_cov_trace_pc() #18
  %call.i48.i = tail call noalias ptr (i32, ptr, ...) @kasprintf(i32 noundef 2592, ptr noundef nonnull @.str.326, ptr noundef nonnull %str.3.i, ptr noundef nonnull @.str.324) #16
  br label %target_append_str.exit53.i

cond.false.i51.i:                                 ; preds = %if.then15.i.cond.false.i51.i_crit_edge, %if.end12.thread.i.cond.false.i51.i_crit_edge
  %call1.i50.i = tail call noalias ptr @kstrdup(ptr noundef nonnull @.str.324, i32 noundef 2592) #16
  br label %target_append_str.exit53.i

target_append_str.exit53.i:                       ; preds = %cond.false.i51.i, %cond.true.i49.i
  %str.395.i = phi ptr [ %str.3.i, %cond.true.i49.i ], [ null, %cond.false.i51.i ]
  %cond.i52.i = phi ptr [ %call.i48.i, %cond.true.i49.i ], [ %call1.i50.i, %cond.false.i51.i ]
  tail call void @kfree(ptr noundef %str.395.i) #16
  br label %if.end16.i

if.end16.i:                                       ; preds = %target_append_str.exit53.i, %if.end12.i.if.end16.i_crit_edge
  %str.4.i = phi ptr [ %str.3.i, %if.end12.i.if.end16.i_crit_edge ], [ %cond.i52.i, %target_append_str.exit53.i ]
  %and17.i = and i32 %1, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17.i)
  %tobool18.not.i = icmp eq i32 %and17.i, 0
  br i1 %tobool18.not.i, label %if.end16.i.target_ts_to_str.exit_crit_edge, label %if.then19.i

if.end16.i.target_ts_to_str.exit_crit_edge:       ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %target_ts_to_str.exit

if.end16.thread.i:                                ; preds = %if.end12.thread.i
  %and17100.i = and i32 %1, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17100.i)
  %tobool18.not101.i = icmp eq i32 %and17100.i, 0
  br i1 %tobool18.not101.i, label %if.end16.thread.i.target_ts_to_str.exit_crit_edge, label %if.end16.thread.i.cond.false.i58.i_crit_edge

if.end16.thread.i.cond.false.i58.i_crit_edge:     ; preds = %if.end16.thread.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.false.i58.i

if.end16.thread.i.target_ts_to_str.exit_crit_edge: ; preds = %if.end16.thread.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %target_ts_to_str.exit

if.then19.i:                                      ; preds = %if.end16.i
  %tobool.not.i54.i = icmp eq ptr %str.4.i, null
  br i1 %tobool.not.i54.i, label %if.then19.i.cond.false.i58.i_crit_edge, label %cond.true.i56.i

if.then19.i.cond.false.i58.i_crit_edge:           ; preds = %if.then19.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.false.i58.i

cond.true.i56.i:                                  ; preds = %if.then19.i
  call void @__sanitizer_cov_trace_pc() #18
  %call.i55.i = tail call noalias ptr (i32, ptr, ...) @kasprintf(i32 noundef 2592, ptr noundef nonnull @.str.326, ptr noundef nonnull %str.4.i, ptr noundef nonnull @.str.325) #16
  br label %target_append_str.exit60.i

cond.false.i58.i:                                 ; preds = %if.then19.i.cond.false.i58.i_crit_edge, %if.end16.thread.i.cond.false.i58.i_crit_edge
  %call1.i57.i = tail call noalias ptr @kstrdup(ptr noundef nonnull @.str.325, i32 noundef 2592) #16
  br label %target_append_str.exit60.i

target_append_str.exit60.i:                       ; preds = %cond.false.i58.i, %cond.true.i56.i
  %str.4103.i = phi ptr [ %str.4.i, %cond.true.i56.i ], [ null, %cond.false.i58.i ]
  %cond.i59.i = phi ptr [ %call.i55.i, %cond.true.i56.i ], [ %call1.i57.i, %cond.false.i58.i ]
  tail call void @kfree(ptr noundef %str.4103.i) #16
  br label %target_ts_to_str.exit

target_ts_to_str.exit:                            ; preds = %target_append_str.exit60.i, %if.end16.thread.i.target_ts_to_str.exit_crit_edge, %if.end16.i.target_ts_to_str.exit_crit_edge
  %str.5.i = phi ptr [ %str.4.i, %if.end16.i.target_ts_to_str.exit_crit_edge ], [ %cond.i59.i, %target_append_str.exit60.i ], [ null, %if.end16.thread.i.target_ts_to_str.exit_crit_edge ]
  %t_task_cdb = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 30
  %2 = ptrtoint ptr %t_task_cdb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %t_task_cdb, align 8
  %se_tmr_req = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 22
  %4 = ptrtoint ptr %se_tmr_req to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %se_tmr_req, align 8
  %se_cmd_flags = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 11
  %6 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %se_cmd_flags, align 8
  %and = and i32 %7, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.body, label %do.body12

do.body:                                          ; preds = %target_ts_to_str.exit
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @target_show_cmd.__UNIQUE_ID_ddebug683, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@target_show_cmd, %if.then5)) #16
          to label %if.end38 [label %if.then5], !srcloc !779

if.then5:                                         ; preds = %do.body
  %8 = ptrtoint ptr %3 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %3, align 1
  %conv = zext i8 %9 to i32
  %arrayidx6 = getelementptr i8, ptr %3, i32 1
  %10 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx6, align 1
  %conv7 = zext i8 %11 to i32
  %tag = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 4
  %12 = ptrtoint ptr %tag to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %tag, align 8
  %data_direction = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 6
  %14 = ptrtoint ptr %data_direction to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %data_direction, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %15)
  %16 = icmp ult i32 %15, 4
  br i1 %16, label %switch.lookup, label %if.then5.data_dir_name.exit_crit_edge

if.then5.data_dir_name.exit_crit_edge:            ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #18
  br label %data_dir_name.exit

switch.lookup:                                    ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #18
  %switch.gep = getelementptr inbounds [4 x ptr], ptr @switch.table.target_show_cmd, i32 0, i32 %15
  %17 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %17)
  %switch.load = load ptr, ptr %switch.gep, align 4
  br label %data_dir_name.exit

data_dir_name.exit:                               ; preds = %switch.lookup, %if.then5.data_dir_name.exit_crit_edge
  %retval.0.i62 = phi ptr [ %switch.load, %switch.lookup ], [ @.str.327, %if.then5.data_dir_name.exit_crit_edge ]
  %se_tfo = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 26
  %18 = ptrtoint ptr %se_tfo to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %se_tfo, align 8
  %get_cmd_state = getelementptr inbounds %struct.target_core_fabric_ops, ptr %19, i32 0, i32 22
  %20 = ptrtoint ptr %get_cmd_state to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %get_cmd_state, align 4
  %call9 = tail call i32 %21(ptr noundef %cmd) #16
  %t_state = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 10
  %22 = ptrtoint ptr %t_state to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %t_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 21, i32 %23)
  %24 = icmp ult i32 %23, 21
  br i1 %24, label %switch.lookup91, label %data_dir_name.exit.cmd_state_name.exit_crit_edge

data_dir_name.exit.cmd_state_name.exit_crit_edge: ; preds = %data_dir_name.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cmd_state_name.exit

switch.lookup91:                                  ; preds = %data_dir_name.exit
  call void @__sanitizer_cov_trace_pc() #18
  %switch.gep92 = getelementptr inbounds [21 x ptr], ptr @switch.table.target_show_cmd.355, i32 0, i32 %23
  %25 = ptrtoint ptr %switch.gep92 to i32
  call void @__asan_load4_noabort(i32 %25)
  %switch.load93 = load ptr, ptr %switch.gep92, align 4
  br label %cmd_state_name.exit

cmd_state_name.exit:                              ; preds = %switch.lookup91, %data_dir_name.exit.cmd_state_name.exit_crit_edge
  %retval.0.i67 = phi ptr [ %switch.load93, %switch.lookup91 ], [ @.str.327, %data_dir_name.exit.cmd_state_name.exit_crit_edge ]
  %data_length = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 12
  %26 = ptrtoint ptr %data_length to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %data_length, align 4
  %cmd_kref = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 36
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %cmd_kref, i32 noundef 4) #16
  %28 = ptrtoint ptr %cmd_kref to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %cmd_kref, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @target_show_cmd.__UNIQUE_ID_ddebug683, ptr noundef nonnull @.str.148, ptr noundef %pfx, i32 noundef %conv, i32 noundef %conv7, i64 noundef %13, ptr noundef nonnull %retval.0.i62, i32 noundef %call9, ptr noundef nonnull %retval.0.i67, i32 noundef %27, i32 noundef %29, ptr noundef %str.5.i) #16
  br label %if.end38

do.body12:                                        ; preds = %target_ts_to_str.exit
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @target_show_cmd.__UNIQUE_ID_ddebug684, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@target_show_cmd, %if.then24)) #16
          to label %if.end38 [label %if.then24], !srcloc !779

if.then24:                                        ; preds = %do.body12
  %30 = ptrtoint ptr %5 to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %5, align 8
  %32 = zext i8 %31 to i64
  call void @__sanitizer_cov_trace_switch(i64 %32, ptr @__sancov_gen_cov_switch_values.372)
  switch i8 %31, label %sw.epilog.i75 [
    i8 1, label %if.then24.target_tmf_name.exit_crit_edge
    i8 2, label %sw.bb1.i68
    i8 3, label %sw.bb2.i69
    i8 4, label %sw.bb3.i70
    i8 5, label %sw.bb4.i71
    i8 6, label %sw.bb5.i72
    i8 7, label %sw.bb6.i73
    i8 -128, label %sw.bb7.i74
  ]

if.then24.target_tmf_name.exit_crit_edge:         ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #18
  br label %target_tmf_name.exit

sw.bb1.i68:                                       ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #18
  br label %target_tmf_name.exit

sw.bb2.i69:                                       ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #18
  br label %target_tmf_name.exit

sw.bb3.i70:                                       ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #18
  br label %target_tmf_name.exit

sw.bb4.i71:                                       ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #18
  br label %target_tmf_name.exit

sw.bb5.i72:                                       ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #18
  br label %target_tmf_name.exit

sw.bb6.i73:                                       ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #18
  br label %target_tmf_name.exit

sw.bb7.i74:                                       ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #18
  br label %target_tmf_name.exit

sw.epilog.i75:                                    ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #18
  br label %target_tmf_name.exit

target_tmf_name.exit:                             ; preds = %sw.epilog.i75, %sw.bb7.i74, %sw.bb6.i73, %sw.bb5.i72, %sw.bb4.i71, %sw.bb3.i70, %sw.bb2.i69, %sw.bb1.i68, %if.then24.target_tmf_name.exit_crit_edge
  %retval.0.i76 = phi ptr [ @.str.327, %sw.epilog.i75 ], [ @.str.343, %sw.bb7.i74 ], [ @.str.342, %sw.bb6.i73 ], [ @.str.341, %sw.bb5.i72 ], [ @.str.340, %sw.bb4.i71 ], [ @.str.339, %sw.bb3.i70 ], [ @.str.338, %sw.bb2.i69 ], [ @.str.337, %sw.bb1.i68 ], [ @.str.336, %if.then24.target_tmf_name.exit_crit_edge ]
  %tag27 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 4
  %33 = ptrtoint ptr %tag27 to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %tag27, align 8
  %ref_task_tag = getelementptr inbounds %struct.se_tmr_req, ptr %5, i32 0, i32 3
  %35 = ptrtoint ptr %ref_task_tag to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %ref_task_tag, align 8
  %se_tfo28 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 26
  %37 = ptrtoint ptr %se_tfo28 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %se_tfo28, align 8
  %get_cmd_state29 = getelementptr inbounds %struct.target_core_fabric_ops, ptr %38, i32 0, i32 22
  %39 = ptrtoint ptr %get_cmd_state29 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %get_cmd_state29, align 4
  %call30 = tail call i32 %40(ptr noundef %cmd) #16
  %t_state31 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 10
  %41 = ptrtoint ptr %t_state31 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %t_state31, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 21, i32 %42)
  %43 = icmp ult i32 %42, 21
  br i1 %43, label %switch.lookup94, label %target_tmf_name.exit.cmd_state_name.exit87_crit_edge

target_tmf_name.exit.cmd_state_name.exit87_crit_edge: ; preds = %target_tmf_name.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cmd_state_name.exit87

switch.lookup94:                                  ; preds = %target_tmf_name.exit
  call void @__sanitizer_cov_trace_pc() #18
  %switch.gep95 = getelementptr inbounds [21 x ptr], ptr @switch.table.target_show_cmd.356, i32 0, i32 %42
  %44 = ptrtoint ptr %switch.gep95 to i32
  call void @__asan_load4_noabort(i32 %44)
  %switch.load96 = load ptr, ptr %switch.gep95, align 4
  br label %cmd_state_name.exit87

cmd_state_name.exit87:                            ; preds = %switch.lookup94, %target_tmf_name.exit.cmd_state_name.exit87_crit_edge
  %retval.0.i86 = phi ptr [ %switch.load96, %switch.lookup94 ], [ @.str.327, %target_tmf_name.exit.cmd_state_name.exit87_crit_edge ]
  %cmd_kref33 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 36
  %call.i.i.i.i88 = tail call zeroext i1 @__kasan_check_read(ptr noundef %cmd_kref33, i32 noundef 4) #16
  %45 = ptrtoint ptr %cmd_kref33 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %cmd_kref33, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @target_show_cmd.__UNIQUE_ID_ddebug684, ptr noundef nonnull @.str.149, ptr noundef %pfx, ptr noundef nonnull %retval.0.i76, i64 noundef %34, i64 noundef %36, i32 noundef %call30, ptr noundef nonnull %retval.0.i86, i32 noundef %46, ptr noundef %str.5.i) #16
  br label %if.end38

if.end38:                                         ; preds = %cmd_state_name.exit87, %do.body12, %cmd_state_name.exit, %do.body
  tail call void @kfree(ptr noundef %str.5.i) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @transport_complete_task_attr(ptr nocapture noundef %cmd) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %se_dev = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 19
  %0 = ptrtoint ptr %se_dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %se_dev, align 4
  %transport_flags = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %transport_flags to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %transport_flags, align 4
  %4 = and i8 %3, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not = icmp eq i8 %4, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %se_cmd_flags = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 11
  %5 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %se_cmd_flags, align 8
  %and1 = and i32 %6, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1)
  %tobool2.not = icmp eq i32 %and1, 0
  br i1 %tobool2.not, label %if.end.restart_crit_edge, label %if.end4

if.end.restart_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %restart

if.end4:                                          ; preds = %if.end
  %sam_task_attr = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 7
  %7 = ptrtoint ptr %sam_task_attr to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %sam_task_attr, align 8
  %9 = zext i32 %8 to i64
  call void @__sanitizer_cov_trace_switch(i64 %9, ptr @__sancov_gen_cov_switch_values.373)
  switch i32 %8, label %if.end4.if.end47_crit_edge [
    i32 32, label %if.then6
    i32 33, label %if.then10
    i32 34, label %if.then24
  ]

if.end4.if.end47_crit_edge:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end47

if.then6:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  %non_ordered = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !786
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %non_ordered, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %non_ordered, i32 1, i32 3, i32 1) #16
  %10 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %non_ordered, ptr %non_ordered, i32 1, ptr elementtype(i32) %non_ordered) #16, !srcloc !787
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !788
  %dev_cur_ordered_id = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 1
  %11 = ptrtoint ptr %dev_cur_ordered_id to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %dev_cur_ordered_id, align 4
  %inc = add i32 %12, 1
  store i32 %inc, ptr %dev_cur_ordered_id, align 4
  br label %if.end47

if.then10:                                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  %non_ordered11 = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !786
  %call.i.i.i76 = tail call zeroext i1 @__kasan_check_write(ptr noundef %non_ordered11, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %non_ordered11, i32 1, i32 3, i32 1) #16
  %13 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %non_ordered11, ptr %non_ordered11, i32 1, ptr elementtype(i32) %non_ordered11) #16, !srcloc !787
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !788
  %dev_cur_ordered_id12 = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 1
  %14 = ptrtoint ptr %dev_cur_ordered_id12 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %dev_cur_ordered_id12, align 4
  %inc13 = add i32 %15, 1
  store i32 %inc13, ptr %dev_cur_ordered_id12, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @transport_complete_task_attr.__UNIQUE_ID_ddebug675, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@transport_complete_task_attr, %if.then17)) #16
          to label %if.end47 [label %if.then17], !srcloc !779

if.then17:                                        ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #18
  %16 = ptrtoint ptr %dev_cur_ordered_id12 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %dev_cur_ordered_id12, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @transport_complete_task_attr.__UNIQUE_ID_ddebug675, ptr noundef nonnull @.str.312, i32 noundef %17) #16
  br label %if.end47

if.then24:                                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  %delayed_cmd_lock = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 19
  tail call void @_raw_spin_lock(ptr noundef %delayed_cmd_lock) #16
  %ordered_sync_in_progress = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 15
  %18 = ptrtoint ptr %ordered_sync_in_progress to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 0, ptr %ordered_sync_in_progress, align 4
  tail call void @_raw_spin_unlock(ptr noundef %delayed_cmd_lock) #16
  %dev_cur_ordered_id26 = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 1
  %19 = ptrtoint ptr %dev_cur_ordered_id26 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %dev_cur_ordered_id26, align 4
  %inc27 = add i32 %20, 1
  store i32 %inc27, ptr %dev_cur_ordered_id26, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @transport_complete_task_attr.__UNIQUE_ID_ddebug676, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@transport_complete_task_attr, %if.then40)) #16
          to label %if.end47 [label %if.then40], !srcloc !779

if.then40:                                        ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #18
  %21 = ptrtoint ptr %dev_cur_ordered_id26 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %dev_cur_ordered_id26, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @transport_complete_task_attr.__UNIQUE_ID_ddebug676, ptr noundef nonnull @.str.313, i32 noundef %22) #16
  br label %if.end47

if.end47:                                         ; preds = %if.then40, %if.then24, %if.then17, %if.then10, %if.then6, %if.end4.if.end47_crit_edge
  %23 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %se_cmd_flags, align 8
  %and49 = and i32 %24, -131073
  store i32 %and49, ptr %se_cmd_flags, align 8
  br label %restart

restart:                                          ; preds = %if.end47, %if.end.restart_crit_edge
  %delayed_cmd_count = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 16
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %delayed_cmd_count, i32 noundef 4) #16
  %25 = ptrtoint ptr %delayed_cmd_count to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %delayed_cmd_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %cmp51 = icmp sgt i32 %26, 0
  br i1 %cmp51, label %if.then53, label %restart.cleanup_crit_edge

restart.cleanup_crit_edge:                        ; preds = %restart
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then53:                                        ; preds = %restart
  call void @__sanitizer_cov_trace_pc() #18
  %delayed_cmd_work = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 32
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %27 = load ptr, ptr @system_wq, align 4
  %call.i.i77 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %27, ptr noundef %delayed_cmd_work) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then53, %restart.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @target_abort_work(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -304
  tail call fastcc void @target_handle_abort(ptr noundef %add.ptr)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @target_ua_allocate_lun(ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @transport_lun_remove_cmd(ptr noundef %cmd) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %se_lun = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 20
  %0 = ptrtoint ptr %se_lun to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %se_lun, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %se_dev.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 19
  %2 = ptrtoint ptr %se_dev.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %se_dev.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %if.end.target_remove_from_state_list.exit_crit_edge, label %do.body1.i

if.end.target_remove_from_state_list.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %target_remove_from_state_list.exit

do.body1.i:                                       ; preds = %if.end
  %queues.i = getelementptr inbounds %struct.se_device, ptr %3, i32 0, i32 52
  %4 = ptrtoint ptr %queues.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %queues.i, align 4
  %cpuid.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 59
  %6 = ptrtoint ptr %cpuid.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpuid.i, align 8
  %lock.i = getelementptr %struct.se_device_queue, ptr %5, i32 %7, i32 1
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i) #16
  %state_active.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 3
  %8 = ptrtoint ptr %state_active.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %bf.load.i = load i8, ptr %state_active.i, align 8
  %9 = and i8 %bf.load.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %bf.cast.not.i = icmp eq i8 %9, 0
  br i1 %bf.cast.not.i, label %do.body1.i.if.end9.i_crit_edge, label %if.then5.i

do.body1.i.if.end9.i_crit_edge:                   ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9.i

if.then5.i:                                       ; preds = %do.body1.i
  %state_list.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 47
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %state_list.i) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then5.i.list_del.exit.i_crit_edge

if.then5.i.list_del.exit.i_crit_edge:             ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 47, i32 1
  %10 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %prev.i.i.i, align 4
  %12 = ptrtoint ptr %state_list.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %state_list.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %11, ptr %prev1.i.i.i.i, align 4
  %15 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %13, ptr %11, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %if.then5.i.list_del.exit.i_crit_edge
  %16 = ptrtoint ptr %state_list.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr inttoptr (i32 256 to ptr), ptr %state_list.i, align 4
  %prev.i.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 47, i32 1
  %17 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  %18 = ptrtoint ptr %state_active.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %bf.load7.i = load i8, ptr %state_active.i, align 8
  %bf.clear8.i = and i8 %bf.load7.i, -65
  store i8 %bf.clear8.i, ptr %state_active.i, align 8
  br label %if.end9.i

if.end9.i:                                        ; preds = %list_del.exit.i, %do.body1.i.if.end9.i_crit_edge
  %19 = ptrtoint ptr %queues.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %queues.i, align 4
  %21 = ptrtoint ptr %cpuid.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %cpuid.i, align 8
  %lock13.i = getelementptr %struct.se_device_queue, ptr %20, i32 %22, i32 1
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock13.i, i32 noundef %call2.i) #16
  br label %target_remove_from_state_list.exit

target_remove_from_state_list.exit:               ; preds = %if.end9.i, %if.end.target_remove_from_state_list.exit_crit_edge
  %se_cmd_flags.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 11
  %23 = ptrtoint ptr %se_cmd_flags.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %se_cmd_flags.i, align 8
  %and.i = and i32 %24, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i25 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i25, label %target_remove_from_state_list.exit.target_remove_from_tmr_list.exit_crit_edge, label %if.end.i

target_remove_from_state_list.exit.target_remove_from_tmr_list.exit_crit_edge: ; preds = %target_remove_from_state_list.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %target_remove_from_tmr_list.exit

if.end.i:                                         ; preds = %target_remove_from_state_list.exit
  %se_tmr_req.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 22
  %25 = ptrtoint ptr %se_tmr_req.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %se_tmr_req.i, align 8
  %tmr_dev.i = getelementptr inbounds %struct.se_tmr_req, ptr %26, i32 0, i32 6
  %27 = ptrtoint ptr %tmr_dev.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %tmr_dev.i, align 8
  %tobool1.not.i = icmp eq ptr %28, null
  br i1 %tobool1.not.i, label %if.end.i.target_remove_from_tmr_list.exit_crit_edge, label %do.body3.i

if.end.i.target_remove_from_tmr_list.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %target_remove_from_tmr_list.exit

do.body3.i:                                       ; preds = %if.end.i
  %se_tmr_lock.i = getelementptr inbounds %struct.se_device, ptr %28, i32 0, i32 23
  %call4.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %se_tmr_lock.i) #16
  %29 = ptrtoint ptr %se_tmr_req.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %se_tmr_req.i, align 8
  %tmr_dev8.i = getelementptr inbounds %struct.se_tmr_req, ptr %30, i32 0, i32 6
  %31 = ptrtoint ptr %tmr_dev8.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %tmr_dev8.i, align 8
  %tobool9.not.i = icmp eq ptr %32, null
  br i1 %tobool9.not.i, label %do.body3.i.if.end12.i_crit_edge, label %if.then10.i

do.body3.i.if.end12.i_crit_edge:                  ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end12.i

if.then10.i:                                      ; preds = %do.body3.i
  %tmr_list.i = getelementptr inbounds %struct.se_tmr_req, ptr %30, i32 0, i32 7
  %call.i.i.i26 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %tmr_list.i) #16
  br i1 %call.i.i.i26, label %if.end.i.i.i29, label %if.then10.i.list_del_init.exit.i_crit_edge

if.then10.i.list_del_init.exit.i_crit_edge:       ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del_init.exit.i

if.end.i.i.i29:                                   ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i27 = getelementptr inbounds %struct.se_tmr_req, ptr %30, i32 0, i32 7, i32 1
  %33 = ptrtoint ptr %prev.i.i.i27 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %prev.i.i.i27, align 4
  %35 = ptrtoint ptr %tmr_list.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %tmr_list.i, align 4
  %prev1.i.i.i.i28 = getelementptr inbounds %struct.list_head, ptr %36, i32 0, i32 1
  %37 = ptrtoint ptr %prev1.i.i.i.i28 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %34, ptr %prev1.i.i.i.i28, align 4
  %38 = ptrtoint ptr %34 to i32
  call void @__asan_store4_noabort(i32 %38)
  store volatile ptr %36, ptr %34, align 4
  br label %list_del_init.exit.i

list_del_init.exit.i:                             ; preds = %if.end.i.i.i29, %if.then10.i.list_del_init.exit.i_crit_edge
  %39 = ptrtoint ptr %tmr_list.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile ptr %tmr_list.i, ptr %tmr_list.i, align 4
  %prev.i3.i.i = getelementptr inbounds %struct.se_tmr_req, ptr %30, i32 0, i32 7, i32 1
  %40 = ptrtoint ptr %prev.i3.i.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %tmr_list.i, ptr %prev.i3.i.i, align 4
  br label %if.end12.i

if.end12.i:                                       ; preds = %list_del_init.exit.i, %do.body3.i.if.end12.i_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %se_tmr_lock.i, i32 noundef %call4.i) #16
  br label %target_remove_from_tmr_list.exit

target_remove_from_tmr_list.exit:                 ; preds = %if.end12.i, %if.end.i.target_remove_from_tmr_list.exit_crit_edge, %target_remove_from_state_list.exit.target_remove_from_tmr_list.exit_crit_edge
  %lun_ref_active = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 46
  %call.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %lun_ref_active, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !806
  tail call void @llvm.prefetch.p0(ptr %lun_ref_active, i32 1, i32 3, i32 1) #16
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %target_remove_from_tmr_list.exit
  %41 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %lun_ref_active, i32 1, i32 0) #16, !srcloc !807
  %asmresult.i = extractvalue { i32, i32 } %41, 0
  %tobool.not.i30 = icmp eq i32 %asmresult.i, 0
  br i1 %tobool.not.i30, label %__cmpxchg.exit, label %do.body.i.do.body.i_crit_edge

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i

__cmpxchg.exit:                                   ; preds = %do.body.i
  %asmresult1.i = extractvalue { i32, i32 } %41, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !808
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult1.i)
  %tobool15.not = icmp eq i32 %asmresult1.i, 0
  br i1 %tobool15.not, label %__cmpxchg.exit.if.end17_crit_edge, label %if.then16

__cmpxchg.exit.if.end17_crit_edge:                ; preds = %__cmpxchg.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

if.then16:                                        ; preds = %__cmpxchg.exit
  call void @__sanitizer_cov_trace_pc() #18
  %lun_ref = getelementptr inbounds %struct.se_lun, ptr %1, i32 0, i32 21
  tail call fastcc void @percpu_ref_put(ptr noundef %lun_ref)
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %__cmpxchg.exit.if.end17_crit_edge
  %42 = ptrtoint ptr %se_lun to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr null, ptr %se_lun, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @transport_cmd_check_stop_to_fabric(ptr noundef %cmd) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %t_state_lock = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 35
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %t_state_lock) #16
  %transport_state = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 34
  %0 = ptrtoint ptr %transport_state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %transport_state, align 4
  %and = and i32 %1, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end15, label %do.body5

do.body5:                                         ; preds = %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @transport_cmd_check_stop_to_fabric.__UNIQUE_ID_ddebug659, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@transport_cmd_check_stop_to_fabric, %if.then11)) #16
          to label %do.end13 [label %if.then11], !srcloc !779

if.then11:                                        ; preds = %do.body5
  call void @__sanitizer_cov_trace_pc() #18
  %tag = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 4
  %2 = ptrtoint ptr %tag to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %tag, align 8
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @transport_cmd_check_stop_to_fabric.__UNIQUE_ID_ddebug659, ptr noundef nonnull @.str.143, ptr noundef nonnull @.str.306, i32 noundef 712, i64 noundef %3) #16
  br label %do.end13

do.end13:                                         ; preds = %if.then11, %do.body5
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %t_state_lock, i32 noundef %call2) #16
  %t_transport_stop_comp = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 37
  tail call void @complete_all(ptr noundef %t_transport_stop_comp) #16
  br label %cleanup

if.end15:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %and17 = and i32 %1, -3
  %4 = ptrtoint ptr %transport_state to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %and17, ptr %transport_state, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %t_state_lock, i32 noundef %call2) #16
  %se_tfo = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 26
  %5 = ptrtoint ptr %se_tfo to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %se_tfo, align 8
  %check_stop_free = getelementptr inbounds %struct.target_core_fabric_ops, ptr %6, i32 0, i32 15
  %7 = ptrtoint ptr %check_stop_free to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %check_stop_free, align 4
  %call19 = tail call i32 %8(ptr noundef %cmd) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end15, %do.end13
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_target_cmd_complete(ptr noundef %cmd) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_target_cmd_complete, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_target_cmd_complete, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !779

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !757) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !767

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.302, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div1.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !757) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !809
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_target_cmd_complete, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %cmd) #16
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !810
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !810
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !757) #16
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !757) #16
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !767

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.302, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div1.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div1.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !757) #16
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !791
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_target_cmd_complete, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_target_cmd_complete.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_target_cmd_complete.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.300, i32 noundef 215, ptr noundef nonnull @.str.301) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !792
  %38 = tail call i32 @llvm.read_register.i32(metadata !757) #16
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @transport_handle_queue_full(ptr noundef %cmd, ptr noundef %dev, i32 noundef %err, i1 noundef zeroext %write_pending) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = and i32 %err, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 -12, i32 %0)
  %switch = icmp eq i32 %0, -12
  br i1 %switch, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %cond = select i1 %write_pending, i32 18, i32 19
  br label %if.end6

if.else:                                          ; preds = %entry
  %call = tail call i32 @___ratelimit(ptr noundef nonnull @transport_handle_queue_full._rs, ptr noundef nonnull @__func__.transport_handle_queue_full) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool2.not = icmp eq i32 %call, 0
  br i1 %tobool2.not, label %if.else.if.end6_crit_edge, label %do.end

if.else.if.end6_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6

do.end:                                           ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.314, i32 noundef %err) #21
  br label %if.end6

if.end6:                                          ; preds = %do.end, %if.else.if.end6_crit_edge, %if.then
  %.sink = phi i32 [ %cond, %if.then ], [ 20, %do.end ], [ 20, %if.else.if.end6_crit_edge ]
  %t_state5 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 10
  %1 = ptrtoint ptr %t_state5 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %.sink, ptr %t_state5, align 4
  %qf_cmd_lock = getelementptr inbounds %struct.se_device, ptr %dev, i32 0, i32 24
  tail call void @_raw_spin_lock_irq(ptr noundef %qf_cmd_lock) #16
  %se_qf_node = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 18
  %se_dev = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 19
  %2 = ptrtoint ptr %se_dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %se_dev, align 4
  %qf_cmd_list = getelementptr inbounds %struct.se_device, ptr %3, i32 0, i32 34
  %prev.i = getelementptr inbounds %struct.se_device, ptr %3, i32 0, i32 34, i32 1
  %4 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %se_qf_node, ptr noundef %5, ptr noundef %qf_cmd_list) #16
  br i1 %call.i.i, label %if.end.i.i, label %if.end6.list_add_tail.exit_crit_edge

if.end6.list_add_tail.exit_crit_edge:             ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  %6 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %se_qf_node, ptr %prev.i, align 4
  %7 = ptrtoint ptr %se_qf_node to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %qf_cmd_list, ptr %se_qf_node, align 4
  %prev3.i.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 18, i32 1
  %8 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %prev3.i.i, align 4
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %se_qf_node, ptr %5, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %if.end6.list_add_tail.exit_crit_edge
  %dev_qf_count = getelementptr inbounds %struct.se_device, ptr %dev, i32 0, i32 17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !811
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %dev_qf_count, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %dev_qf_count, i32 1, i32 3, i32 1) #16
  %10 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %dev_qf_count, ptr %dev_qf_count, i32 1, ptr elementtype(i32) %dev_qf_count) #16, !srcloc !784
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !812
  %11 = ptrtoint ptr %se_dev to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %se_dev, align 4
  %qf_cmd_lock8 = getelementptr inbounds %struct.se_device, ptr %12, i32 0, i32 24
  tail call void @_raw_spin_unlock_irq(ptr noundef %qf_cmd_lock8) #16
  %13 = ptrtoint ptr %se_dev to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %se_dev, align 4
  %qf_work_queue = getelementptr inbounds %struct.se_device, ptr %14, i32 0, i32 31
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %15 = load ptr, ptr @system_wq, align 4
  %call.i.i19 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %15, ptr noundef %qf_work_queue) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @__target_execute_cmd(ptr noundef %cmd, i1 noundef zeroext %do_checks) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %execute_cmd = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 27
  %0 = ptrtoint ptr %execute_cmd to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %execute_cmd, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.err_crit_edge, label %if.end

entry.err_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %err

if.end:                                           ; preds = %entry
  br i1 %do_checks, label %if.then2, label %if.end.if.end14_crit_edge

if.end.if.end14_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

if.then2:                                         ; preds = %if.end
  %call = tail call i32 @target_scsi3_ua_check(ptr noundef %cmd) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool3.not = icmp eq i32 %call, 0
  br i1 %tobool3.not, label %if.end5, label %if.then2.err_crit_edge

if.then2.err_crit_edge:                           ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #18
  br label %err

if.end5:                                          ; preds = %if.then2
  %call6 = tail call i32 @target_alua_state_check(ptr noundef %cmd) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %if.end9, label %if.end5.err_crit_edge

if.end5.err_crit_edge:                            ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  br label %err

if.end9:                                          ; preds = %if.end5
  %call10 = tail call i32 @target_check_reservation(ptr noundef %cmd) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.end9.if.end14_crit_edge, label %if.then12

if.end9.if.end14_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

if.then12:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  %scsi_status = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 1
  %2 = ptrtoint ptr %scsi_status to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 24, ptr %scsi_status, align 4
  br label %err

if.end14:                                         ; preds = %if.end9.if.end14_crit_edge, %if.end.if.end14_crit_edge
  %3 = ptrtoint ptr %execute_cmd to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %execute_cmd, align 4
  %call16 = tail call i32 %4(ptr noundef %cmd) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %if.end14.cleanup_crit_edge, label %if.end14.err_crit_edge

if.end14.err_crit_edge:                           ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  br label %err

if.end14.cleanup_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

err:                                              ; preds = %if.end14.err_crit_edge, %if.then12, %if.end5.err_crit_edge, %if.then2.err_crit_edge, %entry.err_crit_edge
  %ret.0 = phi i32 [ %call, %if.then2.err_crit_edge ], [ %call6, %if.end5.err_crit_edge ], [ %call10, %if.then12 ], [ %call16, %if.end14.err_crit_edge ], [ 10, %entry.err_crit_edge ]
  %t_state_lock = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 35
  tail call void @_raw_spin_lock_irq(ptr noundef %t_state_lock) #16
  %transport_state = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 34
  %5 = ptrtoint ptr %transport_state to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %transport_state, align 4
  %and = and i32 %6, -17
  store i32 %and, ptr %transport_state, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %t_state_lock) #16
  tail call void @transport_generic_request_failure(ptr noundef %cmd, i32 noundef %ret.0)
  br label %cleanup

cleanup:                                          ; preds = %err, %if.end14.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @target_scsi3_ua_check(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @target_alua_state_check(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @target_check_reservation(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @target_execute_cmd(ptr noundef %cmd) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc zeroext i1 @target_cmd_interrupted(ptr noundef %cmd)
  br i1 %call, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end:                                           ; preds = %entry
  %t_state_lock = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 35
  tail call void @_raw_spin_lock_irq(ptr noundef %t_state_lock) #16
  %t_state = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 10
  %0 = ptrtoint ptr %t_state to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 5, ptr %t_state, align 4
  %transport_state = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 34
  %1 = ptrtoint ptr %transport_state to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %transport_state, align 4
  %or = or i32 %2, 18
  store i32 %or, ptr %transport_state, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %t_state_lock) #16
  %prot_op.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 49
  %3 = ptrtoint ptr %prot_op.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %prot_op.i, align 8
  %5 = zext i32 %4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.374)
  switch i32 %4, label %if.end.if.end4_crit_edge [
    i32 2, label %sw.bb.i
    i32 8, label %sw.bb1.i
  ]

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

sw.bb.i:                                          ; preds = %if.end
  %se_sess.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 21
  %6 = ptrtoint ptr %se_sess.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %se_sess.i, align 4
  %sup_prot_ops.i = getelementptr inbounds %struct.se_session, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %sup_prot_ops.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sup_prot_ops.i, align 8
  %and.i = and i32 %9, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %sw.bb.i.if.end4_crit_edge

sw.bb.i.if.end4_crit_edge:                        ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

if.then.i:                                        ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @sbc_dif_generate(ptr noundef %cmd) #16
  br label %if.end4

sw.bb1.i:                                         ; preds = %if.end
  %se_sess2.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 21
  %10 = ptrtoint ptr %se_sess2.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %se_sess2.i, align 4
  %sup_prot_ops3.i = getelementptr inbounds %struct.se_session, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %sup_prot_ops3.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %sup_prot_ops3.i, align 8
  %and4.i = and i32 %13, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %if.end7.i, label %sw.bb1.i.if.end4_crit_edge

sw.bb1.i.if.end4_crit_edge:                       ; preds = %sw.bb1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

if.end7.i:                                        ; preds = %sw.bb1.i
  %data_length.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 12
  %14 = ptrtoint ptr %data_length.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %data_length.i, align 4
  %se_dev.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 19
  %16 = ptrtoint ptr %se_dev.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %se_dev.i, align 4
  %block_size.i = getelementptr inbounds %struct.se_device, ptr %17, i32 0, i32 39, i32 21
  %18 = ptrtoint ptr %block_size.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %block_size.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool.not.i.i.i = icmp eq i32 %19, 0
  %20 = tail call i32 @llvm.ctlz.i32(i32 %19, i1 true) #16, !range !785
  %sub.i.op.i.i = xor i32 %20, 31
  %sub.i.i = select i1 %tobool.not.i.i.i, i32 -1, i32 %sub.i.op.i.i
  %shr.i = lshr i32 %15, %sub.i.i
  %t_task_lba.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 32
  %21 = ptrtoint ptr %t_task_lba.i to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %t_task_lba.i, align 8
  %t_prot_sg.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 55
  %23 = ptrtoint ptr %t_prot_sg.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %t_prot_sg.i, align 4
  %call21.i = tail call i32 @sbc_dif_verify(ptr noundef %cmd, i64 noundef %22, i32 noundef %shr.i, i32 noundef 0, ptr noundef %24, i32 noundef 0) #16
  %pi_err.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 57
  %25 = ptrtoint ptr %pi_err.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %call21.i, ptr %pi_err.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21.i)
  %tobool23.not.i = icmp eq i32 %call21.i, 0
  br i1 %tobool23.not.i, label %if.end7.i.if.end4_crit_edge, label %target_write_prot_action.exit, !prof !767

if.end7.i.if.end4_crit_edge:                      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

target_write_prot_action.exit:                    ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_raw_spin_lock_irq(ptr noundef %t_state_lock) #16
  %26 = ptrtoint ptr %transport_state to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %transport_state, align 4
  %and27.i = and i32 %27, -17
  store i32 %and27.i, ptr %transport_state, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %t_state_lock) #16
  %28 = ptrtoint ptr %pi_err.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %pi_err.i, align 4
  tail call void @transport_generic_request_failure(ptr noundef %cmd, i32 noundef %29) #16
  br label %return

if.end4:                                          ; preds = %if.end7.i.if.end4_crit_edge, %sw.bb1.i.if.end4_crit_edge, %if.then.i, %sw.bb.i.if.end4_crit_edge, %if.end.if.end4_crit_edge
  %call5 = tail call fastcc zeroext i1 @target_handle_task_attr(ptr noundef %cmd)
  br i1 %call5, label %if.end4.return_crit_edge, label %if.end7

if.end4.return_crit_edge:                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end7:                                          ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @__target_execute_cmd(ptr noundef %cmd, i1 noundef zeroext true)
  br label %return

return:                                           ; preds = %if.end7, %if.end4.return_crit_edge, %target_write_prot_action.exit, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @target_handle_task_attr(ptr noundef %cmd) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %se_dev = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 19
  %0 = ptrtoint ptr %se_dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %se_dev, align 4
  %transport_flags = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %transport_flags to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %transport_flags, align 4
  %4 = and i8 %3, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not = icmp eq i8 %4, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %se_cmd_flags = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 11
  %5 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %se_cmd_flags, align 8
  %or = or i32 %6, 131072
  store i32 %or, ptr %se_cmd_flags, align 8
  %sam_task_attr = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 7
  %7 = ptrtoint ptr %sam_task_attr to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %sam_task_attr, align 8
  %9 = zext i32 %8 to i64
  call void @__sanitizer_cov_trace_switch(i64 %9, ptr @__sancov_gen_cov_switch_values.375)
  switch i32 %8, label %sw.default [
    i32 33, label %sw.bb
    i32 34, label %sw.bb7
  ]

sw.bb:                                            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %non_ordered = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !811
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %non_ordered, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %non_ordered, i32 1, i32 3, i32 1) #16
  %10 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %non_ordered, ptr %non_ordered, i32 1, ptr elementtype(i32) %non_ordered) #16, !srcloc !784
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !812
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @target_handle_task_attr.__UNIQUE_ID_ddebug672, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@target_handle_task_attr, %if.then4)) #16
          to label %cleanup [label %if.then4], !srcloc !779

if.then4:                                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  %t_task_cdb = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 30
  %11 = ptrtoint ptr %t_task_cdb to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %t_task_cdb, align 8
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %12, align 1
  %conv5 = zext i8 %14 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @target_handle_task_attr.__UNIQUE_ID_ddebug672, ptr noundef nonnull @.str.308, i32 noundef %conv5) #16
  br label %cleanup

sw.bb7:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %delayed_cmd_count = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !811
  %call.i.i.i91 = tail call zeroext i1 @__kasan_check_write(ptr noundef %delayed_cmd_count, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %delayed_cmd_count, i32 1, i32 3, i32 1) #16
  %15 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %delayed_cmd_count, ptr %delayed_cmd_count, i32 1, ptr elementtype(i32) %delayed_cmd_count) #16, !srcloc !784
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !812
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @target_handle_task_attr.__UNIQUE_ID_ddebug673, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@target_handle_task_attr, %if.then20)) #16
          to label %sw.epilog [label %if.then20], !srcloc !779

if.then20:                                        ; preds = %sw.bb7
  call void @__sanitizer_cov_trace_pc() #18
  %t_task_cdb21 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 30
  %16 = ptrtoint ptr %t_task_cdb21 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %t_task_cdb21, align 8
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %17, align 1
  %conv23 = zext i8 %19 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @target_handle_task_attr.__UNIQUE_ID_ddebug673, ptr noundef nonnull @.str.309, i32 noundef %conv23) #16
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  %non_ordered27 = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !811
  %call.i.i.i92 = tail call zeroext i1 @__kasan_check_write(ptr noundef %non_ordered27, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %non_ordered27, i32 1, i32 3, i32 1) #16
  %20 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %non_ordered27, ptr %non_ordered27, i32 1, ptr elementtype(i32) %non_ordered27) #16, !srcloc !784
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !812
  %delayed_cmd_count28 = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 16
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %delayed_cmd_count28, i32 noundef 4) #16
  %21 = ptrtoint ptr %delayed_cmd_count28 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %delayed_cmd_count28, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %cmp = icmp eq i32 %22, 0
  br i1 %cmp, label %sw.default.cleanup_crit_edge, label %sw.default.sw.epilog_crit_edge

sw.default.sw.epilog_crit_edge:                   ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

sw.default.cleanup_crit_edge:                     ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.epilog:                                        ; preds = %sw.default.sw.epilog_crit_edge, %if.then20, %sw.bb7
  %23 = ptrtoint ptr %sam_task_attr to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %sam_task_attr, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 34, i32 %24)
  %cmp34.not = icmp eq i32 %24, 34
  br i1 %cmp34.not, label %sw.epilog.if.end39_crit_edge, label %if.then36

sw.epilog.if.end39_crit_edge:                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end39

if.then36:                                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  %delayed_cmd_count37 = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !811
  %call.i.i.i93 = tail call zeroext i1 @__kasan_check_write(ptr noundef %delayed_cmd_count37, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %delayed_cmd_count37, i32 1, i32 3, i32 1) #16
  %25 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %delayed_cmd_count37, ptr %delayed_cmd_count37, i32 1, ptr elementtype(i32) %delayed_cmd_count37) #16, !srcloc !784
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !812
  %non_ordered38 = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !786
  %call.i.i.i94 = tail call zeroext i1 @__kasan_check_write(ptr noundef %non_ordered38, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %non_ordered38, i32 1, i32 3, i32 1) #16
  %26 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %non_ordered38, ptr %non_ordered38, i32 1, ptr elementtype(i32) %non_ordered38) #16, !srcloc !787
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !788
  br label %if.end39

if.end39:                                         ; preds = %if.then36, %sw.epilog.if.end39_crit_edge
  %t_state_lock = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 35
  tail call void @_raw_spin_lock_irq(ptr noundef %t_state_lock) #16
  %transport_state = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 34
  %27 = ptrtoint ptr %transport_state to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %transport_state, align 4
  %and40 = and i32 %28, -17
  store i32 %and40, ptr %transport_state, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %t_state_lock) #16
  %delayed_cmd_lock = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 19
  tail call void @_raw_spin_lock(ptr noundef %delayed_cmd_lock) #16
  %se_delayed_node = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 17
  %delayed_cmd_list = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 33
  %prev.i = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 33, i32 1
  %29 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %prev.i, align 4
  %call.i.i95 = tail call zeroext i1 @__list_add_valid(ptr noundef %se_delayed_node, ptr noundef %30, ptr noundef %delayed_cmd_list) #16
  br i1 %call.i.i95, label %if.end.i.i, label %if.end39.list_add_tail.exit_crit_edge

if.end39.list_add_tail.exit_crit_edge:            ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #18
  %31 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %se_delayed_node, ptr %prev.i, align 4
  %32 = ptrtoint ptr %se_delayed_node to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %delayed_cmd_list, ptr %se_delayed_node, align 4
  %prev3.i.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 17, i32 1
  %33 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %30, ptr %prev3.i.i, align 4
  %34 = ptrtoint ptr %30 to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile ptr %se_delayed_node, ptr %30, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %if.end39.list_add_tail.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %delayed_cmd_lock) #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @target_handle_task_attr.__UNIQUE_ID_ddebug674, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@target_handle_task_attr, %if.then55)) #16
          to label %do.end62 [label %if.then55], !srcloc !779

if.then55:                                        ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #18
  %t_task_cdb56 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 30
  %35 = ptrtoint ptr %t_task_cdb56 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %t_task_cdb56, align 8
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %36, align 1
  %conv58 = zext i8 %38 to i32
  %39 = ptrtoint ptr %sam_task_attr to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %sam_task_attr, align 8
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @target_handle_task_attr.__UNIQUE_ID_ddebug674, ptr noundef nonnull @.str.310, i32 noundef %conv58, i32 noundef %40) #16
  br label %do.end62

do.end62:                                         ; preds = %if.then55, %list_add_tail.exit
  %delayed_cmd_work = getelementptr inbounds %struct.se_device, ptr %1, i32 0, i32 32
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %41 = load ptr, ptr @system_wq, align 4
  %call.i.i96 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %41, ptr noundef %delayed_cmd_work) #16
  br label %cleanup

cleanup:                                          ; preds = %do.end62, %sw.default.cleanup_crit_edge, %if.then4, %sw.bb, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ true, %do.end62 ], [ false, %entry.cleanup_crit_edge ], [ false, %if.then4 ], [ false, %sw.default.cleanup_crit_edge ], [ false, %sw.bb ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @target_do_delayed_work(ptr noundef %work) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %delayed_cmd_lock = getelementptr i8, ptr %work, i32 -352
  tail call void @_raw_spin_lock(ptr noundef %delayed_cmd_lock) #16
  %delayed_cmd_list = getelementptr i8, ptr %work, i32 44
  %non_ordered = getelementptr i8, ptr %work, i32 -372
  %ordered_sync_in_progress = getelementptr i8, ptr %work, i32 -368
  %0 = ptrtoint ptr %ordered_sync_in_progress to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %ordered_sync_in_progress, align 4, !range !780
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not39 = icmp eq i8 %1, 0
  br i1 %tobool.not39, label %while.body.lr.ph, label %entry.while.end_crit_edge

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %delayed_cmd_count = getelementptr i8, ptr %work, i32 -364
  br label %while.body

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %while.body.lr.ph
  %2 = ptrtoint ptr %delayed_cmd_list to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %delayed_cmd_list, align 4
  %cmp.i.not = icmp eq ptr %3, %delayed_cmd_list
  br i1 %cmp.i.not, label %while.body.while.end_crit_edge, label %if.end

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

if.end:                                           ; preds = %while.body
  %add.ptr5 = getelementptr i8, ptr %3, i32 -84
  %sam_task_attr = getelementptr i8, ptr %3, i32 -52
  %4 = ptrtoint ptr %sam_task_attr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sam_task_attr, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 34, i32 %5)
  %cmp = icmp eq i32 %5, 34
  br i1 %cmp, label %if.then6, label %if.end.if.end12_crit_edge

if.end.if.end12_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end12

if.then6:                                         ; preds = %if.end
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %non_ordered, i32 noundef 4) #16
  %6 = ptrtoint ptr %non_ordered to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %non_ordered, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp8 = icmp sgt i32 %7, 0
  br i1 %cmp8, label %if.then6.while.end_crit_edge, label %if.end10

if.then6.while.end_crit_edge:                     ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

if.end10:                                         ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #18
  %8 = ptrtoint ptr %ordered_sync_in_progress to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 1, ptr %ordered_sync_in_progress, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.end10, %if.end.if.end12_crit_edge
  %call.i.i35 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %3) #16
  br i1 %call.i.i35, label %if.end.i.i, label %if.end12.list_del.exit_crit_edge

if.end12.list_del.exit_crit_edge:                 ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 1
  %9 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %prev.i.i, align 4
  %11 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %3, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %10, ptr %prev1.i.i.i, align 4
  %14 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %12, ptr %10, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.end12.list_del.exit_crit_edge
  %15 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr inttoptr (i32 256 to ptr), ptr %3, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 1
  %16 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !786
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %delayed_cmd_count, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %delayed_cmd_count, i32 1, i32 3, i32 1) #16
  %17 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %delayed_cmd_count, ptr %delayed_cmd_count, i32 1, ptr elementtype(i32) %delayed_cmd_count) #16, !srcloc !787
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !788
  tail call void @_raw_spin_unlock(ptr noundef %delayed_cmd_lock) #16
  %18 = ptrtoint ptr %sam_task_attr to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %sam_task_attr, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 34, i32 %19)
  %cmp15.not = icmp eq i32 %19, 34
  br i1 %cmp15.not, label %list_del.exit.cleanup_crit_edge, label %if.then16

list_del.exit.cleanup_crit_edge:                  ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then16:                                        ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !811
  %call.i.i.i36 = tail call zeroext i1 @__kasan_check_write(ptr noundef %non_ordered, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %non_ordered, i32 1, i32 3, i32 1) #16
  %20 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %non_ordered, ptr %non_ordered, i32 1, ptr elementtype(i32) %non_ordered) #16, !srcloc !784
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !812
  br label %cleanup

cleanup:                                          ; preds = %if.then16, %list_del.exit.cleanup_crit_edge
  %transport_state = getelementptr i8, ptr %3, i32 112
  %21 = ptrtoint ptr %transport_state to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %transport_state, align 4
  %or = or i32 %22, 16
  store i32 %or, ptr %transport_state, align 4
  tail call void @__target_execute_cmd(ptr noundef %add.ptr5, i1 noundef zeroext true)
  tail call void @_raw_spin_lock(ptr noundef %delayed_cmd_lock) #16
  %23 = ptrtoint ptr %ordered_sync_in_progress to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %ordered_sync_in_progress, align 4, !range !780
  %tobool.not = icmp eq i8 %24, 0
  br i1 %tobool.not, label %cleanup.while.body_crit_edge, label %cleanup.while.end_crit_edge

cleanup.while.end_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body

while.end:                                        ; preds = %cleanup.while.end_crit_edge, %if.then6.while.end_crit_edge, %while.body.while.end_crit_edge, %entry.while.end_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %delayed_cmd_lock) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @target_free_sgl(ptr noundef %sgl, i32 noundef %nents) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @sgl_free_n_order(ptr noundef %sgl, i32 noundef %nents, i32 noundef 0) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @sgl_free_n_order(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @transport_kmap_data_sg(ptr nocapture noundef %cmd) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %t_data_sg = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 39
  %0 = ptrtoint ptr %t_data_sg to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %t_data_sg, align 4
  %t_data_nents = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 41
  %2 = ptrtoint ptr %t_data_nents to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %t_data_nents, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %do.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body:                                          ; preds = %entry
  %tobool1.not = icmp eq ptr %1, null
  br i1 %tobool1.not, label %do.body6, label %do.end12, !prof !768

do.body6:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/target/target_core_transport.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2690, 0\0A.popsection", ""() #16, !srcloc !813
  unreachable

do.end12:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp = icmp eq i32 %3, 1
  br i1 %cmp, label %if.then14, label %if.end16

if.then14:                                        ; preds = %do.end12
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %1, align 4
  %and.i.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %sg_page.exit, label %do.body2.i, !prof !767

do.body2.i:                                       ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/scatterlist.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 144, 0\0A.popsection", ""() #16, !srcloc !801
  unreachable

sg_page.exit:                                     ; preds = %if.then14
  %and.i = and i32 %5, -4
  %6 = inttoptr i32 %and.i to ptr
  tail call void @__might_sleep(ptr noundef nonnull @.str.305, i32 noundef 44) #16
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %6, align 4
  %shr.i.i = lshr i32 %8, 30
  %9 = zext i32 %shr.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %9, ptr @__sancov_gen_cov_switch_values.376)
  switch i32 %shr.i.i, label %sg_page.exit.if.then.i_crit_edge [
    i32 2, label %sg_page.exit.if.else.i_crit_edge
    i32 3, label %is_highmem_idx.exit.i
  ]

sg_page.exit.if.else.i_crit_edge:                 ; preds = %sg_page.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

sg_page.exit.if.then.i_crit_edge:                 ; preds = %sg_page.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i

is_highmem_idx.exit.i:                            ; preds = %sg_page.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @movable_zone to i32))
  %10 = load i32, ptr @movable_zone, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %10)
  %cmp2.i.not.i = icmp eq i32 %10, 2
  br i1 %cmp2.i.not.i, label %is_highmem_idx.exit.i.if.else.i_crit_edge, label %is_highmem_idx.exit.i.if.then.i_crit_edge

is_highmem_idx.exit.i.if.then.i_crit_edge:        ; preds = %is_highmem_idx.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i

is_highmem_idx.exit.i.if.else.i_crit_edge:        ; preds = %is_highmem_idx.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

if.then.i:                                        ; preds = %is_highmem_idx.exit.i.if.then.i_crit_edge, %sg_page.exit.if.then.i_crit_edge
  %call5.i = tail call ptr @page_address(ptr noundef %6) #16
  br label %cleanup.sink.split

if.else.i:                                        ; preds = %is_highmem_idx.exit.i.if.else.i_crit_edge, %sg_page.exit.if.else.i_crit_edge
  %call6.i = tail call ptr @kmap_high(ptr noundef %6) #16
  br label %cleanup.sink.split

if.end16:                                         ; preds = %do.end12
  %11 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %3, i32 4) #16
  %12 = extractvalue { i32, i1 } %11, 1
  br i1 %12, label %if.end16.cleanup_crit_edge, label %if.end7.i, !prof !768

if.end16.cleanup_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end7.i:                                        ; preds = %if.end16
  %13 = extractvalue { i32, i1 } %11, 0
  %call8.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %13, i32 noundef 3264) #22
  %tobool19.not = icmp eq ptr %call8.i, null
  br i1 %tobool19.not, label %if.end7.i.cleanup_crit_edge, label %if.end21

if.end7.i.cleanup_crit_edge:                      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end21:                                         ; preds = %if.end7.i
  %14 = ptrtoint ptr %t_data_nents to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %t_data_nents, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp2473.not = icmp eq i32 %15, 0
  br i1 %cmp2473.not, label %if.end21.for.end_crit_edge, label %for.body.preheader

if.end21.for.end_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.preheader:                               ; preds = %if.end21
  %16 = ptrtoint ptr %t_data_sg to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %t_data_sg, align 4
  br label %for.body

for.body:                                         ; preds = %sg_page.exit65.for.body_crit_edge, %for.body.preheader
  %i.075 = phi i32 [ %inc, %sg_page.exit65.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %sg.074 = phi ptr [ %call26, %sg_page.exit65.for.body_crit_edge ], [ %17, %for.body.preheader ]
  %18 = ptrtoint ptr %sg.074 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %sg.074, align 4
  %and.i.i61 = and i32 %19, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i61)
  %tobool.i.not.i62 = icmp eq i32 %and.i.i61, 0
  br i1 %tobool.i.not.i62, label %sg_page.exit65, label %do.body2.i63, !prof !767

do.body2.i63:                                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/scatterlist.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 144, 0\0A.popsection", ""() #16, !srcloc !801
  unreachable

sg_page.exit65:                                   ; preds = %for.body
  %and.i64 = and i32 %19, -4
  %20 = inttoptr i32 %and.i64 to ptr
  %arrayidx = getelementptr ptr, ptr %call8.i, i32 %i.075
  %21 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %20, ptr %arrayidx, align 4
  %inc = add nuw i32 %i.075, 1
  %call26 = tail call ptr @sg_next(ptr noundef %sg.074) #16
  %22 = ptrtoint ptr %t_data_nents to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %t_data_nents, align 4
  %cmp24 = icmp ult i32 %inc, %23
  br i1 %cmp24, label %sg_page.exit65.for.body_crit_edge, label %sg_page.exit65.for.end_crit_edge

sg_page.exit65.for.end_crit_edge:                 ; preds = %sg_page.exit65
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

sg_page.exit65.for.body_crit_edge:                ; preds = %sg_page.exit65
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %sg_page.exit65.for.end_crit_edge, %if.end21.for.end_crit_edge
  %.lcssa = phi i32 [ 0, %if.end21.for.end_crit_edge ], [ %23, %sg_page.exit65.for.end_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %24 = load i32, ptr @pgprot_kernel, align 4
  %or = or i32 %24, 512
  %call28 = tail call ptr @vmap(ptr noundef nonnull %call8.i, i32 noundef %.lcssa, i32 noundef 4, i32 noundef %or) #16
  %t_data_vmap = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 43
  %25 = ptrtoint ptr %t_data_vmap to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %call28, ptr %t_data_vmap, align 4
  tail call void @kfree(ptr noundef nonnull %call8.i) #16
  %26 = ptrtoint ptr %t_data_vmap to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %t_data_vmap, align 4
  %tobool30.not = icmp eq ptr %27, null
  br i1 %tobool30.not, label %for.end.cleanup_crit_edge, label %if.end32

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end32:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  %28 = ptrtoint ptr %t_data_sg to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %t_data_sg, align 4
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end32, %if.else.i, %if.then.i
  %.sink79 = phi ptr [ %29, %if.end32 ], [ %1, %if.then.i ], [ %1, %if.else.i ]
  %.sink = phi ptr [ %27, %if.end32 ], [ %call5.i, %if.then.i ], [ %call6.i, %if.else.i ]
  %offset36 = getelementptr inbounds %struct.scatterlist, ptr %.sink79, i32 0, i32 1
  %30 = ptrtoint ptr %offset36 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %offset36, align 4
  %add.ptr37 = getelementptr i8, ptr %.sink, i32 %31
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %for.end.cleanup_crit_edge, %if.end7.i.cleanup_crit_edge, %if.end16.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %entry.cleanup_crit_edge ], [ null, %if.end7.i.cleanup_crit_edge ], [ null, %for.end.cleanup_crit_edge ], [ null, %if.end16.cleanup_crit_edge ], [ %add.ptr37, %cleanup.sink.split ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @sg_next(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @vmap(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @transport_kunmap_data_sg(ptr nocapture noundef %cmd) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %t_data_nents = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 41
  %0 = ptrtoint ptr %t_data_nents to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %t_data_nents, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.377)
  switch i32 %1, label %if.end3 [
    i32 0, label %entry.return_crit_edge
    i32 1, label %if.then2
  ]

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.then2:                                         ; preds = %entry
  %t_data_sg = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 39
  %3 = ptrtoint ptr %t_data_sg to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %t_data_sg, align 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %4, align 4
  %and.i.i = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %sg_page.exit, label %do.body2.i, !prof !767

do.body2.i:                                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/scatterlist.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 144, 0\0A.popsection", ""() #16, !srcloc !801
  unreachable

sg_page.exit:                                     ; preds = %if.then2
  %and.i = and i32 %6, -4
  %7 = inttoptr i32 %and.i to ptr
  tail call void @__might_sleep(ptr noundef nonnull @.str.305, i32 noundef 55) #16
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %shr.i.i = lshr i32 %9, 30
  %10 = zext i32 %shr.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.378)
  switch i32 %shr.i.i, label %sg_page.exit.return_crit_edge [
    i32 2, label %sg_page.exit.if.end.i_crit_edge
    i32 3, label %is_highmem_idx.exit.i
  ]

sg_page.exit.if.end.i_crit_edge:                  ; preds = %sg_page.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

sg_page.exit.return_crit_edge:                    ; preds = %sg_page.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

is_highmem_idx.exit.i:                            ; preds = %sg_page.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @movable_zone to i32))
  %11 = load i32, ptr @movable_zone, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %11)
  %cmp2.i.not.i = icmp eq i32 %11, 2
  br i1 %cmp2.i.not.i, label %is_highmem_idx.exit.i.if.end.i_crit_edge, label %is_highmem_idx.exit.i.return_crit_edge

is_highmem_idx.exit.i.return_crit_edge:           ; preds = %is_highmem_idx.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

is_highmem_idx.exit.i.if.end.i_crit_edge:         ; preds = %is_highmem_idx.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.end.i:                                         ; preds = %is_highmem_idx.exit.i.if.end.i_crit_edge, %sg_page.exit.if.end.i_crit_edge
  tail call void @kunmap_high(ptr noundef %7) #16
  br label %return

if.end3:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %t_data_vmap = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 43
  %12 = ptrtoint ptr %t_data_vmap to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %t_data_vmap, align 4
  tail call void @vunmap(ptr noundef %13) #16
  %14 = ptrtoint ptr %t_data_vmap to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %t_data_vmap, align 4
  br label %return

return:                                           ; preds = %if.end3, %if.end.i, %is_highmem_idx.exit.i.return_crit_edge, %sg_page.exit.return_crit_edge, %entry.return_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @vunmap(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @target_alloc_sgl(ptr nocapture noundef writeonly %sgl, ptr noundef %nents, i32 noundef %length, i1 noundef zeroext %zero_page, i1 noundef zeroext %chainable) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %or = select i1 %zero_page, i32 3520, i32 3264
  %conv = zext i32 %length to i64
  %call = tail call ptr @sgl_alloc_order(i64 noundef %conv, i32 noundef 0, i1 noundef zeroext %chainable, i32 noundef %or, ptr noundef %nents) #16
  %0 = ptrtoint ptr %sgl to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %call, ptr %sgl, align 4
  %tobool3.not = icmp eq ptr %call, null
  %cond4 = select i1 %tobool3.not, i32 -12, i32 0
  ret i32 %cond4
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @sgl_alloc_order(i64 noundef, i32 noundef, i1 noundef zeroext, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @complete_all(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @target_put_cmd_and_wait(ptr noundef %cmd) local_unnamed_addr #0 align 64 {
entry:
  %compl = alloca %struct.completion, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %compl) #16
  %0 = getelementptr inbounds i8, ptr %compl, i32 4
  %1 = call ptr @memset(ptr %0, i32 255, i32 52)
  %2 = ptrtoint ptr %compl to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %compl, align 4
  %wait.i = getelementptr inbounds %struct.completion, ptr %compl, i32 0, i32 1
  call void @__init_swait_queue_head(ptr noundef %wait.i, ptr noundef nonnull @.str.289, ptr noundef nonnull @init_completion.__key) #16
  %abrt_compl = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 25
  %3 = ptrtoint ptr %abrt_compl to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %abrt_compl, align 4
  %tobool.not = icmp eq ptr %4, null
  br i1 %tobool.not, label %entry.if.end29_crit_edge, label %land.rhs

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b42 = load i1, ptr @target_put_cmd_and_wait.__already_done, align 1
  br i1 %.b42, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !767

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @target_put_cmd_and_wait.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2891, i32 noundef 9, ptr noundef null) #16
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  %5 = ptrtoint ptr %abrt_compl to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %compl, ptr %abrt_compl, align 4
  %call = call i32 @target_put_sess_cmd(ptr noundef %cmd)
  call void @wait_for_completion(ptr noundef nonnull %compl) #16
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %compl) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @wait_for_completion(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @transport_generic_free_cmd(ptr noundef %cmd, i32 noundef %wait_for_tasks) #0 align 64 {
entry:
  %flags.i = alloca i32, align 4
  %compl = alloca %struct.completion, align 4
  %aborted = alloca i8, align 1
  %tas = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %compl) #16
  %0 = getelementptr inbounds i8, ptr %compl, i32 4
  %1 = call ptr @memset(ptr %0, i32 255, i32 52)
  %2 = ptrtoint ptr %compl to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %compl, align 4
  %wait.i = getelementptr inbounds %struct.completion, ptr %compl, i32 0, i32 1
  call void @__init_swait_queue_head(ptr noundef %wait.i, ptr noundef nonnull @.str.289, ptr noundef nonnull @init_completion.__key) #16
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %aborted) #16
  %3 = ptrtoint ptr %aborted to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 0, ptr %aborted, align 1
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tas) #16
  %4 = ptrtoint ptr %tas to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %tas, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %wait_for_tasks)
  %tobool.not = icmp eq i32 %wait_for_tasks, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flags.i) #16
  %t_state_lock.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 35
  %call2.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %t_state_lock.i) #16
  %5 = ptrtoint ptr %flags.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %call2.i, ptr %flags.i, align 4
  %call5.i = call fastcc zeroext i1 @__transport_wait_for_tasks(ptr noundef %cmd, i1 noundef zeroext true, ptr noundef nonnull %aborted, ptr noundef nonnull %tas, ptr noundef nonnull %flags.i) #16
  %6 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags.i, align 4
  call void @_raw_spin_unlock_irqrestore(ptr noundef %t_state_lock.i, i32 noundef %7) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flags.i) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %se_cmd_flags = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 11
  %8 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %se_cmd_flags, align 8
  %and = and i32 %9, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %if.end.if.end8_crit_edge, label %if.then2

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

if.then2:                                         ; preds = %if.end
  %state_active = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 3
  %10 = ptrtoint ptr %state_active to i32
  call void @__asan_load1_noabort(i32 %10)
  %bf.load = load i8, ptr %state_active, align 8
  %11 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %bf.cast.not = icmp eq i8 %11, 0
  br i1 %bf.cast.not, label %if.then2.if.end4_crit_edge, label %if.then3

if.then2.if.end4_crit_edge:                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

if.then3:                                         ; preds = %if.then2
  %se_dev.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 19
  %12 = ptrtoint ptr %se_dev.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %se_dev.i, align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.then3.if.end4_crit_edge, label %do.body1.i

if.then3.if.end4_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

do.body1.i:                                       ; preds = %if.then3
  %queues.i = getelementptr inbounds %struct.se_device, ptr %13, i32 0, i32 52
  %14 = ptrtoint ptr %queues.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %queues.i, align 4
  %cpuid.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 59
  %16 = ptrtoint ptr %cpuid.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %cpuid.i, align 8
  %lock.i = getelementptr %struct.se_device_queue, ptr %15, i32 %17, i32 1
  %call2.i30 = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i) #16
  %18 = ptrtoint ptr %state_active to i32
  call void @__asan_load1_noabort(i32 %18)
  %bf.load.i = load i8, ptr %state_active, align 8
  %19 = and i8 %bf.load.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %bf.cast.not.i = icmp eq i8 %19, 0
  br i1 %bf.cast.not.i, label %do.body1.i.if.end9.i_crit_edge, label %if.then5.i

do.body1.i.if.end9.i_crit_edge:                   ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9.i

if.then5.i:                                       ; preds = %do.body1.i
  %state_list.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 47
  %call.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %state_list.i) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then5.i.list_del.exit.i_crit_edge

if.then5.i.list_del.exit.i_crit_edge:             ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 47, i32 1
  %20 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %prev.i.i.i, align 4
  %22 = ptrtoint ptr %state_list.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %state_list.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %21, ptr %prev1.i.i.i.i, align 4
  %25 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %23, ptr %21, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %if.then5.i.list_del.exit.i_crit_edge
  %26 = ptrtoint ptr %state_list.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr inttoptr (i32 256 to ptr), ptr %state_list.i, align 4
  %prev.i.i = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 47, i32 1
  %27 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  %28 = ptrtoint ptr %state_active to i32
  call void @__asan_load1_noabort(i32 %28)
  %bf.load7.i = load i8, ptr %state_active, align 8
  %bf.clear8.i = and i8 %bf.load7.i, -65
  store i8 %bf.clear8.i, ptr %state_active, align 8
  br label %if.end9.i

if.end9.i:                                        ; preds = %list_del.exit.i, %do.body1.i.if.end9.i_crit_edge
  %29 = ptrtoint ptr %queues.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %queues.i, align 4
  %31 = ptrtoint ptr %cpuid.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %cpuid.i, align 8
  %lock13.i = getelementptr %struct.se_device_queue, ptr %30, i32 %32, i32 1
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock13.i, i32 noundef %call2.i30) #16
  br label %if.end4

if.end4:                                          ; preds = %if.end9.i, %if.then3.if.end4_crit_edge, %if.then2.if.end4_crit_edge
  %se_lun = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 20
  %33 = ptrtoint ptr %se_lun to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %se_lun, align 8
  %tobool5.not = icmp eq ptr %34, null
  br i1 %tobool5.not, label %if.end4.if.end8_crit_edge, label %if.then6

if.end4.if.end8_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

if.then6:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  call fastcc void @transport_lun_remove_cmd(ptr noundef %cmd)
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %if.end4.if.end8_crit_edge, %if.end.if.end8_crit_edge
  %35 = ptrtoint ptr %aborted to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %aborted, align 1, !range !780
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %tobool9.not = icmp eq i8 %36, 0
  br i1 %tobool9.not, label %if.end11.thread, label %do.body

if.end11.thread:                                  ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  %call31 = call i32 @target_put_sess_cmd(ptr noundef %cmd)
  br label %if.end21

do.body:                                          ; preds = %if.end8
  %free_compl = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 24
  %37 = ptrtoint ptr %free_compl to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %compl, ptr %free_compl, align 8
  %call = call i32 @target_put_sess_cmd(ptr noundef %cmd)
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @transport_generic_free_cmd.__UNIQUE_ID_ddebug682, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@transport_generic_free_cmd, %if.then19)) #16
          to label %do.end [label %if.then19], !srcloc !779

if.then19:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %tag = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 4
  %38 = ptrtoint ptr %tag to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %tag, align 8
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @transport_generic_free_cmd.__UNIQUE_ID_ddebug682, ptr noundef nonnull @.str.146, i64 noundef %39) #16
  br label %do.end

do.end:                                           ; preds = %if.then19, %do.body
  call void @wait_for_completion(ptr noundef nonnull %compl) #16
  br label %if.end21

if.end21:                                         ; preds = %do.end, %if.end11.thread
  %ret.0 = phi i32 [ 1, %do.end ], [ %call31, %if.end11.thread ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tas) #16
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %aborted) #16
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %compl) #16
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @target_stop_session(ptr noundef %se_sess) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @target_stop_session.__UNIQUE_ID_ddebug685, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@target_stop_session, %if.then)) #16
          to label %do.end [label %if.then], !srcloc !779

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @target_stop_session.__UNIQUE_ID_ddebug685, ptr noundef nonnull @.str.151) #16
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %se_sess, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !814
  tail call void @llvm.prefetch.p0(ptr %se_sess, i32 1, i32 3, i32 1) #16
  br label %do.body.i.i.i

do.body.i.i.i:                                    ; preds = %do.body.i.i.i.do.body.i.i.i_crit_edge, %do.end
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %se_sess, ptr %se_sess, i32 0, i32 1, ptr elementtype(i32) %se_sess) #16, !srcloc !815
  %asmresult.i.i.i = extractvalue { i32, i32 } %0, 0
  %tobool.not.i.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %atomic_cmpxchg.exit, label %do.body.i.i.i.do.body.i.i.i_crit_edge

do.body.i.i.i.do.body.i.i.i_crit_edge:            ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i.i.i

atomic_cmpxchg.exit:                              ; preds = %do.body.i.i.i
  %asmresult3.i.i.i = extractvalue { i32, i32 } %0, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !816
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult3.i.i.i)
  %cmp = icmp eq i32 %asmresult3.i.i.i, 0
  br i1 %cmp, label %if.then4, label %atomic_cmpxchg.exit.if.end5_crit_edge

atomic_cmpxchg.exit.if.end5_crit_edge:            ; preds = %atomic_cmpxchg.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

if.then4:                                         ; preds = %atomic_cmpxchg.exit
  call void @__sanitizer_cov_trace_pc() #18
  %cmd_count = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 7
  tail call void @percpu_ref_kill_and_confirm(ptr noundef %cmd_count, ptr noundef nonnull @target_stop_session_confirm) #16
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %atomic_cmpxchg.exit.if.end5_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @percpu_ref_kill_and_confirm(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @target_stop_session_confirm(ptr noundef %ref) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %stop_done = getelementptr i8, ptr %ref, i32 120
  tail call void @complete_all(ptr noundef %stop_done) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @target_wait_for_sess_cmds(ptr noundef %se_sess) #0 align 64 {
entry:
  %__wq_entry = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %se_sess, i32 noundef 4) #16
  %0 = ptrtoint ptr %se_sess to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %se_sess, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end29_crit_edge

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b132 = load i1, ptr @target_wait_for_sess_cmds.__already_done, align 1
  br i1 %.b132, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !767

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @target_wait_for_sess_cmds.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 3154, i32 noundef 9, ptr noundef null) #16
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  %cmd_count = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 7
  %cmd_count_wq = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 11
  br label %do.body37

do.body37:                                        ; preds = %if.end97.do.body37_crit_edge, %if.end29
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @target_wait_for_sess_cmds.__UNIQUE_ID_ddebug686, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@target_wait_for_sess_cmds, %if.then49)) #16
          to label %do.end52 [label %if.then49], !srcloc !779

if.then49:                                        ; preds = %do.body37
  call void @__sanitizer_cov_trace_pc() #18
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @target_wait_for_sess_cmds.__UNIQUE_ID_ddebug686, ptr noundef nonnull @.str.153) #16
  br label %do.end52

do.end52:                                         ; preds = %if.then49, %do.body37
  call void @__might_sleep(ptr noundef nonnull @.str.3, i32 noundef 3160) #16
  %call59 = call zeroext i1 @percpu_ref_is_zero(ptr noundef %cmd_count) #16
  br i1 %call59, label %do.end52.do.end100_crit_edge, label %if.then71

do.end52.do.end100_crit_edge:                     ; preds = %do.end52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end100

if.then71:                                        ; preds = %do.end52
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %__wq_entry) #16
  %2 = call ptr @memset(ptr %__wq_entry, i32 255, i32 20)
  call void @init_wait_entry(ptr noundef nonnull %__wq_entry, i32 noundef 0) #16
  %call73144 = call i32 @prepare_to_wait_event(ptr noundef %cmd_count_wq, ptr noundef nonnull %__wq_entry, i32 noundef 2) #16
  %call76145 = call zeroext i1 @percpu_ref_is_zero(ptr noundef %cmd_count) #16
  br i1 %call76145, label %if.end97.thread, label %if.then71.cleanup_crit_edge

if.then71.cleanup_crit_edge:                      ; preds = %if.then71
  br label %cleanup

if.end97.thread:                                  ; preds = %if.then71
  call void @__sanitizer_cov_trace_pc() #18
  call void @finish_wait(ptr noundef %cmd_count_wq, ptr noundef nonnull %__wq_entry) #16
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry) #16
  br label %do.end100

cleanup:                                          ; preds = %cleanup.cleanup_crit_edge, %if.then71.cleanup_crit_edge
  %__ret72.1146 = phi i32 [ %__ret72.1, %cleanup.cleanup_crit_edge ], [ 18000, %if.then71.cleanup_crit_edge ]
  %call94 = call i32 @schedule_timeout(i32 noundef %__ret72.1146) #16
  %call73 = call i32 @prepare_to_wait_event(ptr noundef %cmd_count_wq, ptr noundef nonnull %__wq_entry, i32 noundef 2) #16
  %call76 = call zeroext i1 @percpu_ref_is_zero(ptr noundef %cmd_count) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call94)
  %tobool80.not = icmp eq i32 %call94, 0
  %3 = select i1 %call76, i1 %tobool80.not, i1 false
  %__ret72.1 = select i1 %3, i32 1, i32 %call94
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %__ret72.1)
  %tobool86.not = icmp eq i32 %__ret72.1, 0
  %4 = select i1 %call76, i1 true, i1 %tobool86.not
  br i1 %4, label %if.end97, label %cleanup.cleanup_crit_edge

cleanup.cleanup_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end97:                                         ; preds = %cleanup
  call void @finish_wait(ptr noundef %cmd_count_wq, ptr noundef nonnull %__wq_entry) #16
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %__wq_entry) #16
  %cmp = icmp slt i32 %__ret72.1, 1
  br i1 %cmp, label %if.end97.do.body37_crit_edge, label %if.end97.do.end100_crit_edge

if.end97.do.end100_crit_edge:                     ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end100

if.end97.do.body37_crit_edge:                     ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body37

do.end100:                                        ; preds = %if.end97.do.end100_crit_edge, %if.end97.thread, %do.end52.do.end100_crit_edge
  %stop_done = getelementptr inbounds %struct.se_session, ptr %se_sess, i32 0, i32 12
  call void @wait_for_completion(ptr noundef %stop_done) #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @target_wait_for_sess_cmds.__UNIQUE_ID_ddebug687, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@target_wait_for_sess_cmds, %if.then113)) #16
          to label %do.end116 [label %if.then113], !srcloc !779

if.then113:                                       ; preds = %do.end100
  call void @__sanitizer_cov_trace_pc() #18
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @target_wait_for_sess_cmds.__UNIQUE_ID_ddebug687, ptr noundef nonnull @.str.154) #16
  br label %do.end116

do.end116:                                        ; preds = %if.then113, %do.end100
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @percpu_ref_is_zero(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_wait_entry(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @prepare_to_wait_event(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @schedule_timeout(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @finish_wait(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @transport_clear_lun_ref(ptr noundef %lun) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %lun_ref = getelementptr inbounds %struct.se_lun, ptr %lun, i32 0, i32 21
  tail call void @percpu_ref_kill_and_confirm(ptr noundef %lun_ref, ptr noundef null) #16
  %lun_shutdown_comp = getelementptr inbounds %struct.se_lun, ptr %lun, i32 0, i32 20
  tail call void @wait_for_completion(ptr noundef %lun_shutdown_comp) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @transport_wait_for_tasks(ptr noundef %cmd) #0 align 64 {
entry:
  %flags = alloca i32, align 4
  %aborted = alloca i8, align 1
  %tas = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flags) #16
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %aborted) #16
  %0 = ptrtoint ptr %aborted to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 0, ptr %aborted, align 1
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %tas) #16
  %t_state_lock = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 35
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %t_state_lock) #16
  %1 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %call2, ptr %flags, align 4
  %call5 = call fastcc zeroext i1 @__transport_wait_for_tasks(ptr noundef %cmd, i1 noundef zeroext false, ptr noundef nonnull %aborted, ptr noundef nonnull %tas, ptr noundef nonnull %flags)
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %t_state_lock, i32 noundef %3) #16
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %tas) #16
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %aborted) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flags) #16
  ret i1 %call5
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @__transport_wait_for_tasks(ptr noundef %cmd, i1 noundef zeroext %fabric_stop, ptr nocapture noundef %aborted, ptr nocapture noundef writeonly %tas, ptr nocapture noundef %flags) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.rhs:                                         ; preds = %entry
  %dep_map = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 35, i32 0, i32 0, i32 4
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !768

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 3184, i32 noundef 9, ptr noundef null) #16
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  br i1 %fabric_stop, label %if.then25, label %if.end.if.end26_crit_edge

if.end.if.end26_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end26

if.then25:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %transport_state = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 34
  %1 = ptrtoint ptr %transport_state to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %transport_state, align 4
  %or = or i32 %2, 2048
  store i32 %or, ptr %transport_state, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.then25, %if.end.if.end26_crit_edge
  %transport_state27 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 34
  %3 = ptrtoint ptr %transport_state27 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %transport_state27, align 4
  %and = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool28.not = icmp eq i32 %and, 0
  br i1 %tobool28.not, label %if.end26.if.end30_crit_edge, label %if.then29

if.end26.if.end30_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end30

if.then29:                                        ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #18
  %5 = ptrtoint ptr %aborted to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 1, ptr %aborted, align 1
  br label %if.end30

if.end30:                                         ; preds = %if.then29, %if.end26.if.end30_crit_edge
  %6 = ptrtoint ptr %transport_state27 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %transport_state27, align 4
  %and32 = and i32 %7, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32)
  %tobool33.not = icmp eq i32 %and32, 0
  br i1 %tobool33.not, label %if.end30.if.end35_crit_edge, label %if.then34

if.end30.if.end35_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end35

if.then34:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #18
  %8 = ptrtoint ptr %tas to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 1, ptr %tas, align 1
  br label %if.end35

if.end35:                                         ; preds = %if.then34, %if.end30.if.end35_crit_edge
  %se_cmd_flags = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 11
  %9 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %se_cmd_flags, align 8
  %11 = and i32 %10, 80
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %12 = icmp eq i32 %11, 0
  %13 = and i32 %10, 17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %14 = icmp eq i32 %13, 0
  %or.cond = or i1 %12, %14
  br i1 %or.cond, label %if.end35.return_crit_edge, label %if.end51

if.end35.return_crit_edge:                        ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end51:                                         ; preds = %if.end35
  %15 = ptrtoint ptr %transport_state27 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %transport_state27, align 4
  %and53 = and i32 %16, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and53)
  %tobool54.not = icmp eq i32 %and53, 0
  br i1 %tobool54.not, label %if.end51.return_crit_edge, label %if.end56

if.end51.return_crit_edge:                        ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end56:                                         ; preds = %if.end51
  br i1 %fabric_stop, label %land.lhs.true58, label %if.end56.if.end61_crit_edge

if.end56.if.end61_crit_edge:                      ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end61

land.lhs.true58:                                  ; preds = %if.end56
  %17 = ptrtoint ptr %aborted to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %aborted, align 1, !range !780
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool59.not = icmp eq i8 %18, 0
  br i1 %tobool59.not, label %land.lhs.true58.if.end61_crit_edge, label %land.lhs.true58.return_crit_edge

land.lhs.true58.return_crit_edge:                 ; preds = %land.lhs.true58
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

land.lhs.true58.if.end61_crit_edge:               ; preds = %land.lhs.true58
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end61

if.end61:                                         ; preds = %land.lhs.true58.if.end61_crit_edge, %if.end56.if.end61_crit_edge
  %or63 = or i32 %16, 32
  %19 = ptrtoint ptr %transport_state27 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %or63, ptr %transport_state27, align 4
  tail call void @target_show_cmd(ptr noundef nonnull @.str.344, ptr noundef %cmd)
  %t_state_lock64 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 35
  %20 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flags, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %t_state_lock64, i32 noundef %21) #16
  %t_transport_stop_comp = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 37
  %call65120 = tail call i32 @wait_for_completion_timeout(ptr noundef %t_transport_stop_comp, i32 noundef 18000) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call65120)
  %tobool66.not121 = icmp eq i32 %call65120, 0
  br i1 %tobool66.not121, label %if.end61.while.body_crit_edge, label %if.end61.do.body70_crit_edge

if.end61.do.body70_crit_edge:                     ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body70

if.end61.while.body_crit_edge:                    ; preds = %if.end61
  br label %while.body

while.body:                                       ; preds = %while.body.while.body_crit_edge, %if.end61.while.body_crit_edge
  tail call void @target_show_cmd(ptr noundef nonnull @.str.345, ptr noundef %cmd)
  %call65 = tail call i32 @wait_for_completion_timeout(ptr noundef %t_transport_stop_comp, i32 noundef 18000) #16
  %tobool66.not = icmp eq i32 %call65, 0
  br i1 %tobool66.not, label %while.body.while.body_crit_edge, label %while.body.do.body70_crit_edge

while.body.do.body70_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body70

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body

do.body70:                                        ; preds = %while.body.do.body70_crit_edge, %if.end61.do.body70_crit_edge
  %call75 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %t_state_lock64) #16
  %22 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %call75, ptr %flags, align 4
  %23 = ptrtoint ptr %transport_state27 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %transport_state27, align 4
  %and81 = and i32 %24, -35
  store i32 %and81, ptr %transport_state27, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__transport_wait_for_tasks.__UNIQUE_ID_ddebug688, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__transport_wait_for_tasks, %if.then93)) #16
          to label %return [label %if.then93], !srcloc !779

if.then93:                                        ; preds = %do.body70
  call void @__sanitizer_cov_trace_pc() #18
  %tag = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 4
  %25 = ptrtoint ptr %tag to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %tag, align 8
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @__transport_wait_for_tasks.__UNIQUE_ID_ddebug688, ptr noundef nonnull @.str.347, i64 noundef %26) #16
  br label %return

return:                                           ; preds = %if.then93, %do.body70, %land.lhs.true58.return_crit_edge, %if.end51.return_crit_edge, %if.end35.return_crit_edge
  %retval.0 = phi i1 [ false, %if.end35.return_crit_edge ], [ false, %if.end51.return_crit_edge ], [ false, %land.lhs.true58.return_crit_edge ], [ true, %if.then93 ], [ true, %do.body70 ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @translate_sense_reason(ptr noundef %cmd, i32 noundef %reason) unnamed_addr #0 align 64 {
entry:
  %key = alloca i8, align 1
  %asc = alloca i8, align 1
  %ascq = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %sense_buffer = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 16
  %0 = ptrtoint ptr %sense_buffer to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sense_buffer, align 8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %key) #16
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %asc) #16
  %2 = ptrtoint ptr %asc to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 -1, ptr %asc, align 1, !annotation !769
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %ascq) #16
  %3 = ptrtoint ptr %ascq to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 -1, ptr %ascq, align 1, !annotation !769
  %se_dev = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 19
  %4 = ptrtoint ptr %se_dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %se_dev, align 4
  %call = tail call zeroext i1 @target_sense_desc_format(ptr noundef %5) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 36, i32 %reason)
  %cmp = icmp ult i32 %reason, 36
  br i1 %cmp, label %land.lhs.true, label %entry.if.else_crit_edge

entry.if.else_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

land.lhs.true:                                    ; preds = %entry
  %arrayidx = getelementptr [36 x %struct.sense_detail], ptr @sense_detail_table, i32 0, i32 %reason
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not = icmp eq i8 %7, 0
  br i1 %tobool.not, label %land.lhs.true.if.else_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %entry.if.else_crit_edge
  br label %if.end

if.end:                                           ; preds = %if.else, %land.lhs.true.if.end_crit_edge
  %sd.0 = phi ptr [ getelementptr inbounds ([36 x %struct.sense_detail], ptr @sense_detail_table, i32 0, i32 10), %if.else ], [ %arrayidx, %land.lhs.true.if.end_crit_edge ]
  %8 = ptrtoint ptr %sd.0 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %sd.0, align 1
  %10 = ptrtoint ptr %key to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 %9, ptr %key, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %reason)
  %cmp4 = icmp eq i32 %reason, 14
  br i1 %cmp4, label %if.then6, label %if.else10

if.then6:                                         ; preds = %if.end
  %call7 = call zeroext i1 @core_scsi3_ua_for_check_condition(ptr noundef %cmd, ptr noundef nonnull %key, ptr noundef nonnull %asc, ptr noundef nonnull %ascq) #16
  br i1 %call7, label %if.then6.if.end56_crit_edge, label %if.then8

if.then6.if.end56_crit_edge:                      ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end56

if.then8:                                         ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #18
  %scsi_status = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 1
  %11 = ptrtoint ptr %scsi_status to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 8, ptr %scsi_status, align 4
  br label %cleanup

if.else10:                                        ; preds = %if.end
  %asc11 = getelementptr inbounds %struct.sense_detail, ptr %sd.0, i32 0, i32 1
  %12 = ptrtoint ptr %asc11 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %asc11, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %cmp13 = icmp eq i8 %13, 0
  br i1 %cmp13, label %land.rhs, label %if.else10.if.end46_crit_edge

if.else10.if.end46_crit_edge:                     ; preds = %if.else10
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end46

land.rhs:                                         ; preds = %if.else10
  %.b150 = load i1, ptr @translate_sense_reason.__already_done, align 1
  br i1 %.b150, label %land.rhs.if.end46_crit_edge, label %if.then24, !prof !767

land.rhs.if.end46_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end46

if.then24:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @translate_sense_reason.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 3455, i32 noundef 9, ptr noundef null) #16
  br label %if.end46

if.end46:                                         ; preds = %if.then24, %land.rhs.if.end46_crit_edge, %if.else10.if.end46_crit_edge
  %14 = ptrtoint ptr %asc11 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %asc11, align 1
  %16 = ptrtoint ptr %asc to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %15, ptr %asc, align 1
  %ascq55 = getelementptr inbounds %struct.sense_detail, ptr %sd.0, i32 0, i32 2
  %17 = ptrtoint ptr %ascq55 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %ascq55, align 1
  %19 = ptrtoint ptr %ascq to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 %18, ptr %ascq, align 1
  br label %if.end56

if.end56:                                         ; preds = %if.end46, %if.then6.if.end56_crit_edge
  %se_cmd_flags = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 11
  %20 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %se_cmd_flags, align 8
  %or = or i32 %21, 4
  store i32 %or, ptr %se_cmd_flags, align 8
  %scsi_status57 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 1
  %22 = ptrtoint ptr %scsi_status57 to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 2, ptr %scsi_status57, align 4
  %scsi_sense_length = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 2
  %23 = ptrtoint ptr %scsi_sense_length to i32
  call void @__asan_store2_noabort(i32 %23)
  store i16 96, ptr %scsi_sense_length, align 2
  %conv59 = zext i1 %call to i32
  %24 = ptrtoint ptr %key to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %key, align 1
  %26 = ptrtoint ptr %asc to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %asc, align 1
  %28 = ptrtoint ptr %ascq to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %ascq, align 1
  call void @scsi_build_sense_buffer(i32 noundef %conv59, ptr noundef %1, i8 noundef zeroext %25, i8 noundef zeroext %27, i8 noundef zeroext %29) #16
  %add_sense_info = getelementptr inbounds %struct.sense_detail, ptr %sd.0, i32 0, i32 3
  %30 = ptrtoint ptr %add_sense_info to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %add_sense_info, align 1, !range !780
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %31)
  %tobool60.not = icmp eq i8 %31, 0
  br i1 %tobool60.not, label %if.end56.cleanup_crit_edge, label %if.then61

if.end56.cleanup_crit_edge:                       ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then61:                                        ; preds = %if.end56
  %32 = ptrtoint ptr %scsi_sense_length to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %scsi_sense_length, align 2
  %conv64 = zext i16 %33 to i32
  %sense_info = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 58
  %34 = ptrtoint ptr %sense_info to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %sense_info, align 8
  %call65 = call i32 @scsi_set_sense_information(ptr noundef %1, i32 noundef %conv64, i64 noundef %35) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call65)
  %cmp66 = icmp slt i32 %call65, 0
  br i1 %cmp66, label %land.rhs75, label %if.then61.cleanup_crit_edge

if.then61.cleanup_crit_edge:                      ; preds = %if.then61
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.rhs75:                                       ; preds = %if.then61
  %.b148149 = load i1, ptr @translate_sense_reason.__already_done.348, align 1
  br i1 %.b148149, label %land.rhs75.cleanup_crit_edge, label %if.then86, !prof !767

land.rhs75.cleanup_crit_edge:                     ; preds = %land.rhs75
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then86:                                        ; preds = %land.rhs75
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @translate_sense_reason.__already_done.348, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 3467, i32 noundef 9, ptr noundef null) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then86, %land.rhs75.cleanup_crit_edge, %if.then61.cleanup_crit_edge, %if.end56.cleanup_crit_edge, %if.then8
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %ascq) #16
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %asc) #16
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %key) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @target_send_busy(ptr noundef %cmd) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %se_cmd_flags = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 11
  %0 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %se_cmd_flags, align 8
  %and = and i32 %1, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end28_crit_edge, label %land.rhs

entry.if.end28_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end28

land.rhs:                                         ; preds = %entry
  %.b42 = load i1, ptr @target_send_busy.__already_done, align 1
  br i1 %.b42, label %land.rhs.if.end28_crit_edge, label %if.then, !prof !767

land.rhs.if.end28_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end28

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @target_send_busy.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 3502, i32 noundef 9, ptr noundef null) #16
  br label %if.end28

if.end28:                                         ; preds = %if.then, %land.rhs.if.end28_crit_edge, %entry.if.end28_crit_edge
  %scsi_status = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 1
  %2 = ptrtoint ptr %scsi_status to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 8, ptr %scsi_status, align 4
  tail call fastcc void @trace_target_cmd_complete(ptr noundef %cmd)
  %se_tfo = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 26
  %3 = ptrtoint ptr %se_tfo to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %se_tfo, align 8
  %queue_status = getelementptr inbounds %struct.target_core_fabric_ops, ptr %4, i32 0, i32 24
  %5 = ptrtoint ptr %queue_status to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %queue_status, align 4
  %call = tail call i32 %6(ptr noundef %cmd) #16
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @target_handle_abort(ptr noundef %cmd) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %transport_state = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 34
  %0 = ptrtoint ptr %transport_state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %transport_state, align 4
  %and = and i32 %1, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %se_cmd_flags = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 11
  %2 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %se_cmd_flags, align 8
  %and1 = and i32 %3, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1)
  %tobool2.not = icmp eq i32 %and1, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @target_handle_abort.__UNIQUE_ID_ddebug661, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@target_handle_abort, %if.then)) #16
          to label %do.end [label %if.then], !srcloc !779

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %tag = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 4
  %4 = ptrtoint ptr %tag to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %tag, align 8
  %and.lobit = lshr exact i32 %and, 10
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @target_handle_abort.__UNIQUE_ID_ddebug661, ptr noundef nonnull @.str.350, i64 noundef %5, i32 noundef %and.lobit) #16
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  br i1 %tobool.not, label %if.else39, label %if.then10

if.then10:                                        ; preds = %do.end
  %6 = ptrtoint ptr %se_cmd_flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %se_cmd_flags, align 8
  %and12 = and i32 %7, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12)
  %tobool13.not = icmp eq i32 %and12, 0
  br i1 %tobool13.not, label %if.then14, label %if.else

if.then14:                                        ; preds = %if.then10
  %scsi_status = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 1
  %8 = ptrtoint ptr %scsi_status to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 64, ptr %scsi_status, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @target_handle_abort.__UNIQUE_ID_ddebug662, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@target_handle_abort, %if.then27)) #16
          to label %do.end32 [label %if.then27], !srcloc !779

if.then27:                                        ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #18
  %t_task_cdb = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 30
  %9 = ptrtoint ptr %t_task_cdb to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %t_task_cdb, align 8
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %10, align 1
  %conv28 = zext i8 %12 to i32
  %tag29 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 4
  %13 = ptrtoint ptr %tag29 to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %tag29, align 8
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @target_handle_abort.__UNIQUE_ID_ddebug662, ptr noundef nonnull @.str.351, i32 noundef %conv28, i64 noundef %14) #16
  br label %do.end32

do.end32:                                         ; preds = %if.then27, %if.then14
  tail call fastcc void @trace_target_cmd_complete(ptr noundef %cmd)
  %se_tfo = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 26
  %15 = ptrtoint ptr %se_tfo to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %se_tfo, align 8
  %queue_status = getelementptr inbounds %struct.target_core_fabric_ops, ptr %16, i32 0, i32 24
  %17 = ptrtoint ptr %queue_status to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %queue_status, align 4
  %call33 = tail call i32 %18(ptr noundef %cmd) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33)
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %do.end32.if.end96_crit_edge, label %if.then35

do.end32.if.end96_crit_edge:                      ; preds = %do.end32
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end96

if.then35:                                        ; preds = %do.end32
  call void @__sanitizer_cov_trace_pc() #18
  %se_dev = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 19
  %19 = ptrtoint ptr %se_dev to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %se_dev, align 4
  tail call fastcc void @transport_handle_queue_full(ptr noundef %cmd, ptr noundef %20, i32 noundef %call33, i1 noundef zeroext false)
  br label %cleanup

if.else:                                          ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #18
  %se_tmr_req = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 22
  %21 = ptrtoint ptr %se_tmr_req to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %se_tmr_req, align 8
  %response = getelementptr inbounds %struct.se_tmr_req, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %response to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 5, ptr %response, align 1
  %se_tfo37 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 26
  %24 = ptrtoint ptr %se_tfo37 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %se_tfo37, align 8
  %queue_tm_rsp = getelementptr inbounds %struct.target_core_fabric_ops, ptr %25, i32 0, i32 25
  %26 = ptrtoint ptr %queue_tm_rsp to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %queue_tm_rsp, align 4
  tail call void %27(ptr noundef %cmd) #16
  br label %if.end96

if.else39:                                        ; preds = %do.end
  %se_tfo40 = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 26
  %28 = ptrtoint ptr %se_tfo40 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %se_tfo40, align 8
  %aborted_task = getelementptr inbounds %struct.target_core_fabric_ops, ptr %29, i32 0, i32 26
  %30 = ptrtoint ptr %aborted_task to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %aborted_task, align 4
  tail call void %31(ptr noundef %cmd) #16
  br i1 %tobool2.not, label %if.else39.if.end96_crit_edge, label %if.then42

if.else39.if.end96_crit_edge:                     ; preds = %if.else39
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end96

if.then42:                                        ; preds = %if.else39
  %call43 = tail call i32 @target_put_sess_cmd(ptr noundef %cmd)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call43)
  %cmp.not = icmp eq i32 %call43, 0
  br i1 %cmp.not, label %if.then42.if.end96_crit_edge, label %land.rhs

if.then42.if.end96_crit_edge:                     ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end96

land.rhs:                                         ; preds = %if.then42
  %.b185 = load i1, ptr @target_handle_abort.__already_done, align 1
  br i1 %.b185, label %land.rhs.if.end96_crit_edge, label %if.then61, !prof !767

land.rhs.if.end96_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end96

if.then61:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @target_handle_abort.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 830, i32 noundef 9, ptr noundef null) #16
  br label %if.end96

if.end96:                                         ; preds = %if.then61, %land.rhs.if.end96_crit_edge, %if.then42.if.end96_crit_edge, %if.else39.if.end96_crit_edge, %if.else, %do.end32.if.end96_crit_edge
  %cmd_kref = getelementptr inbounds %struct.se_cmd, ptr %cmd, i32 0, i32 36
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %cmd_kref, i32 noundef 4) #16
  %32 = ptrtoint ptr %cmd_kref to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %cmd_kref, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %cmp99 = icmp eq i32 %33, 0
  br i1 %cmp99, label %land.rhs108, label %if.end96.if.end146_crit_edge

if.end96.if.end146_crit_edge:                     ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end146

land.rhs108:                                      ; preds = %if.end96
  %.b183184 = load i1, ptr @target_handle_abort.__already_done.352, align 1
  br i1 %.b183184, label %land.rhs108.if.end146_crit_edge, label %if.then119, !prof !767

land.rhs108.if.end146_crit_edge:                  ; preds = %land.rhs108
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end146

if.then119:                                       ; preds = %land.rhs108
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @target_handle_abort.__already_done.352, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 838, i32 noundef 9, ptr noundef null) #16
  br label %if.end146

if.end146:                                        ; preds = %if.then119, %land.rhs108.if.end146_crit_edge, %if.end96.if.end146_crit_edge
  tail call fastcc void @transport_lun_remove_cmd(ptr noundef %cmd)
  tail call fastcc void @transport_cmd_check_stop_to_fabric(ptr noundef %cmd)
  br label %cleanup

cleanup:                                          ; preds = %if.end146, %if.then35
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @target_tmr_work(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -304
  %se_dev = getelementptr i8, ptr %work, i32 -204
  %0 = ptrtoint ptr %se_dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %se_dev, align 4
  %se_tmr_req = getelementptr i8, ptr %work, i32 -192
  %2 = ptrtoint ptr %se_tmr_req to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %se_tmr_req, align 8
  %transport_state = getelementptr i8, ptr %work, i32 -108
  %4 = ptrtoint ptr %transport_state to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %transport_state, align 4
  %and = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.aborted_crit_edge

entry.aborted_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %aborted

if.end:                                           ; preds = %entry
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %3, align 8
  %8 = zext i8 %7 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.379)
  switch i8 %7, label %do.end [
    i8 1, label %sw.bb
    i8 2, label %if.end.sw.bb1_crit_edge
    i8 3, label %if.end.sw.bb1_crit_edge52
    i8 4, label %if.end.sw.bb1_crit_edge53
    i8 5, label %sw.bb2
    i8 6, label %sw.bb13
    i8 7, label %sw.bb15
  ]

if.end.sw.bb1_crit_edge53:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1

if.end.sw.bb1_crit_edge52:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1

if.end.sw.bb1_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1

sw.bb:                                            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %se_sess = getelementptr i8, ptr %work, i32 -196
  %9 = ptrtoint ptr %se_sess to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %se_sess, align 4
  tail call void @core_tmr_abort_task(ptr noundef %1, ptr noundef %3, ptr noundef %10) #16
  br label %sw.epilog

sw.bb1:                                           ; preds = %if.end.sw.bb1_crit_edge, %if.end.sw.bb1_crit_edge52, %if.end.sw.bb1_crit_edge53
  %response = getelementptr inbounds %struct.se_tmr_req, ptr %3, i32 0, i32 1
  %11 = ptrtoint ptr %response to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 4, ptr %response, align 1
  br label %sw.epilog

sw.bb2:                                           ; preds = %if.end
  %call = tail call i32 @core_tmr_lun_reset(ptr noundef %1, ptr noundef %3, ptr noundef null, ptr noundef null) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool3.not = icmp eq i32 %call, 0
  %conv4 = select i1 %tobool3.not, i8 1, i8 5
  %response5 = getelementptr inbounds %struct.se_tmr_req, ptr %3, i32 0, i32 1
  %12 = ptrtoint ptr %response5 to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %conv4, ptr %response5, align 1
  br i1 %tobool3.not, label %if.then9, label %sw.bb2.sw.epilog_crit_edge

sw.bb2.sw.epilog_crit_edge:                       ; preds = %sw.bb2
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.then9:                                         ; preds = %sw.bb2
  call void @__sanitizer_cov_trace_pc() #18
  %se_sess10 = getelementptr i8, ptr %work, i32 -196
  %13 = ptrtoint ptr %se_sess10 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %se_sess10, align 4
  %se_node_acl = getelementptr inbounds %struct.se_session, ptr %14, i32 0, i32 4
  %15 = ptrtoint ptr %se_node_acl to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %se_node_acl, align 8
  %orig_fe_lun = getelementptr i8, ptr %work, i32 -240
  %17 = ptrtoint ptr %orig_fe_lun to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %orig_fe_lun, align 8
  %conv11 = trunc i64 %18 to i32
  tail call void @target_ua_allocate_lun(ptr noundef %16, i32 noundef %conv11, i8 noundef zeroext 41, i8 noundef zeroext 3) #16
  br label %sw.epilog

sw.bb13:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %response14 = getelementptr inbounds %struct.se_tmr_req, ptr %3, i32 0, i32 1
  %19 = ptrtoint ptr %response14 to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 5, ptr %response14, align 1
  br label %sw.epilog

sw.bb15:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %response16 = getelementptr inbounds %struct.se_tmr_req, ptr %3, i32 0, i32 1
  %20 = ptrtoint ptr %response16 to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 5, ptr %response16, align 1
  br label %sw.epilog

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %conv = zext i8 %7 to i32
  %call20 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.353, i32 noundef %conv) #21
  %response21 = getelementptr inbounds %struct.se_tmr_req, ptr %3, i32 0, i32 1
  %21 = ptrtoint ptr %response21 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 5, ptr %response21, align 1
  br label %sw.epilog

sw.epilog:                                        ; preds = %do.end, %sw.bb15, %sw.bb13, %if.then9, %sw.bb2.sw.epilog_crit_edge, %sw.bb1, %sw.bb
  %22 = ptrtoint ptr %transport_state to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %transport_state, align 4
  %and23 = and i32 %23, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23)
  %tobool24.not = icmp eq i32 %and23, 0
  br i1 %tobool24.not, label %if.end26, label %sw.epilog.aborted_crit_edge

sw.epilog.aborted_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  br label %aborted

if.end26:                                         ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  %se_tfo = getelementptr i8, ptr %work, i32 -176
  %24 = ptrtoint ptr %se_tfo to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %se_tfo, align 8
  %queue_tm_rsp = getelementptr inbounds %struct.target_core_fabric_ops, ptr %25, i32 0, i32 25
  %26 = ptrtoint ptr %queue_tm_rsp to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %queue_tm_rsp, align 4
  tail call void %27(ptr noundef %add.ptr) #16
  tail call fastcc void @transport_lun_remove_cmd(ptr noundef %add.ptr)
  tail call fastcc void @transport_cmd_check_stop_to_fabric(ptr noundef %add.ptr)
  br label %cleanup

aborted:                                          ; preds = %sw.epilog.aborted_crit_edge, %entry.aborted_crit_edge
  tail call fastcc void @target_handle_abort(ptr noundef %add.ptr)
  br label %cleanup

cleanup:                                          ; preds = %aborted, %if.end26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @target_check_wce(ptr noundef %dev) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %transport = getelementptr inbounds %struct.se_device, ptr %dev, i32 0, i32 46
  %0 = ptrtoint ptr %transport to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %transport, align 8
  %get_write_cache = getelementptr inbounds %struct.target_backend_ops, ptr %1, i32 0, i32 26
  %2 = ptrtoint ptr %get_write_cache to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %get_write_cache, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call = tail call zeroext i1 %3(ptr noundef %dev) #16
  br label %if.end6

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %emulate_write_cache = getelementptr inbounds %struct.se_device, ptr %dev, i32 0, i32 39, i32 4
  %4 = ptrtoint ptr %emulate_write_cache to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %emulate_write_cache, align 4, !range !780
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool3.not = icmp ne i8 %5, 0
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then
  %wce.0.off0 = phi i1 [ %call, %if.then ], [ %tobool3.not, %if.else ]
  ret i1 %wce.0.off0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @target_check_fua(ptr noundef %dev) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %transport.i = getelementptr inbounds %struct.se_device, ptr %dev, i32 0, i32 46
  %0 = ptrtoint ptr %transport.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %transport.i, align 8
  %get_write_cache.i = getelementptr inbounds %struct.target_backend_ops, ptr %1, i32 0, i32 26
  %2 = ptrtoint ptr %get_write_cache.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %get_write_cache.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %target_check_wce.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  %call.i = tail call zeroext i1 %3(ptr noundef %dev) #16
  br i1 %call.i, label %if.then.i.land.rhs_crit_edge, label %if.then.i.land.end_crit_edge

if.then.i.land.end_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.end

if.then.i.land.rhs_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.rhs

target_check_wce.exit:                            ; preds = %entry
  %emulate_write_cache.i = getelementptr inbounds %struct.se_device, ptr %dev, i32 0, i32 39, i32 4
  %4 = ptrtoint ptr %emulate_write_cache.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %emulate_write_cache.i, align 4, !range !780
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool3.not.i.not = icmp eq i8 %5, 0
  br i1 %tobool3.not.i.not, label %target_check_wce.exit.land.end_crit_edge, label %target_check_wce.exit.land.rhs_crit_edge

target_check_wce.exit.land.rhs_crit_edge:         ; preds = %target_check_wce.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.rhs

target_check_wce.exit.land.end_crit_edge:         ; preds = %target_check_wce.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.end

land.rhs:                                         ; preds = %target_check_wce.exit.land.rhs_crit_edge, %if.then.i.land.rhs_crit_edge
  %emulate_fua_write = getelementptr inbounds %struct.se_device, ptr %dev, i32 0, i32 39, i32 2
  %6 = ptrtoint ptr %emulate_fua_write to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %emulate_fua_write, align 2, !range !780
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool = icmp ne i8 %7, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %target_check_wce.exit.land.end_crit_edge, %if.then.i.land.end_crit_edge
  %8 = phi i1 [ false, %target_check_wce.exit.land.end_crit_edge ], [ %tobool, %land.rhs ], [ false, %if.then.i.land.end_crit_edge ]
  ret i1 %8
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_target_sequencer_start(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_initiator = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %__data_loc_initiator to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_initiator, align 8
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %unpacked_lun = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %unpacked_lun to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %unpacked_lun, align 8
  %tag = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %tag to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %tag, align 8
  %opcode = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %opcode to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %opcode, align 8
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %9, ptr noundef nonnull @trace_raw_output_target_sequencer_start.symbols) #16
  %data_length = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %data_length to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %data_length, align 4
  %cdb = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %1, i32 0, i32 7
  %call2 = tail call ptr @trace_print_hex_seq(ptr noundef %tmp_seq, ptr noundef %cdb, i32 noundef 16, i1 noundef zeroext false) #16
  %task_attribute = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %1, i32 0, i32 5
  %12 = ptrtoint ptr %task_attribute to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %task_attribute, align 8
  %call4 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %13, ptr noundef nonnull @trace_raw_output_target_sequencer_start.symbols.263) #16
  %control = getelementptr inbounds %struct.trace_event_raw_target_sequencer_start, ptr %1, i32 0, i32 6
  %14 = ptrtoint ptr %control to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %control, align 4
  %conv = zext i8 %15 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.170, ptr noundef %add.ptr, i32 noundef %5, i64 noundef %7, ptr noundef %call1, i32 noundef %11, ptr noundef %call2, ptr noundef %call4, i32 noundef %conv) #16
  %call5 = tail call i32 @trace_handle_return(ptr noundef %seq) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_symbols_seq(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_hex_seq(ptr noundef, ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_target_cmd_complete(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_initiator = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %1, i32 0, i32 11
  %2 = ptrtoint ptr %__data_loc_initiator to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_initiator, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %unpacked_lun = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %unpacked_lun to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %unpacked_lun, align 8
  %tag = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %tag to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %tag, align 8
  %scsi_status = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %1, i32 0, i32 7
  %8 = ptrtoint ptr %scsi_status to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %scsi_status, align 1
  %conv = zext i8 %9 to i32
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_target_cmd_complete.symbols) #16
  %sense_length = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %1, i32 0, i32 8
  %10 = ptrtoint ptr %sense_length to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %sense_length, align 2
  %conv2 = zext i8 %11 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool.not = icmp eq i8 %11, 0
  %cond = select i1 %tobool.not, ptr @.str.285, ptr @.str.284
  %sense_data = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %1, i32 0, i32 10
  %call7 = tail call ptr @trace_print_hex_seq(ptr noundef %tmp_seq, ptr noundef %sense_data, i32 noundef %conv2, i1 noundef zeroext false) #16
  %opcode = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %1, i32 0, i32 3
  %12 = ptrtoint ptr %opcode to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %opcode, align 8
  %call9 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %13, ptr noundef nonnull @trace_raw_output_target_cmd_complete.symbols.286) #16
  %data_length = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %1, i32 0, i32 4
  %14 = ptrtoint ptr %data_length to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %data_length, align 4
  %cdb = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %1, i32 0, i32 9
  %call11 = tail call ptr @trace_print_hex_seq(ptr noundef %tmp_seq, ptr noundef %cdb, i32 noundef 16, i1 noundef zeroext false) #16
  %task_attribute = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %1, i32 0, i32 5
  %16 = ptrtoint ptr %task_attribute to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %task_attribute, align 8
  %call13 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %17, ptr noundef nonnull @trace_raw_output_target_cmd_complete.symbols.287) #16
  %control = getelementptr inbounds %struct.trace_event_raw_target_cmd_complete, ptr %1, i32 0, i32 6
  %18 = ptrtoint ptr %control to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %control, align 4
  %conv14 = zext i8 %19 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.272, ptr noundef %add.ptr, i32 noundef %5, i64 noundef %7, ptr noundef %call1, i32 noundef %conv2, ptr noundef nonnull %cond, ptr noundef %call7, ptr noundef %call9, i32 noundef %15, ptr noundef %call11, ptr noundef %call13, i32 noundef %conv14) #16
  %call15 = tail call i32 @trace_handle_return(ptr noundef %seq) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call15, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #11

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #11

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #12

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run1(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_swait_queue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #13

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kmem_cache_alloc(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #14

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @kvmalloc_node(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #15

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @complete(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @core_tpg_wait_for_nacl_pr_ref(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @core_free_device_list_for_node(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_percpu(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @target_release_reservation(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_irq(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irq(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #15

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #14

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_address(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmap_high(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kunmap_high(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @config_item_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @config_item_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @llist_add_batch(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @sbc_dif_generate(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sbc_dif_verify(ptr noundef, i64 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kasprintf(i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kstrdup(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wait_for_completion_timeout(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @target_sense_desc_format(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @core_scsi3_ua_for_check_condition(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @scsi_build_sense_buffer(i32 noundef, ptr noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @scsi_set_sense_information(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @core_tmr_abort_task(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @core_tmr_lun_reset(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #14

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #14

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #16

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #17 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 391)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #17 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 391)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #12 = { nounwind readonly }
attributes #13 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #14 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #15 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nounwind }
attributes #17 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #18 = { nomerge }
attributes #19 = { nobuiltin nounwind }
attributes #20 = { nobuiltin }
attributes #21 = { cold nounwind }
attributes #22 = { nounwind allocsize(0) }

!llvm.asan.globals = !{}
!llvm.named.register.sp = !{!757}
!llvm.module.flags = !{!758, !759, !760, !761, !762, !763, !764, !765}
!llvm.ident = !{!766}

!0 = !{ptr @__tracepoint_target_sequencer_start, !1, !"__tracepoint_target_sequencer_start", i1 false, i1 false}
!1 = !{!"../include/trace/events/target.h", i32 132, i32 1}
!2 = !{ptr @__tracepoint_ptr_target_sequencer_start, !1, !"__tracepoint_ptr_target_sequencer_start", i1 false, i1 false}
!3 = !{ptr @__SCK__tp_func_target_sequencer_start, !1, !"__SCK__tp_func_target_sequencer_start", i1 false, i1 false}
!4 = !{ptr @__tracepoint_target_cmd_complete, !5, !"__tracepoint_target_cmd_complete", i1 false, i1 false}
!5 = !{!"../include/trace/events/target.h", i32 169, i32 1}
!6 = !{ptr @__tracepoint_ptr_target_cmd_complete, !5, !"__tracepoint_ptr_target_cmd_complete", i1 false, i1 false}
!7 = !{ptr @__SCK__tp_func_target_cmd_complete, !5, !"__SCK__tp_func_target_cmd_complete", i1 false, i1 false}
!8 = !{ptr @event_class_target_sequencer_start, !1, !"event_class_target_sequencer_start", i1 false, i1 false}
!9 = !{ptr @event_target_sequencer_start, !1, !"event_target_sequencer_start", i1 false, i1 false}
!10 = !{ptr @__event_target_sequencer_start, !1, !"__event_target_sequencer_start", i1 false, i1 false}
!11 = !{ptr @event_class_target_cmd_complete, !5, !"event_class_target_cmd_complete", i1 false, i1 false}
!12 = !{ptr @event_target_cmd_complete, !5, !"event_target_cmd_complete", i1 false, i1 false}
!13 = !{ptr @__event_target_cmd_complete, !5, !"__event_target_cmd_complete", i1 false, i1 false}
!14 = !{ptr @__bpf_trace_tp_map_target_sequencer_start, !1, !"__bpf_trace_tp_map_target_sequencer_start", i1 false, i1 false}
!15 = !{ptr @__bpf_trace_tp_map_target_cmd_complete, !5, !"__bpf_trace_tp_map_target_cmd_complete", i1 false, i1 false}
!16 = !{ptr @.str, !17, !"<string literal>", i1 false, i1 false}
!17 = !{!"../drivers/target/target_core_transport.c", i32 62, i32 36}
!18 = !{ptr @.str.1, !19, !"<string literal>", i1 false, i1 false}
!19 = !{!"../drivers/target/target_core_transport.c", i32 66, i32 3}
!20 = !{ptr @.str.2, !19, !"<string literal>", i1 false, i1 false}
!21 = !{ptr @.str.3, !19, !"<string literal>", i1 false, i1 false}
!22 = !{ptr @init_se_kmem_caches._entry, !19, !"_entry", i1 false, i1 false}
!23 = !{ptr @init_se_kmem_caches._entry_ptr, !19, !"_entry_ptr", i1 false, i1 false}
!24 = !{ptr @.str.4, !25, !"<string literal>", i1 false, i1 false}
!25 = !{!"../drivers/target/target_core_transport.c", i32 70, i32 34}
!26 = !{ptr @.str.6, !27, !"<string literal>", i1 false, i1 false}
!27 = !{!"../drivers/target/target_core_transport.c", i32 74, i32 3}
!28 = !{ptr @init_se_kmem_caches._entry.5, !27, !"_entry", i1 false, i1 false}
!29 = !{ptr @init_se_kmem_caches._entry_ptr.7, !27, !"_entry_ptr", i1 false, i1 false}
!30 = !{ptr @.str.8, !31, !"<string literal>", i1 false, i1 false}
!31 = !{!"../drivers/target/target_core_transport.c", i32 77, i32 39}
!32 = !{ptr @.str.10, !33, !"<string literal>", i1 false, i1 false}
!33 = !{!"../drivers/target/target_core_transport.c", i32 81, i32 3}
!34 = !{ptr @init_se_kmem_caches._entry.9, !33, !"_entry", i1 false, i1 false}
!35 = !{ptr @init_se_kmem_caches._entry_ptr.11, !33, !"_entry_ptr", i1 false, i1 false}
!36 = !{ptr @.str.12, !37, !"<string literal>", i1 false, i1 false}
!37 = !{!"../drivers/target/target_core_transport.c", i32 85, i32 43}
!38 = !{ptr @.str.14, !39, !"<string literal>", i1 false, i1 false}
!39 = !{!"../drivers/target/target_core_transport.c", i32 89, i32 3}
!40 = !{ptr @init_se_kmem_caches._entry.13, !39, !"_entry", i1 false, i1 false}
!41 = !{ptr @init_se_kmem_caches._entry_ptr.15, !39, !"_entry_ptr", i1 false, i1 false}
!42 = !{ptr @.str.16, !43, !"<string literal>", i1 false, i1 false}
!43 = !{!"../drivers/target/target_core_transport.c", i32 93, i32 47}
!44 = !{ptr @.str.18, !45, !"<string literal>", i1 false, i1 false}
!45 = !{!"../drivers/target/target_core_transport.c", i32 97, i32 3}
!46 = !{ptr @init_se_kmem_caches._entry.17, !45, !"_entry", i1 false, i1 false}
!47 = !{ptr @init_se_kmem_caches._entry_ptr.19, !45, !"_entry_ptr", i1 false, i1 false}
!48 = !{ptr @.str.20, !49, !"<string literal>", i1 false, i1 false}
!49 = !{!"../drivers/target/target_core_transport.c", i32 101, i32 46}
!50 = !{ptr @.str.22, !51, !"<string literal>", i1 false, i1 false}
!51 = !{!"../drivers/target/target_core_transport.c", i32 105, i32 3}
!52 = !{ptr @init_se_kmem_caches._entry.21, !51, !"_entry", i1 false, i1 false}
!53 = !{ptr @init_se_kmem_caches._entry_ptr.23, !51, !"_entry_ptr", i1 false, i1 false}
!54 = !{ptr @.str.24, !55, !"<string literal>", i1 false, i1 false}
!55 = !{!"../drivers/target/target_core_transport.c", i32 110, i32 4}
!56 = !{ptr @.str.26, !57, !"<string literal>", i1 false, i1 false}
!57 = !{!"../drivers/target/target_core_transport.c", i32 114, i32 3}
!58 = !{ptr @init_se_kmem_caches._entry.25, !57, !"_entry", i1 false, i1 false}
!59 = !{ptr @init_se_kmem_caches._entry_ptr.27, !57, !"_entry_ptr", i1 false, i1 false}
!60 = !{ptr @.str.28, !61, !"<string literal>", i1 false, i1 false}
!61 = !{!"../drivers/target/target_core_transport.c", i32 119, i32 4}
!62 = !{ptr @.str.30, !63, !"<string literal>", i1 false, i1 false}
!63 = !{!"../drivers/target/target_core_transport.c", i32 123, i32 3}
!64 = !{ptr @init_se_kmem_caches._entry.29, !63, !"_entry", i1 false, i1 false}
!65 = !{ptr @init_se_kmem_caches._entry_ptr.31, !63, !"_entry_ptr", i1 false, i1 false}
!66 = !{ptr @.str.32, !67, !"<string literal>", i1 false, i1 false}
!67 = !{!"../drivers/target/target_core_transport.c", i32 128, i32 41}
!68 = !{ptr @.str.33, !69, !"<string literal>", i1 false, i1 false}
!69 = !{!"../drivers/target/target_core_transport.c", i32 133, i32 41}
!70 = distinct !{null, !71, !"sub_api_initialized", i1 false, i1 false}
!71 = !{!"../drivers/target/target_core_transport.c", i32 199, i32 13}
!72 = !{ptr @.str.34, !73, !"<string literal>", i1 false, i1 false}
!73 = !{!"../drivers/target/target_core_transport.c", i32 204, i32 41}
!74 = !{ptr @.str.35, !75, !"<string literal>", i1 false, i1 false}
!75 = !{!"../drivers/target/target_core_transport.c", i32 206, i32 3}
!76 = !{ptr @.str.36, !75, !"<string literal>", i1 false, i1 false}
!77 = !{ptr @transport_subsystem_check_init._entry, !75, !"_entry", i1 false, i1 false}
!78 = !{ptr @transport_subsystem_check_init._entry_ptr, !75, !"_entry_ptr", i1 false, i1 false}
!79 = !{ptr @.str.37, !80, !"<string literal>", i1 false, i1 false}
!80 = !{!"../drivers/target/target_core_transport.c", i32 208, i32 41}
!81 = !{ptr @.str.39, !82, !"<string literal>", i1 false, i1 false}
!82 = !{!"../drivers/target/target_core_transport.c", i32 210, i32 3}
!83 = !{ptr @transport_subsystem_check_init._entry.38, !82, !"_entry", i1 false, i1 false}
!84 = !{ptr @transport_subsystem_check_init._entry_ptr.40, !82, !"_entry_ptr", i1 false, i1 false}
!85 = !{ptr @.str.41, !86, !"<string literal>", i1 false, i1 false}
!86 = !{!"../drivers/target/target_core_transport.c", i32 212, i32 40}
!87 = !{ptr @.str.43, !88, !"<string literal>", i1 false, i1 false}
!88 = !{!"../drivers/target/target_core_transport.c", i32 214, i32 3}
!89 = !{ptr @transport_subsystem_check_init._entry.42, !88, !"_entry", i1 false, i1 false}
!90 = !{ptr @transport_subsystem_check_init._entry_ptr.44, !88, !"_entry_ptr", i1 false, i1 false}
!91 = !{ptr @.str.45, !92, !"<string literal>", i1 false, i1 false}
!92 = !{!"../drivers/target/target_core_transport.c", i32 216, i32 40}
!93 = !{ptr @.str.47, !94, !"<string literal>", i1 false, i1 false}
!94 = !{!"../drivers/target/target_core_transport.c", i32 218, i32 3}
!95 = !{ptr @transport_subsystem_check_init._entry.46, !94, !"_entry", i1 false, i1 false}
!96 = !{ptr @transport_subsystem_check_init._entry_ptr.48, !94, !"_entry_ptr", i1 false, i1 false}
!97 = !{ptr @transport_init_session.__key, !98, !"__key", i1 false, i1 false}
!98 = !{!"../drivers/target/target_core_transport.c", i32 240, i32 2}
!99 = !{ptr @.str.49, !98, !"<string literal>", i1 false, i1 false}
!100 = !{ptr @transport_init_session.__key.50, !101, !"__key", i1 false, i1 false}
!101 = !{!"../drivers/target/target_core_transport.c", i32 241, i32 2}
!102 = !{ptr @.str.51, !101, !"<string literal>", i1 false, i1 false}
!103 = !{ptr @__ksymtab_transport_init_session, !104, !"__ksymtab_transport_init_session", i1 false, i1 false}
!104 = !{!"../drivers/target/target_core_transport.c", i32 247, i32 1}
!105 = !{ptr @.str.52, !106, !"<string literal>", i1 false, i1 false}
!106 = !{!"../drivers/target/target_core_transport.c", i32 273, i32 3}
!107 = !{ptr @.str.53, !106, !"<string literal>", i1 false, i1 false}
!108 = !{ptr @transport_alloc_session._entry, !106, !"_entry", i1 false, i1 false}
!109 = !{ptr @transport_alloc_session._entry_ptr, !106, !"_entry_ptr", i1 false, i1 false}
!110 = !{ptr @__ksymtab_transport_alloc_session, !111, !"__ksymtab_transport_alloc_session", i1 false, i1 false}
!111 = !{!"../drivers/target/target_core_transport.c", i32 286, i32 1}
!112 = !{ptr @.str.54, !113, !"<string literal>", i1 false, i1 false}
!113 = !{!"../drivers/target/target_core_transport.c", i32 303, i32 3}
!114 = !{ptr @.str.55, !113, !"<string literal>", i1 false, i1 false}
!115 = !{ptr @transport_alloc_session_tags._entry, !113, !"_entry", i1 false, i1 false}
!116 = !{ptr @transport_alloc_session_tags._entry_ptr, !113, !"_entry_ptr", i1 false, i1 false}
!117 = !{ptr @.str.57, !118, !"<string literal>", i1 false, i1 false}
!118 = !{!"../drivers/target/target_core_transport.c", i32 310, i32 3}
!119 = !{ptr @transport_alloc_session_tags._entry.56, !118, !"_entry", i1 false, i1 false}
!120 = !{ptr @transport_alloc_session_tags._entry_ptr.58, !118, !"_entry_ptr", i1 false, i1 false}
!121 = !{ptr @__ksymtab_transport_alloc_session_tags, !122, !"__ksymtab_transport_alloc_session_tags", i1 false, i1 false}
!122 = !{!"../drivers/target/target_core_transport.c", i32 319, i32 1}
!123 = !{ptr @.str.59, !124, !"<string literal>", i1 false, i1 false}
!124 = !{!"../drivers/target/target_core_transport.c", i32 420, i32 2}
!125 = !{ptr @.str.60, !124, !"<string literal>", i1 false, i1 false}
!126 = !{ptr @.str.61, !124, !"<string literal>", i1 false, i1 false}
!127 = !{ptr @__transport_register_session.__UNIQUE_ID_ddebug657, !124, !"__UNIQUE_ID_ddebug657", i1 false, i1 false}
!128 = !{ptr @__ksymtab___transport_register_session, !129, !"__ksymtab___transport_register_session", i1 false, i1 false}
!129 = !{!"../drivers/target/target_core_transport.c", i32 423, i32 1}
!130 = !{ptr @__ksymtab_transport_register_session, !131, !"__ksymtab_transport_register_session", i1 false, i1 false}
!131 = !{!"../drivers/target/target_core_transport.c", i32 437, i32 1}
!132 = !{ptr @__ksymtab_target_setup_session, !133, !"__ksymtab_target_setup_session", i1 false, i1 false}
!133 = !{!"../drivers/target/target_core_transport.c", i32 482, i32 1}
!134 = !{ptr @.str.62, !135, !"<string literal>", i1 false, i1 false}
!135 = !{!"../drivers/target/target_core_transport.c", i32 498, i32 48}
!136 = !{ptr @__ksymtab_target_show_dynamic_sessions, !137, !"__ksymtab_target_show_dynamic_sessions", i1 false, i1 false}
!137 = !{!"../drivers/target/target_core_transport.c", i32 506, i32 1}
!138 = !{ptr @__ksymtab_target_put_nacl, !139, !"__ksymtab_target_put_nacl", i1 false, i1 false}
!139 = !{!"../drivers/target/target_core_transport.c", i32 532, i32 1}
!140 = !{ptr @__ksymtab_transport_deregister_session_configfs, !141, !"__ksymtab_transport_deregister_session_configfs", i1 false, i1 false}
!141 = !{!"../drivers/target/target_core_transport.c", i32 561, i32 1}
!142 = !{ptr @__ksymtab_transport_free_session, !143, !"__ksymtab_transport_free_session", i1 false, i1 false}
!143 = !{!"../drivers/target/target_core_transport.c", i32 608, i32 1}
!144 = !{ptr @.str.63, !145, !"<string literal>", i1 false, i1 false}
!145 = !{!"../drivers/target/target_core_transport.c", i32 641, i32 2}
!146 = !{ptr @.str.64, !145, !"<string literal>", i1 false, i1 false}
!147 = !{ptr @transport_deregister_session.__UNIQUE_ID_ddebug658, !145, !"__UNIQUE_ID_ddebug658", i1 false, i1 false}
!148 = !{ptr @__ksymtab_transport_deregister_session, !149, !"__ksymtab_transport_deregister_session", i1 false, i1 false}
!149 = !{!"../drivers/target/target_core_transport.c", i32 654, i32 1}
!150 = !{ptr @__ksymtab_target_remove_session, !151, !"__ksymtab_target_remove_session", i1 false, i1 false}
!151 = !{!"../drivers/target/target_core_transport.c", i32 661, i32 1}
!152 = !{ptr @__ksymtab_transport_copy_sense_to_cmd, !153, !"__ksymtab_transport_copy_sense_to_cmd", i1 false, i1 false}
!153 = !{!"../drivers/target/target_core_transport.c", i32 797, i32 1}
!154 = !{ptr @target_complete_cmd_with_sense.__key, !155, !"__key", i1 false, i1 false}
!155 = !{!"../drivers/target/target_core_transport.c", i32 903, i32 2}
!156 = !{ptr @.str.65, !155, !"<string literal>", i1 false, i1 false}
!157 = !{ptr @__ksymtab_target_complete_cmd_with_sense, !158, !"__ksymtab_target_complete_cmd_with_sense", i1 false, i1 false}
!158 = !{!"../drivers/target/target_core_transport.c", i32 913, i32 1}
!159 = !{ptr @__ksymtab_target_complete_cmd, !160, !"__ksymtab_target_complete_cmd", i1 false, i1 false}
!160 = !{!"../drivers/target/target_core_transport.c", i32 921, i32 1}
!161 = !{ptr @__ksymtab_target_set_cmd_data_length, !162, !"__ksymtab_target_set_cmd_data_length", i1 false, i1 false}
!162 = !{!"../drivers/target/target_core_transport.c", i32 936, i32 1}
!163 = !{ptr @__ksymtab_target_complete_cmd_with_length, !164, !"__ksymtab_target_complete_cmd_with_length", i1 false, i1 false}
!164 = !{!"../drivers/target/target_core_transport.c", i32 947, i32 1}
!165 = !{ptr @.str.66, !166, !"<string literal>", i1 false, i1 false}
!166 = !{!"../drivers/target/target_core_transport.c", i32 984, i32 3}
!167 = !{ptr @.str.67, !166, !"<string literal>", i1 false, i1 false}
!168 = !{ptr @target_qf_do_work.__UNIQUE_ID_ddebug663, !166, !"__UNIQUE_ID_ddebug663", i1 false, i1 false}
!169 = !{ptr @.str.68, !166, !"<string literal>", i1 false, i1 false}
!170 = !{ptr @.str.69, !166, !"<string literal>", i1 false, i1 false}
!171 = !{ptr @.str.70, !166, !"<string literal>", i1 false, i1 false}
!172 = !{ptr @.str.71, !173, !"<string literal>", i1 false, i1 false}
!173 = !{!"../drivers/target/target_core_transport.c", i32 1002, i32 10}
!174 = !{ptr @.str.72, !175, !"<string literal>", i1 false, i1 false}
!175 = !{!"../drivers/target/target_core_transport.c", i32 1004, i32 10}
!176 = !{ptr @.str.73, !177, !"<string literal>", i1 false, i1 false}
!177 = !{!"../drivers/target/target_core_transport.c", i32 1006, i32 10}
!178 = !{ptr @.str.74, !179, !"<string literal>", i1 false, i1 false}
!179 = !{!"../drivers/target/target_core_transport.c", i32 1008, i32 10}
!180 = !{ptr @.str.75, !181, !"<string literal>", i1 false, i1 false}
!181 = !{!"../drivers/target/target_core_transport.c", i32 1021, i32 26}
!182 = !{ptr @.str.76, !183, !"<string literal>", i1 false, i1 false}
!183 = !{!"../drivers/target/target_core_transport.c", i32 1023, i32 27}
!184 = !{ptr @.str.77, !185, !"<string literal>", i1 false, i1 false}
!185 = !{!"../drivers/target/target_core_transport.c", i32 1025, i32 27}
!186 = !{ptr @.str.78, !187, !"<string literal>", i1 false, i1 false}
!187 = !{!"../drivers/target/target_core_transport.c", i32 1027, i32 26}
!188 = !{ptr @.str.79, !189, !"<string literal>", i1 false, i1 false}
!189 = !{!"../drivers/target/target_core_transport.c", i32 1028, i32 26}
!190 = !{ptr @.str.80, !191, !"<string literal>", i1 false, i1 false}
!191 = !{!"../drivers/target/target_core_transport.c", i32 1031, i32 26}
!192 = !{ptr @.str.81, !193, !"<string literal>", i1 false, i1 false}
!193 = !{!"../drivers/target/target_core_transport.c", i32 1043, i32 21}
!194 = !{ptr @.str.82, !195, !"<string literal>", i1 false, i1 false}
!195 = !{!"../drivers/target/target_core_transport.c", i32 1047, i32 20}
!196 = !{ptr @.str.83, !197, !"<string literal>", i1 false, i1 false}
!197 = !{!"../drivers/target/target_core_transport.c", i32 1050, i32 20}
!198 = !{ptr @.str.84, !199, !"<string literal>", i1 false, i1 false}
!199 = !{!"../drivers/target/target_core_transport.c", i32 1053, i32 20}
!200 = !{ptr @.str.85, !201, !"<string literal>", i1 false, i1 false}
!201 = !{!"../drivers/target/target_core_transport.c", i32 1056, i32 20}
!202 = !{ptr @.str.86, !203, !"<string literal>", i1 false, i1 false}
!203 = !{!"../drivers/target/target_core_transport.c", i32 1059, i32 20}
!204 = !{ptr @.str.87, !205, !"<string literal>", i1 false, i1 false}
!205 = !{!"../drivers/target/target_core_transport.c", i32 1063, i32 20}
!206 = !{ptr @.str.88, !207, !"<string literal>", i1 false, i1 false}
!207 = !{!"../drivers/target/target_core_transport.c", i32 1066, i32 20}
!208 = !{ptr @.str.89, !209, !"<string literal>", i1 false, i1 false}
!209 = !{!"../drivers/target/target_core_transport.c", i32 1069, i32 20}
!210 = !{ptr @.str.90, !211, !"<string literal>", i1 false, i1 false}
!211 = !{!"../drivers/target/target_core_transport.c", i32 1073, i32 20}
!212 = !{ptr @.str.91, !213, !"<string literal>", i1 false, i1 false}
!213 = !{!"../drivers/target/target_core_transport.c", i32 1076, i32 20}
!214 = !{ptr @.str.92, !215, !"<string literal>", i1 false, i1 false}
!215 = !{!"../drivers/target/target_core_transport.c", i32 1084, i32 3}
!216 = !{ptr @.str.93, !215, !"<string literal>", i1 false, i1 false}
!217 = !{ptr @transport_dump_vpd_proto_id.__UNIQUE_ID_ddebug664, !215, !"__UNIQUE_ID_ddebug664", i1 false, i1 false}
!218 = !{ptr @__ksymtab_transport_set_vpd_proto_id, !219, !"__ksymtab_transport_set_vpd_proto_id", i1 false, i1 false}
!219 = !{!"../drivers/target/target_core_transport.c", i32 1101, i32 1}
!220 = !{ptr @.str.94, !221, !"<string literal>", i1 false, i1 false}
!221 = !{!"../drivers/target/target_core_transport.c", i32 1113, i32 21}
!222 = !{ptr @.str.95, !223, !"<string literal>", i1 false, i1 false}
!223 = !{!"../drivers/target/target_core_transport.c", i32 1117, i32 20}
!224 = !{ptr @.str.96, !225, !"<string literal>", i1 false, i1 false}
!225 = !{!"../drivers/target/target_core_transport.c", i32 1120, i32 20}
!226 = !{ptr @.str.97, !227, !"<string literal>", i1 false, i1 false}
!227 = !{!"../drivers/target/target_core_transport.c", i32 1123, i32 20}
!228 = !{ptr @.str.98, !229, !"<string literal>", i1 false, i1 false}
!229 = !{!"../drivers/target/target_core_transport.c", i32 1134, i32 3}
!230 = !{ptr @transport_dump_vpd_assoc.__UNIQUE_ID_ddebug665, !229, !"__UNIQUE_ID_ddebug665", i1 false, i1 false}
!231 = !{ptr @__ksymtab_transport_set_vpd_assoc, !232, !"__ksymtab_transport_set_vpd_assoc", i1 false, i1 false}
!232 = !{!"../drivers/target/target_core_transport.c", i32 1149, i32 1}
!233 = !{ptr @.str.99, !234, !"<string literal>", i1 false, i1 false}
!234 = !{!"../drivers/target/target_core_transport.c", i32 1161, i32 21}
!235 = !{ptr @.str.100, !236, !"<string literal>", i1 false, i1 false}
!236 = !{!"../drivers/target/target_core_transport.c", i32 1165, i32 20}
!237 = !{ptr @.str.101, !238, !"<string literal>", i1 false, i1 false}
!238 = !{!"../drivers/target/target_core_transport.c", i32 1168, i32 20}
!239 = !{ptr @.str.102, !240, !"<string literal>", i1 false, i1 false}
!240 = !{!"../drivers/target/target_core_transport.c", i32 1171, i32 20}
!241 = !{ptr @.str.103, !242, !"<string literal>", i1 false, i1 false}
!242 = !{!"../drivers/target/target_core_transport.c", i32 1174, i32 20}
!243 = !{ptr @.str.104, !244, !"<string literal>", i1 false, i1 false}
!244 = !{!"../drivers/target/target_core_transport.c", i32 1177, i32 20}
!245 = !{ptr @.str.105, !246, !"<string literal>", i1 false, i1 false}
!246 = !{!"../drivers/target/target_core_transport.c", i32 1180, i32 20}
!247 = !{ptr @.str.106, !248, !"<string literal>", i1 false, i1 false}
!248 = !{!"../drivers/target/target_core_transport.c", i32 1183, i32 20}
!249 = !{ptr @.str.107, !250, !"<string literal>", i1 false, i1 false}
!250 = !{!"../drivers/target/target_core_transport.c", i32 1194, i32 3}
!251 = !{ptr @transport_dump_vpd_ident_type.__UNIQUE_ID_ddebug666, !250, !"__UNIQUE_ID_ddebug666", i1 false, i1 false}
!252 = !{ptr @__ksymtab_transport_set_vpd_ident_type, !253, !"__ksymtab_transport_set_vpd_ident_type", i1 false, i1 false}
!253 = !{!"../drivers/target/target_core_transport.c", i32 1210, i32 1}
!254 = !{ptr @.str.108, !255, !"<string literal>", i1 false, i1 false}
!255 = !{!"../drivers/target/target_core_transport.c", i32 1225, i32 4}
!256 = !{ptr @.str.109, !257, !"<string literal>", i1 false, i1 false}
!257 = !{!"../drivers/target/target_core_transport.c", i32 1230, i32 4}
!258 = !{ptr @.str.110, !259, !"<string literal>", i1 false, i1 false}
!259 = !{!"../drivers/target/target_core_transport.c", i32 1235, i32 4}
!260 = !{ptr @.str.111, !261, !"<string literal>", i1 false, i1 false}
!261 = !{!"../drivers/target/target_core_transport.c", i32 1239, i32 16}
!262 = !{ptr @.str.112, !263, !"<string literal>", i1 false, i1 false}
!263 = !{!"../drivers/target/target_core_transport.c", i32 1248, i32 3}
!264 = !{ptr @transport_dump_vpd_ident.__UNIQUE_ID_ddebug667, !263, !"__UNIQUE_ID_ddebug667", i1 false, i1 false}
!265 = !{ptr @transport_set_vpd_ident.hex_str, !266, !"hex_str", i1 false, i1 false}
!266 = !{!"../drivers/target/target_core_transport.c", i32 1256, i32 20}
!267 = !{ptr @__ksymtab_transport_set_vpd_ident, !268, !"__ksymtab_transport_set_vpd_ident", i1 false, i1 false}
!268 = !{!"../drivers/target/target_core_transport.c", i32 1288, i32 1}
!269 = !{ptr @.str.113, !270, !"<string literal>", i1 false, i1 false}
!270 = !{!"../drivers/target/target_core_transport.c", i32 1360, i32 3}
!271 = !{ptr @target_cmd_size_check._rs, !270, !"_rs", i1 false, i1 false}
!272 = !{ptr @__func__.target_cmd_size_check, !270, !"<string literal>", i1 false, i1 false}
!273 = !{ptr @.str.114, !270, !"<string literal>", i1 false, i1 false}
!274 = !{ptr @target_cmd_size_check._entry, !270, !"_entry", i1 false, i1 false}
!275 = !{ptr @target_cmd_size_check._entry_ptr, !270, !"_entry_ptr", i1 false, i1 false}
!276 = !{ptr @target_cmd_size_check._rs.115, !277, !"_rs", i1 false, i1 false}
!277 = !{!"../drivers/target/target_core_transport.c", i32 1387, i32 5}
!278 = !{ptr @.str.117, !277, !"<string literal>", i1 false, i1 false}
!279 = !{ptr @target_cmd_size_check._entry.116, !277, !"_entry", i1 false, i1 false}
!280 = !{ptr @target_cmd_size_check._entry_ptr.118, !277, !"_entry_ptr", i1 false, i1 false}
!281 = !{ptr @target_cmd_size_check._rs.119, !282, !"_rs", i1 false, i1 false}
!282 = !{!"../drivers/target/target_core_transport.c", i32 1398, i32 5}
!283 = !{ptr @.str.121, !282, !"<string literal>", i1 false, i1 false}
!284 = !{ptr @target_cmd_size_check._entry.120, !282, !"_entry", i1 false, i1 false}
!285 = !{ptr @target_cmd_size_check._entry_ptr.122, !282, !"_entry_ptr", i1 false, i1 false}
!286 = !{ptr @__target_init_cmd.__key, !287, !"__key", i1 false, i1 false}
!287 = !{!"../drivers/target/target_core_transport.c", i32 1430, i32 2}
!288 = !{ptr @.str.123, !287, !"<string literal>", i1 false, i1 false}
!289 = !{ptr @__target_init_cmd.__key.124, !290, !"__key", i1 false, i1 false}
!290 = !{!"../drivers/target/target_core_transport.c", i32 1431, i32 2}
!291 = !{ptr @__ksymtab___target_init_cmd, !292, !"__ksymtab___target_init_cmd", i1 false, i1 false}
!292 = !{!"../drivers/target/target_core_transport.c", i32 1448, i32 1}
!293 = !{ptr @.str.125, !294, !"<string literal>", i1 false, i1 false}
!294 = !{!"../drivers/target/target_core_transport.c", i32 1481, i32 3}
!295 = !{ptr @.str.126, !294, !"<string literal>", i1 false, i1 false}
!296 = !{ptr @target_cmd_init_cdb._entry, !294, !"_entry", i1 false, i1 false}
!297 = !{ptr @target_cmd_init_cdb._entry_ptr, !294, !"_entry_ptr", i1 false, i1 false}
!298 = !{ptr @.str.128, !299, !"<string literal>", i1 false, i1 false}
!299 = !{!"../drivers/target/target_core_transport.c", i32 1495, i32 4}
!300 = !{ptr @target_cmd_init_cdb._entry.127, !299, !"_entry", i1 false, i1 false}
!301 = !{ptr @target_cmd_init_cdb._entry_ptr.129, !299, !"_entry_ptr", i1 false, i1 false}
!302 = !{ptr @__ksymtab_target_cmd_init_cdb, !303, !"__ksymtab_target_cmd_init_cdb", i1 false, i1 false}
!303 = !{!"../drivers/target/target_core_transport.c", i32 1520, i32 1}
!304 = !{ptr @target_cmd_parse_cdb._rs, !305, !"_rs", i1 false, i1 false}
!305 = !{!"../drivers/target/target_core_transport.c", i32 1530, i32 3}
!306 = !{ptr @.str.130, !305, !"<string literal>", i1 false, i1 false}
!307 = !{ptr @.str.131, !305, !"<string literal>", i1 false, i1 false}
!308 = !{ptr @target_cmd_parse_cdb.descriptor, !305, !"descriptor", i1 false, i1 false}
!309 = !{ptr @__ksymtab_target_cmd_parse_cdb, !310, !"__ksymtab_target_cmd_parse_cdb", i1 false, i1 false}
!310 = !{!"../drivers/target/target_core_transport.c", i32 1545, i32 1}
!311 = !{ptr @.str.132, !312, !"<string literal>", i1 false, i1 false}
!312 = !{!"../drivers/target/target_core_transport.c", i32 1560, i32 3}
!313 = !{ptr @.str.133, !312, !"<string literal>", i1 false, i1 false}
!314 = !{ptr @transport_handle_cdb_direct._entry, !312, !"_entry", i1 false, i1 false}
!315 = !{ptr @transport_handle_cdb_direct._entry_ptr, !312, !"_entry_ptr", i1 false, i1 false}
!316 = !{ptr @__ksymtab_transport_handle_cdb_direct, !317, !"__ksymtab_transport_handle_cdb_direct", i1 false, i1 false}
!317 = !{!"../drivers/target/target_core_transport.c", i32 1585, i32 1}
!318 = !{ptr @.str.134, !319, !"<string literal>", i1 false, i1 false}
!319 = !{!"../drivers/target/target_core_transport.c", i32 1600, i32 3}
!320 = !{ptr @.str.135, !319, !"<string literal>", i1 false, i1 false}
!321 = !{ptr @transport_generic_map_mem_to_cmd._entry, !319, !"_entry", i1 false, i1 false}
!322 = !{ptr @transport_generic_map_mem_to_cmd._entry_ptr, !319, !"_entry_ptr", i1 false, i1 false}
!323 = !{ptr @__ksymtab_target_init_cmd, !324, !"__ksymtab_target_init_cmd", i1 false, i1 false}
!324 = !{!"../drivers/target/target_core_transport.c", i32 1670, i32 1}
!325 = !{ptr @__ksymtab_target_submit_prep, !326, !"__ksymtab_target_submit_prep", i1 false, i1 false}
!326 = !{!"../drivers/target/target_core_transport.c", i32 1749, i32 1}
!327 = !{ptr @__ksymtab_target_submit, !328, !"__ksymtab_target_submit", i1 false, i1 false}
!328 = !{!"../drivers/target/target_core_transport.c", i32 1796, i32 1}
!329 = !{ptr @.str.136, !330, !"<string literal>", i1 false, i1 false}
!330 = !{!"../drivers/target/target_core_transport.c", i32 1831, i32 2}
!331 = !{ptr @__ksymtab_target_submit_cmd, !332, !"__ksymtab_target_submit_cmd", i1 false, i1 false}
!332 = !{!"../drivers/target/target_core_transport.c", i32 1841, i32 1}
!333 = !{ptr @__ksymtab_target_queue_submission, !334, !"__ksymtab_target_queue_submission", i1 false, i1 false}
!334 = !{!"../drivers/target/target_core_transport.c", i32 1914, i32 1}
!335 = !{ptr @target_submit_tmr.__key, !336, !"__key", i1 false, i1 false}
!336 = !{!"../drivers/target/target_core_transport.c", i32 1987, i32 2}
!337 = !{ptr @.str.137, !336, !"<string literal>", i1 false, i1 false}
!338 = !{ptr @__ksymtab_target_submit_tmr, !339, !"__ksymtab_target_submit_tmr", i1 false, i1 false}
!339 = !{!"../drivers/target/target_core_transport.c", i32 1991, i32 1}
!340 = !{ptr @.str.138, !341, !"<string literal>", i1 false, i1 false}
!341 = !{!"../drivers/target/target_core_transport.c", i32 2001, i32 2}
!342 = !{ptr @.str.139, !341, !"<string literal>", i1 false, i1 false}
!343 = !{ptr @transport_generic_request_failure.__UNIQUE_ID_ddebug671, !341, !"__UNIQUE_ID_ddebug671", i1 false, i1 false}
!344 = !{ptr @.str.140, !345, !"<string literal>", i1 false, i1 false}
!345 = !{!"../drivers/target/target_core_transport.c", i32 2003, i32 18}
!346 = !{ptr @transport_generic_request_failure.__key, !347, !"__key", i1 false, i1 false}
!347 = !{!"../drivers/target/target_core_transport.c", i32 2014, i32 3}
!348 = !{ptr @.str.141, !349, !"<string literal>", i1 false, i1 false}
!349 = !{!"../drivers/target/target_core_transport.c", i32 2076, i32 3}
!350 = !{ptr @transport_generic_request_failure._entry, !349, !"_entry", i1 false, i1 false}
!351 = !{ptr @transport_generic_request_failure._entry_ptr, !349, !"_entry_ptr", i1 false, i1 false}
!352 = !{ptr @__ksymtab_transport_generic_request_failure, !353, !"__ksymtab_transport_generic_request_failure", i1 false, i1 false}
!353 = !{!"../drivers/target/target_core_transport.c", i32 2099, i32 1}
!354 = !{ptr @__ksymtab_target_execute_cmd, !355, !"__ksymtab_target_execute_cmd", i1 false, i1 false}
!355 = !{!"../drivers/target/target_core_transport.c", i32 2265, i32 1}
!356 = !{ptr @__ksymtab_target_free_sgl, !357, !"__ksymtab_target_free_sgl", i1 false, i1 false}
!357 = !{!"../drivers/target/target_core_transport.c", i32 2625, i32 1}
!358 = !{ptr @__ksymtab_transport_kmap_data_sg, !359, !"__ksymtab_transport_kmap_data_sg", i1 false, i1 false}
!359 = !{!"../drivers/target/target_core_transport.c", i32 2711, i32 1}
!360 = !{ptr @__ksymtab_transport_kunmap_data_sg, !361, !"__ksymtab_transport_kunmap_data_sg", i1 false, i1 false}
!361 = !{!"../drivers/target/target_core_transport.c", i32 2725, i32 1}
!362 = !{ptr @__ksymtab_target_alloc_sgl, !363, !"__ksymtab_target_alloc_sgl", i1 false, i1 false}
!363 = !{!"../drivers/target/target_core_transport.c", i32 2736, i32 1}
!364 = !{ptr @.str.142, !365, !"<string literal>", i1 false, i1 false}
!365 = !{!"../drivers/target/target_core_transport.c", i32 2821, i32 3}
!366 = !{ptr @.str.143, !365, !"<string literal>", i1 false, i1 false}
!367 = !{ptr @transport_generic_new_cmd.__UNIQUE_ID_ddebug678, !365, !"__UNIQUE_ID_ddebug678", i1 false, i1 false}
!368 = !{ptr @.str.144, !369, !"<string literal>", i1 false, i1 false}
!369 = !{!"../drivers/target/target_core_transport.c", i32 2839, i32 2}
!370 = !{ptr @transport_generic_new_cmd.__UNIQUE_ID_ddebug679, !369, !"__UNIQUE_ID_ddebug679", i1 false, i1 false}
!371 = !{ptr @__ksymtab_transport_generic_new_cmd, !372, !"__ksymtab_transport_generic_new_cmd", i1 false, i1 false}
!372 = !{!"../drivers/target/target_core_transport.c", i32 2843, i32 1}
!373 = distinct !{null, !374, !"__already_done", i1 false, i1 false}
!374 = !{!"../drivers/target/target_core_transport.c", i32 2891, i32 2}
!375 = !{ptr @.str.145, !376, !"<string literal>", i1 false, i1 false}
!376 = !{!"../drivers/target/target_core_transport.c", i32 2945, i32 3}
!377 = !{ptr @.str.146, !376, !"<string literal>", i1 false, i1 false}
!378 = !{ptr @transport_generic_free_cmd.__UNIQUE_ID_ddebug682, !376, !"__UNIQUE_ID_ddebug682", i1 false, i1 false}
!379 = !{ptr @__ksymtab_transport_generic_free_cmd, !380, !"__ksymtab_transport_generic_free_cmd", i1 false, i1 false}
!380 = !{!"../drivers/target/target_core_transport.c", i32 2951, i32 1}
!381 = !{ptr @__ksymtab_target_get_sess_cmd, !382, !"__ksymtab_target_get_sess_cmd", i1 false, i1 false}
!382 = !{!"../drivers/target/target_core_transport.c", i32 2981, i32 1}
!383 = !{ptr @__ksymtab_target_put_sess_cmd, !384, !"__ksymtab_target_put_sess_cmd", i1 false, i1 false}
!384 = !{!"../drivers/target/target_core_transport.c", i32 3021, i32 1}
!385 = !{ptr @.str.147, !386, !"<string literal>", i1 false, i1 false}
!386 = !{!"../drivers/target/target_core_transport.c", i32 3109, i32 3}
!387 = !{ptr @.str.148, !386, !"<string literal>", i1 false, i1 false}
!388 = !{ptr @target_show_cmd.__UNIQUE_ID_ddebug683, !386, !"__UNIQUE_ID_ddebug683", i1 false, i1 false}
!389 = !{ptr @.str.149, !390, !"<string literal>", i1 false, i1 false}
!390 = !{!"../drivers/target/target_core_transport.c", i32 3116, i32 3}
!391 = !{ptr @target_show_cmd.__UNIQUE_ID_ddebug684, !390, !"__UNIQUE_ID_ddebug684", i1 false, i1 false}
!392 = !{ptr @__ksymtab_target_show_cmd, !393, !"__ksymtab_target_show_cmd", i1 false, i1 false}
!393 = !{!"../drivers/target/target_core_transport.c", i32 3124, i32 1}
!394 = !{ptr @.str.150, !395, !"<string literal>", i1 false, i1 false}
!395 = !{!"../drivers/target/target_core_transport.c", i32 3139, i32 2}
!396 = !{ptr @.str.151, !395, !"<string literal>", i1 false, i1 false}
!397 = !{ptr @target_stop_session.__UNIQUE_ID_ddebug685, !395, !"__UNIQUE_ID_ddebug685", i1 false, i1 false}
!398 = !{ptr @__ksymtab_target_stop_session, !399, !"__ksymtab_target_stop_session", i1 false, i1 false}
!399 = !{!"../drivers/target/target_core_transport.c", i32 3144, i32 1}
!400 = distinct !{null, !401, !"__already_done", i1 false, i1 false}
!401 = !{!"../drivers/target/target_core_transport.c", i32 3154, i32 2}
!402 = !{ptr @.str.152, !403, !"<string literal>", i1 false, i1 false}
!403 = !{!"../drivers/target/target_core_transport.c", i32 3157, i32 3}
!404 = !{ptr @.str.153, !403, !"<string literal>", i1 false, i1 false}
!405 = !{ptr @target_wait_for_sess_cmds.__UNIQUE_ID_ddebug686, !403, !"__UNIQUE_ID_ddebug686", i1 false, i1 false}
!406 = !{ptr @.str.154, !407, !"<string literal>", i1 false, i1 false}
!407 = !{!"../drivers/target/target_core_transport.c", i32 3164, i32 2}
!408 = !{ptr @target_wait_for_sess_cmds.__UNIQUE_ID_ddebug687, !407, !"__UNIQUE_ID_ddebug687", i1 false, i1 false}
!409 = !{ptr @__ksymtab_target_wait_for_sess_cmds, !410, !"__ksymtab_target_wait_for_sess_cmds", i1 false, i1 false}
!410 = !{!"../drivers/target/target_core_transport.c", i32 3166, i32 1}
!411 = !{ptr @__ksymtab_transport_wait_for_tasks, !412, !"__ksymtab_transport_wait_for_tasks", i1 false, i1 false}
!412 = !{!"../drivers/target/target_core_transport.c", i32 3243, i32 1}
!413 = distinct !{null, !414, !"__already_done", i1 false, i1 false}
!414 = !{!"../drivers/target/target_core_transport.c", i32 3476, i32 2}
!415 = !{ptr @__ksymtab_transport_send_check_condition_and_sense, !416, !"__ksymtab_transport_send_check_condition_and_sense", i1 false, i1 false}
!416 = !{!"../drivers/target/target_core_transport.c", i32 3492, i32 1}
!417 = distinct !{null, !418, !"__already_done", i1 false, i1 false}
!418 = !{!"../drivers/target/target_core_transport.c", i32 3502, i32 2}
!419 = !{ptr @__ksymtab_target_send_busy, !420, !"__ksymtab_target_send_busy", i1 false, i1 false}
!420 = !{!"../drivers/target/target_core_transport.c", i32 3508, i32 1}
!421 = !{ptr @transport_generic_handle_tmr._rs, !422, !"_rs", i1 false, i1 false}
!422 = !{!"../drivers/target/target_core_transport.c", i32 3581, i32 3}
!423 = !{ptr @__func__.transport_generic_handle_tmr, !422, !"<string literal>", i1 false, i1 false}
!424 = !{ptr @.str.155, !422, !"<string literal>", i1 false, i1 false}
!425 = !{ptr @transport_generic_handle_tmr._entry, !422, !"_entry", i1 false, i1 false}
!426 = !{ptr @transport_generic_handle_tmr._entry_ptr, !422, !"_entry_ptr", i1 false, i1 false}
!427 = !{ptr @transport_generic_handle_tmr.__key, !428, !"__key", i1 false, i1 false}
!428 = !{!"../drivers/target/target_core_transport.c", i32 3588, i32 2}
!429 = !{ptr @__ksymtab_transport_generic_handle_tmr, !430, !"__ksymtab_transport_generic_handle_tmr", i1 false, i1 false}
!430 = !{!"../drivers/target/target_core_transport.c", i32 3592, i32 1}
!431 = !{ptr @target_completion_wq, !432, !"target_completion_wq", i1 false, i1 false}
!432 = !{!"../drivers/target/target_core_transport.c", i32 43, i32 33}
!433 = !{ptr @target_submission_wq, !434, !"target_submission_wq", i1 false, i1 false}
!434 = !{!"../drivers/target/target_core_transport.c", i32 44, i32 33}
!435 = !{ptr @se_sess_cache, !436, !"se_sess_cache", i1 false, i1 false}
!436 = !{!"../drivers/target/target_core_transport.c", i32 45, i32 27}
!437 = !{ptr @se_ua_cache, !438, !"se_ua_cache", i1 false, i1 false}
!438 = !{!"../drivers/target/target_core_transport.c", i32 46, i32 20}
!439 = !{ptr @t10_pr_reg_cache, !440, !"t10_pr_reg_cache", i1 false, i1 false}
!440 = !{!"../drivers/target/target_core_transport.c", i32 47, i32 20}
!441 = !{ptr @t10_alua_lu_gp_cache, !442, !"t10_alua_lu_gp_cache", i1 false, i1 false}
!442 = !{!"../drivers/target/target_core_transport.c", i32 48, i32 20}
!443 = !{ptr @t10_alua_lu_gp_mem_cache, !444, !"t10_alua_lu_gp_mem_cache", i1 false, i1 false}
!444 = !{!"../drivers/target/target_core_transport.c", i32 49, i32 20}
!445 = !{ptr @t10_alua_tg_pt_gp_cache, !446, !"t10_alua_tg_pt_gp_cache", i1 false, i1 false}
!446 = !{!"../drivers/target/target_core_transport.c", i32 50, i32 20}
!447 = !{ptr @t10_alua_lba_map_cache, !448, !"t10_alua_lba_map_cache", i1 false, i1 false}
!448 = !{!"../drivers/target/target_core_transport.c", i32 51, i32 20}
!449 = !{ptr @t10_alua_lba_map_mem_cache, !450, !"t10_alua_lba_map_mem_cache", i1 false, i1 false}
!450 = !{!"../drivers/target/target_core_transport.c", i32 52, i32 20}
!451 = !{ptr @scsi_mib_index, !452, !"scsi_mib_index", i1 false, i1 false}
!452 = !{!"../drivers/target/target_core_transport.c", i32 178, i32 12}
!453 = !{ptr @__tpstrtab_target_sequencer_start, !1, !"__tpstrtab_target_sequencer_start", i1 false, i1 false}
!454 = !{ptr @__tpstrtab_target_cmd_complete, !5, !"__tpstrtab_target_cmd_complete", i1 false, i1 false}
!455 = !{ptr @str__target__trace_system_name, !456, !"str__target__trace_system_name", i1 false, i1 false}
!456 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!457 = !{ptr @.str.156, !1, !"<string literal>", i1 false, i1 false}
!458 = !{ptr @.str.157, !1, !"<string literal>", i1 false, i1 false}
!459 = !{ptr @.str.158, !1, !"<string literal>", i1 false, i1 false}
!460 = !{ptr @.str.159, !1, !"<string literal>", i1 false, i1 false}
!461 = !{ptr @.str.160, !1, !"<string literal>", i1 false, i1 false}
!462 = !{ptr @.str.161, !1, !"<string literal>", i1 false, i1 false}
!463 = !{ptr @.str.162, !1, !"<string literal>", i1 false, i1 false}
!464 = !{ptr @.str.163, !1, !"<string literal>", i1 false, i1 false}
!465 = !{ptr @.str.164, !1, !"<string literal>", i1 false, i1 false}
!466 = !{ptr @.str.165, !1, !"<string literal>", i1 false, i1 false}
!467 = !{ptr @.str.166, !1, !"<string literal>", i1 false, i1 false}
!468 = !{ptr @.str.167, !1, !"<string literal>", i1 false, i1 false}
!469 = !{ptr @.str.168, !1, !"<string literal>", i1 false, i1 false}
!470 = !{ptr @.str.169, !1, !"<string literal>", i1 false, i1 false}
!471 = !{ptr @trace_event_fields_target_sequencer_start, !1, !"trace_event_fields_target_sequencer_start", i1 false, i1 false}
!472 = !{ptr @trace_event_type_funcs_target_sequencer_start, !1, !"trace_event_type_funcs_target_sequencer_start", i1 false, i1 false}
!473 = !{ptr @.str.170, !1, !"<string literal>", i1 false, i1 false}
!474 = !{ptr @.str.171, !1, !"<string literal>", i1 false, i1 false}
!475 = !{ptr @.str.172, !1, !"<string literal>", i1 false, i1 false}
!476 = !{ptr @.str.173, !1, !"<string literal>", i1 false, i1 false}
!477 = !{ptr @.str.174, !1, !"<string literal>", i1 false, i1 false}
!478 = !{ptr @.str.175, !1, !"<string literal>", i1 false, i1 false}
!479 = !{ptr @.str.176, !1, !"<string literal>", i1 false, i1 false}
!480 = !{ptr @.str.177, !1, !"<string literal>", i1 false, i1 false}
!481 = !{ptr @.str.178, !1, !"<string literal>", i1 false, i1 false}
!482 = !{ptr @.str.179, !1, !"<string literal>", i1 false, i1 false}
!483 = !{ptr @.str.180, !1, !"<string literal>", i1 false, i1 false}
!484 = !{ptr @.str.181, !1, !"<string literal>", i1 false, i1 false}
!485 = !{ptr @.str.182, !1, !"<string literal>", i1 false, i1 false}
!486 = !{ptr @.str.183, !1, !"<string literal>", i1 false, i1 false}
!487 = !{ptr @.str.184, !1, !"<string literal>", i1 false, i1 false}
!488 = !{ptr @.str.185, !1, !"<string literal>", i1 false, i1 false}
!489 = !{ptr @.str.186, !1, !"<string literal>", i1 false, i1 false}
!490 = !{ptr @.str.187, !1, !"<string literal>", i1 false, i1 false}
!491 = !{ptr @.str.188, !1, !"<string literal>", i1 false, i1 false}
!492 = !{ptr @.str.189, !1, !"<string literal>", i1 false, i1 false}
!493 = !{ptr @.str.190, !1, !"<string literal>", i1 false, i1 false}
!494 = !{ptr @.str.191, !1, !"<string literal>", i1 false, i1 false}
!495 = !{ptr @.str.192, !1, !"<string literal>", i1 false, i1 false}
!496 = !{ptr @.str.193, !1, !"<string literal>", i1 false, i1 false}
!497 = !{ptr @.str.194, !1, !"<string literal>", i1 false, i1 false}
!498 = !{ptr @.str.195, !1, !"<string literal>", i1 false, i1 false}
!499 = !{ptr @.str.196, !1, !"<string literal>", i1 false, i1 false}
!500 = !{ptr @.str.197, !1, !"<string literal>", i1 false, i1 false}
!501 = !{ptr @.str.198, !1, !"<string literal>", i1 false, i1 false}
!502 = !{ptr @.str.199, !1, !"<string literal>", i1 false, i1 false}
!503 = !{ptr @.str.200, !1, !"<string literal>", i1 false, i1 false}
!504 = !{ptr @.str.201, !1, !"<string literal>", i1 false, i1 false}
!505 = !{ptr @.str.202, !1, !"<string literal>", i1 false, i1 false}
!506 = !{ptr @.str.203, !1, !"<string literal>", i1 false, i1 false}
!507 = !{ptr @.str.204, !1, !"<string literal>", i1 false, i1 false}
!508 = !{ptr @.str.205, !1, !"<string literal>", i1 false, i1 false}
!509 = !{ptr @.str.206, !1, !"<string literal>", i1 false, i1 false}
!510 = !{ptr @.str.207, !1, !"<string literal>", i1 false, i1 false}
!511 = !{ptr @.str.208, !1, !"<string literal>", i1 false, i1 false}
!512 = !{ptr @.str.209, !1, !"<string literal>", i1 false, i1 false}
!513 = !{ptr @.str.210, !1, !"<string literal>", i1 false, i1 false}
!514 = !{ptr @.str.211, !1, !"<string literal>", i1 false, i1 false}
!515 = !{ptr @.str.212, !1, !"<string literal>", i1 false, i1 false}
!516 = !{ptr @.str.213, !1, !"<string literal>", i1 false, i1 false}
!517 = !{ptr @.str.214, !1, !"<string literal>", i1 false, i1 false}
!518 = !{ptr @.str.215, !1, !"<string literal>", i1 false, i1 false}
!519 = !{ptr @.str.216, !1, !"<string literal>", i1 false, i1 false}
!520 = !{ptr @.str.217, !1, !"<string literal>", i1 false, i1 false}
!521 = !{ptr @.str.218, !1, !"<string literal>", i1 false, i1 false}
!522 = !{ptr @.str.219, !1, !"<string literal>", i1 false, i1 false}
!523 = !{ptr @.str.220, !1, !"<string literal>", i1 false, i1 false}
!524 = !{ptr @.str.221, !1, !"<string literal>", i1 false, i1 false}
!525 = !{ptr @.str.222, !1, !"<string literal>", i1 false, i1 false}
!526 = !{ptr @.str.223, !1, !"<string literal>", i1 false, i1 false}
!527 = !{ptr @.str.224, !1, !"<string literal>", i1 false, i1 false}
!528 = !{ptr @.str.225, !1, !"<string literal>", i1 false, i1 false}
!529 = !{ptr @.str.226, !1, !"<string literal>", i1 false, i1 false}
!530 = !{ptr @.str.227, !1, !"<string literal>", i1 false, i1 false}
!531 = !{ptr @.str.228, !1, !"<string literal>", i1 false, i1 false}
!532 = !{ptr @.str.229, !1, !"<string literal>", i1 false, i1 false}
!533 = !{ptr @.str.230, !1, !"<string literal>", i1 false, i1 false}
!534 = !{ptr @.str.231, !1, !"<string literal>", i1 false, i1 false}
!535 = !{ptr @.str.232, !1, !"<string literal>", i1 false, i1 false}
!536 = !{ptr @.str.233, !1, !"<string literal>", i1 false, i1 false}
!537 = !{ptr @.str.234, !1, !"<string literal>", i1 false, i1 false}
!538 = !{ptr @.str.235, !1, !"<string literal>", i1 false, i1 false}
!539 = !{ptr @.str.236, !1, !"<string literal>", i1 false, i1 false}
!540 = !{ptr @.str.237, !1, !"<string literal>", i1 false, i1 false}
!541 = !{ptr @.str.238, !1, !"<string literal>", i1 false, i1 false}
!542 = !{ptr @.str.239, !1, !"<string literal>", i1 false, i1 false}
!543 = !{ptr @.str.240, !1, !"<string literal>", i1 false, i1 false}
!544 = !{ptr @.str.241, !1, !"<string literal>", i1 false, i1 false}
!545 = !{ptr @.str.242, !1, !"<string literal>", i1 false, i1 false}
!546 = !{ptr @.str.243, !1, !"<string literal>", i1 false, i1 false}
!547 = !{ptr @.str.244, !1, !"<string literal>", i1 false, i1 false}
!548 = !{ptr @.str.245, !1, !"<string literal>", i1 false, i1 false}
!549 = !{ptr @.str.246, !1, !"<string literal>", i1 false, i1 false}
!550 = !{ptr @.str.247, !1, !"<string literal>", i1 false, i1 false}
!551 = !{ptr @.str.248, !1, !"<string literal>", i1 false, i1 false}
!552 = !{ptr @.str.249, !1, !"<string literal>", i1 false, i1 false}
!553 = !{ptr @.str.250, !1, !"<string literal>", i1 false, i1 false}
!554 = !{ptr @.str.251, !1, !"<string literal>", i1 false, i1 false}
!555 = !{ptr @.str.252, !1, !"<string literal>", i1 false, i1 false}
!556 = !{ptr @.str.253, !1, !"<string literal>", i1 false, i1 false}
!557 = !{ptr @.str.254, !1, !"<string literal>", i1 false, i1 false}
!558 = !{ptr @.str.255, !1, !"<string literal>", i1 false, i1 false}
!559 = !{ptr @.str.256, !1, !"<string literal>", i1 false, i1 false}
!560 = !{ptr @.str.257, !1, !"<string literal>", i1 false, i1 false}
!561 = !{ptr @.str.258, !1, !"<string literal>", i1 false, i1 false}
!562 = !{ptr @.str.259, !1, !"<string literal>", i1 false, i1 false}
!563 = !{ptr @.str.260, !1, !"<string literal>", i1 false, i1 false}
!564 = !{ptr @.str.261, !1, !"<string literal>", i1 false, i1 false}
!565 = !{ptr @.str.262, !1, !"<string literal>", i1 false, i1 false}
!566 = !{ptr @trace_raw_output_target_sequencer_start.symbols, !1, !"symbols", i1 false, i1 false}
!567 = !{ptr @.str.264, !1, !"<string literal>", i1 false, i1 false}
!568 = !{ptr @.str.265, !1, !"<string literal>", i1 false, i1 false}
!569 = !{ptr @.str.266, !1, !"<string literal>", i1 false, i1 false}
!570 = !{ptr @.str.267, !1, !"<string literal>", i1 false, i1 false}
!571 = !{ptr @trace_raw_output_target_sequencer_start.symbols.263, !1, !"symbols", i1 false, i1 false}
!572 = !{ptr @print_fmt_target_sequencer_start, !1, !"print_fmt_target_sequencer_start", i1 false, i1 false}
!573 = !{ptr @.str.268, !5, !"<string literal>", i1 false, i1 false}
!574 = !{ptr @.str.269, !5, !"<string literal>", i1 false, i1 false}
!575 = !{ptr @.str.270, !5, !"<string literal>", i1 false, i1 false}
!576 = !{ptr @.str.271, !5, !"<string literal>", i1 false, i1 false}
!577 = !{ptr @trace_event_fields_target_cmd_complete, !5, !"trace_event_fields_target_cmd_complete", i1 false, i1 false}
!578 = !{ptr @trace_event_type_funcs_target_cmd_complete, !5, !"trace_event_type_funcs_target_cmd_complete", i1 false, i1 false}
!579 = !{ptr @.str.272, !5, !"<string literal>", i1 false, i1 false}
!580 = !{ptr @.str.273, !5, !"<string literal>", i1 false, i1 false}
!581 = !{ptr @.str.274, !5, !"<string literal>", i1 false, i1 false}
!582 = !{ptr @.str.275, !5, !"<string literal>", i1 false, i1 false}
!583 = !{ptr @.str.276, !5, !"<string literal>", i1 false, i1 false}
!584 = !{ptr @.str.277, !5, !"<string literal>", i1 false, i1 false}
!585 = !{ptr @.str.278, !5, !"<string literal>", i1 false, i1 false}
!586 = !{ptr @.str.279, !5, !"<string literal>", i1 false, i1 false}
!587 = !{ptr @.str.280, !5, !"<string literal>", i1 false, i1 false}
!588 = !{ptr @.str.281, !5, !"<string literal>", i1 false, i1 false}
!589 = !{ptr @.str.282, !5, !"<string literal>", i1 false, i1 false}
!590 = !{ptr @.str.283, !5, !"<string literal>", i1 false, i1 false}
!591 = !{ptr @trace_raw_output_target_cmd_complete.symbols, !5, !"symbols", i1 false, i1 false}
!592 = !{ptr @.str.284, !5, !"<string literal>", i1 false, i1 false}
!593 = !{ptr @.str.285, !5, !"<string literal>", i1 false, i1 false}
!594 = !{ptr @trace_raw_output_target_cmd_complete.symbols.286, !5, !"symbols", i1 false, i1 false}
!595 = !{ptr @trace_raw_output_target_cmd_complete.symbols.287, !5, !"symbols", i1 false, i1 false}
!596 = !{ptr @print_fmt_target_cmd_complete, !5, !"print_fmt_target_cmd_complete", i1 false, i1 false}
!597 = !{ptr @.str.288, !598, !"<string literal>", i1 false, i1 false}
!598 = !{!"../drivers/target/target_core_transport.c", i32 177, i32 8}
!599 = !{ptr @scsi_mib_index_lock, !598, !"scsi_mib_index_lock", i1 false, i1 false}
!600 = !{ptr @init_completion.__key, !601, !"__key", i1 false, i1 false}
!601 = !{!"../include/linux/completion.h", i32 87, i32 2}
!602 = !{ptr @.str.289, !601, !"<string literal>", i1 false, i1 false}
!603 = distinct !{null, !604, !"__warned", i1 false, i1 false}
!604 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!605 = !{ptr @.str.290, !604, !"<string literal>", i1 false, i1 false}
!606 = !{ptr @.str.291, !604, !"<string literal>", i1 false, i1 false}
!607 = distinct !{null, !608, !"__warned", i1 false, i1 false}
!608 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!609 = !{ptr @.str.292, !608, !"<string literal>", i1 false, i1 false}
!610 = !{ptr @.str.293, !611, !"<string literal>", i1 false, i1 false}
!611 = !{!"../drivers/target/target_core_transport.c", i32 336, i32 3}
!612 = !{ptr @.str.294, !611, !"<string literal>", i1 false, i1 false}
!613 = !{ptr @transport_init_session_tags._entry, !611, !"_entry", i1 false, i1 false}
!614 = !{ptr @transport_init_session_tags._entry_ptr, !611, !"_entry_ptr", i1 false, i1 false}
!615 = !{ptr @.str.296, !616, !"<string literal>", i1 false, i1 false}
!616 = !{!"../drivers/target/target_core_transport.c", i32 341, i32 3}
!617 = !{ptr @transport_init_session_tags._entry.295, !616, !"_entry", i1 false, i1 false}
!618 = !{ptr @transport_init_session_tags._entry_ptr.297, !616, !"_entry_ptr", i1 false, i1 false}
!619 = !{ptr @.str.298, !620, !"<string literal>", i1 false, i1 false}
!620 = !{!"../drivers/target/target_core_transport.c", i32 776, i32 2}
!621 = !{ptr @.str.299, !620, !"<string literal>", i1 false, i1 false}
!622 = !{ptr @transport_get_sense_buffer.__UNIQUE_ID_ddebug660, !620, !"__UNIQUE_ID_ddebug660", i1 false, i1 false}
!623 = !{ptr @target_cmd_interrupted.__key, !624, !"__key", i1 false, i1 false}
!624 = !{!"../drivers/target/target_core_transport.c", i32 859, i32 3}
!625 = distinct !{null, !1, !"__already_done", i1 false, i1 false}
!626 = !{ptr @.str.300, !1, !"<string literal>", i1 false, i1 false}
!627 = distinct !{null, !1, !"__warned", i1 false, i1 false}
!628 = !{ptr @.str.301, !1, !"<string literal>", i1 false, i1 false}
!629 = distinct !{null, !630, !"__already_done", i1 false, i1 false}
!630 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!631 = !{ptr @.str.302, !630, !"<string literal>", i1 false, i1 false}
!632 = !{ptr @.str.303, !633, !"<string literal>", i1 false, i1 false}
!633 = !{!"../drivers/target/target_core_transport.c", i32 1463, i32 3}
!634 = !{ptr @.str.304, !633, !"<string literal>", i1 false, i1 false}
!635 = !{ptr @transport_check_alloc_task_attr.__UNIQUE_ID_ddebug668, !633, !"__UNIQUE_ID_ddebug668", i1 false, i1 false}
!636 = !{ptr @.str.305, !637, !"<string literal>", i1 false, i1 false}
!637 = !{!"./../include/linux/highmem-internal.h", i32 44, i32 2}
!638 = !{ptr @.str.306, !639, !"<string literal>", i1 false, i1 false}
!639 = !{!"../drivers/target/target_core_transport.c", i32 711, i32 3}
!640 = !{ptr @transport_cmd_check_stop_to_fabric.__UNIQUE_ID_ddebug659, !639, !"__UNIQUE_ID_ddebug659", i1 false, i1 false}
!641 = distinct !{null, !5, !"__already_done", i1 false, i1 false}
!642 = distinct !{null, !5, !"__warned", i1 false, i1 false}
!643 = !{ptr @.str.307, !644, !"<string literal>", i1 false, i1 false}
!644 = !{!"../drivers/target/target_core_transport.c", i32 2193, i32 3}
!645 = !{ptr @.str.308, !644, !"<string literal>", i1 false, i1 false}
!646 = !{ptr @target_handle_task_attr.__UNIQUE_ID_ddebug672, !644, !"__UNIQUE_ID_ddebug672", i1 false, i1 false}
!647 = !{ptr @.str.309, !648, !"<string literal>", i1 false, i1 false}
!648 = !{!"../drivers/target/target_core_transport.c", i32 2199, i32 3}
!649 = !{ptr @target_handle_task_attr.__UNIQUE_ID_ddebug673, !648, !"__UNIQUE_ID_ddebug673", i1 false, i1 false}
!650 = !{ptr @.str.310, !651, !"<string literal>", i1 false, i1 false}
!651 = !{!"../drivers/target/target_core_transport.c", i32 2230, i32 2}
!652 = !{ptr @target_handle_task_attr.__UNIQUE_ID_ddebug674, !651, !"__UNIQUE_ID_ddebug674", i1 false, i1 false}
!653 = !{ptr @.str.311, !654, !"<string literal>", i1 false, i1 false}
!654 = !{!"../drivers/target/target_core_transport.c", i32 2335, i32 3}
!655 = !{ptr @.str.312, !654, !"<string literal>", i1 false, i1 false}
!656 = !{ptr @transport_complete_task_attr.__UNIQUE_ID_ddebug675, !654, !"__UNIQUE_ID_ddebug675", i1 false, i1 false}
!657 = !{ptr @.str.313, !658, !"<string literal>", i1 false, i1 false}
!658 = !{!"../drivers/target/target_core_transport.c", i32 2343, i32 3}
!659 = !{ptr @transport_complete_task_attr.__UNIQUE_ID_ddebug676, !658, !"__UNIQUE_ID_ddebug676", i1 false, i1 false}
!660 = !{ptr @transport_handle_queue_full._rs, !661, !"_rs", i1 false, i1 false}
!661 = !{!"../drivers/target/target_core_transport.c", i32 2436, i32 3}
!662 = !{ptr @__func__.transport_handle_queue_full, !661, !"<string literal>", i1 false, i1 false}
!663 = !{ptr @.str.314, !661, !"<string literal>", i1 false, i1 false}
!664 = !{ptr @transport_handle_queue_full._entry, !661, !"_entry", i1 false, i1 false}
!665 = !{ptr @transport_handle_queue_full._entry_ptr, !661, !"_entry_ptr", i1 false, i1 false}
!666 = !{ptr @.str.315, !667, !"<string literal>", i1 false, i1 false}
!667 = !{!"../drivers/target/target_core_transport.c", i32 2615, i32 2}
!668 = !{ptr @.str.316, !667, !"<string literal>", i1 false, i1 false}
!669 = !{ptr @target_complete_ok_work.__UNIQUE_ID_ddebug677, !667, !"__UNIQUE_ID_ddebug677", i1 false, i1 false}
!670 = !{ptr @.str.317, !671, !"<string literal>", i1 false, i1 false}
!671 = !{!"../drivers/target/target_core_transport.c", i32 2856, i32 3}
!672 = !{ptr @.str.318, !671, !"<string literal>", i1 false, i1 false}
!673 = !{ptr @transport_write_pending_qf.__UNIQUE_ID_ddebug680, !671, !"__UNIQUE_ID_ddebug680", i1 false, i1 false}
!674 = !{ptr @transport_write_pending_qf.__UNIQUE_ID_ddebug681, !675, !"__UNIQUE_ID_ddebug681", i1 false, i1 false}
!675 = !{!"../drivers/target/target_core_transport.c", i32 2864, i32 3}
!676 = distinct !{null, !677, !"__already_done", i1 false, i1 false}
!677 = !{!"../include/linux/percpu-refcount.h", i32 280, i32 2}
!678 = !{ptr @.str.319, !677, !"<string literal>", i1 false, i1 false}
!679 = !{ptr @.str.320, !680, !"<string literal>", i1 false, i1 false}
!680 = !{!"../drivers/target/target_core_transport.c", i32 3071, i32 27}
!681 = !{ptr @.str.321, !682, !"<string literal>", i1 false, i1 false}
!682 = !{!"../drivers/target/target_core_transport.c", i32 3073, i32 27}
!683 = !{ptr @.str.322, !684, !"<string literal>", i1 false, i1 false}
!684 = !{!"../drivers/target/target_core_transport.c", i32 3075, i32 27}
!685 = !{ptr @.str.323, !686, !"<string literal>", i1 false, i1 false}
!686 = !{!"../drivers/target/target_core_transport.c", i32 3077, i32 27}
!687 = !{ptr @.str.324, !688, !"<string literal>", i1 false, i1 false}
!688 = !{!"../drivers/target/target_core_transport.c", i32 3079, i32 27}
!689 = !{ptr @.str.325, !690, !"<string literal>", i1 false, i1 false}
!690 = !{!"../drivers/target/target_core_transport.c", i32 3081, i32 27}
!691 = !{ptr @.str.326, !692, !"<string literal>", i1 false, i1 false}
!692 = !{!"../drivers/target/target_core_transport.c", i32 3057, i32 38}
!693 = !{ptr @.str.327, !694, !"<string literal>", i1 false, i1 false}
!694 = !{!"../drivers/target/target_core_transport.c", i32 3032, i32 9}
!695 = !{ptr @.str.328, !696, !"<string literal>", i1 false, i1 false}
!696 = !{!"../drivers/target/target_core_transport.c", i32 3038, i32 34}
!697 = !{ptr @.str.329, !698, !"<string literal>", i1 false, i1 false}
!698 = !{!"../drivers/target/target_core_transport.c", i32 3039, i32 34}
!699 = !{ptr @.str.330, !700, !"<string literal>", i1 false, i1 false}
!700 = !{!"../drivers/target/target_core_transport.c", i32 3041, i32 36}
!701 = !{ptr @.str.331, !702, !"<string literal>", i1 false, i1 false}
!702 = !{!"../drivers/target/target_core_transport.c", i32 3042, i32 34}
!703 = !{ptr @.str.332, !704, !"<string literal>", i1 false, i1 false}
!704 = !{!"../drivers/target/target_core_transport.c", i32 3044, i32 13}
!705 = !{ptr @.str.333, !706, !"<string literal>", i1 false, i1 false}
!706 = !{!"../drivers/target/target_core_transport.c", i32 3045, i32 40}
!707 = !{ptr @.str.334, !708, !"<string literal>", i1 false, i1 false}
!708 = !{!"../drivers/target/target_core_transport.c", i32 3046, i32 40}
!709 = !{ptr @.str.335, !710, !"<string literal>", i1 false, i1 false}
!710 = !{!"../drivers/target/target_core_transport.c", i32 3047, i32 41}
!711 = !{ptr @.str.336, !712, !"<string literal>", i1 false, i1 false}
!712 = !{!"../drivers/target/target_core_transport.c", i32 3089, i32 31}
!713 = !{ptr @.str.337, !714, !"<string literal>", i1 false, i1 false}
!714 = !{!"../drivers/target/target_core_transport.c", i32 3090, i32 34}
!715 = !{ptr @.str.338, !716, !"<string literal>", i1 false, i1 false}
!716 = !{!"../drivers/target/target_core_transport.c", i32 3091, i32 30}
!717 = !{ptr @.str.339, !718, !"<string literal>", i1 false, i1 false}
!718 = !{!"../drivers/target/target_core_transport.c", i32 3092, i32 34}
!719 = !{ptr @.str.340, !720, !"<string literal>", i1 false, i1 false}
!720 = !{!"../drivers/target/target_core_transport.c", i32 3093, i32 30}
!721 = !{ptr @.str.341, !722, !"<string literal>", i1 false, i1 false}
!722 = !{!"../drivers/target/target_core_transport.c", i32 3094, i32 37}
!723 = !{ptr @.str.342, !724, !"<string literal>", i1 false, i1 false}
!724 = !{!"../drivers/target/target_core_transport.c", i32 3095, i32 37}
!725 = !{ptr @.str.343, !726, !"<string literal>", i1 false, i1 false}
!726 = !{!"../drivers/target/target_core_transport.c", i32 3096, i32 34}
!727 = !{ptr @.str.344, !728, !"<string literal>", i1 false, i1 false}
!728 = !{!"../drivers/target/target_core_transport.c", i32 3211, i32 18}
!729 = !{ptr @.str.345, !730, !"<string literal>", i1 false, i1 false}
!730 = !{!"../drivers/target/target_core_transport.c", i32 3217, i32 19}
!731 = !{ptr @.str.346, !732, !"<string literal>", i1 false, i1 false}
!732 = !{!"../drivers/target/target_core_transport.c", i32 3222, i32 2}
!733 = !{ptr @.str.347, !732, !"<string literal>", i1 false, i1 false}
!734 = !{ptr @__transport_wait_for_tasks.__UNIQUE_ID_ddebug688, !732, !"__UNIQUE_ID_ddebug688", i1 false, i1 false}
!735 = distinct !{null, !736, !"__already_done", i1 false, i1 false}
!736 = !{!"../drivers/target/target_core_transport.c", i32 3455, i32 3}
!737 = distinct !{null, !738, !"__already_done", i1 false, i1 false}
!738 = !{!"../drivers/target/target_core_transport.c", i32 3465, i32 3}
!739 = !{ptr @sense_detail_table, !740, !"sense_detail_table", i1 false, i1 false}
!740 = !{!"../drivers/target/target_core_transport.c", i32 3252, i32 34}
!741 = !{ptr @.str.349, !742, !"<string literal>", i1 false, i1 false}
!742 = !{!"../drivers/target/target_core_transport.c", i32 805, i32 2}
!743 = !{ptr @.str.350, !742, !"<string literal>", i1 false, i1 false}
!744 = !{ptr @target_handle_abort.__UNIQUE_ID_ddebug661, !742, !"__UNIQUE_ID_ddebug661", i1 false, i1 false}
!745 = !{ptr @.str.351, !746, !"<string literal>", i1 false, i1 false}
!746 = !{!"../drivers/target/target_core_transport.c", i32 810, i32 4}
!747 = !{ptr @target_handle_abort.__UNIQUE_ID_ddebug662, !746, !"__UNIQUE_ID_ddebug662", i1 false, i1 false}
!748 = distinct !{null, !749, !"__already_done", i1 false, i1 false}
!749 = !{!"../drivers/target/target_core_transport.c", i32 830, i32 4}
!750 = distinct !{null, !751, !"__already_done", i1 false, i1 false}
!751 = !{!"../drivers/target/target_core_transport.c", i32 838, i32 2}
!752 = !{ptr @.str.353, !753, !"<string literal>", i1 false, i1 false}
!753 = !{!"../drivers/target/target_core_transport.c", i32 3546, i32 3}
!754 = !{ptr @.str.354, !753, !"<string literal>", i1 false, i1 false}
!755 = !{ptr @target_tmr_work._entry, !753, !"_entry", i1 false, i1 false}
!756 = !{ptr @target_tmr_work._entry_ptr, !753, !"_entry_ptr", i1 false, i1 false}
!757 = !{!"sp"}
!758 = !{i32 1, !"wchar_size", i32 2}
!759 = !{i32 1, !"min_enum_size", i32 4}
!760 = !{i32 8, !"branch-target-enforcement", i32 0}
!761 = !{i32 8, !"sign-return-address", i32 0}
!762 = !{i32 8, !"sign-return-address-all", i32 0}
!763 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!764 = !{i32 7, !"uwtable", i32 1}
!765 = !{i32 7, !"frame-pointer", i32 2}
!766 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!767 = !{!"branch_weights", i32 2000, i32 1}
!768 = !{!"branch_weights", i32 1, i32 2000}
!769 = !{!"auto-init"}
!770 = !{i64 2160545424, i64 2160545927, i64 2160545461, i64 2160545517, i64 2160545551, i64 2160545575, i64 2160545616, i64 2160545637, i64 2160545665, i64 2160545699}
!771 = !{i64 2149486049}
!772 = !{i64 835501, i64 835562}
!773 = !{i64 838233}
!774 = !{i64 838518}
!775 = !{i64 2148529695}
!776 = !{i64 2148444428, i64 2148444460, i64 2148444489, i64 2148444523, i64 2148444554, i64 2148444577}
!777 = !{i64 2148529924}
!778 = !{i64 2149486315}
!779 = !{i64 2148260866, i64 2148260871, i64 2148260884, i64 2148260928, i64 2148260962, i64 2148260983}
!780 = !{i8 0, i8 2}
!781 = !{i64 2148530774}
!782 = !{i64 2148445238, i64 2148445270, i64 2148445299, i64 2148445333, i64 2148445364, i64 2148445387}
!783 = !{i64 2150525562}
!784 = !{i64 2148441243, i64 2148441269, i64 2148441298, i64 2148441332, i64 2148441363, i64 2148441386}
!785 = !{i32 0, i32 33}
!786 = !{i64 2158814128}
!787 = !{i64 2148443708, i64 2148443734, i64 2148443763, i64 2148443797, i64 2148443828, i64 2148443851}
!788 = !{i64 2158814305}
!789 = !{i64 2159224720}
!790 = !{i64 2159224933}
!791 = !{i64 2149494608}
!792 = !{i64 2149495644}
!793 = !{i64 2160698842, i64 2160699346, i64 2160698879, i64 2160698935, i64 2160698969, i64 2160698993, i64 2160699034, i64 2160699055, i64 2160699083, i64 2160699117}
!794 = !{i64 2160700524, i64 2160701028, i64 2160700561, i64 2160700617, i64 2160700651, i64 2160700675, i64 2160700716, i64 2160700737, i64 2160700765, i64 2160700799}
!795 = !{i64 2148442773, i64 2148442805, i64 2148442834, i64 2148442868, i64 2148442899, i64 2148442922}
!796 = !{i64 2148440662}
!797 = !{i64 927262, i64 927287, i64 927309, i64 927325, i64 927337, i64 927357, i64 927381, i64 927397, i64 927409}
!798 = !{i64 2148440850}
!799 = !{i64 2160703593, i64 2160704097, i64 2160703630, i64 2160703686, i64 2160703720, i64 2160703744, i64 2160703785, i64 2160703806, i64 2160703834, i64 2160703868}
!800 = !{i64 2160706885, i64 2160707389, i64 2160706922, i64 2160706978, i64 2160707012, i64 2160707036, i64 2160707077, i64 2160707098, i64 2160707126, i64 2160707160}
!801 = !{i64 2154996207, i64 2154996699, i64 2154996244, i64 2154996300, i64 2154996334, i64 2154996358, i64 2154996399, i64 2154996420, i64 2154996448, i64 2154996482}
!802 = !{i64 2149194747}
!803 = !{i64 948011, i64 948028, i64 948052, i64 948078, i64 948096}
!804 = !{i64 2149195100}
!805 = !{i64 2160723809, i64 2160724313, i64 2160723846, i64 2160723902, i64 2160723936, i64 2160723960, i64 2160724001, i64 2160724022, i64 2160724050, i64 2160724084}
!806 = !{i64 2160609601}
!807 = !{i64 950735, i64 950756, i64 950779, i64 950798, i64 950817}
!808 = !{i64 2160610009}
!809 = !{i64 2159241224}
!810 = !{i64 2159241431}
!811 = !{i64 2158813604}
!812 = !{i64 2158813781}
!813 = !{i64 2160761334, i64 2160761838, i64 2160761371, i64 2160761427, i64 2160761461, i64 2160761485, i64 2160761526, i64 2160761547, i64 2160761575, i64 2160761609}
!814 = !{i64 2148543066}
!815 = !{i64 926756, i64 926780, i64 926801, i64 926818, i64 926835}
!816 = !{i64 2148543292}
