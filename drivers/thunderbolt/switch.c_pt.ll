; ModuleID = '/llk/IR_all_yes/drivers/thunderbolt/switch.c_pt.bc'
source_filename = "../drivers/thunderbolt/switch.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.kernel_param_ops = type { i32, ptr, ptr, ptr }
%struct.kernel_param = type { ptr, ptr, ptr, i16, i8, i8, %union.anon.65 }
%union.anon.65 = type { ptr }
%struct.atomic_t = type { i32 }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.dev_pm_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.device_type = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.bus_type = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.lock_class_key, i8 }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.attribute_group = type { ptr, ptr, ptr, ptr, ptr }
%struct.device_attribute = type { %struct.attribute, ptr, ptr }
%struct.attribute = type { ptr, i16, i8, ptr, %struct.lock_class_key }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.list_head = type { ptr, ptr }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.tb_cap_phy = type { %struct.tb_cap_basic, [6 x i8] }
%struct.tb_cap_basic = type { i8, i8 }
%struct.tb_port = type { %struct.tb_regs_port_header, ptr, ptr, ptr, i32, i32, i32, i32, ptr, i8, i8, i8, ptr, i8, %struct.ida, %struct.ida, %struct.list_head, i32, i32, i32 }
%struct.tb_regs_port_header = type { i16, i16, [12 x i8], i32, i32, i32, i32 }
%struct.ida = type { %struct.xarray }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.tb_switch = type { %struct.device, %struct.tb_regs_switch_header, ptr, ptr, %struct.tb_switch_tmu, ptr, i64, ptr, i16, i16, ptr, ptr, i32, i32, i8, i32, i32, i32, i32, i32, i8, ptr, ptr, i8, i8, i8, i8, i32, i32, ptr, ptr, i8, i8, i8, i8, %struct.completion, i32, i8, i32, i32, i32, i32, i32, i32 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.tb_regs_switch_header = type <{ i16, i16, i32, i32, i64 }>
%struct.tb_switch_tmu = type { i32, i8, i32, i8, i8, i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.tb = type { %struct.device, %struct.mutex, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, [0 x i32] }
%struct.tb_nhi = type { %struct.spinlock, ptr, ptr, ptr, ptr, ptr, %struct.ida, i8, %struct.work_struct, i32, i32 }
%struct.pci_dev = type <{ %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i16, i16, i16, i16, i32, i8, i8, i16, ptr, ptr, ptr, i32, i8, i8, i8, i8, i8, i8, i16, ptr, ptr, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, ptr, i8, i8, i16, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], %struct.hlist_head, i32, [17 x ptr], [17 x ptr], i8, i8, [2 x i8], ptr, %struct.raw_spinlock, %struct.pci_vpd, i16, i8, i8, %union.anon.71, i16, i8, i8, i16, [2 x i8], i32, i8, i8, i16, i16, i16, i32, i32, ptr, i32, [7 x i8], i8 }>
%struct.device_dma_parameters = type { i32, i32, i32 }
%struct.resource = type { i32, i32, ptr, i32, i32, ptr, ptr, ptr }
%struct.hlist_head = type { ptr }
%struct.pci_vpd = type { %struct.mutex, i32, i8 }
%union.anon.71 = type { ptr }
%struct.tb_cfg_result = type { i64, i32, i32, i32 }
%struct.nvm_auth_status = type { %struct.list_head, %struct.uuid_t, i32 }
%struct.uuid_t = type { [16 x i8] }
%struct.tb_nvm = type { ptr, i8, i8, i32, ptr, ptr, ptr, i32, i8, i8 }
%struct.tb_regs_hop = type { i64 }
%struct.tb_xdomain = type { %struct.device, ptr, ptr, ptr, i64, i16, i16, i32, i32, %struct.mutex, ptr, ptr, i32, i32, i8, i8, %struct.ida, %struct.ida, %struct.ida, ptr, i32, i32, ptr, i32, %struct.delayed_work, i32, %struct.delayed_work, i32, %struct.delayed_work, i32, i8, i8 }
%struct.tb_sw_lookup = type { ptr, i8, i8, ptr, i64 }
%struct.tb_cm_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.53, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.29 }
%struct.llist_node = type { ptr }
%union.anon.29 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%struct.cpumask = type { [1 x i32] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.31 }
%union.anon.31 = type { %struct.anon.32 }
%struct.anon.32 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.kuid_t = type { i32 }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.tlbflush_unmap_batch = type {}
%union.anon.53 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.pci_bus = type { %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, [4 x ptr], %struct.list_head, %struct.resource, ptr, ptr, ptr, i8, i8, i8, i8, i32, [48 x i8], i16, i16, ptr, %struct.device, ptr, ptr, i8 }

@__param_str_clx = internal constant [16 x i8] c"thunderbolt.clx\00", align 1
@param_ops_bool = external dso_local constant %struct.kernel_param_ops, align 4
@clx_enabled = internal global { i8, [31 x i8] } { i8 1, [31 x i8] zeroinitializer }, align 32
@__param_clx = internal constant %struct.kernel_param { ptr @__param_str_clx, ptr null, ptr @param_ops_bool, i16 292, i8 -1, i8 0, %union.anon.65 { ptr @clx_enabled } }, section "__param", align 4
@__UNIQUE_ID_clxtype237 = internal constant [30 x i8] c"thunderbolt.parmtype=clx:bool\00", section ".modinfo", align 1
@__UNIQUE_ID_clx238 = internal constant [84 x i8] c"thunderbolt.parm=clx:allow low power states on the high-speed lanes (default: true)\00", section ".modinfo", align 1
@.str = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"drivers/thunderbolt/switch.c\00", [35 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"%s %s: %llx:%x: does not have a PHY\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"%s %s: %llx:%x: does not have PHY\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"%s %s: %llx:%x: is the upstream port\0A\00", [58 x i8] zeroinitializer }, align 32
@tb_wait_for_port.__UNIQUE_ID_ddebug244 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.5, ptr @.str, ptr @.str.6, i8 0, i8 -113, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.4 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"thunderbolt\00", [20 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"tb_wait_for_port\00", [47 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"%llx:%x: is disabled (state: 0)\0A\00", [63 x i8] zeroinitializer }, align 32
@tb_wait_for_port.__UNIQUE_ID_ddebug245 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.5, ptr @.str, ptr @.str.7, i8 0, i8 -111, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.7 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"%llx:%x: is unplugged (state: 7), retrying...\0A\00", [49 x i8] zeroinitializer }, align 32
@tb_wait_for_port.__UNIQUE_ID_ddebug246 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.5, ptr @.str, ptr @.str.8, i8 0, i8 -110, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.8 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"%llx:%x: is unplugged (state: 7)\0A\00", [62 x i8] zeroinitializer }, align 32
@tb_wait_for_port.__UNIQUE_ID_ddebug247 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.5, ptr @.str, ptr @.str.9, i8 0, i8 -109, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.9 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"%llx:%x: is connected, link is up (state: 2)\0A\00", [50 x i8] zeroinitializer }, align 32
@tb_wait_for_port.__UNIQUE_ID_ddebug248 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.5, ptr @.str, ptr @.str.10, i8 0, i8 -107, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.10 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"%llx:%x: is connected, link is not up (state: %d), retrying...\0A\00", [32 x i8] zeroinitializer }, align 32
@tb_wait_for_port._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.11, ptr @.str.5, ptr @.str, i32 602, ptr @.str.12, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"%llx:%x: failed to reach state TB_PORT_UP. Ignoring port...\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@tb_wait_for_port._entry_ptr = internal global ptr @tb_wait_for_port._entry, section ".printk_index", align 4
@tb_port_add_nfc_credits.__UNIQUE_ID_ddebug251 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.14, ptr @.str, ptr @.str.15, i8 0, i8 -97, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.14 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"tb_port_add_nfc_credits\00", [40 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"%llx:%x: adding %d NFC credits to %lu\00", [58 x i8] zeroinitializer }, align 32
@tb_port_clear_counter.__UNIQUE_ID_ddebug252 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.16, ptr @.str, ptr @.str.17, i8 0, i8 -92, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.16 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"tb_port_clear_counter\00", [42 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"%llx:%x: clearing counter %d\0A\00", [34 x i8] zeroinitializer }, align 32
@tb_switch_reset.__UNIQUE_ID_ddebug260 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.18, ptr @.str, ptr @.str.19, i8 1, i8 107, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.18 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"tb_switch_reset\00", [16 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"%llx: resetting switch\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"thunderbolt_device\00", [45 x i8] zeroinitializer }, align 32
@tb_switch_pm_ops = internal constant { %struct.dev_pm_ops, [36 x i8] } { %struct.dev_pm_ops { ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @tb_switch_runtime_suspend, ptr @tb_switch_runtime_resume, ptr null }, [36 x i8] zeroinitializer }, align 32
@tb_switch_type = dso_local global { %struct.device_type, [40 x i8] } { %struct.device_type { ptr @.str.20, ptr null, ptr @tb_switch_uevent, ptr null, ptr @tb_switch_release, ptr @tb_switch_pm_ops }, [40 x i8] zeroinitializer }, align 32
@tb_switch_alloc.__UNIQUE_ID_ddebug261 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.21, ptr @.str, ptr @.str.22, i8 2, i8 37, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.21 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"tb_switch_alloc\00", [16 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"current switch config:\0A\00", [40 x i8] zeroinitializer }, align 32
@tb_bus_type = external dso_local global %struct.bus_type, align 4
@switch_groups = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @switch_group, ptr null], [24 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%u-%llx\00", [24 x i8] zeroinitializer }, align 32
@tb_switch_configure.__UNIQUE_ID_ddebug262 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.24, ptr @.str, ptr @.str.25, i8 2, i8 70, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.24 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"tb_switch_configure\00", [44 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"%s Switch at %#llx (depth: %d, up port: %d)\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"restoring\00", [22 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"initializing\00", [19 x i8] zeroinitializer }, align 32
@tb_switch_configure._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.28, ptr @.str.24, ptr @.str, i32 2350, ptr @.str.12, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"%llx: unknown switch vendor id %#x\0A\00", [60 x i8] zeroinitializer }, align 32
@tb_switch_configure._entry_ptr = internal global ptr @tb_switch_configure._entry, section ".printk_index", align 4
@tb_switch_configure._entry.29 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.30, ptr @.str.24, ptr @.str, i32 2353, ptr @.str.12, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"%llx: cannot find TB_VSE_CAP_PLUG_EVENTS aborting\0A\00", [45 x i8] zeroinitializer }, align 32
@tb_switch_configure._entry_ptr.31 = internal global ptr @tb_switch_configure._entry.29, section ".printk_index", align 4
@tb_switch_lane_bonding_enable._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.32, ptr @.str.33, ptr @.str, i32 2611, ptr @.str.12, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"%llx:%x: failed to enable lane bonding\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"tb_switch_lane_bonding_enable\00", [34 x i8] zeroinitializer }, align 32
@tb_switch_lane_bonding_enable._entry_ptr = internal global ptr @tb_switch_lane_bonding_enable._entry, section ".printk_index", align 4
@tb_switch_lane_bonding_enable._entry.34 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.32, ptr @.str.33, ptr @.str, i32 2617, ptr @.str.12, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@tb_switch_lane_bonding_enable._entry_ptr.35 = internal global ptr @tb_switch_lane_bonding_enable._entry.34, section ".printk_index", align 4
@tb_switch_lane_bonding_enable._entry.36 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.37, ptr @.str.33, ptr @.str, i32 2624, ptr @.str.12, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"%llx:%x: timeout enabling lane bonding\0A\00", [56 x i8] zeroinitializer }, align 32
@tb_switch_lane_bonding_enable._entry_ptr.38 = internal global ptr @tb_switch_lane_bonding_enable._entry.36, section ".printk_index", align 4
@tb_switch_lane_bonding_enable.__UNIQUE_ID_ddebug264 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.33, ptr @.str, ptr @.str.39, i8 2, i8 -110, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.39 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"%llx: lane bonding enabled\0A\00", [36 x i8] zeroinitializer }, align 32
@tb_switch_lane_bonding_disable._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.40, ptr @.str.41, ptr @.str, i32 2665, ptr @.str.12, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"%llx: timeout disabling lane bonding\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"tb_switch_lane_bonding_disable\00", [33 x i8] zeroinitializer }, align 32
@tb_switch_lane_bonding_disable._entry_ptr = internal global ptr @tb_switch_lane_bonding_disable._entry, section ".printk_index", align 4
@tb_switch_lane_bonding_disable.__UNIQUE_ID_ddebug265 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.41, ptr @.str, ptr @.str.42, i8 2, i8 -101, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.42 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"%llx: lane bonding disabled\0A\00", [35 x i8] zeroinitializer }, align 32
@tb_switch_add._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.43, ptr @.str.44, ptr @.str, i32 2772, ptr @.str.45, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"failed to add DMA port\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"tb_switch_add\00", [18 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@tb_switch_add._entry_ptr = internal global ptr @tb_switch_add._entry, section ".printk_index", align 4
@tb_switch_add._entry.46 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.47, ptr @.str.44, ptr @.str, i32 2782, ptr @.str.45, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"reading DROM failed\0A\00", [43 x i8] zeroinitializer }, align 32
@tb_switch_add._entry_ptr.48 = internal global ptr @tb_switch_add._entry.46, section ".printk_index", align 4
@tb_switch_add.__UNIQUE_ID_ddebug266 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.44, ptr @.str, ptr @.str.49, i8 2, i8 -72, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.49 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"%llx: uid: %#llx\0A\00", [46 x i8] zeroinitializer }, align 32
@tb_switch_add._entry.50 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.51, ptr @.str.44, ptr @.str, i32 2791, ptr @.str.45, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"failed to set UUID\0A\00", [44 x i8] zeroinitializer }, align 32
@tb_switch_add._entry_ptr.52 = internal global ptr @tb_switch_add._entry.50, section ".printk_index", align 4
@tb_switch_add.__UNIQUE_ID_ddebug267 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.44, ptr @.str, ptr @.str.53, i8 2, i8 -69, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.53 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"%llx:%x: disabled by eeprom\0A\00", [35 x i8] zeroinitializer }, align 32
@tb_switch_add._entry.54 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.55, ptr @.str.44, ptr @.str, i32 2802, ptr @.str.45, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"failed to initialize port %d\0A\00", [34 x i8] zeroinitializer }, align 32
@tb_switch_add._entry_ptr.56 = internal global ptr @tb_switch_add._entry.54, section ".printk_index", align 4
@tb_switch_add._entry.57 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.58, ptr @.str.44, ptr @.str, i32 2820, ptr @.str.45, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"failed to add device: %d\0A\00", [38 x i8] zeroinitializer }, align 32
@tb_switch_add._entry_ptr.59 = internal global ptr @tb_switch_add._entry.57, section ".printk_index", align 4
@tb_switch_add._entry.60 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.61, ptr @.str.44, ptr @.str, i32 2826, ptr @.str.62, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"new device found, vendor=%#x device=%#x\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\016\00", [29 x i8] zeroinitializer }, align 32
@tb_switch_add._entry_ptr.63 = internal global ptr @tb_switch_add._entry.60, section ".printk_index", align 4
@tb_switch_add._entry.64 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.65, ptr @.str.44, ptr @.str, i32 2829, ptr @.str.62, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"%s %s\0A\00", [25 x i8] zeroinitializer }, align 32
@tb_switch_add._entry_ptr.66 = internal global ptr @tb_switch_add._entry.64, section ".printk_index", align 4
@tb_switch_add._entry.67 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.68, ptr @.str.44, ptr @.str, i32 2834, ptr @.str.45, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"failed to add USB4 ports\0A\00", [38 x i8] zeroinitializer }, align 32
@tb_switch_add._entry_ptr.69 = internal global ptr @tb_switch_add._entry.67, section ".printk_index", align 4
@tb_switch_add._entry.70 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.71, ptr @.str.44, ptr @.str, i32 2840, ptr @.str.45, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"failed to add NVM devices\0A\00", [37 x i8] zeroinitializer }, align 32
@tb_switch_add._entry_ptr.72 = internal global ptr @tb_switch_add._entry.70, section ".printk_index", align 4
@tb_switch_remove._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.73, ptr @.str.74, ptr @.str, i32 2911, ptr @.str.62, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"device disconnected\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"tb_switch_remove\00", [47 x i8] zeroinitializer }, align 32
@tb_switch_remove._entry_ptr = internal global ptr @tb_switch_remove._entry, section ".printk_index", align 4
@.str.75 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"%s %s: %llx: cannot unplug root switch\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"%s %s: %llx: is_unplugged already set\0A\00", [57 x i8] zeroinitializer }, align 32
@tb_switch_resume.__UNIQUE_ID_ddebug270 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.77, ptr @.str, ptr @.str.78, i8 2, i8 -29, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.77 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"tb_switch_resume\00", [47 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"%llx: resuming switch\0A\00", [41 x i8] zeroinitializer }, align 32
@tb_switch_resume._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.79, ptr @.str.77, ptr @.str, i32 2973, ptr @.str.62, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"%llx: switch not present anymore\0A\00", [62 x i8] zeroinitializer }, align 32
@tb_switch_resume._entry_ptr = internal global ptr @tb_switch_resume._entry, section ".printk_index", align 4
@tb_switch_resume._entry.80 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.81, ptr @.str.77, ptr @.str, i32 2982, ptr @.str.12, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"%llx: uid read failed\0A\00", [41 x i8] zeroinitializer }, align 32
@tb_switch_resume._entry_ptr.82 = internal global ptr @tb_switch_resume._entry.80, section ".printk_index", align 4
@tb_switch_resume._entry.83 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.84, ptr @.str.77, ptr @.str, i32 2988, ptr @.str.62, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"%llx: changed while suspended (uid %#llx -> %#llx)\0A\00", [44 x i8] zeroinitializer }, align 32
@tb_switch_resume._entry_ptr.85 = internal global ptr @tb_switch_resume._entry.83, section ".printk_index", align 4
@tb_switch_resume._entry.86 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.87, ptr @.str.77, ptr @.str, i32 3014, ptr @.str.12, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"%llx:%x: lost during suspend, disconnecting\0A\00", [51 x i8] zeroinitializer }, align 32
@tb_switch_resume._entry_ptr.88 = internal global ptr @tb_switch_resume._entry.86, section ".printk_index", align 4
@tb_switch_resume._entry.89 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.90, ptr @.str.77, ptr @.str, i32 3025, ptr @.str.12, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"%llx:%x: failed to unlock port\0A\00", [32 x i8] zeroinitializer }, align 32
@tb_switch_resume._entry_ptr.91 = internal global ptr @tb_switch_resume._entry.89, section ".printk_index", align 4
@tb_switch_resume._entry.92 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.87, ptr @.str.77, ptr @.str, i32 3028, ptr @.str.12, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@tb_switch_resume._entry_ptr.93 = internal global ptr @tb_switch_resume._entry.92, section ".printk_index", align 4
@tb_switch_suspend.__UNIQUE_ID_ddebug271 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.94, ptr @.str, ptr @.str.95, i8 2, i8 -5, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.94 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"tb_switch_suspend\00", [46 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"%llx: suspending switch\0A\00", [39 x i8] zeroinitializer }, align 32
@tb_switch_suspend._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.96, ptr @.str.94, ptr @.str, i32 3059, ptr @.str.12, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"%llx: failed to disable CLx on upstream port\0A\00", [50 x i8] zeroinitializer }, align 32
@tb_switch_suspend._entry_ptr = internal global ptr @tb_switch_suspend._entry, section ".printk_index", align 4
@tb_switch_alloc_dp_resource._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.97, ptr @.str.98, ptr @.str, i32 3122, ptr @.str.12, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"%llx: failed to allocate DP resource for port %d\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"tb_switch_alloc_dp_resource\00", [36 x i8] zeroinitializer }, align 32
@tb_switch_alloc_dp_resource._entry_ptr = internal global ptr @tb_switch_alloc_dp_resource._entry, section ".printk_index", align 4
@tb_switch_alloc_dp_resource.__UNIQUE_ID_ddebug272 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.98, ptr @.str, ptr @.str.99, i8 3, i8 13, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.99 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"%llx: allocated DP resource for port %d\0A\00", [55 x i8] zeroinitializer }, align 32
@tb_switch_dealloc_dp_resource._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.100, ptr @.str.101, ptr @.str, i32 3148, ptr @.str.12, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"%llx: failed to de-allocate DP resource for port %d\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"tb_switch_dealloc_dp_resource\00", [34 x i8] zeroinitializer }, align 32
@tb_switch_dealloc_dp_resource._entry_ptr = internal global ptr @tb_switch_dealloc_dp_resource._entry, section ".printk_index", align 4
@tb_switch_dealloc_dp_resource.__UNIQUE_ID_ddebug273 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.101, ptr @.str, ptr @.str.102, i8 3, i8 19, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.102 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"%llx: released DP resource for port %d\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"drivers/thunderbolt/tb.h\00", [39 x i8] zeroinitializer }, align 32
@tb_port_do_update_credits.__UNIQUE_ID_ddebug254 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.104, ptr @.str, ptr @.str.105, i8 1, i8 27, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.104 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"tb_port_do_update_credits\00", [38 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"%llx:%x: total credits changed %u -> %u\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"USB4_VERSION=1.0\00", [47 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"host\00", [27 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"hub\00", [28 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"device\00", [25 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"USB4_TYPE=%s\00", [19 x i8] zeroinitializer }, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@tb_switch_get_generation._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.111, ptr @.str.112, ptr @.str, i32 2131, ptr @.str.12, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"%llx: unsupported switch device id %#x\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"tb_switch_get_generation\00", [39 x i8] zeroinitializer }, align 32
@tb_switch_get_generation._entry_ptr = internal global ptr @tb_switch_get_generation._entry, section ".printk_index", align 4
@tb_dump_switch.__UNIQUE_ID_ddebug255 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.113, ptr @.str, ptr @.str.114, i8 1, i8 101, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.113 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"tb_dump_switch\00", [17 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c" %s Switch: %x:%x (Revision: %d, TB Version: %d)\0A\00", [46 x i8] zeroinitializer }, align 32
@tb_dump_switch.__UNIQUE_ID_ddebug256 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.113, ptr @.str, ptr @.str.115, i8 1, i8 101, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.115 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"  Max Port Number: %d\0A\00", [41 x i8] zeroinitializer }, align 32
@tb_dump_switch.__UNIQUE_ID_ddebug257 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.113, ptr @.str, ptr @.str.116, i8 1, i8 101, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.116 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"  Config:\0A\00", [21 x i8] zeroinitializer }, align 32
@tb_dump_switch.__UNIQUE_ID_ddebug258 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.113, ptr @.str, ptr @.str.117, i8 1, i8 102, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.117 = internal constant { [94 x i8], [34 x i8] } { [94 x i8] c"   Upstream Port Number: %d Depth: %d Route String: %#llx Enabled: %d, PlugEventsDelay: %dms\0A\00", [34 x i8] zeroinitializer }, align 32
@tb_dump_switch.__UNIQUE_ID_ddebug259 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.113, ptr @.str, ptr @.str.118, i8 1, i8 103, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.118 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"   unknown1: %#x unknown4: %#x\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Thunderbolt 1\00", [18 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Thunderbolt 2\00", [18 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Thunderbolt 3\00", [18 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"USB4\00", [27 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Unknown\00", [24 x i8] zeroinitializer }, align 32
@xa_init_flags.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.124 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"&xa->xa_lock\00", [19 x i8] zeroinitializer }, align 32
@switch_group = internal constant { %struct.attribute_group, [44 x i8] } { %struct.attribute_group { ptr null, ptr @switch_attr_is_visible, ptr null, ptr @switch_attrs, ptr null }, [44 x i8] zeroinitializer }, align 32
@switch_attrs = internal global { [17 x ptr], [60 x i8] } { [17 x ptr] [ptr @dev_attr_authorized, ptr @dev_attr_boot, ptr @dev_attr_device, ptr @dev_attr_device_name, ptr @dev_attr_generation, ptr @dev_attr_key, ptr @dev_attr_nvm_authenticate, ptr @dev_attr_nvm_authenticate_on_disconnect, ptr @dev_attr_nvm_version, ptr @dev_attr_rx_speed, ptr @dev_attr_rx_lanes, ptr @dev_attr_tx_speed, ptr @dev_attr_tx_lanes, ptr @dev_attr_vendor, ptr @dev_attr_vendor_name, ptr @dev_attr_unique_id, ptr null], [60 x i8] zeroinitializer }, align 32
@dev_attr_authorized = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.125, i16 420, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @authorized_show, ptr @authorized_store }, [36 x i8] zeroinitializer }, align 32
@dev_attr_device = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.109, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @device_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_device_name = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.130, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @device_name_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_vendor = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.133, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @vendor_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_vendor_name = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.134, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @vendor_name_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_key = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.135, i16 384, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @key_show, ptr @key_store }, [36 x i8] zeroinitializer }, align 32
@dev_attr_rx_speed = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.138, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @speed_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_rx_lanes = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.140, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @lanes_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_tx_speed = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.141, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @speed_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_tx_lanes = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.142, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @lanes_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_nvm_authenticate = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.143, i16 420, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @nvm_authenticate_show, ptr @nvm_authenticate_store }, [36 x i8] zeroinitializer }, align 32
@dev_attr_nvm_version = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.153, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @nvm_version_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_boot = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.155, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @boot_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_nvm_authenticate_on_disconnect = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.156, i16 420, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @nvm_authenticate_on_disconnect_show, ptr @nvm_authenticate_on_disconnect_store }, [36 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"authorized\00", [21 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%u\0A\00", [28 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"AUTHORIZED=%u\00", [18 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"AUTHORIZED=0\00", [19 x i8] zeroinitializer }, align 32
@__const.disapprove_switch.envp = private unnamed_addr constant [2 x ptr] [ptr @.str.128, ptr null], align 8
@.str.129 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"%#x\0A\00", [27 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"device_name\00", [20 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%s\0A\00", [28 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@.str.133 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"vendor\00", [25 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"vendor_name\00", [20 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"key\00", [28 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"%*phN\0A\00", [25 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"\0A\00", [30 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"rx_speed\00", [23 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"%u.0 Gb/s\0A\00", [21 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"rx_lanes\00", [23 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"tx_speed\00", [23 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"tx_lanes\00", [23 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"nvm_authenticate\00", [47 x i8] zeroinitializer }, align 32
@nvm_auth_status_lock = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.144, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @nvm_auth_status_lock, i64 52), ptr getelementptr (i8, ptr @nvm_auth_status_lock, i64 52) }, ptr @nvm_auth_status_lock, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.145, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"nvm_auth_status_lock.wait_lock\00", [33 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"nvm_auth_status_lock\00", [43 x i8] zeroinitializer }, align 32
@nvm_auth_status_cache = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @nvm_auth_status_cache, ptr @nvm_auth_status_cache }, [24 x i8] zeroinitializer }, align 32
@nvm_authenticate_host_dma_port._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.146, ptr @.str.147, ptr @.str, i32 198, ptr @.str.12, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"%llx: failed to authenticate NVM, power cycling\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"nvm_authenticate_host_dma_port\00", [33 x i8] zeroinitializer }, align 32
@nvm_authenticate_host_dma_port._entry_ptr = internal global ptr @nvm_authenticate_host_dma_port._entry, section ".printk_index", align 4
@nvm_authenticate_device_dma_port._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.148, ptr @.str.149, ptr @.str, i32 241, ptr @.str.12, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"%llx: failed to authenticate NVM\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"nvm_authenticate_device_dma_port\00", [63 x i8] zeroinitializer }, align 32
@nvm_authenticate_device_dma_port._entry_ptr = internal global ptr @nvm_authenticate_device_dma_port._entry, section ".printk_index", align 4
@nvm_authenticate_device_dma_port._entry.150 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.151, ptr @.str.149, ptr @.str, i32 245, ptr @.str.62, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"%llx: power cycling the switch now\0A\00", [60 x i8] zeroinitializer }, align 32
@nvm_authenticate_device_dma_port._entry_ptr.152 = internal global ptr @nvm_authenticate_device_dma_port._entry.150, section ".printk_index", align 4
@.str.153 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"nvm_version\00", [20 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"%x.%x\0A\00", [25 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"boot\00", [27 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"nvm_authenticate_on_disconnect\00", [33 x i8] zeroinitializer }, align 32
@dev_attr_generation = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.157, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @generation_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@dev_attr_unique_id = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.158, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @unique_id_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"generation\00", [21 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"unique_id\00", [22 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%pUb\0A\00", [26 x i8] zeroinitializer }, align 32
@tb_switch_add_dma_port._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.160, ptr @.str.161, ptr @.str, i32 2451, ptr @.str.62, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"%llx: switch flash authentication failed\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"tb_switch_add_dma_port\00", [41 x i8] zeroinitializer }, align 32
@tb_switch_add_dma_port._entry_ptr = internal global ptr @tb_switch_add_dma_port._entry, section ".printk_index", align 4
@tb_switch_add_dma_port._entry.162 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.160, ptr @.str.161, ptr @.str, i32 2493, ptr @.str.62, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@tb_switch_add_dma_port._entry_ptr.163 = internal global ptr @tb_switch_add_dma_port._entry.162, section ".printk_index", align 4
@tb_switch_add_dma_port._entry.164 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.151, ptr @.str.161, ptr @.str, i32 2497, ptr @.str.62, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@tb_switch_add_dma_port._entry_ptr.165 = internal global ptr @tb_switch_add_dma_port._entry.164, section ".printk_index", align 4
@tb_switch_credits_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.166, ptr @.str.167, ptr @.str, i32 2744, ptr @.str.62, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [71 x i8], [57 x i8] } { [71 x i8] c"%llx: failed to determine preferred buffer allocation, using defaults\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"tb_switch_credits_init\00", [41 x i8] zeroinitializer }, align 32
@tb_switch_credits_init._entry_ptr = internal global ptr @tb_switch_credits_init._entry, section ".printk_index", align 4
@tb_init_port.__UNIQUE_ID_ddebug253 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.168, ptr @.str, ptr @.str.169, i8 0, i8 -70, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.168 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"tb_init_port\00", [19 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c" Port %d: not implemented\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"%s %s: %llx:%x: non switch port without a PHY\0A\00", [49 x i8] zeroinitializer }, align 32
@tb_dump_port.__UNIQUE_ID_ddebug239 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.171, ptr @.str, ptr @.str.172, i8 0, i8 127, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.171 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"tb_dump_port\00", [19 x i8] zeroinitializer }, align 32
@.str.172 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c" Port %d: %x:%x (Revision: %d, TB Version: %d, Type: %s (%#x))\0A\00", [32 x i8] zeroinitializer }, align 32
@tb_dump_port.__UNIQUE_ID_ddebug240 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.171, ptr @.str, ptr @.str.173, i8 0, i8 127, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.173 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"  Max hop id (in/out): %d/%d\0A\00", [34 x i8] zeroinitializer }, align 32
@tb_dump_port.__UNIQUE_ID_ddebug241 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.171, ptr @.str, ptr @.str.174, i8 0, i8 -128, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.174 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"  Max counters: %d\0A\00", [44 x i8] zeroinitializer }, align 32
@tb_dump_port.__UNIQUE_ID_ddebug242 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.171, ptr @.str, ptr @.str.175, i8 0, i8 -128, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.175 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"  NFC Credits: %#x\0A\00", [44 x i8] zeroinitializer }, align 32
@tb_dump_port.__UNIQUE_ID_ddebug243 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.171, ptr @.str, ptr @.str.176, i8 0, i8 -128, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.176 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"  Credits (total/control): %u/%u\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Inactive\00", [23 x i8] zeroinitializer }, align 32
@.str.178 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"Port\00", [27 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"NHI\00", [28 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"unknown\00", [24 x i8] zeroinitializer }, align 32
@.str.181 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Ethernet\00", [23 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"SATA\00", [27 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"DP/HDMI\00", [24 x i8] zeroinitializer }, align 32
@.str.184 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"PCIe\00", [27 x i8] zeroinitializer }, align 32
@.str.185 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"USB\00", [28 x i8] zeroinitializer }, align 32
@tb_switch_default_link_ports.__UNIQUE_ID_ddebug263 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.186, ptr @.str, ptr @.str.187, i8 2, i8 121, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.186 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"tb_switch_default_link_ports\00", [35 x i8] zeroinitializer }, align 32
@.str.187 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"%llx: linked ports %d <-> %d\0A\00", [34 x i8] zeroinitializer }, align 32
@tb_switch_nvm_add._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.188, ptr @.str.189, ptr @.str, i32 402, ptr @.str.62, ptr @.str.13 }, [40 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"NVM format of vendor %#x is not known, disabling NVM upgrade\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"tb_switch_nvm_add\00", [46 x i8] zeroinitializer }, align 32
@tb_switch_nvm_add._entry_ptr = internal global ptr @tb_switch_nvm_add._entry, section ".printk_index", align 4
@tb_switch_set_wake.__UNIQUE_ID_ddebug268 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.190, ptr @.str, ptr @.str.191, i8 2, i8 -33, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.190 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"tb_switch_set_wake\00", [45 x i8] zeroinitializer }, align 32
@.str.191 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"%llx: enabling wakeup: %#x\0A\00", [36 x i8] zeroinitializer }, align 32
@tb_switch_set_wake.__UNIQUE_ID_ddebug269 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.190, ptr @.str, ptr @.str.192, i8 2, i8 -32, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.192 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"%llx: disabling wakeup\0A\00", [40 x i8] zeroinitializer }, align 32
@tb_switch_enable_cl0s.__UNIQUE_ID_ddebug274 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.193, ptr @.str, ptr @.str.194, i8 3, i8 91, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.193 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"tb_switch_enable_cl0s\00", [42 x i8] zeroinitializer }, align 32
@.str.194 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"%llx:%x: CL0s %ssupported\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"not \00", [27 x i8] zeroinitializer }, align 32
@tb_switch_enable_cl0s.__UNIQUE_ID_ddebug275 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.193, ptr @.str, ptr @.str.194, i8 3, i8 92, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@tb_switch_enable_cl0s.__UNIQUE_ID_ddebug276 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.193, ptr @.str, ptr @.str.196, i8 3, i8 98, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.196 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"%llx:%x: CL0s enabled\0A\00", [41 x i8] zeroinitializer }, align 32
@tb_switch_disable_cl0s.__UNIQUE_ID_ddebug277 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.4, ptr @.str.197, ptr @.str, ptr @.str.198, i8 3, i8 116, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.197 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"tb_switch_disable_cl0s\00", [41 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"%llx:%x: CL0s disabled\0A\00", [40 x i8] zeroinitializer }, align 32
@switch.table.tb_dump_switch = internal constant { [4 x ptr], [16 x i8] } { [4 x ptr] [ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122], [16 x i8] zeroinitializer }, align 32
@switch.table.tb_dump_port = internal constant { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.177, ptr @.str.178, ptr @.str.179], [20 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 2, i64 7]
@__sancov_gen_cov_switch_values.199 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.200 = internal global [8 x i64] [i64 6, i64 32, i64 917761, i64 917762, i64 1048833, i64 1048834, i64 2097409, i64 2097410]
@__sancov_gen_cov_switch_values.201 = internal global [23 x i64] [i64 21, i64 16, i64 5395, i64 5402, i64 5403, i64 5447, i64 5448, i64 5449, i64 5479, i64 5481, i64 5483, i64 5485, i64 5494, i64 5496, i64 5502, i64 5568, i64 5587, i64 5594, i64 5607, i64 5610, i64 5615, i64 35341, i64 35351]
@__sancov_gen_cov_switch_values.202 = internal global [5 x i64] [i64 3, i64 16, i64 5395, i64 5402, i64 5449]
@__sancov_gen_cov_switch_values.203 = internal global [5 x i64] [i64 3, i64 32, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.204 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967274]
@__sancov_gen_cov_switch_values.205 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967274]
@__sancov_gen_cov_switch_values.206 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967277]
@__sancov_gen_cov_switch_values.207 = internal global [5 x i64] [i64 3, i64 16, i64 5607, i64 5610, i64 5615]
@__sancov_gen_cov_switch_values.208 = internal global [5 x i64] [i64 3, i64 16, i64 5607, i64 5610, i64 5615]
@__sancov_gen_cov_switch_values.209 = internal global [5 x i64] [i64 3, i64 16, i64 5607, i64 5610, i64 5615]
@__sancov_gen_cov_switch_values.210 = internal global [5 x i64] [i64 3, i64 16, i64 5607, i64 5610, i64 5615]
@__sancov_gen_cov_switch_values.211 = internal global [4 x i64] [i64 2, i64 32, i64 3, i64 5]
@__sancov_gen_cov_switch_values.212 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.213 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967186]
@__sancov_gen_cov_switch_values.214 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 4294967186, i64 4294967274, i64 4294967283]
@__sancov_gen_cov_switch_values.215 = internal global [8 x i64] [i64 6, i64 8, i64 0, i64 2, i64 8, i64 14, i64 16, i64 32]
@___asan_gen_.216 = private unnamed_addr constant [12 x i8] c"clx_enabled\00", align 1
@___asan_gen_.218 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 30, i32 13 }
@___asan_gen_.224 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 531, i32 3 }
@___asan_gen_.227 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 560, i32 3 }
@___asan_gen_.230 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 564, i32 3 }
@___asan_gen_.239 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 573, i32 4 }
@___asan_gen_.242 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 579, i32 5 }
@___asan_gen_.245 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 584, i32 4 }
@___asan_gen_.248 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 588, i32 4 }
@___asan_gen_.251 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 596, i32 3 }
@___asan_gen_.263 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 601, i32 2 }
@___asan_gen_.269 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 636, i32 2 }
@___asan_gen_.275 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 656, i32 2 }
@___asan_gen_.281 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1453, i32 2 }
@___asan_gen_.284 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2086, i32 10 }
@___asan_gen_.285 = private unnamed_addr constant [17 x i8] c"tb_switch_pm_ops\00", align 1
@___asan_gen_.287 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2080, i32 32 }
@___asan_gen_.288 = private unnamed_addr constant [15 x i8] c"tb_switch_type\00", align 1
@___asan_gen_.290 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2085, i32 20 }
@___asan_gen_.296 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2196, i32 2 }
@___asan_gen_.297 = private unnamed_addr constant [14 x i8] c"switch_groups\00", align 1
@___asan_gen_.299 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1996, i32 38 }
@___asan_gen_.302 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2257, i32 25 }
@___asan_gen_.314 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2326, i32 2 }
@___asan_gen_.320 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2349, i32 4 }
@___asan_gen_.326 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2353, i32 4 }
@___asan_gen_.335 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2611, i32 3 }
@___asan_gen_.338 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2617, i32 3 }
@___asan_gen_.344 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2624, i32 3 }
@___asan_gen_.347 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2632, i32 2 }
@___asan_gen_.356 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2665, i32 3 }
@___asan_gen_.359 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2671, i32 2 }
@___asan_gen_.371 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2772, i32 3 }
@___asan_gen_.377 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2782, i32 4 }
@___asan_gen_.380 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2785, i32 3 }
@___asan_gen_.386 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2791, i32 4 }
@___asan_gen_.389 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2797, i32 5 }
@___asan_gen_.395 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2802, i32 5 }
@___asan_gen_.401 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2820, i32 3 }
@___asan_gen_.410 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2825, i32 3 }
@___asan_gen_.416 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2828, i32 4 }
@___asan_gen_.422 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2834, i32 3 }
@___asan_gen_.428 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2840, i32 3 }
@___asan_gen_.437 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2911, i32 3 }
@___asan_gen_.440 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2924, i32 3 }
@___asan_gen_.443 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2928, i32 3 }
@___asan_gen_.449 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2957, i32 2 }
@___asan_gen_.455 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2973, i32 4 }
@___asan_gen_.461 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2982, i32 4 }
@___asan_gen_.467 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2986, i32 4 }
@___asan_gen_.473 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 3013, i32 4 }
@___asan_gen_.479 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 3025, i32 5 }
@___asan_gen_.482 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 3027, i32 5 }
@___asan_gen_.488 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 3052, i32 2 }
@___asan_gen_.494 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 3059, i32 3 }
@___asan_gen_.503 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 3121, i32 3 }
@___asan_gen_.506 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 3124, i32 3 }
@___asan_gen_.515 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 3147, i32 3 }
@___asan_gen_.518 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 3150, i32 3 }
@___asan_gen_.520 = private unnamed_addr constant [28 x i8] c"../drivers/thunderbolt/tb.h\00", align 1
@___asan_gen_.521 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.520, i32 538, i32 6 }
@___asan_gen_.527 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1133, i32 3 }
@___asan_gen_.530 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2028, i32 27 }
@___asan_gen_.533 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2033, i32 10 }
@___asan_gen_.536 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2047, i32 16 }
@___asan_gen_.539 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2047, i32 24 }
@___asan_gen_.542 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2050, i32 26 }
@___asan_gen_.551 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2130, i32 3 }
@___asan_gen_.557 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1426, i32 2 }
@___asan_gen_.560 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1429, i32 2 }
@___asan_gen_.563 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1430, i32 2 }
@___asan_gen_.566 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1431, i32 2 }
@___asan_gen_.569 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1436, i32 2 }
@___asan_gen_.572 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1410, i32 10 }
@___asan_gen_.575 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1412, i32 10 }
@___asan_gen_.578 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1414, i32 10 }
@___asan_gen_.581 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1416, i32 10 }
@___asan_gen_.584 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1418, i32 10 }
@___asan_gen_.585 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.589 = private unnamed_addr constant [26 x i8] c"../include/linux/xarray.h\00", align 1
@___asan_gen_.590 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.589, i32 378, i32 2 }
@___asan_gen_.591 = private unnamed_addr constant [13 x i8] c"switch_group\00", align 1
@___asan_gen_.593 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1991, i32 37 }
@___asan_gen_.594 = private unnamed_addr constant [13 x i8] c"switch_attrs\00", align 1
@___asan_gen_.596 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1915, i32 26 }
@___asan_gen_.597 = private unnamed_addr constant [20 x i8] c"dev_attr_authorized\00", align 1
@___asan_gen_.600 = private unnamed_addr constant [16 x i8] c"dev_attr_device\00", align 1
@___asan_gen_.602 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1667, i32 8 }
@___asan_gen_.603 = private unnamed_addr constant [21 x i8] c"dev_attr_device_name\00", align 1
@___asan_gen_.606 = private unnamed_addr constant [16 x i8] c"dev_attr_vendor\00", align 1
@___asan_gen_.609 = private unnamed_addr constant [21 x i8] c"dev_attr_vendor_name\00", align 1
@___asan_gen_.612 = private unnamed_addr constant [13 x i8] c"dev_attr_key\00", align 1
@___asan_gen_.615 = private unnamed_addr constant [18 x i8] c"dev_attr_rx_speed\00", align 1
@___asan_gen_.618 = private unnamed_addr constant [18 x i8] c"dev_attr_rx_lanes\00", align 1
@___asan_gen_.621 = private unnamed_addr constant [18 x i8] c"dev_attr_tx_speed\00", align 1
@___asan_gen_.624 = private unnamed_addr constant [18 x i8] c"dev_attr_tx_lanes\00", align 1
@___asan_gen_.627 = private unnamed_addr constant [26 x i8] c"dev_attr_nvm_authenticate\00", align 1
@___asan_gen_.630 = private unnamed_addr constant [21 x i8] c"dev_attr_nvm_version\00", align 1
@___asan_gen_.633 = private unnamed_addr constant [14 x i8] c"dev_attr_boot\00", align 1
@___asan_gen_.636 = private unnamed_addr constant [40 x i8] c"dev_attr_nvm_authenticate_on_disconnect\00", align 1
@___asan_gen_.641 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1649, i32 8 }
@___asan_gen_.644 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1546, i32 22 }
@___asan_gen_.647 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1619, i32 24 }
@___asan_gen_.650 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1551, i32 19 }
@___asan_gen_.653 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1665, i32 22 }
@___asan_gen_.656 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1676, i32 8 }
@___asan_gen_.659 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1674, i32 22 }
@___asan_gen_.662 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1674, i32 66 }
@___asan_gen_.665 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1895, i32 8 }
@___asan_gen_.668 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1904, i32 8 }
@___asan_gen_.671 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1737, i32 8 }
@___asan_gen_.674 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1697, i32 22 }
@___asan_gen_.677 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1699, i32 22 }
@___asan_gen_.680 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1751, i32 8 }
@___asan_gen_.683 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1744, i32 22 }
@___asan_gen_.686 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1766, i32 8 }
@___asan_gen_.689 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1752, i32 8 }
@___asan_gen_.692 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1767, i32 8 }
@___asan_gen_.695 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1848, i32 8 }
@___asan_gen_.696 = private unnamed_addr constant [21 x i8] c"nvm_auth_status_lock\00", align 1
@___asan_gen_.704 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 40, i32 8 }
@___asan_gen_.705 = private unnamed_addr constant [22 x i8] c"nvm_auth_status_cache\00", align 1
@___asan_gen_.707 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 39, i32 8 }
@___asan_gen_.716 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 198, i32 3 }
@___asan_gen_.725 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 241, i32 5 }
@___asan_gen_.731 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 245, i32 4 }
@___asan_gen_.734 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1886, i32 8 }
@___asan_gen_.737 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1880, i32 22 }
@___asan_gen_.740 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1658, i32 8 }
@___asan_gen_.743 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1864, i32 8 }
@___asan_gen_.744 = private unnamed_addr constant [20 x i8] c"dev_attr_generation\00", align 1
@___asan_gen_.747 = private unnamed_addr constant [19 x i8] c"dev_attr_unique_id\00", align 1
@___asan_gen_.752 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1685, i32 8 }
@___asan_gen_.755 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1913, i32 8 }
@___asan_gen_.758 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 1911, i32 22 }
@___asan_gen_.767 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2451, i32 4 }
@___asan_gen_.770 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2493, i32 3 }
@___asan_gen_.773 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2497, i32 2 }
@___asan_gen_.782 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2744, i32 3 }
@___asan_gen_.788 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 744, i32 4 }
@___asan_gen_.791 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 759, i32 4 }
@___asan_gen_.797 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 505, i32 2 }
@___asan_gen_.800 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 510, i32 2 }
@___asan_gen_.803 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 512, i32 2 }
@___asan_gen_.806 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 513, i32 2 }
@___asan_gen_.809 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 514, i32 2 }
@___asan_gen_.812 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 478, i32 11 }
@___asan_gen_.815 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 480, i32 11 }
@___asan_gen_.818 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 482, i32 11 }
@___asan_gen_.821 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 484, i32 11 }
@___asan_gen_.824 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 487, i32 10 }
@___asan_gen_.827 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 489, i32 10 }
@___asan_gen_.830 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 491, i32 10 }
@___asan_gen_.833 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 493, i32 10 }
@___asan_gen_.836 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 495, i32 10 }
@___asan_gen_.842 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2531, i32 4 }
@___asan_gen_.843 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.851 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 400, i32 3 }
@___asan_gen_.857 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2943, i32 3 }
@___asan_gen_.860 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 2945, i32 3 }
@___asan_gen_.869 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 3437, i32 2 }
@___asan_gen_.872 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 3464, i32 2 }
@___asan_gen_.876 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.877 = private constant [32 x i8] c"../drivers/thunderbolt/switch.c\00", align 1
@___asan_gen_.878 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.877, i32 3537, i32 2 }
@___asan_gen_.879 = private unnamed_addr constant [28 x i8] c"switch.table.tb_dump_switch\00", align 1
@___asan_gen_.880 = private unnamed_addr constant [26 x i8] c"switch.table.tb_dump_port\00", align 1
@llvm.compiler.used = appending global [261 x ptr] [ptr @__UNIQUE_ID_clx238, ptr @__UNIQUE_ID_clxtype237, ptr @__param_clx, ptr @nvm_authenticate_device_dma_port._entry, ptr @nvm_authenticate_device_dma_port._entry.150, ptr @nvm_authenticate_device_dma_port._entry_ptr, ptr @nvm_authenticate_device_dma_port._entry_ptr.152, ptr @nvm_authenticate_host_dma_port._entry, ptr @nvm_authenticate_host_dma_port._entry_ptr, ptr @tb_switch_add._entry, ptr @tb_switch_add._entry.46, ptr @tb_switch_add._entry.50, ptr @tb_switch_add._entry.54, ptr @tb_switch_add._entry.57, ptr @tb_switch_add._entry.60, ptr @tb_switch_add._entry.64, ptr @tb_switch_add._entry.67, ptr @tb_switch_add._entry.70, ptr @tb_switch_add._entry_ptr, ptr @tb_switch_add._entry_ptr.48, ptr @tb_switch_add._entry_ptr.52, ptr @tb_switch_add._entry_ptr.56, ptr @tb_switch_add._entry_ptr.59, ptr @tb_switch_add._entry_ptr.63, ptr @tb_switch_add._entry_ptr.66, ptr @tb_switch_add._entry_ptr.69, ptr @tb_switch_add._entry_ptr.72, ptr @tb_switch_add_dma_port._entry, ptr @tb_switch_add_dma_port._entry.162, ptr @tb_switch_add_dma_port._entry.164, ptr @tb_switch_add_dma_port._entry_ptr, ptr @tb_switch_add_dma_port._entry_ptr.163, ptr @tb_switch_add_dma_port._entry_ptr.165, ptr @tb_switch_alloc_dp_resource._entry, ptr @tb_switch_alloc_dp_resource._entry_ptr, ptr @tb_switch_configure._entry, ptr @tb_switch_configure._entry.29, ptr @tb_switch_configure._entry_ptr, ptr @tb_switch_configure._entry_ptr.31, ptr @tb_switch_credits_init._entry, ptr @tb_switch_credits_init._entry_ptr, ptr @tb_switch_dealloc_dp_resource._entry, ptr @tb_switch_dealloc_dp_resource._entry_ptr, ptr @tb_switch_get_generation._entry, ptr @tb_switch_get_generation._entry_ptr, ptr @tb_switch_lane_bonding_disable._entry, ptr @tb_switch_lane_bonding_disable._entry_ptr, ptr @tb_switch_lane_bonding_enable._entry, ptr @tb_switch_lane_bonding_enable._entry.34, ptr @tb_switch_lane_bonding_enable._entry.36, ptr @tb_switch_lane_bonding_enable._entry_ptr, ptr @tb_switch_lane_bonding_enable._entry_ptr.35, ptr @tb_switch_lane_bonding_enable._entry_ptr.38, ptr @tb_switch_nvm_add._entry, ptr @tb_switch_nvm_add._entry_ptr, ptr @tb_switch_remove._entry, ptr @tb_switch_remove._entry_ptr, ptr @tb_switch_resume._entry, ptr @tb_switch_resume._entry.80, ptr @tb_switch_resume._entry.83, ptr @tb_switch_resume._entry.86, ptr @tb_switch_resume._entry.89, ptr @tb_switch_resume._entry.92, ptr @tb_switch_resume._entry_ptr, ptr @tb_switch_resume._entry_ptr.82, ptr @tb_switch_resume._entry_ptr.85, ptr @tb_switch_resume._entry_ptr.88, ptr @tb_switch_resume._entry_ptr.91, ptr @tb_switch_resume._entry_ptr.93, ptr @tb_switch_suspend._entry, ptr @tb_switch_suspend._entry_ptr, ptr @tb_wait_for_port._entry, ptr @tb_wait_for_port._entry_ptr, ptr @clx_enabled, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @tb_switch_pm_ops, ptr @tb_switch_type, ptr @.str.21, ptr @.str.22, ptr @switch_groups, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.30, ptr @.str.32, ptr @.str.33, ptr @.str.37, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.47, ptr @.str.49, ptr @.str.51, ptr @.str.53, ptr @.str.55, ptr @.str.58, ptr @.str.61, ptr @.str.62, ptr @.str.65, ptr @.str.68, ptr @.str.71, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.81, ptr @.str.84, ptr @.str.87, ptr @.str.90, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @xa_init_flags.__key, ptr @.str.124, ptr @switch_group, ptr @switch_attrs, ptr @dev_attr_authorized, ptr @dev_attr_device, ptr @dev_attr_device_name, ptr @dev_attr_vendor, ptr @dev_attr_vendor_name, ptr @dev_attr_key, ptr @dev_attr_rx_speed, ptr @dev_attr_rx_lanes, ptr @dev_attr_tx_speed, ptr @dev_attr_tx_lanes, ptr @dev_attr_nvm_authenticate, ptr @dev_attr_nvm_version, ptr @dev_attr_boot, ptr @dev_attr_nvm_authenticate_on_disconnect, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @nvm_auth_status_lock, ptr @.str.144, ptr @.str.145, ptr @nvm_auth_status_cache, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.151, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @dev_attr_generation, ptr @dev_attr_unique_id, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @.str.160, ptr @.str.161, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.172, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @.str.178, ptr @.str.179, ptr @.str.180, ptr @.str.181, ptr @.str.182, ptr @.str.183, ptr @.str.184, ptr @.str.185, ptr @.str.186, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.190, ptr @.str.191, ptr @.str.192, ptr @.str.193, ptr @.str.194, ptr @.str.195, ptr @.str.196, ptr @.str.197, ptr @.str.198, ptr @switch.table.tb_dump_switch, ptr @switch.table.tb_dump_port], section "llvm.metadata"
@0 = internal global [223 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @clx_enabled to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.218 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.224 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.224 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.227 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.230 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.251 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_wait_for_port._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.263 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.269 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.269 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.275 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.275 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.281 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.284 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_pm_ops to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.285 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.287 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_type to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.288 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.290 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.296 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.296 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch_groups to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.297 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.299 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.302 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_configure._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_configure._entry.29 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.326 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.326 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_lane_bonding_enable._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.335 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.335 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.335 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_lane_bonding_enable._entry.34 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.338 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_lane_bonding_enable._entry.36 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.347 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_lane_bonding_disable._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.356 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.356 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.356 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.359 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_add._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_add._entry.46 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.377 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.377 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.380 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_add._entry.50 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.386 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.386 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.389 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_add._entry.54 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_add._entry.57 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_add._entry.60 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_add._entry.64 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_add._entry.67 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.422 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_add._entry.70 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_remove._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_resume._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.455 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_resume._entry.80 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.461 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.461 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_resume._entry.83 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_resume._entry.86 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_resume._entry.89 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.479 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_resume._entry.92 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_suspend._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.494 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_alloc_dp_resource._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.506 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_dealloc_dp_resource._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.518 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.521 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.533 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.536 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.542 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_get_generation._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.557 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.557 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.563 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 94, i32 128, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.566 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.572 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @xa_init_flags.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.585 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.590 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.590 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch_group to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.591 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch_attrs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.594 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_authorized to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.597 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.641 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_device to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.600 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_device_name to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.603 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_vendor to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.606 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_vendor_name to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.609 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_key to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.612 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_rx_speed to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.615 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.680 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_rx_lanes to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.618 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_tx_speed to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_tx_lanes to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.624 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_nvm_authenticate to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.627 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_nvm_version to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.630 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_boot to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.633 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_nvm_authenticate_on_disconnect to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.636 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.743 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.641 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.644 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.659 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.674 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.677 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.680 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.683 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.689 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nvm_auth_status_lock to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.696 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.704 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.704 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.704 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nvm_auth_status_cache to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.705 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.707 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nvm_authenticate_host_dma_port._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.716 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.716 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.716 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nvm_authenticate_device_dma_port._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.725 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nvm_authenticate_device_dma_port._entry.150 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.731 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.731 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.734 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.737 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.740 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.743 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_generation to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.744 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_unique_id to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.747 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.755 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.752 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.755 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.758 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_add_dma_port._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.767 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.767 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.767 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_add_dma_port._entry.162 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.770 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_add_dma_port._entry.164 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.773 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_credits_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.782 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.788 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.788 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.797 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.800 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.803 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.806 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.809 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.812 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.818 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.821 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.827 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.830 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.184 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.833 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.836 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.842 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tb_switch_nvm_add._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.843 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.851 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.851 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.851 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.190 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.857 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.860 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.869 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.194 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.869 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.869 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.872 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.878 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.876 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.878 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.tb_dump_switch to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.879 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.tb_dump_port to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.880 to i32), i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_port_state(ptr nocapture noundef readonly %port) local_unnamed_addr #0 align 64 {
entry:
  %phy = alloca %struct.tb_cap_phy, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %phy) #16
  %0 = getelementptr inbounds %struct.tb_cap_phy, ptr %phy, i32 0, i32 1
  %cap_phy = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 4
  %1 = ptrtoint ptr %phy to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 -1, ptr %phy, align 8
  %2 = ptrtoint ptr %cap_phy to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cap_phy, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp = icmp eq i32 %3, 0
  %sw = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %4 = ptrtoint ptr %sw to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sw, align 4
  br i1 %cmp, label %do.end, label %if.end28

do.end:                                           ; preds = %entry
  %tb = getelementptr inbounds %struct.tb_switch, ptr %5, i32 0, i32 5
  %6 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tb, align 8
  %nhi = getelementptr inbounds %struct.tb, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %11, i32 0, i32 44
  %call = tail call ptr @dev_driver_string(ptr noundef %dev) #16
  %12 = ptrtoint ptr %sw to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %sw, align 4
  %tb7 = getelementptr inbounds %struct.tb_switch, ptr %13, i32 0, i32 5
  %14 = ptrtoint ptr %tb7 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %tb7, align 8
  %nhi8 = getelementptr inbounds %struct.tb, ptr %15, i32 0, i32 2
  %16 = ptrtoint ptr %nhi8 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %nhi8, align 4
  %pdev9 = getelementptr inbounds %struct.tb_nhi, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %pdev9 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pdev9, align 4
  %init_name.i = getelementptr inbounds %struct.pci_dev, ptr %19, i32 0, i32 44, i32 3
  %20 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %21, null
  br i1 %tobool.not.i, label %if.end.i, label %do.end.dev_name.exit_crit_edge

do.end.dev_name.exit_crit_edge:                   ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %dev_name.exit

if.end.i:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  %dev10 = getelementptr inbounds %struct.pci_dev, ptr %19, i32 0, i32 44
  %22 = ptrtoint ptr %dev10 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %dev10, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %do.end.dev_name.exit_crit_edge
  %retval.0.i = phi ptr [ %23, %if.end.i ], [ %21, %do.end.dev_name.exit_crit_edge ]
  %route_hi.i = getelementptr inbounds %struct.tb_switch, ptr %13, i32 0, i32 1, i32 4
  %24 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %24, i32 8)
  %bf.load.i = load i64, ptr %route_hi.i, align 4
  %25 = lshr i64 %bf.load.i, 1
  %shl.i = and i64 %25, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %13, i32 0, i32 1, i32 3
  %26 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %27 to i64
  %or.i = or i64 %shl.i, %conv2.i
  %port14 = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %28 = ptrtoint ptr %port14 to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %port14, align 4
  %conv = zext i8 %29 to i32
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 531, i32 noundef 9, ptr noundef nonnull @.str.1, ptr noundef %call, ptr noundef %retval.0.i, i64 noundef %or.i, i32 noundef %conv) #16
  br label %cleanup

if.end28:                                         ; preds = %entry
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %5, i32 0, i32 20
  %30 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %31)
  %tobool.not.i43 = icmp eq i8 %31, 0
  br i1 %tobool.not.i43, label %tb_port_read.exit, label %if.end28.cleanup_crit_edge

if.end28.cleanup_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_port_read.exit:                                ; preds = %if.end28
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %5, i32 0, i32 5
  %32 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %33, i32 0, i32 3
  %34 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %ctl.i, align 8
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %5, i32 0, i32 1, i32 4
  %36 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %36, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %37 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %37, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %5, i32 0, i32 1, i32 3
  %38 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %39 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %port3.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %40 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %port3.i, align 4
  %conv.i = zext i8 %41 to i32
  %call4.i = call i32 @tb_cfg_read(ptr noundef %35, ptr noundef nonnull %phy, i64 noundef %or.i.i, i32 noundef %conv.i, i32 noundef 1, i32 noundef %3, i32 noundef 2) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool31.not = icmp eq i32 %call4.i, 0
  br i1 %tobool31.not, label %if.end33, label %tb_port_read.exit.cleanup_crit_edge

tb_port_read.exit.cleanup_crit_edge:              ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end33:                                         ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  %42 = ptrtoint ptr %0 to i32
  call void @__asan_loadN_noabort(i32 %42, i32 6)
  %bf.load = load i48, ptr %0, align 2
  %43 = trunc i48 %bf.load to i32
  %44 = lshr i32 %43, 2
  %bf.cast = and i32 %44, 15
  br label %cleanup

cleanup:                                          ; preds = %if.end33, %tb_port_read.exit.cleanup_crit_edge, %if.end28.cleanup_crit_edge, %dev_name.exit
  %retval.0 = phi i32 [ -22, %dev_name.exit ], [ %bf.cast, %if.end33 ], [ %call4.i, %tb_port_read.exit.cleanup_crit_edge ], [ -19, %if.end28.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %phy) #16
  ret i32 %retval.0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dev_driver_string(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_wait_for_port(ptr noundef readonly %port, i1 noundef zeroext %wait_if_unplugged) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %cap_phy = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 4
  %0 = ptrtoint ptr %cap_phy to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %cap_phy, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  %sw = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %2 = ptrtoint ptr %sw to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sw, align 4
  br i1 %tobool.not, label %do.end, label %if.end29

do.end:                                           ; preds = %entry
  %tb = getelementptr inbounds %struct.tb_switch, ptr %3, i32 0, i32 5
  %4 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %tb, align 8
  %nhi = getelementptr inbounds %struct.tb, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 44
  %call = tail call ptr @dev_driver_string(ptr noundef %dev) #16
  %10 = ptrtoint ptr %sw to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sw, align 4
  %tb8 = getelementptr inbounds %struct.tb_switch, ptr %11, i32 0, i32 5
  %12 = ptrtoint ptr %tb8 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %tb8, align 8
  %nhi9 = getelementptr inbounds %struct.tb, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %nhi9 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %nhi9, align 4
  %pdev10 = getelementptr inbounds %struct.tb_nhi, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %pdev10 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %pdev10, align 4
  %init_name.i = getelementptr inbounds %struct.pci_dev, ptr %17, i32 0, i32 44, i32 3
  %18 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %19, null
  br i1 %tobool.not.i, label %if.end.i, label %do.end.dev_name.exit_crit_edge

do.end.dev_name.exit_crit_edge:                   ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %dev_name.exit

if.end.i:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  %dev11 = getelementptr inbounds %struct.pci_dev, ptr %17, i32 0, i32 44
  %20 = ptrtoint ptr %dev11 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %dev11, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %do.end.dev_name.exit_crit_edge
  %retval.0.i307 = phi ptr [ %21, %if.end.i ], [ %19, %do.end.dev_name.exit_crit_edge ]
  %route_hi.i = getelementptr inbounds %struct.tb_switch, ptr %11, i32 0, i32 1, i32 4
  %22 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %22, i32 8)
  %bf.load.i = load i64, ptr %route_hi.i, align 4
  %23 = lshr i64 %bf.load.i, 1
  %shl.i = and i64 %23, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %11, i32 0, i32 1, i32 3
  %24 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %25 to i64
  %or.i = or i64 %shl.i, %conv2.i
  %port15 = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %26 = ptrtoint ptr %port15 to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %port15, align 4
  %conv = zext i8 %27 to i32
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 560, i32 noundef 9, ptr noundef nonnull @.str.2, ptr noundef %call, ptr noundef %retval.0.i307, i64 noundef %or.i, i32 noundef %conv) #16
  br label %cleanup

if.end29:                                         ; preds = %entry
  %ports.i.i = getelementptr inbounds %struct.tb_switch, ptr %3, i32 0, i32 2
  %28 = ptrtoint ptr %ports.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ports.i.i, align 4
  %upstream_port_number.i.i = getelementptr inbounds %struct.tb_switch, ptr %3, i32 0, i32 1, i32 2
  %30 = ptrtoint ptr %upstream_port_number.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %bf.load.i.i = load i32, ptr %upstream_port_number.i.i, align 4
  %bf.lshr.i.i = lshr i32 %bf.load.i.i, 18
  %bf.clear.i.i = and i32 %bf.lshr.i.i, 63
  %arrayidx.i.i = getelementptr %struct.tb_port, ptr %29, i32 %bf.clear.i.i
  %cmp.i = icmp eq ptr %arrayidx.i.i, %port
  br i1 %cmp.i, label %if.end29.do.end46_crit_edge, label %tb_is_upstream_port.exit

if.end29.do.end46_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end46

tb_is_upstream_port.exit:                         ; preds = %if.end29
  %dual_link_port.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 12
  %31 = ptrtoint ptr %dual_link_port.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %dual_link_port.i, align 4
  %cmp1.i = icmp eq ptr %32, %arrayidx.i.i
  br i1 %cmp1.i, label %tb_is_upstream_port.exit.do.end46_crit_edge, label %while.cond.preheader

tb_is_upstream_port.exit.do.end46_crit_edge:      ; preds = %tb_is_upstream_port.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end46

while.cond.preheader:                             ; preds = %tb_is_upstream_port.exit
  %port143 = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  br label %while.body

do.end46:                                         ; preds = %tb_is_upstream_port.exit.do.end46_crit_edge, %if.end29.do.end46_crit_edge
  %tb48 = getelementptr inbounds %struct.tb_switch, ptr %3, i32 0, i32 5
  %33 = ptrtoint ptr %tb48 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %tb48, align 8
  %nhi49 = getelementptr inbounds %struct.tb, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %nhi49 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %nhi49, align 4
  %pdev50 = getelementptr inbounds %struct.tb_nhi, ptr %36, i32 0, i32 1
  %37 = ptrtoint ptr %pdev50 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %pdev50, align 4
  %dev51 = getelementptr inbounds %struct.pci_dev, ptr %38, i32 0, i32 44
  %call52 = tail call ptr @dev_driver_string(ptr noundef %dev51) #16
  %39 = ptrtoint ptr %sw to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %sw, align 4
  %tb54 = getelementptr inbounds %struct.tb_switch, ptr %40, i32 0, i32 5
  %41 = ptrtoint ptr %tb54 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %tb54, align 8
  %nhi55 = getelementptr inbounds %struct.tb, ptr %42, i32 0, i32 2
  %43 = ptrtoint ptr %nhi55 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %nhi55, align 4
  %pdev56 = getelementptr inbounds %struct.tb_nhi, ptr %44, i32 0, i32 1
  %45 = ptrtoint ptr %pdev56 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %pdev56, align 4
  %init_name.i308 = getelementptr inbounds %struct.pci_dev, ptr %46, i32 0, i32 44, i32 3
  %47 = ptrtoint ptr %init_name.i308 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %init_name.i308, align 8
  %tobool.not.i309 = icmp eq ptr %48, null
  br i1 %tobool.not.i309, label %if.end.i310, label %do.end46.dev_name.exit312_crit_edge

do.end46.dev_name.exit312_crit_edge:              ; preds = %do.end46
  call void @__sanitizer_cov_trace_pc() #18
  br label %dev_name.exit312

if.end.i310:                                      ; preds = %do.end46
  call void @__sanitizer_cov_trace_pc() #18
  %dev57 = getelementptr inbounds %struct.pci_dev, ptr %46, i32 0, i32 44
  %49 = ptrtoint ptr %dev57 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %dev57, align 4
  br label %dev_name.exit312

dev_name.exit312:                                 ; preds = %if.end.i310, %do.end46.dev_name.exit312_crit_edge
  %retval.0.i311 = phi ptr [ %50, %if.end.i310 ], [ %48, %do.end46.dev_name.exit312_crit_edge ]
  %route_hi.i313 = getelementptr inbounds %struct.tb_switch, ptr %40, i32 0, i32 1, i32 4
  %51 = ptrtoint ptr %route_hi.i313 to i32
  call void @__asan_loadN_noabort(i32 %51, i32 8)
  %bf.load.i314 = load i64, ptr %route_hi.i313, align 4
  %52 = lshr i64 %bf.load.i314, 1
  %shl.i315 = and i64 %52, 9223372032559808512
  %route_lo.i316 = getelementptr inbounds %struct.tb_switch, ptr %40, i32 0, i32 1, i32 3
  %53 = ptrtoint ptr %route_lo.i316 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %route_lo.i316, align 8
  %conv2.i317 = zext i32 %54 to i64
  %or.i318 = or i64 %shl.i315, %conv2.i317
  %port61 = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %55 = ptrtoint ptr %port61 to i32
  call void @__asan_load1_noabort(i32 %55)
  %56 = load i8, ptr %port61, align 4
  %conv62 = zext i8 %56 to i32
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 564, i32 noundef 9, ptr noundef nonnull @.str.3, ptr noundef %call52, ptr noundef %retval.0.i311, i64 noundef %or.i318, i32 noundef %conv62) #16
  br label %cleanup

while.body:                                       ; preds = %while.cond.backedge.while.body_crit_edge, %while.cond.preheader
  %dec363 = phi i32 [ 9, %while.cond.preheader ], [ %dec, %while.cond.backedge.while.body_crit_edge ]
  %call80 = tail call i32 @tb_port_state(ptr noundef %port)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call80)
  %cmp = icmp slt i32 %call80, 0
  br i1 %cmp, label %while.body.cleanup_crit_edge, label %if.end83

while.body.cleanup_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end83:                                         ; preds = %while.body
  %57 = zext i32 %call80 to i64
  call void @__sanitizer_cov_trace_switch(i64 %57, ptr @__sancov_gen_cov_switch_values)
  switch i32 %call80, label %do.body214 [
    i32 0, label %do.body87
    i32 7, label %if.then118
    i32 2, label %do.body184
  ]

do.body87:                                        ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_wait_for_port.__UNIQUE_ID_ddebug244, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_wait_for_port, %if.then100)) #16
          to label %cleanup [label %if.then100], !srcloc !446

if.then100:                                       ; preds = %do.body87
  call void @__sanitizer_cov_trace_pc() #18
  %58 = ptrtoint ptr %sw to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %sw, align 4
  %tb102 = getelementptr inbounds %struct.tb_switch, ptr %59, i32 0, i32 5
  %60 = ptrtoint ptr %tb102 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %tb102, align 8
  %nhi103 = getelementptr inbounds %struct.tb, ptr %61, i32 0, i32 2
  %62 = ptrtoint ptr %nhi103 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %nhi103, align 4
  %pdev104 = getelementptr inbounds %struct.tb_nhi, ptr %63, i32 0, i32 1
  %64 = ptrtoint ptr %pdev104 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %pdev104, align 4
  %dev105 = getelementptr inbounds %struct.pci_dev, ptr %65, i32 0, i32 44
  %route_hi.i319 = getelementptr inbounds %struct.tb_switch, ptr %59, i32 0, i32 1, i32 4
  %66 = ptrtoint ptr %route_hi.i319 to i32
  call void @__asan_loadN_noabort(i32 %66, i32 8)
  %bf.load.i320 = load i64, ptr %route_hi.i319, align 4
  %67 = lshr i64 %bf.load.i320, 1
  %shl.i321 = and i64 %67, 9223372032559808512
  %route_lo.i322 = getelementptr inbounds %struct.tb_switch, ptr %59, i32 0, i32 1, i32 3
  %68 = ptrtoint ptr %route_lo.i322 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %route_lo.i322, align 8
  %conv2.i323 = zext i32 %69 to i64
  %or.i324 = or i64 %shl.i321, %conv2.i323
  %70 = ptrtoint ptr %port143 to i32
  call void @__asan_load1_noabort(i32 %70)
  %71 = load i8, ptr %port143, align 4
  %conv109 = zext i8 %71 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_wait_for_port.__UNIQUE_ID_ddebug244, ptr noundef %dev105, ptr noundef nonnull @.str.6, i64 noundef %or.i324, i32 noundef %conv109) #16
  br label %cleanup

if.then118:                                       ; preds = %if.end83
  br i1 %wait_if_unplugged, label %do.body121, label %do.body151

do.body121:                                       ; preds = %if.then118
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_wait_for_port.__UNIQUE_ID_ddebug245, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_wait_for_port, %if.then135)) #16
          to label %while.cond.backedge [label %if.then135], !srcloc !446

if.then135:                                       ; preds = %do.body121
  call void @__sanitizer_cov_trace_pc() #18
  %72 = ptrtoint ptr %sw to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %sw, align 4
  %tb137 = getelementptr inbounds %struct.tb_switch, ptr %73, i32 0, i32 5
  %74 = ptrtoint ptr %tb137 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %tb137, align 8
  %nhi138 = getelementptr inbounds %struct.tb, ptr %75, i32 0, i32 2
  %76 = ptrtoint ptr %nhi138 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %nhi138, align 4
  %pdev139 = getelementptr inbounds %struct.tb_nhi, ptr %77, i32 0, i32 1
  %78 = ptrtoint ptr %pdev139 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %pdev139, align 4
  %dev140 = getelementptr inbounds %struct.pci_dev, ptr %79, i32 0, i32 44
  %route_hi.i325 = getelementptr inbounds %struct.tb_switch, ptr %73, i32 0, i32 1, i32 4
  %80 = ptrtoint ptr %route_hi.i325 to i32
  call void @__asan_loadN_noabort(i32 %80, i32 8)
  %bf.load.i326 = load i64, ptr %route_hi.i325, align 4
  %81 = lshr i64 %bf.load.i326, 1
  %shl.i327 = and i64 %81, 9223372032559808512
  %route_lo.i328 = getelementptr inbounds %struct.tb_switch, ptr %73, i32 0, i32 1, i32 3
  %82 = ptrtoint ptr %route_lo.i328 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %route_lo.i328, align 8
  %conv2.i329 = zext i32 %83 to i64
  %or.i330 = or i64 %shl.i327, %conv2.i329
  %84 = ptrtoint ptr %port143 to i32
  call void @__asan_load1_noabort(i32 %84)
  %85 = load i8, ptr %port143, align 4
  %conv144 = zext i8 %85 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_wait_for_port.__UNIQUE_ID_ddebug245, ptr noundef %dev140, ptr noundef nonnull @.str.7, i64 noundef %or.i330, i32 noundef %conv144) #16
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.then228, %do.body214, %if.then135, %do.body121
  tail call void @msleep(i32 noundef 100) #16
  %dec = add nsw i32 %dec363, -1
  %tobool79.not = icmp eq i32 %dec363, 0
  br i1 %tobool79.not, label %do.body243, label %while.cond.backedge.while.body_crit_edge

while.cond.backedge.while.body_crit_edge:         ; preds = %while.cond.backedge
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body

do.body151:                                       ; preds = %if.then118
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_wait_for_port.__UNIQUE_ID_ddebug246, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_wait_for_port, %if.then165)) #16
          to label %cleanup [label %if.then165], !srcloc !446

if.then165:                                       ; preds = %do.body151
  call void @__sanitizer_cov_trace_pc() #18
  %86 = ptrtoint ptr %sw to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %sw, align 4
  %tb167 = getelementptr inbounds %struct.tb_switch, ptr %87, i32 0, i32 5
  %88 = ptrtoint ptr %tb167 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %tb167, align 8
  %nhi168 = getelementptr inbounds %struct.tb, ptr %89, i32 0, i32 2
  %90 = ptrtoint ptr %nhi168 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %nhi168, align 4
  %pdev169 = getelementptr inbounds %struct.tb_nhi, ptr %91, i32 0, i32 1
  %92 = ptrtoint ptr %pdev169 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %pdev169, align 4
  %dev170 = getelementptr inbounds %struct.pci_dev, ptr %93, i32 0, i32 44
  %route_hi.i331 = getelementptr inbounds %struct.tb_switch, ptr %87, i32 0, i32 1, i32 4
  %94 = ptrtoint ptr %route_hi.i331 to i32
  call void @__asan_loadN_noabort(i32 %94, i32 8)
  %bf.load.i332 = load i64, ptr %route_hi.i331, align 4
  %95 = lshr i64 %bf.load.i332, 1
  %shl.i333 = and i64 %95, 9223372032559808512
  %route_lo.i334 = getelementptr inbounds %struct.tb_switch, ptr %87, i32 0, i32 1, i32 3
  %96 = ptrtoint ptr %route_lo.i334 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %route_lo.i334, align 8
  %conv2.i335 = zext i32 %97 to i64
  %or.i336 = or i64 %shl.i333, %conv2.i335
  %98 = ptrtoint ptr %port143 to i32
  call void @__asan_load1_noabort(i32 %98)
  %99 = load i8, ptr %port143, align 4
  %conv174 = zext i8 %99 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_wait_for_port.__UNIQUE_ID_ddebug246, ptr noundef %dev170, ptr noundef nonnull @.str.8, i64 noundef %or.i336, i32 noundef %conv174) #16
  br label %cleanup

do.body184:                                       ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_wait_for_port.__UNIQUE_ID_ddebug247, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_wait_for_port, %if.then198)) #16
          to label %cleanup [label %if.then198], !srcloc !446

if.then198:                                       ; preds = %do.body184
  call void @__sanitizer_cov_trace_pc() #18
  %100 = ptrtoint ptr %sw to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %sw, align 4
  %tb200 = getelementptr inbounds %struct.tb_switch, ptr %101, i32 0, i32 5
  %102 = ptrtoint ptr %tb200 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %tb200, align 8
  %nhi201 = getelementptr inbounds %struct.tb, ptr %103, i32 0, i32 2
  %104 = ptrtoint ptr %nhi201 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %nhi201, align 4
  %pdev202 = getelementptr inbounds %struct.tb_nhi, ptr %105, i32 0, i32 1
  %106 = ptrtoint ptr %pdev202 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %pdev202, align 4
  %dev203 = getelementptr inbounds %struct.pci_dev, ptr %107, i32 0, i32 44
  %route_hi.i337 = getelementptr inbounds %struct.tb_switch, ptr %101, i32 0, i32 1, i32 4
  %108 = ptrtoint ptr %route_hi.i337 to i32
  call void @__asan_loadN_noabort(i32 %108, i32 8)
  %bf.load.i338 = load i64, ptr %route_hi.i337, align 4
  %109 = lshr i64 %bf.load.i338, 1
  %shl.i339 = and i64 %109, 9223372032559808512
  %route_lo.i340 = getelementptr inbounds %struct.tb_switch, ptr %101, i32 0, i32 1, i32 3
  %110 = ptrtoint ptr %route_lo.i340 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %route_lo.i340, align 8
  %conv2.i341 = zext i32 %111 to i64
  %or.i342 = or i64 %shl.i339, %conv2.i341
  %112 = ptrtoint ptr %port143 to i32
  call void @__asan_load1_noabort(i32 %112)
  %113 = load i8, ptr %port143, align 4
  %conv207 = zext i8 %113 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_wait_for_port.__UNIQUE_ID_ddebug247, ptr noundef %dev203, ptr noundef nonnull @.str.9, i64 noundef %or.i342, i32 noundef %conv207) #16
  br label %cleanup

do.body214:                                       ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_wait_for_port.__UNIQUE_ID_ddebug248, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_wait_for_port, %if.then228)) #16
          to label %while.cond.backedge [label %if.then228], !srcloc !446

if.then228:                                       ; preds = %do.body214
  call void @__sanitizer_cov_trace_pc() #18
  %114 = ptrtoint ptr %sw to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %sw, align 4
  %tb230 = getelementptr inbounds %struct.tb_switch, ptr %115, i32 0, i32 5
  %116 = ptrtoint ptr %tb230 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %tb230, align 8
  %nhi231 = getelementptr inbounds %struct.tb, ptr %117, i32 0, i32 2
  %118 = ptrtoint ptr %nhi231 to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %nhi231, align 4
  %pdev232 = getelementptr inbounds %struct.tb_nhi, ptr %119, i32 0, i32 1
  %120 = ptrtoint ptr %pdev232 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %pdev232, align 4
  %dev233 = getelementptr inbounds %struct.pci_dev, ptr %121, i32 0, i32 44
  %route_hi.i343 = getelementptr inbounds %struct.tb_switch, ptr %115, i32 0, i32 1, i32 4
  %122 = ptrtoint ptr %route_hi.i343 to i32
  call void @__asan_loadN_noabort(i32 %122, i32 8)
  %bf.load.i344 = load i64, ptr %route_hi.i343, align 4
  %123 = lshr i64 %bf.load.i344, 1
  %shl.i345 = and i64 %123, 9223372032559808512
  %route_lo.i346 = getelementptr inbounds %struct.tb_switch, ptr %115, i32 0, i32 1, i32 3
  %124 = ptrtoint ptr %route_lo.i346 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %route_lo.i346, align 8
  %conv2.i347 = zext i32 %125 to i64
  %or.i348 = or i64 %shl.i345, %conv2.i347
  %126 = ptrtoint ptr %port143 to i32
  call void @__asan_load1_noabort(i32 %126)
  %127 = load i8, ptr %port143, align 4
  %conv237 = zext i8 %127 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_wait_for_port.__UNIQUE_ID_ddebug248, ptr noundef %dev233, ptr noundef nonnull @.str.10, i64 noundef %or.i348, i32 noundef %conv237, i32 noundef %call80) #16
  br label %while.cond.backedge

do.body243:                                       ; preds = %while.cond.backedge
  call void @__sanitizer_cov_trace_pc() #18
  %128 = ptrtoint ptr %sw to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %sw, align 4
  %tb249 = getelementptr inbounds %struct.tb_switch, ptr %129, i32 0, i32 5
  %130 = ptrtoint ptr %tb249 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %tb249, align 8
  %nhi250 = getelementptr inbounds %struct.tb, ptr %131, i32 0, i32 2
  %132 = ptrtoint ptr %nhi250 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %nhi250, align 4
  %pdev251 = getelementptr inbounds %struct.tb_nhi, ptr %133, i32 0, i32 1
  %134 = ptrtoint ptr %pdev251 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %pdev251, align 4
  %dev252 = getelementptr inbounds %struct.pci_dev, ptr %135, i32 0, i32 44
  %route_hi.i349 = getelementptr inbounds %struct.tb_switch, ptr %129, i32 0, i32 1, i32 4
  %136 = ptrtoint ptr %route_hi.i349 to i32
  call void @__asan_loadN_noabort(i32 %136, i32 8)
  %bf.load.i350 = load i64, ptr %route_hi.i349, align 4
  %137 = lshr i64 %bf.load.i350, 1
  %shl.i351 = and i64 %137, 9223372032559808512
  %route_lo.i352 = getelementptr inbounds %struct.tb_switch, ptr %129, i32 0, i32 1, i32 3
  %138 = ptrtoint ptr %route_lo.i352 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %route_lo.i352, align 8
  %conv2.i353 = zext i32 %139 to i64
  %or.i354 = or i64 %shl.i351, %conv2.i353
  %140 = ptrtoint ptr %port143 to i32
  call void @__asan_load1_noabort(i32 %140)
  %141 = load i8, ptr %port143, align 4
  %conv256 = zext i8 %141 to i32
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev252, ptr noundef nonnull @.str.11, i64 noundef %or.i354, i32 noundef %conv256) #19
  br label %cleanup

cleanup:                                          ; preds = %do.body243, %if.then198, %do.body184, %if.then165, %do.body151, %if.then100, %do.body87, %while.body.cleanup_crit_edge, %dev_name.exit312, %dev_name.exit
  %retval.0 = phi i32 [ -22, %dev_name.exit312 ], [ 0, %do.body243 ], [ -22, %dev_name.exit ], [ 0, %if.then100 ], [ 0, %if.then165 ], [ 1, %if.then198 ], [ 0, %do.body87 ], [ 0, %do.body151 ], [ 1, %do.body184 ], [ %call80, %while.body.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_dev_dbg(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_port_add_nfc_credits(ptr noundef %port, i32 noundef %credits) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %credits)
  %cmp = icmp eq i32 %credits, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %sw = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %0 = ptrtoint ptr %sw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sw, align 4
  %is_unplugged = getelementptr inbounds %struct.tb_switch, ptr %1, i32 0, i32 20
  %2 = ptrtoint ptr %is_unplugged to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %is_unplugged, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %if.end, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %thunderbolt_version.i = getelementptr inbounds %struct.tb_switch, ptr %1, i32 0, i32 1, i32 4
  %4 = ptrtoint ptr %thunderbolt_version.i to i32
  call void @__asan_loadN_noabort(i32 %4, i32 8)
  %bf.load.i = load i64, ptr %thunderbolt_version.i, align 4
  %bf.cast1.i = and i64 %bf.load.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i)
  %cmp.i = icmp eq i64 %bf.cast1.i, 32
  br i1 %cmp.i, label %land.lhs.true, label %if.end.if.end4_crit_edge

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

land.lhs.true:                                    ; preds = %if.end
  %tobool.not.i = icmp eq ptr %port, null
  br i1 %tobool.not.i, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.i

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true.i:                                  ; preds = %land.lhs.true
  %port1.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %5 = ptrtoint ptr %port1.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %port1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool2.not.i = icmp eq i8 %6, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.cleanup_crit_edge, label %tb_port_is_null.exit

land.lhs.true.i.cleanup_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_port_is_null.exit:                             ; preds = %land.lhs.true.i
  %type.i = getelementptr inbounds %struct.tb_regs_port_header, ptr %port, i32 0, i32 2
  %7 = ptrtoint ptr %type.i to i32
  call void @__asan_loadN_noabort(i32 %7, i32 12)
  %bf.load.i54 = load i96, ptr %type.i, align 4
  %8 = and i96 %bf.load.i54, 18446742974197923840
  %cmp.i55 = icmp eq i96 %8, 1099511627776
  br i1 %cmp.i55, label %tb_port_is_null.exit.if.end4_crit_edge, label %tb_port_is_null.exit.cleanup_crit_edge

tb_port_is_null.exit.cleanup_crit_edge:           ; preds = %tb_port_is_null.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_port_is_null.exit.if.end4_crit_edge:           ; preds = %tb_port_is_null.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

if.end4:                                          ; preds = %tb_port_is_null.exit.if.end4_crit_edge, %if.end.if.end4_crit_edge
  %nfc_credits5 = getelementptr inbounds %struct.tb_regs_port_header, ptr %port, i32 0, i32 3
  %9 = ptrtoint ptr %nfc_credits5 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %nfc_credits5, align 4
  %and = and i32 %10, 1023
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %credits)
  %cmp6 = icmp slt i32 %credits, 0
  %sub = sub nsw i32 0, %and
  %11 = tail call i32 @llvm.smax.i32(i32 %sub, i32 %credits)
  %credits.addr.0 = select i1 %cmp6, i32 %11, i32 %credits
  %add = add i32 %credits.addr.0, %and
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_port_add_nfc_credits.__UNIQUE_ID_ddebug251, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_port_add_nfc_credits, %if.then16)) #16
          to label %do.end [label %if.then16], !srcloc !446

if.then16:                                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  %12 = ptrtoint ptr %sw to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %sw, align 4
  %tb = getelementptr inbounds %struct.tb_switch, ptr %13, i32 0, i32 5
  %14 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %tb, align 8
  %nhi = getelementptr inbounds %struct.tb, ptr %15, i32 0, i32 2
  %16 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %19, i32 0, i32 44
  %route_hi.i = getelementptr inbounds %struct.tb_switch, ptr %13, i32 0, i32 1, i32 4
  %20 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %20, i32 8)
  %bf.load.i56 = load i64, ptr %route_hi.i, align 4
  %21 = lshr i64 %bf.load.i56, 1
  %shl.i = and i64 %21, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %13, i32 0, i32 1, i32 3
  %22 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %23 to i64
  %or.i = or i64 %shl.i, %conv2.i
  %port20 = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %24 = ptrtoint ptr %port20 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %port20, align 4
  %conv = zext i8 %25 to i32
  %26 = ptrtoint ptr %nfc_credits5 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %nfc_credits5, align 4
  %and23 = and i32 %27, 1023
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_port_add_nfc_credits.__UNIQUE_ID_ddebug251, ptr noundef %dev, ptr noundef nonnull @.str.15, i64 noundef %or.i, i32 noundef %conv, i32 noundef %credits.addr.0, i32 noundef %and23) #16
  br label %do.end

do.end:                                           ; preds = %if.then16, %if.end4
  %28 = ptrtoint ptr %nfc_credits5 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %nfc_credits5, align 4
  %and29 = and i32 %29, -1024
  %or = or i32 %and29, %add
  store i32 %or, ptr %nfc_credits5, align 4
  %30 = ptrtoint ptr %sw to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %sw, align 4
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %31, i32 0, i32 20
  %32 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %33)
  %tobool.not.i57 = icmp eq i8 %33, 0
  br i1 %tobool.not.i57, label %if.end.i, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %31, i32 0, i32 5
  %34 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %35, i32 0, i32 3
  %36 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %ctl.i, align 8
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %31, i32 0, i32 1, i32 4
  %38 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %38, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %39 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %39, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %31, i32 0, i32 1, i32 3
  %40 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %41 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %port3.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %42 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %port3.i, align 4
  %conv.i = zext i8 %43 to i32
  %call4.i = tail call i32 @tb_cfg_write(ptr noundef %37, ptr noundef %nfc_credits5, i64 noundef %or.i.i, i32 noundef %conv.i, i32 noundef 1, i32 noundef 4, i32 noundef 1) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end.i, %do.end.cleanup_crit_edge, %tb_port_is_null.exit.cleanup_crit_edge, %land.lhs.true.i.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %lor.lhs.false.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ], [ 0, %tb_port_is_null.exit.cleanup_crit_edge ], [ %call4.i, %if.end.i ], [ -19, %do.end.cleanup_crit_edge ], [ 0, %land.lhs.true.i.cleanup_crit_edge ], [ 0, %land.lhs.true.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_port_clear_counter(ptr nocapture noundef readonly %port, i32 noundef %counter) local_unnamed_addr #0 align 64 {
entry:
  %zero = alloca [3 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %zero) #16
  %0 = call ptr @memset(ptr %zero, i32 0, i32 12)
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_port_clear_counter.__UNIQUE_ID_ddebug252, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_port_clear_counter, %if.then)) #16
          to label %do.end [label %if.then], !srcloc !446

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %sw = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %1 = ptrtoint ptr %sw to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %sw, align 4
  %tb = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 5
  %3 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %tb, align 8
  %nhi = getelementptr inbounds %struct.tb, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %8, i32 0, i32 44
  %route_hi.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 1, i32 4
  %9 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %9, i32 8)
  %bf.load.i = load i64, ptr %route_hi.i, align 4
  %10 = lshr i64 %bf.load.i, 1
  %shl.i = and i64 %10, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 1, i32 3
  %11 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %12 to i64
  %or.i = or i64 %shl.i, %conv2.i
  %port6 = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %13 = ptrtoint ptr %port6 to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %port6, align 4
  %conv = zext i8 %14 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_port_clear_counter.__UNIQUE_ID_ddebug252, ptr noundef %dev, ptr noundef nonnull @.str.17, i64 noundef %or.i, i32 noundef %conv, i32 noundef %counter) #16
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %sw.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %15 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %sw.i, align 4
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %16, i32 0, i32 20
  %17 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool.not.i = icmp eq i8 %18, 0
  br i1 %tobool.not.i, label %if.end.i, label %do.end.tb_port_write.exit_crit_edge

do.end.tb_port_write.exit_crit_edge:              ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_write.exit

if.end.i:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  %mul = mul i32 %counter, 3
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %16, i32 0, i32 5
  %19 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %20, i32 0, i32 3
  %21 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %ctl.i, align 8
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %16, i32 0, i32 1, i32 4
  %23 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %23, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %24 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %24, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %16, i32 0, i32 1, i32 3
  %25 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %26 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %port3.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %27 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %port3.i, align 4
  %conv.i = zext i8 %28 to i32
  %call4.i = call i32 @tb_cfg_write(ptr noundef %22, ptr noundef nonnull %zero, i64 noundef %or.i.i, i32 noundef %conv.i, i32 noundef 3, i32 noundef %mul, i32 noundef 3) #16
  br label %tb_port_write.exit

tb_port_write.exit:                               ; preds = %if.end.i, %do.end.tb_port_write.exit_crit_edge
  %retval.0.i14 = phi i32 [ %call4.i, %if.end.i ], [ -19, %do.end.tb_port_write.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %zero) #16
  ret i32 %retval.0.i14
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_port_unlock(ptr noundef %port) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %sw = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %0 = ptrtoint ptr %sw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sw, align 4
  %enabled.i = getelementptr inbounds %struct.tb_switch, ptr %1, i32 0, i32 1, i32 4
  %2 = ptrtoint ptr %enabled.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %bf.load.i = load i64, ptr %enabled.i, align 4
  %3 = and i64 %bf.load.i, 4294967296
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %3)
  %bf.cast.not.i = icmp eq i64 %3, 0
  br i1 %bf.cast.not.i, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end:                                           ; preds = %entry
  %tobool.not.i = icmp eq ptr %port, null
  br i1 %tobool.not.i, label %if.end.return_crit_edge, label %land.lhs.true.i

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

land.lhs.true.i:                                  ; preds = %if.end
  %port1.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %4 = ptrtoint ptr %port1.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %port1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool2.not.i = icmp eq i8 %5, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.return_crit_edge, label %tb_port_is_null.exit

land.lhs.true.i.return_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

tb_port_is_null.exit:                             ; preds = %land.lhs.true.i
  %type.i = getelementptr inbounds %struct.tb_regs_port_header, ptr %port, i32 0, i32 2
  %6 = ptrtoint ptr %type.i to i32
  call void @__asan_loadN_noabort(i32 %6, i32 12)
  %bf.load.i12 = load i96, ptr %type.i, align 4
  %7 = and i96 %bf.load.i12, 18446742974197923840
  %cmp.i = icmp eq i96 %7, 1099511627776
  br i1 %cmp.i, label %if.end3, label %tb_port_is_null.exit.return_crit_edge

tb_port_is_null.exit.return_crit_edge:            ; preds = %tb_port_is_null.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end3:                                          ; preds = %tb_port_is_null.exit
  %bf.cast1.i = and i64 %bf.load.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i)
  %cmp.i14 = icmp eq i64 %bf.cast1.i, 32
  br i1 %cmp.i14, label %if.then6, label %if.end3.return_crit_edge

if.end3.return_crit_edge:                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.then6:                                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  %call7 = tail call i32 @usb4_port_unlock(ptr noundef nonnull %port) #16
  br label %return

return:                                           ; preds = %if.then6, %if.end3.return_crit_edge, %tb_port_is_null.exit.return_crit_edge, %land.lhs.true.i.return_crit_edge, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call7, %if.then6 ], [ 0, %entry.return_crit_edge ], [ -22, %tb_port_is_null.exit.return_crit_edge ], [ 0, %if.end3.return_crit_edge ], [ -22, %land.lhs.true.i.return_crit_edge ], [ -22, %if.end.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb4_port_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_port_enable(ptr noundef %port) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @__tb_port_enable(ptr noundef %port, i1 noundef zeroext true)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__tb_port_enable(ptr noundef readonly %port, i1 noundef zeroext %enable) unnamed_addr #0 align 64 {
entry:
  %phy = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %phy) #16
  %0 = ptrtoint ptr %phy to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %phy, align 4, !annotation !447
  %tobool.not.i = icmp eq ptr %port, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %land.lhs.true.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true.i:                                  ; preds = %entry
  %port1.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %1 = ptrtoint ptr %port1.i to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %port1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool2.not.i = icmp eq i8 %2, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.cleanup_crit_edge, label %tb_port_is_null.exit

land.lhs.true.i.cleanup_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_port_is_null.exit:                             ; preds = %land.lhs.true.i
  %type.i = getelementptr inbounds %struct.tb_regs_port_header, ptr %port, i32 0, i32 2
  %3 = ptrtoint ptr %type.i to i32
  call void @__asan_loadN_noabort(i32 %3, i32 12)
  %bf.load.i = load i96, ptr %type.i, align 4
  %4 = and i96 %bf.load.i, 18446742974197923840
  %cmp.i = icmp eq i96 %4, 1099511627776
  br i1 %cmp.i, label %if.end, label %tb_port_is_null.exit.cleanup_crit_edge

tb_port_is_null.exit.cleanup_crit_edge:           ; preds = %tb_port_is_null.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %tb_port_is_null.exit
  %cap_phy = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 4
  %sw.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %5 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %sw.i, align 4
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %6, i32 0, i32 20
  %7 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool.not.i16 = icmp eq i8 %8, 0
  br i1 %tobool.not.i16, label %tb_port_read.exit, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_port_read.exit:                                ; preds = %if.end
  %9 = ptrtoint ptr %cap_phy to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cap_phy, align 4
  %add = add i32 %10, 1
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %6, i32 0, i32 5
  %11 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %12, i32 0, i32 3
  %13 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ctl.i, align 8
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %6, i32 0, i32 1, i32 4
  %15 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %15, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %16 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %16, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %6, i32 0, i32 1, i32 3
  %17 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %18 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %19 = ptrtoint ptr %port1.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %port1.i, align 4
  %conv.i = zext i8 %20 to i32
  %call4.i = call i32 @tb_cfg_read(ptr noundef %14, ptr noundef nonnull %phy, i64 noundef %or.i.i, i32 noundef %conv.i, i32 noundef 1, i32 noundef %add, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not = icmp eq i32 %call4.i, 0
  br i1 %tobool.not, label %if.end3, label %tb_port_read.exit.cleanup_crit_edge

tb_port_read.exit.cleanup_crit_edge:              ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end3:                                          ; preds = %tb_port_read.exit
  %21 = ptrtoint ptr %phy to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %phy, align 4
  %and = and i32 %22, -16385
  %masksel = select i1 %enable, i32 0, i32 16384
  %storemerge = or i32 %and, %masksel
  store i32 %storemerge, ptr %phy, align 4
  %23 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %sw.i, align 4
  %is_unplugged.i18 = getelementptr inbounds %struct.tb_switch, ptr %24, i32 0, i32 20
  %25 = ptrtoint ptr %is_unplugged.i18 to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %is_unplugged.i18, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool.not.i19 = icmp eq i8 %26, 0
  br i1 %tobool.not.i19, label %if.end.i31, label %if.end3.cleanup_crit_edge

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i31:                                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  %27 = ptrtoint ptr %cap_phy to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cap_phy, align 4
  %add8 = add i32 %28, 1
  %tb.i20 = getelementptr inbounds %struct.tb_switch, ptr %24, i32 0, i32 5
  %29 = ptrtoint ptr %tb.i20 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %tb.i20, align 8
  %ctl.i21 = getelementptr inbounds %struct.tb, ptr %30, i32 0, i32 3
  %31 = ptrtoint ptr %ctl.i21 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %ctl.i21, align 8
  %route_hi.i.i22 = getelementptr inbounds %struct.tb_switch, ptr %24, i32 0, i32 1, i32 4
  %33 = ptrtoint ptr %route_hi.i.i22 to i32
  call void @__asan_loadN_noabort(i32 %33, i32 8)
  %bf.load.i.i23 = load i64, ptr %route_hi.i.i22, align 4
  %34 = lshr i64 %bf.load.i.i23, 1
  %shl.i.i24 = and i64 %34, 9223372032559808512
  %route_lo.i.i25 = getelementptr inbounds %struct.tb_switch, ptr %24, i32 0, i32 1, i32 3
  %35 = ptrtoint ptr %route_lo.i.i25 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %route_lo.i.i25, align 8
  %conv2.i.i26 = zext i32 %36 to i64
  %or.i.i27 = or i64 %shl.i.i24, %conv2.i.i26
  %37 = ptrtoint ptr %port1.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %port1.i, align 4
  %conv.i29 = zext i8 %38 to i32
  %call4.i30 = call i32 @tb_cfg_write(ptr noundef %32, ptr noundef nonnull %phy, i64 noundef %or.i.i27, i32 noundef %conv.i29, i32 noundef 1, i32 noundef %add8, i32 noundef 1) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end.i31, %if.end3.cleanup_crit_edge, %tb_port_read.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %tb_port_is_null.exit.cleanup_crit_edge, %land.lhs.true.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %tb_port_is_null.exit.cleanup_crit_edge ], [ %call4.i, %tb_port_read.exit.cleanup_crit_edge ], [ %call4.i30, %if.end.i31 ], [ -19, %if.end3.cleanup_crit_edge ], [ -22, %land.lhs.true.i.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ], [ -19, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %phy) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_port_disable(ptr noundef %port) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @__tb_port_enable(ptr noundef %port, i1 noundef zeroext false)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_port_alloc_in_hopid(ptr noundef %port, i32 noundef %min_hopid, i32 noundef %max_hopid) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %max_in_hop_id.i = getelementptr inbounds %struct.tb_regs_port_header, ptr %port, i32 0, i32 4
  %0 = ptrtoint ptr %max_in_hop_id.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %bf.load.i = load i32, ptr %max_in_hop_id.i, align 4
  %tobool.not.i.i = icmp eq ptr %port, null
  br i1 %tobool.not.i.i, label %tb_port_is_nhi.exit.thread.i, label %tb_port_is_nhi.exit.i

tb_port_is_nhi.exit.thread.i:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %1 = tail call i32 @llvm.smax.i32(i32 %min_hopid, i32 8) #16
  br label %tb_port_alloc_hopid.exit

tb_port_is_nhi.exit.i:                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i.i = getelementptr inbounds %struct.tb_regs_port_header, ptr %port, i32 0, i32 2
  %2 = ptrtoint ptr %type.i.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 12)
  %bf.load.i.i = load i96, ptr %type.i.i, align 4
  %3 = and i96 %bf.load.i.i, 18446742974197923840
  %cmp.i.i = icmp eq i96 %3, 2199023255552
  %4 = tail call i32 @llvm.smax.i32(i32 %min_hopid, i32 8) #16
  %spec.select.i = select i1 %cmp.i.i, i32 %min_hopid, i32 %4
  br label %tb_port_alloc_hopid.exit

tb_port_alloc_hopid.exit:                         ; preds = %tb_port_is_nhi.exit.i, %tb_port_is_nhi.exit.thread.i
  %5 = phi i32 [ %1, %tb_port_is_nhi.exit.thread.i ], [ %spec.select.i, %tb_port_is_nhi.exit.i ]
  %in_hopids.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 14
  %bf.lshr.i = lshr i32 %bf.load.i, 21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %max_hopid)
  %cmp6.i = icmp slt i32 %max_hopid, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %bf.lshr.i, i32 %max_hopid)
  %cmp7.i = icmp slt i32 %bf.lshr.i, %max_hopid
  %or.cond.i = select i1 %cmp6.i, i1 true, i1 %cmp7.i
  %max_hopid.addr.0.i = select i1 %or.cond.i, i32 %bf.lshr.i, i32 %max_hopid
  %call10.i = tail call i32 @ida_alloc_range(ptr noundef %in_hopids.i, i32 noundef %5, i32 noundef %max_hopid.addr.0.i, i32 noundef 3264) #16
  ret i32 %call10.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_port_alloc_out_hopid(ptr noundef %port, i32 noundef %min_hopid, i32 noundef %max_hopid) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %max_in_hop_id.i = getelementptr inbounds %struct.tb_regs_port_header, ptr %port, i32 0, i32 4
  %0 = ptrtoint ptr %max_in_hop_id.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %bf.load.i = load i32, ptr %max_in_hop_id.i, align 4
  %tobool.not.i.i = icmp eq ptr %port, null
  br i1 %tobool.not.i.i, label %tb_port_is_nhi.exit.thread.i, label %tb_port_is_nhi.exit.i

tb_port_is_nhi.exit.thread.i:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %1 = tail call i32 @llvm.smax.i32(i32 %min_hopid, i32 8) #16
  br label %tb_port_alloc_hopid.exit

tb_port_is_nhi.exit.i:                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i.i = getelementptr inbounds %struct.tb_regs_port_header, ptr %port, i32 0, i32 2
  %2 = ptrtoint ptr %type.i.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 12)
  %bf.load.i.i = load i96, ptr %type.i.i, align 4
  %3 = and i96 %bf.load.i.i, 18446742974197923840
  %cmp.i.i = icmp eq i96 %3, 2199023255552
  %4 = tail call i32 @llvm.smax.i32(i32 %min_hopid, i32 8) #16
  %spec.select.i = select i1 %cmp.i.i, i32 %min_hopid, i32 %4
  br label %tb_port_alloc_hopid.exit

tb_port_alloc_hopid.exit:                         ; preds = %tb_port_is_nhi.exit.i, %tb_port_is_nhi.exit.thread.i
  %5 = phi i32 [ %1, %tb_port_is_nhi.exit.thread.i ], [ %spec.select.i, %tb_port_is_nhi.exit.i ]
  %out_hopids.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 15
  %bf.lshr3.i = lshr i32 %bf.load.i, 10
  %bf.clear.i = and i32 %bf.lshr3.i, 2047
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %max_hopid)
  %cmp6.i = icmp slt i32 %max_hopid, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %bf.clear.i, i32 %max_hopid)
  %cmp7.i = icmp slt i32 %bf.clear.i, %max_hopid
  %or.cond.i = select i1 %cmp6.i, i1 true, i1 %cmp7.i
  %max_hopid.addr.0.i = select i1 %or.cond.i, i32 %bf.clear.i, i32 %max_hopid
  %call10.i = tail call i32 @ida_alloc_range(ptr noundef %out_hopids.i, i32 noundef %5, i32 noundef %max_hopid.addr.0.i, i32 noundef 3264) #16
  ret i32 %call10.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @tb_port_release_in_hopid(ptr noundef %port, i32 noundef %hopid) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %in_hopids = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 14
  tail call void @ida_free(ptr noundef %in_hopids, i32 noundef %hopid) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @ida_free(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @tb_port_release_out_hopid(ptr noundef %port, i32 noundef %hopid) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %out_hopids = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 15
  tail call void @ida_free(ptr noundef %out_hopids, i32 noundef %hopid) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @tb_next_port_on_path(ptr noundef readnone %start, ptr noundef readonly %end, ptr noundef readonly %prev) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %prev, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %sw = getelementptr inbounds %struct.tb_port, ptr %prev, i32 0, i32 1
  %0 = ptrtoint ptr %sw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %sw, align 4
  %sw1 = getelementptr inbounds %struct.tb_port, ptr %end, i32 0, i32 1
  %2 = ptrtoint ptr %sw1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sw1, align 4
  %cmp = icmp eq ptr %1, %3
  br i1 %cmp, label %if.then2, label %if.end6

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %cmp3 = icmp eq ptr %prev, %end
  %.end = select i1 %cmp3, ptr null, ptr %end
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %depth.i = getelementptr inbounds %struct.tb_switch, ptr %1, i32 0, i32 1, i32 2
  %4 = ptrtoint ptr %depth.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %bf.load.i = load i32, ptr %depth.i, align 4
  %5 = lshr i32 %bf.load.i, 6
  %mul.i = and i32 %5, 56
  %sh_prom.i = zext i32 %mul.i to i64
  %notmask.i = shl nsw i64 -1, %sh_prom.i
  %sub.i = xor i64 %notmask.i, -1
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %1, i32 0, i32 1, i32 4
  %6 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %6, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %7 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %7, 72057589742960640
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %1, i32 0, i32 1, i32 3
  %8 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %9 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %route_hi.i5.i = getelementptr inbounds %struct.tb_switch, ptr %3, i32 0, i32 1, i32 4
  %10 = ptrtoint ptr %route_hi.i5.i to i32
  call void @__asan_loadN_noabort(i32 %10, i32 8)
  %bf.load.i6.i = load i64, ptr %route_hi.i5.i, align 4
  %11 = lshr i64 %bf.load.i6.i, 1
  %shl.i7.i = and i64 %11, 72057589742960640
  %route_lo.i8.i = getelementptr inbounds %struct.tb_switch, ptr %3, i32 0, i32 1, i32 3
  %12 = ptrtoint ptr %route_lo.i8.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %route_lo.i8.i, align 8
  %conv2.i9.i = zext i32 %13 to i64
  %or.i10.i = or i64 %shl.i7.i, %conv2.i9.i
  %14 = xor i64 %or.i10.i, %or.i.i
  %15 = and i64 %14, %sub.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %15)
  %cmp.i = icmp eq i64 %15, 0
  br i1 %cmp.i, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.end6
  %shl.i = and i64 %11, 9223372032559808512
  %or.i = or i64 %shl.i, %conv2.i9.i
  %shr.i = lshr i64 %or.i, %sh_prom.i
  %conv.i = trunc i64 %shr.i to i32
  %conv1.i = and i32 %conv.i, 255
  %bf.lshr4.i = lshr i32 %bf.load.i, 12
  %bf.clear5.i = and i32 %bf.lshr4.i, 63
  call void @__sanitizer_cov_trace_cmp4(i32 %conv1.i, i32 %bf.clear5.i)
  %cmp.i73 = icmp ugt i32 %conv1.i, %bf.clear5.i
  br i1 %cmp.i73, label %do.end.i, label %if.end27.i, !prof !448

do.end.i:                                         ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.103, i32 noundef 538, i32 noundef 9, ptr noundef null) #16
  br label %tb_port_at.exit

if.end27.i:                                       ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #18
  %ports.i = getelementptr inbounds %struct.tb_switch, ptr %1, i32 0, i32 2
  %16 = ptrtoint ptr %ports.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %ports.i, align 4
  %arrayidx.i = getelementptr %struct.tb_port, ptr %17, i32 %conv1.i
  br label %tb_port_at.exit

tb_port_at.exit:                                  ; preds = %if.end27.i, %do.end.i
  %retval.0.i = phi ptr [ null, %do.end.i ], [ %arrayidx.i, %if.end27.i ]
  %remote = getelementptr inbounds %struct.tb_port, ptr %prev, i32 0, i32 2
  %18 = ptrtoint ptr %remote to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %remote, align 4
  %tobool14.not = icmp eq ptr %19, null
  br i1 %tobool14.not, label %tb_port_at.exit.if.end39_crit_edge, label %land.lhs.true

tb_port_at.exit.if.end39_crit_edge:               ; preds = %tb_port_at.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end39

land.lhs.true:                                    ; preds = %tb_port_at.exit
  %cmp15 = icmp eq ptr %retval.0.i, %prev
  br i1 %cmp15, label %land.lhs.true.if.then17_crit_edge, label %lor.lhs.false

land.lhs.true.if.then17_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then17

lor.lhs.false:                                    ; preds = %land.lhs.true
  %dual_link_port = getelementptr inbounds %struct.tb_port, ptr %retval.0.i, i32 0, i32 12
  %20 = ptrtoint ptr %dual_link_port to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %dual_link_port, align 4
  %cmp16 = icmp eq ptr %21, %prev
  br i1 %cmp16, label %lor.lhs.false.if.then17_crit_edge, label %lor.lhs.false.if.end39_crit_edge

lor.lhs.false.if.end39_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end39

lor.lhs.false.if.then17_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then17

if.then17:                                        ; preds = %lor.lhs.false.if.then17_crit_edge, %land.lhs.true.if.then17_crit_edge
  br label %if.end39

if.else:                                          ; preds = %if.end6
  %ports.i.i = getelementptr inbounds %struct.tb_switch, ptr %1, i32 0, i32 2
  %22 = ptrtoint ptr %ports.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ports.i.i, align 4
  %bf.lshr.i.i = lshr i32 %bf.load.i, 18
  %bf.clear.i.i = and i32 %bf.lshr.i.i, 63
  %arrayidx.i.i = getelementptr %struct.tb_port, ptr %23, i32 %bf.clear.i.i
  %cmp.i75 = icmp eq ptr %arrayidx.i.i, %prev
  br i1 %cmp.i75, label %if.else.if.then21_crit_edge, label %tb_is_upstream_port.exit

if.else.if.then21_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then21

tb_is_upstream_port.exit:                         ; preds = %if.else
  %dual_link_port.i = getelementptr inbounds %struct.tb_port, ptr %prev, i32 0, i32 12
  %24 = ptrtoint ptr %dual_link_port.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %dual_link_port.i, align 4
  %cmp1.i = icmp eq ptr %25, %arrayidx.i.i
  br i1 %cmp1.i, label %tb_is_upstream_port.exit.if.then21_crit_edge, label %if.else23

tb_is_upstream_port.exit.if.then21_crit_edge:     ; preds = %tb_is_upstream_port.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then21

if.then21:                                        ; preds = %tb_is_upstream_port.exit.if.then21_crit_edge, %if.else.if.then21_crit_edge
  %remote22 = getelementptr inbounds %struct.tb_port, ptr %prev, i32 0, i32 2
  %26 = ptrtoint ptr %remote22 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %remote22, align 4
  br label %if.end39

if.else23:                                        ; preds = %tb_is_upstream_port.exit
  %dual_link_port26 = getelementptr %struct.tb_port, ptr %23, i32 %bf.clear.i.i, i32 12
  %28 = ptrtoint ptr %dual_link_port26 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %dual_link_port26, align 4
  %tobool27.not = icmp eq ptr %29, null
  br i1 %tobool27.not, label %if.else23.if.end39_crit_edge, label %land.lhs.true28

if.else23.if.end39_crit_edge:                     ; preds = %if.else23
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end39

land.lhs.true28:                                  ; preds = %if.else23
  call void @__sanitizer_cov_trace_pc() #18
  %link_nr = getelementptr %struct.tb_port, ptr %23, i32 %bf.clear.i.i, i32 13
  %30 = ptrtoint ptr %link_nr to i32
  call void @__asan_load1_noabort(i32 %30)
  %bf.load = load i8, ptr %link_nr, align 4
  %link_nr29 = getelementptr inbounds %struct.tb_port, ptr %prev, i32 0, i32 13
  %31 = ptrtoint ptr %link_nr29 to i32
  call void @__asan_load1_noabort(i32 %31)
  %bf.load30 = load i8, ptr %link_nr29, align 4
  %cmp33.not.unshifted = xor i8 %bf.load30, %bf.load
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %cmp33.not.unshifted)
  %cmp33.not79 = icmp slt i8 %cmp33.not.unshifted, 0
  %spec.select = select i1 %cmp33.not79, ptr %29, ptr %arrayidx.i.i
  br label %if.end39

if.end39:                                         ; preds = %land.lhs.true28, %if.else23.if.end39_crit_edge, %if.then21, %if.then17, %lor.lhs.false.if.end39_crit_edge, %tb_port_at.exit.if.end39_crit_edge
  %next.0 = phi ptr [ %19, %if.then17 ], [ %retval.0.i, %lor.lhs.false.if.end39_crit_edge ], [ %retval.0.i, %tb_port_at.exit.if.end39_crit_edge ], [ %27, %if.then21 ], [ %arrayidx.i.i, %if.else23.if.end39_crit_edge ], [ %spec.select, %land.lhs.true28 ]
  %cmp40.not = icmp eq ptr %next.0, %prev
  %spec.select67 = select i1 %cmp40.not, ptr null, ptr %next.0
  br label %cleanup

cleanup:                                          ; preds = %if.end39, %if.then2, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %spec.select67, %if.end39 ], [ %start, %entry.cleanup_crit_edge ], [ %.end, %if.then2 ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_port_get_link_speed(ptr nocapture noundef readonly %port) local_unnamed_addr #0 align 64 {
entry:
  %val = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val) #16
  %0 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %val, align 4, !annotation !447
  %cap_phy = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 4
  %1 = ptrtoint ptr %cap_phy to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %cap_phy, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %sw.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %3 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sw.i, align 4
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 20
  %5 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not.i = icmp eq i8 %6, 0
  br i1 %tobool.not.i, label %tb_port_read.exit, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_port_read.exit:                                ; preds = %if.end
  %add = add i32 %2, 1
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 5
  %7 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ctl.i, align 8
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 1, i32 4
  %11 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %12 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %12, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 1, i32 3
  %13 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %14 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %port3.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %15 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %port3.i, align 4
  %conv.i = zext i8 %16 to i32
  %call4.i = call i32 @tb_cfg_read(ptr noundef %10, ptr noundef nonnull %val, i64 noundef %or.i.i, i32 noundef %conv.i, i32 noundef 1, i32 noundef %add, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool2.not = icmp eq i32 %call4.i, 0
  br i1 %tobool2.not, label %if.end4, label %tb_port_read.exit.cleanup_crit_edge

tb_port_read.exit.cleanup_crit_edge:              ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  %17 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %val, align 4
  %19 = and i32 %18, 983040
  call void @__sanitizer_cov_trace_const_cmp4(i32 262144, i32 %19)
  %cmp = icmp eq i32 %19, 262144
  %cond = select i1 %cmp, i32 20, i32 10
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %tb_port_read.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %cond, %if.end4 ], [ -22, %entry.cleanup_crit_edge ], [ %call4.i, %tb_port_read.exit.cleanup_crit_edge ], [ -19, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_port_get_link_width(ptr nocapture noundef readonly %port) local_unnamed_addr #0 align 64 {
entry:
  %val = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val) #16
  %0 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %val, align 4, !annotation !447
  %cap_phy = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 4
  %1 = ptrtoint ptr %cap_phy to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %cap_phy, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %sw.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %3 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sw.i, align 4
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 20
  %5 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not.i = icmp eq i8 %6, 0
  br i1 %tobool.not.i, label %tb_port_read.exit, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_port_read.exit:                                ; preds = %if.end
  %add = add i32 %2, 1
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 5
  %7 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ctl.i, align 8
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 1, i32 4
  %11 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %12 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %12, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 1, i32 3
  %13 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %14 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %port3.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %15 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %port3.i, align 4
  %conv.i = zext i8 %16 to i32
  %call4.i = call i32 @tb_cfg_read(ptr noundef %10, ptr noundef nonnull %val, i64 noundef %or.i.i, i32 noundef %conv.i, i32 noundef 1, i32 noundef %add, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool2.not = icmp eq i32 %call4.i, 0
  br i1 %tobool2.not, label %if.end4, label %tb_port_read.exit.cleanup_crit_edge

tb_port_read.exit.cleanup_crit_edge:              ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  %17 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %val, align 4
  %and = lshr i32 %18, 20
  %shr = and i32 %and, 63
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %tb_port_read.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %shr, %if.end4 ], [ -22, %entry.cleanup_crit_edge ], [ %call4.i, %tb_port_read.exit.cleanup_crit_edge ], [ -19, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_port_lane_bonding_enable(ptr nocapture noundef %port) local_unnamed_addr #0 align 64 {
entry:
  %val.i27 = alloca i32, align 4
  %val.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i) #16
  %0 = ptrtoint ptr %val.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %val.i, align 4, !annotation !447
  %cap_phy.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 4
  %1 = ptrtoint ptr %cap_phy.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %cap_phy.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %entry.tb_port_get_link_width.exit.thread_crit_edge, label %if.end.i

entry.tb_port_get_link_width.exit.thread_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_get_link_width.exit.thread

if.end.i:                                         ; preds = %entry
  %sw.i.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %3 = ptrtoint ptr %sw.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sw.i.i, align 4
  %is_unplugged.i.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 20
  %5 = ptrtoint ptr %is_unplugged.i.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %is_unplugged.i.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not.i.i = icmp eq i8 %6, 0
  br i1 %tobool.not.i.i, label %tb_port_read.exit.i, label %if.end.i.tb_port_get_link_width.exit.thread_crit_edge

if.end.i.tb_port_get_link_width.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_get_link_width.exit.thread

tb_port_read.exit.i:                              ; preds = %if.end.i
  %add.i = add i32 %2, 1
  %tb.i.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 5
  %7 = ptrtoint ptr %tb.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %tb.i.i, align 8
  %ctl.i.i = getelementptr inbounds %struct.tb, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %ctl.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ctl.i.i, align 8
  %route_hi.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 1, i32 4
  %11 = ptrtoint ptr %route_hi.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 8)
  %bf.load.i.i.i = load i64, ptr %route_hi.i.i.i, align 4
  %12 = lshr i64 %bf.load.i.i.i, 1
  %shl.i.i.i = and i64 %12, 9223372032559808512
  %route_lo.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 1, i32 3
  %13 = ptrtoint ptr %route_lo.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %route_lo.i.i.i, align 8
  %conv2.i.i.i = zext i32 %14 to i64
  %or.i.i.i = or i64 %shl.i.i.i, %conv2.i.i.i
  %port3.i.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %15 = ptrtoint ptr %port3.i.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %port3.i.i, align 4
  %conv.i.i = zext i8 %16 to i32
  %call4.i.i = call i32 @tb_cfg_read(ptr noundef %10, ptr noundef nonnull %val.i, i64 noundef %or.i.i.i, i32 noundef %conv.i.i, i32 noundef 1, i32 noundef %add.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool2.not.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool2.not.i, label %if.end4.i, label %tb_port_read.exit.i.tb_port_get_link_width.exit_crit_edge

tb_port_read.exit.i.tb_port_get_link_width.exit_crit_edge: ; preds = %tb_port_read.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_get_link_width.exit

if.end4.i:                                        ; preds = %tb_port_read.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %17 = ptrtoint ptr %val.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %val.i, align 4
  %and.i = lshr i32 %18, 20
  %shr.i = and i32 %and.i, 63
  br label %tb_port_get_link_width.exit

tb_port_get_link_width.exit.thread:               ; preds = %if.end.i.tb_port_get_link_width.exit.thread_crit_edge, %entry.tb_port_get_link_width.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i) #16
  br label %if.end3

tb_port_get_link_width.exit:                      ; preds = %if.end4.i, %tb_port_read.exit.i.tb_port_get_link_width.exit_crit_edge
  %retval.0.i = phi i32 [ %shr.i, %if.end4.i ], [ %call4.i.i, %tb_port_read.exit.i.tb_port_get_link_width.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %retval.0.i)
  %cmp = icmp eq i32 %retval.0.i, 1
  br i1 %cmp, label %if.then, label %tb_port_get_link_width.exit.if.end3_crit_edge

tb_port_get_link_width.exit.if.end3_crit_edge:    ; preds = %tb_port_get_link_width.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end3

if.then:                                          ; preds = %tb_port_get_link_width.exit
  %call1 = call fastcc i32 @tb_port_set_link_width(ptr noundef %port, i32 noundef 2)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.then.if.end3_crit_edge, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.if.end3_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end3

if.end3:                                          ; preds = %if.then.if.end3_crit_edge, %tb_port_get_link_width.exit.if.end3_crit_edge, %tb_port_get_link_width.exit.thread
  %dual_link_port = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 12
  %19 = ptrtoint ptr %dual_link_port to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %dual_link_port, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i27) #16
  %21 = ptrtoint ptr %val.i27 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 -1, ptr %val.i27, align 4, !annotation !447
  %cap_phy.i28 = getelementptr inbounds %struct.tb_port, ptr %20, i32 0, i32 4
  %22 = ptrtoint ptr %cap_phy.i28 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %cap_phy.i28, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool.not.i29 = icmp eq i32 %23, 0
  br i1 %tobool.not.i29, label %if.end3.tb_port_get_link_width.exit52.thread_crit_edge, label %if.end.i33

if.end3.tb_port_get_link_width.exit52.thread_crit_edge: ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_get_link_width.exit52.thread

if.end.i33:                                       ; preds = %if.end3
  %sw.i.i30 = getelementptr inbounds %struct.tb_port, ptr %20, i32 0, i32 1
  %24 = ptrtoint ptr %sw.i.i30 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %sw.i.i30, align 4
  %is_unplugged.i.i31 = getelementptr inbounds %struct.tb_switch, ptr %25, i32 0, i32 20
  %26 = ptrtoint ptr %is_unplugged.i.i31 to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %is_unplugged.i.i31, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %27)
  %tobool.not.i.i32 = icmp eq i8 %27, 0
  br i1 %tobool.not.i.i32, label %tb_port_read.exit.i47, label %if.end.i33.tb_port_get_link_width.exit52.thread_crit_edge

if.end.i33.tb_port_get_link_width.exit52.thread_crit_edge: ; preds = %if.end.i33
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_get_link_width.exit52.thread

tb_port_read.exit.i47:                            ; preds = %if.end.i33
  %add.i34 = add i32 %23, 1
  %tb.i.i35 = getelementptr inbounds %struct.tb_switch, ptr %25, i32 0, i32 5
  %28 = ptrtoint ptr %tb.i.i35 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %tb.i.i35, align 8
  %ctl.i.i36 = getelementptr inbounds %struct.tb, ptr %29, i32 0, i32 3
  %30 = ptrtoint ptr %ctl.i.i36 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %ctl.i.i36, align 8
  %route_hi.i.i.i37 = getelementptr inbounds %struct.tb_switch, ptr %25, i32 0, i32 1, i32 4
  %32 = ptrtoint ptr %route_hi.i.i.i37 to i32
  call void @__asan_loadN_noabort(i32 %32, i32 8)
  %bf.load.i.i.i38 = load i64, ptr %route_hi.i.i.i37, align 4
  %33 = lshr i64 %bf.load.i.i.i38, 1
  %shl.i.i.i39 = and i64 %33, 9223372032559808512
  %route_lo.i.i.i40 = getelementptr inbounds %struct.tb_switch, ptr %25, i32 0, i32 1, i32 3
  %34 = ptrtoint ptr %route_lo.i.i.i40 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %route_lo.i.i.i40, align 8
  %conv2.i.i.i41 = zext i32 %35 to i64
  %or.i.i.i42 = or i64 %shl.i.i.i39, %conv2.i.i.i41
  %port3.i.i43 = getelementptr inbounds %struct.tb_port, ptr %20, i32 0, i32 9
  %36 = ptrtoint ptr %port3.i.i43 to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %port3.i.i43, align 4
  %conv.i.i44 = zext i8 %37 to i32
  %call4.i.i45 = call i32 @tb_cfg_read(ptr noundef %31, ptr noundef nonnull %val.i27, i64 noundef %or.i.i.i42, i32 noundef %conv.i.i44, i32 noundef 1, i32 noundef %add.i34, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i45)
  %tobool2.not.i46 = icmp eq i32 %call4.i.i45, 0
  br i1 %tobool2.not.i46, label %if.end4.i50, label %tb_port_read.exit.i47.tb_port_get_link_width.exit52_crit_edge

tb_port_read.exit.i47.tb_port_get_link_width.exit52_crit_edge: ; preds = %tb_port_read.exit.i47
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_get_link_width.exit52

if.end4.i50:                                      ; preds = %tb_port_read.exit.i47
  call void @__sanitizer_cov_trace_pc() #18
  %38 = ptrtoint ptr %val.i27 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %val.i27, align 4
  %and.i48 = lshr i32 %39, 20
  %shr.i49 = and i32 %and.i48, 63
  br label %tb_port_get_link_width.exit52

tb_port_get_link_width.exit52.thread:             ; preds = %if.end.i33.tb_port_get_link_width.exit52.thread_crit_edge, %if.end3.tb_port_get_link_width.exit52.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i27) #16
  br label %if.end13

tb_port_get_link_width.exit52:                    ; preds = %if.end4.i50, %tb_port_read.exit.i47.tb_port_get_link_width.exit52_crit_edge
  %retval.0.i51 = phi i32 [ %shr.i49, %if.end4.i50 ], [ %call4.i.i45, %tb_port_read.exit.i47.tb_port_get_link_width.exit52_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i27) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %retval.0.i51)
  %cmp5 = icmp eq i32 %retval.0.i51, 1
  br i1 %cmp5, label %if.then6, label %tb_port_get_link_width.exit52.if.end13_crit_edge

tb_port_get_link_width.exit52.if.end13_crit_edge: ; preds = %tb_port_get_link_width.exit52
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

if.then6:                                         ; preds = %tb_port_get_link_width.exit52
  %40 = ptrtoint ptr %dual_link_port to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %dual_link_port, align 4
  %call8 = call fastcc i32 @tb_port_set_link_width(ptr noundef %41, i32 noundef 2)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %if.then6.if.end13_crit_edge, label %if.then10

if.then6.if.end13_crit_edge:                      ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

if.then10:                                        ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #18
  %call11 = call fastcc i32 @tb_port_set_link_width(ptr noundef %port, i32 noundef 1)
  br label %cleanup

if.end13:                                         ; preds = %if.then6.if.end13_crit_edge, %tb_port_get_link_width.exit52.if.end13_crit_edge, %tb_port_get_link_width.exit52.thread
  %bonded = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 11
  %42 = ptrtoint ptr %bonded to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 1, ptr %bonded, align 2
  %43 = ptrtoint ptr %dual_link_port to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %dual_link_port, align 4
  %bonded15 = getelementptr inbounds %struct.tb_port, ptr %44, i32 0, i32 11
  %45 = ptrtoint ptr %bonded15 to i32
  call void @__asan_store1_noabort(i32 %45)
  store i8 1, ptr %bonded15, align 2
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.then10, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call8, %if.then10 ], [ 0, %if.end13 ], [ %call1, %if.then.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @tb_port_set_link_width(ptr nocapture noundef readonly %port, i32 noundef %width) unnamed_addr #0 align 64 {
entry:
  %val = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val) #16
  %0 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %val, align 4, !annotation !447
  %cap_phy = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 4
  %1 = ptrtoint ptr %cap_phy to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %cap_phy, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %sw.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %3 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sw.i, align 4
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 20
  %5 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not.i = icmp eq i8 %6, 0
  br i1 %tobool.not.i, label %tb_port_read.exit, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_port_read.exit:                                ; preds = %if.end
  %add = add i32 %2, 1
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 5
  %7 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ctl.i, align 8
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 1, i32 4
  %11 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %12 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %12, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 1, i32 3
  %13 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %14 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %port3.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %15 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %port3.i, align 4
  %conv.i = zext i8 %16 to i32
  %call4.i = call i32 @tb_cfg_read(ptr noundef %10, ptr noundef nonnull %val, i64 noundef %or.i.i, i32 noundef %conv.i, i32 noundef 1, i32 noundef %add, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool2.not = icmp eq i32 %call4.i, 0
  br i1 %tobool2.not, label %if.end4, label %tb_port_read.exit.cleanup_crit_edge

tb_port_read.exit.cleanup_crit_edge:              ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %tb_port_read.exit
  %17 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %val, align 4
  %and = and i32 %18, -33777
  %19 = zext i32 %width to i64
  call void @__sanitizer_cov_trace_switch(i64 %19, ptr @__sancov_gen_cov_switch_values.199)
  switch i32 %width, label %if.end4.cleanup_crit_edge [
    i32 1, label %if.end4.sw.epilog_crit_edge
    i32 2, label %sw.bb5
  ]

if.end4.sw.epilog_crit_edge:                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb5:                                           ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb5, %if.end4.sw.epilog_crit_edge
  %.sink = phi i32 [ 48, %sw.bb5 ], [ 16, %if.end4.sw.epilog_crit_edge ]
  %or6 = or i32 %and, %.sink
  %or7 = or i32 %or6, 32768
  %20 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %or7, ptr %val, align 4
  %21 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %sw.i, align 4
  %is_unplugged.i18 = getelementptr inbounds %struct.tb_switch, ptr %22, i32 0, i32 20
  %23 = ptrtoint ptr %is_unplugged.i18 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %is_unplugged.i18, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %24)
  %tobool.not.i19 = icmp eq i8 %24, 0
  br i1 %tobool.not.i19, label %if.end.i31, label %sw.epilog.cleanup_crit_edge

sw.epilog.cleanup_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i31:                                       ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  %25 = ptrtoint ptr %cap_phy to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %cap_phy, align 4
  %add9 = add i32 %26, 1
  %tb.i20 = getelementptr inbounds %struct.tb_switch, ptr %22, i32 0, i32 5
  %27 = ptrtoint ptr %tb.i20 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %tb.i20, align 8
  %ctl.i21 = getelementptr inbounds %struct.tb, ptr %28, i32 0, i32 3
  %29 = ptrtoint ptr %ctl.i21 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %ctl.i21, align 8
  %route_hi.i.i22 = getelementptr inbounds %struct.tb_switch, ptr %22, i32 0, i32 1, i32 4
  %31 = ptrtoint ptr %route_hi.i.i22 to i32
  call void @__asan_loadN_noabort(i32 %31, i32 8)
  %bf.load.i.i23 = load i64, ptr %route_hi.i.i22, align 4
  %32 = lshr i64 %bf.load.i.i23, 1
  %shl.i.i24 = and i64 %32, 9223372032559808512
  %route_lo.i.i25 = getelementptr inbounds %struct.tb_switch, ptr %22, i32 0, i32 1, i32 3
  %33 = ptrtoint ptr %route_lo.i.i25 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %route_lo.i.i25, align 8
  %conv2.i.i26 = zext i32 %34 to i64
  %or.i.i27 = or i64 %shl.i.i24, %conv2.i.i26
  %35 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %port3.i, align 4
  %conv.i29 = zext i8 %36 to i32
  %call4.i30 = call i32 @tb_cfg_write(ptr noundef %30, ptr noundef nonnull %val, i64 noundef %or.i.i27, i32 noundef %conv.i29, i32 noundef 1, i32 noundef %add9, i32 noundef 1) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end.i31, %sw.epilog.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %tb_port_read.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ %call4.i, %tb_port_read.exit.cleanup_crit_edge ], [ -22, %if.end4.cleanup_crit_edge ], [ %call4.i30, %if.end.i31 ], [ -19, %sw.epilog.cleanup_crit_edge ], [ -19, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @tb_port_lane_bonding_disable(ptr nocapture noundef %port) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %dual_link_port = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 12
  %0 = ptrtoint ptr %dual_link_port to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dual_link_port, align 4
  %bonded = getelementptr inbounds %struct.tb_port, ptr %1, i32 0, i32 11
  %2 = ptrtoint ptr %bonded to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 0, ptr %bonded, align 2
  %bonded1 = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 11
  %3 = ptrtoint ptr %bonded1 to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 0, ptr %bonded1, align 2
  %4 = load ptr, ptr %dual_link_port, align 4
  %call = tail call fastcc i32 @tb_port_set_link_width(ptr noundef %4, i32 noundef 1)
  %call3 = tail call fastcc i32 @tb_port_set_link_width(ptr noundef %port, i32 noundef 1)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_port_wait_for_link_width(ptr nocapture noundef readonly %port, i32 noundef %width, i32 noundef %timeout_msec) local_unnamed_addr #0 align 64 {
entry:
  %val.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i64 @ktime_get() #16
  %conv = sext i32 %timeout_msec to i64
  %mul.i = mul nsw i64 %conv, 1000000
  %add.i = add i64 %call, %mul.i
  %cap_phy.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 4
  %sw.i.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %port3.i.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  br label %do.body

do.body:                                          ; preds = %if.end7.do.body_crit_edge, %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i) #16
  %0 = ptrtoint ptr %val.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %val.i, align 4, !annotation !447
  %1 = ptrtoint ptr %cap_phy.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %cap_phy.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %do.body.tb_port_get_link_width.exit.thread_crit_edge, label %if.end.i

do.body.tb_port_get_link_width.exit.thread_crit_edge: ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_get_link_width.exit.thread

if.end.i:                                         ; preds = %do.body
  %3 = ptrtoint ptr %sw.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sw.i.i, align 4
  %is_unplugged.i.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 20
  %5 = ptrtoint ptr %is_unplugged.i.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %is_unplugged.i.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not.i.i = icmp eq i8 %6, 0
  br i1 %tobool.not.i.i, label %tb_port_read.exit.i, label %if.end.i.tb_port_get_link_width.exit.thread_crit_edge

if.end.i.tb_port_get_link_width.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_get_link_width.exit.thread

tb_port_read.exit.i:                              ; preds = %if.end.i
  %add.i13 = add i32 %2, 1
  %tb.i.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 5
  %7 = ptrtoint ptr %tb.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %tb.i.i, align 8
  %ctl.i.i = getelementptr inbounds %struct.tb, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %ctl.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ctl.i.i, align 8
  %route_hi.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 1, i32 4
  %11 = ptrtoint ptr %route_hi.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 8)
  %bf.load.i.i.i = load i64, ptr %route_hi.i.i.i, align 4
  %12 = lshr i64 %bf.load.i.i.i, 1
  %shl.i.i.i = and i64 %12, 9223372032559808512
  %route_lo.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 1, i32 3
  %13 = ptrtoint ptr %route_lo.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %route_lo.i.i.i, align 8
  %conv2.i.i.i = zext i32 %14 to i64
  %or.i.i.i = or i64 %shl.i.i.i, %conv2.i.i.i
  %15 = ptrtoint ptr %port3.i.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %port3.i.i, align 4
  %conv.i.i = zext i8 %16 to i32
  %call4.i.i = call i32 @tb_cfg_read(ptr noundef %10, ptr noundef nonnull %val.i, i64 noundef %or.i.i.i, i32 noundef %conv.i.i, i32 noundef 1, i32 noundef %add.i13, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool2.not.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool2.not.i, label %tb_port_get_link_width.exit.thread16, label %tb_port_get_link_width.exit

tb_port_get_link_width.exit.thread16:             ; preds = %tb_port_read.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %17 = ptrtoint ptr %val.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %val.i, align 4
  %and.i = lshr i32 %18, 20
  %shr.i = and i32 %and.i, 63
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i) #16
  br label %if.else

tb_port_get_link_width.exit.thread:               ; preds = %if.end.i.tb_port_get_link_width.exit.thread_crit_edge, %do.body.tb_port_get_link_width.exit.thread_crit_edge
  %retval.0.i.ph = phi i32 [ -19, %if.end.i.tb_port_get_link_width.exit.thread_crit_edge ], [ -22, %do.body.tb_port_get_link_width.exit.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i) #16
  br label %cleanup

tb_port_get_link_width.exit:                      ; preds = %tb_port_read.exit.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %cmp = icmp slt i32 %call4.i.i, 0
  br i1 %cmp, label %tb_port_get_link_width.exit.cleanup_crit_edge, label %tb_port_get_link_width.exit.if.else_crit_edge

tb_port_get_link_width.exit.if.else_crit_edge:    ; preds = %tb_port_get_link_width.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

tb_port_get_link_width.exit.cleanup_crit_edge:    ; preds = %tb_port_get_link_width.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.else:                                          ; preds = %tb_port_get_link_width.exit.if.else_crit_edge, %tb_port_get_link_width.exit.thread16
  %retval.0.i19 = phi i32 [ %shr.i, %tb_port_get_link_width.exit.thread16 ], [ %call4.i.i, %tb_port_get_link_width.exit.if.else_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i19, i32 %width)
  %cmp4 = icmp eq i32 %retval.0.i19, %width
  br i1 %cmp4, label %if.else.cleanup_crit_edge, label %if.end7

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end7:                                          ; preds = %if.else
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #16
  %call8 = call i64 @ktime_get() #16
  %cmp.i.i = icmp slt i64 %call8, %add.i
  br i1 %cmp.i.i, label %if.end7.do.body_crit_edge, label %if.end7.cleanup_crit_edge

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end7.do.body_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body

cleanup:                                          ; preds = %if.end7.cleanup_crit_edge, %if.else.cleanup_crit_edge, %tb_port_get_link_width.exit.cleanup_crit_edge, %tb_port_get_link_width.exit.thread
  %retval.0 = phi i32 [ %retval.0.i.ph, %tb_port_get_link_width.exit.thread ], [ -110, %if.end7.cleanup_crit_edge ], [ 0, %if.else.cleanup_crit_edge ], [ %call4.i.i, %tb_port_get_link_width.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_port_update_credits(ptr nocapture noundef %port) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @tb_port_do_update_credits(ptr noundef %port)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %dual_link_port = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 12
  %0 = ptrtoint ptr %dual_link_port to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dual_link_port, align 4
  %call1 = tail call fastcc i32 @tb_port_do_update_credits(ptr noundef %1)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @tb_port_do_update_credits(ptr nocapture noundef %port) unnamed_addr #0 align 64 {
entry:
  %nfc_credits = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nfc_credits) #16
  %0 = ptrtoint ptr %nfc_credits to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %nfc_credits, align 4, !annotation !447
  %sw.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %1 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %sw.i, align 4
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 20
  %3 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not.i = icmp eq i8 %4, 0
  br i1 %tobool.not.i, label %tb_port_read.exit, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_port_read.exit:                                ; preds = %entry
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 5
  %5 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ctl.i, align 8
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 1, i32 4
  %9 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %9, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %10 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %10, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 1, i32 3
  %11 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %12 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %port3.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %13 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %port3.i, align 4
  %conv.i = zext i8 %14 to i32
  %call4.i = call i32 @tb_cfg_read(ptr noundef %8, ptr noundef nonnull %nfc_credits, i64 noundef %or.i.i, i32 noundef %conv.i, i32 noundef 1, i32 noundef 4, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not = icmp eq i32 %call4.i, 0
  br i1 %tobool.not, label %if.end, label %tb_port_read.exit.cleanup_crit_edge

tb_port_read.exit.cleanup_crit_edge:              ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %tb_port_read.exit
  %15 = ptrtoint ptr %nfc_credits to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %nfc_credits, align 4
  %nfc_credits1 = getelementptr inbounds %struct.tb_regs_port_header, ptr %port, i32 0, i32 3
  %17 = ptrtoint ptr %nfc_credits1 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %nfc_credits1, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %18)
  %cmp.not = icmp eq i32 %16, %18
  br i1 %cmp.not, label %if.end.cleanup_crit_edge, label %if.then2

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then2:                                         ; preds = %if.end
  %and = lshr i32 %16, 20
  %shr = and i32 %and, 1023
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_port_do_update_credits.__UNIQUE_ID_ddebug254, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_port_do_update_credits, %if.then8)) #16
          to label %do.end [label %if.then8], !srcloc !446

if.then8:                                         ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #18
  %19 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %sw.i, align 4
  %tb = getelementptr inbounds %struct.tb_switch, ptr %20, i32 0, i32 5
  %21 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %tb, align 8
  %nhi = getelementptr inbounds %struct.tb, ptr %22, i32 0, i32 2
  %23 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %26, i32 0, i32 44
  %route_hi.i = getelementptr inbounds %struct.tb_switch, ptr %20, i32 0, i32 1, i32 4
  %27 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %27, i32 8)
  %bf.load.i = load i64, ptr %route_hi.i, align 4
  %28 = lshr i64 %bf.load.i, 1
  %shl.i = and i64 %28, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %20, i32 0, i32 1, i32 3
  %29 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %30 to i64
  %or.i = or i64 %shl.i, %conv2.i
  %31 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %port3.i, align 4
  %conv = zext i8 %32 to i32
  %total_credits = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 17
  %33 = ptrtoint ptr %total_credits to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %total_credits, align 4
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_port_do_update_credits.__UNIQUE_ID_ddebug254, ptr noundef %dev, ptr noundef nonnull @.str.105, i64 noundef %or.i, i32 noundef %conv, i32 noundef %34, i32 noundef %shr) #16
  br label %do.end

do.end:                                           ; preds = %if.then8, %if.then2
  %35 = ptrtoint ptr %nfc_credits to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %nfc_credits, align 4
  %37 = ptrtoint ptr %nfc_credits1 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %nfc_credits1, align 4
  %total_credits17 = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 17
  %38 = ptrtoint ptr %total_credits17 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %shr, ptr %total_credits17, align 4
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end.cleanup_crit_edge, %tb_port_read.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4.i, %tb_port_read.exit.cleanup_crit_edge ], [ 0, %do.end ], [ 0, %if.end.cleanup_crit_edge ], [ -19, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nfc_credits) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @tb_port_is_enabled(ptr nocapture noundef readonly %port) local_unnamed_addr #0 align 64 {
entry:
  %data.i29 = alloca i32, align 4
  %data.i8 = alloca [2 x i32], align 4
  %data.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type = getelementptr inbounds %struct.tb_regs_port_header, ptr %port, i32 0, i32 2
  %0 = ptrtoint ptr %type to i32
  call void @__asan_loadN_noabort(i32 %0, i32 12)
  %bf.load = load i96, ptr %type, align 4
  %bf.lshr = lshr i96 %bf.load, 40
  %1 = trunc i96 %bf.lshr to i32
  %bf.cast = and i32 %1, 16777215
  %2 = zext i32 %bf.cast to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.200)
  switch i32 %bf.cast, label %entry.return_crit_edge [
    i32 1048834, label %entry.sw.bb_crit_edge
    i32 1048833, label %entry.sw.bb_crit_edge50
    i32 917761, label %entry.sw.bb1_crit_edge
    i32 917762, label %entry.sw.bb1_crit_edge51
    i32 2097410, label %entry.sw.bb3_crit_edge
    i32 2097409, label %entry.sw.bb3_crit_edge52
  ]

entry.sw.bb3_crit_edge52:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3

entry.sw.bb3_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb3

entry.sw.bb1_crit_edge51:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1

entry.sw.bb1_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1

entry.sw.bb_crit_edge50:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

entry.sw.bb_crit_edge:                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

sw.bb:                                            ; preds = %entry.sw.bb_crit_edge, %entry.sw.bb_crit_edge50
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %data.i) #16
  %3 = ptrtoint ptr %data.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %data.i, align 4, !annotation !447
  %sw.i.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %4 = ptrtoint ptr %sw.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sw.i.i, align 4
  %is_unplugged.i.i = getelementptr inbounds %struct.tb_switch, ptr %5, i32 0, i32 20
  %6 = ptrtoint ptr %is_unplugged.i.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %is_unplugged.i.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not.i.i = icmp eq i8 %7, 0
  br i1 %tobool.not.i.i, label %tb_port_read.exit.i, label %sw.bb.tb_pci_port_is_enabled.exit_crit_edge

sw.bb.tb_pci_port_is_enabled.exit_crit_edge:      ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_pci_port_is_enabled.exit

tb_port_read.exit.i:                              ; preds = %sw.bb
  %cap_adap.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 6
  %8 = ptrtoint ptr %cap_adap.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cap_adap.i, align 4
  %tb.i.i = getelementptr inbounds %struct.tb_switch, ptr %5, i32 0, i32 5
  %10 = ptrtoint ptr %tb.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %tb.i.i, align 8
  %ctl.i.i = getelementptr inbounds %struct.tb, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %ctl.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ctl.i.i, align 8
  %route_hi.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %5, i32 0, i32 1, i32 4
  %14 = ptrtoint ptr %route_hi.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 8)
  %bf.load.i.i.i = load i64, ptr %route_hi.i.i.i, align 4
  %15 = lshr i64 %bf.load.i.i.i, 1
  %shl.i.i.i = and i64 %15, 9223372032559808512
  %route_lo.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %5, i32 0, i32 1, i32 3
  %16 = ptrtoint ptr %route_lo.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %route_lo.i.i.i, align 8
  %conv2.i.i.i = zext i32 %17 to i64
  %or.i.i.i = or i64 %shl.i.i.i, %conv2.i.i.i
  %port3.i.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %18 = ptrtoint ptr %port3.i.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %port3.i.i, align 4
  %conv.i.i = zext i8 %19 to i32
  %call4.i.i = call i32 @tb_cfg_read(ptr noundef %13, ptr noundef nonnull %data.i, i64 noundef %or.i.i.i, i32 noundef %conv.i.i, i32 noundef 1, i32 noundef %9, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool.not.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %tb_port_read.exit.i.tb_pci_port_is_enabled.exit_crit_edge

tb_port_read.exit.i.tb_pci_port_is_enabled.exit_crit_edge: ; preds = %tb_port_read.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_pci_port_is_enabled.exit

if.end.i:                                         ; preds = %tb_port_read.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %20 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %data.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool1.i = icmp slt i32 %21, 0
  br label %tb_pci_port_is_enabled.exit

tb_pci_port_is_enabled.exit:                      ; preds = %if.end.i, %tb_port_read.exit.i.tb_pci_port_is_enabled.exit_crit_edge, %sw.bb.tb_pci_port_is_enabled.exit_crit_edge
  %retval.0.i = phi i1 [ %tobool1.i, %if.end.i ], [ false, %tb_port_read.exit.i.tb_pci_port_is_enabled.exit_crit_edge ], [ false, %sw.bb.tb_pci_port_is_enabled.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %data.i) #16
  br label %return

sw.bb1:                                           ; preds = %entry.sw.bb1_crit_edge, %entry.sw.bb1_crit_edge51
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %data.i8) #16
  %22 = ptrtoint ptr %data.i8 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 -1, ptr %data.i8, align 4, !annotation !447
  %23 = getelementptr inbounds [2 x i32], ptr %data.i8, i32 0, i32 1
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 -1, ptr %23, align 4, !annotation !447
  %sw.i.i9 = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %25 = ptrtoint ptr %sw.i.i9 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %sw.i.i9, align 4
  %is_unplugged.i.i10 = getelementptr inbounds %struct.tb_switch, ptr %26, i32 0, i32 20
  %27 = ptrtoint ptr %is_unplugged.i.i10 to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %is_unplugged.i.i10, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %28)
  %tobool.not.i.i11 = icmp eq i8 %28, 0
  br i1 %tobool.not.i.i11, label %tb_port_read.exit.i25, label %sw.bb1.tb_dp_port_is_enabled.exit_crit_edge

sw.bb1.tb_dp_port_is_enabled.exit_crit_edge:      ; preds = %sw.bb1
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_dp_port_is_enabled.exit

tb_port_read.exit.i25:                            ; preds = %sw.bb1
  %cap_adap.i12 = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 6
  %29 = ptrtoint ptr %cap_adap.i12 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %cap_adap.i12, align 4
  %tb.i.i13 = getelementptr inbounds %struct.tb_switch, ptr %26, i32 0, i32 5
  %31 = ptrtoint ptr %tb.i.i13 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %tb.i.i13, align 8
  %ctl.i.i14 = getelementptr inbounds %struct.tb, ptr %32, i32 0, i32 3
  %33 = ptrtoint ptr %ctl.i.i14 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %ctl.i.i14, align 8
  %route_hi.i.i.i15 = getelementptr inbounds %struct.tb_switch, ptr %26, i32 0, i32 1, i32 4
  %35 = ptrtoint ptr %route_hi.i.i.i15 to i32
  call void @__asan_loadN_noabort(i32 %35, i32 8)
  %bf.load.i.i.i16 = load i64, ptr %route_hi.i.i.i15, align 4
  %36 = lshr i64 %bf.load.i.i.i16, 1
  %shl.i.i.i17 = and i64 %36, 9223372032559808512
  %route_lo.i.i.i18 = getelementptr inbounds %struct.tb_switch, ptr %26, i32 0, i32 1, i32 3
  %37 = ptrtoint ptr %route_lo.i.i.i18 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %route_lo.i.i.i18, align 8
  %conv2.i.i.i19 = zext i32 %38 to i64
  %or.i.i.i20 = or i64 %shl.i.i.i17, %conv2.i.i.i19
  %port3.i.i21 = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %39 = ptrtoint ptr %port3.i.i21 to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %port3.i.i21, align 4
  %conv.i.i22 = zext i8 %40 to i32
  %call4.i.i23 = call i32 @tb_cfg_read(ptr noundef %34, ptr noundef nonnull %data.i8, i64 noundef %or.i.i.i20, i32 noundef %conv.i.i22, i32 noundef 1, i32 noundef %30, i32 noundef 2) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i23)
  %tobool.not.i24 = icmp eq i32 %call4.i.i23, 0
  br i1 %tobool.not.i24, label %if.end.i27, label %tb_port_read.exit.i25.tb_dp_port_is_enabled.exit_crit_edge

tb_port_read.exit.i25.tb_dp_port_is_enabled.exit_crit_edge: ; preds = %tb_port_read.exit.i25
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_dp_port_is_enabled.exit

if.end.i27:                                       ; preds = %tb_port_read.exit.i25
  call void @__sanitizer_cov_trace_pc() #18
  %41 = ptrtoint ptr %data.i8 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %data.i8, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741823, i32 %42)
  %tobool1.i26 = icmp ugt i32 %42, 1073741823
  br label %tb_dp_port_is_enabled.exit

tb_dp_port_is_enabled.exit:                       ; preds = %if.end.i27, %tb_port_read.exit.i25.tb_dp_port_is_enabled.exit_crit_edge, %sw.bb1.tb_dp_port_is_enabled.exit_crit_edge
  %retval.0.i28 = phi i1 [ %tobool1.i26, %if.end.i27 ], [ false, %tb_port_read.exit.i25.tb_dp_port_is_enabled.exit_crit_edge ], [ false, %sw.bb1.tb_dp_port_is_enabled.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %data.i8) #16
  br label %return

sw.bb3:                                           ; preds = %entry.sw.bb3_crit_edge, %entry.sw.bb3_crit_edge52
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %data.i29) #16
  %43 = ptrtoint ptr %data.i29 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 -1, ptr %data.i29, align 4, !annotation !447
  %sw.i.i30 = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %44 = ptrtoint ptr %sw.i.i30 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %sw.i.i30, align 4
  %is_unplugged.i.i31 = getelementptr inbounds %struct.tb_switch, ptr %45, i32 0, i32 20
  %46 = ptrtoint ptr %is_unplugged.i.i31 to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %is_unplugged.i.i31, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %47)
  %tobool.not.i.i32 = icmp eq i8 %47, 0
  br i1 %tobool.not.i.i32, label %tb_port_read.exit.i46, label %sw.bb3.tb_usb3_port_is_enabled.exit_crit_edge

sw.bb3.tb_usb3_port_is_enabled.exit_crit_edge:    ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_usb3_port_is_enabled.exit

tb_port_read.exit.i46:                            ; preds = %sw.bb3
  %cap_adap.i33 = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 6
  %48 = ptrtoint ptr %cap_adap.i33 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %cap_adap.i33, align 4
  %tb.i.i34 = getelementptr inbounds %struct.tb_switch, ptr %45, i32 0, i32 5
  %50 = ptrtoint ptr %tb.i.i34 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %tb.i.i34, align 8
  %ctl.i.i35 = getelementptr inbounds %struct.tb, ptr %51, i32 0, i32 3
  %52 = ptrtoint ptr %ctl.i.i35 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %ctl.i.i35, align 8
  %route_hi.i.i.i36 = getelementptr inbounds %struct.tb_switch, ptr %45, i32 0, i32 1, i32 4
  %54 = ptrtoint ptr %route_hi.i.i.i36 to i32
  call void @__asan_loadN_noabort(i32 %54, i32 8)
  %bf.load.i.i.i37 = load i64, ptr %route_hi.i.i.i36, align 4
  %55 = lshr i64 %bf.load.i.i.i37, 1
  %shl.i.i.i38 = and i64 %55, 9223372032559808512
  %route_lo.i.i.i39 = getelementptr inbounds %struct.tb_switch, ptr %45, i32 0, i32 1, i32 3
  %56 = ptrtoint ptr %route_lo.i.i.i39 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %route_lo.i.i.i39, align 8
  %conv2.i.i.i40 = zext i32 %57 to i64
  %or.i.i.i41 = or i64 %shl.i.i.i38, %conv2.i.i.i40
  %port3.i.i42 = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %58 = ptrtoint ptr %port3.i.i42 to i32
  call void @__asan_load1_noabort(i32 %58)
  %59 = load i8, ptr %port3.i.i42, align 4
  %conv.i.i43 = zext i8 %59 to i32
  %call4.i.i44 = call i32 @tb_cfg_read(ptr noundef %53, ptr noundef nonnull %data.i29, i64 noundef %or.i.i.i41, i32 noundef %conv.i.i43, i32 noundef 1, i32 noundef %49, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i44)
  %tobool.not.i45 = icmp eq i32 %call4.i.i44, 0
  br i1 %tobool.not.i45, label %if.end.i48, label %tb_port_read.exit.i46.tb_usb3_port_is_enabled.exit_crit_edge

tb_port_read.exit.i46.tb_usb3_port_is_enabled.exit_crit_edge: ; preds = %tb_port_read.exit.i46
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_usb3_port_is_enabled.exit

if.end.i48:                                       ; preds = %tb_port_read.exit.i46
  call void @__sanitizer_cov_trace_pc() #18
  %60 = ptrtoint ptr %data.i29 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %data.i29, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %61)
  %tobool1.i47 = icmp slt i32 %61, 0
  br label %tb_usb3_port_is_enabled.exit

tb_usb3_port_is_enabled.exit:                     ; preds = %if.end.i48, %tb_port_read.exit.i46.tb_usb3_port_is_enabled.exit_crit_edge, %sw.bb3.tb_usb3_port_is_enabled.exit_crit_edge
  %retval.0.i49 = phi i1 [ %tobool1.i47, %if.end.i48 ], [ false, %tb_port_read.exit.i46.tb_usb3_port_is_enabled.exit_crit_edge ], [ false, %sw.bb3.tb_usb3_port_is_enabled.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %data.i29) #16
  br label %return

return:                                           ; preds = %tb_usb3_port_is_enabled.exit, %tb_dp_port_is_enabled.exit, %tb_pci_port_is_enabled.exit, %entry.return_crit_edge
  %retval.0 = phi i1 [ %retval.0.i49, %tb_usb3_port_is_enabled.exit ], [ %retval.0.i28, %tb_dp_port_is_enabled.exit ], [ %retval.0.i, %tb_pci_port_is_enabled.exit ], [ false, %entry.return_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @tb_pci_port_is_enabled(ptr nocapture noundef readonly %port) local_unnamed_addr #0 align 64 {
entry:
  %data = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %data) #16
  %0 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %data, align 4, !annotation !447
  %sw.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %1 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %sw.i, align 4
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 20
  %3 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not.i = icmp eq i8 %4, 0
  br i1 %tobool.not.i, label %tb_port_read.exit, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_port_read.exit:                                ; preds = %entry
  %cap_adap = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 6
  %5 = ptrtoint ptr %cap_adap to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %cap_adap, align 4
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 5
  %7 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ctl.i, align 8
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 1, i32 4
  %11 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %12 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %12, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 1, i32 3
  %13 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %14 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %port3.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %15 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %port3.i, align 4
  %conv.i = zext i8 %16 to i32
  %call4.i = call i32 @tb_cfg_read(ptr noundef %10, ptr noundef nonnull %data, i64 noundef %or.i.i, i32 noundef %conv.i, i32 noundef 1, i32 noundef %6, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not = icmp eq i32 %call4.i, 0
  br i1 %tobool.not, label %if.end, label %tb_port_read.exit.cleanup_crit_edge

tb_port_read.exit.cleanup_crit_edge:              ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  %17 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %data, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool1 = icmp slt i32 %18, 0
  br label %cleanup

cleanup:                                          ; preds = %if.end, %tb_port_read.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ %tobool1, %if.end ], [ false, %tb_port_read.exit.cleanup_crit_edge ], [ false, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %data) #16
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @tb_dp_port_is_enabled(ptr nocapture noundef readonly %port) local_unnamed_addr #0 align 64 {
entry:
  %data = alloca [2 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %data) #16
  %0 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %data, align 4, !annotation !447
  %1 = getelementptr inbounds [2 x i32], ptr %data, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %1, align 4, !annotation !447
  %sw.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %3 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sw.i, align 4
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 20
  %5 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not.i = icmp eq i8 %6, 0
  br i1 %tobool.not.i, label %tb_port_read.exit, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_port_read.exit:                                ; preds = %entry
  %cap_adap = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 6
  %7 = ptrtoint ptr %cap_adap to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cap_adap, align 4
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 5
  %9 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ctl.i, align 8
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 1, i32 4
  %13 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %13, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %14 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %14, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 1, i32 3
  %15 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %16 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %port3.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %17 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %port3.i, align 4
  %conv.i = zext i8 %18 to i32
  %call4.i = call i32 @tb_cfg_read(ptr noundef %12, ptr noundef nonnull %data, i64 noundef %or.i.i, i32 noundef %conv.i, i32 noundef 1, i32 noundef %8, i32 noundef 2) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not = icmp eq i32 %call4.i, 0
  br i1 %tobool.not, label %if.end, label %tb_port_read.exit.cleanup_crit_edge

tb_port_read.exit.cleanup_crit_edge:              ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  %19 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %data, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741823, i32 %20)
  %tobool1 = icmp ugt i32 %20, 1073741823
  br label %cleanup

cleanup:                                          ; preds = %if.end, %tb_port_read.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ %tobool1, %if.end ], [ false, %tb_port_read.exit.cleanup_crit_edge ], [ false, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %data) #16
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @tb_usb3_port_is_enabled(ptr nocapture noundef readonly %port) local_unnamed_addr #0 align 64 {
entry:
  %data = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %data) #16
  %0 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %data, align 4, !annotation !447
  %sw.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %1 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %sw.i, align 4
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 20
  %3 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not.i = icmp eq i8 %4, 0
  br i1 %tobool.not.i, label %tb_port_read.exit, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_port_read.exit:                                ; preds = %entry
  %cap_adap = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 6
  %5 = ptrtoint ptr %cap_adap to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %cap_adap, align 4
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 5
  %7 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ctl.i, align 8
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 1, i32 4
  %11 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %12 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %12, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 1, i32 3
  %13 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %14 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %port3.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %15 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %port3.i, align 4
  %conv.i = zext i8 %16 to i32
  %call4.i = call i32 @tb_cfg_read(ptr noundef %10, ptr noundef nonnull %data, i64 noundef %or.i.i, i32 noundef %conv.i, i32 noundef 1, i32 noundef %6, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not = icmp eq i32 %call4.i, 0
  br i1 %tobool.not, label %if.end, label %tb_port_read.exit.cleanup_crit_edge

tb_port_read.exit.cleanup_crit_edge:              ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  %17 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %data, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool1 = icmp slt i32 %18, 0
  br label %cleanup

cleanup:                                          ; preds = %if.end, %tb_port_read.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ %tobool1, %if.end ], [ false, %tb_port_read.exit.cleanup_crit_edge ], [ false, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %data) #16
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_usb3_port_enable(ptr nocapture noundef readonly %port, i1 noundef zeroext %enable) local_unnamed_addr #0 align 64 {
entry:
  %word = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %word) #16
  %cond = select i1 %enable, i32 -1073741824, i32 1073741824
  %0 = ptrtoint ptr %word to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %cond, ptr %word, align 4
  %cap_adap = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 6
  %1 = ptrtoint ptr %cap_adap to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %cap_adap, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool1.not = icmp eq i32 %2, 0
  br i1 %tobool1.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %sw.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %3 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sw.i, align 4
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 20
  %5 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not.i = icmp eq i8 %6, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 5
  %7 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ctl.i, align 8
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 1, i32 4
  %11 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %12 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %12, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 1, i32 3
  %13 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %14 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %port3.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %15 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %port3.i, align 4
  %conv.i = zext i8 %16 to i32
  %call4.i = call i32 @tb_cfg_write(ptr noundef %10, ptr noundef nonnull %word, i64 noundef %or.i.i, i32 noundef %conv.i, i32 noundef 1, i32 noundef %2, i32 noundef 1) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end.i, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -6, %entry.cleanup_crit_edge ], [ %call4.i, %if.end.i ], [ -19, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %word) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_pci_port_enable(ptr nocapture noundef readonly %port, i1 noundef zeroext %enable) local_unnamed_addr #0 align 64 {
entry:
  %word = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %word) #16
  %cond = select i1 %enable, i32 -2147483648, i32 0
  %0 = ptrtoint ptr %word to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %cond, ptr %word, align 4
  %cap_adap = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 6
  %1 = ptrtoint ptr %cap_adap to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %cap_adap, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool1.not = icmp eq i32 %2, 0
  br i1 %tobool1.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %sw.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %3 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sw.i, align 4
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 20
  %5 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not.i = icmp eq i8 %6, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 5
  %7 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ctl.i, align 8
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 1, i32 4
  %11 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %12 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %12, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 1, i32 3
  %13 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %14 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %port3.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %15 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %port3.i, align 4
  %conv.i = zext i8 %16 to i32
  %call4.i = call i32 @tb_cfg_write(ptr noundef %10, ptr noundef nonnull %word, i64 noundef %or.i.i, i32 noundef %conv.i, i32 noundef 1, i32 noundef %2, i32 noundef 1) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end.i, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -6, %entry.cleanup_crit_edge ], [ %call4.i, %if.end.i ], [ -19, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %word) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_dp_port_hpd_is_active(ptr nocapture noundef readonly %port) local_unnamed_addr #0 align 64 {
entry:
  %data = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %data) #16
  %0 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %data, align 4, !annotation !447
  %sw.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %1 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %sw.i, align 4
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 20
  %3 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not.i = icmp eq i8 %4, 0
  br i1 %tobool.not.i, label %tb_port_read.exit, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_port_read.exit:                                ; preds = %entry
  %cap_adap = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 6
  %5 = ptrtoint ptr %cap_adap to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %cap_adap, align 4
  %add = add i32 %6, 2
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 5
  %7 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ctl.i, align 8
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 1, i32 4
  %11 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %12 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %12, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 1, i32 3
  %13 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %14 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %port3.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %15 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %port3.i, align 4
  %conv.i = zext i8 %16 to i32
  %call4.i = call i32 @tb_cfg_read(ptr noundef %10, ptr noundef nonnull %data, i64 noundef %or.i.i, i32 noundef %conv.i, i32 noundef 1, i32 noundef %add, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not = icmp eq i32 %call4.i, 0
  br i1 %tobool.not, label %if.end, label %tb_port_read.exit.cleanup_crit_edge

tb_port_read.exit.cleanup_crit_edge:              ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  %17 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %data, align 4
  %and = lshr i32 %18, 6
  %and.lobit = and i32 %and, 1
  br label %cleanup

cleanup:                                          ; preds = %if.end, %tb_port_read.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %and.lobit, %if.end ], [ %call4.i, %tb_port_read.exit.cleanup_crit_edge ], [ -19, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %data) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_dp_port_hpd_clear(ptr nocapture noundef readonly %port) local_unnamed_addr #0 align 64 {
entry:
  %data = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %data) #16
  %0 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %data, align 4, !annotation !447
  %cap_adap = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 6
  %sw.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %1 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %sw.i, align 4
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 20
  %3 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not.i = icmp eq i8 %4, 0
  br i1 %tobool.not.i, label %tb_port_read.exit, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_port_read.exit:                                ; preds = %entry
  %5 = ptrtoint ptr %cap_adap to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %cap_adap, align 4
  %add = add i32 %6, 3
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 5
  %7 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ctl.i, align 8
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 1, i32 4
  %11 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %12 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %12, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 1, i32 3
  %13 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %14 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %port3.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %15 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %port3.i, align 4
  %conv.i = zext i8 %16 to i32
  %call4.i = call i32 @tb_cfg_read(ptr noundef %10, ptr noundef nonnull %data, i64 noundef %or.i.i, i32 noundef %conv.i, i32 noundef 1, i32 noundef %add, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not = icmp eq i32 %call4.i, 0
  br i1 %tobool.not, label %if.end, label %tb_port_read.exit.cleanup_crit_edge

tb_port_read.exit.cleanup_crit_edge:              ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %tb_port_read.exit
  %17 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %data, align 4
  %or = or i32 %18, 512
  store i32 %or, ptr %data, align 4
  %19 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %sw.i, align 4
  %is_unplugged.i10 = getelementptr inbounds %struct.tb_switch, ptr %20, i32 0, i32 20
  %21 = ptrtoint ptr %is_unplugged.i10 to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %is_unplugged.i10, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool.not.i11 = icmp eq i8 %22, 0
  br i1 %tobool.not.i11, label %if.end.i23, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i23:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %23 = ptrtoint ptr %cap_adap to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %cap_adap, align 4
  %add2 = add i32 %24, 3
  %tb.i12 = getelementptr inbounds %struct.tb_switch, ptr %20, i32 0, i32 5
  %25 = ptrtoint ptr %tb.i12 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %tb.i12, align 8
  %ctl.i13 = getelementptr inbounds %struct.tb, ptr %26, i32 0, i32 3
  %27 = ptrtoint ptr %ctl.i13 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ctl.i13, align 8
  %route_hi.i.i14 = getelementptr inbounds %struct.tb_switch, ptr %20, i32 0, i32 1, i32 4
  %29 = ptrtoint ptr %route_hi.i.i14 to i32
  call void @__asan_loadN_noabort(i32 %29, i32 8)
  %bf.load.i.i15 = load i64, ptr %route_hi.i.i14, align 4
  %30 = lshr i64 %bf.load.i.i15, 1
  %shl.i.i16 = and i64 %30, 9223372032559808512
  %route_lo.i.i17 = getelementptr inbounds %struct.tb_switch, ptr %20, i32 0, i32 1, i32 3
  %31 = ptrtoint ptr %route_lo.i.i17 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %route_lo.i.i17, align 8
  %conv2.i.i18 = zext i32 %32 to i64
  %or.i.i19 = or i64 %shl.i.i16, %conv2.i.i18
  %33 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %port3.i, align 4
  %conv.i21 = zext i8 %34 to i32
  %call4.i22 = call i32 @tb_cfg_write(ptr noundef %28, ptr noundef nonnull %data, i64 noundef %or.i.i19, i32 noundef %conv.i21, i32 noundef 1, i32 noundef %add2, i32 noundef 1) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end.i23, %if.end.cleanup_crit_edge, %tb_port_read.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4.i, %tb_port_read.exit.cleanup_crit_edge ], [ %call4.i22, %if.end.i23 ], [ -19, %if.end.cleanup_crit_edge ], [ -19, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %data) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_dp_port_set_hops(ptr nocapture noundef readonly %port, i32 noundef %video, i32 noundef %aux_tx, i32 noundef %aux_rx) local_unnamed_addr #0 align 64 {
entry:
  %data = alloca [2 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %data) #16
  %0 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %data, align 4, !annotation !447
  %1 = getelementptr inbounds [2 x i32], ptr %data, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %1, align 4, !annotation !447
  %sw = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %3 = ptrtoint ptr %sw to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sw, align 4
  %thunderbolt_version.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 1, i32 4
  %5 = ptrtoint ptr %thunderbolt_version.i to i32
  call void @__asan_loadN_noabort(i32 %5, i32 8)
  %bf.load.i = load i64, ptr %thunderbolt_version.i, align 4
  %bf.cast1.i = and i64 %bf.load.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i)
  %cmp.i = icmp eq i64 %bf.cast1.i, 32
  br i1 %cmp.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %cap_adap = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 6
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 20
  %6 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not.i = icmp eq i8 %7, 0
  br i1 %tobool.not.i, label %tb_port_read.exit, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_port_read.exit:                                ; preds = %if.end
  %8 = ptrtoint ptr %cap_adap to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cap_adap, align 4
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 5
  %10 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ctl.i, align 8
  %14 = lshr i64 %bf.load.i, 1
  %shl.i.i = and i64 %14, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 1, i32 3
  %15 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %16 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %port3.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %17 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %port3.i, align 4
  %conv.i = zext i8 %18 to i32
  %call4.i = call i32 @tb_cfg_read(ptr noundef %13, ptr noundef nonnull %data, i64 noundef %or.i.i, i32 noundef %conv.i, i32 noundef 1, i32 noundef %9, i32 noundef 2) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not = icmp eq i32 %call4.i, 0
  br i1 %tobool.not, label %if.end3, label %tb_port_read.exit.cleanup_crit_edge

tb_port_read.exit.cleanup_crit_edge:              ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end3:                                          ; preds = %tb_port_read.exit
  %19 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %data, align 4
  %and = and i32 %20, -134152193
  %21 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %1, align 4
  %and5 = and i32 %22, -4192257
  %shl = shl i32 %video, 16
  %and8 = and i32 %shl, 134152192
  %or = or i32 %and, %and8
  store i32 %or, ptr %data, align 4
  %and10 = and i32 %aux_tx, 2047
  %shl13 = shl i32 %aux_rx, 11
  %and14 = and i32 %shl13, 4192256
  %or12 = or i32 %and14, %and10
  %or16 = or i32 %or12, %and5
  store i32 %or16, ptr %1, align 4
  %23 = ptrtoint ptr %sw to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %sw, align 4
  %is_unplugged.i28 = getelementptr inbounds %struct.tb_switch, ptr %24, i32 0, i32 20
  %25 = ptrtoint ptr %is_unplugged.i28 to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %is_unplugged.i28, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool.not.i29 = icmp eq i8 %26, 0
  br i1 %tobool.not.i29, label %if.end.i41, label %if.end3.cleanup_crit_edge

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i41:                                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  %27 = ptrtoint ptr %cap_adap to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cap_adap, align 4
  %tb.i30 = getelementptr inbounds %struct.tb_switch, ptr %24, i32 0, i32 5
  %29 = ptrtoint ptr %tb.i30 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %tb.i30, align 8
  %ctl.i31 = getelementptr inbounds %struct.tb, ptr %30, i32 0, i32 3
  %31 = ptrtoint ptr %ctl.i31 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %ctl.i31, align 8
  %route_hi.i.i32 = getelementptr inbounds %struct.tb_switch, ptr %24, i32 0, i32 1, i32 4
  %33 = ptrtoint ptr %route_hi.i.i32 to i32
  call void @__asan_loadN_noabort(i32 %33, i32 8)
  %bf.load.i.i33 = load i64, ptr %route_hi.i.i32, align 4
  %34 = lshr i64 %bf.load.i.i33, 1
  %shl.i.i34 = and i64 %34, 9223372032559808512
  %route_lo.i.i35 = getelementptr inbounds %struct.tb_switch, ptr %24, i32 0, i32 1, i32 3
  %35 = ptrtoint ptr %route_lo.i.i35 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %route_lo.i.i35, align 8
  %conv2.i.i36 = zext i32 %36 to i64
  %or.i.i37 = or i64 %shl.i.i34, %conv2.i.i36
  %37 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %port3.i, align 4
  %conv.i39 = zext i8 %38 to i32
  %call4.i40 = call i32 @tb_cfg_write(ptr noundef %32, ptr noundef nonnull %data, i64 noundef %or.i.i37, i32 noundef %conv.i39, i32 noundef 1, i32 noundef %28, i32 noundef 2) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end.i41, %if.end3.cleanup_crit_edge, %tb_port_read.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %call4.i, %tb_port_read.exit.cleanup_crit_edge ], [ %call4.i40, %if.end.i41 ], [ -19, %if.end3.cleanup_crit_edge ], [ -19, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %data) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_dp_port_enable(ptr nocapture noundef readonly %port, i1 noundef zeroext %enable) local_unnamed_addr #0 align 64 {
entry:
  %data = alloca [2 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %data) #16
  %0 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %data, align 4, !annotation !447
  %1 = getelementptr inbounds [2 x i32], ptr %data, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %1, align 4, !annotation !447
  %cap_adap = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 6
  %sw.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %3 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sw.i, align 4
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 20
  %5 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not.i = icmp eq i8 %6, 0
  br i1 %tobool.not.i, label %tb_port_read.exit, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_port_read.exit:                                ; preds = %entry
  %7 = ptrtoint ptr %cap_adap to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cap_adap, align 4
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 5
  %9 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ctl.i, align 8
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 1, i32 4
  %13 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %13, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %14 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %14, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %4, i32 0, i32 1, i32 3
  %15 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %16 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %port3.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %17 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %port3.i, align 4
  %conv.i = zext i8 %18 to i32
  %call4.i = call i32 @tb_cfg_read(ptr noundef %12, ptr noundef nonnull %data, i64 noundef %or.i.i, i32 noundef %conv.i, i32 noundef 1, i32 noundef %8, i32 noundef 2) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not = icmp eq i32 %call4.i, 0
  br i1 %tobool.not, label %if.end, label %tb_port_read.exit.cleanup_crit_edge

tb_port_read.exit.cleanup_crit_edge:              ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %tb_port_read.exit
  %19 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %data, align 4
  %and = and i32 %20, 1073741823
  %masksel = select i1 %enable, i32 -1073741824, i32 0
  %storemerge = or i32 %and, %masksel
  store i32 %storemerge, ptr %data, align 4
  %21 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %sw.i, align 4
  %is_unplugged.i15 = getelementptr inbounds %struct.tb_switch, ptr %22, i32 0, i32 20
  %23 = ptrtoint ptr %is_unplugged.i15 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %is_unplugged.i15, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %24)
  %tobool.not.i16 = icmp eq i8 %24, 0
  br i1 %tobool.not.i16, label %if.end.i28, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i28:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %25 = ptrtoint ptr %cap_adap to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %cap_adap, align 4
  %tb.i17 = getelementptr inbounds %struct.tb_switch, ptr %22, i32 0, i32 5
  %27 = ptrtoint ptr %tb.i17 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %tb.i17, align 8
  %ctl.i18 = getelementptr inbounds %struct.tb, ptr %28, i32 0, i32 3
  %29 = ptrtoint ptr %ctl.i18 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %ctl.i18, align 8
  %route_hi.i.i19 = getelementptr inbounds %struct.tb_switch, ptr %22, i32 0, i32 1, i32 4
  %31 = ptrtoint ptr %route_hi.i.i19 to i32
  call void @__asan_loadN_noabort(i32 %31, i32 8)
  %bf.load.i.i20 = load i64, ptr %route_hi.i.i19, align 4
  %32 = lshr i64 %bf.load.i.i20, 1
  %shl.i.i21 = and i64 %32, 9223372032559808512
  %route_lo.i.i22 = getelementptr inbounds %struct.tb_switch, ptr %22, i32 0, i32 1, i32 3
  %33 = ptrtoint ptr %route_lo.i.i22 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %route_lo.i.i22, align 8
  %conv2.i.i23 = zext i32 %34 to i64
  %or.i.i24 = or i64 %shl.i.i21, %conv2.i.i23
  %35 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %port3.i, align 4
  %conv.i26 = zext i8 %36 to i32
  %call4.i27 = call i32 @tb_cfg_write(ptr noundef %30, ptr noundef nonnull %data, i64 noundef %or.i.i24, i32 noundef %conv.i26, i32 noundef 1, i32 noundef %26, i32 noundef 2) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end.i28, %if.end.cleanup_crit_edge, %tb_port_read.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4.i, %tb_port_read.exit.cleanup_crit_edge ], [ %call4.i27, %if.end.i28 ], [ -19, %if.end.cleanup_crit_edge ], [ -19, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %data) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_switch_reset(ptr noundef %sw) local_unnamed_addr #0 align 64 {
entry:
  %tmp15 = alloca %struct.tb_cfg_result, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %generation = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 15
  %0 = ptrtoint ptr %generation to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %generation, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp = icmp ugt i32 %1, 1
  br i1 %cmp, label %entry.cleanup_crit_edge, label %do.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body:                                          ; preds = %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_switch_reset.__UNIQUE_ID_ddebug260, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_switch_reset, %if.then4)) #16
          to label %do.end [label %if.then4], !srcloc !446

if.then4:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %tb = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %2 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tb, align 8
  %nhi = getelementptr inbounds %struct.tb, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %7, i32 0, i32 44
  %route_hi.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %8 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %8, i32 8)
  %bf.load.i = load i64, ptr %route_hi.i, align 4
  %9 = lshr i64 %bf.load.i, 1
  %shl.i = and i64 %9, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %10 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %11 to i64
  %or.i = or i64 %shl.i, %conv2.i
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_switch_reset.__UNIQUE_ID_ddebug260, ptr noundef %dev, ptr noundef nonnull @.str.19, i64 noundef %or.i) #16
  br label %do.end

do.end:                                           ; preds = %if.then4, %do.body
  %add.ptr = getelementptr %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 20
  %12 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool.not.i = icmp eq i8 %13, 0
  br i1 %tobool.not.i, label %tb_sw_write.exit, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_sw_write.exit:                                 ; preds = %do.end
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %14 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %15, i32 0, i32 3
  %16 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %ctl.i, align 8
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %18 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %18, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %19 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %19, 9223372032559808512
  %20 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %add.ptr, align 8
  %conv2.i.i = zext i32 %21 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %call1.i = tail call i32 @tb_cfg_write(ptr noundef %17, ptr noundef %add.ptr, i64 noundef %or.i.i, i32 noundef 0, i32 noundef 2, i32 noundef 2, i32 noundef 2) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool11.not = icmp eq i32 %call1.i, 0
  br i1 %tobool11.not, label %if.end14, label %tb_sw_write.exit.cleanup_crit_edge

tb_sw_write.exit.cleanup_crit_edge:               ; preds = %tb_sw_write.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end14:                                         ; preds = %tb_sw_write.exit
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %tmp15) #16
  %22 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %tb.i, align 8
  %ctl = getelementptr inbounds %struct.tb, ptr %23, i32 0, i32 3
  %24 = ptrtoint ptr %ctl to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %ctl, align 8
  %26 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %26, i32 8)
  %bf.load.i35 = load i64, ptr %route_hi.i.i, align 4
  %27 = lshr i64 %bf.load.i35, 1
  %shl.i36 = and i64 %27, 9223372032559808512
  %28 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %add.ptr, align 8
  %conv2.i38 = zext i32 %29 to i64
  %or.i39 = or i64 %shl.i36, %conv2.i38
  call void @tb_cfg_reset(ptr nonnull sret(%struct.tb_cfg_result) align 8 %tmp15, ptr noundef %25, i64 noundef %or.i39) #16
  %res.sroa.4.0.tmp15.sroa_idx = getelementptr inbounds i8, ptr %tmp15, i32 12
  %30 = ptrtoint ptr %res.sroa.4.0.tmp15.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %30)
  %res.sroa.4.0.copyload24 = load i32, ptr %res.sroa.4.0.tmp15.sroa_idx, align 4
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %tmp15) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %res.sroa.4.0.copyload24)
  %cmp19 = icmp sgt i32 %res.sroa.4.0.copyload24, 0
  %.res.sroa.4.0.copyload24 = select i1 %cmp19, i32 -5, i32 %res.sroa.4.0.copyload24
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %tb_sw_write.exit.cleanup_crit_edge, %do.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %call1.i, %tb_sw_write.exit.cleanup_crit_edge ], [ %.res.sroa.4.0.copyload24, %if.end14 ], [ -19, %do.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @tb_cfg_reset(ptr sret(%struct.tb_cfg_result) align 8, ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_switch_wait_for_bit(ptr nocapture noundef readonly %sw, i32 noundef %offset, i32 noundef %bit, i32 noundef %value, i32 noundef %timeout_msec) local_unnamed_addr #0 align 64 {
entry:
  %val = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i64 @ktime_get() #16
  %conv = sext i32 %timeout_msec to i64
  %mul.i = mul nsw i64 %conv, 1000000
  %add.i = add i64 %call, %mul.i
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 20
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  br label %do.body

do.body:                                          ; preds = %do.cond.do.body_crit_edge, %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val) #16
  %0 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %val, align 4, !annotation !447
  %1 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.not.i = icmp eq i8 %2, 0
  br i1 %tobool.not.i, label %tb_sw_read.exit, label %do.body.cleanup.thread_crit_edge

do.body.cleanup.thread_crit_edge:                 ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.thread

tb_sw_read.exit:                                  ; preds = %do.body
  %3 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %4, i32 0, i32 3
  %5 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ctl.i, align 8
  %7 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %7, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %8 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %8, 9223372032559808512
  %9 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %10 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %call1.i = call i32 @tb_cfg_read(ptr noundef %6, ptr noundef nonnull %val, i64 noundef %or.i.i, i32 noundef 0, i32 noundef 2, i32 noundef %offset, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not = icmp eq i32 %call1.i, 0
  br i1 %tobool.not, label %if.end, label %tb_sw_read.exit.cleanup.thread_crit_edge

tb_sw_read.exit.cleanup.thread_crit_edge:         ; preds = %tb_sw_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.thread

if.end:                                           ; preds = %tb_sw_read.exit
  %11 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %val, align 4
  %and = and i32 %12, %bit
  call void @__sanitizer_cov_trace_cmp4(i32 %and, i32 %value)
  %cmp = icmp eq i32 %and, %value
  br i1 %cmp, label %if.end.cleanup.thread_crit_edge, label %do.cond

if.end.cleanup.thread_crit_edge:                  ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %if.end.cleanup.thread_crit_edge, %tb_sw_read.exit.cleanup.thread_crit_edge, %do.body.cleanup.thread_crit_edge
  %retval.1.ph = phi i32 [ 0, %if.end.cleanup.thread_crit_edge ], [ %call1.i, %tb_sw_read.exit.cleanup.thread_crit_edge ], [ -19, %do.body.cleanup.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val) #16
  br label %cleanup9

do.cond:                                          ; preds = %if.end
  call void @usleep_range_state(i32 noundef 50, i32 noundef 100, i32 noundef 2) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val) #16
  %call7 = call i64 @ktime_get() #16
  %cmp.i.i = icmp slt i64 %call7, %add.i
  br i1 %cmp.i.i, label %do.cond.do.body_crit_edge, label %do.cond.cleanup9_crit_edge

do.cond.cleanup9_crit_edge:                       ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup9

do.cond.do.body_crit_edge:                        ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body

cleanup9:                                         ; preds = %do.cond.cleanup9_crit_edge, %cleanup.thread
  %retval.2 = phi i32 [ %retval.1.ph, %cleanup.thread ], [ -110, %do.cond.cleanup9_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @tb_switch_uevent(ptr nocapture noundef readonly %dev, ptr noundef %env) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %1, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %dev, ptr null
  %thunderbolt_version = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 1, i32 4
  %2 = ptrtoint ptr %thunderbolt_version to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %bf.load = load i64, ptr %thunderbolt_version, align 4
  %bf.cast35 = and i64 %bf.load, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast35)
  %cmp = icmp eq i64 %bf.cast35, 32
  br i1 %cmp, label %if.then, label %entry.if.end3_crit_edge

entry.if.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end3

if.then:                                          ; preds = %entry
  %call1 = tail call i32 (ptr, ptr, ...) @add_uevent_var(ptr noundef %env, ptr noundef nonnull @.str.106) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.then.if.end3_crit_edge, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.if.end3_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end3

if.end3:                                          ; preds = %if.then.if.end3_crit_edge, %entry.if.end3_crit_edge
  %3 = ptrtoint ptr %thunderbolt_version to i32
  call void @__asan_loadN_noabort(i32 %3, i32 8)
  %bf.load.i = load i64, ptr %thunderbolt_version, align 4
  %4 = lshr i64 %bf.load.i, 1
  %shl.i = and i64 %4, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 1, i32 3
  %5 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %6 to i64
  %or.i = or i64 %shl.i, %conv2.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i)
  %tobool5.not = icmp eq i64 %or.i, 0
  br i1 %tobool5.not, label %if.end3.if.end20_crit_edge, label %if.else

if.end3.if.end20_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20

if.else:                                          ; preds = %if.end3
  %ports = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 2
  %7 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ports, align 4
  %max_port_number = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 1, i32 2
  %9 = ptrtoint ptr %max_port_number to i32
  call void @__asan_load4_noabort(i32 %9)
  %bf.load9 = load i32, ptr %max_port_number, align 4
  %bf.lshr = lshr i32 %bf.load9, 12
  %bf.clear10 = and i32 %bf.lshr, 63
  %arrayidx11 = getelementptr %struct.tb_port, ptr %8, i32 %bf.clear10
  %port.038 = getelementptr %struct.tb_port, ptr %8, i32 1
  %cmp12.not39 = icmp ugt ptr %port.038, %arrayidx11
  br i1 %cmp12.not39, label %if.else.if.end20_crit_edge, label %if.else.for.body_crit_edge

if.else.for.body_crit_edge:                       ; preds = %if.else
  br label %for.body

if.else.if.end20_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.else.for.body_crit_edge
  %port.041 = phi ptr [ %port.0, %for.inc.for.body_crit_edge ], [ %port.038, %if.else.for.body_crit_edge ]
  %.pn40 = phi ptr [ %port.041, %for.inc.for.body_crit_edge ], [ %8, %if.else.for.body_crit_edge ]
  %disabled = getelementptr %struct.tb_port, ptr %.pn40, i32 1, i32 10
  %10 = ptrtoint ptr %disabled to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %disabled, align 1, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool13.not = icmp eq i8 %11, 0
  br i1 %tobool13.not, label %land.lhs.true, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %sw.i = getelementptr %struct.tb_port, ptr %.pn40, i32 1, i32 1
  %12 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %sw.i, align 4
  %ports.i.i = getelementptr inbounds %struct.tb_switch, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %ports.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ports.i.i, align 4
  %upstream_port_number.i.i = getelementptr inbounds %struct.tb_switch, ptr %13, i32 0, i32 1, i32 2
  %16 = ptrtoint ptr %upstream_port_number.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %bf.load.i.i = load i32, ptr %upstream_port_number.i.i, align 4
  %bf.lshr.i.i = lshr i32 %bf.load.i.i, 18
  %bf.clear.i.i = and i32 %bf.lshr.i.i, 63
  %arrayidx.i.i = getelementptr %struct.tb_port, ptr %15, i32 %bf.clear.i.i
  %cmp.i = icmp eq ptr %arrayidx.i.i, %port.041
  br i1 %cmp.i, label %land.lhs.true.for.inc_crit_edge, label %tb_is_upstream_port.exit

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

tb_is_upstream_port.exit:                         ; preds = %land.lhs.true
  %dual_link_port.i = getelementptr %struct.tb_port, ptr %.pn40, i32 1, i32 12
  %17 = ptrtoint ptr %dual_link_port.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %dual_link_port.i, align 4
  %cmp1.i = icmp eq ptr %18, %arrayidx.i.i
  %tobool.not.i = icmp eq ptr %port.041, null
  %or.cond = select i1 %cmp1.i, i1 true, i1 %tobool.not.i
  br i1 %or.cond, label %tb_is_upstream_port.exit.for.inc_crit_edge, label %land.lhs.true.i

tb_is_upstream_port.exit.for.inc_crit_edge:       ; preds = %tb_is_upstream_port.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

land.lhs.true.i:                                  ; preds = %tb_is_upstream_port.exit
  %port1.i = getelementptr %struct.tb_port, ptr %.pn40, i32 1, i32 9
  %19 = ptrtoint ptr %port1.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %port1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool2.not.i = icmp eq i8 %20, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.for.inc_crit_edge, label %tb_port_is_null.exit

land.lhs.true.i.for.inc_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

tb_port_is_null.exit:                             ; preds = %land.lhs.true.i
  %type.i = getelementptr %struct.tb_port, ptr %.pn40, i32 1, i32 0, i32 2
  %21 = ptrtoint ptr %type.i to i32
  call void @__asan_loadN_noabort(i32 %21, i32 12)
  %bf.load.i36 = load i96, ptr %type.i, align 4
  %22 = and i96 %bf.load.i36, 18446742974197923840
  %cmp.i37 = icmp eq i96 %22, 1099511627776
  br i1 %cmp.i37, label %tb_port_is_null.exit.if.end20_crit_edge, label %tb_port_is_null.exit.for.inc_crit_edge

tb_port_is_null.exit.for.inc_crit_edge:           ; preds = %tb_port_is_null.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

tb_port_is_null.exit.if.end20_crit_edge:          ; preds = %tb_port_is_null.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20

for.inc:                                          ; preds = %tb_port_is_null.exit.for.inc_crit_edge, %land.lhs.true.i.for.inc_crit_edge, %tb_is_upstream_port.exit.for.inc_crit_edge, %land.lhs.true.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %port.0 = getelementptr %struct.tb_port, ptr %port.041, i32 1
  %cmp12.not = icmp ugt ptr %port.0, %arrayidx11
  br i1 %cmp12.not, label %for.inc.if.end20_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.if.end20_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20

if.end20:                                         ; preds = %for.inc.if.end20_crit_edge, %tb_port_is_null.exit.if.end20_crit_edge, %if.else.if.end20_crit_edge, %if.end3.if.end20_crit_edge
  %type.0 = phi ptr [ @.str.107, %if.end3.if.end20_crit_edge ], [ @.str.109, %if.else.if.end20_crit_edge ], [ @.str.108, %tb_port_is_null.exit.if.end20_crit_edge ], [ @.str.109, %for.inc.if.end20_crit_edge ]
  %call21 = tail call i32 (ptr, ptr, ...) @add_uevent_var(ptr noundef %env, ptr noundef nonnull @.str.110, ptr noundef nonnull %type.0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %tobool22.not = icmp eq i32 %call21, 0
  %. = select i1 %tobool22.not, i32 0, i32 -12
  br label %cleanup

cleanup:                                          ; preds = %if.end20, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %if.then.cleanup_crit_edge ], [ %., %if.end20 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @tb_switch_release(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %1, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %dev, ptr null
  %dma_port = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 3
  %2 = ptrtoint ptr %dma_port to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dma_port, align 8
  tail call void @dma_port_free(ptr noundef %3) #16
  %ports = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 2
  %4 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ports, align 4
  %max_port_number = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 1, i32 2
  %port.017 = getelementptr %struct.tb_port, ptr %5, i32 1
  %6 = ptrtoint ptr %max_port_number to i32
  call void @__asan_load4_noabort(i32 %6)
  %bf.load18 = load i32, ptr %max_port_number, align 4
  %bf.lshr19 = lshr i32 %bf.load18, 12
  %bf.clear20 = and i32 %bf.lshr19, 63
  %arrayidx221 = getelementptr %struct.tb_port, ptr %5, i32 %bf.clear20
  %cmp.not22 = icmp ugt ptr %port.017, %arrayidx221
  br i1 %cmp.not22, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %port.024 = phi ptr [ %port.0, %for.body.for.body_crit_edge ], [ %port.017, %entry.for.body_crit_edge ]
  %.pn23 = phi ptr [ %port.024, %for.body.for.body_crit_edge ], [ %5, %entry.for.body_crit_edge ]
  %in_hopids = getelementptr %struct.tb_port, ptr %.pn23, i32 1, i32 14
  tail call void @ida_destroy(ptr noundef %in_hopids) #16
  %out_hopids = getelementptr %struct.tb_port, ptr %.pn23, i32 1, i32 15
  tail call void @ida_destroy(ptr noundef %out_hopids) #16
  %port.0 = getelementptr %struct.tb_port, ptr %port.024, i32 1
  %7 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ports, align 4
  %9 = ptrtoint ptr %max_port_number to i32
  call void @__asan_load4_noabort(i32 %9)
  %bf.load = load i32, ptr %max_port_number, align 4
  %bf.lshr = lshr i32 %bf.load, 12
  %bf.clear = and i32 %bf.lshr, 63
  %arrayidx2 = getelementptr %struct.tb_port, ptr %8, i32 %bf.clear
  %cmp.not = icmp ugt ptr %port.0, %arrayidx2
  br i1 %cmp.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  %uuid = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 7
  %10 = ptrtoint ptr %uuid to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %uuid, align 8
  tail call void @kfree(ptr noundef %11) #16
  %device_name = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 11
  %12 = ptrtoint ptr %device_name to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %device_name, align 4
  tail call void @kfree(ptr noundef %13) #16
  %vendor_name = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 10
  %14 = ptrtoint ptr %vendor_name to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %vendor_name, align 8
  tail call void @kfree(ptr noundef %15) #16
  %16 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %ports, align 4
  tail call void @kfree(ptr noundef %17) #16
  %drom = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 21
  %18 = ptrtoint ptr %drom to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %drom, align 4
  tail call void @kfree(ptr noundef %19) #16
  %key = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 30
  %20 = ptrtoint ptr %key to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %key, align 4
  tail call void @kfree(ptr noundef %21) #16
  tail call void @kfree(ptr noundef %dev..i) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @tb_switch_alloc(ptr noundef %tb, ptr noundef %parent, i64 noundef %route) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %route)
  %tobool.not = icmp eq i64 %route, 0
  br i1 %tobool.not, label %entry.if.end.i.i_crit_edge, label %if.then

entry.if.end.i.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i

if.then:                                          ; preds = %entry
  %type.i.i = getelementptr inbounds %struct.device, ptr %parent, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %1, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %parent, ptr null
  %depth.i = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 1, i32 2
  %2 = ptrtoint ptr %depth.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %bf.load.i = load i32, ptr %depth.i, align 4
  %3 = lshr i32 %bf.load.i, 6
  %mul.i = and i32 %3, 56
  %sh_prom.i = zext i32 %mul.i to i64
  %shr.i = lshr i64 %route, %sh_prom.i
  %conv.i = trunc i64 %shr.i to i32
  %conv1.i = and i32 %conv.i, 255
  %bf.lshr4.i = lshr i32 %bf.load.i, 12
  %bf.clear5.i = and i32 %bf.lshr4.i, 63
  call void @__sanitizer_cov_trace_cmp4(i32 %conv1.i, i32 %bf.clear5.i)
  %cmp.i = icmp ugt i32 %conv1.i, %bf.clear5.i
  br i1 %cmp.i, label %tb_port_at.exit.thread, label %tb_port_at.exit, !prof !448

tb_port_at.exit:                                  ; preds = %if.then
  %ports.i = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 2
  %4 = ptrtoint ptr %ports.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ports.i, align 4
  %arrayidx.i = getelementptr %struct.tb_port, ptr %5, i32 %conv1.i
  %sw.i = getelementptr %struct.tb_port, ptr %5, i32 %conv1.i, i32 1
  %6 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %sw.i, align 4
  %enabled.i.i = getelementptr inbounds %struct.tb_switch, ptr %7, i32 0, i32 1, i32 4
  %8 = ptrtoint ptr %enabled.i.i to i32
  call void @__asan_loadN_noabort(i32 %8, i32 8)
  %bf.load.i.i = load i64, ptr %enabled.i.i, align 4
  %9 = and i64 %bf.load.i.i, 4294967296
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %9)
  %bf.cast.not.i.i = icmp eq i64 %9, 0
  %tobool.not.i.i = icmp eq ptr %arrayidx.i, null
  %or.cond = select i1 %bf.cast.not.i.i, i1 true, i1 %tobool.not.i.i
  br i1 %or.cond, label %tb_port_at.exit.if.end_crit_edge, label %land.lhs.true.i.i

tb_port_at.exit.if.end_crit_edge:                 ; preds = %tb_port_at.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

tb_port_at.exit.thread:                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.103, i32 noundef 538, i32 noundef 9, ptr noundef null) #16
  br label %if.end

land.lhs.true.i.i:                                ; preds = %tb_port_at.exit
  %port1.i.i = getelementptr %struct.tb_port, ptr %5, i32 %conv1.i, i32 9
  %10 = ptrtoint ptr %port1.i.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %port1.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool2.not.i.i = icmp eq i8 %11, 0
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.if.end_crit_edge, label %tb_port_is_null.exit.i

land.lhs.true.i.i.if.end_crit_edge:               ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

tb_port_is_null.exit.i:                           ; preds = %land.lhs.true.i.i
  %type.i.i187 = getelementptr inbounds %struct.tb_regs_port_header, ptr %arrayidx.i, i32 0, i32 2
  %12 = ptrtoint ptr %type.i.i187 to i32
  call void @__asan_loadN_noabort(i32 %12, i32 12)
  %bf.load.i12.i = load i96, ptr %type.i.i187, align 4
  %13 = and i96 %bf.load.i12.i, 18446742974197923840
  %cmp.i.i188 = icmp eq i96 %13, 1099511627776
  %bf.cast1.i.i = and i64 %bf.load.i.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i.i)
  %cmp.i14.i = icmp eq i64 %bf.cast1.i.i, 32
  %or.cond226 = select i1 %cmp.i.i188, i1 %cmp.i14.i, i1 false
  br i1 %or.cond226, label %if.then6.i, label %tb_port_is_null.exit.i.if.end_crit_edge

tb_port_is_null.exit.i.if.end_crit_edge:          ; preds = %tb_port_is_null.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then6.i:                                       ; preds = %tb_port_is_null.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %call7.i = tail call i32 @usb4_port_unlock(ptr noundef nonnull %arrayidx.i) #16
  br label %if.end

if.end:                                           ; preds = %if.then6.i, %tb_port_is_null.exit.i.if.end_crit_edge, %land.lhs.true.i.i.if.end_crit_edge, %tb_port_at.exit.thread, %tb_port_at.exit.if.end_crit_edge
  %shr.i.i = lshr i64 %route, 32
  %conv.i.i = trunc i64 %shr.i.i to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv.i.i)
  %tobool.not.i.i190 = icmp eq i32 %conv.i.i, 0
  br i1 %tobool.not.i.i190, label %if.end.if.end.i.i_crit_edge, label %if.then.i.i

if.end.if.end.i.i_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %14 = tail call i32 @llvm.ctlz.i32(i32 %conv.i.i, i1 true) #16, !range !449
  %add.i.i = sub nuw nsw i32 64, %14
  br label %tb_route_length.exit

if.end.i.i:                                       ; preds = %if.end.if.end.i.i_crit_edge, %entry.if.end.i.i_crit_edge
  %conv1.i.i = trunc i64 %route to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv1.i.i)
  %tobool.not.i5.i.i = icmp eq i32 %conv1.i.i, 0
  %15 = tail call i32 @llvm.ctlz.i32(i32 %conv1.i.i, i1 true) #16, !range !449
  %sub.i6.i.i = sub nuw nsw i32 32, %15
  %cond.i7.i.i = select i1 %tobool.not.i5.i.i, i32 0, i32 %sub.i6.i.i
  br label %tb_route_length.exit

tb_route_length.exit:                             ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %add.i.i, %if.then.i.i ], [ %cond.i7.i.i, %if.end.i.i ]
  %div1.lhs.trunc.i = add nuw nsw i32 %retval.0.i.i, 7
  %div123.i = lshr i32 %div1.lhs.trunc.i, 3
  %ctl = getelementptr inbounds %struct.tb, ptr %tb, i32 0, i32 3
  %16 = ptrtoint ptr %ctl to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %ctl, align 8
  %call4 = tail call i32 @tb_cfg_get_upstream_port(ptr noundef %17, i64 noundef %route) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %cmp = icmp slt i32 %call4, 0
  br i1 %cmp, label %if.then5, label %if.end7

if.then5:                                         ; preds = %tb_route_length.exit
  call void @__sanitizer_cov_trace_pc() #18
  %18 = inttoptr i32 %call4 to ptr
  br label %cleanup

if.end7:                                          ; preds = %tb_route_length.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 11) to i32))
  %19 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 11), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %19, i32 noundef 3520, i32 noundef 1168) #20
  %tobool9.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool9.not, label %if.end7.cleanup_crit_edge, label %if.end12

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end12:                                         ; preds = %if.end7
  %tb13 = getelementptr inbounds %struct.tb_switch, ptr %call7.i.i, i32 0, i32 5
  %20 = ptrtoint ptr %tb13 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %tb, ptr %tb13, align 8
  %21 = ptrtoint ptr %ctl to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %ctl, align 8
  %config = getelementptr inbounds %struct.tb_switch, ptr %call7.i.i, i32 0, i32 1
  %call15 = tail call i32 @tb_cfg_read(ptr noundef %22, ptr noundef %config, i64 noundef %route, i32 noundef 0, i32 noundef 2, i32 noundef 0, i32 noundef 5) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %if.end18, label %if.end12.err_free_sw_ports_crit_edge

if.end12.err_free_sw_ports_crit_edge:             ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_free_sw_ports

if.end18:                                         ; preds = %if.end12
  %device_id.i = getelementptr inbounds %struct.tb_switch, ptr %call7.i.i, i32 0, i32 1, i32 1
  %23 = ptrtoint ptr %device_id.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %device_id.i, align 2
  %25 = zext i16 %24 to i64
  call void @__sanitizer_cov_trace_switch(i64 %25, ptr @__sancov_gen_cov_switch_values.201)
  switch i16 %24, label %sw.default.i [
    i16 5395, label %if.end18.tb_switch_get_generation.exit_crit_edge
    i16 5402, label %if.end18.tb_switch_get_generation.exit_crit_edge233
    i16 5403, label %if.end18.tb_switch_get_generation.exit_crit_edge234
    i16 5448, label %if.end18.tb_switch_get_generation.exit_crit_edge235
    i16 5447, label %if.end18.tb_switch_get_generation.exit_crit_edge236
    i16 5449, label %if.end18.tb_switch_get_generation.exit_crit_edge237
    i16 5479, label %if.end18.tb_switch_get_generation.exit_crit_edge238
    i16 5481, label %if.end18.tb_switch_get_generation.exit_crit_edge239
    i16 5502, label %if.end18.sw.bb1.i_crit_edge
    i16 5483, label %if.end18.sw.bb1.i_crit_edge240
    i16 5485, label %if.end18.sw.bb1.i_crit_edge241
    i16 5568, label %if.end18.sw.bb2.i_crit_edge
    i16 5494, label %if.end18.sw.bb2.i_crit_edge242
    i16 5496, label %if.end18.sw.bb2.i_crit_edge243
    i16 5594, label %if.end18.sw.bb2.i_crit_edge244
    i16 5587, label %if.end18.sw.bb2.i_crit_edge245
    i16 5607, label %if.end18.sw.bb2.i_crit_edge246
    i16 5610, label %if.end18.sw.bb2.i_crit_edge247
    i16 5615, label %if.end18.sw.bb2.i_crit_edge248
    i16 -30185, label %if.end18.sw.bb2.i_crit_edge249
    i16 -30195, label %if.end18.sw.bb2.i_crit_edge250
  ]

if.end18.sw.bb2.i_crit_edge250:                   ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb2.i

if.end18.sw.bb2.i_crit_edge249:                   ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb2.i

if.end18.sw.bb2.i_crit_edge248:                   ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb2.i

if.end18.sw.bb2.i_crit_edge247:                   ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb2.i

if.end18.sw.bb2.i_crit_edge246:                   ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb2.i

if.end18.sw.bb2.i_crit_edge245:                   ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb2.i

if.end18.sw.bb2.i_crit_edge244:                   ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb2.i

if.end18.sw.bb2.i_crit_edge243:                   ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb2.i

if.end18.sw.bb2.i_crit_edge242:                   ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb2.i

if.end18.sw.bb2.i_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb2.i

if.end18.sw.bb1.i_crit_edge241:                   ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1.i

if.end18.sw.bb1.i_crit_edge240:                   ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1.i

if.end18.sw.bb1.i_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1.i

if.end18.tb_switch_get_generation.exit_crit_edge239: ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_get_generation.exit

if.end18.tb_switch_get_generation.exit_crit_edge238: ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_get_generation.exit

if.end18.tb_switch_get_generation.exit_crit_edge237: ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_get_generation.exit

if.end18.tb_switch_get_generation.exit_crit_edge236: ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_get_generation.exit

if.end18.tb_switch_get_generation.exit_crit_edge235: ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_get_generation.exit

if.end18.tb_switch_get_generation.exit_crit_edge234: ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_get_generation.exit

if.end18.tb_switch_get_generation.exit_crit_edge233: ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_get_generation.exit

if.end18.tb_switch_get_generation.exit_crit_edge: ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_get_generation.exit

sw.bb1.i:                                         ; preds = %if.end18.sw.bb1.i_crit_edge, %if.end18.sw.bb1.i_crit_edge240, %if.end18.sw.bb1.i_crit_edge241
  br label %tb_switch_get_generation.exit

sw.bb2.i:                                         ; preds = %if.end18.sw.bb2.i_crit_edge, %if.end18.sw.bb2.i_crit_edge242, %if.end18.sw.bb2.i_crit_edge243, %if.end18.sw.bb2.i_crit_edge244, %if.end18.sw.bb2.i_crit_edge245, %if.end18.sw.bb2.i_crit_edge246, %if.end18.sw.bb2.i_crit_edge247, %if.end18.sw.bb2.i_crit_edge248, %if.end18.sw.bb2.i_crit_edge249, %if.end18.sw.bb2.i_crit_edge250
  br label %tb_switch_get_generation.exit

sw.default.i:                                     ; preds = %if.end18
  %thunderbolt_version.i.i = getelementptr inbounds %struct.tb_switch, ptr %call7.i.i, i32 0, i32 1, i32 4
  %26 = ptrtoint ptr %thunderbolt_version.i.i to i32
  call void @__asan_loadN_noabort(i32 %26, i32 8)
  %bf.load.i.i193 = load i64, ptr %thunderbolt_version.i.i, align 4
  %bf.cast1.i.i194 = and i64 %bf.load.i.i193, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i.i194)
  %cmp.i.i195 = icmp eq i64 %bf.cast1.i.i194, 32
  br i1 %cmp.i.i195, label %sw.default.i.tb_switch_get_generation.exit_crit_edge, label %do.body.i

sw.default.i.tb_switch_get_generation.exit_crit_edge: ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_get_generation.exit

do.body.i:                                        ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #18
  %27 = ptrtoint ptr %tb13 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %tb13, align 8
  %nhi.i = getelementptr inbounds %struct.tb, ptr %28, i32 0, i32 2
  %29 = ptrtoint ptr %nhi.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %nhi.i, align 4
  %pdev.i = getelementptr inbounds %struct.tb_nhi, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %pdev.i, align 4
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %32, i32 0, i32 44
  %33 = lshr i64 %bf.load.i.i193, 1
  %shl.i.i = and i64 %33, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %call7.i.i, i32 0, i32 1, i32 3
  %34 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %35 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %conv7.i = zext i16 %24 to i32
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev.i, ptr noundef nonnull @.str.111, i64 noundef %or.i.i, i32 noundef %conv7.i) #19
  br label %tb_switch_get_generation.exit

tb_switch_get_generation.exit:                    ; preds = %do.body.i, %sw.default.i.tb_switch_get_generation.exit_crit_edge, %sw.bb2.i, %sw.bb1.i, %if.end18.tb_switch_get_generation.exit_crit_edge, %if.end18.tb_switch_get_generation.exit_crit_edge233, %if.end18.tb_switch_get_generation.exit_crit_edge234, %if.end18.tb_switch_get_generation.exit_crit_edge235, %if.end18.tb_switch_get_generation.exit_crit_edge236, %if.end18.tb_switch_get_generation.exit_crit_edge237, %if.end18.tb_switch_get_generation.exit_crit_edge238, %if.end18.tb_switch_get_generation.exit_crit_edge239
  %retval.0.i196 = phi i32 [ 1, %do.body.i ], [ 3, %sw.bb2.i ], [ 2, %sw.bb1.i ], [ 1, %if.end18.tb_switch_get_generation.exit_crit_edge ], [ 1, %if.end18.tb_switch_get_generation.exit_crit_edge233 ], [ 1, %if.end18.tb_switch_get_generation.exit_crit_edge234 ], [ 1, %if.end18.tb_switch_get_generation.exit_crit_edge235 ], [ 1, %if.end18.tb_switch_get_generation.exit_crit_edge236 ], [ 1, %if.end18.tb_switch_get_generation.exit_crit_edge237 ], [ 1, %if.end18.tb_switch_get_generation.exit_crit_edge238 ], [ 1, %if.end18.tb_switch_get_generation.exit_crit_edge239 ], [ 4, %sw.default.i.tb_switch_get_generation.exit_crit_edge ]
  %generation = getelementptr inbounds %struct.tb_switch, ptr %call7.i.i, i32 0, i32 15
  %36 = ptrtoint ptr %generation to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %retval.0.i196, ptr %generation, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_switch_alloc.__UNIQUE_ID_ddebug261, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_switch_alloc, %if.then24)) #16
          to label %do.end [label %if.then24], !srcloc !446

if.then24:                                        ; preds = %tb_switch_get_generation.exit
  call void @__sanitizer_cov_trace_pc() #18
  %nhi = getelementptr inbounds %struct.tb, ptr %tb, i32 0, i32 2
  %37 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %40, i32 0, i32 44
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_switch_alloc.__UNIQUE_ID_ddebug261, ptr noundef %dev, ptr noundef nonnull @.str.22) #16
  br label %do.end

do.end:                                           ; preds = %if.then24, %tb_switch_get_generation.exit
  tail call fastcc void @tb_dump_switch(ptr noundef %tb, ptr noundef nonnull %call7.i.i)
  %upstream_port_number = getelementptr inbounds %struct.tb_switch, ptr %call7.i.i, i32 0, i32 1, i32 2
  %41 = ptrtoint ptr %upstream_port_number to i32
  call void @__asan_load4_noabort(i32 %41)
  %bf.load = load i32, ptr %upstream_port_number, align 4
  %bf.value = shl i32 %call4, 18
  %bf.shl = and i32 %bf.value, 16515072
  %bf.clear = and i32 %bf.load, -16518657
  %bf.value30 = shl nuw nsw i32 %div123.i, 9
  %bf.shl31 = and i32 %bf.value30, 3584
  %bf.set = or i32 %bf.shl31, %bf.shl
  %bf.set33 = or i32 %bf.set, %bf.clear
  store i32 %bf.set33, ptr %upstream_port_number, align 4
  %route_hi = getelementptr inbounds %struct.tb_switch, ptr %call7.i.i, i32 0, i32 1, i32 4
  %42 = ptrtoint ptr %route_hi to i32
  call void @__asan_loadN_noabort(i32 %42, i32 8)
  %bf.load36 = load i64, ptr %route_hi, align 4
  %43 = shl i64 %route, 1
  %bf.shl38 = and i64 %43, -8589934592
  %bf.clear39 = and i64 %bf.load36, 4294967295
  %bf.set40 = or i64 %bf.clear39, %bf.shl38
  %conv41 = trunc i64 %route to i32
  %route_lo = getelementptr inbounds %struct.tb_switch, ptr %call7.i.i, i32 0, i32 1, i32 3
  %44 = ptrtoint ptr %route_lo to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %conv41, ptr %route_lo, align 8
  store i64 %bf.set40, ptr %route_hi, align 4
  %bf.cast1.i.i199 = and i64 %bf.load36, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i.i199)
  %cmp.i.i200 = icmp eq i64 %bf.cast1.i.i199, 32
  br i1 %cmp.i.i200, label %do.end.tb_switch_exceeds_max_depth.exit_crit_edge, label %lor.lhs.false.i

do.end.tb_switch_exceeds_max_depth.exit_crit_edge: ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_exceeds_max_depth.exit

lor.lhs.false.i:                                  ; preds = %do.end
  %45 = ptrtoint ptr %tb13 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %tb13, align 8
  %root_switch.i = getelementptr inbounds %struct.tb, ptr %46, i32 0, i32 5
  %47 = ptrtoint ptr %root_switch.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %root_switch.i, align 8
  %tobool.not.i = icmp eq ptr %48, null
  br i1 %tobool.not.i, label %lor.lhs.false.i.if.else.i_crit_edge, label %land.lhs.true.i

lor.lhs.false.i.if.else.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %lor.lhs.false.i
  %thunderbolt_version.i6.i = getelementptr inbounds %struct.tb_switch, ptr %48, i32 0, i32 1, i32 4
  %49 = ptrtoint ptr %thunderbolt_version.i6.i to i32
  call void @__asan_loadN_noabort(i32 %49, i32 8)
  %bf.load.i7.i = load i64, ptr %thunderbolt_version.i6.i, align 4
  %bf.cast1.i8.i = and i64 %bf.load.i7.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i8.i)
  %cmp.i9.i = icmp eq i64 %bf.cast1.i8.i, 32
  br i1 %cmp.i9.i, label %land.lhs.true.i.tb_switch_exceeds_max_depth.exit_crit_edge, label %land.lhs.true.i.if.else.i_crit_edge

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

land.lhs.true.i.tb_switch_exceeds_max_depth.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_exceeds_max_depth.exit

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %lor.lhs.false.i.if.else.i_crit_edge
  br label %tb_switch_exceeds_max_depth.exit

tb_switch_exceeds_max_depth.exit:                 ; preds = %if.else.i, %land.lhs.true.i.tb_switch_exceeds_max_depth.exit_crit_edge, %do.end.tb_switch_exceeds_max_depth.exit_crit_edge
  %max_depth.0.i = phi i32 [ 6, %if.else.i ], [ 5, %land.lhs.true.i.tb_switch_exceeds_max_depth.exit_crit_edge ], [ 5, %do.end.tb_switch_exceeds_max_depth.exit_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %max_depth.0.i, i32 %div123.i)
  %cmp.i202 = icmp ult i32 %max_depth.0.i, %div123.i
  br i1 %cmp.i202, label %tb_switch_exceeds_max_depth.exit.err_free_sw_ports_crit_edge, label %if.end7.i.i

tb_switch_exceeds_max_depth.exit.err_free_sw_ports_crit_edge: ; preds = %tb_switch_exceeds_max_depth.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_free_sw_ports

if.end7.i.i:                                      ; preds = %tb_switch_exceeds_max_depth.exit
  %bf.lshr = lshr i32 %bf.load, 12
  %bf.clear52 = and i32 %bf.lshr, 63
  %50 = mul nuw nsw i32 %bf.clear52, 200
  %51 = add nuw nsw i32 %50, 200
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %51, i32 noundef 3520) #21
  %ports = getelementptr inbounds %struct.tb_switch, ptr %call7.i.i, i32 0, i32 2
  %52 = ptrtoint ptr %ports to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %call8.i.i, ptr %ports, align 4
  %tobool55.not = icmp eq ptr %call8.i.i, null
  br i1 %tobool55.not, label %if.end7.i.i.err_free_sw_ports_crit_edge, label %for.inc.peel

if.end7.i.i.err_free_sw_ports_crit_edge:          ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_free_sw_ports

for.inc.peel:                                     ; preds = %if.end7.i.i
  %53 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %ports, align 4
  %sw66.peel = getelementptr %struct.tb_port, ptr %54, i32 0, i32 1
  %55 = ptrtoint ptr %sw66.peel to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %call7.i.i, ptr %sw66.peel, align 4
  %56 = load ptr, ptr %ports, align 4
  %port.peel = getelementptr %struct.tb_port, ptr %56, i32 0, i32 9
  %57 = ptrtoint ptr %port.peel to i32
  call void @__asan_store1_noabort(i32 %57)
  store i8 0, ptr %port.peel, align 4
  %58 = ptrtoint ptr %upstream_port_number to i32
  call void @__asan_load4_noabort(i32 %58)
  %bf.load60.peel = load i32, ptr %upstream_port_number, align 4
  %59 = and i32 %bf.load60.peel, 258048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %59)
  %cmp63.not.peel = icmp eq i32 %59, 0
  br i1 %cmp63.not.peel, label %for.inc.peel.for.end_crit_edge, label %for.inc.peel.for.inc_crit_edge

for.inc.peel.for.inc_crit_edge:                   ; preds = %for.inc.peel
  br label %for.inc

for.inc.peel.for.end_crit_edge:                   ; preds = %for.inc.peel
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.inc:                                          ; preds = %for.inc.for.inc_crit_edge, %for.inc.peel.for.inc_crit_edge
  %i.0230 = phi i32 [ %inc, %for.inc.for.inc_crit_edge ], [ 1, %for.inc.peel.for.inc_crit_edge ]
  %60 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %ports, align 4
  %sw66 = getelementptr %struct.tb_port, ptr %61, i32 %i.0230, i32 1
  %62 = ptrtoint ptr %sw66 to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %call7.i.i, ptr %sw66, align 4
  %conv67 = trunc i32 %i.0230 to i8
  %63 = load ptr, ptr %ports, align 4
  %port = getelementptr %struct.tb_port, ptr %63, i32 %i.0230, i32 9
  %64 = ptrtoint ptr %port to i32
  call void @__asan_store1_noabort(i32 %64)
  store i8 %conv67, ptr %port, align 4
  %65 = load ptr, ptr %ports, align 4
  %in_hopids = getelementptr %struct.tb_port, ptr %65, i32 %i.0230, i32 14
  tail call void @__raw_spin_lock_init(ptr noundef %in_hopids, ptr noundef nonnull @.str.124, ptr noundef nonnull @xa_init_flags.__key, i16 noundef signext 3) #16
  %xa_flags.i.i = getelementptr inbounds %struct.xarray, ptr %in_hopids, i32 0, i32 1
  %66 = ptrtoint ptr %xa_flags.i.i to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 67108869, ptr %xa_flags.i.i, align 4
  %xa_head.i.i = getelementptr inbounds %struct.xarray, ptr %in_hopids, i32 0, i32 2
  %67 = ptrtoint ptr %xa_head.i.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr null, ptr %xa_head.i.i, align 4
  %68 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %ports, align 4
  %out_hopids = getelementptr %struct.tb_port, ptr %69, i32 %i.0230, i32 15
  tail call void @__raw_spin_lock_init(ptr noundef %out_hopids, ptr noundef nonnull @.str.124, ptr noundef nonnull @xa_init_flags.__key, i16 noundef signext 3) #16
  %xa_flags.i.i206 = getelementptr inbounds %struct.xarray, ptr %out_hopids, i32 0, i32 1
  %70 = ptrtoint ptr %xa_flags.i.i206 to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 67108869, ptr %xa_flags.i.i206, align 4
  %xa_head.i.i207 = getelementptr inbounds %struct.xarray, ptr %out_hopids, i32 0, i32 2
  %71 = ptrtoint ptr %xa_head.i.i207 to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr null, ptr %xa_head.i.i207, align 4
  %inc = add nuw nsw i32 %i.0230, 1
  %72 = ptrtoint ptr %upstream_port_number to i32
  call void @__asan_load4_noabort(i32 %72)
  %bf.load60 = load i32, ptr %upstream_port_number, align 4
  %bf.lshr61 = lshr i32 %bf.load60, 12
  %bf.clear62 = and i32 %bf.lshr61, 63
  %cmp63.not.not = icmp ult i32 %i.0230, %bf.clear62
  br i1 %cmp63.not.not, label %for.inc.for.inc_crit_edge, label %for.inc.for.end_crit_edge, !llvm.loop !450

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.inc.for.inc_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %for.inc.peel.for.end_crit_edge
  %call77 = tail call i32 @tb_switch_find_vse_cap(ptr noundef nonnull %call7.i.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call77)
  %cmp78 = icmp sgt i32 %call77, 0
  br i1 %cmp78, label %if.then80, label %for.end.if.end81_crit_edge

for.end.if.end81_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end81

if.then80:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  %cap_plug_events = getelementptr inbounds %struct.tb_switch, ptr %call7.i.i, i32 0, i32 16
  %73 = ptrtoint ptr %cap_plug_events to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %call77, ptr %cap_plug_events, align 8
  br label %if.end81

if.end81:                                         ; preds = %if.then80, %for.end.if.end81_crit_edge
  %call82 = tail call i32 @tb_switch_find_vse_cap(ptr noundef nonnull %call7.i.i, i32 noundef 3) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call82)
  %cmp83 = icmp sgt i32 %call82, 0
  br i1 %cmp83, label %if.then85, label %if.end81.if.end86_crit_edge

if.end81.if.end86_crit_edge:                      ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end86

if.then85:                                        ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #18
  %cap_vsec_tmu = getelementptr inbounds %struct.tb_switch, ptr %call7.i.i, i32 0, i32 17
  %74 = ptrtoint ptr %cap_vsec_tmu to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %call82, ptr %cap_vsec_tmu, align 4
  br label %if.end86

if.end86:                                         ; preds = %if.then85, %if.end81.if.end86_crit_edge
  %call87 = tail call i32 @tb_switch_find_vse_cap(ptr noundef nonnull %call7.i.i, i32 noundef 6) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call87)
  %cmp88 = icmp sgt i32 %call87, 0
  br i1 %cmp88, label %if.then90, label %if.end86.if.end91_crit_edge

if.end86.if.end91_crit_edge:                      ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end91

if.then90:                                        ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #18
  %cap_lc = getelementptr inbounds %struct.tb_switch, ptr %call7.i.i, i32 0, i32 18
  %75 = ptrtoint ptr %cap_lc to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 %call87, ptr %cap_lc, align 8
  br label %if.end91

if.end91:                                         ; preds = %if.then90, %if.end86.if.end91_crit_edge
  %call92 = tail call i32 @tb_switch_find_vse_cap(ptr noundef nonnull %call7.i.i, i32 noundef 4) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call92)
  %cmp93 = icmp sgt i32 %call92, 0
  br i1 %cmp93, label %if.then95, label %if.end91.if.end96_crit_edge

if.end91.if.end96_crit_edge:                      ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end96

if.then95:                                        ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #18
  %cap_lp = getelementptr inbounds %struct.tb_switch, ptr %call7.i.i, i32 0, i32 19
  %76 = ptrtoint ptr %cap_lp to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 %call92, ptr %cap_lp, align 4
  br label %if.end96

if.end96:                                         ; preds = %if.then95, %if.end91.if.end96_crit_edge
  br i1 %tobool.not, label %if.then98, label %if.end96.if.end99_crit_edge

if.end96.if.end99_crit_edge:                      ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end99

if.then98:                                        ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #18
  %authorized = getelementptr inbounds %struct.tb_switch, ptr %call7.i.i, i32 0, i32 27
  %77 = ptrtoint ptr %authorized to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 1, ptr %authorized, align 8
  br label %if.end99

if.end99:                                         ; preds = %if.then98, %if.end96.if.end99_crit_edge
  tail call void @device_initialize(ptr noundef nonnull %call7.i.i) #16
  %parent102 = getelementptr inbounds %struct.device, ptr %call7.i.i, i32 0, i32 1
  %78 = ptrtoint ptr %parent102 to i32
  call void @__asan_store4_noabort(i32 %78)
  store ptr %parent, ptr %parent102, align 8
  %bus = getelementptr inbounds %struct.device, ptr %call7.i.i, i32 0, i32 5
  %79 = ptrtoint ptr %bus to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr @tb_bus_type, ptr %bus, align 8
  %type = getelementptr inbounds %struct.device, ptr %call7.i.i, i32 0, i32 4
  %80 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %80)
  store ptr @tb_switch_type, ptr %type, align 4
  %groups = getelementptr inbounds %struct.device, ptr %call7.i.i, i32 0, i32 34
  %81 = ptrtoint ptr %groups to i32
  call void @__asan_store4_noabort(i32 %81)
  store ptr @switch_groups, ptr %groups, align 8
  %index = getelementptr inbounds %struct.tb, ptr %tb, i32 0, i32 7
  %82 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %index, align 8
  %84 = ptrtoint ptr %route_hi to i32
  call void @__asan_loadN_noabort(i32 %84, i32 8)
  %bf.load.i208 = load i64, ptr %route_hi, align 4
  %85 = lshr i64 %bf.load.i208, 1
  %shl.i = and i64 %85, 9223372032559808512
  %86 = ptrtoint ptr %route_lo to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %route_lo, align 8
  %conv2.i = zext i32 %87 to i64
  %or.i = or i64 %shl.i, %conv2.i
  %call108 = tail call i32 (ptr, ptr, ...) @dev_set_name(ptr noundef nonnull %call7.i.i, ptr noundef nonnull @.str.23, i32 noundef %83, i64 noundef %or.i) #16
  br label %cleanup

err_free_sw_ports:                                ; preds = %if.end7.i.i.err_free_sw_ports_crit_edge, %tb_switch_exceeds_max_depth.exit.err_free_sw_ports_crit_edge, %if.end12.err_free_sw_ports_crit_edge
  %ret.0 = phi i32 [ %call15, %if.end12.err_free_sw_ports_crit_edge ], [ -99, %tb_switch_exceeds_max_depth.exit.err_free_sw_ports_crit_edge ], [ -12, %if.end7.i.i.err_free_sw_ports_crit_edge ]
  %ports109 = getelementptr inbounds %struct.tb_switch, ptr %call7.i.i, i32 0, i32 2
  %88 = ptrtoint ptr %ports109 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %ports109, align 4
  tail call void @kfree(ptr noundef %89) #16
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #16
  %90 = inttoptr i32 %ret.0 to ptr
  br label %cleanup

cleanup:                                          ; preds = %err_free_sw_ports, %if.end99, %if.end7.cleanup_crit_edge, %if.then5
  %retval.0 = phi ptr [ %18, %if.then5 ], [ %90, %err_free_sw_ports ], [ %call7.i.i, %if.end99 ], [ inttoptr (i32 -12 to ptr), %if.end7.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_cfg_get_upstream_port(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_cfg_read(ptr noundef, ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @tb_dump_switch(ptr nocapture noundef readonly %tb, ptr nocapture noundef readonly %sw) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_dump_switch.__UNIQUE_ID_ddebug255, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_dump_switch, %if.then)) #16
          to label %do.body7 [label %if.then], !srcloc !446

if.then:                                          ; preds = %entry
  %config = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1
  %nhi = getelementptr inbounds %struct.tb, ptr %tb, i32 0, i32 2
  %0 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 44
  %generation.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 15
  %4 = ptrtoint ptr %generation.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %generation.i, align 4
  %switch.tableidx = add i32 %5, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %switch.tableidx)
  %6 = icmp ult i32 %switch.tableidx, 4
  br i1 %6, label %switch.lookup, label %if.then.tb_switch_generation_name.exit_crit_edge

if.then.tb_switch_generation_name.exit_crit_edge: ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_generation_name.exit

switch.lookup:                                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %switch.gep = getelementptr inbounds [4 x ptr], ptr @switch.table.tb_dump_switch, i32 0, i32 %switch.tableidx
  %7 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %7)
  %switch.load = load ptr, ptr %switch.gep, align 4
  br label %tb_switch_generation_name.exit

tb_switch_generation_name.exit:                   ; preds = %switch.lookup, %if.then.tb_switch_generation_name.exit_crit_edge
  %retval.0.i141 = phi ptr [ %switch.load, %switch.lookup ], [ @.str.123, %if.then.tb_switch_generation_name.exit_crit_edge ]
  %8 = ptrtoint ptr %config to i32
  call void @__asan_loadN_noabort(i32 %8, i32 2)
  %9 = load i16, ptr %config, align 1
  %conv = zext i16 %9 to i32
  %device_id = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 1
  %10 = ptrtoint ptr %device_id to i32
  call void @__asan_loadN_noabort(i32 %10, i32 2)
  %11 = load i16, ptr %device_id, align 1
  %conv4 = zext i16 %11 to i32
  %revision = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 2
  %12 = ptrtoint ptr %revision to i32
  call void @__asan_loadN_noabort(i32 %12, i32 4)
  %bf.load = load i32, ptr %revision, align 1
  %bf.clear = and i32 %bf.load, 255
  %thunderbolt_version = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %13 = ptrtoint ptr %thunderbolt_version to i32
  call void @__asan_loadN_noabort(i32 %13, i32 8)
  %bf.load5 = load i64, ptr %thunderbolt_version, align 1
  %14 = trunc i64 %bf.load5 to i32
  %bf.cast = and i32 %14, 255
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_dump_switch.__UNIQUE_ID_ddebug255, ptr noundef %dev, ptr noundef nonnull @.str.114, ptr noundef nonnull %retval.0.i141, i32 noundef %conv, i32 noundef %conv4, i32 noundef %bf.clear, i32 noundef %bf.cast) #16
  br label %do.body7

do.body7:                                         ; preds = %tb_switch_generation_name.exit, %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_dump_switch.__UNIQUE_ID_ddebug256, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_dump_switch, %if.then19)) #16
          to label %do.body28 [label %if.then19], !srcloc !446

if.then19:                                        ; preds = %do.body7
  call void @__sanitizer_cov_trace_pc() #18
  %nhi20 = getelementptr inbounds %struct.tb, ptr %tb, i32 0, i32 2
  %15 = ptrtoint ptr %nhi20 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %nhi20, align 4
  %pdev21 = getelementptr inbounds %struct.tb_nhi, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %pdev21 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %pdev21, align 4
  %dev22 = getelementptr inbounds %struct.pci_dev, ptr %18, i32 0, i32 44
  %max_port_number = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 2
  %19 = ptrtoint ptr %max_port_number to i32
  call void @__asan_loadN_noabort(i32 %19, i32 4)
  %bf.load23 = load i32, ptr %max_port_number, align 1
  %bf.lshr = lshr i32 %bf.load23, 12
  %bf.clear24 = and i32 %bf.lshr, 63
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_dump_switch.__UNIQUE_ID_ddebug256, ptr noundef %dev22, ptr noundef nonnull @.str.115, i32 noundef %bf.clear24) #16
  br label %do.body28

do.body28:                                        ; preds = %if.then19, %do.body7
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_dump_switch.__UNIQUE_ID_ddebug257, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_dump_switch, %if.then40)) #16
          to label %do.body47 [label %if.then40], !srcloc !446

if.then40:                                        ; preds = %do.body28
  call void @__sanitizer_cov_trace_pc() #18
  %nhi41 = getelementptr inbounds %struct.tb, ptr %tb, i32 0, i32 2
  %20 = ptrtoint ptr %nhi41 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %nhi41, align 4
  %pdev42 = getelementptr inbounds %struct.tb_nhi, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %pdev42 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pdev42, align 4
  %dev43 = getelementptr inbounds %struct.pci_dev, ptr %23, i32 0, i32 44
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_dump_switch.__UNIQUE_ID_ddebug257, ptr noundef %dev43, ptr noundef nonnull @.str.116) #16
  br label %do.body47

do.body47:                                        ; preds = %if.then40, %do.body28
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_dump_switch.__UNIQUE_ID_ddebug258, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_dump_switch, %if.then59)) #16
          to label %do.body86 [label %if.then59], !srcloc !446

if.then59:                                        ; preds = %do.body47
  call void @__sanitizer_cov_trace_pc() #18
  %nhi60 = getelementptr inbounds %struct.tb, ptr %tb, i32 0, i32 2
  %24 = ptrtoint ptr %nhi60 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %nhi60, align 4
  %pdev61 = getelementptr inbounds %struct.tb_nhi, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %pdev61 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %pdev61, align 4
  %dev62 = getelementptr inbounds %struct.pci_dev, ptr %27, i32 0, i32 44
  %upstream_port_number = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 2
  %28 = ptrtoint ptr %upstream_port_number to i32
  call void @__asan_loadN_noabort(i32 %28, i32 4)
  %bf.load63 = load i32, ptr %upstream_port_number, align 1
  %bf.lshr64 = lshr i32 %bf.load63, 18
  %bf.clear65 = and i32 %bf.lshr64, 63
  %bf.lshr67 = lshr i32 %bf.load63, 9
  %bf.clear68 = and i32 %bf.lshr67, 7
  %route_hi = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %29 = ptrtoint ptr %route_hi to i32
  call void @__asan_loadN_noabort(i32 %29, i32 8)
  %bf.load69 = load i64, ptr %route_hi, align 1
  %30 = lshr i64 %bf.load69, 1
  %shl = and i64 %30, 9223372032559808512
  %route_lo = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %31 = ptrtoint ptr %route_lo to i32
  call void @__asan_loadN_noabort(i32 %31, i32 4)
  %32 = load i32, ptr %route_lo, align 1
  %conv73 = zext i32 %32 to i64
  %or = or i64 %shl, %conv73
  %33 = lshr i64 %bf.load69, 32
  %34 = trunc i64 %33 to i32
  %35 = and i32 %34, 1
  %36 = trunc i64 %bf.load69 to i32
  %37 = lshr i32 %36, 24
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_dump_switch.__UNIQUE_ID_ddebug258, ptr noundef %dev62, ptr noundef nonnull @.str.117, i32 noundef %bf.clear65, i32 noundef %bf.clear68, i64 noundef %or, i32 noundef %35, i32 noundef %37) #16
  br label %do.body86

do.body86:                                        ; preds = %if.then59, %do.body47
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_dump_switch.__UNIQUE_ID_ddebug259, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_dump_switch, %if.then98)) #16
          to label %do.end111 [label %if.then98], !srcloc !446

if.then98:                                        ; preds = %do.body86
  call void @__sanitizer_cov_trace_pc() #18
  %nhi99 = getelementptr inbounds %struct.tb, ptr %tb, i32 0, i32 2
  %38 = ptrtoint ptr %nhi99 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %nhi99, align 4
  %pdev100 = getelementptr inbounds %struct.tb_nhi, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %pdev100 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %pdev100, align 4
  %dev101 = getelementptr inbounds %struct.pci_dev, ptr %41, i32 0, i32 44
  %__unknown1 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 2
  %42 = ptrtoint ptr %__unknown1 to i32
  call void @__asan_loadN_noabort(i32 %42, i32 4)
  %bf.load102 = load i32, ptr %__unknown1, align 1
  %bf.lshr103 = lshr i32 %bf.load102, 8
  %bf.clear104 = and i32 %bf.lshr103, 1
  %__unknown4 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %43 = ptrtoint ptr %__unknown4 to i32
  call void @__asan_loadN_noabort(i32 %43, i32 8)
  %bf.load105 = load i64, ptr %__unknown4, align 1
  %44 = trunc i64 %bf.load105 to i32
  %45 = lshr i32 %44, 8
  %bf.cast108 = and i32 %45, 255
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_dump_switch.__UNIQUE_ID_ddebug259, ptr noundef %dev101, ptr noundef nonnull @.str.118, i32 noundef %bf.clear104, i32 noundef %bf.cast108) #16
  br label %do.end111

do.end111:                                        ; preds = %if.then98, %do.body86
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_switch_find_vse_cap(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_initialize(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dev_set_name(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @tb_switch_alloc_safe_mode(ptr noundef %tb, ptr noundef %parent, i64 noundef %route) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 11) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 11), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 1168) #20
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %tb2 = getelementptr inbounds %struct.tb_switch, ptr %call7.i.i, i32 0, i32 5
  %1 = ptrtoint ptr %tb2 to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %tb, ptr %tb2, align 8
  %shr.i.i = lshr i64 %route, 32
  %conv.i.i = trunc i64 %shr.i.i to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv.i.i)
  %tobool.not.i.i = icmp eq i32 %conv.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %2 = tail call i32 @llvm.ctlz.i32(i32 %conv.i.i, i1 true) #16, !range !449
  %add.i.i = sub nuw nsw i32 64, %2
  %.pre = trunc i64 %route to i32
  br label %tb_route_length.exit

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %conv1.i.i = trunc i64 %route to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv1.i.i)
  %tobool.not.i5.i.i = icmp eq i32 %conv1.i.i, 0
  %3 = tail call i32 @llvm.ctlz.i32(i32 %conv1.i.i, i1 true) #16, !range !449
  %sub.i6.i.i = sub nuw nsw i32 32, %3
  %cond.i7.i.i = select i1 %tobool.not.i5.i.i, i32 0, i32 %sub.i6.i.i
  br label %tb_route_length.exit

tb_route_length.exit:                             ; preds = %if.end.i.i, %if.then.i.i
  %conv11.pre-phi = phi i32 [ %.pre, %if.then.i.i ], [ %conv1.i.i, %if.end.i.i ]
  %retval.0.i.i = phi i32 [ %add.i.i, %if.then.i.i ], [ %cond.i7.i.i, %if.end.i.i ]
  %depth = getelementptr inbounds %struct.tb_switch, ptr %call7.i.i, i32 0, i32 1, i32 2
  %4 = ptrtoint ptr %depth to i32
  call void @__asan_load4_noabort(i32 %4)
  %bf.load = load i32, ptr %depth, align 4
  %div1.lhs.trunc.i = shl nuw nsw i32 %retval.0.i.i, 6
  %5 = add nuw nsw i32 %div1.lhs.trunc.i, 448
  %bf.shl = and i32 %5, 3584
  %bf.clear = and i32 %bf.load, -3585
  %bf.set = or i32 %bf.shl, %bf.clear
  store i32 %bf.set, ptr %depth, align 4
  %route_hi = getelementptr inbounds %struct.tb_switch, ptr %call7.i.i, i32 0, i32 1, i32 4
  %6 = ptrtoint ptr %route_hi to i32
  call void @__asan_loadN_noabort(i32 %6, i32 8)
  %bf.load6 = load i64, ptr %route_hi, align 4
  %7 = shl i64 %route, 1
  %bf.shl8 = and i64 %7, -8589934592
  %bf.clear9 = and i64 %bf.load6, 8589934591
  %bf.set10 = or i64 %bf.clear9, %bf.shl8
  store i64 %bf.set10, ptr %route_hi, align 4
  %route_lo = getelementptr inbounds %struct.tb_switch, ptr %call7.i.i, i32 0, i32 1, i32 3
  %8 = ptrtoint ptr %route_lo to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %conv11.pre-phi, ptr %route_lo, align 8
  %safe_mode = getelementptr inbounds %struct.tb_switch, ptr %call7.i.i, i32 0, i32 24
  %9 = ptrtoint ptr %safe_mode to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 1, ptr %safe_mode, align 1
  tail call void @device_initialize(ptr noundef nonnull %call7.i.i) #16
  %parent14 = getelementptr inbounds %struct.device, ptr %call7.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %parent14 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %parent, ptr %parent14, align 8
  %bus = getelementptr inbounds %struct.device, ptr %call7.i.i, i32 0, i32 5
  %11 = ptrtoint ptr %bus to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr @tb_bus_type, ptr %bus, align 8
  %type = getelementptr inbounds %struct.device, ptr %call7.i.i, i32 0, i32 4
  %12 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr @tb_switch_type, ptr %type, align 4
  %groups = getelementptr inbounds %struct.device, ptr %call7.i.i, i32 0, i32 34
  %13 = ptrtoint ptr %groups to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr @switch_groups, ptr %groups, align 8
  %index = getelementptr inbounds %struct.tb, ptr %tb, i32 0, i32 7
  %14 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %index, align 8
  %16 = ptrtoint ptr %route_hi to i32
  call void @__asan_loadN_noabort(i32 %16, i32 8)
  %bf.load.i = load i64, ptr %route_hi, align 4
  %17 = lshr i64 %bf.load.i, 1
  %shl.i = and i64 %17, 9223372032559808512
  %18 = ptrtoint ptr %route_lo to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %route_lo, align 8
  %conv2.i = zext i32 %19 to i64
  %or.i = or i64 %shl.i, %conv2.i
  %call20 = tail call i32 (ptr, ptr, ...) @dev_set_name(ptr noundef nonnull %call7.i.i, ptr noundef nonnull @.str.23, i32 noundef %15, i64 noundef %or.i) #16
  br label %cleanup

cleanup:                                          ; preds = %tb_route_length.exit, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %call7.i.i, %tb_route_length.exit ], [ inttoptr (i32 -12 to ptr), %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_switch_configure(ptr noundef %sw) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %tb1 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %0 = ptrtoint ptr %tb1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tb1, align 8
  %route_hi.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %2 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %bf.load.i = load i64, ptr %route_hi.i, align 4
  %3 = lshr i64 %bf.load.i, 1
  %shl.i = and i64 %3, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %4 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %5 to i64
  %or.i = or i64 %shl.i, %conv2.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_switch_configure.__UNIQUE_ID_ddebug262, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_switch_configure, %if.then)) #16
          to label %do.end [label %if.then], !srcloc !446

if.then:                                          ; preds = %entry
  %nhi = getelementptr inbounds %struct.tb, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %9, i32 0, i32 44
  %10 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %10, i32 8)
  %bf.load = load i64, ptr %route_hi.i, align 4
  %11 = and i64 %bf.load, 4294967296
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %11)
  %bf.cast.not = icmp eq i64 %11, 0
  %cond = select i1 %bf.cast.not, ptr @.str.27, ptr @.str.26
  %shr.i.i = lshr i64 %bf.load.i, 33
  %conv.i.i = trunc i64 %shr.i.i to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv.i.i)
  %tobool.not.i.i = icmp eq i32 %conv.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %12 = tail call i32 @llvm.ctlz.i32(i32 %conv.i.i, i1 true) #16, !range !449
  %add.i.i = sub nuw nsw i32 64, %12
  br label %tb_route_length.exit

if.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not.i5.i.i = icmp eq i32 %5, 0
  %13 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 true) #16, !range !449
  %sub.i6.i.i = sub nuw nsw i32 32, %13
  %cond.i7.i.i = select i1 %tobool.not.i5.i.i, i32 0, i32 %sub.i6.i.i
  br label %tb_route_length.exit

tb_route_length.exit:                             ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %add.i.i, %if.then.i.i ], [ %cond.i7.i.i, %if.end.i.i ]
  %div1.lhs.trunc.i = add nuw nsw i32 %retval.0.i.i, 7
  %div123.i = lshr i32 %div1.lhs.trunc.i, 3
  %upstream_port_number = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 2
  %14 = ptrtoint ptr %upstream_port_number to i32
  call void @__asan_load4_noabort(i32 %14)
  %bf.load7 = load i32, ptr %upstream_port_number, align 4
  %bf.lshr8 = lshr i32 %bf.load7, 18
  %bf.clear9 = and i32 %bf.lshr8, 63
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_switch_configure.__UNIQUE_ID_ddebug262, ptr noundef %dev, ptr noundef nonnull @.str.25, ptr noundef nonnull %cond, i64 noundef %or.i, i32 noundef %div123.i, i32 noundef %bf.clear9) #16
  br label %do.end

do.end:                                           ; preds = %tb_route_length.exit, %entry
  %15 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %15, i32 8)
  %bf.load12 = load i64, ptr %route_hi.i, align 4
  %bf.set = or i64 %bf.load12, 4294967296
  store i64 %bf.set, ptr %route_hi.i, align 4
  %bf.cast1.i = and i64 %bf.load12, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i)
  %cmp.i = icmp eq i64 %bf.cast1.i, 32
  br i1 %cmp.i, label %if.then15, label %if.else

if.then15:                                        ; preds = %do.end
  %bf.clear18 = and i64 %bf.set, -16711681
  %bf.set19 = or i64 %bf.clear18, 2097152
  %16 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_storeN_noabort(i32 %16, i32 8)
  store i64 %bf.set19, ptr %route_hi.i, align 4
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 20
  %17 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool.not.i = icmp eq i8 %18, 0
  br i1 %tobool.not.i, label %tb_sw_write.exit, label %if.then15.cleanup_crit_edge

if.then15.cleanup_crit_edge:                      ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_sw_write.exit:                                 ; preds = %if.then15
  %add.ptr = getelementptr %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 2
  %19 = ptrtoint ptr %tb1 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %tb1, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %20, i32 0, i32 3
  %21 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %ctl.i, align 8
  %23 = lshr i64 %bf.load12, 1
  %shl.i.i = and i64 %23, 9223372032559808512
  %24 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %route_lo.i, align 8
  %conv2.i.i = zext i32 %25 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %call1.i = tail call i32 @tb_cfg_write(ptr noundef %22, ptr noundef %add.ptr, i64 noundef %or.i.i, i32 noundef 0, i32 noundef 2, i32 noundef 1, i32 noundef 4) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool22.not = icmp eq i32 %call1.i, 0
  br i1 %tobool22.not, label %if.end24, label %tb_sw_write.exit.cleanup_crit_edge

tb_sw_write.exit.cleanup_crit_edge:               ; preds = %tb_sw_write.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end24:                                         ; preds = %tb_sw_write.exit
  call void @__sanitizer_cov_trace_pc() #18
  %call25 = tail call i32 @usb4_switch_setup(ptr noundef %sw) #16
  br label %if.end62

if.else:                                          ; preds = %do.end
  %config10 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1
  %26 = ptrtoint ptr %config10 to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %config10, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 -32634, i16 %27)
  %cmp.not = icmp eq i16 %27, -32634
  br i1 %cmp.not, label %if.else.if.end43_crit_edge, label %do.body29

if.else.if.end43_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end43

do.body29:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %28 = ptrtoint ptr %tb1 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %tb1, align 8
  %nhi34 = getelementptr inbounds %struct.tb, ptr %29, i32 0, i32 2
  %30 = ptrtoint ptr %nhi34 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %nhi34, align 4
  %pdev35 = getelementptr inbounds %struct.tb_nhi, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %pdev35 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %pdev35, align 4
  %dev36 = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  %34 = lshr i64 %bf.load12, 1
  %shl.i96 = and i64 %34, 9223372032559808512
  %35 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %route_lo.i, align 8
  %conv2.i98 = zext i32 %36 to i64
  %or.i99 = or i64 %shl.i96, %conv2.i98
  %conv40 = zext i16 %27 to i32
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev36, ptr noundef nonnull @.str.28, i64 noundef %or.i99, i32 noundef %conv40) #19
  br label %if.end43

if.end43:                                         ; preds = %do.body29, %if.else.if.end43_crit_edge
  %cap_plug_events = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 16
  %37 = ptrtoint ptr %cap_plug_events to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %cap_plug_events, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool44.not = icmp eq i32 %38, 0
  br i1 %tobool44.not, label %do.body46, label %if.end58

do.body46:                                        ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #18
  %39 = ptrtoint ptr %tb1 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %tb1, align 8
  %nhi52 = getelementptr inbounds %struct.tb, ptr %40, i32 0, i32 2
  %41 = ptrtoint ptr %nhi52 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %nhi52, align 4
  %pdev53 = getelementptr inbounds %struct.tb_nhi, ptr %42, i32 0, i32 1
  %43 = ptrtoint ptr %pdev53 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %pdev53, align 4
  %dev54 = getelementptr inbounds %struct.pci_dev, ptr %44, i32 0, i32 44
  %45 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %45, i32 8)
  %bf.load.i101 = load i64, ptr %route_hi.i, align 4
  %46 = lshr i64 %bf.load.i101, 1
  %shl.i102 = and i64 %46, 9223372032559808512
  %47 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %route_lo.i, align 8
  %conv2.i104 = zext i32 %48 to i64
  %or.i105 = or i64 %shl.i102, %conv2.i104
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev54, ptr noundef nonnull @.str.30, i64 noundef %or.i105) #19
  br label %cleanup

if.end58:                                         ; preds = %if.end43
  %is_unplugged.i106 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 20
  %49 = ptrtoint ptr %is_unplugged.i106 to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %is_unplugged.i106, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %50)
  %tobool.not.i107 = icmp eq i8 %50, 0
  br i1 %tobool.not.i107, label %if.end.i117, label %if.end58.cleanup_crit_edge

if.end58.cleanup_crit_edge:                       ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i117:                                      ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr60 = getelementptr %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 2
  %51 = ptrtoint ptr %tb1 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %tb1, align 8
  %ctl.i109 = getelementptr inbounds %struct.tb, ptr %52, i32 0, i32 3
  %53 = ptrtoint ptr %ctl.i109 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %ctl.i109, align 8
  %55 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %55, i32 8)
  %bf.load.i.i111 = load i64, ptr %route_hi.i, align 4
  %56 = lshr i64 %bf.load.i.i111, 1
  %shl.i.i112 = and i64 %56, 9223372032559808512
  %57 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %route_lo.i, align 8
  %conv2.i.i114 = zext i32 %58 to i64
  %or.i.i115 = or i64 %shl.i.i112, %conv2.i.i114
  %call1.i116 = tail call i32 @tb_cfg_write(ptr noundef %54, ptr noundef %add.ptr60, i64 noundef %or.i.i115, i32 noundef 0, i32 noundef 2, i32 noundef 1, i32 noundef 3) #16
  br label %if.end62

if.end62:                                         ; preds = %if.end.i117, %if.end24
  %ret.0 = phi i32 [ %call25, %if.end24 ], [ %call1.i116, %if.end.i117 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool63.not = icmp eq i32 %ret.0, 0
  br i1 %tobool63.not, label %if.end65, label %if.end62.cleanup_crit_edge

if.end62.cleanup_crit_edge:                       ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end65:                                         ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #18
  %call66 = tail call fastcc i32 @tb_plug_events_active(ptr noundef %sw, i1 noundef zeroext true)
  br label %cleanup

cleanup:                                          ; preds = %if.end65, %if.end62.cleanup_crit_edge, %if.end58.cleanup_crit_edge, %do.body46, %tb_sw_write.exit.cleanup_crit_edge, %if.then15.cleanup_crit_edge
  %retval.0 = phi i32 [ %call66, %if.end65 ], [ -19, %do.body46 ], [ %call1.i, %tb_sw_write.exit.cleanup_crit_edge ], [ %ret.0, %if.end62.cleanup_crit_edge ], [ -19, %if.then15.cleanup_crit_edge ], [ -19, %if.end58.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb4_switch_setup(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @tb_plug_events_active(ptr noundef %sw, i1 noundef zeroext %active) unnamed_addr #0 align 64 {
entry:
  %data = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %data) #16
  %0 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %data, align 4, !annotation !447
  %enabled.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %1 = ptrtoint ptr %enabled.i to i32
  call void @__asan_loadN_noabort(i32 %1, i32 8)
  %bf.load.i = load i64, ptr %enabled.i, align 4
  %2 = and i64 %bf.load.i, 4294967296
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %2)
  %bf.cast.not.i = icmp eq i64 %2, 0
  %bf.cast1.i = and i64 %bf.load.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i)
  %cmp.i = icmp eq i64 %bf.cast1.i, 32
  %or.cond = or i1 %bf.cast.not.i, %cmp.i
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %bf.set = or i64 %bf.load.i, 4278190080
  %3 = ptrtoint ptr %enabled.i to i32
  call void @__asan_storeN_noabort(i32 %3, i32 8)
  store i64 %bf.set, ptr %enabled.i, align 4
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 20
  %4 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not.i = icmp eq i8 %5, 0
  br i1 %tobool.not.i, label %tb_sw_write.exit, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_sw_write.exit:                                 ; preds = %if.end
  %config = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1
  %add.ptr = getelementptr i32, ptr %config, i32 4
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %6 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ctl.i, align 8
  %10 = lshr i64 %bf.load.i, 1
  %shl.i.i = and i64 %10, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %11 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %12 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %call1.i = tail call i32 @tb_cfg_write(ptr noundef %9, ptr noundef %add.ptr, i64 noundef %or.i.i, i32 noundef 0, i32 noundef 2, i32 noundef 4, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not = icmp eq i32 %call1.i, 0
  br i1 %tobool.not, label %if.end5, label %tb_sw_write.exit.cleanup_crit_edge

tb_sw_write.exit.cleanup_crit_edge:               ; preds = %tb_sw_write.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end5:                                          ; preds = %tb_sw_write.exit
  %cap_plug_events = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 16
  %13 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool.not.i33 = icmp eq i8 %14, 0
  br i1 %tobool.not.i33, label %tb_sw_read.exit, label %if.end5.cleanup_crit_edge

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_sw_read.exit:                                  ; preds = %if.end5
  %15 = ptrtoint ptr %cap_plug_events to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %cap_plug_events, align 8
  %add = add i32 %16, 1
  %17 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %tb.i, align 8
  %ctl.i35 = getelementptr inbounds %struct.tb, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %ctl.i35 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %ctl.i35, align 8
  %21 = ptrtoint ptr %enabled.i to i32
  call void @__asan_loadN_noabort(i32 %21, i32 8)
  %bf.load.i.i37 = load i64, ptr %enabled.i, align 4
  %22 = lshr i64 %bf.load.i.i37, 1
  %shl.i.i38 = and i64 %22, 9223372032559808512
  %23 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i40 = zext i32 %24 to i64
  %or.i.i41 = or i64 %shl.i.i38, %conv2.i.i40
  %call1.i42 = call i32 @tb_cfg_read(ptr noundef %20, ptr noundef nonnull %data, i64 noundef %or.i.i41, i32 noundef 0, i32 noundef 2, i32 noundef %add, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i42)
  %tobool7.not = icmp eq i32 %call1.i42, 0
  br i1 %tobool7.not, label %if.end9, label %tb_sw_read.exit.cleanup_crit_edge

tb_sw_read.exit.cleanup_crit_edge:                ; preds = %tb_sw_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end9:                                          ; preds = %tb_sw_read.exit
  %25 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %data, align 4
  br i1 %active, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.end9
  %and = and i32 %26, -125
  %27 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %and, ptr %data, align 4
  %device_id = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 1
  %28 = ptrtoint ptr %device_id to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %device_id, align 2
  %30 = zext i16 %29 to i64
  call void @__sanitizer_cov_trace_switch(i64 %30, ptr @__sancov_gen_cov_switch_values.202)
  switch i16 %29, label %sw.default [
    i16 5395, label %if.then11.if.end14_crit_edge
    i16 5402, label %if.then11.if.end14_crit_edge63
    i16 5449, label %if.then11.if.end14_crit_edge64
  ]

if.then11.if.end14_crit_edge64:                   ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

if.then11.if.end14_crit_edge63:                   ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

if.then11.if.end14_crit_edge:                     ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

sw.default:                                       ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #18
  %or = or i32 %and, 4
  %31 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or, ptr %data, align 4
  br label %if.end14

if.else:                                          ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  %or13 = or i32 %26, 124
  %32 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or13, ptr %data, align 4
  br label %if.end14

if.end14:                                         ; preds = %if.else, %sw.default, %if.then11.if.end14_crit_edge, %if.then11.if.end14_crit_edge63, %if.then11.if.end14_crit_edge64
  %33 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool.not.i46 = icmp eq i8 %34, 0
  br i1 %tobool.not.i46, label %if.end.i56, label %if.end14.cleanup_crit_edge

if.end14.cleanup_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i56:                                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  %35 = ptrtoint ptr %cap_plug_events to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cap_plug_events, align 8
  %add16 = add i32 %36, 1
  %37 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %tb.i, align 8
  %ctl.i48 = getelementptr inbounds %struct.tb, ptr %38, i32 0, i32 3
  %39 = ptrtoint ptr %ctl.i48 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %ctl.i48, align 8
  %41 = ptrtoint ptr %enabled.i to i32
  call void @__asan_loadN_noabort(i32 %41, i32 8)
  %bf.load.i.i50 = load i64, ptr %enabled.i, align 4
  %42 = lshr i64 %bf.load.i.i50, 1
  %shl.i.i51 = and i64 %42, 9223372032559808512
  %43 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i53 = zext i32 %44 to i64
  %or.i.i54 = or i64 %shl.i.i51, %conv2.i.i53
  %call1.i55 = call i32 @tb_cfg_write(ptr noundef %40, ptr noundef nonnull %data, i64 noundef %or.i.i54, i32 noundef 0, i32 noundef 2, i32 noundef %add16, i32 noundef 1) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end.i56, %if.end14.cleanup_crit_edge, %tb_sw_read.exit.cleanup_crit_edge, %if.end5.cleanup_crit_edge, %tb_sw_write.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %call1.i, %tb_sw_write.exit.cleanup_crit_edge ], [ %call1.i42, %tb_sw_read.exit.cleanup_crit_edge ], [ %call1.i55, %if.end.i56 ], [ -19, %if.end14.cleanup_crit_edge ], [ -19, %if.end.cleanup_crit_edge ], [ -19, %if.end5.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %data) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_switch_lane_bonding_enable(ptr noundef %sw) local_unnamed_addr #0 align 64 {
entry:
  %phy.i126 = alloca i32, align 4
  %phy.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %parent1 = getelementptr inbounds %struct.device, ptr %sw, i32 0, i32 1
  %0 = ptrtoint ptr %parent1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent1, align 8
  %type.i.i = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %3, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %1, ptr null
  %route_hi.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %4 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %4, i32 8)
  %bf.load.i = load i64, ptr %route_hi.i, align 4
  %5 = lshr i64 %bf.load.i, 1
  %shl.i = and i64 %5, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %6 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %7 to i64
  %or.i = or i64 %shl.i, %conv2.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i)
  %tobool.not = icmp eq i64 %or.i, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %ports.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 2
  %8 = ptrtoint ptr %ports.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ports.i.i, align 4
  %upstream_port_number.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 2
  %10 = ptrtoint ptr %upstream_port_number.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %bf.load.i.i = load i32, ptr %upstream_port_number.i.i, align 4
  %bf.lshr.i.i = lshr i32 %bf.load.i.i, 18
  %bf.clear.i.i = and i32 %bf.lshr.i.i, 63
  %dual_link_port.i = getelementptr %struct.tb_port, ptr %9, i32 %bf.clear.i.i, i32 12
  %11 = ptrtoint ptr %dual_link_port.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dual_link_port.i, align 4
  %tobool.not.i = icmp eq ptr %12, null
  br i1 %tobool.not.i, label %if.end.cleanup_crit_edge, label %lor.lhs.false.i

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false.i:                                  ; preds = %if.end
  %remote.i = getelementptr inbounds %struct.tb_port, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %remote.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %remote.i, align 4
  %tobool2.not.i = icmp eq ptr %14, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.cleanup_crit_edge, label %if.end.i

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i:                                         ; preds = %lor.lhs.false.i
  %bf.cast1.i.i = and i64 %bf.load.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i.i)
  %cmp.i.i115 = icmp eq i64 %bf.cast1.i.i, 32
  br i1 %cmp.i.i115, label %if.then4.i, label %tb_switch_lane_bonding_possible.exit

if.then4.i:                                       ; preds = %if.end.i
  %call5.i = tail call zeroext i1 @usb4_switch_lane_bonding_possible(ptr noundef %sw) #16
  br i1 %call5.i, label %if.then4.i.if.end5_crit_edge, label %if.then4.i.cleanup_crit_edge

if.then4.i.cleanup_crit_edge:                     ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then4.i.if.end5_crit_edge:                     ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

tb_switch_lane_bonding_possible.exit:             ; preds = %if.end.i
  %call7.i = tail call zeroext i1 @tb_lc_lane_bonding_possible(ptr noundef %sw) #16
  br i1 %call7.i, label %tb_switch_lane_bonding_possible.exit.if.end5_crit_edge, label %tb_switch_lane_bonding_possible.exit.cleanup_crit_edge

tb_switch_lane_bonding_possible.exit.cleanup_crit_edge: ; preds = %tb_switch_lane_bonding_possible.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_switch_lane_bonding_possible.exit.if.end5_crit_edge: ; preds = %tb_switch_lane_bonding_possible.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

if.end5:                                          ; preds = %tb_switch_lane_bonding_possible.exit.if.end5_crit_edge, %if.then4.i.if.end5_crit_edge
  %15 = ptrtoint ptr %ports.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ports.i.i, align 4
  %17 = ptrtoint ptr %upstream_port_number.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %bf.load.i117 = load i32, ptr %upstream_port_number.i.i, align 4
  %bf.lshr.i = lshr i32 %bf.load.i117, 18
  %bf.clear.i = and i32 %bf.lshr.i, 63
  %arrayidx.i = getelementptr %struct.tb_port, ptr %16, i32 %bf.clear.i
  %depth.i = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 1, i32 2
  %18 = ptrtoint ptr %depth.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %bf.load.i118 = load i32, ptr %depth.i, align 4
  %19 = lshr i32 %bf.load.i118, 6
  %mul.i = and i32 %19, 56
  %sh_prom.i = zext i32 %mul.i to i64
  %shr.i = lshr i64 %or.i, %sh_prom.i
  %conv.i = trunc i64 %shr.i to i32
  %conv1.i = and i32 %conv.i, 255
  %bf.lshr4.i = lshr i32 %bf.load.i118, 12
  %bf.clear5.i = and i32 %bf.lshr4.i, 63
  call void @__sanitizer_cov_trace_cmp4(i32 %conv1.i, i32 %bf.clear5.i)
  %cmp.i = icmp ugt i32 %conv1.i, %bf.clear5.i
  br i1 %cmp.i, label %do.end.i, label %if.end27.i, !prof !448

do.end.i:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.103, i32 noundef 538, i32 noundef 9, ptr noundef null) #16
  br label %tb_port_at.exit

if.end27.i:                                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  %ports.i119 = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 2
  %20 = ptrtoint ptr %ports.i119 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %ports.i119, align 4
  %arrayidx.i120 = getelementptr %struct.tb_port, ptr %21, i32 %conv1.i
  br label %tb_port_at.exit

tb_port_at.exit:                                  ; preds = %if.end27.i, %do.end.i
  %retval.0.i121 = phi ptr [ null, %do.end.i ], [ %arrayidx.i120, %if.end27.i ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %phy.i) #16
  %22 = ptrtoint ptr %phy.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 -1, ptr %phy.i, align 4, !annotation !447
  %cap_phy.i = getelementptr %struct.tb_port, ptr %16, i32 %bf.clear.i, i32 4
  %23 = ptrtoint ptr %cap_phy.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %cap_phy.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool.not.i122 = icmp eq i32 %24, 0
  br i1 %tobool.not.i122, label %tb_port_at.exit.tb_port_is_width_supported.exit.thread_crit_edge, label %if.end.i123

tb_port_at.exit.tb_port_is_width_supported.exit.thread_crit_edge: ; preds = %tb_port_at.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_is_width_supported.exit.thread

if.end.i123:                                      ; preds = %tb_port_at.exit
  %sw.i.i = getelementptr %struct.tb_port, ptr %16, i32 %bf.clear.i, i32 1
  %25 = ptrtoint ptr %sw.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %sw.i.i, align 4
  %is_unplugged.i.i = getelementptr inbounds %struct.tb_switch, ptr %26, i32 0, i32 20
  %27 = ptrtoint ptr %is_unplugged.i.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %is_unplugged.i.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %28)
  %tobool.not.i.i = icmp eq i8 %28, 0
  br i1 %tobool.not.i.i, label %tb_port_read.exit.i, label %if.end.i123.tb_port_is_width_supported.exit.thread_crit_edge

if.end.i123.tb_port_is_width_supported.exit.thread_crit_edge: ; preds = %if.end.i123
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_is_width_supported.exit.thread

tb_port_read.exit.i:                              ; preds = %if.end.i123
  %tb.i.i = getelementptr inbounds %struct.tb_switch, ptr %26, i32 0, i32 5
  %29 = ptrtoint ptr %tb.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %tb.i.i, align 8
  %ctl.i.i = getelementptr inbounds %struct.tb, ptr %30, i32 0, i32 3
  %31 = ptrtoint ptr %ctl.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %ctl.i.i, align 8
  %route_hi.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %26, i32 0, i32 1, i32 4
  %33 = ptrtoint ptr %route_hi.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %33, i32 8)
  %bf.load.i.i.i = load i64, ptr %route_hi.i.i.i, align 4
  %34 = lshr i64 %bf.load.i.i.i, 1
  %shl.i.i.i = and i64 %34, 9223372032559808512
  %route_lo.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %26, i32 0, i32 1, i32 3
  %35 = ptrtoint ptr %route_lo.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %route_lo.i.i.i, align 8
  %conv2.i.i.i = zext i32 %36 to i64
  %or.i.i.i = or i64 %shl.i.i.i, %conv2.i.i.i
  %port3.i.i = getelementptr %struct.tb_port, ptr %16, i32 %bf.clear.i, i32 9
  %37 = ptrtoint ptr %port3.i.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %port3.i.i, align 4
  %conv.i.i = zext i8 %38 to i32
  %call4.i.i = call i32 @tb_cfg_read(ptr noundef %32, ptr noundef nonnull %phy.i, i64 noundef %or.i.i.i, i32 noundef %conv.i.i, i32 noundef 1, i32 noundef %24, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool2.not.i124 = icmp eq i32 %call4.i.i, 0
  br i1 %tobool2.not.i124, label %tb_port_is_width_supported.exit, label %tb_port_read.exit.i.tb_port_is_width_supported.exit.thread_crit_edge

tb_port_read.exit.i.tb_port_is_width_supported.exit.thread_crit_edge: ; preds = %tb_port_read.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_is_width_supported.exit.thread

tb_port_is_width_supported.exit.thread:           ; preds = %tb_port_read.exit.i.tb_port_is_width_supported.exit.thread_crit_edge, %if.end.i123.tb_port_is_width_supported.exit.thread_crit_edge, %tb_port_at.exit.tb_port_is_width_supported.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %phy.i) #16
  br label %cleanup

tb_port_is_width_supported.exit:                  ; preds = %tb_port_read.exit.i
  %39 = ptrtoint ptr %phy.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %phy.i, align 4
  %41 = and i32 %40, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool6.i.not = icmp eq i32 %41, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %phy.i) #16
  br i1 %tobool6.i.not, label %tb_port_is_width_supported.exit.cleanup_crit_edge, label %lor.lhs.false

tb_port_is_width_supported.exit.cleanup_crit_edge: ; preds = %tb_port_is_width_supported.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false:                                    ; preds = %tb_port_is_width_supported.exit
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %phy.i126) #16
  %42 = ptrtoint ptr %phy.i126 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 -1, ptr %phy.i126, align 4, !annotation !447
  %cap_phy.i127 = getelementptr inbounds %struct.tb_port, ptr %retval.0.i121, i32 0, i32 4
  %43 = ptrtoint ptr %cap_phy.i127 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %cap_phy.i127, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool.not.i128 = icmp eq i32 %44, 0
  br i1 %tobool.not.i128, label %lor.lhs.false.tb_port_is_width_supported.exit149.thread_crit_edge, label %if.end.i132

lor.lhs.false.tb_port_is_width_supported.exit149.thread_crit_edge: ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_is_width_supported.exit149.thread

if.end.i132:                                      ; preds = %lor.lhs.false
  %sw.i.i129 = getelementptr inbounds %struct.tb_port, ptr %retval.0.i121, i32 0, i32 1
  %45 = ptrtoint ptr %sw.i.i129 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %sw.i.i129, align 4
  %is_unplugged.i.i130 = getelementptr inbounds %struct.tb_switch, ptr %46, i32 0, i32 20
  %47 = ptrtoint ptr %is_unplugged.i.i130 to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %is_unplugged.i.i130, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %48)
  %tobool.not.i.i131 = icmp eq i8 %48, 0
  br i1 %tobool.not.i.i131, label %tb_port_read.exit.i145, label %if.end.i132.tb_port_is_width_supported.exit149.thread_crit_edge

if.end.i132.tb_port_is_width_supported.exit149.thread_crit_edge: ; preds = %if.end.i132
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_is_width_supported.exit149.thread

tb_port_read.exit.i145:                           ; preds = %if.end.i132
  %tb.i.i133 = getelementptr inbounds %struct.tb_switch, ptr %46, i32 0, i32 5
  %49 = ptrtoint ptr %tb.i.i133 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %tb.i.i133, align 8
  %ctl.i.i134 = getelementptr inbounds %struct.tb, ptr %50, i32 0, i32 3
  %51 = ptrtoint ptr %ctl.i.i134 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %ctl.i.i134, align 8
  %route_hi.i.i.i135 = getelementptr inbounds %struct.tb_switch, ptr %46, i32 0, i32 1, i32 4
  %53 = ptrtoint ptr %route_hi.i.i.i135 to i32
  call void @__asan_loadN_noabort(i32 %53, i32 8)
  %bf.load.i.i.i136 = load i64, ptr %route_hi.i.i.i135, align 4
  %54 = lshr i64 %bf.load.i.i.i136, 1
  %shl.i.i.i137 = and i64 %54, 9223372032559808512
  %route_lo.i.i.i138 = getelementptr inbounds %struct.tb_switch, ptr %46, i32 0, i32 1, i32 3
  %55 = ptrtoint ptr %route_lo.i.i.i138 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %route_lo.i.i.i138, align 8
  %conv2.i.i.i139 = zext i32 %56 to i64
  %or.i.i.i140 = or i64 %shl.i.i.i137, %conv2.i.i.i139
  %port3.i.i141 = getelementptr inbounds %struct.tb_port, ptr %retval.0.i121, i32 0, i32 9
  %57 = ptrtoint ptr %port3.i.i141 to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %port3.i.i141, align 4
  %conv.i.i142 = zext i8 %58 to i32
  %call4.i.i143 = call i32 @tb_cfg_read(ptr noundef %52, ptr noundef nonnull %phy.i126, i64 noundef %or.i.i.i140, i32 noundef %conv.i.i142, i32 noundef 1, i32 noundef %44, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i143)
  %tobool2.not.i144 = icmp eq i32 %call4.i.i143, 0
  br i1 %tobool2.not.i144, label %tb_port_is_width_supported.exit149, label %tb_port_read.exit.i145.tb_port_is_width_supported.exit149.thread_crit_edge

tb_port_read.exit.i145.tb_port_is_width_supported.exit149.thread_crit_edge: ; preds = %tb_port_read.exit.i145
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_is_width_supported.exit149.thread

tb_port_is_width_supported.exit149.thread:        ; preds = %tb_port_read.exit.i145.tb_port_is_width_supported.exit149.thread_crit_edge, %if.end.i132.tb_port_is_width_supported.exit149.thread_crit_edge, %lor.lhs.false.tb_port_is_width_supported.exit149.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %phy.i126) #16
  br label %cleanup

tb_port_is_width_supported.exit149:               ; preds = %tb_port_read.exit.i145
  %59 = ptrtoint ptr %phy.i126 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %phy.i126, align 4
  %61 = and i32 %60, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %61)
  %tobool6.i146.not = icmp eq i32 %61, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %phy.i126) #16
  br i1 %tobool6.i146.not, label %tb_port_is_width_supported.exit149.cleanup_crit_edge, label %if.end11

tb_port_is_width_supported.exit149.cleanup_crit_edge: ; preds = %tb_port_is_width_supported.exit149
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end11:                                         ; preds = %tb_port_is_width_supported.exit149
  %call12 = call i32 @tb_port_lane_bonding_enable(ptr noundef %arrayidx.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %if.end22, label %do.body

do.body:                                          ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  %62 = ptrtoint ptr %sw.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %sw.i.i, align 4
  %tb = getelementptr inbounds %struct.tb_switch, ptr %63, i32 0, i32 5
  %64 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %tb, align 8
  %nhi = getelementptr inbounds %struct.tb, ptr %65, i32 0, i32 2
  %66 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %67, i32 0, i32 1
  %68 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %pdev, align 4
  %dev17 = getelementptr inbounds %struct.pci_dev, ptr %69, i32 0, i32 44
  %route_hi.i150 = getelementptr inbounds %struct.tb_switch, ptr %63, i32 0, i32 1, i32 4
  %70 = ptrtoint ptr %route_hi.i150 to i32
  call void @__asan_loadN_noabort(i32 %70, i32 8)
  %bf.load.i151 = load i64, ptr %route_hi.i150, align 4
  %71 = lshr i64 %bf.load.i151, 1
  %shl.i152 = and i64 %71, 9223372032559808512
  %route_lo.i153 = getelementptr inbounds %struct.tb_switch, ptr %63, i32 0, i32 1, i32 3
  %72 = ptrtoint ptr %route_lo.i153 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %route_lo.i153, align 8
  %conv2.i154 = zext i32 %73 to i64
  %or.i155 = or i64 %shl.i152, %conv2.i154
  %74 = ptrtoint ptr %port3.i.i to i32
  call void @__asan_load1_noabort(i32 %74)
  %75 = load i8, ptr %port3.i.i, align 4
  %conv = zext i8 %75 to i32
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev17, ptr noundef nonnull @.str.32, i64 noundef %or.i155, i32 noundef %conv) #19
  br label %cleanup

if.end22:                                         ; preds = %if.end11
  %call23 = call i32 @tb_port_lane_bonding_enable(ptr noundef %retval.0.i121)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %tobool24.not = icmp eq i32 %call23, 0
  br i1 %tobool24.not, label %if.end42, label %do.body26

do.body26:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  %76 = ptrtoint ptr %sw.i.i129 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %sw.i.i129, align 4
  %tb32 = getelementptr inbounds %struct.tb_switch, ptr %77, i32 0, i32 5
  %78 = ptrtoint ptr %tb32 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %tb32, align 8
  %nhi33 = getelementptr inbounds %struct.tb, ptr %79, i32 0, i32 2
  %80 = ptrtoint ptr %nhi33 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %nhi33, align 4
  %pdev34 = getelementptr inbounds %struct.tb_nhi, ptr %81, i32 0, i32 1
  %82 = ptrtoint ptr %pdev34 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %pdev34, align 4
  %dev35 = getelementptr inbounds %struct.pci_dev, ptr %83, i32 0, i32 44
  %route_hi.i156 = getelementptr inbounds %struct.tb_switch, ptr %77, i32 0, i32 1, i32 4
  %84 = ptrtoint ptr %route_hi.i156 to i32
  call void @__asan_loadN_noabort(i32 %84, i32 8)
  %bf.load.i157 = load i64, ptr %route_hi.i156, align 4
  %85 = lshr i64 %bf.load.i157, 1
  %shl.i158 = and i64 %85, 9223372032559808512
  %route_lo.i159 = getelementptr inbounds %struct.tb_switch, ptr %77, i32 0, i32 1, i32 3
  %86 = ptrtoint ptr %route_lo.i159 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %route_lo.i159, align 8
  %conv2.i160 = zext i32 %87 to i64
  %or.i161 = or i64 %shl.i158, %conv2.i160
  %88 = ptrtoint ptr %port3.i.i141 to i32
  call void @__asan_load1_noabort(i32 %88)
  %89 = load i8, ptr %port3.i.i141, align 4
  %conv39 = zext i8 %89 to i32
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev35, ptr noundef nonnull @.str.32, i64 noundef %or.i161, i32 noundef %conv39) #19
  call void @tb_port_lane_bonding_disable(ptr noundef %arrayidx.i)
  br label %cleanup

if.end42:                                         ; preds = %if.end22
  %call43 = call i32 @tb_port_wait_for_link_width(ptr noundef %retval.0.i121, i32 noundef 2, i32 noundef 100)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call43)
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %if.end62, label %do.body46

do.body46:                                        ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #18
  %90 = ptrtoint ptr %sw.i.i129 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %sw.i.i129, align 4
  %tb52 = getelementptr inbounds %struct.tb_switch, ptr %91, i32 0, i32 5
  %92 = ptrtoint ptr %tb52 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %tb52, align 8
  %nhi53 = getelementptr inbounds %struct.tb, ptr %93, i32 0, i32 2
  %94 = ptrtoint ptr %nhi53 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %nhi53, align 4
  %pdev54 = getelementptr inbounds %struct.tb_nhi, ptr %95, i32 0, i32 1
  %96 = ptrtoint ptr %pdev54 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %pdev54, align 4
  %dev55 = getelementptr inbounds %struct.pci_dev, ptr %97, i32 0, i32 44
  %route_hi.i162 = getelementptr inbounds %struct.tb_switch, ptr %91, i32 0, i32 1, i32 4
  %98 = ptrtoint ptr %route_hi.i162 to i32
  call void @__asan_loadN_noabort(i32 %98, i32 8)
  %bf.load.i163 = load i64, ptr %route_hi.i162, align 4
  %99 = lshr i64 %bf.load.i163, 1
  %shl.i164 = and i64 %99, 9223372032559808512
  %route_lo.i165 = getelementptr inbounds %struct.tb_switch, ptr %91, i32 0, i32 1, i32 3
  %100 = ptrtoint ptr %route_lo.i165 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %route_lo.i165, align 8
  %conv2.i166 = zext i32 %101 to i64
  %or.i167 = or i64 %shl.i164, %conv2.i166
  %102 = ptrtoint ptr %port3.i.i141 to i32
  call void @__asan_load1_noabort(i32 %102)
  %103 = load i8, ptr %port3.i.i141, align 4
  %conv59 = zext i8 %103 to i32
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev55, ptr noundef nonnull @.str.37, i64 noundef %or.i167, i32 noundef %conv59) #19
  br label %cleanup

if.end62:                                         ; preds = %if.end42
  %call.i = call fastcc i32 @tb_port_do_update_credits(ptr noundef %retval.0.i121) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i168 = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i168, label %if.end.i170, label %if.end62.tb_port_update_credits.exit_crit_edge

if.end62.tb_port_update_credits.exit_crit_edge:   ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_update_credits.exit

if.end.i170:                                      ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #18
  %dual_link_port.i169 = getelementptr inbounds %struct.tb_port, ptr %retval.0.i121, i32 0, i32 12
  %104 = ptrtoint ptr %dual_link_port.i169 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %dual_link_port.i169, align 4
  %call1.i = call fastcc i32 @tb_port_do_update_credits(ptr noundef %105) #16
  br label %tb_port_update_credits.exit

tb_port_update_credits.exit:                      ; preds = %if.end.i170, %if.end62.tb_port_update_credits.exit_crit_edge
  %call.i172 = call fastcc i32 @tb_port_do_update_credits(ptr noundef %arrayidx.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i172)
  %tobool.not.i173 = icmp eq i32 %call.i172, 0
  br i1 %tobool.not.i173, label %if.end.i176, label %tb_port_update_credits.exit.tb_port_update_credits.exit178_crit_edge

tb_port_update_credits.exit.tb_port_update_credits.exit178_crit_edge: ; preds = %tb_port_update_credits.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_update_credits.exit178

if.end.i176:                                      ; preds = %tb_port_update_credits.exit
  call void @__sanitizer_cov_trace_pc() #18
  %dual_link_port.i174 = getelementptr %struct.tb_port, ptr %16, i32 %bf.clear.i, i32 12
  %106 = ptrtoint ptr %dual_link_port.i174 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %dual_link_port.i174, align 4
  %call1.i175 = call fastcc i32 @tb_port_do_update_credits(ptr noundef %107) #16
  br label %tb_port_update_credits.exit178

tb_port_update_credits.exit178:                   ; preds = %if.end.i176, %tb_port_update_credits.exit.tb_port_update_credits.exit178_crit_edge
  %call65 = call fastcc i32 @tb_switch_update_link_attributes(ptr noundef %sw)
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_switch_lane_bonding_enable.__UNIQUE_ID_ddebug264, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_switch_lane_bonding_enable, %if.then72)) #16
          to label %cleanup [label %if.then72], !srcloc !446

if.then72:                                        ; preds = %tb_port_update_credits.exit178
  call void @__sanitizer_cov_trace_pc() #18
  %tb73 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %108 = ptrtoint ptr %tb73 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %tb73, align 8
  %nhi74 = getelementptr inbounds %struct.tb, ptr %109, i32 0, i32 2
  %110 = ptrtoint ptr %nhi74 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %nhi74, align 4
  %pdev75 = getelementptr inbounds %struct.tb_nhi, ptr %111, i32 0, i32 1
  %112 = ptrtoint ptr %pdev75 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %pdev75, align 4
  %dev76 = getelementptr inbounds %struct.pci_dev, ptr %113, i32 0, i32 44
  %114 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %114, i32 8)
  %bf.load.i180 = load i64, ptr %route_hi.i, align 4
  %115 = lshr i64 %bf.load.i180, 1
  %shl.i181 = and i64 %115, 9223372032559808512
  %116 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load i32, ptr %route_lo.i, align 8
  %conv2.i183 = zext i32 %117 to i64
  %or.i184 = or i64 %shl.i181, %conv2.i183
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_switch_lane_bonding_enable.__UNIQUE_ID_ddebug264, ptr noundef %dev76, ptr noundef nonnull @.str.39, i64 noundef %or.i184) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then72, %tb_port_update_credits.exit178, %do.body46, %do.body26, %do.body, %tb_port_is_width_supported.exit149.cleanup_crit_edge, %tb_port_is_width_supported.exit149.thread, %tb_port_is_width_supported.exit.cleanup_crit_edge, %tb_port_is_width_supported.exit.thread, %tb_switch_lane_bonding_possible.exit.cleanup_crit_edge, %if.then4.i.cleanup_crit_edge, %lor.lhs.false.i.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call12, %do.body ], [ %call23, %do.body26 ], [ %call43, %do.body46 ], [ 0, %entry.cleanup_crit_edge ], [ 0, %tb_switch_lane_bonding_possible.exit.cleanup_crit_edge ], [ 0, %tb_port_is_width_supported.exit149.cleanup_crit_edge ], [ 0, %tb_port_is_width_supported.exit.cleanup_crit_edge ], [ 0, %if.then72 ], [ 0, %if.then4.i.cleanup_crit_edge ], [ 0, %tb_port_is_width_supported.exit.thread ], [ 0, %tb_port_is_width_supported.exit149.thread ], [ 0, %tb_port_update_credits.exit178 ], [ 0, %lor.lhs.false.i.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @tb_switch_update_link_attributes(ptr noundef %sw) unnamed_addr #0 align 64 {
entry:
  %val.i45 = alloca i32, align 4
  %val.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %route_hi.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %0 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %0, i32 8)
  %bf.load.i = load i64, ptr %route_hi.i, align 4
  %1 = lshr i64 %bf.load.i, 1
  %shl.i = and i64 %1, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %2 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %3 to i64
  %or.i = or i64 %shl.i, %conv2.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i)
  %tobool.not = icmp eq i64 %or.i, 0
  %4 = and i64 %bf.load.i, 4294967296
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %4)
  %bf.cast.not.i = icmp eq i64 %4, 0
  %or.cond = select i1 %tobool.not, i1 true, i1 %bf.cast.not.i
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %ports.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 2
  %5 = ptrtoint ptr %ports.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ports.i, align 4
  %upstream_port_number.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 2
  %7 = ptrtoint ptr %upstream_port_number.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %bf.load.i44 = load i32, ptr %upstream_port_number.i, align 4
  %bf.lshr.i = lshr i32 %bf.load.i44, 18
  %bf.clear.i = and i32 %bf.lshr.i, 63
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i) #16
  %8 = ptrtoint ptr %val.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -1, ptr %val.i, align 4, !annotation !447
  %cap_phy.i = getelementptr %struct.tb_port, ptr %6, i32 %bf.clear.i, i32 4
  %9 = ptrtoint ptr %cap_phy.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cap_phy.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not.i = icmp eq i32 %10, 0
  br i1 %tobool.not.i, label %if.end.tb_port_get_link_speed.exit.thread_crit_edge, label %if.end.i

if.end.tb_port_get_link_speed.exit.thread_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_get_link_speed.exit.thread

if.end.i:                                         ; preds = %if.end
  %sw.i.i = getelementptr %struct.tb_port, ptr %6, i32 %bf.clear.i, i32 1
  %11 = ptrtoint ptr %sw.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %sw.i.i, align 4
  %is_unplugged.i.i = getelementptr inbounds %struct.tb_switch, ptr %12, i32 0, i32 20
  %13 = ptrtoint ptr %is_unplugged.i.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %is_unplugged.i.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool.not.i.i = icmp eq i8 %14, 0
  br i1 %tobool.not.i.i, label %tb_port_read.exit.i, label %if.end.i.tb_port_get_link_speed.exit.thread_crit_edge

if.end.i.tb_port_get_link_speed.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_get_link_speed.exit.thread

tb_port_read.exit.i:                              ; preds = %if.end.i
  %add.i = add i32 %10, 1
  %tb.i.i = getelementptr inbounds %struct.tb_switch, ptr %12, i32 0, i32 5
  %15 = ptrtoint ptr %tb.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %tb.i.i, align 8
  %ctl.i.i = getelementptr inbounds %struct.tb, ptr %16, i32 0, i32 3
  %17 = ptrtoint ptr %ctl.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %ctl.i.i, align 8
  %route_hi.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %12, i32 0, i32 1, i32 4
  %19 = ptrtoint ptr %route_hi.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %19, i32 8)
  %bf.load.i.i.i = load i64, ptr %route_hi.i.i.i, align 4
  %20 = lshr i64 %bf.load.i.i.i, 1
  %shl.i.i.i = and i64 %20, 9223372032559808512
  %route_lo.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %12, i32 0, i32 1, i32 3
  %21 = ptrtoint ptr %route_lo.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %route_lo.i.i.i, align 8
  %conv2.i.i.i = zext i32 %22 to i64
  %or.i.i.i = or i64 %shl.i.i.i, %conv2.i.i.i
  %port3.i.i = getelementptr %struct.tb_port, ptr %6, i32 %bf.clear.i, i32 9
  %23 = ptrtoint ptr %port3.i.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %port3.i.i, align 4
  %conv.i.i = zext i8 %24 to i32
  %call4.i.i = call i32 @tb_cfg_read(ptr noundef %18, ptr noundef nonnull %val.i, i64 noundef %or.i.i.i, i32 noundef %conv.i.i, i32 noundef 1, i32 noundef %add.i, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool2.not.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool2.not.i, label %tb_port_get_link_speed.exit.thread73, label %tb_port_get_link_speed.exit

tb_port_get_link_speed.exit.thread73:             ; preds = %tb_port_read.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %25 = ptrtoint ptr %val.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %val.i, align 4
  %27 = and i32 %26, 983040
  call void @__sanitizer_cov_trace_const_cmp4(i32 262144, i32 %27)
  %cmp.i = icmp eq i32 %27, 262144
  %cond.i = select i1 %cmp.i, i32 20, i32 10
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i) #16
  br label %if.end5

tb_port_get_link_speed.exit.thread:               ; preds = %if.end.i.tb_port_get_link_speed.exit.thread_crit_edge, %if.end.tb_port_get_link_speed.exit.thread_crit_edge
  %retval.0.i.ph = phi i32 [ -19, %if.end.i.tb_port_get_link_speed.exit.thread_crit_edge ], [ -22, %if.end.tb_port_get_link_speed.exit.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i) #16
  br label %cleanup

tb_port_get_link_speed.exit:                      ; preds = %tb_port_read.exit.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %cmp = icmp slt i32 %call4.i.i, 0
  br i1 %cmp, label %tb_port_get_link_speed.exit.cleanup_crit_edge, label %tb_port_get_link_speed.exit.if.end5_crit_edge

tb_port_get_link_speed.exit.if.end5_crit_edge:    ; preds = %tb_port_get_link_speed.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

tb_port_get_link_speed.exit.cleanup_crit_edge:    ; preds = %tb_port_get_link_speed.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end5:                                          ; preds = %tb_port_get_link_speed.exit.if.end5_crit_edge, %tb_port_get_link_speed.exit.thread73
  %retval.0.i76 = phi i32 [ %cond.i, %tb_port_get_link_speed.exit.thread73 ], [ %call4.i.i, %tb_port_get_link_speed.exit.if.end5_crit_edge ]
  %link_speed = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 12
  %28 = ptrtoint ptr %link_speed to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %link_speed, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %29, i32 %retval.0.i76)
  %cmp6.not = icmp eq i32 %29, %retval.0.i76
  %30 = ptrtoint ptr %link_speed to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %retval.0.i76, ptr %link_speed, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i45) #16
  %31 = ptrtoint ptr %val.i45 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 -1, ptr %val.i45, align 4, !annotation !447
  %32 = ptrtoint ptr %cap_phy.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cap_phy.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool.not.i47 = icmp eq i32 %33, 0
  br i1 %tobool.not.i47, label %if.end5.tb_port_get_link_width.exit.thread_crit_edge, label %if.end.i51

if.end5.tb_port_get_link_width.exit.thread_crit_edge: ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_get_link_width.exit.thread

if.end.i51:                                       ; preds = %if.end5
  %34 = ptrtoint ptr %sw.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %sw.i.i, align 4
  %is_unplugged.i.i49 = getelementptr inbounds %struct.tb_switch, ptr %35, i32 0, i32 20
  %36 = ptrtoint ptr %is_unplugged.i.i49 to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %is_unplugged.i.i49, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %37)
  %tobool.not.i.i50 = icmp eq i8 %37, 0
  br i1 %tobool.not.i.i50, label %tb_port_read.exit.i65, label %if.end.i51.tb_port_get_link_width.exit.thread_crit_edge

if.end.i51.tb_port_get_link_width.exit.thread_crit_edge: ; preds = %if.end.i51
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_get_link_width.exit.thread

tb_port_read.exit.i65:                            ; preds = %if.end.i51
  %add.i52 = add i32 %33, 1
  %tb.i.i53 = getelementptr inbounds %struct.tb_switch, ptr %35, i32 0, i32 5
  %38 = ptrtoint ptr %tb.i.i53 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %tb.i.i53, align 8
  %ctl.i.i54 = getelementptr inbounds %struct.tb, ptr %39, i32 0, i32 3
  %40 = ptrtoint ptr %ctl.i.i54 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %ctl.i.i54, align 8
  %route_hi.i.i.i55 = getelementptr inbounds %struct.tb_switch, ptr %35, i32 0, i32 1, i32 4
  %42 = ptrtoint ptr %route_hi.i.i.i55 to i32
  call void @__asan_loadN_noabort(i32 %42, i32 8)
  %bf.load.i.i.i56 = load i64, ptr %route_hi.i.i.i55, align 4
  %43 = lshr i64 %bf.load.i.i.i56, 1
  %shl.i.i.i57 = and i64 %43, 9223372032559808512
  %route_lo.i.i.i58 = getelementptr inbounds %struct.tb_switch, ptr %35, i32 0, i32 1, i32 3
  %44 = ptrtoint ptr %route_lo.i.i.i58 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %route_lo.i.i.i58, align 8
  %conv2.i.i.i59 = zext i32 %45 to i64
  %or.i.i.i60 = or i64 %shl.i.i.i57, %conv2.i.i.i59
  %46 = ptrtoint ptr %port3.i.i to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %port3.i.i, align 4
  %conv.i.i62 = zext i8 %47 to i32
  %call4.i.i63 = call i32 @tb_cfg_read(ptr noundef %41, ptr noundef nonnull %val.i45, i64 noundef %or.i.i.i60, i32 noundef %conv.i.i62, i32 noundef 1, i32 noundef %add.i52, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i63)
  %tobool2.not.i64 = icmp eq i32 %call4.i.i63, 0
  br i1 %tobool2.not.i64, label %tb_port_get_link_width.exit.thread79, label %tb_port_get_link_width.exit

tb_port_get_link_width.exit.thread79:             ; preds = %tb_port_read.exit.i65
  call void @__sanitizer_cov_trace_pc() #18
  %48 = ptrtoint ptr %val.i45 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %val.i45, align 4
  %and.i = lshr i32 %49, 20
  %shr.i = and i32 %and.i, 63
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i45) #16
  br label %if.end13

tb_port_get_link_width.exit.thread:               ; preds = %if.end.i51.tb_port_get_link_width.exit.thread_crit_edge, %if.end5.tb_port_get_link_width.exit.thread_crit_edge
  %retval.0.i67.ph = phi i32 [ -19, %if.end.i51.tb_port_get_link_width.exit.thread_crit_edge ], [ -22, %if.end5.tb_port_get_link_width.exit.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i45) #16
  br label %cleanup

tb_port_get_link_width.exit:                      ; preds = %tb_port_read.exit.i65
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i45) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i63)
  %cmp11 = icmp slt i32 %call4.i.i63, 0
  br i1 %cmp11, label %tb_port_get_link_width.exit.cleanup_crit_edge, label %tb_port_get_link_width.exit.if.end13_crit_edge

tb_port_get_link_width.exit.if.end13_crit_edge:   ; preds = %tb_port_get_link_width.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

tb_port_get_link_width.exit.cleanup_crit_edge:    ; preds = %tb_port_get_link_width.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end13:                                         ; preds = %tb_port_get_link_width.exit.if.end13_crit_edge, %tb_port_get_link_width.exit.thread79
  %retval.0.i6782 = phi i32 [ %shr.i, %tb_port_get_link_width.exit.thread79 ], [ %call4.i.i63, %tb_port_get_link_width.exit.if.end13_crit_edge ]
  %link_width = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 13
  %50 = ptrtoint ptr %link_width to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %link_width, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %51, i32 %retval.0.i6782)
  %cmp14.not = icmp eq i32 %51, %retval.0.i6782
  %spec.select = select i1 %cmp14.not, i1 %cmp6.not, i1 false
  %52 = ptrtoint ptr %link_width to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %retval.0.i6782, ptr %link_width, align 4
  %state_in_sysfs.i = getelementptr inbounds %struct.kobject, ptr %sw, i32 0, i32 8
  %53 = ptrtoint ptr %state_in_sysfs.i to i32
  call void @__asan_load1_noabort(i32 %53)
  %bf.load.i68 = load i8, ptr %state_in_sysfs.i, align 4
  %54 = and i8 %bf.load.i68, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %54)
  %tobool19.not = icmp eq i8 %54, 0
  %brmerge = select i1 %tobool19.not, i1 true, i1 %spec.select
  br i1 %brmerge, label %if.end13.cleanup_crit_edge, label %if.then21

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then21:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  %call23 = call i32 @kobject_uevent(ptr noundef %sw, i32 noundef 2) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then21, %if.end13.cleanup_crit_edge, %tb_port_get_link_width.exit.cleanup_crit_edge, %tb_port_get_link_width.exit.thread, %tb_port_get_link_speed.exit.cleanup_crit_edge, %tb_port_get_link_speed.exit.thread, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %call4.i.i, %tb_port_get_link_speed.exit.cleanup_crit_edge ], [ %call4.i.i63, %tb_port_get_link_width.exit.cleanup_crit_edge ], [ 0, %if.end13.cleanup_crit_edge ], [ 0, %if.then21 ], [ %retval.0.i.ph, %tb_port_get_link_speed.exit.thread ], [ %retval.0.i67.ph, %tb_port_get_link_width.exit.thread ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @tb_switch_lane_bonding_disable(ptr noundef %sw) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %parent1 = getelementptr inbounds %struct.device, ptr %sw, i32 0, i32 1
  %0 = ptrtoint ptr %parent1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent1, align 8
  %type.i.i = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %3, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %1, ptr null
  %route_hi.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %4 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %4, i32 8)
  %bf.load.i = load i64, ptr %route_hi.i, align 4
  %5 = lshr i64 %bf.load.i, 1
  %shl.i = and i64 %5, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %6 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %7 to i64
  %or.i = or i64 %shl.i, %conv2.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i)
  %tobool.not = icmp eq i64 %or.i, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %ports.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 2
  %8 = ptrtoint ptr %ports.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ports.i, align 4
  %upstream_port_number.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 2
  %10 = ptrtoint ptr %upstream_port_number.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %bf.load.i52 = load i32, ptr %upstream_port_number.i, align 4
  %bf.lshr.i = lshr i32 %bf.load.i52, 18
  %bf.clear.i = and i32 %bf.lshr.i, 63
  %arrayidx.i = getelementptr %struct.tb_port, ptr %9, i32 %bf.clear.i
  %bonded = getelementptr %struct.tb_port, ptr %9, i32 %bf.clear.i, i32 11
  %11 = ptrtoint ptr %bonded to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %bonded, align 2, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool4.not = icmp eq i8 %12, 0
  br i1 %tobool4.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %depth.i = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 1, i32 2
  %13 = ptrtoint ptr %depth.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %bf.load.i59 = load i32, ptr %depth.i, align 4
  %14 = lshr i32 %bf.load.i59, 6
  %mul.i = and i32 %14, 56
  %sh_prom.i = zext i32 %mul.i to i64
  %shr.i = lshr i64 %or.i, %sh_prom.i
  %conv.i = trunc i64 %shr.i to i32
  %conv1.i = and i32 %conv.i, 255
  %bf.lshr4.i = lshr i32 %bf.load.i59, 12
  %bf.clear5.i = and i32 %bf.lshr4.i, 63
  call void @__sanitizer_cov_trace_cmp4(i32 %conv1.i, i32 %bf.clear5.i)
  %cmp.i = icmp ugt i32 %conv1.i, %bf.clear5.i
  br i1 %cmp.i, label %do.end.i, label %if.end27.i, !prof !448

do.end.i:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.103, i32 noundef 538, i32 noundef 9, ptr noundef null) #16
  br label %tb_port_at.exit

if.end27.i:                                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  %ports.i60 = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 2
  %15 = ptrtoint ptr %ports.i60 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ports.i60, align 4
  %arrayidx.i61 = getelementptr %struct.tb_port, ptr %16, i32 %conv1.i
  br label %tb_port_at.exit

tb_port_at.exit:                                  ; preds = %if.end27.i, %do.end.i
  %retval.0.i62 = phi ptr [ null, %do.end.i ], [ %arrayidx.i61, %if.end27.i ]
  %dual_link_port.i = getelementptr %struct.tb_port, ptr %9, i32 %bf.clear.i, i32 12
  %17 = ptrtoint ptr %dual_link_port.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %dual_link_port.i, align 4
  %bonded.i = getelementptr inbounds %struct.tb_port, ptr %18, i32 0, i32 11
  %19 = ptrtoint ptr %bonded.i to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 0, ptr %bonded.i, align 2
  %20 = ptrtoint ptr %bonded to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 0, ptr %bonded, align 2
  %21 = load ptr, ptr %dual_link_port.i, align 4
  %call.i = tail call fastcc i32 @tb_port_set_link_width(ptr noundef %21, i32 noundef 1) #16
  %call3.i = tail call fastcc i32 @tb_port_set_link_width(ptr noundef %arrayidx.i, i32 noundef 1) #16
  %dual_link_port.i63 = getelementptr inbounds %struct.tb_port, ptr %retval.0.i62, i32 0, i32 12
  %22 = ptrtoint ptr %dual_link_port.i63 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %dual_link_port.i63, align 4
  %bonded.i64 = getelementptr inbounds %struct.tb_port, ptr %23, i32 0, i32 11
  %24 = ptrtoint ptr %bonded.i64 to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 0, ptr %bonded.i64, align 2
  %bonded1.i65 = getelementptr inbounds %struct.tb_port, ptr %retval.0.i62, i32 0, i32 11
  %25 = ptrtoint ptr %bonded1.i65 to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 0, ptr %bonded1.i65, align 2
  %26 = load ptr, ptr %dual_link_port.i63, align 4
  %call.i66 = tail call fastcc i32 @tb_port_set_link_width(ptr noundef %26, i32 noundef 1) #16
  %call3.i67 = tail call fastcc i32 @tb_port_set_link_width(ptr noundef %retval.0.i62, i32 noundef 1) #16
  %call9 = tail call i32 @tb_port_wait_for_link_width(ptr noundef %retval.0.i62, i32 noundef 1, i32 noundef 100)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -110, i32 %call9)
  %cmp = icmp eq i32 %call9, -110
  br i1 %cmp, label %do.body, label %tb_port_at.exit.if.end16_crit_edge

tb_port_at.exit.if.end16_crit_edge:               ; preds = %tb_port_at.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end16

do.body:                                          ; preds = %tb_port_at.exit
  call void @__sanitizer_cov_trace_pc() #18
  %tb = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %27 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %tb, align 8
  %nhi = getelementptr inbounds %struct.tb, ptr %28, i32 0, i32 2
  %29 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %pdev, align 4
  %dev12 = getelementptr inbounds %struct.pci_dev, ptr %32, i32 0, i32 44
  %33 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %33, i32 8)
  %bf.load.i69 = load i64, ptr %route_hi.i, align 4
  %34 = lshr i64 %bf.load.i69, 1
  %shl.i70 = and i64 %34, 9223372032559808512
  %35 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %route_lo.i, align 8
  %conv2.i72 = zext i32 %36 to i64
  %or.i73 = or i64 %shl.i70, %conv2.i72
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev12, ptr noundef nonnull @.str.40, i64 noundef %or.i73) #19
  br label %if.end16

if.end16:                                         ; preds = %do.body, %tb_port_at.exit.if.end16_crit_edge
  %call.i74 = tail call fastcc i32 @tb_port_do_update_credits(ptr noundef %retval.0.i62) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i74)
  %tobool.not.i = icmp eq i32 %call.i74, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.end16.tb_port_update_credits.exit_crit_edge

if.end16.tb_port_update_credits.exit_crit_edge:   ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_update_credits.exit

if.end.i:                                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  %37 = ptrtoint ptr %dual_link_port.i63 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %dual_link_port.i63, align 4
  %call1.i = tail call fastcc i32 @tb_port_do_update_credits(ptr noundef %38) #16
  br label %tb_port_update_credits.exit

tb_port_update_credits.exit:                      ; preds = %if.end.i, %if.end16.tb_port_update_credits.exit_crit_edge
  %call.i77 = tail call fastcc i32 @tb_port_do_update_credits(ptr noundef %arrayidx.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i77)
  %tobool.not.i78 = icmp eq i32 %call.i77, 0
  br i1 %tobool.not.i78, label %if.end.i81, label %tb_port_update_credits.exit.tb_port_update_credits.exit83_crit_edge

tb_port_update_credits.exit.tb_port_update_credits.exit83_crit_edge: ; preds = %tb_port_update_credits.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_update_credits.exit83

if.end.i81:                                       ; preds = %tb_port_update_credits.exit
  call void @__sanitizer_cov_trace_pc() #18
  %39 = ptrtoint ptr %dual_link_port.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %dual_link_port.i, align 4
  %call1.i80 = tail call fastcc i32 @tb_port_do_update_credits(ptr noundef %40) #16
  br label %tb_port_update_credits.exit83

tb_port_update_credits.exit83:                    ; preds = %if.end.i81, %tb_port_update_credits.exit.tb_port_update_credits.exit83_crit_edge
  %call19 = tail call fastcc i32 @tb_switch_update_link_attributes(ptr noundef %sw)
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_switch_lane_bonding_disable.__UNIQUE_ID_ddebug265, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_switch_lane_bonding_disable, %if.then27)) #16
          to label %cleanup [label %if.then27], !srcloc !446

if.then27:                                        ; preds = %tb_port_update_credits.exit83
  call void @__sanitizer_cov_trace_pc() #18
  %tb28 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %41 = ptrtoint ptr %tb28 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %tb28, align 8
  %nhi29 = getelementptr inbounds %struct.tb, ptr %42, i32 0, i32 2
  %43 = ptrtoint ptr %nhi29 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %nhi29, align 4
  %pdev30 = getelementptr inbounds %struct.tb_nhi, ptr %44, i32 0, i32 1
  %45 = ptrtoint ptr %pdev30 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %pdev30, align 4
  %dev31 = getelementptr inbounds %struct.pci_dev, ptr %46, i32 0, i32 44
  %47 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %47, i32 8)
  %bf.load.i85 = load i64, ptr %route_hi.i, align 4
  %48 = lshr i64 %bf.load.i85, 1
  %shl.i86 = and i64 %48, 9223372032559808512
  %49 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %route_lo.i, align 8
  %conv2.i88 = zext i32 %50 to i64
  %or.i89 = or i64 %shl.i86, %conv2.i88
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_switch_lane_bonding_disable.__UNIQUE_ID_ddebug265, ptr noundef %dev31, ptr noundef nonnull @.str.42, i64 noundef %or.i89) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then27, %tb_port_update_credits.exit83, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_switch_configure_link(ptr nocapture noundef readonly %sw) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %route_hi.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %0 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %0, i32 8)
  %bf.load.i = load i64, ptr %route_hi.i, align 4
  %1 = lshr i64 %bf.load.i, 1
  %shl.i = and i64 %1, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %2 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %3 to i64
  %or.i = or i64 %shl.i, %conv2.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i)
  %tobool.not = icmp eq i64 %or.i, 0
  %4 = and i64 %bf.load.i, 4294967296
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %4)
  %bf.cast.not.i = icmp eq i64 %4, 0
  %or.cond = select i1 %tobool.not, i1 true, i1 %bf.cast.not.i
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %ports.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 2
  %5 = ptrtoint ptr %ports.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ports.i, align 4
  %upstream_port_number.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 2
  %7 = ptrtoint ptr %upstream_port_number.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %bf.load.i29 = load i32, ptr %upstream_port_number.i, align 4
  %bf.lshr.i = lshr i32 %bf.load.i29, 18
  %bf.clear.i = and i32 %bf.lshr.i, 63
  %arrayidx.i = getelementptr %struct.tb_port, ptr %6, i32 %bf.clear.i
  %sw3 = getelementptr %struct.tb_port, ptr %6, i32 %bf.clear.i, i32 1
  %8 = ptrtoint ptr %sw3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %sw3, align 4
  %thunderbolt_version.i = getelementptr inbounds %struct.tb_switch, ptr %9, i32 0, i32 1, i32 4
  %10 = ptrtoint ptr %thunderbolt_version.i to i32
  call void @__asan_loadN_noabort(i32 %10, i32 8)
  %bf.load.i30 = load i64, ptr %thunderbolt_version.i, align 4
  %bf.cast1.i = and i64 %bf.load.i30, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i)
  %cmp.i = icmp eq i64 %bf.cast1.i, 32
  br i1 %cmp.i, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call6 = tail call i32 @usb4_port_configure(ptr noundef %arrayidx.i) #16
  br label %if.end8

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call7 = tail call i32 @tb_lc_configure_port(ptr noundef %arrayidx.i) #16
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then5
  %ret.0 = phi i32 [ %call6, %if.then5 ], [ %call7, %if.else ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool9.not = icmp eq i32 %ret.0, 0
  br i1 %tobool9.not, label %if.end11, label %if.end8.cleanup_crit_edge

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end11:                                         ; preds = %if.end8
  %remote = getelementptr %struct.tb_port, ptr %6, i32 %bf.clear.i, i32 2
  %11 = ptrtoint ptr %remote to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %remote, align 4
  %sw12 = getelementptr inbounds %struct.tb_port, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %sw12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %sw12, align 4
  %thunderbolt_version.i31 = getelementptr inbounds %struct.tb_switch, ptr %14, i32 0, i32 1, i32 4
  %15 = ptrtoint ptr %thunderbolt_version.i31 to i32
  call void @__asan_loadN_noabort(i32 %15, i32 8)
  %bf.load.i32 = load i64, ptr %thunderbolt_version.i31, align 4
  %bf.cast1.i33 = and i64 %bf.load.i32, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i33)
  %cmp.i34 = icmp eq i64 %bf.cast1.i33, 32
  br i1 %cmp.i34, label %if.then14, label %if.end16

if.then14:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  %call15 = tail call i32 @usb4_port_configure(ptr noundef %12) #16
  br label %cleanup

if.end16:                                         ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  %call17 = tail call i32 @tb_lc_configure_port(ptr noundef %12) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.then14, %if.end8.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call15, %if.then14 ], [ %call17, %if.end16 ], [ 0, %entry.cleanup_crit_edge ], [ %ret.0, %if.end8.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb4_port_configure(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_lc_configure_port(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @tb_switch_unconfigure_link(ptr nocapture noundef readonly %sw) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %is_unplugged = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 20
  %0 = ptrtoint ptr %is_unplugged to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %is_unplugged, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %route_hi.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %2 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %bf.load.i = load i64, ptr %route_hi.i, align 4
  %3 = lshr i64 %bf.load.i, 1
  %shl.i = and i64 %3, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %4 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %5 to i64
  %or.i = or i64 %shl.i, %conv2.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i)
  %tobool1.not = icmp eq i64 %or.i, 0
  %6 = and i64 %bf.load.i, 4294967296
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %6)
  %bf.cast.not.i = icmp eq i64 %6, 0
  %or.cond = select i1 %tobool1.not, i1 true, i1 %bf.cast.not.i
  br i1 %or.cond, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %ports.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 2
  %7 = ptrtoint ptr %ports.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ports.i, align 4
  %upstream_port_number.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 2
  %9 = ptrtoint ptr %upstream_port_number.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %bf.load.i25 = load i32, ptr %upstream_port_number.i, align 4
  %bf.lshr.i = lshr i32 %bf.load.i25, 18
  %bf.clear.i = and i32 %bf.lshr.i, 63
  %arrayidx.i = getelementptr %struct.tb_port, ptr %8, i32 %bf.clear.i
  %sw6 = getelementptr %struct.tb_port, ptr %8, i32 %bf.clear.i, i32 1
  %10 = ptrtoint ptr %sw6 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sw6, align 4
  %thunderbolt_version.i = getelementptr inbounds %struct.tb_switch, ptr %11, i32 0, i32 1, i32 4
  %12 = ptrtoint ptr %thunderbolt_version.i to i32
  call void @__asan_loadN_noabort(i32 %12, i32 8)
  %bf.load.i26 = load i64, ptr %thunderbolt_version.i, align 4
  %bf.cast1.i = and i64 %bf.load.i26, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i)
  %cmp.i = icmp eq i64 %bf.cast1.i, 32
  br i1 %cmp.i, label %if.then8, label %if.else

if.then8:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @usb4_port_unconfigure(ptr noundef %arrayidx.i) #16
  br label %if.end9

if.else:                                          ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @tb_lc_unconfigure_port(ptr noundef %arrayidx.i) #16
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then8
  %remote = getelementptr %struct.tb_port, ptr %8, i32 %bf.clear.i, i32 2
  %13 = ptrtoint ptr %remote to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %remote, align 4
  %sw10 = getelementptr inbounds %struct.tb_port, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %sw10 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %sw10, align 4
  %thunderbolt_version.i27 = getelementptr inbounds %struct.tb_switch, ptr %16, i32 0, i32 1, i32 4
  %17 = ptrtoint ptr %thunderbolt_version.i27 to i32
  call void @__asan_loadN_noabort(i32 %17, i32 8)
  %bf.load.i28 = load i64, ptr %thunderbolt_version.i27, align 4
  %bf.cast1.i29 = and i64 %bf.load.i28, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i29)
  %cmp.i30 = icmp eq i64 %bf.cast1.i29, 32
  br i1 %cmp.i30, label %if.then12, label %if.else13

if.then12:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @usb4_port_unconfigure(ptr noundef %14) #16
  br label %cleanup

if.else13:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @tb_lc_unconfigure_port(ptr noundef %14) #16
  br label %cleanup

cleanup:                                          ; preds = %if.else13, %if.then12, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @usb4_port_unconfigure(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @tb_lc_unconfigure_port(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_switch_add(ptr noundef %sw) local_unnamed_addr #0 align 64 {
entry:
  %val.i = alloca i32, align 4
  %uuid.i = alloca [4 x i32], align 4
  %uuid.i.i = alloca [4 x i32], align 4
  %status.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %status.i) #16
  %0 = ptrtoint ptr %status.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %status.i, align 4, !annotation !447
  %generation.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 15
  %1 = ptrtoint ptr %generation.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %generation.i, align 4
  %3 = zext i32 %2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.203)
  switch i32 %2, label %sw.default.i [
    i32 2, label %sw.bb.i
    i32 3, label %entry.sw.bb1.i_crit_edge
    i32 4, label %entry.sw.bb1.i_crit_edge306
  ]

entry.sw.bb1.i_crit_edge306:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1.i

entry.sw.bb1.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1.i

sw.bb.i:                                          ; preds = %entry
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %4 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %4, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %5 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %5, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %6 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %7 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i.i)
  %tobool.not.i = icmp eq i64 %or.i.i, 0
  br i1 %tobool.not.i, label %sw.bb.i.sw.bb1.i_crit_edge, label %sw.bb.i.tb_switch_add_dma_port.exit.thread_crit_edge

sw.bb.i.tb_switch_add_dma_port.exit.thread_crit_edge: ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_add_dma_port.exit.thread

sw.bb.i.sw.bb1.i_crit_edge:                       ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1.i

sw.bb1.i:                                         ; preds = %sw.bb.i.sw.bb1.i_crit_edge, %entry.sw.bb1.i_crit_edge, %entry.sw.bb1.i_crit_edge306
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %uuid.i.i) #16
  %8 = getelementptr inbounds [4 x i32], ptr %uuid.i.i, i32 0, i32 1
  %9 = getelementptr inbounds [4 x i32], ptr %uuid.i.i, i32 0, i32 2
  %10 = getelementptr inbounds [4 x i32], ptr %uuid.i.i, i32 0, i32 3
  %uuid1.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 7
  %11 = call ptr @memset(ptr %uuid.i.i, i32 255, i32 16)
  %12 = ptrtoint ptr %uuid1.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %uuid1.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %13, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %sw.bb1.i.tb_switch_set_uuid.exit.thread.i_crit_edge

sw.bb1.i.tb_switch_set_uuid.exit.thread.i_crit_edge: ; preds = %sw.bb1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_set_uuid.exit.thread.i

if.end.i.i:                                       ; preds = %sw.bb1.i
  %thunderbolt_version.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %14 = ptrtoint ptr %thunderbolt_version.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 8)
  %bf.load.i.i.i = load i64, ptr %thunderbolt_version.i.i.i, align 4
  %bf.cast1.i.i.i = and i64 %bf.load.i.i.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i.i.i)
  %cmp.i.i.i = icmp eq i64 %bf.cast1.i.i.i, 32
  br i1 %cmp.i.i.i, label %if.then2.i.i, label %if.else.i.i

if.then2.i.i:                                     ; preds = %if.end.i.i
  %uid3.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 6
  %call4.i.i = tail call i32 @usb4_switch_read_uid(ptr noundef %sw, ptr noundef %uid3.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %if.then2.i.i.if.then16.i.i_crit_edge, label %if.then2.i.i.tb_switch_set_uuid.exit.thread154.i_crit_edge

if.then2.i.i.tb_switch_set_uuid.exit.thread154.i_crit_edge: ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_set_uuid.exit.thread154.i

if.then2.i.i.if.then16.i.i_crit_edge:             ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then16.i.i

if.else.i.i:                                      ; preds = %if.end.i.i
  %call8.i.i = call i32 @tb_lc_read_uuid(ptr noundef %sw, ptr noundef nonnull %uuid.i.i) #16
  %15 = zext i32 %call8.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %15, ptr @__sancov_gen_cov_switch_values.204)
  switch i32 %call8.i.i, label %tb_switch_set_uuid.exit.i [
    i32 0, label %if.else.i.i.if.end24.i.i_crit_edge
    i32 -22, label %if.else.i.i.if.then16.i.i_crit_edge
  ]

if.else.i.i.if.then16.i.i_crit_edge:              ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then16.i.i

if.else.i.i.if.end24.i.i_crit_edge:               ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end24.i.i

if.then16.i.i:                                    ; preds = %if.else.i.i.if.then16.i.i_crit_edge, %if.then2.i.i.if.then16.i.i_crit_edge
  %uid17.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 6
  %16 = ptrtoint ptr %uid17.i.i to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %uid17.i.i, align 8
  %conv.i.i = trunc i64 %17 to i32
  %18 = ptrtoint ptr %uuid.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %conv.i.i, ptr %uuid.i.i, align 4
  %shr.i.i = lshr i64 %17, 32
  %conv20.i.i = trunc i64 %shr.i.i to i32
  %19 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %conv20.i.i, ptr %8, align 4
  %20 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 -1, ptr %9, align 4
  %21 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 -1, ptr %10, align 4
  br label %if.end24.i.i

if.end24.i.i:                                     ; preds = %if.then16.i.i, %if.else.i.i.if.end24.i.i_crit_edge
  %call26.i.i = call ptr @kmemdup(ptr noundef nonnull %uuid.i.i, i32 noundef 16, i32 noundef 3264) #16
  %22 = ptrtoint ptr %uuid1.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %call26.i.i, ptr %uuid1.i.i, align 8
  %tobool29.not.i.i = icmp eq ptr %call26.i.i, null
  br i1 %tobool29.not.i.i, label %if.end24.i.i.tb_switch_set_uuid.exit.thread154.i_crit_edge, label %if.end24.i.i.tb_switch_set_uuid.exit.thread.i_crit_edge

if.end24.i.i.tb_switch_set_uuid.exit.thread.i_crit_edge: ; preds = %if.end24.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_set_uuid.exit.thread.i

if.end24.i.i.tb_switch_set_uuid.exit.thread154.i_crit_edge: ; preds = %if.end24.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_set_uuid.exit.thread154.i

tb_switch_set_uuid.exit.thread.i:                 ; preds = %if.end24.i.i.tb_switch_set_uuid.exit.thread.i_crit_edge, %sw.bb1.i.tb_switch_set_uuid.exit.thread.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %uuid.i.i) #16
  br label %sw.epilog.i

tb_switch_set_uuid.exit.thread154.i:              ; preds = %if.end24.i.i.tb_switch_set_uuid.exit.thread154.i_crit_edge, %if.then2.i.i.tb_switch_set_uuid.exit.thread154.i_crit_edge
  %retval.0.i.ph.i = phi i32 [ %call4.i.i, %if.then2.i.i.tb_switch_set_uuid.exit.thread154.i_crit_edge ], [ -12, %if.end24.i.i.tb_switch_set_uuid.exit.thread154.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %uuid.i.i) #16
  br label %tb_switch_add_dma_port.exit.thread271

tb_switch_set_uuid.exit.i:                        ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %uuid.i.i) #16
  br label %tb_switch_add_dma_port.exit

sw.default.i:                                     ; preds = %entry
  %safe_mode.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 24
  %23 = ptrtoint ptr %safe_mode.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %safe_mode.i, align 1, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %24)
  %tobool6.not.i = icmp eq i8 %24, 0
  br i1 %tobool6.not.i, label %sw.default.i.tb_switch_add_dma_port.exit.thread_crit_edge, label %sw.default.i.sw.epilog.i_crit_edge

sw.default.i.sw.epilog.i_crit_edge:               ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.i

sw.default.i.tb_switch_add_dma_port.exit.thread_crit_edge: ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_add_dma_port.exit.thread

sw.epilog.i:                                      ; preds = %sw.default.i.sw.epilog.i_crit_edge, %tb_switch_set_uuid.exit.thread.i
  %no_nvm_upgrade.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 23
  %25 = ptrtoint ptr %no_nvm_upgrade.i to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %no_nvm_upgrade.i, align 4, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool9.not.i = icmp eq i8 %26, 0
  br i1 %tobool9.not.i, label %if.end11.i, label %sw.epilog.i.tb_switch_add_dma_port.exit.thread_crit_edge

sw.epilog.i.tb_switch_add_dma_port.exit.thread_crit_edge: ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_add_dma_port.exit.thread

if.end11.i:                                       ; preds = %sw.epilog.i
  %thunderbolt_version.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %27 = ptrtoint ptr %thunderbolt_version.i.i to i32
  call void @__asan_loadN_noabort(i32 %27, i32 8)
  %bf.load.i112.i = load i64, ptr %thunderbolt_version.i.i, align 4
  %bf.cast1.i.i = and i64 %bf.load.i112.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i.i)
  %cmp.i.i = icmp eq i64 %bf.cast1.i.i, 32
  br i1 %cmp.i.i, label %if.then13.i, label %if.end25.i

if.then13.i:                                      ; preds = %if.end11.i
  %call14.i = call i32 @usb4_switch_nvm_authenticate_status(ptr noundef %sw, ptr noundef nonnull %status.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.i)
  %tobool15.not.i = icmp eq i32 %call14.i, 0
  br i1 %tobool15.not.i, label %if.end17.i, label %if.then13.i.tb_switch_add_dma_port.exit.thread271_crit_edge

if.then13.i.tb_switch_add_dma_port.exit.thread271_crit_edge: ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_add_dma_port.exit.thread271

if.end17.i:                                       ; preds = %if.then13.i
  %28 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %status.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool18.not.i = icmp eq i32 %29, 0
  br i1 %tobool18.not.i, label %if.end17.i.tb_switch_add_dma_port.exit.thread_crit_edge, label %do.body.i

if.end17.i.tb_switch_add_dma_port.exit.thread_crit_edge: ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_add_dma_port.exit.thread

do.body.i:                                        ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #18
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %30 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %tb.i, align 8
  %nhi.i = getelementptr inbounds %struct.tb, ptr %31, i32 0, i32 2
  %32 = ptrtoint ptr %nhi.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %nhi.i, align 4
  %pdev.i = getelementptr inbounds %struct.tb_nhi, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %pdev.i, align 4
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %35, i32 0, i32 44
  %36 = ptrtoint ptr %thunderbolt_version.i.i to i32
  call void @__asan_loadN_noabort(i32 %36, i32 8)
  %bf.load.i114.i = load i64, ptr %thunderbolt_version.i.i, align 4
  %37 = lshr i64 %bf.load.i114.i, 1
  %shl.i115.i = and i64 %37, 9223372032559808512
  %route_lo.i116.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %38 = ptrtoint ptr %route_lo.i116.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %route_lo.i116.i, align 8
  %conv2.i117.i = zext i32 %39 to i64
  %or.i118.i = or i64 %shl.i115.i, %conv2.i117.i
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i, ptr noundef nonnull @.str.160, i64 noundef %or.i118.i) #19
  %40 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %status.i, align 4
  call fastcc void @nvm_set_auth_status(ptr noundef %sw, i32 noundef %41) #16
  br label %tb_switch_add_dma_port.exit.thread

if.end25.i:                                       ; preds = %if.end11.i
  %42 = lshr i64 %bf.load.i112.i, 1
  %shl.i121.i = and i64 %42, 9223372032559808512
  %route_lo.i122.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %43 = ptrtoint ptr %route_lo.i122.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %route_lo.i122.i, align 8
  %conv2.i123.i = zext i32 %44 to i64
  %or.i124.i = or i64 %shl.i121.i, %conv2.i123.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i124.i)
  %tobool27.not.i = icmp ne i64 %or.i124.i, 0
  %45 = and i64 %bf.load.i112.i, 4294967296
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %45)
  %bf.cast.not.i.i = icmp eq i64 %45, 0
  %or.cond.i = select i1 %tobool27.not.i, i1 true, i1 %bf.cast.not.i.i
  br i1 %or.cond.i, label %if.end30.i, label %if.end25.i.tb_switch_add_dma_port.exit.thread_crit_edge

if.end25.i.tb_switch_add_dma_port.exit.thread_crit_edge: ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_add_dma_port.exit.thread

if.end30.i:                                       ; preds = %if.end25.i
  %call31.i = call ptr @dma_port_alloc(ptr noundef %sw) #16
  %dma_port.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 3
  %46 = ptrtoint ptr %dma_port.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %call31.i, ptr %dma_port.i, align 8
  %tobool33.not.i = icmp eq ptr %call31.i, null
  br i1 %tobool33.not.i, label %if.end30.i.tb_switch_add_dma_port.exit.thread_crit_edge, label %if.end35.i

if.end30.i.tb_switch_add_dma_port.exit.thread_crit_edge: ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_add_dma_port.exit.thread

if.end35.i:                                       ; preds = %if.end30.i
  call void @mutex_lock_nested(ptr noundef nonnull @nvm_auth_status_lock, i32 noundef 0) #16
  %uuid1.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 7
  br label %for.cond.i.i.i

for.cond.i.i.i:                                   ; preds = %for.body.i.i.i.for.cond.i.i.i_crit_edge, %if.end35.i
  %st.0.in.i.i.i = phi ptr [ @nvm_auth_status_cache, %if.end35.i ], [ %st.0.i.i.i, %for.body.i.i.i.for.cond.i.i.i_crit_edge ]
  %47 = ptrtoint ptr %st.0.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %st.0.i.i.i = load ptr, ptr %st.0.in.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %st.0.i.i.i, @nvm_auth_status_cache
  br i1 %cmp.not.i.i.i, label %__nvm_get_auth_status.exit.thread.i.i, label %for.body.i.i.i

__nvm_get_auth_status.exit.thread.i.i:            ; preds = %for.cond.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @mutex_unlock(ptr noundef nonnull @nvm_auth_status_lock) #16
  br label %nvm_get_auth_status.exit.thread.i

for.body.i.i.i:                                   ; preds = %for.cond.i.i.i
  %uuid.i.i.i = getelementptr inbounds %struct.nvm_auth_status, ptr %st.0.i.i.i, i32 0, i32 1
  %48 = ptrtoint ptr %uuid1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %uuid1.i.i.i, align 8
  %bcmp.i.i.i.i = call i32 @bcmp(ptr noundef dereferenceable(16) %uuid.i.i.i, ptr noundef dereferenceable(16) %49, i32 16) #22
  %cmp.i.i.i.i = icmp eq i32 %bcmp.i.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %__nvm_get_auth_status.exit.i.i, label %for.body.i.i.i.for.cond.i.i.i_crit_edge

for.body.i.i.i.for.cond.i.i.i_crit_edge:          ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i.i.i

__nvm_get_auth_status.exit.i.i:                   ; preds = %for.body.i.i.i
  call void @mutex_unlock(ptr noundef nonnull @nvm_auth_status_lock) #16
  %tobool.not.i126.i = icmp eq ptr %st.0.i.i.i, null
  br i1 %tobool.not.i126.i, label %__nvm_get_auth_status.exit.i.i.nvm_get_auth_status.exit.thread.i_crit_edge, label %nvm_get_auth_status.exit.i

__nvm_get_auth_status.exit.i.i.nvm_get_auth_status.exit.thread.i_crit_edge: ; preds = %__nvm_get_auth_status.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nvm_get_auth_status.exit.thread.i

nvm_get_auth_status.exit.thread.i:                ; preds = %__nvm_get_auth_status.exit.i.i.nvm_get_auth_status.exit.thread.i_crit_edge, %__nvm_get_auth_status.exit.thread.i.i
  %50 = ptrtoint ptr %status.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 0, ptr %status.i, align 4
  br label %if.end42.i

nvm_get_auth_status.exit.i:                       ; preds = %__nvm_get_auth_status.exit.i.i
  %status1.i.i = getelementptr inbounds %struct.nvm_auth_status, ptr %st.0.i.i.i, i32 0, i32 2
  %51 = ptrtoint ptr %status1.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %status1.i.i, align 4
  %53 = ptrtoint ptr %status.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %52, ptr %status.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool36.not.i = icmp eq i32 %52, 0
  br i1 %tobool36.not.i, label %nvm_get_auth_status.exit.i.if.end42.i_crit_edge, label %if.then37.i

nvm_get_auth_status.exit.i.if.end42.i_crit_edge:  ; preds = %nvm_get_auth_status.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end42.i

if.then37.i:                                      ; preds = %nvm_get_auth_status.exit.i
  %54 = ptrtoint ptr %thunderbolt_version.i.i to i32
  call void @__asan_loadN_noabort(i32 %54, i32 8)
  %bf.load.i128.i = load i64, ptr %thunderbolt_version.i.i, align 4
  %55 = lshr i64 %bf.load.i128.i, 1
  %shl.i129.i = and i64 %55, 9223372032559808512
  %56 = ptrtoint ptr %route_lo.i122.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %route_lo.i122.i, align 8
  %conv2.i131.i = zext i32 %57 to i64
  %or.i132.i = or i64 %shl.i129.i, %conv2.i131.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i132.i)
  %tobool39.not.i = icmp eq i64 %or.i132.i, 0
  br i1 %tobool39.not.i, label %if.then40.i, label %if.then37.i.tb_switch_add_dma_port.exit.thread_crit_edge

if.then37.i.tb_switch_add_dma_port.exit.thread_crit_edge: ; preds = %if.then37.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_add_dma_port.exit.thread

if.then40.i:                                      ; preds = %if.then37.i
  call void @__sanitizer_cov_trace_pc() #18
  call fastcc void @nvm_authenticate_complete_dma_port(ptr noundef %sw) #16
  br label %tb_switch_add_dma_port.exit.thread

if.end42.i:                                       ; preds = %nvm_get_auth_status.exit.i.if.end42.i_crit_edge, %nvm_get_auth_status.exit.thread.i
  %58 = ptrtoint ptr %dma_port.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %dma_port.i, align 8
  %call44.i = call i32 @dma_port_flash_update_auth_status(ptr noundef %59, ptr noundef nonnull %status.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call44.i)
  %cmp.i = icmp slt i32 %call44.i, 1
  br i1 %cmp.i, label %if.end42.i.tb_switch_add_dma_port.exit_crit_edge, label %if.end46.i

if.end42.i.tb_switch_add_dma_port.exit_crit_edge: ; preds = %if.end42.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_add_dma_port.exit

if.end46.i:                                       ; preds = %if.end42.i
  %60 = ptrtoint ptr %thunderbolt_version.i.i to i32
  call void @__asan_loadN_noabort(i32 %60, i32 8)
  %bf.load.i134.i = load i64, ptr %thunderbolt_version.i.i, align 4
  %61 = lshr i64 %bf.load.i134.i, 1
  %shl.i135.i = and i64 %61, 9223372032559808512
  %62 = ptrtoint ptr %route_lo.i122.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %route_lo.i122.i, align 8
  %conv2.i137.i = zext i32 %63 to i64
  %or.i138.i = or i64 %shl.i135.i, %conv2.i137.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i138.i)
  %tobool48.not.i = icmp eq i64 %or.i138.i, 0
  br i1 %tobool48.not.i, label %if.then49.i, label %if.end46.i.if.end50.i_crit_edge

if.end46.i.if.end50.i_crit_edge:                  ; preds = %if.end46.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end50.i

if.then49.i:                                      ; preds = %if.end46.i
  call void @__sanitizer_cov_trace_pc() #18
  call fastcc void @nvm_authenticate_complete_dma_port(ptr noundef %sw) #16
  br label %if.end50.i

if.end50.i:                                       ; preds = %if.then49.i, %if.end46.i.if.end50.i_crit_edge
  %64 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %status.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool51.not.i = icmp eq i32 %65, 0
  br i1 %tobool51.not.i, label %if.end50.i.do.body66.i_crit_edge, label %do.body53.i

if.end50.i.do.body66.i_crit_edge:                 ; preds = %if.end50.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body66.i

do.body53.i:                                      ; preds = %if.end50.i
  call void @__sanitizer_cov_trace_pc() #18
  %tb58.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %66 = ptrtoint ptr %tb58.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %tb58.i, align 8
  %nhi59.i = getelementptr inbounds %struct.tb, ptr %67, i32 0, i32 2
  %68 = ptrtoint ptr %nhi59.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %nhi59.i, align 4
  %pdev60.i = getelementptr inbounds %struct.tb_nhi, ptr %69, i32 0, i32 1
  %70 = ptrtoint ptr %pdev60.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %pdev60.i, align 4
  %dev61.i = getelementptr inbounds %struct.pci_dev, ptr %71, i32 0, i32 44
  %72 = ptrtoint ptr %thunderbolt_version.i.i to i32
  call void @__asan_loadN_noabort(i32 %72, i32 8)
  %bf.load.i140.i = load i64, ptr %thunderbolt_version.i.i, align 4
  %73 = lshr i64 %bf.load.i140.i, 1
  %shl.i141.i = and i64 %73, 9223372032559808512
  %74 = ptrtoint ptr %route_lo.i122.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %route_lo.i122.i, align 8
  %conv2.i143.i = zext i32 %75 to i64
  %or.i144.i = or i64 %shl.i141.i, %conv2.i143.i
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev61.i, ptr noundef nonnull @.str.160, i64 noundef %or.i144.i) #19
  %76 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %status.i, align 4
  call fastcc void @nvm_set_auth_status(ptr noundef %sw, i32 noundef %77) #16
  br label %do.body66.i

do.body66.i:                                      ; preds = %do.body53.i, %if.end50.i.do.body66.i_crit_edge
  %tb71.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %78 = ptrtoint ptr %tb71.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %tb71.i, align 8
  %nhi72.i = getelementptr inbounds %struct.tb, ptr %79, i32 0, i32 2
  %80 = ptrtoint ptr %nhi72.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %nhi72.i, align 4
  %pdev73.i = getelementptr inbounds %struct.tb_nhi, ptr %81, i32 0, i32 1
  %82 = ptrtoint ptr %pdev73.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %pdev73.i, align 4
  %dev74.i = getelementptr inbounds %struct.pci_dev, ptr %83, i32 0, i32 44
  %84 = ptrtoint ptr %thunderbolt_version.i.i to i32
  call void @__asan_loadN_noabort(i32 %84, i32 8)
  %bf.load.i146.i = load i64, ptr %thunderbolt_version.i.i, align 4
  %85 = lshr i64 %bf.load.i146.i, 1
  %shl.i147.i = and i64 %85, 9223372032559808512
  %86 = ptrtoint ptr %route_lo.i122.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %route_lo.i122.i, align 8
  %conv2.i149.i = zext i32 %87 to i64
  %or.i150.i = or i64 %shl.i147.i, %conv2.i149.i
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev74.i, ptr noundef nonnull @.str.151, i64 noundef %or.i150.i) #19
  %88 = ptrtoint ptr %dma_port.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %dma_port.i, align 8
  %call79.i = call i32 @dma_port_power_cycle(ptr noundef %89) #16
  br label %tb_switch_add_dma_port.exit.thread271

tb_switch_add_dma_port.exit.thread:               ; preds = %if.then40.i, %if.then37.i.tb_switch_add_dma_port.exit.thread_crit_edge, %if.end30.i.tb_switch_add_dma_port.exit.thread_crit_edge, %if.end25.i.tb_switch_add_dma_port.exit.thread_crit_edge, %do.body.i, %if.end17.i.tb_switch_add_dma_port.exit.thread_crit_edge, %sw.epilog.i.tb_switch_add_dma_port.exit.thread_crit_edge, %sw.default.i.tb_switch_add_dma_port.exit.thread_crit_edge, %sw.bb.i.tb_switch_add_dma_port.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %status.i) #16
  br label %if.end

tb_switch_add_dma_port.exit.thread271:            ; preds = %do.body66.i, %if.then13.i.tb_switch_add_dma_port.exit.thread271_crit_edge, %tb_switch_set_uuid.exit.thread154.i
  %retval.0.i216.ph = phi i32 [ %retval.0.i.ph.i, %tb_switch_set_uuid.exit.thread154.i ], [ %call14.i, %if.then13.i.tb_switch_add_dma_port.exit.thread271_crit_edge ], [ -108, %do.body66.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %status.i) #16
  br label %do.end

tb_switch_add_dma_port.exit:                      ; preds = %if.end42.i.tb_switch_add_dma_port.exit_crit_edge, %tb_switch_set_uuid.exit.i
  %retval.0.i216 = phi i32 [ %call8.i.i, %tb_switch_set_uuid.exit.i ], [ %call44.i, %if.end42.i.tb_switch_add_dma_port.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %status.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i216)
  %tobool.not = icmp eq i32 %retval.0.i216, 0
  br i1 %tobool.not, label %tb_switch_add_dma_port.exit.if.end_crit_edge, label %tb_switch_add_dma_port.exit.do.end_crit_edge

tb_switch_add_dma_port.exit.do.end_crit_edge:     ; preds = %tb_switch_add_dma_port.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

tb_switch_add_dma_port.exit.if.end_crit_edge:     ; preds = %tb_switch_add_dma_port.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end:                                           ; preds = %tb_switch_add_dma_port.exit.do.end_crit_edge, %tb_switch_add_dma_port.exit.thread271
  %retval.0.i216274 = phi i32 [ %retval.0.i216.ph, %tb_switch_add_dma_port.exit.thread271 ], [ %retval.0.i216, %tb_switch_add_dma_port.exit.do.end_crit_edge ]
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %sw, ptr noundef nonnull @.str.43) #19
  br label %cleanup

if.end:                                           ; preds = %tb_switch_add_dma_port.exit.if.end_crit_edge, %tb_switch_add_dma_port.exit.thread
  %safe_mode = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 24
  %90 = ptrtoint ptr %safe_mode to i32
  call void @__asan_load1_noabort(i32 %90)
  %91 = load i8, ptr %safe_mode, align 1, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %91)
  %tobool1.not = icmp eq i8 %91, 0
  br i1 %tobool1.not, label %if.then2, label %if.end.if.end82_crit_edge

if.end.if.end82_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end82

if.then2:                                         ; preds = %if.end
  %enabled.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %92 = ptrtoint ptr %enabled.i.i to i32
  call void @__asan_loadN_noabort(i32 %92, i32 8)
  %bf.load.i.i217 = load i64, ptr %enabled.i.i, align 4
  %93 = and i64 %bf.load.i.i217, 4294967551
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967328, i64 %93)
  %94 = icmp eq i64 %93, 4294967328
  br i1 %94, label %if.end3.i, label %if.then2.tb_switch_credits_init.exit_crit_edge

if.then2.tb_switch_credits_init.exit_crit_edge:   ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_credits_init.exit

if.end3.i:                                        ; preds = %if.then2
  %call4.i = call i32 @usb4_switch_credits_init(ptr noundef %sw) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not.i218 = icmp eq i32 %call4.i, 0
  br i1 %tobool.not.i218, label %if.end3.i.tb_switch_credits_init.exit_crit_edge, label %do.body.i227

if.end3.i.tb_switch_credits_init.exit_crit_edge:  ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_credits_init.exit

do.body.i227:                                     ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #18
  %tb.i219 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %95 = ptrtoint ptr %tb.i219 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %tb.i219, align 8
  %nhi.i220 = getelementptr inbounds %struct.tb, ptr %96, i32 0, i32 2
  %97 = ptrtoint ptr %nhi.i220 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %nhi.i220, align 4
  %pdev.i221 = getelementptr inbounds %struct.tb_nhi, ptr %98, i32 0, i32 1
  %99 = ptrtoint ptr %pdev.i221 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %pdev.i221, align 4
  %dev.i222 = getelementptr inbounds %struct.pci_dev, ptr %100, i32 0, i32 44
  %101 = ptrtoint ptr %enabled.i.i to i32
  call void @__asan_loadN_noabort(i32 %101, i32 8)
  %bf.load.i16.i = load i64, ptr %enabled.i.i, align 4
  %102 = lshr i64 %bf.load.i16.i, 1
  %shl.i.i223 = and i64 %102, 9223372032559808512
  %route_lo.i.i224 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %103 = ptrtoint ptr %route_lo.i.i224 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %route_lo.i.i224, align 8
  %conv2.i.i225 = zext i32 %104 to i64
  %or.i.i226 = or i64 %shl.i.i223, %conv2.i.i225
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev.i222, ptr noundef nonnull @.str.166, i64 noundef %or.i.i226) #19
  br label %tb_switch_credits_init.exit

tb_switch_credits_init.exit:                      ; preds = %do.body.i227, %if.end3.i.tb_switch_credits_init.exit_crit_edge, %if.then2.tb_switch_credits_init.exit_crit_edge
  %call3 = call i32 @tb_drom_read(ptr noundef %sw) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %do.body11, label %do.end8

do.end8:                                          ; preds = %tb_switch_credits_init.exit
  call void @__sanitizer_cov_trace_pc() #18
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %sw, ptr noundef nonnull @.str.47) #19
  br label %cleanup

do.body11:                                        ; preds = %tb_switch_credits_init.exit
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_switch_add.__UNIQUE_ID_ddebug266, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_switch_add, %if.then17)) #16
          to label %do.end22 [label %if.then17], !srcloc !446

if.then17:                                        ; preds = %do.body11
  call void @__sanitizer_cov_trace_pc() #18
  %tb = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %105 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %tb, align 8
  %nhi = getelementptr inbounds %struct.tb, ptr %106, i32 0, i32 2
  %107 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %108, i32 0, i32 1
  %109 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %pdev, align 4
  %dev18 = getelementptr inbounds %struct.pci_dev, ptr %110, i32 0, i32 44
  %111 = ptrtoint ptr %enabled.i.i to i32
  call void @__asan_loadN_noabort(i32 %111, i32 8)
  %bf.load.i = load i64, ptr %enabled.i.i, align 4
  %112 = lshr i64 %bf.load.i, 1
  %shl.i = and i64 %112, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %113 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %114 to i64
  %or.i = or i64 %shl.i, %conv2.i
  %uid = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 6
  %115 = ptrtoint ptr %uid to i32
  call void @__asan_load8_noabort(i32 %115)
  %116 = load i64, ptr %uid, align 8
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_switch_add.__UNIQUE_ID_ddebug266, ptr noundef %dev18, ptr noundef nonnull @.str.49, i64 noundef %or.i, i64 noundef %116) #16
  br label %do.end22

do.end22:                                         ; preds = %if.then17, %do.body11
  call void @tb_check_quirks(ptr noundef %sw) #16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %uuid.i) #16
  %117 = getelementptr inbounds [4 x i32], ptr %uuid.i, i32 0, i32 1
  %118 = getelementptr inbounds [4 x i32], ptr %uuid.i, i32 0, i32 2
  %119 = getelementptr inbounds [4 x i32], ptr %uuid.i, i32 0, i32 3
  %uuid1.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 7
  %120 = call ptr @memset(ptr %uuid.i, i32 255, i32 16)
  %121 = ptrtoint ptr %uuid1.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %uuid1.i, align 8
  %tobool.not.i228 = icmp eq ptr %122, null
  br i1 %tobool.not.i228, label %if.end.i, label %do.end22.tb_switch_set_uuid.exit.thread295_crit_edge

do.end22.tb_switch_set_uuid.exit.thread295_crit_edge: ; preds = %do.end22
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_set_uuid.exit.thread295

if.end.i:                                         ; preds = %do.end22
  %123 = ptrtoint ptr %enabled.i.i to i32
  call void @__asan_loadN_noabort(i32 %123, i32 8)
  %bf.load.i.i230 = load i64, ptr %enabled.i.i, align 4
  %bf.cast1.i.i231 = and i64 %bf.load.i.i230, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i.i231)
  %cmp.i.i232 = icmp eq i64 %bf.cast1.i.i231, 32
  br i1 %cmp.i.i232, label %if.then2.i, label %if.else.i

if.then2.i:                                       ; preds = %if.end.i
  %uid3.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 6
  %call4.i233 = call i32 @usb4_switch_read_uid(ptr noundef %sw, ptr noundef %uid3.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i233)
  %tobool5.not.i = icmp eq i32 %call4.i233, 0
  br i1 %tobool5.not.i, label %if.then2.i.if.then16.i_crit_edge, label %if.then2.i.tb_switch_set_uuid.exit.thread_crit_edge

if.then2.i.tb_switch_set_uuid.exit.thread_crit_edge: ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_set_uuid.exit.thread

if.then2.i.if.then16.i_crit_edge:                 ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then16.i

if.else.i:                                        ; preds = %if.end.i
  %call8.i = call i32 @tb_lc_read_uuid(ptr noundef %sw, ptr noundef nonnull %uuid.i) #16
  %124 = zext i32 %call8.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %124, ptr @__sancov_gen_cov_switch_values.205)
  switch i32 %call8.i, label %tb_switch_set_uuid.exit [
    i32 0, label %if.else.i.if.end24.i_crit_edge
    i32 -22, label %if.else.i.if.then16.i_crit_edge
  ]

if.else.i.if.then16.i_crit_edge:                  ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then16.i

if.else.i.if.end24.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end24.i

if.then16.i:                                      ; preds = %if.else.i.if.then16.i_crit_edge, %if.then2.i.if.then16.i_crit_edge
  %uid17.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 6
  %125 = ptrtoint ptr %uid17.i to i32
  call void @__asan_load8_noabort(i32 %125)
  %126 = load i64, ptr %uid17.i, align 8
  %conv.i = trunc i64 %126 to i32
  %127 = ptrtoint ptr %uuid.i to i32
  call void @__asan_store4_noabort(i32 %127)
  store i32 %conv.i, ptr %uuid.i, align 4
  %shr.i = lshr i64 %126, 32
  %conv20.i = trunc i64 %shr.i to i32
  %128 = ptrtoint ptr %117 to i32
  call void @__asan_store4_noabort(i32 %128)
  store i32 %conv20.i, ptr %117, align 4
  %129 = ptrtoint ptr %118 to i32
  call void @__asan_store4_noabort(i32 %129)
  store i32 -1, ptr %118, align 4
  %130 = ptrtoint ptr %119 to i32
  call void @__asan_store4_noabort(i32 %130)
  store i32 -1, ptr %119, align 4
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then16.i, %if.else.i.if.end24.i_crit_edge
  %call26.i = call ptr @kmemdup(ptr noundef nonnull %uuid.i, i32 noundef 16, i32 noundef 3264) #16
  %131 = ptrtoint ptr %uuid1.i to i32
  call void @__asan_store4_noabort(i32 %131)
  store ptr %call26.i, ptr %uuid1.i, align 8
  %tobool29.not.i = icmp eq ptr %call26.i, null
  br i1 %tobool29.not.i, label %if.end24.i.tb_switch_set_uuid.exit.thread_crit_edge, label %if.end24.i.tb_switch_set_uuid.exit.thread295_crit_edge

if.end24.i.tb_switch_set_uuid.exit.thread295_crit_edge: ; preds = %if.end24.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_set_uuid.exit.thread295

if.end24.i.tb_switch_set_uuid.exit.thread_crit_edge: ; preds = %if.end24.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_set_uuid.exit.thread

tb_switch_set_uuid.exit.thread:                   ; preds = %if.end24.i.tb_switch_set_uuid.exit.thread_crit_edge, %if.then2.i.tb_switch_set_uuid.exit.thread_crit_edge
  %retval.0.i234.ph = phi i32 [ %call4.i233, %if.then2.i.tb_switch_set_uuid.exit.thread_crit_edge ], [ -12, %if.end24.i.tb_switch_set_uuid.exit.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %uuid.i) #16
  br label %do.end30

tb_switch_set_uuid.exit.thread295:                ; preds = %if.end24.i.tb_switch_set_uuid.exit.thread295_crit_edge, %do.end22.tb_switch_set_uuid.exit.thread295_crit_edge
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %uuid.i) #16
  %max_port_number = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 2
  %ports = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 2
  br label %for.body

tb_switch_set_uuid.exit:                          ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %uuid.i) #16
  br label %do.end30

do.end30:                                         ; preds = %tb_switch_set_uuid.exit, %tb_switch_set_uuid.exit.thread
  %retval.0.i234278 = phi i32 [ %retval.0.i234.ph, %tb_switch_set_uuid.exit.thread ], [ %call8.i, %tb_switch_set_uuid.exit ]
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %sw, ptr noundef nonnull @.str.51) #19
  br label %cleanup

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %tb_switch_set_uuid.exit.thread295
  %i.0291 = phi i32 [ 0, %tb_switch_set_uuid.exit.thread295 ], [ %inc, %for.inc.for.body_crit_edge ]
  %132 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %ports, align 4
  %disabled = getelementptr %struct.tb_port, ptr %133, i32 %i.0291, i32 10
  %134 = ptrtoint ptr %disabled to i32
  call void @__asan_load1_noabort(i32 %134)
  %135 = load i8, ptr %disabled, align 1, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %135)
  %tobool33.not = icmp eq i8 %135, 0
  br i1 %tobool33.not, label %if.end63, label %do.body35

do.body35:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_switch_add.__UNIQUE_ID_ddebug267, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_switch_add, %if.then50)) #16
          to label %for.inc [label %if.then50], !srcloc !446

if.then50:                                        ; preds = %do.body35
  call void @__sanitizer_cov_trace_pc() #18
  %sw51 = getelementptr %struct.tb_port, ptr %133, i32 %i.0291, i32 1
  %136 = ptrtoint ptr %sw51 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %sw51, align 4
  %tb52 = getelementptr inbounds %struct.tb_switch, ptr %137, i32 0, i32 5
  %138 = ptrtoint ptr %tb52 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load ptr, ptr %tb52, align 8
  %nhi53 = getelementptr inbounds %struct.tb, ptr %139, i32 0, i32 2
  %140 = ptrtoint ptr %nhi53 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %nhi53, align 4
  %pdev54 = getelementptr inbounds %struct.tb_nhi, ptr %141, i32 0, i32 1
  %142 = ptrtoint ptr %pdev54 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %pdev54, align 4
  %dev55 = getelementptr inbounds %struct.pci_dev, ptr %143, i32 0, i32 44
  %route_hi.i235 = getelementptr inbounds %struct.tb_switch, ptr %137, i32 0, i32 1, i32 4
  %144 = ptrtoint ptr %route_hi.i235 to i32
  call void @__asan_loadN_noabort(i32 %144, i32 8)
  %bf.load.i236 = load i64, ptr %route_hi.i235, align 4
  %145 = lshr i64 %bf.load.i236, 1
  %shl.i237 = and i64 %145, 9223372032559808512
  %route_lo.i238 = getelementptr inbounds %struct.tb_switch, ptr %137, i32 0, i32 1, i32 3
  %146 = ptrtoint ptr %route_lo.i238 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %route_lo.i238, align 8
  %conv2.i239 = zext i32 %147 to i64
  %or.i240 = or i64 %shl.i237, %conv2.i239
  %port = getelementptr %struct.tb_port, ptr %133, i32 %i.0291, i32 9
  %148 = ptrtoint ptr %port to i32
  call void @__asan_load1_noabort(i32 %148)
  %149 = load i8, ptr %port, align 4
  %conv = zext i8 %149 to i32
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_switch_add.__UNIQUE_ID_ddebug267, ptr noundef %dev55, ptr noundef nonnull @.str.53, i64 noundef %or.i240, i32 noundef %conv) #16
  br label %for.inc

if.end63:                                         ; preds = %for.body
  %arrayidx = getelementptr %struct.tb_port, ptr %133, i32 %i.0291
  %call66 = call fastcc i32 @tb_init_port(ptr noundef %arrayidx)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call66)
  %tobool67.not = icmp eq i32 %call66, 0
  br i1 %tobool67.not, label %if.end63.for.inc_crit_edge, label %do.end71

if.end63.for.inc_crit_edge:                       ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

do.end71:                                         ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #18
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %sw, ptr noundef nonnull @.str.55, i32 noundef %i.0291) #19
  br label %cleanup

for.inc:                                          ; preds = %if.end63.for.inc_crit_edge, %if.then50, %do.body35
  %inc = add nuw nsw i32 %i.0291, 1
  %150 = ptrtoint ptr %max_port_number to i32
  call void @__asan_load4_noabort(i32 %150)
  %bf.load = load i32, ptr %max_port_number, align 4
  %bf.lshr = lshr i32 %bf.load, 12
  %bf.clear = and i32 %bf.lshr, 63
  %cmp.not.not = icmp ult i32 %i.0291, %bf.clear
  br i1 %cmp.not.not, label %for.inc.for.body_crit_edge, label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.inc
  call fastcc void @tb_switch_default_link_ports(ptr noundef %sw)
  %call74 = call fastcc i32 @tb_switch_update_link_attributes(ptr noundef %sw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call74)
  %tobool75.not = icmp eq i32 %call74, 0
  br i1 %tobool75.not, label %if.end77, label %for.end.cleanup_crit_edge

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end77:                                         ; preds = %for.end
  %call78 = call i32 @tb_switch_tmu_init(ptr noundef %sw) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call78)
  %tobool79.not = icmp eq i32 %call78, 0
  br i1 %tobool79.not, label %if.end77.if.end82_crit_edge, label %if.end77.cleanup_crit_edge

if.end77.cleanup_crit_edge:                       ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end77.if.end82_crit_edge:                      ; preds = %if.end77
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end82

if.end82:                                         ; preds = %if.end77.if.end82_crit_edge, %if.end.if.end82_crit_edge
  %call84 = call i32 @device_add(ptr noundef %sw) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call84)
  %tobool85.not = icmp eq i32 %call84, 0
  br i1 %tobool85.not, label %if.end91, label %do.end89

do.end89:                                         ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #18
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %sw, ptr noundef nonnull @.str.58, i32 noundef %call84) #19
  br label %cleanup

if.end91:                                         ; preds = %if.end82
  %route_hi.i241 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %151 = ptrtoint ptr %route_hi.i241 to i32
  call void @__asan_loadN_noabort(i32 %151, i32 8)
  %bf.load.i242 = load i64, ptr %route_hi.i241, align 4
  %152 = lshr i64 %bf.load.i242, 1
  %shl.i243 = and i64 %152, 9223372032559808512
  %route_lo.i244 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %153 = ptrtoint ptr %route_lo.i244 to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %route_lo.i244, align 8
  %conv2.i245 = zext i32 %154 to i64
  %or.i246 = or i64 %shl.i243, %conv2.i245
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i246)
  %tobool93.not = icmp eq i64 %or.i246, 0
  br i1 %tobool93.not, label %if.end91.if.end111_crit_edge, label %do.end97

if.end91.if.end111_crit_edge:                     ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end111

do.end97:                                         ; preds = %if.end91
  %vendor = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 8
  %155 = ptrtoint ptr %vendor to i32
  call void @__asan_load2_noabort(i32 %155)
  %156 = load i16, ptr %vendor, align 4
  %conv99 = zext i16 %156 to i32
  %device = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 9
  %157 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %157)
  %158 = load i16, ptr %device, align 2
  %conv100 = zext i16 %158 to i32
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %sw, ptr noundef nonnull @.str.61, i32 noundef %conv99, i32 noundef %conv100) #19
  %vendor_name = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 10
  %159 = ptrtoint ptr %vendor_name to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load ptr, ptr %vendor_name, align 8
  %tobool101.not = icmp eq ptr %160, null
  br i1 %tobool101.not, label %do.end97.if.end111_crit_edge, label %land.lhs.true

do.end97.if.end111_crit_edge:                     ; preds = %do.end97
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end111

land.lhs.true:                                    ; preds = %do.end97
  %device_name = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 11
  %161 = ptrtoint ptr %device_name to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load ptr, ptr %device_name, align 4
  %tobool102.not = icmp eq ptr %162, null
  br i1 %tobool102.not, label %land.lhs.true.if.end111_crit_edge, label %do.end106

land.lhs.true.if.end111_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end111

do.end106:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %sw, ptr noundef nonnull @.str.65, ptr noundef nonnull %160, ptr noundef nonnull %162) #19
  br label %if.end111

if.end111:                                        ; preds = %do.end106, %land.lhs.true.if.end111_crit_edge, %do.end97.if.end111_crit_edge, %if.end91.if.end111_crit_edge
  %call112 = call i32 @usb4_switch_add_ports(ptr noundef %sw) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call112)
  %tobool113.not = icmp eq i32 %call112, 0
  br i1 %tobool113.not, label %if.end119, label %do.end117

do.end117:                                        ; preds = %if.end111
  call void @__sanitizer_cov_trace_pc() #18
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %sw, ptr noundef nonnull @.str.68) #19
  br label %err_del

if.end119:                                        ; preds = %if.end111
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i) #16
  %163 = ptrtoint ptr %val.i to i32
  call void @__asan_store4_noabort(i32 %163)
  store i32 -1, ptr %val.i, align 4, !annotation !447
  %164 = ptrtoint ptr %route_hi.i241 to i32
  call void @__asan_loadN_noabort(i32 %164, i32 8)
  %bf.load.i.i.i248 = load i64, ptr %route_hi.i241, align 4
  %bf.cast1.i.i.i249 = and i64 %bf.load.i.i.i248, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i.i.i249)
  %cmp.i.i.i250 = icmp eq i64 %bf.cast1.i.i.i249, 32
  br i1 %cmp.i.i.i250, label %if.then.i.i, label %nvm_readable.exit.i

if.then.i.i:                                      ; preds = %if.end119
  %call1.i.i = call i32 @usb4_switch_nvm_sector_size(ptr noundef %sw) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %cmp.i.i251 = icmp sgt i32 %call1.i.i, 0
  br i1 %cmp.i.i251, label %if.then.i.i.if.end.i252_crit_edge, label %if.then.i.i.tb_switch_nvm_add.exit.thread_crit_edge

if.then.i.i.tb_switch_nvm_add.exit.thread_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_nvm_add.exit.thread

if.then.i.i.if.end.i252_crit_edge:                ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i252

nvm_readable.exit.i:                              ; preds = %if.end119
  %dma_port.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 3
  %165 = ptrtoint ptr %dma_port.i.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load ptr, ptr %dma_port.i.i, align 8
  %tobool.i.not.i = icmp eq ptr %166, null
  br i1 %tobool.i.not.i, label %nvm_readable.exit.i.tb_switch_nvm_add.exit.thread_crit_edge, label %nvm_readable.exit.i.if.end.i252_crit_edge

nvm_readable.exit.i.if.end.i252_crit_edge:        ; preds = %nvm_readable.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i252

nvm_readable.exit.i.tb_switch_nvm_add.exit.thread_crit_edge: ; preds = %nvm_readable.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_nvm_add.exit.thread

if.end.i252:                                      ; preds = %nvm_readable.exit.i.if.end.i252_crit_edge, %if.then.i.i.if.end.i252_crit_edge
  %config.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1
  %167 = ptrtoint ptr %config.i to i32
  call void @__asan_load2_noabort(i32 %167)
  %168 = load i16, ptr %config.i, align 8
  %169 = and i16 %168, -2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -32634, i16 %169)
  %switch76.i = icmp eq i16 %169, -32634
  br i1 %switch76.i, label %if.end11.i254, label %do.end.i

do.end.i:                                         ; preds = %if.end.i252
  call void @__sanitizer_cov_trace_pc() #18
  %conv.i253 = zext i16 %168 to i32
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %sw, ptr noundef nonnull @.str.188, i32 noundef %conv.i253) #19
  br label %tb_switch_nvm_add.exit.thread

if.end11.i254:                                    ; preds = %if.end.i252
  %call13.i = call ptr @tb_nvm_alloc(ptr noundef %sw) #16
  %cmp.i77.i = icmp ugt ptr %call13.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i77.i, label %tb_switch_nvm_add.exit, label %if.end17.i257

if.end17.i257:                                    ; preds = %if.end11.i254
  %170 = ptrtoint ptr %safe_mode to i32
  call void @__asan_load1_noabort(i32 %170)
  %171 = load i8, ptr %safe_mode, align 1, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %171)
  %tobool.not.i256 = icmp eq i8 %171, 0
  br i1 %tobool.not.i256, label %if.then18.i, label %if.end17.i257.if.end38.i_crit_edge

if.end17.i257.if.end38.i_crit_edge:               ; preds = %if.end17.i257
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end38.i

if.then18.i:                                      ; preds = %if.end17.i257
  %172 = ptrtoint ptr %route_hi.i241 to i32
  call void @__asan_loadN_noabort(i32 %172, i32 8)
  %bf.load.i.i79.i = load i64, ptr %route_hi.i241, align 4
  %bf.cast1.i.i80.i = and i64 %bf.load.i.i79.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i.i80.i)
  %cmp.i.i81.i = icmp eq i64 %bf.cast1.i.i80.i, 32
  br i1 %cmp.i.i81.i, label %if.then.i83.i, label %if.end.i85.i

if.then.i83.i:                                    ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #18
  %call1.i82.i = call i32 @usb4_switch_nvm_read(ptr noundef %sw, i32 noundef 69, ptr noundef nonnull %val.i, i32 noundef 4) #16
  br label %nvm_read.exit.i

if.end.i85.i:                                     ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #18
  %dma_port.i84.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 3
  %173 = ptrtoint ptr %dma_port.i84.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load ptr, ptr %dma_port.i84.i, align 8
  %call2.i.i = call i32 @dma_port_flash_read(ptr noundef %174, i32 noundef 69, ptr noundef nonnull %val.i, i32 noundef 4) #16
  br label %nvm_read.exit.i

nvm_read.exit.i:                                  ; preds = %if.end.i85.i, %if.then.i83.i
  %retval.0.i86.i = phi i32 [ %call1.i82.i, %if.then.i83.i ], [ %call2.i.i, %if.end.i85.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i86.i)
  %tobool20.not.i = icmp eq i32 %retval.0.i86.i, 0
  br i1 %tobool20.not.i, label %if.end22.i, label %nvm_read.exit.i.tb_switch_nvm_add.exit.thread282_crit_edge

nvm_read.exit.i.tb_switch_nvm_add.exit.thread282_crit_edge: ; preds = %nvm_read.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_nvm_add.exit.thread282

if.end22.i:                                       ; preds = %nvm_read.exit.i
  %175 = ptrtoint ptr %generation.i to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load i32, ptr %generation.i, align 4
  %177 = ptrtoint ptr %val.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load i32, ptr %val.i, align 4
  %179 = ptrtoint ptr %route_hi.i241 to i32
  call void @__asan_loadN_noabort(i32 %179, i32 8)
  %bf.load.i.i88.i = load i64, ptr %route_hi.i241, align 4
  %bf.cast1.i.i89.i = and i64 %bf.load.i.i88.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i.i89.i)
  %cmp.i.i90.i = icmp eq i64 %bf.cast1.i.i89.i, 32
  br i1 %cmp.i.i90.i, label %if.then.i92.i, label %if.end.i95.i

if.then.i92.i:                                    ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #18
  %call1.i91.i = call i32 @usb4_switch_nvm_read(ptr noundef %sw, i32 noundef 8, ptr noundef nonnull %val.i, i32 noundef 4) #16
  br label %nvm_read.exit97.i

if.end.i95.i:                                     ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #18
  %dma_port.i93.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 3
  %180 = ptrtoint ptr %dma_port.i93.i to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load ptr, ptr %dma_port.i93.i, align 8
  %call2.i94.i = call i32 @dma_port_flash_read(ptr noundef %181, i32 noundef 8, ptr noundef nonnull %val.i, i32 noundef 4) #16
  br label %nvm_read.exit97.i

nvm_read.exit97.i:                                ; preds = %if.end.i95.i, %if.then.i92.i
  %retval.0.i96.i = phi i32 [ %call1.i91.i, %if.then.i92.i ], [ %call2.i94.i, %if.end.i95.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i96.i)
  %tobool27.not.i259 = icmp eq i32 %retval.0.i96.i, 0
  br i1 %tobool27.not.i259, label %if.end29.i, label %nvm_read.exit97.i.tb_switch_nvm_add.exit.thread282_crit_edge

nvm_read.exit97.i.tb_switch_nvm_add.exit.thread282_crit_edge: ; preds = %nvm_read.exit97.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_nvm_add.exit.thread282

if.end29.i:                                       ; preds = %nvm_read.exit97.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %176)
  %cmp23.i = icmp ult i32 %176, 3
  %cond.neg.i = select i1 %cmp23.i, i32 -8192, i32 -16384
  %and.i = and i32 %178, 7
  %shl.i260 = shl nuw nsw i32 1048576, %and.i
  %div73.i = lshr exact i32 %shl.i260, 3
  %sub.i = add nsw i32 %div73.i, %cond.neg.i
  %div2574.i = lshr exact i32 %sub.i, 1
  %182 = ptrtoint ptr %val.i to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load i32, ptr %val.i, align 4
  %shr.i261 = lshr i32 %183, 16
  %conv30.i = trunc i32 %shr.i261 to i8
  %major.i = getelementptr inbounds %struct.tb_nvm, ptr %call13.i, i32 0, i32 1
  %184 = ptrtoint ptr %major.i to i32
  call void @__asan_store1_noabort(i32 %184)
  store i8 %conv30.i, ptr %major.i, align 4
  %shr31.i = lshr i32 %183, 8
  %conv32.i = trunc i32 %shr31.i to i8
  %minor.i = getelementptr inbounds %struct.tb_nvm, ptr %call13.i, i32 0, i32 2
  %185 = ptrtoint ptr %minor.i to i32
  call void @__asan_store1_noabort(i32 %185)
  store i8 %conv32.i, ptr %minor.i, align 1
  %call33.i = call i32 @tb_nvm_add_active(ptr noundef %call13.i, i32 noundef %div2574.i, ptr noundef nonnull @tb_switch_nvm_read) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33.i)
  %tobool34.not.i = icmp eq i32 %call33.i, 0
  br i1 %tobool34.not.i, label %if.end29.i.if.end38.i_crit_edge, label %if.end29.i.tb_switch_nvm_add.exit.thread282_crit_edge

if.end29.i.tb_switch_nvm_add.exit.thread282_crit_edge: ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_nvm_add.exit.thread282

if.end29.i.if.end38.i_crit_edge:                  ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end38.i

if.end38.i:                                       ; preds = %if.end29.i.if.end38.i_crit_edge, %if.end17.i257.if.end38.i_crit_edge
  %no_nvm_upgrade.i262 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 23
  %186 = ptrtoint ptr %no_nvm_upgrade.i262 to i32
  call void @__asan_load1_noabort(i32 %186)
  %187 = load i8, ptr %no_nvm_upgrade.i262, align 4, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %187)
  %tobool39.not.i263 = icmp eq i8 %187, 0
  br i1 %tobool39.not.i263, label %if.then40.i264, label %if.end38.i.if.end45.i_crit_edge

if.end38.i.if.end45.i_crit_edge:                  ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end45.i

if.then40.i264:                                   ; preds = %if.end38.i
  %call41.i = call i32 @tb_nvm_add_non_active(ptr noundef %call13.i, i32 noundef 524288, ptr noundef nonnull @tb_switch_nvm_write) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41.i)
  %tobool42.not.i = icmp eq i32 %call41.i, 0
  br i1 %tobool42.not.i, label %if.then40.i264.if.end45.i_crit_edge, label %if.then40.i264.tb_switch_nvm_add.exit.thread282_crit_edge

if.then40.i264.tb_switch_nvm_add.exit.thread282_crit_edge: ; preds = %if.then40.i264
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_nvm_add.exit.thread282

if.then40.i264.if.end45.i_crit_edge:              ; preds = %if.then40.i264
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end45.i

if.end45.i:                                       ; preds = %if.then40.i264.if.end45.i_crit_edge, %if.end38.i.if.end45.i_crit_edge
  %nvm46.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 22
  %188 = ptrtoint ptr %nvm46.i to i32
  call void @__asan_store4_noabort(i32 %188)
  store ptr %call13.i, ptr %nvm46.i, align 8
  br label %tb_switch_nvm_add.exit.thread

tb_switch_nvm_add.exit.thread282:                 ; preds = %if.then40.i264.tb_switch_nvm_add.exit.thread282_crit_edge, %if.end29.i.tb_switch_nvm_add.exit.thread282_crit_edge, %nvm_read.exit97.i.tb_switch_nvm_add.exit.thread282_crit_edge, %nvm_read.exit.i.tb_switch_nvm_add.exit.thread282_crit_edge
  %ret.1.i = phi i32 [ %call41.i, %if.then40.i264.tb_switch_nvm_add.exit.thread282_crit_edge ], [ %call33.i, %if.end29.i.tb_switch_nvm_add.exit.thread282_crit_edge ], [ %retval.0.i96.i, %nvm_read.exit97.i.tb_switch_nvm_add.exit.thread282_crit_edge ], [ %retval.0.i86.i, %nvm_read.exit.i.tb_switch_nvm_add.exit.thread282_crit_edge ]
  call void @tb_nvm_free(ptr noundef %call13.i) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i) #16
  br label %do.end125

tb_switch_nvm_add.exit.thread:                    ; preds = %if.end45.i, %do.end.i, %nvm_readable.exit.i.tb_switch_nvm_add.exit.thread_crit_edge, %if.then.i.i.tb_switch_nvm_add.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i) #16
  %call129 = call i32 @device_init_wakeup(ptr noundef %sw, i1 noundef zeroext true) #16
  %call.i = call i32 @__pm_runtime_set_status(ptr noundef %sw, i32 noundef 0) #16
  %rpm = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 26
  %189 = ptrtoint ptr %rpm to i32
  call void @__asan_load1_noabort(i32 %189)
  %190 = load i8, ptr %rpm, align 1, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %190)
  %tobool132.not = icmp eq i8 %190, 0
  br i1 %tobool132.not, label %tb_switch_nvm_add.exit.thread.if.end140_crit_edge, label %if.then133

tb_switch_nvm_add.exit.thread.if.end140_crit_edge: ; preds = %tb_switch_nvm_add.exit.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end140

tb_switch_nvm_add.exit:                           ; preds = %if.end11.i254
  call void @__sanitizer_cov_trace_pc() #18
  %191 = ptrtoint ptr %call13.i to i32
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i) #16
  br label %do.end125

do.end125:                                        ; preds = %tb_switch_nvm_add.exit, %tb_switch_nvm_add.exit.thread282
  %retval.0.i265285 = phi i32 [ %ret.1.i, %tb_switch_nvm_add.exit.thread282 ], [ %191, %tb_switch_nvm_add.exit ]
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %sw, ptr noundef nonnull @.str.71) #19
  call void @usb4_switch_remove_ports(ptr noundef %sw) #16
  br label %err_del

if.then133:                                       ; preds = %tb_switch_nvm_add.exit.thread
  call void @__sanitizer_cov_trace_pc() #18
  call void @pm_runtime_set_autosuspend_delay(ptr noundef %sw, i32 noundef 15000) #16
  call void @__pm_runtime_use_autosuspend(ptr noundef %sw, i1 noundef zeroext true) #16
  %call.i266 = call i64 @ktime_get_mono_fast_ns() #16
  %last_busy.i = getelementptr inbounds %struct.device, ptr %sw, i32 0, i32 12, i32 22
  %192 = ptrtoint ptr %last_busy.i to i32
  call void @__asan_store8_noabort(i32 %192)
  store volatile i64 %call.i266, ptr %last_busy.i, align 8
  call void @pm_runtime_enable(ptr noundef %sw) #16
  %call.i267 = call i32 @__pm_runtime_suspend(ptr noundef %sw, i32 noundef 9) #16
  br label %if.end140

if.end140:                                        ; preds = %if.then133, %tb_switch_nvm_add.exit.thread.if.end140_crit_edge
  call void @tb_switch_debugfs_init(ptr noundef %sw) #16
  br label %cleanup

err_del:                                          ; preds = %do.end125, %do.end117
  %ret.0 = phi i32 [ %call112, %do.end117 ], [ %retval.0.i265285, %do.end125 ]
  call void @device_del(ptr noundef %sw) #16
  br label %cleanup

cleanup:                                          ; preds = %err_del, %if.end140, %do.end89, %if.end77.cleanup_crit_edge, %for.end.cleanup_crit_edge, %do.end71, %do.end30, %do.end8, %do.end
  %retval.0 = phi i32 [ %retval.0.i216274, %do.end ], [ %call84, %do.end89 ], [ %ret.0, %err_del ], [ 0, %if.end140 ], [ %call3, %do.end8 ], [ %retval.0.i234278, %do.end30 ], [ %call66, %do.end71 ], [ %call74, %for.end.cleanup_crit_edge ], [ %call78, %if.end77.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_drom_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @tb_check_quirks(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @tb_init_port(ptr noundef %port) unnamed_addr #0 align 64 {
entry:
  %hop = alloca %struct.tb_regs_hop, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %list = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 16
  %0 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %0)
  store volatile ptr %list, ptr %list, align 4
  %prev.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 16, i32 1
  %1 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %list, ptr %prev.i, align 4
  %port1 = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %2 = ptrtoint ptr %port1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %port1, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %sw.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %4 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sw.i, align 4
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %5, i32 0, i32 20
  %6 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not.i = icmp eq i8 %7, 0
  br i1 %tobool.not.i, label %tb_port_read.exit, label %if.end.do.body_crit_edge

if.end.do.body_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body

tb_port_read.exit:                                ; preds = %if.end
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %5, i32 0, i32 5
  %8 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ctl.i, align 8
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %5, i32 0, i32 1, i32 4
  %12 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %12, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %13 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %13, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %5, i32 0, i32 1, i32 3
  %14 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %15 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %conv.i = zext i8 %3 to i32
  %call4.i = tail call i32 @tb_cfg_read(ptr noundef %11, ptr noundef %port, i64 noundef %or.i.i, i32 noundef %conv.i, i32 noundef 1, i32 noundef 0, i32 noundef 8) #16
  %16 = zext i32 %call4.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %16, ptr @__sancov_gen_cov_switch_values.206)
  switch i32 %call4.i, label %tb_port_read.exit.cleanup_crit_edge [
    i32 0, label %if.end13
    i32 -19, label %tb_port_read.exit.do.body_crit_edge
  ]

tb_port_read.exit.do.body_crit_edge:              ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body

tb_port_read.exit.cleanup_crit_edge:              ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body:                                          ; preds = %tb_port_read.exit.do.body_crit_edge, %if.end.do.body_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_init_port.__UNIQUE_ID_ddebug253, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_init_port, %if.then9)) #16
          to label %do.end [label %if.then9], !srcloc !446

if.then9:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %17 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %sw.i, align 4
  %tb = getelementptr inbounds %struct.tb_switch, ptr %18, i32 0, i32 5
  %19 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %tb, align 8
  %nhi = getelementptr inbounds %struct.tb, ptr %20, i32 0, i32 2
  %21 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %24, i32 0, i32 44
  %25 = ptrtoint ptr %port1 to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %port1, align 4
  %conv = zext i8 %26 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_init_port.__UNIQUE_ID_ddebug253, ptr noundef %dev, ptr noundef nonnull @.str.169, i32 noundef %conv) #16
  br label %do.end

do.end:                                           ; preds = %if.then9, %do.body
  %disabled = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 10
  %27 = ptrtoint ptr %disabled to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 1, ptr %disabled, align 1
  br label %cleanup

if.end13:                                         ; preds = %tb_port_read.exit
  %type = getelementptr inbounds %struct.tb_regs_port_header, ptr %port, i32 0, i32 2
  %28 = ptrtoint ptr %type to i32
  call void @__asan_loadN_noabort(i32 %28, i32 12)
  %bf.load = load i96, ptr %type, align 4
  %29 = and i96 %bf.load, 18446742974197923840
  %cmp15 = icmp eq i96 %29, 1099511627776
  br i1 %cmp15, label %if.then17, label %if.else89

if.then17:                                        ; preds = %if.end13
  %call18 = tail call i32 @tb_port_find_cap(ptr noundef %port, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %cmp19 = icmp sgt i32 %call18, 0
  br i1 %cmp19, label %if.then21, label %do.end34

if.then21:                                        ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #18
  %cap_phy = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 4
  %30 = ptrtoint ptr %cap_phy to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %call18, ptr %cap_phy, align 4
  br label %if.end66

do.end34:                                         ; preds = %if.then17
  %31 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %sw.i, align 4
  %tb36 = getelementptr inbounds %struct.tb_switch, ptr %32, i32 0, i32 5
  %33 = ptrtoint ptr %tb36 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %tb36, align 8
  %nhi37 = getelementptr inbounds %struct.tb, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %nhi37 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %nhi37, align 4
  %pdev38 = getelementptr inbounds %struct.tb_nhi, ptr %36, i32 0, i32 1
  %37 = ptrtoint ptr %pdev38 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %pdev38, align 4
  %dev39 = getelementptr inbounds %struct.pci_dev, ptr %38, i32 0, i32 44
  %call40 = tail call ptr @dev_driver_string(ptr noundef %dev39) #16
  %39 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %sw.i, align 4
  %tb42 = getelementptr inbounds %struct.tb_switch, ptr %40, i32 0, i32 5
  %41 = ptrtoint ptr %tb42 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %tb42, align 8
  %nhi43 = getelementptr inbounds %struct.tb, ptr %42, i32 0, i32 2
  %43 = ptrtoint ptr %nhi43 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %nhi43, align 4
  %pdev44 = getelementptr inbounds %struct.tb_nhi, ptr %44, i32 0, i32 1
  %45 = ptrtoint ptr %pdev44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %pdev44, align 4
  %init_name.i = getelementptr inbounds %struct.pci_dev, ptr %46, i32 0, i32 44, i32 3
  %47 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i136 = icmp eq ptr %48, null
  br i1 %tobool.not.i136, label %if.end.i137, label %do.end34.dev_name.exit_crit_edge

do.end34.dev_name.exit_crit_edge:                 ; preds = %do.end34
  call void @__sanitizer_cov_trace_pc() #18
  br label %dev_name.exit

if.end.i137:                                      ; preds = %do.end34
  call void @__sanitizer_cov_trace_pc() #18
  %dev45 = getelementptr inbounds %struct.pci_dev, ptr %46, i32 0, i32 44
  %49 = ptrtoint ptr %dev45 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %dev45, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i137, %do.end34.dev_name.exit_crit_edge
  %retval.0.i138 = phi ptr [ %50, %if.end.i137 ], [ %48, %do.end34.dev_name.exit_crit_edge ]
  %route_hi.i = getelementptr inbounds %struct.tb_switch, ptr %40, i32 0, i32 1, i32 4
  %51 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %51, i32 8)
  %bf.load.i = load i64, ptr %route_hi.i, align 4
  %52 = lshr i64 %bf.load.i, 1
  %shl.i = and i64 %52, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %40, i32 0, i32 1, i32 3
  %53 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %54 to i64
  %or.i = or i64 %shl.i, %conv2.i
  %55 = ptrtoint ptr %port1 to i32
  call void @__asan_load1_noabort(i32 %55)
  %56 = load i8, ptr %port1, align 4
  %conv50 = zext i8 %56 to i32
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 759, i32 noundef 9, ptr noundef nonnull @.str.170, ptr noundef %call40, ptr noundef %retval.0.i138, i64 noundef %or.i, i32 noundef %conv50) #16
  br label %if.end66

if.end66:                                         ; preds = %dev_name.exit, %if.then21
  %call67 = tail call i32 @tb_port_find_cap(ptr noundef %port, i32 noundef 6) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call67)
  %cmp68 = icmp sgt i32 %call67, 0
  br i1 %cmp68, label %if.then70, label %if.end66.if.end71_crit_edge

if.end66.if.end71_crit_edge:                      ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end71

if.then70:                                        ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #18
  %cap_usb4 = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 7
  %57 = ptrtoint ptr %cap_usb4 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %call67, ptr %cap_usb4, align 4
  br label %if.end71

if.end71:                                         ; preds = %if.then70, %if.end66.if.end71_crit_edge
  %58 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %sw.i, align 4
  %thunderbolt_version.i = getelementptr inbounds %struct.tb_switch, ptr %59, i32 0, i32 1, i32 4
  %60 = ptrtoint ptr %thunderbolt_version.i to i32
  call void @__asan_loadN_noabort(i32 %60, i32 8)
  %bf.load.i139 = load i64, ptr %thunderbolt_version.i, align 4
  %bf.cast1.i = and i64 %bf.load.i139, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i)
  %cmp.i = icmp eq i64 %bf.cast1.i, 32
  br i1 %cmp.i, label %if.then74, label %if.end71.if.end83_crit_edge

if.end71.if.end83_crit_edge:                      ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end83

if.then74:                                        ; preds = %if.end71
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %hop) #16
  %61 = ptrtoint ptr %hop to i32
  call void @__asan_store8_noabort(i32 %61)
  store i64 -1, ptr %hop, align 8, !annotation !447
  %is_unplugged.i141 = getelementptr inbounds %struct.tb_switch, ptr %59, i32 0, i32 20
  %62 = ptrtoint ptr %is_unplugged.i141 to i32
  call void @__asan_load1_noabort(i32 %62)
  %63 = load i8, ptr %is_unplugged.i141, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %63)
  %tobool.not.i142 = icmp eq i8 %63, 0
  br i1 %tobool.not.i142, label %tb_port_read.exit156, label %if.then74.if.end82_crit_edge

if.then74.if.end82_crit_edge:                     ; preds = %if.then74
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end82

tb_port_read.exit156:                             ; preds = %if.then74
  %tb.i143 = getelementptr inbounds %struct.tb_switch, ptr %59, i32 0, i32 5
  %64 = ptrtoint ptr %tb.i143 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %tb.i143, align 8
  %ctl.i144 = getelementptr inbounds %struct.tb, ptr %65, i32 0, i32 3
  %66 = ptrtoint ptr %ctl.i144 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %ctl.i144, align 8
  %68 = lshr i64 %bf.load.i139, 1
  %shl.i.i147 = and i64 %68, 9223372032559808512
  %route_lo.i.i148 = getelementptr inbounds %struct.tb_switch, ptr %59, i32 0, i32 1, i32 3
  %69 = ptrtoint ptr %route_lo.i.i148 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %route_lo.i.i148, align 8
  %conv2.i.i149 = zext i32 %70 to i64
  %or.i.i150 = or i64 %shl.i.i147, %conv2.i.i149
  %71 = ptrtoint ptr %port1 to i32
  call void @__asan_load1_noabort(i32 %71)
  %72 = load i8, ptr %port1, align 4
  %conv.i152 = zext i8 %72 to i32
  %call4.i153 = call i32 @tb_cfg_read(ptr noundef %67, ptr noundef nonnull %hop, i64 noundef %or.i.i150, i32 noundef %conv.i152, i32 noundef 0, i32 noundef 0, i32 noundef 2) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i153)
  %tobool76.not = icmp eq i32 %call4.i153, 0
  br i1 %tobool76.not, label %if.then77, label %tb_port_read.exit156.if.end82_crit_edge

tb_port_read.exit156.if.end82_crit_edge:          ; preds = %tb_port_read.exit156
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end82

if.then77:                                        ; preds = %tb_port_read.exit156
  call void @__sanitizer_cov_trace_pc() #18
  %73 = ptrtoint ptr %hop to i32
  call void @__asan_load8_noabort(i32 %73)
  %bf.load78 = load i64, ptr %hop, align 8
  %bf.lshr79 = lshr i64 %bf.load78, 39
  %74 = trunc i64 %bf.lshr79 to i32
  %bf.cast81 = and i32 %74, 255
  %ctl_credits = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 18
  %75 = ptrtoint ptr %ctl_credits to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 %bf.cast81, ptr %ctl_credits, align 4
  br label %if.end82

if.end82:                                         ; preds = %if.then77, %tb_port_read.exit156.if.end82_crit_edge, %if.then74.if.end82_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %hop) #16
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.end71.if.end83_crit_edge
  %ctl_credits84 = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 18
  %76 = ptrtoint ptr %ctl_credits84 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %ctl_credits84, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %77)
  %tobool85.not = icmp eq i32 %77, 0
  br i1 %tobool85.not, label %if.then86, label %if.end83.if.end95_crit_edge

if.end83.if.end95_crit_edge:                      ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end95

if.then86:                                        ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #18
  %78 = ptrtoint ptr %ctl_credits84 to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 2, ptr %ctl_credits84, align 4
  br label %if.end95

if.else89:                                        ; preds = %if.end13
  %call90 = tail call i32 @tb_port_find_cap(ptr noundef %port, i32 noundef 4) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call90)
  %cmp91 = icmp sgt i32 %call90, 0
  br i1 %cmp91, label %if.then93, label %if.else89.if.end95_crit_edge

if.else89.if.end95_crit_edge:                     ; preds = %if.else89
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end95

if.then93:                                        ; preds = %if.else89
  call void @__sanitizer_cov_trace_pc() #18
  %cap_adap = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 6
  %79 = ptrtoint ptr %cap_adap to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 %call90, ptr %cap_adap, align 4
  br label %if.end95

if.end95:                                         ; preds = %if.then93, %if.else89.if.end95_crit_edge, %if.then86, %if.end83.if.end95_crit_edge
  %nfc_credits = getelementptr inbounds %struct.tb_regs_port_header, ptr %port, i32 0, i32 3
  %80 = ptrtoint ptr %nfc_credits to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %nfc_credits, align 4
  %and = lshr i32 %81, 20
  %shr = and i32 %and, 1023
  %total_credits = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 17
  %82 = ptrtoint ptr %total_credits to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 %shr, ptr %total_credits, align 4
  %83 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %sw.i, align 4
  %tb98 = getelementptr inbounds %struct.tb_switch, ptr %84, i32 0, i32 5
  %85 = ptrtoint ptr %tb98 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %tb98, align 8
  call fastcc void @tb_dump_port(ptr noundef %86, ptr noundef %port)
  br label %cleanup

cleanup:                                          ; preds = %if.end95, %do.end, %tb_port_read.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %do.end ], [ 0, %if.end95 ], [ 0, %entry.cleanup_crit_edge ], [ %call4.i, %tb_port_read.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @tb_switch_default_link_ports(ptr nocapture noundef readonly %sw) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %max_port_number = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 2
  %0 = ptrtoint ptr %max_port_number to i32
  call void @__asan_load4_noabort(i32 %0)
  %bf.load72 = load i32, ptr %max_port_number, align 4
  %bf.lshr73 = lshr i32 %bf.load72, 12
  %bf.clear74 = and i32 %bf.lshr73, 63
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bf.clear74)
  %cmp.not75 = icmp eq i32 %bf.clear74, 0
  br i1 %cmp.not75, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %ports = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 2
  %tb = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %route_hi.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  br label %for.body

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %for.body.lr.ph
  %bf.clear78 = phi i32 [ %bf.clear74, %for.body.lr.ph ], [ %bf.clear, %cleanup.for.body_crit_edge ]
  %i.076 = phi i32 [ 1, %for.body.lr.ph ], [ %inc, %cleanup.for.body_crit_edge ]
  %1 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %ports, align 4
  %arrayidx = getelementptr %struct.tb_port, ptr %2, i32 %i.076
  %tobool.not.i = icmp eq ptr %arrayidx, null
  br i1 %tobool.not.i, label %for.body.cleanup_crit_edge, label %land.lhs.true.i

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true.i:                                  ; preds = %for.body
  %port1.i = getelementptr %struct.tb_port, ptr %2, i32 %i.076, i32 9
  %3 = ptrtoint ptr %port1.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %port1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool2.not.i = icmp eq i8 %4, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.cleanup_crit_edge, label %tb_port_is_null.exit

land.lhs.true.i.cleanup_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_port_is_null.exit:                             ; preds = %land.lhs.true.i
  %type.i = getelementptr inbounds %struct.tb_regs_port_header, ptr %arrayidx, i32 0, i32 2
  %5 = ptrtoint ptr %type.i to i32
  call void @__asan_loadN_noabort(i32 %5, i32 12)
  %bf.load.i = load i96, ptr %type.i, align 4
  %6 = and i96 %bf.load.i, 18446742974197923840
  %cmp.i = icmp ne i96 %6, 1099511627776
  call void @__sanitizer_cov_trace_cmp4(i32 %i.076, i32 %bf.clear78)
  %cmp6 = icmp eq i32 %i.076, %bf.clear78
  %or.cond = select i1 %cmp.i, i1 true, i1 %cmp6
  br i1 %or.cond, label %tb_port_is_null.exit.cleanup_crit_edge, label %lor.lhs.false

tb_port_is_null.exit.cleanup_crit_edge:           ; preds = %tb_port_is_null.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false:                                    ; preds = %tb_port_is_null.exit
  %add = add nuw nsw i32 %i.076, 1
  %arrayidx8 = getelementptr %struct.tb_port, ptr %2, i32 %add
  %tobool.not.i61 = icmp eq ptr %arrayidx8, null
  br i1 %tobool.not.i61, label %lor.lhs.false.cleanup_crit_edge, label %land.lhs.true.i64

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true.i64:                                ; preds = %lor.lhs.false
  %port1.i62 = getelementptr %struct.tb_port, ptr %2, i32 %add, i32 9
  %7 = ptrtoint ptr %port1.i62 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %port1.i62, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool2.not.i63 = icmp eq i8 %8, 0
  br i1 %tobool2.not.i63, label %land.lhs.true.i64.cleanup_crit_edge, label %tb_port_is_null.exit69

land.lhs.true.i64.cleanup_crit_edge:              ; preds = %land.lhs.true.i64
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_port_is_null.exit69:                           ; preds = %land.lhs.true.i64
  %type.i65 = getelementptr inbounds %struct.tb_regs_port_header, ptr %arrayidx8, i32 0, i32 2
  %9 = ptrtoint ptr %type.i65 to i32
  call void @__asan_loadN_noabort(i32 %9, i32 12)
  %bf.load.i66 = load i96, ptr %type.i65, align 4
  %10 = and i96 %bf.load.i66, 18446742974197923840
  %cmp.i67 = icmp eq i96 %10, 1099511627776
  br i1 %cmp.i67, label %if.end11, label %tb_port_is_null.exit69.cleanup_crit_edge

tb_port_is_null.exit69.cleanup_crit_edge:         ; preds = %tb_port_is_null.exit69
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end11:                                         ; preds = %tb_port_is_null.exit69
  %dual_link_port = getelementptr %struct.tb_port, ptr %2, i32 %i.076, i32 12
  %11 = ptrtoint ptr %dual_link_port to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dual_link_port, align 4
  %tobool.not = icmp eq ptr %12, null
  br i1 %tobool.not, label %land.lhs.true, label %if.end11.cleanup_crit_edge

if.end11.cleanup_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true:                                    ; preds = %if.end11
  %dual_link_port15 = getelementptr %struct.tb_port, ptr %2, i32 %add, i32 12
  %13 = ptrtoint ptr %dual_link_port15 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %dual_link_port15, align 4
  %tobool16.not = icmp eq ptr %14, null
  br i1 %tobool16.not, label %if.then17, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then17:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %link_nr = getelementptr %struct.tb_port, ptr %2, i32 %i.076, i32 13
  %15 = ptrtoint ptr %link_nr to i32
  call void @__asan_load1_noabort(i32 %15)
  %bf.load18 = load i8, ptr %link_nr, align 4
  %bf.clear19 = and i8 %bf.load18, 127
  store i8 %bf.clear19, ptr %link_nr, align 4
  %16 = ptrtoint ptr %dual_link_port to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %arrayidx8, ptr %dual_link_port, align 4
  %link_nr21 = getelementptr %struct.tb_port, ptr %2, i32 %add, i32 13
  %17 = ptrtoint ptr %link_nr21 to i32
  call void @__asan_load1_noabort(i32 %17)
  %bf.load22 = load i8, ptr %link_nr21, align 4
  %bf.set24 = or i8 %bf.load22, -128
  store i8 %bf.set24, ptr %link_nr21, align 4
  %18 = ptrtoint ptr %dual_link_port15 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %arrayidx, ptr %dual_link_port15, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_switch_default_link_ports.__UNIQUE_ID_ddebug263, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_switch_default_link_ports, %if.then31)) #16
          to label %cleanup [label %if.then31], !srcloc !446

if.then31:                                        ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #18
  %19 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %tb, align 8
  %nhi = getelementptr inbounds %struct.tb, ptr %20, i32 0, i32 2
  %21 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %24, i32 0, i32 44
  %25 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %25, i32 8)
  %bf.load.i70 = load i64, ptr %route_hi.i, align 4
  %26 = lshr i64 %bf.load.i70, 1
  %shl.i = and i64 %26, 9223372032559808512
  %27 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %28 to i64
  %or.i = or i64 %shl.i, %conv2.i
  %29 = ptrtoint ptr %port1.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %port1.i, align 4
  %conv = zext i8 %30 to i32
  %31 = ptrtoint ptr %port1.i62 to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %port1.i62, align 4
  %conv35 = zext i8 %32 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_switch_default_link_ports.__UNIQUE_ID_ddebug263, ptr noundef %dev, ptr noundef nonnull @.str.187, i64 noundef %or.i, i32 noundef %conv, i32 noundef %conv35) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then31, %if.then17, %land.lhs.true.cleanup_crit_edge, %if.end11.cleanup_crit_edge, %tb_port_is_null.exit69.cleanup_crit_edge, %land.lhs.true.i64.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %tb_port_is_null.exit.cleanup_crit_edge, %land.lhs.true.i.cleanup_crit_edge, %for.body.cleanup_crit_edge
  %inc = add nuw nsw i32 %i.076, 1
  %33 = ptrtoint ptr %max_port_number to i32
  call void @__asan_load4_noabort(i32 %33)
  %bf.load = load i32, ptr %max_port_number, align 4
  %bf.lshr = lshr i32 %bf.load, 12
  %bf.clear = and i32 %bf.lshr, 63
  %cmp.not.not = icmp ult i32 %i.076, %bf.clear
  br i1 %cmp.not.not, label %cleanup.for.body_crit_edge, label %cleanup.for.end_crit_edge

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %cleanup.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_switch_tmu_init(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @device_add(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb4_switch_add_ports(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @device_init_wakeup(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @pm_runtime_set_autosuspend_delay(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @pm_runtime_enable(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @tb_switch_debugfs_init(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @usb4_switch_remove_ports(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_del(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @tb_switch_remove(ptr noundef %sw) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @tb_switch_debugfs_remove(ptr noundef %sw) #16
  %rpm = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 26
  %0 = ptrtoint ptr %rpm to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %rpm, align 1, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call.i = tail call i32 @__pm_runtime_resume(ptr noundef %sw, i32 noundef 4) #16
  tail call void @__pm_runtime_disable(ptr noundef %sw, i1 noundef zeroext true) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %ports = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 2
  %2 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ports, align 4
  %max_port_number = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 2
  %port.050 = getelementptr %struct.tb_port, ptr %3, i32 1
  %4 = ptrtoint ptr %max_port_number to i32
  call void @__asan_load4_noabort(i32 %4)
  %bf.load51 = load i32, ptr %max_port_number, align 4
  %bf.lshr52 = lshr i32 %bf.load51, 12
  %bf.clear53 = and i32 %bf.lshr52, 63
  %arrayidx354 = getelementptr %struct.tb_port, ptr %3, i32 %bf.clear53
  %cmp.not55 = icmp ugt ptr %port.050, %arrayidx354
  br i1 %cmp.not55, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body:                                         ; preds = %if.end13.for.body_crit_edge, %if.end.for.body_crit_edge
  %port.059 = phi ptr [ %port.0, %if.end13.for.body_crit_edge ], [ %port.050, %if.end.for.body_crit_edge ]
  %.pn56 = phi ptr [ %port.059, %if.end13.for.body_crit_edge ], [ %3, %if.end.for.body_crit_edge ]
  %sw.i.i = getelementptr %struct.tb_port, ptr %.pn56, i32 1, i32 1
  %5 = ptrtoint ptr %sw.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %sw.i.i, align 4
  %ports.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %ports.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ports.i.i.i, align 4
  %upstream_port_number.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %6, i32 0, i32 1, i32 2
  %9 = ptrtoint ptr %upstream_port_number.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %bf.load.i.i.i = load i32, ptr %upstream_port_number.i.i.i, align 4
  %bf.lshr.i.i.i = lshr i32 %bf.load.i.i.i, 18
  %bf.clear.i.i.i = and i32 %bf.lshr.i.i.i, 63
  %arrayidx.i.i.i = getelementptr %struct.tb_port, ptr %8, i32 %bf.clear.i.i.i
  %cmp.i.i = icmp eq ptr %arrayidx.i.i.i, %port.059
  br i1 %cmp.i.i, label %for.body.if.else_crit_edge, label %tb_is_upstream_port.exit.i

for.body.if.else_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

tb_is_upstream_port.exit.i:                       ; preds = %for.body
  %dual_link_port.i.i = getelementptr %struct.tb_port, ptr %.pn56, i32 1, i32 12
  %10 = ptrtoint ptr %dual_link_port.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dual_link_port.i.i, align 4
  %cmp1.i.i = icmp eq ptr %11, %arrayidx.i.i.i
  br i1 %cmp1.i.i, label %tb_is_upstream_port.exit.i.if.else_crit_edge, label %if.end.i

tb_is_upstream_port.exit.i.if.else_crit_edge:     ; preds = %tb_is_upstream_port.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

if.end.i:                                         ; preds = %tb_is_upstream_port.exit.i
  %remote.i = getelementptr %struct.tb_port, ptr %.pn56, i32 1, i32 2
  %12 = ptrtoint ptr %remote.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %remote.i, align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end.i.if.else_crit_edge, label %if.end2.i

if.end.i.if.else_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

if.end2.i:                                        ; preds = %if.end.i
  %tobool3.not.i = icmp eq ptr %11, null
  br i1 %tobool3.not.i, label %if.end2.i.if.then5_crit_edge, label %land.lhs.true.i

if.end2.i.if.then5_crit_edge:                     ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then5

land.lhs.true.i:                                  ; preds = %if.end2.i
  %link_nr.i = getelementptr %struct.tb_port, ptr %.pn56, i32 1, i32 13
  %14 = ptrtoint ptr %link_nr.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %bf.load.i = load i8, ptr %link_nr.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool4.not.i = icmp sgt i8 %bf.load.i, -1
  br i1 %tobool4.not.i, label %land.lhs.true.i.if.then5_crit_edge, label %land.lhs.true.i.if.else_crit_edge

land.lhs.true.i.if.else_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

land.lhs.true.i.if.then5_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then5

if.then5:                                         ; preds = %land.lhs.true.i.if.then5_crit_edge, %if.end2.i.if.then5_crit_edge
  %15 = ptrtoint ptr %remote.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %remote.i, align 4
  %sw6 = getelementptr inbounds %struct.tb_port, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %sw6 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %sw6, align 4
  tail call void @tb_switch_remove(ptr noundef %18)
  br label %if.end13.sink.split

if.else:                                          ; preds = %land.lhs.true.i.if.else_crit_edge, %if.end.i.if.else_crit_edge, %tb_is_upstream_port.exit.i.if.else_crit_edge, %for.body.if.else_crit_edge
  %xdomain = getelementptr %struct.tb_port, ptr %.pn56, i32 1, i32 3
  %19 = ptrtoint ptr %xdomain to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %xdomain, align 4
  %tobool8.not = icmp eq ptr %20, null
  br i1 %tobool8.not, label %if.else.if.end13_crit_edge, label %if.then9

if.else.if.end13_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

if.then9:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @tb_xdomain_remove(ptr noundef nonnull %20) #16
  br label %if.end13.sink.split

if.end13.sink.split:                              ; preds = %if.then9, %if.then5
  %xdomain.sink = phi ptr [ %xdomain, %if.then9 ], [ %remote.i, %if.then5 ]
  %21 = ptrtoint ptr %xdomain.sink to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %xdomain.sink, align 4
  br label %if.end13

if.end13:                                         ; preds = %if.end13.sink.split, %if.else.if.end13_crit_edge
  tail call void @tb_retimer_remove_all(ptr noundef %port.059) #16
  %port.0 = getelementptr %struct.tb_port, ptr %port.059, i32 1
  %22 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ports, align 4
  %24 = ptrtoint ptr %max_port_number to i32
  call void @__asan_load4_noabort(i32 %24)
  %bf.load = load i32, ptr %max_port_number, align 4
  %bf.lshr = lshr i32 %bf.load, 12
  %bf.clear = and i32 %bf.lshr, 63
  %arrayidx3 = getelementptr %struct.tb_port, ptr %23, i32 %bf.clear
  %cmp.not = icmp ugt ptr %port.0, %arrayidx3
  br i1 %cmp.not, label %if.end13.for.end_crit_edge, label %if.end13.for.body_crit_edge

if.end13.for.body_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

if.end13.for.end_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %if.end13.for.end_crit_edge, %if.end.for.end_crit_edge
  %is_unplugged = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 20
  %25 = ptrtoint ptr %is_unplugged to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %is_unplugged, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool14.not = icmp eq i8 %26, 0
  br i1 %tobool14.not, label %if.then15, label %for.end.if.end17_crit_edge

for.end.if.end17_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

if.then15:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  %call16 = tail call fastcc i32 @tb_plug_events_active(ptr noundef %sw, i1 noundef zeroext false)
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %for.end.if.end17_crit_edge
  %nvm1.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 22
  %27 = ptrtoint ptr %nvm1.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %nvm1.i, align 8
  store ptr null, ptr %nvm1.i, align 8
  %tobool.not.i45 = icmp eq ptr %28, null
  br i1 %tobool.not.i45, label %if.end17.tb_switch_nvm_remove.exit_crit_edge, label %if.end.i47

if.end17.tb_switch_nvm_remove.exit_crit_edge:     ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_switch_nvm_remove.exit

if.end.i47:                                       ; preds = %if.end17
  %authenticating.i = getelementptr inbounds %struct.tb_nvm, ptr %28, i32 0, i32 8
  %29 = ptrtoint ptr %authenticating.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %authenticating.i, align 4, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %30)
  %tobool3.not.i46 = icmp eq i8 %30, 0
  br i1 %tobool3.not.i46, label %if.then4.i, label %if.end.i47.if.end5.i_crit_edge

if.end.i47.if.end5.i_crit_edge:                   ; preds = %if.end.i47
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5.i

if.then4.i:                                       ; preds = %if.end.i47
  call void @__sanitizer_cov_trace_pc() #18
  tail call fastcc void @nvm_clear_auth_status(ptr noundef %sw) #16
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %if.end.i47.if.end5.i_crit_edge
  tail call void @tb_nvm_free(ptr noundef nonnull %28) #16
  br label %tb_switch_nvm_remove.exit

tb_switch_nvm_remove.exit:                        ; preds = %if.end5.i, %if.end17.tb_switch_nvm_remove.exit_crit_edge
  tail call void @usb4_switch_remove_ports(ptr noundef %sw) #16
  %route_hi.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %31 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %31, i32 8)
  %bf.load.i48 = load i64, ptr %route_hi.i, align 4
  %32 = lshr i64 %bf.load.i48, 1
  %shl.i = and i64 %32, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %33 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %34 to i64
  %or.i = or i64 %shl.i, %conv2.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i)
  %tobool19.not = icmp eq i64 %or.i, 0
  br i1 %tobool19.not, label %tb_switch_nvm_remove.exit.if.end22_crit_edge, label %do.end

tb_switch_nvm_remove.exit.if.end22_crit_edge:     ; preds = %tb_switch_nvm_remove.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end22

do.end:                                           ; preds = %tb_switch_nvm_remove.exit
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %sw, ptr noundef nonnull @.str.73) #19
  br label %if.end22

if.end22:                                         ; preds = %do.end, %tb_switch_nvm_remove.exit.if.end22_crit_edge
  tail call void @device_unregister(ptr noundef %sw) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @tb_switch_debugfs_remove(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @tb_xdomain_remove(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @tb_retimer_remove_all(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_unregister(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @tb_sw_set_unplugged(ptr noundef %sw) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %tb = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %0 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tb, align 8
  %root_switch = getelementptr inbounds %struct.tb, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %root_switch to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %root_switch, align 8
  %cmp = icmp eq ptr %3, %sw
  br i1 %cmp, label %do.end, label %if.end26

do.end:                                           ; preds = %entry
  %nhi = getelementptr inbounds %struct.tb, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %7, i32 0, i32 44
  %call = tail call ptr @dev_driver_string(ptr noundef %dev) #16
  %8 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %tb, align 8
  %nhi8 = getelementptr inbounds %struct.tb, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %nhi8 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %nhi8, align 4
  %pdev9 = getelementptr inbounds %struct.tb_nhi, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %pdev9 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pdev9, align 4
  %init_name.i = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 44, i32 3
  %14 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %15, null
  br i1 %tobool.not.i, label %if.end.i, label %do.end.dev_name.exit_crit_edge

do.end.dev_name.exit_crit_edge:                   ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %dev_name.exit

if.end.i:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  %dev10 = getelementptr inbounds %struct.pci_dev, ptr %13, i32 0, i32 44
  %16 = ptrtoint ptr %dev10 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %dev10, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %do.end.dev_name.exit_crit_edge
  %retval.0.i = phi ptr [ %17, %if.end.i ], [ %15, %do.end.dev_name.exit_crit_edge ]
  %route_hi.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %18 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %18, i32 8)
  %bf.load.i = load i64, ptr %route_hi.i, align 4
  %19 = lshr i64 %bf.load.i, 1
  %shl.i = and i64 %19, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %20 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %21 to i64
  %or.i = or i64 %shl.i, %conv2.i
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2924, i32 noundef 9, ptr noundef nonnull @.str.75, ptr noundef %call, ptr noundef %retval.0.i, i64 noundef %or.i) #16
  br label %cleanup

if.end26:                                         ; preds = %entry
  %is_unplugged = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 20
  %22 = ptrtoint ptr %is_unplugged to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %is_unplugged, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool27.not = icmp eq i8 %23, 0
  br i1 %tobool27.not, label %if.end70, label %do.end43

do.end43:                                         ; preds = %if.end26
  %nhi45 = getelementptr inbounds %struct.tb, ptr %1, i32 0, i32 2
  %24 = ptrtoint ptr %nhi45 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %nhi45, align 4
  %pdev46 = getelementptr inbounds %struct.tb_nhi, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %pdev46 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %pdev46, align 4
  %dev47 = getelementptr inbounds %struct.pci_dev, ptr %27, i32 0, i32 44
  %call48 = tail call ptr @dev_driver_string(ptr noundef %dev47) #16
  %28 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %tb, align 8
  %nhi50 = getelementptr inbounds %struct.tb, ptr %29, i32 0, i32 2
  %30 = ptrtoint ptr %nhi50 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %nhi50, align 4
  %pdev51 = getelementptr inbounds %struct.tb_nhi, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %pdev51 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %pdev51, align 4
  %init_name.i103 = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44, i32 3
  %34 = ptrtoint ptr %init_name.i103 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %init_name.i103, align 8
  %tobool.not.i104 = icmp eq ptr %35, null
  br i1 %tobool.not.i104, label %if.end.i105, label %do.end43.dev_name.exit107_crit_edge

do.end43.dev_name.exit107_crit_edge:              ; preds = %do.end43
  call void @__sanitizer_cov_trace_pc() #18
  br label %dev_name.exit107

if.end.i105:                                      ; preds = %do.end43
  call void @__sanitizer_cov_trace_pc() #18
  %dev52 = getelementptr inbounds %struct.pci_dev, ptr %33, i32 0, i32 44
  %36 = ptrtoint ptr %dev52 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %dev52, align 4
  br label %dev_name.exit107

dev_name.exit107:                                 ; preds = %if.end.i105, %do.end43.dev_name.exit107_crit_edge
  %retval.0.i106 = phi ptr [ %37, %if.end.i105 ], [ %35, %do.end43.dev_name.exit107_crit_edge ]
  %route_hi.i108 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %38 = ptrtoint ptr %route_hi.i108 to i32
  call void @__asan_loadN_noabort(i32 %38, i32 8)
  %bf.load.i109 = load i64, ptr %route_hi.i108, align 4
  %39 = lshr i64 %bf.load.i109, 1
  %shl.i110 = and i64 %39, 9223372032559808512
  %route_lo.i111 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %40 = ptrtoint ptr %route_lo.i111 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %route_lo.i111, align 8
  %conv2.i112 = zext i32 %41 to i64
  %or.i113 = or i64 %shl.i110, %conv2.i112
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2928, i32 noundef 9, ptr noundef nonnull @.str.76, ptr noundef %call48, ptr noundef %retval.0.i106, i64 noundef %or.i113) #16
  br label %cleanup

if.end70:                                         ; preds = %if.end26
  %42 = ptrtoint ptr %is_unplugged to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 1, ptr %is_unplugged, align 8
  %ports = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 2
  %43 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %ports, align 4
  %max_port_number = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 2
  %port.0119 = getelementptr %struct.tb_port, ptr %44, i32 1
  %45 = ptrtoint ptr %max_port_number to i32
  call void @__asan_load4_noabort(i32 %45)
  %bf.load120 = load i32, ptr %max_port_number, align 4
  %bf.lshr121 = lshr i32 %bf.load120, 12
  %bf.clear122 = and i32 %bf.lshr121, 63
  %arrayidx73123 = getelementptr %struct.tb_port, ptr %44, i32 %bf.clear122
  %cmp74.not124 = icmp ugt ptr %port.0119, %arrayidx73123
  br i1 %cmp74.not124, label %if.end70.cleanup_crit_edge, label %if.end70.for.body_crit_edge

if.end70.for.body_crit_edge:                      ; preds = %if.end70
  br label %for.body

if.end70.cleanup_crit_edge:                       ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end70.for.body_crit_edge
  %port.0128 = phi ptr [ %port.0, %for.inc.for.body_crit_edge ], [ %port.0119, %if.end70.for.body_crit_edge ]
  %.pn125 = phi ptr [ %port.0128, %for.inc.for.body_crit_edge ], [ %44, %if.end70.for.body_crit_edge ]
  %sw.i.i = getelementptr %struct.tb_port, ptr %.pn125, i32 1, i32 1
  %46 = ptrtoint ptr %sw.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %sw.i.i, align 4
  %ports.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %47, i32 0, i32 2
  %48 = ptrtoint ptr %ports.i.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %ports.i.i.i, align 4
  %upstream_port_number.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %47, i32 0, i32 1, i32 2
  %50 = ptrtoint ptr %upstream_port_number.i.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %bf.load.i.i.i = load i32, ptr %upstream_port_number.i.i.i, align 4
  %bf.lshr.i.i.i = lshr i32 %bf.load.i.i.i, 18
  %bf.clear.i.i.i = and i32 %bf.lshr.i.i.i, 63
  %arrayidx.i.i.i = getelementptr %struct.tb_port, ptr %49, i32 %bf.clear.i.i.i
  %cmp.i.i = icmp eq ptr %arrayidx.i.i.i, %port.0128
  br i1 %cmp.i.i, label %for.body.if.else_crit_edge, label %tb_is_upstream_port.exit.i

for.body.if.else_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

tb_is_upstream_port.exit.i:                       ; preds = %for.body
  %dual_link_port.i.i = getelementptr %struct.tb_port, ptr %.pn125, i32 1, i32 12
  %51 = ptrtoint ptr %dual_link_port.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %dual_link_port.i.i, align 4
  %cmp1.i.i = icmp eq ptr %52, %arrayidx.i.i.i
  br i1 %cmp1.i.i, label %tb_is_upstream_port.exit.i.if.else_crit_edge, label %if.end.i115

tb_is_upstream_port.exit.i.if.else_crit_edge:     ; preds = %tb_is_upstream_port.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

if.end.i115:                                      ; preds = %tb_is_upstream_port.exit.i
  %remote.i = getelementptr %struct.tb_port, ptr %.pn125, i32 1, i32 2
  %53 = ptrtoint ptr %remote.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %remote.i, align 4
  %tobool.not.i114 = icmp eq ptr %54, null
  br i1 %tobool.not.i114, label %if.end.i115.if.else_crit_edge, label %if.end2.i

if.end.i115.if.else_crit_edge:                    ; preds = %if.end.i115
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

if.end2.i:                                        ; preds = %if.end.i115
  %tobool3.not.i = icmp eq ptr %52, null
  br i1 %tobool3.not.i, label %if.end2.i.if.then76_crit_edge, label %land.lhs.true.i

if.end2.i.if.then76_crit_edge:                    ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then76

land.lhs.true.i:                                  ; preds = %if.end2.i
  %link_nr.i = getelementptr %struct.tb_port, ptr %.pn125, i32 1, i32 13
  %55 = ptrtoint ptr %link_nr.i to i32
  call void @__asan_load1_noabort(i32 %55)
  %bf.load.i116 = load i8, ptr %link_nr.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i116)
  %tobool4.not.i = icmp sgt i8 %bf.load.i116, -1
  br i1 %tobool4.not.i, label %land.lhs.true.i.if.then76_crit_edge, label %land.lhs.true.i.if.else_crit_edge

land.lhs.true.i.if.else_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

land.lhs.true.i.if.then76_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then76

if.then76:                                        ; preds = %land.lhs.true.i.if.then76_crit_edge, %if.end2.i.if.then76_crit_edge
  %56 = ptrtoint ptr %remote.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %remote.i, align 4
  %sw77 = getelementptr inbounds %struct.tb_port, ptr %57, i32 0, i32 1
  %58 = ptrtoint ptr %sw77 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %sw77, align 4
  tail call void @tb_sw_set_unplugged(ptr noundef %59)
  br label %for.inc

if.else:                                          ; preds = %land.lhs.true.i.if.else_crit_edge, %if.end.i115.if.else_crit_edge, %tb_is_upstream_port.exit.i.if.else_crit_edge, %for.body.if.else_crit_edge
  %xdomain = getelementptr %struct.tb_port, ptr %.pn125, i32 1, i32 3
  %60 = ptrtoint ptr %xdomain to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %xdomain, align 4
  %tobool78.not = icmp eq ptr %61, null
  br i1 %tobool78.not, label %if.else.for.inc_crit_edge, label %if.then79

if.else.for.inc_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.then79:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %is_unplugged81 = getelementptr inbounds %struct.tb_xdomain, ptr %61, i32 0, i32 14
  %62 = ptrtoint ptr %is_unplugged81 to i32
  call void @__asan_store1_noabort(i32 %62)
  store i8 1, ptr %is_unplugged81, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.then79, %if.else.for.inc_crit_edge, %if.then76
  %port.0 = getelementptr %struct.tb_port, ptr %port.0128, i32 1
  %63 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %ports, align 4
  %65 = ptrtoint ptr %max_port_number to i32
  call void @__asan_load4_noabort(i32 %65)
  %bf.load = load i32, ptr %max_port_number, align 4
  %bf.lshr = lshr i32 %bf.load, 12
  %bf.clear = and i32 %bf.lshr, 63
  %arrayidx73 = getelementptr %struct.tb_port, ptr %64, i32 %bf.clear
  %cmp74.not = icmp ugt ptr %port.0, %arrayidx73
  br i1 %cmp74.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.end70.cleanup_crit_edge, %dev_name.exit107, %dev_name.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_switch_resume(ptr noundef %sw) local_unnamed_addr #0 align 64 {
entry:
  %uid = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_switch_resume.__UNIQUE_ID_ddebug270, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_switch_resume, %if.then)) #16
          to label %do.end [label %if.then], !srcloc !446

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %tb = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %0 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tb, align 8
  %nhi = getelementptr inbounds %struct.tb, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 44
  %route_hi.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %6 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %6, i32 8)
  %bf.load.i = load i64, ptr %route_hi.i, align 4
  %7 = lshr i64 %bf.load.i, 1
  %shl.i = and i64 %7, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %8 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %9 to i64
  %or.i = or i64 %shl.i, %conv2.i
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_switch_resume.__UNIQUE_ID_ddebug270, ptr noundef %dev, ptr noundef nonnull @.str.78, i64 noundef %or.i) #16
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %route_hi.i209 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %10 = ptrtoint ptr %route_hi.i209 to i32
  call void @__asan_loadN_noabort(i32 %10, i32 8)
  %bf.load.i210 = load i64, ptr %route_hi.i209, align 4
  %11 = lshr i64 %bf.load.i210, 1
  %shl.i211 = and i64 %11, 9223372032559808512
  %route_lo.i212 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %12 = ptrtoint ptr %route_lo.i212 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %route_lo.i212, align 8
  %conv2.i213 = zext i32 %13 to i64
  %or.i214 = or i64 %shl.i211, %conv2.i213
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i214)
  %tobool8.not = icmp eq i64 %or.i214, 0
  br i1 %tobool8.not, label %do.end.if.end64_crit_edge, label %if.then9

do.end.if.end64_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end64

if.then9:                                         ; preds = %do.end
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %uid) #16
  %14 = ptrtoint ptr %uid to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 -1, ptr %uid, align 8, !annotation !447
  %tb10 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %15 = ptrtoint ptr %tb10 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %tb10, align 8
  %ctl = getelementptr inbounds %struct.tb, ptr %16, i32 0, i32 3
  %17 = ptrtoint ptr %ctl to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %ctl, align 8
  %call12 = tail call i32 @tb_cfg_get_upstream_port(ptr noundef %18, i64 noundef %or.i214) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %cmp = icmp slt i32 %call12, 0
  br i1 %cmp, label %do.body14, label %if.end26

do.body14:                                        ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #18
  %19 = ptrtoint ptr %tb10 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %tb10, align 8
  %nhi20 = getelementptr inbounds %struct.tb, ptr %20, i32 0, i32 2
  %21 = ptrtoint ptr %nhi20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %nhi20, align 4
  %pdev21 = getelementptr inbounds %struct.tb_nhi, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %pdev21 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %pdev21, align 4
  %dev22 = getelementptr inbounds %struct.pci_dev, ptr %24, i32 0, i32 44
  %25 = ptrtoint ptr %route_hi.i209 to i32
  call void @__asan_loadN_noabort(i32 %25, i32 8)
  %bf.load.i222 = load i64, ptr %route_hi.i209, align 4
  %26 = lshr i64 %bf.load.i222, 1
  %shl.i223 = and i64 %26, 9223372032559808512
  %27 = ptrtoint ptr %route_lo.i212 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %route_lo.i212, align 8
  %conv2.i225 = zext i32 %28 to i64
  %or.i226 = or i64 %shl.i223, %conv2.i225
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev22, ptr noundef nonnull @.str.79, i64 noundef %or.i226) #19
  br label %cleanup.thread

if.end26:                                         ; preds = %if.then9
  %29 = ptrtoint ptr %route_hi.i209 to i32
  call void @__asan_loadN_noabort(i32 %29, i32 8)
  %bf.load.i227 = load i64, ptr %route_hi.i209, align 4
  %bf.cast1.i = and i64 %bf.load.i227, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i)
  %cmp.i = icmp eq i64 %bf.cast1.i, 32
  br i1 %cmp.i, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #18
  %call29 = call i32 @usb4_switch_read_uid(ptr noundef %sw, ptr noundef nonnull %uid) #16
  br label %if.end31

if.else:                                          ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #18
  %call30 = call i32 @tb_drom_read_uid_only(ptr noundef %sw, ptr noundef nonnull %uid) #16
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then28
  %err.0 = phi i32 [ %call29, %if.then28 ], [ %call30, %if.else ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.0)
  %tobool32.not = icmp eq i32 %err.0, 0
  br i1 %tobool32.not, label %if.end46, label %do.body34

do.body34:                                        ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #18
  %30 = ptrtoint ptr %tb10 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %tb10, align 8
  %nhi40 = getelementptr inbounds %struct.tb, ptr %31, i32 0, i32 2
  %32 = ptrtoint ptr %nhi40 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %nhi40, align 4
  %pdev41 = getelementptr inbounds %struct.tb_nhi, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %pdev41 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %pdev41, align 4
  %dev42 = getelementptr inbounds %struct.pci_dev, ptr %35, i32 0, i32 44
  %36 = ptrtoint ptr %route_hi.i209 to i32
  call void @__asan_loadN_noabort(i32 %36, i32 8)
  %bf.load.i229 = load i64, ptr %route_hi.i209, align 4
  %37 = lshr i64 %bf.load.i229, 1
  %shl.i230 = and i64 %37, 9223372032559808512
  %38 = ptrtoint ptr %route_lo.i212 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %route_lo.i212, align 8
  %conv2.i232 = zext i32 %39 to i64
  %or.i233 = or i64 %shl.i230, %conv2.i232
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev42, ptr noundef nonnull @.str.81, i64 noundef %or.i233) #19
  br label %cleanup.thread

if.end46:                                         ; preds = %if.end31
  %uid47 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 6
  %40 = ptrtoint ptr %uid47 to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %uid47, align 8
  %42 = ptrtoint ptr %uid to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %uid, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %41, i64 %43)
  %cmp48.not = icmp eq i64 %41, %43
  br i1 %cmp48.not, label %cleanup, label %do.body50

do.body50:                                        ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #18
  %44 = ptrtoint ptr %tb10 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %tb10, align 8
  %nhi56 = getelementptr inbounds %struct.tb, ptr %45, i32 0, i32 2
  %46 = ptrtoint ptr %nhi56 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %nhi56, align 4
  %pdev57 = getelementptr inbounds %struct.tb_nhi, ptr %47, i32 0, i32 1
  %48 = ptrtoint ptr %pdev57 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %pdev57, align 4
  %dev58 = getelementptr inbounds %struct.pci_dev, ptr %49, i32 0, i32 44
  %50 = ptrtoint ptr %route_hi.i209 to i32
  call void @__asan_loadN_noabort(i32 %50, i32 8)
  %bf.load.i235 = load i64, ptr %route_hi.i209, align 4
  %51 = lshr i64 %bf.load.i235, 1
  %shl.i236 = and i64 %51, 9223372032559808512
  %52 = ptrtoint ptr %route_lo.i212 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %route_lo.i212, align 8
  %conv2.i238 = zext i32 %53 to i64
  %or.i239 = or i64 %shl.i236, %conv2.i238
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev58, ptr noundef nonnull @.str.84, i64 noundef %or.i239, i64 noundef %41, i64 noundef %43) #19
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %do.body50, %do.body34, %do.body14
  %retval.0.ph = phi i32 [ %call12, %do.body14 ], [ %err.0, %do.body34 ], [ -19, %do.body50 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %uid) #16
  br label %cleanup157

cleanup:                                          ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %uid) #16
  br label %if.end64

if.end64:                                         ; preds = %cleanup, %do.end.if.end64_crit_edge
  %call65 = call i32 @tb_switch_configure(ptr noundef %sw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call65)
  %tobool66.not = icmp eq i32 %call65, 0
  br i1 %tobool66.not, label %if.end68, label %if.end64.cleanup157_crit_edge

if.end64.cleanup157_crit_edge:                    ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup157

if.end68:                                         ; preds = %if.end64
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_switch_set_wake.__UNIQUE_ID_ddebug269, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_switch_resume, %if.then23.i)) #16
          to label %if.end34.i [label %if.then23.i], !srcloc !446

if.then23.i:                                      ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #18
  %tb24.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %54 = ptrtoint ptr %tb24.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %tb24.i, align 8
  %nhi25.i = getelementptr inbounds %struct.tb, ptr %55, i32 0, i32 2
  %56 = ptrtoint ptr %nhi25.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %nhi25.i, align 4
  %pdev26.i = getelementptr inbounds %struct.tb_nhi, ptr %57, i32 0, i32 1
  %58 = ptrtoint ptr %pdev26.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %pdev26.i, align 4
  %dev27.i = getelementptr inbounds %struct.pci_dev, ptr %59, i32 0, i32 44
  %60 = ptrtoint ptr %route_hi.i209 to i32
  call void @__asan_loadN_noabort(i32 %60, i32 8)
  %bf.load.i5.i = load i64, ptr %route_hi.i209, align 4
  %61 = lshr i64 %bf.load.i5.i, 1
  %shl.i6.i = and i64 %61, 9223372032559808512
  %62 = ptrtoint ptr %route_lo.i212 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %route_lo.i212, align 8
  %conv2.i8.i = zext i32 %63 to i64
  %or.i9.i = or i64 %shl.i6.i, %conv2.i8.i
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_switch_set_wake.__UNIQUE_ID_ddebug269, ptr noundef %dev27.i, ptr noundef nonnull @.str.192, i64 noundef %or.i9.i) #16
  br label %if.end34.i

if.end34.i:                                       ; preds = %if.then23.i, %if.end68
  %64 = ptrtoint ptr %route_hi.i209 to i32
  call void @__asan_loadN_noabort(i32 %64, i32 8)
  %bf.load.i10.i = load i64, ptr %route_hi.i209, align 4
  %bf.cast1.i.i = and i64 %bf.load.i10.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i.i)
  %cmp.i.i = icmp eq i64 %bf.cast1.i.i, 32
  br i1 %cmp.i.i, label %if.then36.i, label %if.end38.i

if.then36.i:                                      ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #18
  %call37.i = call i32 @usb4_switch_set_wake(ptr noundef %sw, i32 noundef 0) #16
  br label %tb_switch_set_wake.exit

if.end38.i:                                       ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #18
  %call39.i = call i32 @tb_lc_set_wake(ptr noundef %sw, i32 noundef 0) #16
  br label %tb_switch_set_wake.exit

tb_switch_set_wake.exit:                          ; preds = %if.end38.i, %if.then36.i
  %call70 = call i32 @tb_switch_tmu_init(ptr noundef %sw) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call70)
  %tobool71.not = icmp eq i32 %call70, 0
  br i1 %tobool71.not, label %if.end73, label %tb_switch_set_wake.exit.cleanup157_crit_edge

tb_switch_set_wake.exit.cleanup157_crit_edge:     ; preds = %tb_switch_set_wake.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup157

if.end73:                                         ; preds = %tb_switch_set_wake.exit
  %ports = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 2
  %65 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %ports, align 4
  %max_port_number = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 2
  %port.0286 = getelementptr %struct.tb_port, ptr %66, i32 1
  %67 = ptrtoint ptr %max_port_number to i32
  call void @__asan_load4_noabort(i32 %67)
  %bf.load287 = load i32, ptr %max_port_number, align 4
  %bf.lshr288 = lshr i32 %bf.load287, 12
  %bf.clear289 = and i32 %bf.lshr288, 63
  %arrayidx75290 = getelementptr %struct.tb_port, ptr %66, i32 %bf.clear289
  %cmp76.not291 = icmp ugt ptr %port.0286, %arrayidx75290
  br i1 %cmp76.not291, label %if.end73.cleanup157_crit_edge, label %if.end73.for.body_crit_edge

if.end73.for.body_crit_edge:                      ; preds = %if.end73
  br label %for.body

if.end73.cleanup157_crit_edge:                    ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup157

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end73.for.body_crit_edge
  %port.0303 = phi ptr [ %port.0, %for.inc.for.body_crit_edge ], [ %port.0286, %if.end73.for.body_crit_edge ]
  %.pn292 = phi ptr [ %port.0303, %for.inc.for.body_crit_edge ], [ %66, %if.end73.for.body_crit_edge ]
  %tobool.not.i = icmp eq ptr %port.0303, null
  br i1 %tobool.not.i, label %for.body.for.inc_crit_edge, label %land.lhs.true.i

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

land.lhs.true.i:                                  ; preds = %for.body
  %port1.i = getelementptr %struct.tb_port, ptr %.pn292, i32 1, i32 9
  %68 = ptrtoint ptr %port1.i to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %port1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %69)
  %tobool2.not.i = icmp eq i8 %69, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.for.inc_crit_edge, label %tb_port_is_null.exit

land.lhs.true.i.for.inc_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

tb_port_is_null.exit:                             ; preds = %land.lhs.true.i
  %type.i = getelementptr %struct.tb_port, ptr %.pn292, i32 1, i32 0, i32 2
  %70 = ptrtoint ptr %type.i to i32
  call void @__asan_loadN_noabort(i32 %70, i32 12)
  %bf.load.i240 = load i96, ptr %type.i, align 4
  %71 = and i96 %bf.load.i240, 18446742974197923840
  %cmp.i241 = icmp eq i96 %71, 1099511627776
  br i1 %cmp.i241, label %if.end79, label %tb_port_is_null.exit.for.inc_crit_edge

tb_port_is_null.exit.for.inc_crit_edge:           ; preds = %tb_port_is_null.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end79:                                         ; preds = %tb_port_is_null.exit
  %sw.i.i.i = getelementptr %struct.tb_port, ptr %.pn292, i32 1, i32 1
  %72 = ptrtoint ptr %sw.i.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %sw.i.i.i, align 4
  %ports.i.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %73, i32 0, i32 2
  %74 = ptrtoint ptr %ports.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %ports.i.i.i.i, align 4
  %upstream_port_number.i.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %73, i32 0, i32 1, i32 2
  %76 = ptrtoint ptr %upstream_port_number.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %bf.load.i.i.i.i = load i32, ptr %upstream_port_number.i.i.i.i, align 4
  %bf.lshr.i.i.i.i = lshr i32 %bf.load.i.i.i.i, 18
  %bf.clear.i.i.i.i = and i32 %bf.lshr.i.i.i.i, 63
  %arrayidx.i.i.i.i = getelementptr %struct.tb_port, ptr %75, i32 %bf.clear.i.i.i.i
  %cmp.i.i.i = icmp eq ptr %arrayidx.i.i.i.i, %port.0303
  br i1 %cmp.i.i.i, label %tb_port_has_remote.exit.thread34.i, label %tb_is_upstream_port.exit.i.i

tb_is_upstream_port.exit.i.i:                     ; preds = %if.end79
  %dual_link_port.i.i.i = getelementptr %struct.tb_port, ptr %.pn292, i32 1, i32 12
  %77 = ptrtoint ptr %dual_link_port.i.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %dual_link_port.i.i.i, align 4
  %cmp1.i.i.i = icmp eq ptr %78, %arrayidx.i.i.i.i
  br i1 %cmp1.i.i.i, label %tb_port_has_remote.exit.i.thread, label %if.end.i.i

if.end.i.i:                                       ; preds = %tb_is_upstream_port.exit.i.i
  %remote.i.i = getelementptr %struct.tb_port, ptr %.pn292, i32 1, i32 2
  %79 = ptrtoint ptr %remote.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %remote.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %80, null
  br i1 %tobool.not.i.i, label %if.end.i.i.tb_port_has_remote.exit.i_crit_edge, label %if.end2.i.i

if.end.i.i.tb_port_has_remote.exit.i_crit_edge:   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_has_remote.exit.i

if.end2.i.i:                                      ; preds = %if.end.i.i
  %tobool3.not.i.i = icmp eq ptr %78, null
  br i1 %tobool3.not.i.i, label %if.end2.i.i.tb_port_has_remote.exit.thread.i_crit_edge, label %land.lhs.true.i.i

if.end2.i.i.tb_port_has_remote.exit.thread.i_crit_edge: ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_has_remote.exit.thread.i

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %link_nr.i.i = getelementptr %struct.tb_port, ptr %.pn292, i32 1, i32 13
  %81 = ptrtoint ptr %link_nr.i.i to i32
  call void @__asan_load1_noabort(i32 %81)
  %bf.load.i.i = load i8, ptr %link_nr.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i.i)
  %tobool4.not.i.i = icmp sgt i8 %bf.load.i.i, -1
  br i1 %tobool4.not.i.i, label %land.lhs.true.i.i.tb_port_has_remote.exit.thread.i_crit_edge, label %land.lhs.true.i.i.tb_port_has_remote.exit.i_crit_edge

land.lhs.true.i.i.tb_port_has_remote.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_has_remote.exit.i

land.lhs.true.i.i.tb_port_has_remote.exit.thread.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_has_remote.exit.thread.i

tb_port_has_remote.exit.i:                        ; preds = %land.lhs.true.i.i.tb_port_has_remote.exit.i_crit_edge, %if.end.i.i.tb_port_has_remote.exit.i_crit_edge
  %usb4.i = getelementptr %struct.tb_port, ptr %.pn292, i32 1, i32 8
  %82 = ptrtoint ptr %usb4.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %usb4.i, align 4
  %tobool.not.i242 = icmp eq ptr %83, null
  br i1 %tobool.not.i242, label %tb_port_has_remote.exit.i.if.then7.i_crit_edge, label %tb_port_has_remote.exit.i.if.then.i_crit_edge

tb_port_has_remote.exit.i.if.then.i_crit_edge:    ; preds = %tb_port_has_remote.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i

tb_port_has_remote.exit.i.if.then7.i_crit_edge:   ; preds = %tb_port_has_remote.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then7.i

tb_port_has_remote.exit.i.thread:                 ; preds = %tb_is_upstream_port.exit.i.i
  %usb4.i277 = getelementptr %struct.tb_port, ptr %.pn292, i32 1, i32 8
  %84 = ptrtoint ptr %usb4.i277 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %usb4.i277, align 4
  %tobool.not.i242278 = icmp eq ptr %85, null
  br i1 %tobool.not.i242278, label %tb_port_has_remote.exit.i.thread.lor.lhs.false.i_crit_edge, label %tb_port_has_remote.exit.i.thread.if.then.i_crit_edge

tb_port_has_remote.exit.i.thread.if.then.i_crit_edge: ; preds = %tb_port_has_remote.exit.i.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i

tb_port_has_remote.exit.i.thread.lor.lhs.false.i_crit_edge: ; preds = %tb_port_has_remote.exit.i.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %lor.lhs.false.i

tb_port_has_remote.exit.thread34.i:               ; preds = %if.end79
  %usb435.i = getelementptr %struct.tb_port, ptr %.pn292, i32 1, i32 8
  %86 = ptrtoint ptr %usb435.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %usb435.i, align 4
  %tobool.not36.i = icmp eq ptr %87, null
  br i1 %tobool.not36.i, label %tb_port_has_remote.exit.thread34.i.lor.lhs.false.i_crit_edge, label %tb_port_has_remote.exit.thread34.i.if.then.i_crit_edge

tb_port_has_remote.exit.thread34.i.if.then.i_crit_edge: ; preds = %tb_port_has_remote.exit.thread34.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i

tb_port_has_remote.exit.thread34.i.lor.lhs.false.i_crit_edge: ; preds = %tb_port_has_remote.exit.thread34.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %lor.lhs.false.i

tb_port_has_remote.exit.thread.i:                 ; preds = %land.lhs.true.i.i.tb_port_has_remote.exit.thread.i_crit_edge, %if.end2.i.i.tb_port_has_remote.exit.thread.i_crit_edge
  %usb427.i = getelementptr %struct.tb_port, ptr %.pn292, i32 1, i32 8
  %88 = ptrtoint ptr %usb427.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %usb427.i, align 4
  %tobool.not28.i = icmp eq ptr %89, null
  br i1 %tobool.not28.i, label %tb_port_has_remote.exit.thread.i.if.end82_crit_edge, label %if.then.thread.i

tb_port_has_remote.exit.thread.i.if.end82_crit_edge: ; preds = %tb_port_has_remote.exit.thread.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end82

if.then.thread.i:                                 ; preds = %tb_port_has_remote.exit.thread.i
  call void @__sanitizer_cov_trace_pc() #18
  %call232.i = call i32 @usb4_port_device_resume(ptr noundef nonnull %89) #16
  br label %if.end82

if.then.i:                                        ; preds = %tb_port_has_remote.exit.thread34.i.if.then.i_crit_edge, %tb_port_has_remote.exit.i.thread.if.then.i_crit_edge, %tb_port_has_remote.exit.i.if.then.i_crit_edge
  %90 = phi ptr [ %83, %tb_port_has_remote.exit.i.if.then.i_crit_edge ], [ %87, %tb_port_has_remote.exit.thread34.i.if.then.i_crit_edge ], [ %85, %tb_port_has_remote.exit.i.thread.if.then.i_crit_edge ]
  %call2.i = call i32 @usb4_port_device_resume(ptr noundef nonnull %90) #16
  br label %tb_port_resume.exit

lor.lhs.false.i:                                  ; preds = %tb_port_has_remote.exit.thread34.i.lor.lhs.false.i_crit_edge, %tb_port_has_remote.exit.i.thread.lor.lhs.false.i_crit_edge
  %xdomain.i = getelementptr %struct.tb_port, ptr %.pn292, i32 1, i32 3
  %91 = ptrtoint ptr %xdomain.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %xdomain.i, align 4
  %tobool6.not.i = icmp eq ptr %92, null
  br i1 %tobool6.not.i, label %lor.lhs.false.i.tb_port_resume.exit_crit_edge, label %lor.lhs.false.i.if.then7.i_crit_edge

lor.lhs.false.i.if.then7.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then7.i

lor.lhs.false.i.tb_port_resume.exit_crit_edge:    ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_resume.exit

if.then7.i:                                       ; preds = %lor.lhs.false.i.if.then7.i_crit_edge, %tb_port_has_remote.exit.i.if.then7.i_crit_edge
  %thunderbolt_version.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %73, i32 0, i32 1, i32 4
  %93 = ptrtoint ptr %thunderbolt_version.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %93, i32 8)
  %bf.load.i.i23.i = load i64, ptr %thunderbolt_version.i.i.i, align 4
  %bf.cast1.i.i.i = and i64 %bf.load.i.i23.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i.i.i)
  %cmp.i.i24.i = icmp eq i64 %bf.cast1.i.i.i, 32
  br i1 %cmp.i.i24.i, label %if.then7.i.tb_port_resume.exit_crit_edge, label %if.end.i25.i

if.then7.i.tb_port_resume.exit_crit_edge:         ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_resume.exit

if.end.i25.i:                                     ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #18
  %call1.i.i = call i32 @tb_lc_start_lane_initialization(ptr noundef nonnull %port.0303) #16
  br label %tb_port_resume.exit

tb_port_resume.exit:                              ; preds = %if.end.i25.i, %if.then7.i.tb_port_resume.exit_crit_edge, %lor.lhs.false.i.tb_port_resume.exit_crit_edge, %if.then.i
  %xdomain12.i = getelementptr %struct.tb_port, ptr %.pn292, i32 1, i32 3
  %94 = ptrtoint ptr %xdomain12.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %xdomain12.i, align 4
  %tobool13.i.not = icmp eq ptr %95, null
  br i1 %tobool13.i.not, label %tb_port_resume.exit.for.inc_crit_edge, label %tb_port_resume.exit.if.end82_crit_edge

tb_port_resume.exit.if.end82_crit_edge:           ; preds = %tb_port_resume.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end82

tb_port_resume.exit.for.inc_crit_edge:            ; preds = %tb_port_resume.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end82:                                         ; preds = %tb_port_resume.exit.if.end82_crit_edge, %if.then.thread.i, %tb_port_has_remote.exit.thread.i.if.end82_crit_edge
  %call83 = call i32 @tb_wait_for_port(ptr noundef nonnull %port.0303, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call83)
  %cmp84 = icmp slt i32 %call83, 1
  %96 = ptrtoint ptr %sw.i.i.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %sw.i.i.i, align 4
  br i1 %cmp84, label %do.body86, label %if.else109

do.body86:                                        ; preds = %if.end82
  %tb91 = getelementptr inbounds %struct.tb_switch, ptr %97, i32 0, i32 5
  %98 = ptrtoint ptr %tb91 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %tb91, align 8
  %nhi92 = getelementptr inbounds %struct.tb, ptr %99, i32 0, i32 2
  %100 = ptrtoint ptr %nhi92 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %nhi92, align 4
  %pdev93 = getelementptr inbounds %struct.tb_nhi, ptr %101, i32 0, i32 1
  %102 = ptrtoint ptr %pdev93 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %pdev93, align 4
  %dev94 = getelementptr inbounds %struct.pci_dev, ptr %103, i32 0, i32 44
  %route_hi.i243 = getelementptr inbounds %struct.tb_switch, ptr %97, i32 0, i32 1, i32 4
  %104 = ptrtoint ptr %route_hi.i243 to i32
  call void @__asan_loadN_noabort(i32 %104, i32 8)
  %bf.load.i244 = load i64, ptr %route_hi.i243, align 4
  %105 = lshr i64 %bf.load.i244, 1
  %shl.i245 = and i64 %105, 9223372032559808512
  %route_lo.i246 = getelementptr inbounds %struct.tb_switch, ptr %97, i32 0, i32 1, i32 3
  %106 = ptrtoint ptr %route_lo.i246 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %route_lo.i246, align 8
  %conv2.i247 = zext i32 %107 to i64
  %or.i248 = or i64 %shl.i245, %conv2.i247
  %108 = ptrtoint ptr %port1.i to i32
  call void @__asan_load1_noabort(i32 %108)
  %109 = load i8, ptr %port1.i, align 4
  %conv = zext i8 %109 to i32
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev94, ptr noundef nonnull @.str.87, i64 noundef %or.i248, i32 noundef %conv) #19
  %110 = ptrtoint ptr %sw.i.i.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %sw.i.i.i, align 4
  %ports.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %111, i32 0, i32 2
  %112 = ptrtoint ptr %ports.i.i.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %ports.i.i.i, align 4
  %upstream_port_number.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %111, i32 0, i32 1, i32 2
  %114 = ptrtoint ptr %upstream_port_number.i.i.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %bf.load.i.i.i = load i32, ptr %upstream_port_number.i.i.i, align 4
  %bf.lshr.i.i.i = lshr i32 %bf.load.i.i.i, 18
  %bf.clear.i.i.i = and i32 %bf.lshr.i.i.i, 63
  %arrayidx.i.i.i = getelementptr %struct.tb_port, ptr %113, i32 %bf.clear.i.i.i
  %cmp.i.i249 = icmp eq ptr %arrayidx.i.i.i, %port.0303
  br i1 %cmp.i.i249, label %do.body86.if.else103_crit_edge, label %tb_is_upstream_port.exit.i

do.body86.if.else103_crit_edge:                   ; preds = %do.body86
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else103

tb_is_upstream_port.exit.i:                       ; preds = %do.body86
  %dual_link_port.i.i = getelementptr %struct.tb_port, ptr %.pn292, i32 1, i32 12
  %115 = ptrtoint ptr %dual_link_port.i.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %dual_link_port.i.i, align 4
  %cmp1.i.i250 = icmp eq ptr %116, %arrayidx.i.i.i
  br i1 %cmp1.i.i250, label %tb_is_upstream_port.exit.i.if.else103_crit_edge, label %if.end.i

tb_is_upstream_port.exit.i.if.else103_crit_edge:  ; preds = %tb_is_upstream_port.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else103

if.end.i:                                         ; preds = %tb_is_upstream_port.exit.i
  %remote.i = getelementptr %struct.tb_port, ptr %.pn292, i32 1, i32 2
  %117 = ptrtoint ptr %remote.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %remote.i, align 4
  %tobool.not.i251 = icmp eq ptr %118, null
  br i1 %tobool.not.i251, label %if.end.i.if.else103_crit_edge, label %if.end2.i

if.end.i.if.else103_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else103

if.end2.i:                                        ; preds = %if.end.i
  %tobool3.not.i = icmp eq ptr %116, null
  br i1 %tobool3.not.i, label %if.end2.i.if.then101_crit_edge, label %land.lhs.true.i253

if.end2.i.if.then101_crit_edge:                   ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then101

land.lhs.true.i253:                               ; preds = %if.end2.i
  %link_nr.i = getelementptr %struct.tb_port, ptr %.pn292, i32 1, i32 13
  %119 = ptrtoint ptr %link_nr.i to i32
  call void @__asan_load1_noabort(i32 %119)
  %bf.load.i252 = load i8, ptr %link_nr.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i252)
  %tobool4.not.i = icmp sgt i8 %bf.load.i252, -1
  br i1 %tobool4.not.i, label %land.lhs.true.i253.if.then101_crit_edge, label %land.lhs.true.i253.if.else103_crit_edge

land.lhs.true.i253.if.else103_crit_edge:          ; preds = %land.lhs.true.i253
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else103

land.lhs.true.i253.if.then101_crit_edge:          ; preds = %land.lhs.true.i253
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then101

if.then101:                                       ; preds = %land.lhs.true.i253.if.then101_crit_edge, %if.end2.i.if.then101_crit_edge
  %120 = ptrtoint ptr %remote.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %remote.i, align 4
  %sw102 = getelementptr inbounds %struct.tb_port, ptr %121, i32 0, i32 1
  %122 = ptrtoint ptr %sw102 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %sw102, align 4
  call void @tb_sw_set_unplugged(ptr noundef %123)
  br label %for.inc

if.else103:                                       ; preds = %land.lhs.true.i253.if.else103_crit_edge, %if.end.i.if.else103_crit_edge, %tb_is_upstream_port.exit.i.if.else103_crit_edge, %do.body86.if.else103_crit_edge
  %xdomain = getelementptr %struct.tb_port, ptr %.pn292, i32 1, i32 3
  %124 = ptrtoint ptr %xdomain to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %xdomain, align 4
  %tobool104.not = icmp eq ptr %125, null
  br i1 %tobool104.not, label %if.else103.for.inc_crit_edge, label %if.then105

if.else103.for.inc_crit_edge:                     ; preds = %if.else103
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.then105:                                       ; preds = %if.else103
  call void @__sanitizer_cov_trace_pc() #18
  %is_unplugged = getelementptr inbounds %struct.tb_xdomain, ptr %125, i32 0, i32 14
  %126 = ptrtoint ptr %is_unplugged to i32
  call void @__asan_store1_noabort(i32 %126)
  store i8 1, ptr %is_unplugged, align 8
  br label %for.inc

if.else109:                                       ; preds = %if.end82
  %enabled.i.i = getelementptr inbounds %struct.tb_switch, ptr %97, i32 0, i32 1, i32 4
  %127 = ptrtoint ptr %enabled.i.i to i32
  call void @__asan_loadN_noabort(i32 %127, i32 8)
  %bf.load.i.i255 = load i64, ptr %enabled.i.i, align 4
  %128 = and i64 %bf.load.i.i255, 4294967296
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %128)
  %bf.cast.not.i.i = icmp eq i64 %128, 0
  br i1 %bf.cast.not.i.i, label %if.else109.if.end129_crit_edge, label %land.lhs.true.i.i258

if.else109.if.end129_crit_edge:                   ; preds = %if.else109
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end129

land.lhs.true.i.i258:                             ; preds = %if.else109
  %129 = ptrtoint ptr %port1.i to i32
  call void @__asan_load1_noabort(i32 %129)
  %130 = load i8, ptr %port1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %130)
  %tobool2.not.i.i = icmp eq i8 %130, 0
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i258.do.body113_crit_edge, label %tb_port_is_null.exit.i

land.lhs.true.i.i258.do.body113_crit_edge:        ; preds = %land.lhs.true.i.i258
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body113

tb_port_is_null.exit.i:                           ; preds = %land.lhs.true.i.i258
  %131 = ptrtoint ptr %type.i to i32
  call void @__asan_loadN_noabort(i32 %131, i32 12)
  %bf.load.i12.i = load i96, ptr %type.i, align 4
  %132 = and i96 %bf.load.i12.i, 18446742974197923840
  %cmp.i.i259 = icmp eq i96 %132, 1099511627776
  br i1 %cmp.i.i259, label %if.end3.i, label %tb_port_is_null.exit.i.do.body113_crit_edge

tb_port_is_null.exit.i.do.body113_crit_edge:      ; preds = %tb_port_is_null.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body113

if.end3.i:                                        ; preds = %tb_port_is_null.exit.i
  %bf.cast1.i.i260 = and i64 %bf.load.i.i255, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i.i260)
  %cmp.i14.i = icmp eq i64 %bf.cast1.i.i260, 32
  br i1 %cmp.i14.i, label %tb_port_unlock.exit, label %if.end3.i.if.end129_crit_edge

if.end3.i.if.end129_crit_edge:                    ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end129

tb_port_unlock.exit:                              ; preds = %if.end3.i
  %call7.i = call i32 @usb4_port_unlock(ptr noundef nonnull %port.0303) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool111.not = icmp eq i32 %call7.i, 0
  br i1 %tobool111.not, label %tb_port_unlock.exit.if.end129_crit_edge, label %tb_port_unlock.exit.do.body113_crit_edge

tb_port_unlock.exit.do.body113_crit_edge:         ; preds = %tb_port_unlock.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body113

tb_port_unlock.exit.if.end129_crit_edge:          ; preds = %tb_port_unlock.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end129

do.body113:                                       ; preds = %tb_port_unlock.exit.do.body113_crit_edge, %tb_port_is_null.exit.i.do.body113_crit_edge, %land.lhs.true.i.i258.do.body113_crit_edge
  %133 = ptrtoint ptr %sw.i.i.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %sw.i.i.i, align 4
  %tb119 = getelementptr inbounds %struct.tb_switch, ptr %134, i32 0, i32 5
  %135 = ptrtoint ptr %tb119 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %tb119, align 8
  %nhi120 = getelementptr inbounds %struct.tb, ptr %136, i32 0, i32 2
  %137 = ptrtoint ptr %nhi120 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %nhi120, align 4
  %pdev121 = getelementptr inbounds %struct.tb_nhi, ptr %138, i32 0, i32 1
  %139 = ptrtoint ptr %pdev121 to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %pdev121, align 4
  %dev122 = getelementptr inbounds %struct.pci_dev, ptr %140, i32 0, i32 44
  %route_hi.i262 = getelementptr inbounds %struct.tb_switch, ptr %134, i32 0, i32 1, i32 4
  %141 = ptrtoint ptr %route_hi.i262 to i32
  call void @__asan_loadN_noabort(i32 %141, i32 8)
  %bf.load.i263 = load i64, ptr %route_hi.i262, align 4
  %142 = lshr i64 %bf.load.i263, 1
  %shl.i264 = and i64 %142, 9223372032559808512
  %route_lo.i265 = getelementptr inbounds %struct.tb_switch, ptr %134, i32 0, i32 1, i32 3
  %143 = ptrtoint ptr %route_lo.i265 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %route_lo.i265, align 8
  %conv2.i266 = zext i32 %144 to i64
  %or.i267 = or i64 %shl.i264, %conv2.i266
  %145 = ptrtoint ptr %port1.i to i32
  call void @__asan_load1_noabort(i32 %145)
  %146 = load i8, ptr %port1.i, align 4
  %conv126 = zext i8 %146 to i32
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev122, ptr noundef nonnull @.str.90, i64 noundef %or.i267, i32 noundef %conv126) #19
  br label %if.end129

if.end129:                                        ; preds = %do.body113, %tb_port_unlock.exit.if.end129_crit_edge, %if.end3.i.if.end129_crit_edge, %if.else109.if.end129_crit_edge
  %remote130 = getelementptr %struct.tb_port, ptr %.pn292, i32 1, i32 2
  %147 = ptrtoint ptr %remote130 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %remote130, align 4
  %tobool131.not = icmp eq ptr %148, null
  br i1 %tobool131.not, label %if.end129.for.inc_crit_edge, label %land.lhs.true

if.end129.for.inc_crit_edge:                      ; preds = %if.end129
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

land.lhs.true:                                    ; preds = %if.end129
  %sw133 = getelementptr inbounds %struct.tb_port, ptr %148, i32 0, i32 1
  %149 = ptrtoint ptr %sw133 to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %sw133, align 4
  %call134 = call i32 @tb_switch_resume(ptr noundef %150)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call134)
  %tobool135.not = icmp eq i32 %call134, 0
  br i1 %tobool135.not, label %land.lhs.true.for.inc_crit_edge, label %do.body137

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

do.body137:                                       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %151 = ptrtoint ptr %sw.i.i.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %sw.i.i.i, align 4
  %tb143 = getelementptr inbounds %struct.tb_switch, ptr %152, i32 0, i32 5
  %153 = ptrtoint ptr %tb143 to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %tb143, align 8
  %nhi144 = getelementptr inbounds %struct.tb, ptr %154, i32 0, i32 2
  %155 = ptrtoint ptr %nhi144 to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load ptr, ptr %nhi144, align 4
  %pdev145 = getelementptr inbounds %struct.tb_nhi, ptr %156, i32 0, i32 1
  %157 = ptrtoint ptr %pdev145 to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %pdev145, align 4
  %dev146 = getelementptr inbounds %struct.pci_dev, ptr %158, i32 0, i32 44
  %route_hi.i268 = getelementptr inbounds %struct.tb_switch, ptr %152, i32 0, i32 1, i32 4
  %159 = ptrtoint ptr %route_hi.i268 to i32
  call void @__asan_loadN_noabort(i32 %159, i32 8)
  %bf.load.i269 = load i64, ptr %route_hi.i268, align 4
  %160 = lshr i64 %bf.load.i269, 1
  %shl.i270 = and i64 %160, 9223372032559808512
  %route_lo.i271 = getelementptr inbounds %struct.tb_switch, ptr %152, i32 0, i32 1, i32 3
  %161 = ptrtoint ptr %route_lo.i271 to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load i32, ptr %route_lo.i271, align 8
  %conv2.i272 = zext i32 %162 to i64
  %or.i273 = or i64 %shl.i270, %conv2.i272
  %163 = ptrtoint ptr %port1.i to i32
  call void @__asan_load1_noabort(i32 %163)
  %164 = load i8, ptr %port1.i, align 4
  %conv150 = zext i8 %164 to i32
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev146, ptr noundef nonnull @.str.87, i64 noundef %or.i273, i32 noundef %conv150) #19
  %165 = ptrtoint ptr %remote130 to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load ptr, ptr %remote130, align 4
  %sw154 = getelementptr inbounds %struct.tb_port, ptr %166, i32 0, i32 1
  %167 = ptrtoint ptr %sw154 to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %sw154, align 4
  call void @tb_sw_set_unplugged(ptr noundef %168)
  br label %for.inc

for.inc:                                          ; preds = %do.body137, %land.lhs.true.for.inc_crit_edge, %if.end129.for.inc_crit_edge, %if.then105, %if.else103.for.inc_crit_edge, %if.then101, %tb_port_resume.exit.for.inc_crit_edge, %tb_port_is_null.exit.for.inc_crit_edge, %land.lhs.true.i.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %port.0 = getelementptr %struct.tb_port, ptr %port.0303, i32 1
  %169 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %ports, align 4
  %171 = ptrtoint ptr %max_port_number to i32
  call void @__asan_load4_noabort(i32 %171)
  %bf.load = load i32, ptr %max_port_number, align 4
  %bf.lshr = lshr i32 %bf.load, 12
  %bf.clear = and i32 %bf.lshr, 63
  %arrayidx75 = getelementptr %struct.tb_port, ptr %170, i32 %bf.clear
  %cmp76.not = icmp ugt ptr %port.0, %arrayidx75
  br i1 %cmp76.not, label %for.inc.cleanup157_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.cleanup157_crit_edge:                     ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup157

cleanup157:                                       ; preds = %for.inc.cleanup157_crit_edge, %if.end73.cleanup157_crit_edge, %tb_switch_set_wake.exit.cleanup157_crit_edge, %if.end64.cleanup157_crit_edge, %cleanup.thread
  %retval.1 = phi i32 [ %call65, %if.end64.cleanup157_crit_edge ], [ %call70, %tb_switch_set_wake.exit.cleanup157_crit_edge ], [ %retval.0.ph, %cleanup.thread ], [ 0, %if.end73.cleanup157_crit_edge ], [ 0, %for.inc.cleanup157_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb4_switch_read_uid(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_drom_read_uid_only(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @tb_switch_set_wake(ptr noundef %sw, i32 noundef %flags) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %flags)
  %tobool.not = icmp eq i32 %flags, 0
  br i1 %tobool.not, label %do.body9, label %do.body

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_switch_set_wake.__UNIQUE_ID_ddebug268, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_switch_set_wake, %if.then5)) #16
          to label %if.end34 [label %if.then5], !srcloc !446

if.then5:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %tb = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %0 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tb, align 8
  %nhi = getelementptr inbounds %struct.tb, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 44
  %route_hi.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %6 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %6, i32 8)
  %bf.load.i = load i64, ptr %route_hi.i, align 4
  %7 = lshr i64 %bf.load.i, 1
  %shl.i = and i64 %7, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %8 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %9 to i64
  %or.i = or i64 %shl.i, %conv2.i
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_switch_set_wake.__UNIQUE_ID_ddebug268, ptr noundef %dev, ptr noundef nonnull @.str.191, i64 noundef %or.i, i32 noundef %flags) #16
  br label %if.end34

do.body9:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_switch_set_wake.__UNIQUE_ID_ddebug269, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_switch_set_wake, %if.then23)) #16
          to label %if.end34 [label %if.then23], !srcloc !446

if.then23:                                        ; preds = %do.body9
  call void @__sanitizer_cov_trace_pc() #18
  %tb24 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %10 = ptrtoint ptr %tb24 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %tb24, align 8
  %nhi25 = getelementptr inbounds %struct.tb, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %nhi25 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %nhi25, align 4
  %pdev26 = getelementptr inbounds %struct.tb_nhi, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %pdev26 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %pdev26, align 4
  %dev27 = getelementptr inbounds %struct.pci_dev, ptr %15, i32 0, i32 44
  %route_hi.i4 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %16 = ptrtoint ptr %route_hi.i4 to i32
  call void @__asan_loadN_noabort(i32 %16, i32 8)
  %bf.load.i5 = load i64, ptr %route_hi.i4, align 4
  %17 = lshr i64 %bf.load.i5, 1
  %shl.i6 = and i64 %17, 9223372032559808512
  %route_lo.i7 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %18 = ptrtoint ptr %route_lo.i7 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %route_lo.i7, align 8
  %conv2.i8 = zext i32 %19 to i64
  %or.i9 = or i64 %shl.i6, %conv2.i8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_switch_set_wake.__UNIQUE_ID_ddebug269, ptr noundef %dev27, ptr noundef nonnull @.str.192, i64 noundef %or.i9) #16
  br label %if.end34

if.end34:                                         ; preds = %if.then23, %do.body9, %if.then5, %do.body
  %thunderbolt_version.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %20 = ptrtoint ptr %thunderbolt_version.i to i32
  call void @__asan_loadN_noabort(i32 %20, i32 8)
  %bf.load.i10 = load i64, ptr %thunderbolt_version.i, align 4
  %bf.cast1.i = and i64 %bf.load.i10, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i)
  %cmp.i = icmp eq i64 %bf.cast1.i, 32
  br i1 %cmp.i, label %if.then36, label %if.end38

if.then36:                                        ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #18
  %call37 = tail call i32 @usb4_switch_set_wake(ptr noundef %sw, i32 noundef %flags) #16
  br label %return

if.end38:                                         ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #18
  %call39 = tail call i32 @tb_lc_set_wake(ptr noundef %sw, i32 noundef %flags) #16
  br label %return

return:                                           ; preds = %if.end38, %if.then36
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @tb_switch_suspend(ptr noundef %sw, i1 noundef zeroext %runtime) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_switch_suspend.__UNIQUE_ID_ddebug271, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_switch_suspend, %if.then)) #16
          to label %do.end [label %if.then], !srcloc !446

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %tb = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %0 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tb, align 8
  %nhi = getelementptr inbounds %struct.tb, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 44
  %route_hi.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %6 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %6, i32 8)
  %bf.load.i = load i64, ptr %route_hi.i, align 4
  %7 = lshr i64 %bf.load.i, 1
  %shl.i = and i64 %7, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %8 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %9 to i64
  %or.i = or i64 %shl.i, %conv2.i
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_switch_suspend.__UNIQUE_ID_ddebug271, ptr noundef %dev, ptr noundef nonnull @.str.95, i64 noundef %or.i) #16
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %10 = load i8, ptr @clx_enabled, align 1, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool.not.i = icmp eq i8 %10, 0
  br i1 %tobool.not.i, label %do.end.if.end23_crit_edge, label %tb_switch_disable_clx.exit

do.end.if.end23_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23

tb_switch_disable_clx.exit:                       ; preds = %do.end
  %call.i = tail call fastcc i32 @tb_switch_disable_cl0s(ptr noundef %sw) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool9.not = icmp eq i32 %call.i, 0
  br i1 %tobool9.not, label %tb_switch_disable_clx.exit.if.end23_crit_edge, label %do.body11

tb_switch_disable_clx.exit.if.end23_crit_edge:    ; preds = %tb_switch_disable_clx.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23

do.body11:                                        ; preds = %tb_switch_disable_clx.exit
  call void @__sanitizer_cov_trace_pc() #18
  %tb16 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %11 = ptrtoint ptr %tb16 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %tb16, align 8
  %nhi17 = getelementptr inbounds %struct.tb, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %nhi17 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %nhi17, align 4
  %pdev18 = getelementptr inbounds %struct.tb_nhi, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %pdev18 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %pdev18, align 4
  %dev19 = getelementptr inbounds %struct.pci_dev, ptr %16, i32 0, i32 44
  %route_hi.i76 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %17 = ptrtoint ptr %route_hi.i76 to i32
  call void @__asan_loadN_noabort(i32 %17, i32 8)
  %bf.load.i77 = load i64, ptr %route_hi.i76, align 4
  %18 = lshr i64 %bf.load.i77, 1
  %shl.i78 = and i64 %18, 9223372032559808512
  %route_lo.i79 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %19 = ptrtoint ptr %route_lo.i79 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %route_lo.i79, align 8
  %conv2.i80 = zext i32 %20 to i64
  %or.i81 = or i64 %shl.i78, %conv2.i80
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev19, ptr noundef nonnull @.str.96, i64 noundef %or.i81) #19
  br label %if.end23

if.end23:                                         ; preds = %do.body11, %tb_switch_disable_clx.exit.if.end23_crit_edge, %do.end.if.end23_crit_edge
  %call24 = tail call fastcc i32 @tb_plug_events_active(ptr noundef %sw, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %if.end27, label %if.end23.cleanup_crit_edge

if.end23.cleanup_crit_edge:                       ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end27:                                         ; preds = %if.end23
  %ports = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 2
  %21 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %ports, align 4
  %max_port_number = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 2
  %port.093 = getelementptr %struct.tb_port, ptr %22, i32 1
  %23 = ptrtoint ptr %max_port_number to i32
  call void @__asan_load4_noabort(i32 %23)
  %bf.load94 = load i32, ptr %max_port_number, align 4
  %bf.lshr95 = lshr i32 %bf.load94, 12
  %bf.clear96 = and i32 %bf.lshr95, 63
  %arrayidx2997 = getelementptr %struct.tb_port, ptr %22, i32 %bf.clear96
  %cmp.not98 = icmp ugt ptr %port.093, %arrayidx2997
  br i1 %cmp.not98, label %if.end27.for.end_crit_edge, label %if.end27.for.body_crit_edge

if.end27.for.body_crit_edge:                      ; preds = %if.end27
  br label %for.body

if.end27.for.end_crit_edge:                       ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end27.for.body_crit_edge
  %port.0101 = phi ptr [ %port.0, %for.inc.for.body_crit_edge ], [ %port.093, %if.end27.for.body_crit_edge ]
  %.pn99 = phi ptr [ %port.0101, %for.inc.for.body_crit_edge ], [ %22, %if.end27.for.body_crit_edge ]
  %sw.i.i = getelementptr %struct.tb_port, ptr %.pn99, i32 1, i32 1
  %24 = ptrtoint ptr %sw.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %sw.i.i, align 4
  %ports.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %25, i32 0, i32 2
  %26 = ptrtoint ptr %ports.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %ports.i.i.i, align 4
  %upstream_port_number.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %25, i32 0, i32 1, i32 2
  %28 = ptrtoint ptr %upstream_port_number.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %bf.load.i.i.i = load i32, ptr %upstream_port_number.i.i.i, align 4
  %bf.lshr.i.i.i = lshr i32 %bf.load.i.i.i, 18
  %bf.clear.i.i.i = and i32 %bf.lshr.i.i.i, 63
  %arrayidx.i.i.i = getelementptr %struct.tb_port, ptr %27, i32 %bf.clear.i.i.i
  %cmp.i.i = icmp eq ptr %arrayidx.i.i.i, %port.0101
  br i1 %cmp.i.i, label %for.body.for.inc_crit_edge, label %tb_is_upstream_port.exit.i

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

tb_is_upstream_port.exit.i:                       ; preds = %for.body
  %dual_link_port.i.i = getelementptr %struct.tb_port, ptr %.pn99, i32 1, i32 12
  %29 = ptrtoint ptr %dual_link_port.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %dual_link_port.i.i, align 4
  %cmp1.i.i = icmp eq ptr %30, %arrayidx.i.i.i
  br i1 %cmp1.i.i, label %tb_is_upstream_port.exit.i.for.inc_crit_edge, label %if.end.i83

tb_is_upstream_port.exit.i.for.inc_crit_edge:     ; preds = %tb_is_upstream_port.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end.i83:                                       ; preds = %tb_is_upstream_port.exit.i
  %remote.i = getelementptr %struct.tb_port, ptr %.pn99, i32 1, i32 2
  %31 = ptrtoint ptr %remote.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %remote.i, align 4
  %tobool.not.i82 = icmp eq ptr %32, null
  br i1 %tobool.not.i82, label %if.end.i83.for.inc_crit_edge, label %if.end2.i

if.end.i83.for.inc_crit_edge:                     ; preds = %if.end.i83
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end2.i:                                        ; preds = %if.end.i83
  %tobool3.not.i = icmp eq ptr %30, null
  br i1 %tobool3.not.i, label %if.end2.i.if.then31_crit_edge, label %land.lhs.true.i

if.end2.i.if.then31_crit_edge:                    ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then31

land.lhs.true.i:                                  ; preds = %if.end2.i
  %link_nr.i = getelementptr %struct.tb_port, ptr %.pn99, i32 1, i32 13
  %33 = ptrtoint ptr %link_nr.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %bf.load.i84 = load i8, ptr %link_nr.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i84)
  %tobool4.not.i = icmp sgt i8 %bf.load.i84, -1
  br i1 %tobool4.not.i, label %land.lhs.true.i.if.then31_crit_edge, label %land.lhs.true.i.for.inc_crit_edge

land.lhs.true.i.for.inc_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

land.lhs.true.i.if.then31_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then31

if.then31:                                        ; preds = %land.lhs.true.i.if.then31_crit_edge, %if.end2.i.if.then31_crit_edge
  %34 = ptrtoint ptr %remote.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %remote.i, align 4
  %sw32 = getelementptr inbounds %struct.tb_port, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %sw32 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %sw32, align 4
  tail call void @tb_switch_suspend(ptr noundef %37, i1 noundef zeroext %runtime)
  br label %for.inc

for.inc:                                          ; preds = %if.then31, %land.lhs.true.i.for.inc_crit_edge, %if.end.i83.for.inc_crit_edge, %tb_is_upstream_port.exit.i.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %port.0 = getelementptr %struct.tb_port, ptr %port.0101, i32 1
  %38 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %ports, align 4
  %40 = ptrtoint ptr %max_port_number to i32
  call void @__asan_load4_noabort(i32 %40)
  %bf.load = load i32, ptr %max_port_number, align 4
  %bf.lshr = lshr i32 %bf.load, 12
  %bf.clear = and i32 %bf.lshr, 63
  %arrayidx29 = getelementptr %struct.tb_port, ptr %39, i32 %bf.clear
  %cmp.not = icmp ugt ptr %port.0, %arrayidx29
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end27.for.end_crit_edge
  br i1 %runtime, label %for.end.if.end44_crit_edge, label %if.else

for.end.if.end44_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end44

if.else:                                          ; preds = %for.end
  %can_wakeup.i = getelementptr inbounds %struct.device, ptr %sw, i32 0, i32 12, i32 1
  %41 = ptrtoint ptr %can_wakeup.i to i32
  call void @__asan_load2_noabort(i32 %41)
  %bf.load.i86 = load i16, ptr %can_wakeup.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load.i86)
  %tobool.not.i87 = icmp sgt i16 %bf.load.i86, -1
  br i1 %tobool.not.i87, label %if.else.if.end44_crit_edge, label %device_may_wakeup.exit

if.else.if.end44_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end44

device_may_wakeup.exit:                           ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %wakeup.i = getelementptr inbounds %struct.device, ptr %sw, i32 0, i32 12, i32 6
  %42 = ptrtoint ptr %wakeup.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %wakeup.i, align 8
  %tobool2.i.not = icmp eq ptr %43, null
  %spec.select = select i1 %tobool2.i.not, i32 0, i32 28
  br label %if.end44

if.end44:                                         ; preds = %device_may_wakeup.exit, %if.else.if.end44_crit_edge, %for.end.if.end44_crit_edge
  %flags.0 = phi i32 [ 63, %for.end.if.end44_crit_edge ], [ 0, %if.else.if.end44_crit_edge ], [ %spec.select, %device_may_wakeup.exit ]
  tail call fastcc void @tb_switch_set_wake(ptr noundef %sw, i32 noundef %flags.0)
  %thunderbolt_version.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %44 = ptrtoint ptr %thunderbolt_version.i to i32
  call void @__asan_loadN_noabort(i32 %44, i32 8)
  %bf.load.i88 = load i64, ptr %thunderbolt_version.i, align 4
  %bf.cast1.i = and i64 %bf.load.i88, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i)
  %cmp.i = icmp eq i64 %bf.cast1.i, 32
  br i1 %cmp.i, label %if.then47, label %if.else49

if.then47:                                        ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #18
  %call48 = tail call i32 @usb4_switch_set_sleep(ptr noundef %sw) #16
  br label %cleanup

if.else49:                                        ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #18
  %call50 = tail call i32 @tb_lc_set_sleep(ptr noundef %sw) #16
  br label %cleanup

cleanup:                                          ; preds = %if.else49, %if.then47, %if.end23.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_switch_disable_clx(ptr nocapture noundef %sw, i32 noundef %clx) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i8, ptr @clx_enabled, align 1, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %0)
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %clx)
  %cond = icmp eq i32 %clx, 1
  br i1 %cond, label %sw.bb, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

sw.bb:                                            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call = tail call fastcc i32 @tb_switch_disable_cl0s(ptr noundef %sw)
  br label %return

return:                                           ; preds = %sw.bb, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call, %sw.bb ], [ 0, %entry.return_crit_edge ], [ -95, %if.end.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb4_switch_set_sleep(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_lc_set_sleep(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @tb_switch_query_dp_resource(ptr noundef %sw, ptr noundef %in) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %thunderbolt_version.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %0 = ptrtoint ptr %thunderbolt_version.i to i32
  call void @__asan_loadN_noabort(i32 %0, i32 8)
  %bf.load.i = load i64, ptr %thunderbolt_version.i, align 4
  %bf.cast1.i = and i64 %bf.load.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i)
  %cmp.i = icmp eq i64 %bf.cast1.i, 32
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call1 = tail call zeroext i1 @usb4_switch_query_dp_resource(ptr noundef %sw, ptr noundef %in) #16
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call2 = tail call zeroext i1 @tb_lc_dp_sink_query(ptr noundef %sw, ptr noundef %in) #16
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i1 [ %call1, %if.then ], [ %call2, %if.end ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @usb4_switch_query_dp_resource(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @tb_lc_dp_sink_query(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_switch_alloc_dp_resource(ptr noundef %sw, ptr noundef %in) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %thunderbolt_version.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %0 = ptrtoint ptr %thunderbolt_version.i to i32
  call void @__asan_loadN_noabort(i32 %0, i32 8)
  %bf.load.i = load i64, ptr %thunderbolt_version.i, align 4
  %bf.cast1.i = and i64 %bf.load.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i)
  %cmp.i = icmp eq i64 %bf.cast1.i, 32
  br i1 %cmp.i, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call1 = tail call i32 @usb4_switch_alloc_dp_resource(ptr noundef %sw, ptr noundef %in) #16
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call2 = tail call i32 @tb_lc_dp_sink_alloc(ptr noundef %sw, ptr noundef %in) #16
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %ret.0 = phi i32 [ %call1, %if.then ], [ %call2, %if.else ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool.not = icmp eq i32 %ret.0, 0
  br i1 %tobool.not, label %do.body9, label %do.body

do.body:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %tb = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %1 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %tb, align 8
  %nhi = getelementptr inbounds %struct.tb, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %6, i32 0, i32 44
  %7 = ptrtoint ptr %thunderbolt_version.i to i32
  call void @__asan_loadN_noabort(i32 %7, i32 8)
  %bf.load.i40 = load i64, ptr %thunderbolt_version.i, align 4
  %8 = lshr i64 %bf.load.i40, 1
  %shl.i = and i64 %8, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %9 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %10 to i64
  %or.i = or i64 %shl.i, %conv2.i
  %port = getelementptr inbounds %struct.tb_port, ptr %in, i32 0, i32 9
  %11 = ptrtoint ptr %port to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %port, align 4
  %conv = zext i8 %12 to i32
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.97, i64 noundef %or.i, i32 noundef %conv) #19
  br label %if.end29

do.body9:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_switch_alloc_dp_resource.__UNIQUE_ID_ddebug272, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_switch_alloc_dp_resource, %if.then16)) #16
          to label %if.end29 [label %if.then16], !srcloc !446

if.then16:                                        ; preds = %do.body9
  call void @__sanitizer_cov_trace_pc() #18
  %tb17 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %13 = ptrtoint ptr %tb17 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %tb17, align 8
  %nhi18 = getelementptr inbounds %struct.tb, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %nhi18 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %nhi18, align 4
  %pdev19 = getelementptr inbounds %struct.tb_nhi, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %pdev19 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %pdev19, align 4
  %dev20 = getelementptr inbounds %struct.pci_dev, ptr %18, i32 0, i32 44
  %19 = ptrtoint ptr %thunderbolt_version.i to i32
  call void @__asan_loadN_noabort(i32 %19, i32 8)
  %bf.load.i42 = load i64, ptr %thunderbolt_version.i, align 4
  %20 = lshr i64 %bf.load.i42, 1
  %shl.i43 = and i64 %20, 9223372032559808512
  %route_lo.i44 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %21 = ptrtoint ptr %route_lo.i44 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %route_lo.i44, align 8
  %conv2.i45 = zext i32 %22 to i64
  %or.i46 = or i64 %shl.i43, %conv2.i45
  %port22 = getelementptr inbounds %struct.tb_port, ptr %in, i32 0, i32 9
  %23 = ptrtoint ptr %port22 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %port22, align 4
  %conv23 = zext i8 %24 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_switch_alloc_dp_resource.__UNIQUE_ID_ddebug272, ptr noundef %dev20, ptr noundef nonnull @.str.99, i64 noundef %or.i46, i32 noundef %conv23) #16
  br label %if.end29

if.end29:                                         ; preds = %if.then16, %do.body9, %do.body
  ret i32 %ret.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb4_switch_alloc_dp_resource(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_lc_dp_sink_alloc(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @tb_switch_dealloc_dp_resource(ptr noundef %sw, ptr noundef %in) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %thunderbolt_version.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %0 = ptrtoint ptr %thunderbolt_version.i to i32
  call void @__asan_loadN_noabort(i32 %0, i32 8)
  %bf.load.i = load i64, ptr %thunderbolt_version.i, align 4
  %bf.cast1.i = and i64 %bf.load.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i)
  %cmp.i = icmp eq i64 %bf.cast1.i, 32
  br i1 %cmp.i, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call1 = tail call i32 @usb4_switch_dealloc_dp_resource(ptr noundef %sw, ptr noundef %in) #16
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call2 = tail call i32 @tb_lc_dp_sink_dealloc(ptr noundef %sw, ptr noundef %in) #16
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %ret.0 = phi i32 [ %call1, %if.then ], [ %call2, %if.else ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool.not = icmp eq i32 %ret.0, 0
  br i1 %tobool.not, label %do.body9, label %do.body

do.body:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %tb = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %1 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %tb, align 8
  %nhi = getelementptr inbounds %struct.tb, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %6, i32 0, i32 44
  %7 = ptrtoint ptr %thunderbolt_version.i to i32
  call void @__asan_loadN_noabort(i32 %7, i32 8)
  %bf.load.i39 = load i64, ptr %thunderbolt_version.i, align 4
  %8 = lshr i64 %bf.load.i39, 1
  %shl.i = and i64 %8, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %9 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %10 to i64
  %or.i = or i64 %shl.i, %conv2.i
  %port = getelementptr inbounds %struct.tb_port, ptr %in, i32 0, i32 9
  %11 = ptrtoint ptr %port to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %port, align 4
  %conv = zext i8 %12 to i32
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev, ptr noundef nonnull @.str.100, i64 noundef %or.i, i32 noundef %conv) #19
  br label %if.end29

do.body9:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_switch_dealloc_dp_resource.__UNIQUE_ID_ddebug273, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_switch_dealloc_dp_resource, %if.then16)) #16
          to label %if.end29 [label %if.then16], !srcloc !446

if.then16:                                        ; preds = %do.body9
  call void @__sanitizer_cov_trace_pc() #18
  %tb17 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %13 = ptrtoint ptr %tb17 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %tb17, align 8
  %nhi18 = getelementptr inbounds %struct.tb, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %nhi18 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %nhi18, align 4
  %pdev19 = getelementptr inbounds %struct.tb_nhi, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %pdev19 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %pdev19, align 4
  %dev20 = getelementptr inbounds %struct.pci_dev, ptr %18, i32 0, i32 44
  %19 = ptrtoint ptr %thunderbolt_version.i to i32
  call void @__asan_loadN_noabort(i32 %19, i32 8)
  %bf.load.i41 = load i64, ptr %thunderbolt_version.i, align 4
  %20 = lshr i64 %bf.load.i41, 1
  %shl.i42 = and i64 %20, 9223372032559808512
  %route_lo.i43 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %21 = ptrtoint ptr %route_lo.i43 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %route_lo.i43, align 8
  %conv2.i44 = zext i32 %22 to i64
  %or.i45 = or i64 %shl.i42, %conv2.i44
  %port22 = getelementptr inbounds %struct.tb_port, ptr %in, i32 0, i32 9
  %23 = ptrtoint ptr %port22 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %port22, align 4
  %conv23 = zext i8 %24 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_switch_dealloc_dp_resource.__UNIQUE_ID_ddebug273, ptr noundef %dev20, ptr noundef nonnull @.str.102, i64 noundef %or.i45, i32 noundef %conv23) #16
  br label %if.end29

if.end29:                                         ; preds = %if.then16, %do.body9, %do.body
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb4_switch_dealloc_dp_resource(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_lc_dp_sink_dealloc(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @tb_switch_find_by_link_depth(ptr noundef %tb, i8 noundef zeroext %link, i8 noundef zeroext %depth) local_unnamed_addr #0 align 64 {
entry:
  %lookup = alloca %struct.tb_sw_lookup, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %lookup) #16
  %0 = call ptr @memset(ptr %lookup, i32 0, i32 24)
  %1 = ptrtoint ptr %lookup to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %tb, ptr %lookup, align 8
  %link2 = getelementptr inbounds %struct.tb_sw_lookup, ptr %lookup, i32 0, i32 1
  %2 = ptrtoint ptr %link2 to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 %link, ptr %link2, align 4
  %depth3 = getelementptr inbounds %struct.tb_sw_lookup, ptr %lookup, i32 0, i32 2
  %3 = ptrtoint ptr %depth3 to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 %depth, ptr %depth3, align 1
  %call = call ptr @bus_find_device(ptr noundef nonnull @tb_bus_type, ptr noundef null, ptr noundef nonnull %lookup, ptr noundef nonnull @tb_switch_match) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.then

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i.i = getelementptr inbounds %struct.device, ptr %call, i32 0, i32 4
  %4 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %5, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %call, ptr null
  br label %cleanup

cleanup:                                          ; preds = %if.then, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %dev..i, %if.then ], [ null, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %lookup) #16
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bus_find_device(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @tb_switch_match(ptr noundef readonly %dev, ptr nocapture noundef readonly %data) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp ne ptr %1, @tb_switch_type
  %tobool.not62 = icmp eq ptr %dev, null
  %tobool.not = or i1 %tobool.not62, %cmp.i.i
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %tb = getelementptr inbounds %struct.tb_switch, ptr %dev, i32 0, i32 5
  %2 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tb, align 8
  %4 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %data, align 8
  %cmp.not = icmp eq ptr %3, %5
  br i1 %cmp.not, label %if.end3, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %uuid = getelementptr inbounds %struct.tb_sw_lookup, ptr %data, i32 0, i32 3
  %6 = ptrtoint ptr %uuid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %uuid, align 8
  %tobool4.not = icmp eq ptr %7, null
  br i1 %tobool4.not, label %if.end10, label %if.then5

if.then5:                                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  %uuid6 = getelementptr inbounds %struct.tb_switch, ptr %dev, i32 0, i32 7
  %8 = ptrtoint ptr %uuid6 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %uuid6, align 8
  %bcmp = tail call i32 @bcmp(ptr noundef dereferenceable(16) %9, ptr noundef nonnull dereferenceable(16) %7, i32 16) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %tobool9.not = icmp eq i32 %bcmp, 0
  br label %cleanup

if.end10:                                         ; preds = %if.end3
  %route = getelementptr inbounds %struct.tb_sw_lookup, ptr %data, i32 0, i32 4
  %10 = ptrtoint ptr %route to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %route, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %11)
  %tobool11.not = icmp eq i64 %11, 0
  br i1 %tobool11.not, label %if.end22, label %if.then12

if.then12:                                        ; preds = %if.end10
  %route_lo = getelementptr inbounds %struct.tb_switch, ptr %dev, i32 0, i32 1, i32 3
  %12 = ptrtoint ptr %route_lo to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %route_lo, align 8
  %conv = trunc i64 %11 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %conv)
  %cmp14 = icmp eq i32 %13, %conv
  br i1 %cmp14, label %land.rhs, label %if.then12.cleanup_crit_edge

if.then12.cleanup_crit_edge:                      ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.rhs:                                         ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #18
  %route_hi = getelementptr inbounds %struct.tb_switch, ptr %dev, i32 0, i32 1, i32 4
  %14 = ptrtoint ptr %route_hi to i32
  call void @__asan_loadN_noabort(i32 %14, i32 8)
  %bf.load = load i64, ptr %route_hi, align 4
  %bf.lshr = lshr i64 %bf.load, 33
  %bf.cast = trunc i64 %bf.lshr to i32
  %shr = lshr i64 %11, 32
  %conv19 = trunc i64 %shr to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %bf.cast, i32 %conv19)
  %cmp20 = icmp eq i32 %bf.cast, %conv19
  br label %cleanup

if.end22:                                         ; preds = %if.end10
  %depth = getelementptr inbounds %struct.tb_sw_lookup, ptr %data, i32 0, i32 2
  %15 = ptrtoint ptr %depth to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %depth, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool23.not = icmp eq i8 %16, 0
  br i1 %tobool23.not, label %if.then24, label %if.end29

if.then24:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  %depth25 = getelementptr inbounds %struct.tb_switch, ptr %dev, i32 0, i32 34
  %17 = ptrtoint ptr %depth25 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %depth25, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool26.not = icmp eq i8 %18, 0
  br label %cleanup

if.end29:                                         ; preds = %if.end22
  %link = getelementptr inbounds %struct.tb_switch, ptr %dev, i32 0, i32 33
  %19 = ptrtoint ptr %link to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %link, align 2
  %link31 = getelementptr inbounds %struct.tb_sw_lookup, ptr %data, i32 0, i32 1
  %21 = ptrtoint ptr %link31 to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %link31, align 4
  call void @__sanitizer_cov_trace_cmp1(i8 %20, i8 %22)
  %cmp33 = icmp eq i8 %20, %22
  br i1 %cmp33, label %land.rhs35, label %if.end29.cleanup_crit_edge

if.end29.cleanup_crit_edge:                       ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.rhs35:                                       ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #18
  %depth36 = getelementptr inbounds %struct.tb_switch, ptr %dev, i32 0, i32 34
  %23 = ptrtoint ptr %depth36 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %depth36, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %24, i8 %16)
  %cmp40 = icmp eq i8 %24, %16
  br label %cleanup

cleanup:                                          ; preds = %land.rhs35, %if.end29.cleanup_crit_edge, %if.then24, %land.rhs, %if.then12.cleanup_crit_edge, %if.then5, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0.shrunk = phi i1 [ %tobool9.not, %if.then5 ], [ %tobool26.not, %if.then24 ], [ false, %entry.cleanup_crit_edge ], [ false, %if.end.cleanup_crit_edge ], [ false, %if.then12.cleanup_crit_edge ], [ %cmp20, %land.rhs ], [ false, %if.end29.cleanup_crit_edge ], [ %cmp40, %land.rhs35 ]
  %retval.0 = zext i1 %retval.0.shrunk to i32
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @tb_switch_find_by_uuid(ptr noundef %tb, ptr noundef %uuid) local_unnamed_addr #0 align 64 {
entry:
  %lookup = alloca %struct.tb_sw_lookup, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %lookup) #16
  %0 = call ptr @memset(ptr %lookup, i32 0, i32 24)
  %1 = ptrtoint ptr %lookup to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %tb, ptr %lookup, align 8
  %uuid2 = getelementptr inbounds %struct.tb_sw_lookup, ptr %lookup, i32 0, i32 3
  %2 = ptrtoint ptr %uuid2 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %uuid, ptr %uuid2, align 8
  %call = call ptr @bus_find_device(ptr noundef nonnull @tb_bus_type, ptr noundef null, ptr noundef nonnull %lookup, ptr noundef nonnull @tb_switch_match) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.then

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %type.i.i = getelementptr inbounds %struct.device, ptr %call, i32 0, i32 4
  %3 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %4, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %call, ptr null
  br label %cleanup

cleanup:                                          ; preds = %if.then, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %dev..i, %if.then ], [ null, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %lookup) #16
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @tb_switch_find_by_route(ptr noundef %tb, i64 noundef %route) local_unnamed_addr #0 align 64 {
entry:
  %lookup = alloca %struct.tb_sw_lookup, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %lookup) #16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %route)
  %tobool.not = icmp eq i64 %route, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %root_switch = getelementptr inbounds %struct.tb, ptr %tb, i32 0, i32 5
  %0 = ptrtoint ptr %root_switch to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root_switch, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %if.then.cleanup_crit_edge, label %if.then.i

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %call.i = tail call ptr @get_device(ptr noundef nonnull %1) #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = call ptr @memset(ptr %lookup, i32 0, i32 16)
  %3 = ptrtoint ptr %lookup to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %tb, ptr %lookup, align 8
  %route2 = getelementptr inbounds %struct.tb_sw_lookup, ptr %lookup, i32 0, i32 4
  %4 = ptrtoint ptr %route2 to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 %route, ptr %route2, align 8
  %call3 = call ptr @bus_find_device(ptr noundef nonnull @tb_bus_type, ptr noundef null, ptr noundef nonnull %lookup, ptr noundef nonnull @tb_switch_match) #16
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %if.end.cleanup_crit_edge, label %if.then5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %type.i.i = getelementptr inbounds %struct.device, ptr %call3, i32 0, i32 4
  %5 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %6, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %call3, ptr null
  br label %cleanup

cleanup:                                          ; preds = %if.then5, %if.end.cleanup_crit_edge, %if.then.i, %if.then.cleanup_crit_edge
  %retval.0 = phi ptr [ %dev..i, %if.then5 ], [ null, %if.end.cleanup_crit_edge ], [ null, %if.then.cleanup_crit_edge ], [ %1, %if.then.i ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %lookup) #16
  ret ptr %retval.0
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local ptr @tb_switch_find_port(ptr nocapture noundef readonly %sw, i32 noundef %type) local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ports = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 2
  %0 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ports, align 4
  %max_port_number = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 2
  %2 = ptrtoint ptr %max_port_number to i32
  call void @__asan_load4_noabort(i32 %2)
  %bf.load = load i32, ptr %max_port_number, align 4
  %bf.lshr = lshr i32 %bf.load, 12
  %bf.clear = and i32 %bf.lshr, 63
  %arrayidx2 = getelementptr %struct.tb_port, ptr %1, i32 %bf.clear
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %entry
  %.pn = phi ptr [ %1, %entry ], [ %port.0, %for.body.for.cond_crit_edge ]
  %port.0 = getelementptr %struct.tb_port, ptr %.pn, i32 1
  %cmp.not = icmp ugt ptr %port.0, %arrayidx2
  br i1 %cmp.not, label %for.cond.cleanup_crit_edge, label %for.body

for.cond.cleanup_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body:                                         ; preds = %for.cond
  %type4 = getelementptr %struct.tb_port, ptr %.pn, i32 1, i32 0, i32 2
  %3 = ptrtoint ptr %type4 to i32
  call void @__asan_loadN_noabort(i32 %3, i32 12)
  %bf.load5 = load i96, ptr %type4, align 4
  %bf.lshr6 = lshr i96 %bf.load5, 40
  %4 = trunc i96 %bf.lshr6 to i32
  %bf.cast = and i32 %4, 16777215
  %cmp8 = icmp eq i32 %bf.cast, %type
  br i1 %cmp8, label %for.body.cleanup_crit_edge, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup:                                          ; preds = %for.body.cleanup_crit_edge, %for.cond.cleanup_crit_edge
  %retval.0 = phi ptr [ %port.0, %for.body.cleanup_crit_edge ], [ null, %for.cond.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_switch_enable_clx(ptr nocapture noundef %sw, i32 noundef %clx) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %tb = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %0 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tb, align 8
  %root_switch = getelementptr inbounds %struct.tb, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %root_switch to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %root_switch, align 8
  %4 = load i8, ptr @clx_enabled, align 1, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not = icmp eq i8 %4, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %generation = getelementptr inbounds %struct.tb_switch, ptr %3, i32 0, i32 15
  %5 = ptrtoint ptr %generation to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %generation, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %6)
  %cmp = icmp ult i32 %6, 4
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %lor.lhs.false

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false:                                    ; preds = %if.end
  %config.i = getelementptr inbounds %struct.tb_switch, ptr %3, i32 0, i32 1
  %7 = ptrtoint ptr %config.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %config.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 -32634, i16 %8)
  %cmp.i = icmp eq i16 %8, -32634
  br i1 %cmp.i, label %tb_switch_is_tiger_lake.exit, label %lor.lhs.false.if.end2_crit_edge

lor.lhs.false.if.end2_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end2

tb_switch_is_tiger_lake.exit:                     ; preds = %lor.lhs.false
  %device_id.i = getelementptr inbounds %struct.tb_switch, ptr %3, i32 0, i32 1, i32 1
  %9 = ptrtoint ptr %device_id.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %device_id.i, align 2
  %11 = add i16 %10, 26085
  %switch.and.i = and i16 %11, -7
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %switch.and.i)
  %switch.selectcmp.i = icmp eq i16 %switch.and.i, 0
  br i1 %switch.selectcmp.i, label %tb_switch_is_tiger_lake.exit.cleanup_crit_edge, label %tb_switch_is_tiger_lake.exit.if.end2_crit_edge

tb_switch_is_tiger_lake.exit.if.end2_crit_edge:   ; preds = %tb_switch_is_tiger_lake.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end2

tb_switch_is_tiger_lake.exit.cleanup_crit_edge:   ; preds = %tb_switch_is_tiger_lake.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end2:                                          ; preds = %tb_switch_is_tiger_lake.exit.if.end2_crit_edge, %lor.lhs.false.if.end2_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %clx)
  %cond = icmp eq i32 %clx, 1
  br i1 %cond, label %sw.bb, label %if.end2.cleanup_crit_edge

if.end2.cleanup_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb:                                            ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #18
  %call3 = tail call fastcc i32 @tb_switch_enable_cl0s(ptr noundef %sw)
  br label %cleanup

cleanup:                                          ; preds = %sw.bb, %if.end2.cleanup_crit_edge, %tb_switch_is_tiger_lake.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %sw.bb ], [ 0, %entry.cleanup_crit_edge ], [ 0, %tb_switch_is_tiger_lake.exit.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ -95, %if.end2.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @tb_switch_enable_cl0s(ptr nocapture noundef %sw) unnamed_addr #0 align 64 {
entry:
  %val.i.i179 = alloca i32, align 4
  %val.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %parent.i = getelementptr inbounds %struct.device, ptr %sw, i32 0, i32 1
  %0 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent.i, align 8
  %type.i.i.i = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %type.i.i.i, align 4
  %cmp.i.i.i = icmp eq ptr %3, @tb_switch_type
  %dev..i.i = select i1 %cmp.i.i.i, ptr %1, ptr null
  %thunderbolt_version.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %4 = ptrtoint ptr %thunderbolt_version.i.i to i32
  call void @__asan_loadN_noabort(i32 %4, i32 8)
  %bf.load.i.i = load i64, ptr %thunderbolt_version.i.i, align 4
  %bf.cast1.i.i = and i64 %bf.load.i.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i.i)
  %cmp.i.i = icmp eq i64 %bf.cast1.i.i, 32
  br i1 %cmp.i.i, label %entry.if.end_crit_edge, label %lor.rhs.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

lor.rhs.i:                                        ; preds = %entry
  %config.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1
  %5 = ptrtoint ptr %config.i.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %config.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 -32634, i16 %6)
  %cmp.i3.i = icmp eq i16 %6, -32634
  br i1 %cmp.i3.i, label %if.then.i.i, label %lor.rhs.i.cleanup_crit_edge

lor.rhs.i.cleanup_crit_edge:                      ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i.i:                                      ; preds = %lor.rhs.i
  %device_id.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 1
  %7 = ptrtoint ptr %device_id.i.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %device_id.i.i, align 2
  %9 = zext i16 %8 to i64
  call void @__sanitizer_cov_trace_switch(i64 %9, ptr @__sancov_gen_cov_switch_values.207)
  switch i16 %8, label %if.then.i.i.cleanup_crit_edge [
    i16 5607, label %if.then.i.i.if.end_crit_edge
    i16 5610, label %if.then.i.i.if.end_crit_edge247
    i16 5615, label %if.then.i.i.if.end_crit_edge248
  ]

if.then.i.i.if.end_crit_edge248:                  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.i.i.if.end_crit_edge247:                  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.i.i.if.end_crit_edge:                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.i.i.cleanup_crit_edge:                    ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %if.then.i.i.if.end_crit_edge, %if.then.i.i.if.end_crit_edge247, %if.then.i.i.if.end_crit_edge248, %entry.if.end_crit_edge
  %10 = lshr i64 %bf.load.i.i, 1
  %shl.i = and i64 %10, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %11 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %12 to i64
  %or.i = or i64 %shl.i, %conv2.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i)
  %tobool.not = icmp eq i64 %or.i, 0
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %route_hi.i156 = getelementptr inbounds %struct.tb_switch, ptr %dev..i.i, i32 0, i32 1, i32 4
  %13 = ptrtoint ptr %route_hi.i156 to i32
  call void @__asan_loadN_noabort(i32 %13, i32 8)
  %bf.load.i157 = load i64, ptr %route_hi.i156, align 4
  %14 = lshr i64 %bf.load.i157, 1
  %shl.i158 = and i64 %14, 9223372032559808512
  %route_lo.i159 = getelementptr inbounds %struct.tb_switch, ptr %dev..i.i, i32 0, i32 1, i32 3
  %15 = ptrtoint ptr %route_lo.i159 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %route_lo.i159, align 8
  %conv2.i160 = zext i32 %16 to i64
  %or.i161 = or i64 %shl.i158, %conv2.i160
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i161)
  %tobool6.not = icmp eq i64 %or.i161, 0
  br i1 %tobool6.not, label %if.end.i, label %if.end4.cleanup_crit_edge

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i:                                         ; preds = %if.end4
  %ports.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 2
  %17 = ptrtoint ptr %ports.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %ports.i.i, align 4
  %upstream_port_number.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 2
  %19 = ptrtoint ptr %upstream_port_number.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %bf.load.i17.i = load i32, ptr %upstream_port_number.i.i, align 4
  %bf.lshr.i.i = lshr i32 %bf.load.i17.i, 18
  %bf.clear.i.i = and i32 %bf.lshr.i.i, 63
  %arrayidx.i.i = getelementptr %struct.tb_port, ptr %18, i32 %bf.clear.i.i
  %depth.i.i = getelementptr inbounds %struct.tb_switch, ptr %dev..i.i, i32 0, i32 1, i32 2
  %20 = ptrtoint ptr %depth.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %bf.load.i24.i = load i32, ptr %depth.i.i, align 4
  %21 = lshr i32 %bf.load.i24.i, 6
  %mul.i.i = and i32 %21, 56
  %sh_prom.i.i = zext i32 %mul.i.i to i64
  %shr.i.i = lshr i64 %or.i, %sh_prom.i.i
  %conv.i.i = trunc i64 %shr.i.i to i32
  %conv1.i.i = and i32 %conv.i.i, 255
  %bf.lshr4.i.i = lshr i32 %bf.load.i24.i, 12
  %bf.clear5.i.i = and i32 %bf.lshr4.i.i, 63
  call void @__sanitizer_cov_trace_cmp4(i32 %conv1.i.i, i32 %bf.clear5.i.i)
  %cmp.i.i163 = icmp ugt i32 %conv1.i.i, %bf.clear5.i.i
  br i1 %cmp.i.i163, label %do.end.i.i, label %if.end27.i.i, !prof !448

do.end.i.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.103, i32 noundef 538, i32 noundef 9, ptr noundef null) #16
  br label %tb_port_at.exit.i

if.end27.i.i:                                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %ports.i25.i = getelementptr inbounds %struct.tb_switch, ptr %dev..i.i, i32 0, i32 2
  %22 = ptrtoint ptr %ports.i25.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ports.i25.i, align 4
  %arrayidx.i26.i = getelementptr %struct.tb_port, ptr %23, i32 %conv1.i.i
  br label %tb_port_at.exit.i

tb_port_at.exit.i:                                ; preds = %if.end27.i.i, %do.end.i.i
  %retval.0.i.i = phi ptr [ null, %do.end.i.i ], [ %arrayidx.i26.i, %if.end27.i.i ]
  %call.i.i = tail call fastcc i32 @__tb_port_pm_secondary_set(ptr noundef %arrayidx.i.i, i1 noundef zeroext true) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool6.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool6.not.i, label %tb_switch_pm_secondary_resolve.exit, label %tb_port_at.exit.i.cleanup_crit_edge

tb_port_at.exit.i.cleanup_crit_edge:              ; preds = %tb_port_at.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_switch_pm_secondary_resolve.exit:              ; preds = %tb_port_at.exit.i
  %call.i27.i = tail call fastcc i32 @__tb_port_pm_secondary_set(ptr noundef %retval.0.i.i, i1 noundef zeroext false) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i27.i)
  %tobool10.not = icmp eq i32 %call.i27.i, 0
  br i1 %tobool10.not, label %if.end12, label %tb_switch_pm_secondary_resolve.exit.cleanup_crit_edge

tb_switch_pm_secondary_resolve.exit.cleanup_crit_edge: ; preds = %tb_switch_pm_secondary_resolve.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end12:                                         ; preds = %tb_switch_pm_secondary_resolve.exit
  %24 = ptrtoint ptr %ports.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %ports.i.i, align 4
  %26 = ptrtoint ptr %upstream_port_number.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %bf.load.i165 = load i32, ptr %upstream_port_number.i.i, align 4
  %bf.lshr.i = lshr i32 %bf.load.i165, 18
  %bf.clear.i = and i32 %bf.lshr.i, 63
  %arrayidx.i = getelementptr %struct.tb_port, ptr %25, i32 %bf.clear.i
  %27 = ptrtoint ptr %thunderbolt_version.i.i to i32
  call void @__asan_loadN_noabort(i32 %27, i32 8)
  %bf.load.i167 = load i64, ptr %thunderbolt_version.i.i, align 4
  %28 = lshr i64 %bf.load.i167, 1
  %shl.i168 = and i64 %28, 9223372032559808512
  %29 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %route_lo.i, align 8
  %conv2.i170 = zext i32 %30 to i64
  %or.i171 = or i64 %shl.i168, %conv2.i170
  %31 = ptrtoint ptr %depth.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %bf.load.i172 = load i32, ptr %depth.i.i, align 4
  %32 = lshr i32 %bf.load.i172, 6
  %mul.i = and i32 %32, 56
  %sh_prom.i = zext i32 %mul.i to i64
  %shr.i = lshr i64 %or.i171, %sh_prom.i
  %conv.i = trunc i64 %shr.i to i32
  %conv1.i = and i32 %conv.i, 255
  %bf.lshr4.i = lshr i32 %bf.load.i172, 12
  %bf.clear5.i = and i32 %bf.lshr4.i, 63
  call void @__sanitizer_cov_trace_cmp4(i32 %conv1.i, i32 %bf.clear5.i)
  %cmp.i = icmp ugt i32 %conv1.i, %bf.clear5.i
  br i1 %cmp.i, label %do.end.i, label %if.end27.i, !prof !448

do.end.i:                                         ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.103, i32 noundef 538, i32 noundef 9, ptr noundef null) #16
  br label %tb_port_at.exit

if.end27.i:                                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  %ports.i173 = getelementptr inbounds %struct.tb_switch, ptr %dev..i.i, i32 0, i32 2
  %33 = ptrtoint ptr %ports.i173 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %ports.i173, align 4
  %arrayidx.i174 = getelementptr %struct.tb_port, ptr %34, i32 %conv1.i
  br label %tb_port_at.exit

tb_port_at.exit:                                  ; preds = %if.end27.i, %do.end.i
  %retval.0.i175 = phi ptr [ null, %do.end.i ], [ %arrayidx.i174, %if.end27.i ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i) #16
  %35 = ptrtoint ptr %val.i.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 -1, ptr %val.i.i, align 4, !annotation !447
  %bonded.i.i = getelementptr %struct.tb_port, ptr %25, i32 %bf.clear.i, i32 11
  %36 = ptrtoint ptr %bonded.i.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %bonded.i.i, align 2, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %37)
  %tobool.not.i.i = icmp eq i8 %37, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %tb_port_at.exit.if.end.i.i176_crit_edge

tb_port_at.exit.if.end.i.i176_crit_edge:          ; preds = %tb_port_at.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i176

land.lhs.true.i.i:                                ; preds = %tb_port_at.exit
  %dual_link_port.i.i = getelementptr %struct.tb_port, ptr %25, i32 %bf.clear.i, i32 12
  %38 = ptrtoint ptr %dual_link_port.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %dual_link_port.i.i, align 4
  %tobool1.not.i.i = icmp eq ptr %39, null
  br i1 %tobool1.not.i.i, label %land.lhs.true.i.i.if.end.i.i176_crit_edge, label %land.lhs.true.i.i.tb_port_cl0s_supported.exit_crit_edge

land.lhs.true.i.i.tb_port_cl0s_supported.exit_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_cl0s_supported.exit

land.lhs.true.i.i.if.end.i.i176_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i176

if.end.i.i176:                                    ; preds = %land.lhs.true.i.i.if.end.i.i176_crit_edge, %tb_port_at.exit.if.end.i.i176_crit_edge
  %xdomain.i.i = getelementptr %struct.tb_port, ptr %25, i32 %bf.clear.i, i32 3
  %40 = ptrtoint ptr %xdomain.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %xdomain.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %41, null
  br i1 %tobool2.not.i.i, label %if.end4.i.i, label %if.end.i.i176.tb_port_cl0s_supported.exit_crit_edge

if.end.i.i176.tb_port_cl0s_supported.exit_crit_edge: ; preds = %if.end.i.i176
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_cl0s_supported.exit

if.end4.i.i:                                      ; preds = %if.end.i.i176
  %sw.i.i = getelementptr %struct.tb_port, ptr %25, i32 %bf.clear.i, i32 1
  %42 = ptrtoint ptr %sw.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %sw.i.i, align 4
  %thunderbolt_version.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %43, i32 0, i32 1, i32 4
  %44 = ptrtoint ptr %thunderbolt_version.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %44, i32 8)
  %bf.load.i.i.i = load i64, ptr %thunderbolt_version.i.i.i, align 4
  %bf.cast1.i.i.i = and i64 %bf.load.i.i.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i.i.i)
  %cmp.i.i.i177 = icmp eq i64 %bf.cast1.i.i.i, 32
  br i1 %cmp.i.i.i177, label %if.then5.i.i, label %if.else.i.i

if.then5.i.i:                                     ; preds = %if.end4.i.i
  %call6.i.i = tail call zeroext i1 @usb4_port_clx_supported(ptr noundef %arrayidx.i) #16
  br i1 %call6.i.i, label %if.then5.i.i.sw.bb.i.i_crit_edge, label %if.then5.i.i.tb_port_cl0s_supported.exit_crit_edge

if.then5.i.i.tb_port_cl0s_supported.exit_crit_edge: ; preds = %if.then5.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_cl0s_supported.exit

if.then5.i.i.sw.bb.i.i_crit_edge:                 ; preds = %if.then5.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb.i.i

if.else.i.i:                                      ; preds = %if.end4.i.i
  %call9.i.i = tail call zeroext i1 @tb_lc_is_clx_supported(ptr noundef %arrayidx.i) #16
  br i1 %call9.i.i, label %if.else.i.i.sw.bb.i.i_crit_edge, label %if.else.i.i.tb_port_cl0s_supported.exit_crit_edge

if.else.i.i.tb_port_cl0s_supported.exit_crit_edge: ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_cl0s_supported.exit

if.else.i.i.sw.bb.i.i_crit_edge:                  ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb.i.i

sw.bb.i.i:                                        ; preds = %if.else.i.i.sw.bb.i.i_crit_edge, %if.then5.i.i.sw.bb.i.i_crit_edge
  %45 = ptrtoint ptr %sw.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %sw.i.i, align 4
  %is_unplugged.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %46, i32 0, i32 20
  %47 = ptrtoint ptr %is_unplugged.i.i.i to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %is_unplugged.i.i.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %48)
  %tobool.not.i.i.i = icmp eq i8 %48, 0
  br i1 %tobool.not.i.i.i, label %tb_port_read.exit.i.i, label %sw.bb.i.i.tb_port_cl0s_supported.exit_crit_edge

sw.bb.i.i.tb_port_cl0s_supported.exit_crit_edge:  ; preds = %sw.bb.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_cl0s_supported.exit

tb_port_read.exit.i.i:                            ; preds = %sw.bb.i.i
  %cap_phy.i.i = getelementptr %struct.tb_port, ptr %25, i32 %bf.clear.i, i32 4
  %49 = ptrtoint ptr %cap_phy.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %cap_phy.i.i, align 4
  %tb.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %46, i32 0, i32 5
  %51 = ptrtoint ptr %tb.i.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %tb.i.i.i, align 8
  %ctl.i.i.i = getelementptr inbounds %struct.tb, ptr %52, i32 0, i32 3
  %53 = ptrtoint ptr %ctl.i.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %ctl.i.i.i, align 8
  %route_hi.i.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %46, i32 0, i32 1, i32 4
  %55 = ptrtoint ptr %route_hi.i.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %55, i32 8)
  %bf.load.i.i.i.i = load i64, ptr %route_hi.i.i.i.i, align 4
  %56 = lshr i64 %bf.load.i.i.i.i, 1
  %shl.i.i.i.i = and i64 %56, 9223372032559808512
  %route_lo.i.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %46, i32 0, i32 1, i32 3
  %57 = ptrtoint ptr %route_lo.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %route_lo.i.i.i.i, align 8
  %conv2.i.i.i.i = zext i32 %58 to i64
  %or.i.i.i.i = or i64 %shl.i.i.i.i, %conv2.i.i.i.i
  %port3.i.i.i = getelementptr %struct.tb_port, ptr %25, i32 %bf.clear.i, i32 9
  %59 = ptrtoint ptr %port3.i.i.i to i32
  call void @__asan_load1_noabort(i32 %59)
  %60 = load i8, ptr %port3.i.i.i, align 4
  %conv.i.i.i = zext i8 %60 to i32
  %call4.i.i.i = call i32 @tb_cfg_read(ptr noundef %54, ptr noundef nonnull %val.i.i, i64 noundef %or.i.i.i.i, i32 noundef %conv.i.i.i, i32 noundef 1, i32 noundef %50, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i.i)
  %tobool15.not.i.i = icmp eq i32 %call4.i.i.i, 0
  br i1 %tobool15.not.i.i, label %if.end18.i.i, label %tb_port_read.exit.i.i.tb_port_cl0s_supported.exit_crit_edge

tb_port_read.exit.i.i.tb_port_cl0s_supported.exit_crit_edge: ; preds = %tb_port_read.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_cl0s_supported.exit

if.end18.i.i:                                     ; preds = %tb_port_read.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %61 = ptrtoint ptr %val.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %val.i.i, align 4
  %and.i.i = and i32 %62, 201326592
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool19.i.i = icmp ne i32 %and.i.i, 0
  br label %tb_port_cl0s_supported.exit

tb_port_cl0s_supported.exit:                      ; preds = %if.end18.i.i, %tb_port_read.exit.i.i.tb_port_cl0s_supported.exit_crit_edge, %sw.bb.i.i.tb_port_cl0s_supported.exit_crit_edge, %if.else.i.i.tb_port_cl0s_supported.exit_crit_edge, %if.then5.i.i.tb_port_cl0s_supported.exit_crit_edge, %if.end.i.i176.tb_port_cl0s_supported.exit_crit_edge, %land.lhs.true.i.i.tb_port_cl0s_supported.exit_crit_edge
  %retval.0.i.i178 = phi i1 [ %tobool19.i.i, %if.end18.i.i ], [ false, %land.lhs.true.i.i.tb_port_cl0s_supported.exit_crit_edge ], [ false, %if.end.i.i176.tb_port_cl0s_supported.exit_crit_edge ], [ false, %if.then5.i.i.tb_port_cl0s_supported.exit_crit_edge ], [ false, %if.else.i.i.tb_port_cl0s_supported.exit_crit_edge ], [ false, %tb_port_read.exit.i.i.tb_port_cl0s_supported.exit_crit_edge ], [ false, %sw.bb.i.i.tb_port_cl0s_supported.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i179) #16
  %63 = ptrtoint ptr %val.i.i179 to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 -1, ptr %val.i.i179, align 4, !annotation !447
  %bonded.i.i180 = getelementptr inbounds %struct.tb_port, ptr %retval.0.i175, i32 0, i32 11
  %64 = ptrtoint ptr %bonded.i.i180 to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %bonded.i.i180, align 2, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %65)
  %tobool.not.i.i181 = icmp eq i8 %65, 0
  br i1 %tobool.not.i.i181, label %land.lhs.true.i.i184, label %tb_port_cl0s_supported.exit.if.end.i.i187_crit_edge

tb_port_cl0s_supported.exit.if.end.i.i187_crit_edge: ; preds = %tb_port_cl0s_supported.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i187

land.lhs.true.i.i184:                             ; preds = %tb_port_cl0s_supported.exit
  %dual_link_port.i.i182 = getelementptr inbounds %struct.tb_port, ptr %retval.0.i175, i32 0, i32 12
  %66 = ptrtoint ptr %dual_link_port.i.i182 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %dual_link_port.i.i182, align 4
  %tobool1.not.i.i183 = icmp eq ptr %67, null
  br i1 %tobool1.not.i.i183, label %land.lhs.true.i.i184.if.end.i.i187_crit_edge, label %land.lhs.true.i.i184.tb_port_cl0s_supported.exit219_crit_edge

land.lhs.true.i.i184.tb_port_cl0s_supported.exit219_crit_edge: ; preds = %land.lhs.true.i.i184
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_cl0s_supported.exit219

land.lhs.true.i.i184.if.end.i.i187_crit_edge:     ; preds = %land.lhs.true.i.i184
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i187

if.end.i.i187:                                    ; preds = %land.lhs.true.i.i184.if.end.i.i187_crit_edge, %tb_port_cl0s_supported.exit.if.end.i.i187_crit_edge
  %xdomain.i.i185 = getelementptr inbounds %struct.tb_port, ptr %retval.0.i175, i32 0, i32 3
  %68 = ptrtoint ptr %xdomain.i.i185 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %xdomain.i.i185, align 4
  %tobool2.not.i.i186 = icmp eq ptr %69, null
  br i1 %tobool2.not.i.i186, label %if.end4.i.i193, label %if.end.i.i187.tb_port_cl0s_supported.exit219_crit_edge

if.end.i.i187.tb_port_cl0s_supported.exit219_crit_edge: ; preds = %if.end.i.i187
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_cl0s_supported.exit219

if.end4.i.i193:                                   ; preds = %if.end.i.i187
  %sw.i.i188 = getelementptr inbounds %struct.tb_port, ptr %retval.0.i175, i32 0, i32 1
  %70 = ptrtoint ptr %sw.i.i188 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %sw.i.i188, align 4
  %thunderbolt_version.i.i.i189 = getelementptr inbounds %struct.tb_switch, ptr %71, i32 0, i32 1, i32 4
  %72 = ptrtoint ptr %thunderbolt_version.i.i.i189 to i32
  call void @__asan_loadN_noabort(i32 %72, i32 8)
  %bf.load.i.i.i190 = load i64, ptr %thunderbolt_version.i.i.i189, align 4
  %bf.cast1.i.i.i191 = and i64 %bf.load.i.i.i190, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i.i.i191)
  %cmp.i.i.i192 = icmp eq i64 %bf.cast1.i.i.i191, 32
  br i1 %cmp.i.i.i192, label %if.then5.i.i195, label %if.else.i.i197

if.then5.i.i195:                                  ; preds = %if.end4.i.i193
  %call6.i.i194 = call zeroext i1 @usb4_port_clx_supported(ptr noundef %retval.0.i175) #16
  br i1 %call6.i.i194, label %if.then5.i.i195.sw.bb.i.i200_crit_edge, label %if.then5.i.i195.tb_port_cl0s_supported.exit219_crit_edge

if.then5.i.i195.tb_port_cl0s_supported.exit219_crit_edge: ; preds = %if.then5.i.i195
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_cl0s_supported.exit219

if.then5.i.i195.sw.bb.i.i200_crit_edge:           ; preds = %if.then5.i.i195
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb.i.i200

if.else.i.i197:                                   ; preds = %if.end4.i.i193
  %call9.i.i196 = call zeroext i1 @tb_lc_is_clx_supported(ptr noundef %retval.0.i175) #16
  br i1 %call9.i.i196, label %if.else.i.i197.sw.bb.i.i200_crit_edge, label %if.else.i.i197.tb_port_cl0s_supported.exit219_crit_edge

if.else.i.i197.tb_port_cl0s_supported.exit219_crit_edge: ; preds = %if.else.i.i197
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_cl0s_supported.exit219

if.else.i.i197.sw.bb.i.i200_crit_edge:            ; preds = %if.else.i.i197
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb.i.i200

sw.bb.i.i200:                                     ; preds = %if.else.i.i197.sw.bb.i.i200_crit_edge, %if.then5.i.i195.sw.bb.i.i200_crit_edge
  %73 = ptrtoint ptr %sw.i.i188 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %sw.i.i188, align 4
  %is_unplugged.i.i.i198 = getelementptr inbounds %struct.tb_switch, ptr %74, i32 0, i32 20
  %75 = ptrtoint ptr %is_unplugged.i.i.i198 to i32
  call void @__asan_load1_noabort(i32 %75)
  %76 = load i8, ptr %is_unplugged.i.i.i198, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %76)
  %tobool.not.i.i.i199 = icmp eq i8 %76, 0
  br i1 %tobool.not.i.i.i199, label %tb_port_read.exit.i.i214, label %sw.bb.i.i200.tb_port_cl0s_supported.exit219_crit_edge

sw.bb.i.i200.tb_port_cl0s_supported.exit219_crit_edge: ; preds = %sw.bb.i.i200
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_cl0s_supported.exit219

tb_port_read.exit.i.i214:                         ; preds = %sw.bb.i.i200
  %cap_phy.i.i201 = getelementptr inbounds %struct.tb_port, ptr %retval.0.i175, i32 0, i32 4
  %77 = ptrtoint ptr %cap_phy.i.i201 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %cap_phy.i.i201, align 4
  %tb.i.i.i202 = getelementptr inbounds %struct.tb_switch, ptr %74, i32 0, i32 5
  %79 = ptrtoint ptr %tb.i.i.i202 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %tb.i.i.i202, align 8
  %ctl.i.i.i203 = getelementptr inbounds %struct.tb, ptr %80, i32 0, i32 3
  %81 = ptrtoint ptr %ctl.i.i.i203 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %ctl.i.i.i203, align 8
  %route_hi.i.i.i.i204 = getelementptr inbounds %struct.tb_switch, ptr %74, i32 0, i32 1, i32 4
  %83 = ptrtoint ptr %route_hi.i.i.i.i204 to i32
  call void @__asan_loadN_noabort(i32 %83, i32 8)
  %bf.load.i.i.i.i205 = load i64, ptr %route_hi.i.i.i.i204, align 4
  %84 = lshr i64 %bf.load.i.i.i.i205, 1
  %shl.i.i.i.i206 = and i64 %84, 9223372032559808512
  %route_lo.i.i.i.i207 = getelementptr inbounds %struct.tb_switch, ptr %74, i32 0, i32 1, i32 3
  %85 = ptrtoint ptr %route_lo.i.i.i.i207 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %route_lo.i.i.i.i207, align 8
  %conv2.i.i.i.i208 = zext i32 %86 to i64
  %or.i.i.i.i209 = or i64 %shl.i.i.i.i206, %conv2.i.i.i.i208
  %port3.i.i.i210 = getelementptr inbounds %struct.tb_port, ptr %retval.0.i175, i32 0, i32 9
  %87 = ptrtoint ptr %port3.i.i.i210 to i32
  call void @__asan_load1_noabort(i32 %87)
  %88 = load i8, ptr %port3.i.i.i210, align 4
  %conv.i.i.i211 = zext i8 %88 to i32
  %call4.i.i.i212 = call i32 @tb_cfg_read(ptr noundef %82, ptr noundef nonnull %val.i.i179, i64 noundef %or.i.i.i.i209, i32 noundef %conv.i.i.i211, i32 noundef 1, i32 noundef %78, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i.i212)
  %tobool15.not.i.i213 = icmp eq i32 %call4.i.i.i212, 0
  br i1 %tobool15.not.i.i213, label %if.end18.i.i217, label %tb_port_read.exit.i.i214.tb_port_cl0s_supported.exit219_crit_edge

tb_port_read.exit.i.i214.tb_port_cl0s_supported.exit219_crit_edge: ; preds = %tb_port_read.exit.i.i214
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_cl0s_supported.exit219

if.end18.i.i217:                                  ; preds = %tb_port_read.exit.i.i214
  call void @__sanitizer_cov_trace_pc() #18
  %89 = ptrtoint ptr %val.i.i179 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %val.i.i179, align 4
  %and.i.i215 = and i32 %90, 201326592
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i215)
  %tobool19.i.i216 = icmp ne i32 %and.i.i215, 0
  br label %tb_port_cl0s_supported.exit219

tb_port_cl0s_supported.exit219:                   ; preds = %if.end18.i.i217, %tb_port_read.exit.i.i214.tb_port_cl0s_supported.exit219_crit_edge, %sw.bb.i.i200.tb_port_cl0s_supported.exit219_crit_edge, %if.else.i.i197.tb_port_cl0s_supported.exit219_crit_edge, %if.then5.i.i195.tb_port_cl0s_supported.exit219_crit_edge, %if.end.i.i187.tb_port_cl0s_supported.exit219_crit_edge, %land.lhs.true.i.i184.tb_port_cl0s_supported.exit219_crit_edge
  %retval.0.i.i218 = phi i1 [ %tobool19.i.i216, %if.end18.i.i217 ], [ false, %land.lhs.true.i.i184.tb_port_cl0s_supported.exit219_crit_edge ], [ false, %if.end.i.i187.tb_port_cl0s_supported.exit219_crit_edge ], [ false, %if.then5.i.i195.tb_port_cl0s_supported.exit219_crit_edge ], [ false, %if.else.i.i197.tb_port_cl0s_supported.exit219_crit_edge ], [ false, %tb_port_read.exit.i.i214.tb_port_cl0s_supported.exit219_crit_edge ], [ false, %sw.bb.i.i200.tb_port_cl0s_supported.exit219_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i179) #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_switch_enable_cl0s.__UNIQUE_ID_ddebug274, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_switch_enable_cl0s, %if.then25)) #16
          to label %do.end [label %if.then25], !srcloc !446

if.then25:                                        ; preds = %tb_port_cl0s_supported.exit219
  call void @__sanitizer_cov_trace_pc() #18
  %sw26 = getelementptr %struct.tb_port, ptr %25, i32 %bf.clear.i, i32 1
  %91 = ptrtoint ptr %sw26 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %sw26, align 4
  %tb = getelementptr inbounds %struct.tb_switch, ptr %92, i32 0, i32 5
  %93 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %tb, align 8
  %nhi = getelementptr inbounds %struct.tb, ptr %94, i32 0, i32 2
  %95 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %96, i32 0, i32 1
  %97 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %98, i32 0, i32 44
  %route_hi.i220 = getelementptr inbounds %struct.tb_switch, ptr %92, i32 0, i32 1, i32 4
  %99 = ptrtoint ptr %route_hi.i220 to i32
  call void @__asan_loadN_noabort(i32 %99, i32 8)
  %bf.load.i221 = load i64, ptr %route_hi.i220, align 4
  %100 = lshr i64 %bf.load.i221, 1
  %shl.i222 = and i64 %100, 9223372032559808512
  %route_lo.i223 = getelementptr inbounds %struct.tb_switch, ptr %92, i32 0, i32 1, i32 3
  %101 = ptrtoint ptr %route_lo.i223 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %route_lo.i223, align 8
  %conv2.i224 = zext i32 %102 to i64
  %or.i225 = or i64 %shl.i222, %conv2.i224
  %port = getelementptr %struct.tb_port, ptr %25, i32 %bf.clear.i, i32 9
  %103 = ptrtoint ptr %port to i32
  call void @__asan_load1_noabort(i32 %103)
  %104 = load i8, ptr %port, align 4
  %conv = zext i8 %104 to i32
  %cond = select i1 %retval.0.i.i178, ptr @.str.132, ptr @.str.195
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_switch_enable_cl0s.__UNIQUE_ID_ddebug274, ptr noundef %dev, ptr noundef nonnull @.str.194, i64 noundef %or.i225, i32 noundef %conv, ptr noundef nonnull %cond) #16
  br label %do.end

do.end:                                           ; preds = %if.then25, %tb_port_cl0s_supported.exit219
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_switch_enable_cl0s.__UNIQUE_ID_ddebug275, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_switch_enable_cl0s, %if.then48)) #16
          to label %do.end63 [label %if.then48], !srcloc !446

if.then48:                                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  %sw49 = getelementptr inbounds %struct.tb_port, ptr %retval.0.i175, i32 0, i32 1
  %105 = ptrtoint ptr %sw49 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %sw49, align 4
  %tb50 = getelementptr inbounds %struct.tb_switch, ptr %106, i32 0, i32 5
  %107 = ptrtoint ptr %tb50 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %tb50, align 8
  %nhi51 = getelementptr inbounds %struct.tb, ptr %108, i32 0, i32 2
  %109 = ptrtoint ptr %nhi51 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %nhi51, align 4
  %pdev52 = getelementptr inbounds %struct.tb_nhi, ptr %110, i32 0, i32 1
  %111 = ptrtoint ptr %pdev52 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %pdev52, align 4
  %dev53 = getelementptr inbounds %struct.pci_dev, ptr %112, i32 0, i32 44
  %route_hi.i226 = getelementptr inbounds %struct.tb_switch, ptr %106, i32 0, i32 1, i32 4
  %113 = ptrtoint ptr %route_hi.i226 to i32
  call void @__asan_loadN_noabort(i32 %113, i32 8)
  %bf.load.i227 = load i64, ptr %route_hi.i226, align 4
  %114 = lshr i64 %bf.load.i227, 1
  %shl.i228 = and i64 %114, 9223372032559808512
  %route_lo.i229 = getelementptr inbounds %struct.tb_switch, ptr %106, i32 0, i32 1, i32 3
  %115 = ptrtoint ptr %route_lo.i229 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %route_lo.i229, align 8
  %conv2.i230 = zext i32 %116 to i64
  %or.i231 = or i64 %shl.i228, %conv2.i230
  %port56 = getelementptr inbounds %struct.tb_port, ptr %retval.0.i175, i32 0, i32 9
  %117 = ptrtoint ptr %port56 to i32
  call void @__asan_load1_noabort(i32 %117)
  %118 = load i8, ptr %port56, align 4
  %conv57 = zext i8 %118 to i32
  %cond60 = select i1 %retval.0.i.i218, ptr @.str.132, ptr @.str.195
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_switch_enable_cl0s.__UNIQUE_ID_ddebug275, ptr noundef %dev53, ptr noundef nonnull @.str.194, i64 noundef %or.i231, i32 noundef %conv57, ptr noundef nonnull %cond60) #16
  br label %do.end63

do.end63:                                         ; preds = %if.then48, %do.end
  %119 = select i1 %retval.0.i.i178, i1 %retval.0.i.i218, i1 false
  br i1 %119, label %if.end69, label %do.end63.cleanup_crit_edge

do.end63.cleanup_crit_edge:                       ; preds = %do.end63
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end69:                                         ; preds = %do.end63
  %call.i = call fastcc i32 @__tb_port_cl0s_set(ptr noundef %arrayidx.i, i1 noundef zeroext true) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool71.not = icmp eq i32 %call.i, 0
  br i1 %tobool71.not, label %if.end73, label %if.end69.cleanup_crit_edge

if.end69.cleanup_crit_edge:                       ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end73:                                         ; preds = %if.end69
  %call.i232 = call fastcc i32 @__tb_port_cl0s_set(ptr noundef %retval.0.i175, i1 noundef zeroext true) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i232)
  %tobool75.not = icmp eq i32 %call.i232, 0
  br i1 %tobool75.not, label %if.end78, label %if.then76

if.then76:                                        ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #18
  %call.i233 = call fastcc i32 @__tb_port_cl0s_set(ptr noundef %arrayidx.i, i1 noundef zeroext false) #16
  br label %cleanup

if.end78:                                         ; preds = %if.end73
  %call79 = call i32 @tb_switch_mask_clx_objections(ptr noundef %sw)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call79)
  %tobool80.not = icmp eq i32 %call79, 0
  br i1 %tobool80.not, label %if.end84, label %if.then81

if.then81:                                        ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #18
  %call.i234 = call fastcc i32 @__tb_port_cl0s_set(ptr noundef %arrayidx.i, i1 noundef zeroext false) #16
  %call.i235 = call fastcc i32 @__tb_port_cl0s_set(ptr noundef %retval.0.i175, i1 noundef zeroext false) #16
  br label %cleanup

if.end84:                                         ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #18
  %clx = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 43
  %120 = ptrtoint ptr %clx to i32
  call void @__asan_store4_noabort(i32 %120)
  store i32 1, ptr %clx, align 8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_switch_enable_cl0s.__UNIQUE_ID_ddebug276, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_switch_enable_cl0s, %if.then99)) #16
          to label %cleanup [label %if.then99], !srcloc !446

if.then99:                                        ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #18
  %sw100 = getelementptr %struct.tb_port, ptr %25, i32 %bf.clear.i, i32 1
  %121 = ptrtoint ptr %sw100 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %sw100, align 4
  %tb101 = getelementptr inbounds %struct.tb_switch, ptr %122, i32 0, i32 5
  %123 = ptrtoint ptr %tb101 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %tb101, align 8
  %nhi102 = getelementptr inbounds %struct.tb, ptr %124, i32 0, i32 2
  %125 = ptrtoint ptr %nhi102 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %nhi102, align 4
  %pdev103 = getelementptr inbounds %struct.tb_nhi, ptr %126, i32 0, i32 1
  %127 = ptrtoint ptr %pdev103 to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %pdev103, align 4
  %dev104 = getelementptr inbounds %struct.pci_dev, ptr %128, i32 0, i32 44
  %route_hi.i236 = getelementptr inbounds %struct.tb_switch, ptr %122, i32 0, i32 1, i32 4
  %129 = ptrtoint ptr %route_hi.i236 to i32
  call void @__asan_loadN_noabort(i32 %129, i32 8)
  %bf.load.i237 = load i64, ptr %route_hi.i236, align 4
  %130 = lshr i64 %bf.load.i237, 1
  %shl.i238 = and i64 %130, 9223372032559808512
  %route_lo.i239 = getelementptr inbounds %struct.tb_switch, ptr %122, i32 0, i32 1, i32 3
  %131 = ptrtoint ptr %route_lo.i239 to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %route_lo.i239, align 8
  %conv2.i240 = zext i32 %132 to i64
  %or.i241 = or i64 %shl.i238, %conv2.i240
  %port107 = getelementptr %struct.tb_port, ptr %25, i32 %bf.clear.i, i32 9
  %133 = ptrtoint ptr %port107 to i32
  call void @__asan_load1_noabort(i32 %133)
  %134 = load i8, ptr %port107, align 4
  %conv108 = zext i8 %134 to i32
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_switch_enable_cl0s.__UNIQUE_ID_ddebug276, ptr noundef %dev104, ptr noundef nonnull @.str.196, i64 noundef %or.i241, i32 noundef %conv108) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then99, %if.end84, %if.then81, %if.then76, %if.end69.cleanup_crit_edge, %do.end63.cleanup_crit_edge, %tb_switch_pm_secondary_resolve.exit.cleanup_crit_edge, %tb_port_at.exit.i.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %if.then.i.i.cleanup_crit_edge, %lor.rhs.i.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i232, %if.then76 ], [ %call79, %if.then81 ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %if.end4.cleanup_crit_edge ], [ %call.i27.i, %tb_switch_pm_secondary_resolve.exit.cleanup_crit_edge ], [ -95, %do.end63.cleanup_crit_edge ], [ %call.i, %if.end69.cleanup_crit_edge ], [ 0, %if.then99 ], [ 0, %lor.rhs.i.cleanup_crit_edge ], [ 0, %if.then.i.i.cleanup_crit_edge ], [ 0, %if.end84 ], [ %call.i.i, %tb_port_at.exit.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @tb_switch_disable_cl0s(ptr nocapture noundef %sw) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %parent.i = getelementptr inbounds %struct.device, ptr %sw, i32 0, i32 1
  %0 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent.i, align 8
  %type.i.i.i = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %type.i.i.i, align 4
  %cmp.i.i.i = icmp eq ptr %3, @tb_switch_type
  %dev..i.i = select i1 %cmp.i.i.i, ptr %1, ptr null
  %thunderbolt_version.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %4 = ptrtoint ptr %thunderbolt_version.i.i to i32
  call void @__asan_loadN_noabort(i32 %4, i32 8)
  %bf.load.i.i = load i64, ptr %thunderbolt_version.i.i, align 4
  %bf.cast1.i.i = and i64 %bf.load.i.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i.i)
  %cmp.i.i = icmp eq i64 %bf.cast1.i.i, 32
  br i1 %cmp.i.i, label %entry.if.end_crit_edge, label %lor.rhs.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

lor.rhs.i:                                        ; preds = %entry
  %config.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1
  %5 = ptrtoint ptr %config.i.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %config.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 -32634, i16 %6)
  %cmp.i3.i = icmp eq i16 %6, -32634
  br i1 %cmp.i3.i, label %if.then.i.i, label %lor.rhs.i.cleanup_crit_edge

lor.rhs.i.cleanup_crit_edge:                      ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i.i:                                      ; preds = %lor.rhs.i
  %device_id.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 1
  %7 = ptrtoint ptr %device_id.i.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %device_id.i.i, align 2
  %9 = zext i16 %8 to i64
  call void @__sanitizer_cov_trace_switch(i64 %9, ptr @__sancov_gen_cov_switch_values.208)
  switch i16 %8, label %if.then.i.i.cleanup_crit_edge [
    i16 5607, label %if.then.i.i.if.end_crit_edge
    i16 5610, label %if.then.i.i.if.end_crit_edge72
    i16 5615, label %if.then.i.i.if.end_crit_edge73
  ]

if.then.i.i.if.end_crit_edge73:                   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.i.i.if.end_crit_edge72:                   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.i.i.if.end_crit_edge:                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.i.i.cleanup_crit_edge:                    ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %if.then.i.i.if.end_crit_edge, %if.then.i.i.if.end_crit_edge72, %if.then.i.i.if.end_crit_edge73, %entry.if.end_crit_edge
  %10 = lshr i64 %bf.load.i.i, 1
  %shl.i = and i64 %10, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %11 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %12 to i64
  %or.i = or i64 %shl.i, %conv2.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i)
  %tobool.not = icmp eq i64 %or.i, 0
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %route_hi.i47 = getelementptr inbounds %struct.tb_switch, ptr %dev..i.i, i32 0, i32 1, i32 4
  %13 = ptrtoint ptr %route_hi.i47 to i32
  call void @__asan_loadN_noabort(i32 %13, i32 8)
  %bf.load.i48 = load i64, ptr %route_hi.i47, align 4
  %14 = lshr i64 %bf.load.i48, 1
  %shl.i49 = and i64 %14, 9223372032559808512
  %route_lo.i50 = getelementptr inbounds %struct.tb_switch, ptr %dev..i.i, i32 0, i32 1, i32 3
  %15 = ptrtoint ptr %route_lo.i50 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %route_lo.i50, align 8
  %conv2.i51 = zext i32 %16 to i64
  %or.i52 = or i64 %shl.i49, %conv2.i51
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i52)
  %tobool6.not = icmp eq i64 %or.i52, 0
  br i1 %tobool6.not, label %if.end8, label %if.end4.cleanup_crit_edge

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8:                                          ; preds = %if.end4
  %ports.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 2
  %17 = ptrtoint ptr %ports.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %ports.i, align 4
  %upstream_port_number.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 2
  %19 = ptrtoint ptr %upstream_port_number.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %bf.load.i53 = load i32, ptr %upstream_port_number.i, align 4
  %bf.lshr.i = lshr i32 %bf.load.i53, 18
  %bf.clear.i = and i32 %bf.lshr.i, 63
  %arrayidx.i = getelementptr %struct.tb_port, ptr %18, i32 %bf.clear.i
  %depth.i = getelementptr inbounds %struct.tb_switch, ptr %dev..i.i, i32 0, i32 1, i32 2
  %20 = ptrtoint ptr %depth.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %bf.load.i60 = load i32, ptr %depth.i, align 4
  %21 = lshr i32 %bf.load.i60, 6
  %mul.i = and i32 %21, 56
  %sh_prom.i = zext i32 %mul.i to i64
  %shr.i = lshr i64 %or.i, %sh_prom.i
  %conv.i = trunc i64 %shr.i to i32
  %conv1.i = and i32 %conv.i, 255
  %bf.lshr4.i = lshr i32 %bf.load.i60, 12
  %bf.clear5.i = and i32 %bf.lshr4.i, 63
  call void @__sanitizer_cov_trace_cmp4(i32 %conv1.i, i32 %bf.clear5.i)
  %cmp.i = icmp ugt i32 %conv1.i, %bf.clear5.i
  br i1 %cmp.i, label %do.end.i, label %if.end27.i, !prof !448

do.end.i:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.103, i32 noundef 538, i32 noundef 9, ptr noundef null) #16
  br label %tb_port_at.exit

if.end27.i:                                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  %ports.i61 = getelementptr inbounds %struct.tb_switch, ptr %dev..i.i, i32 0, i32 2
  %22 = ptrtoint ptr %ports.i61 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ports.i61, align 4
  %arrayidx.i62 = getelementptr %struct.tb_port, ptr %23, i32 %conv1.i
  br label %tb_port_at.exit

tb_port_at.exit:                                  ; preds = %if.end27.i, %do.end.i
  %retval.0.i63 = phi ptr [ null, %do.end.i ], [ %arrayidx.i62, %if.end27.i ]
  %call.i = tail call fastcc i32 @__tb_port_cl0s_set(ptr noundef %arrayidx.i, i1 noundef zeroext false) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool13.not = icmp eq i32 %call.i, 0
  br i1 %tobool13.not, label %if.end15, label %tb_port_at.exit.cleanup_crit_edge

tb_port_at.exit.cleanup_crit_edge:                ; preds = %tb_port_at.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end15:                                         ; preds = %tb_port_at.exit
  %call.i64 = tail call fastcc i32 @__tb_port_cl0s_set(ptr noundef %retval.0.i63, i1 noundef zeroext false) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i64)
  %tobool17.not = icmp eq i32 %call.i64, 0
  br i1 %tobool17.not, label %if.end19, label %if.end15.cleanup_crit_edge

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end19:                                         ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #18
  %clx = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 43
  %24 = ptrtoint ptr %clx to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 0, ptr %clx, align 8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_switch_disable_cl0s.__UNIQUE_ID_ddebug277, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_switch_disable_cl0s, %if.then25)) #16
          to label %cleanup [label %if.then25], !srcloc !446

if.then25:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #18
  %sw26 = getelementptr %struct.tb_port, ptr %18, i32 %bf.clear.i, i32 1
  %25 = ptrtoint ptr %sw26 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %sw26, align 4
  %tb = getelementptr inbounds %struct.tb_switch, ptr %26, i32 0, i32 5
  %27 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %tb, align 8
  %nhi = getelementptr inbounds %struct.tb, ptr %28, i32 0, i32 2
  %29 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %32, i32 0, i32 44
  %route_hi.i65 = getelementptr inbounds %struct.tb_switch, ptr %26, i32 0, i32 1, i32 4
  %33 = ptrtoint ptr %route_hi.i65 to i32
  call void @__asan_loadN_noabort(i32 %33, i32 8)
  %bf.load.i66 = load i64, ptr %route_hi.i65, align 4
  %34 = lshr i64 %bf.load.i66, 1
  %shl.i67 = and i64 %34, 9223372032559808512
  %route_lo.i68 = getelementptr inbounds %struct.tb_switch, ptr %26, i32 0, i32 1, i32 3
  %35 = ptrtoint ptr %route_lo.i68 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %route_lo.i68, align 8
  %conv2.i69 = zext i32 %36 to i64
  %or.i70 = or i64 %shl.i67, %conv2.i69
  %port = getelementptr %struct.tb_port, ptr %18, i32 %bf.clear.i, i32 9
  %37 = ptrtoint ptr %port to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %port, align 4
  %conv = zext i8 %38 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_switch_disable_cl0s.__UNIQUE_ID_ddebug277, ptr noundef %dev, ptr noundef nonnull @.str.198, i64 noundef %or.i70, i32 noundef %conv) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then25, %if.end19, %if.end15.cleanup_crit_edge, %tb_port_at.exit.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %if.then.i.i.cleanup_crit_edge, %lor.rhs.i.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end.cleanup_crit_edge ], [ 0, %if.end4.cleanup_crit_edge ], [ %call.i, %tb_port_at.exit.cleanup_crit_edge ], [ %call.i64, %if.end15.cleanup_crit_edge ], [ 0, %if.then25 ], [ 0, %lor.rhs.i.cleanup_crit_edge ], [ 0, %if.then.i.i.cleanup_crit_edge ], [ 0, %if.end19 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_switch_mask_clx_objections(ptr nocapture noundef readonly %sw) local_unnamed_addr #0 align 64 {
entry:
  %val = alloca [2 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %upstream_port_number = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 2
  %0 = ptrtoint ptr %upstream_port_number to i32
  call void @__asan_load4_noabort(i32 %0)
  %bf.load = load i32, ptr %upstream_port_number, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %val) #16
  %1 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %val, align 4, !annotation !447
  %2 = getelementptr inbounds [2 x i32], ptr %val, i32 0, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %2, align 4, !annotation !447
  %config.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1
  %4 = ptrtoint ptr %config.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %config.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 -32634, i16 %5)
  %cmp.i = icmp eq i16 %5, -32634
  br i1 %cmp.i, label %if.then.i, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i:                                        ; preds = %entry
  %device_id.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 1
  %6 = ptrtoint ptr %device_id.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %device_id.i, align 2
  %8 = zext i16 %7 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.209)
  switch i16 %7, label %if.then.i.cleanup_crit_edge [
    i16 5607, label %if.then.i.if.end_crit_edge
    i16 5610, label %if.then.i.if.end_crit_edge53
    i16 5615, label %if.then.i.if.end_crit_edge54
  ]

if.then.i.if.end_crit_edge54:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.i.if.end_crit_edge53:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.i.if.end_crit_edge:                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %if.then.i.if.end_crit_edge, %if.then.i.if.end_crit_edge53, %if.then.i.if.end_crit_edge54
  %route_hi.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %9 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %9, i32 8)
  %bf.load.i = load i64, ptr %route_hi.i, align 4
  %10 = lshr i64 %bf.load.i, 1
  %shl.i = and i64 %10, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %11 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %12 to i64
  %or.i = or i64 %shl.i, %conv2.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i)
  %tobool.not = icmp eq i64 %or.i, 0
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %13 = and i32 %bf.load, 16515072
  call void @__sanitizer_cov_trace_const_cmp4(i32 262144, i32 %13)
  %cmp = icmp eq i32 %13, 262144
  %. = select i1 %cmp, i32 1, i32 3
  %.32 = select i1 %cmp, i32 24, i32 6
  %.33 = select i1 %cmp, i32 -7, i32 -25
  %cap_lp = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 19
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 20
  %14 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.not.i = icmp eq i8 %15, 0
  br i1 %tobool.not.i, label %tb_sw_read.exit, label %if.end3.cleanup_crit_edge

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_sw_read.exit:                                  ; preds = %if.end3
  %16 = ptrtoint ptr %cap_lp to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %cap_lp, align 4
  %add = add i32 %17, %.
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %18 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %19, i32 0, i32 3
  %20 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %ctl.i, align 8
  %call1.i = call i32 @tb_cfg_read(ptr noundef %21, ptr noundef nonnull %val, i64 noundef %or.i, i32 noundef 0, i32 noundef 2, i32 noundef %add, i32 noundef 2) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool7.not = icmp eq i32 %call1.i, 0
  br i1 %tobool7.not, label %for.body.preheader, label %tb_sw_read.exit.cleanup_crit_edge

tb_sw_read.exit.cleanup_crit_edge:                ; preds = %tb_sw_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body.preheader:                               ; preds = %tb_sw_read.exit
  %22 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %val, align 4
  %or = or i32 %23, %.32
  %and = and i32 %or, %.33
  store i32 %and, ptr %val, align 4
  %24 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %2, align 4
  %or.1 = or i32 %25, %.32
  %and.1 = and i32 %or.1, %.33
  store i32 %and.1, ptr %2, align 4
  %26 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %27)
  %tobool.not.i37 = icmp eq i8 %27, 0
  br i1 %tobool.not.i37, label %if.end.i47, label %for.body.preheader.cleanup_crit_edge

for.body.preheader.cleanup_crit_edge:             ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i47:                                       ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #18
  %28 = ptrtoint ptr %cap_lp to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %cap_lp, align 4
  %add13 = add i32 %29, %.
  %30 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %tb.i, align 8
  %ctl.i39 = getelementptr inbounds %struct.tb, ptr %31, i32 0, i32 3
  %32 = ptrtoint ptr %ctl.i39 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %ctl.i39, align 8
  %34 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %34, i32 8)
  %bf.load.i.i41 = load i64, ptr %route_hi.i, align 4
  %35 = lshr i64 %bf.load.i.i41, 1
  %shl.i.i42 = and i64 %35, 9223372032559808512
  %36 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %route_lo.i, align 8
  %conv2.i.i44 = zext i32 %37 to i64
  %or.i.i45 = or i64 %shl.i.i42, %conv2.i.i44
  %call1.i46 = call i32 @tb_cfg_write(ptr noundef %33, ptr noundef nonnull %val, i64 noundef %or.i.i45, i32 noundef 0, i32 noundef 2, i32 noundef %add13, i32 noundef 2) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end.i47, %for.body.preheader.cleanup_crit_edge, %tb_sw_read.exit.cleanup_crit_edge, %if.end3.cleanup_crit_edge, %if.end.cleanup_crit_edge, %if.then.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end.cleanup_crit_edge ], [ %call1.i, %tb_sw_read.exit.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ], [ 0, %if.then.i.cleanup_crit_edge ], [ %call1.i46, %if.end.i47 ], [ -19, %for.body.preheader.cleanup_crit_edge ], [ -19, %if.end3.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %val) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tb_switch_pcie_l1_enable(ptr nocapture noundef readonly %sw) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %parent.i = getelementptr inbounds %struct.device, ptr %sw, i32 0, i32 1
  %0 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent.i, align 8
  %type.i.i.i = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %type.i.i.i, align 4
  %cmp.i.i.i = icmp eq ptr %3, @tb_switch_type
  %dev..i.i = select i1 %cmp.i.i.i, ptr %1, ptr null
  %route_hi.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %4 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %4, i32 8)
  %bf.load.i = load i64, ptr %route_hi.i, align 4
  %5 = lshr i64 %bf.load.i, 1
  %shl.i = and i64 %5, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %6 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %7 to i64
  %or.i = or i64 %shl.i, %conv2.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i)
  %tobool.not = icmp eq i64 %or.i, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %config.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1
  %8 = ptrtoint ptr %config.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %config.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 -32634, i16 %9)
  %cmp.i = icmp eq i16 %9, -32634
  br i1 %cmp.i, label %if.then.i, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i:                                        ; preds = %if.end
  %device_id.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 1
  %10 = ptrtoint ptr %device_id.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %device_id.i, align 2
  %12 = zext i16 %11 to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.210)
  switch i16 %11, label %if.then.i.cleanup_crit_edge [
    i16 5607, label %if.then.i.if.end4_crit_edge
    i16 5610, label %if.then.i.if.end4_crit_edge27
    i16 5615, label %if.then.i.if.end4_crit_edge28
  ]

if.then.i.if.end4_crit_edge28:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

if.then.i.if.end4_crit_edge27:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

if.then.i.if.end4_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %if.then.i.if.end4_crit_edge, %if.then.i.if.end4_crit_edge27, %if.then.i.if.end4_crit_edge28
  %route_hi.i20 = getelementptr inbounds %struct.tb_switch, ptr %dev..i.i, i32 0, i32 1, i32 4
  %13 = ptrtoint ptr %route_hi.i20 to i32
  call void @__asan_loadN_noabort(i32 %13, i32 8)
  %bf.load.i21 = load i64, ptr %route_hi.i20, align 4
  %14 = lshr i64 %bf.load.i21, 1
  %shl.i22 = and i64 %14, 9223372032559808512
  %route_lo.i23 = getelementptr inbounds %struct.tb_switch, ptr %dev..i.i, i32 0, i32 1, i32 3
  %15 = ptrtoint ptr %route_lo.i23 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %route_lo.i23, align 8
  %conv2.i24 = zext i32 %16 to i64
  %or.i25 = or i64 %shl.i22, %conv2.i24
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i25)
  %tobool6.not = icmp eq i64 %or.i25, 0
  br i1 %tobool6.not, label %if.end8, label %if.end4.cleanup_crit_edge

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8:                                          ; preds = %if.end4
  %call9 = tail call fastcc i32 @tb_switch_pcie_bridge_write(ptr noundef %sw, i32 noundef 5, i32 noundef 209192625)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.end12, label %if.end8.cleanup_crit_edge

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end12:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  %call13 = tail call fastcc i32 @tb_switch_pcie_bridge_write(ptr noundef %sw, i32 noundef 0, i32 noundef 207095473)
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end8.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %if.then.i.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call13, %if.end12 ], [ 0, %entry.cleanup_crit_edge ], [ 0, %if.end4.cleanup_crit_edge ], [ %call9, %if.end8.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %if.then.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @tb_switch_pcie_bridge_write(ptr nocapture noundef readonly %sw, i32 noundef %bridge, i32 noundef %value) unnamed_addr #0 align 64 {
entry:
  %value.addr = alloca i32, align 4
  %command = alloca i32, align 4
  %val = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %value.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %value, ptr %value.addr, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %command) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val) #16
  %1 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %val, align 4, !annotation !447
  %generation = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 15
  %2 = ptrtoint ptr %generation to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %generation, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %3)
  %cmp.not = icmp eq i32 %3, 3
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %cap_plug_events = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 16
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 20
  %4 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not.i = icmp eq i8 %5, 0
  br i1 %tobool.not.i, label %tb_sw_write.exit, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_sw_write.exit:                                 ; preds = %if.end
  %6 = ptrtoint ptr %cap_plug_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cap_plug_events, align 8
  %add = add i32 %7, 27
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %8 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ctl.i, align 8
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %12 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %12, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %13 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %13, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %14 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %15 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %call1.i = call i32 @tb_cfg_write(ptr noundef %11, ptr noundef nonnull %value.addr, i64 noundef %or.i.i, i32 noundef 0, i32 noundef 2, i32 noundef %add, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not = icmp eq i32 %call1.i, 0
  br i1 %tobool.not, label %if.end2, label %tb_sw_write.exit.cleanup_crit_edge

tb_sw_write.exit.cleanup_crit_edge:               ; preds = %tb_sw_write.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end2:                                          ; preds = %tb_sw_write.exit
  %add3 = add i32 %bridge, 10
  %shl = shl nuw i32 1, %add3
  %or6 = or i32 %shl, 1084227907
  %16 = ptrtoint ptr %command to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %or6, ptr %command, align 4
  %17 = ptrtoint ptr %cap_plug_events to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %cap_plug_events, align 8
  %add8 = add i32 %18, 28
  %19 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool.not.i2 = icmp eq i8 %20, 0
  br i1 %tobool.not.i2, label %tb_sw_write.exit14, label %if.end2.cleanup_crit_edge

if.end2.cleanup_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_sw_write.exit14:                               ; preds = %if.end2
  %21 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %tb.i, align 8
  %ctl.i4 = getelementptr inbounds %struct.tb, ptr %22, i32 0, i32 3
  %23 = ptrtoint ptr %ctl.i4 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %ctl.i4, align 8
  %25 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %25, i32 8)
  %bf.load.i.i6 = load i64, ptr %route_hi.i.i, align 4
  %26 = lshr i64 %bf.load.i.i6, 1
  %shl.i.i7 = and i64 %26, 9223372032559808512
  %27 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i9 = zext i32 %28 to i64
  %or.i.i10 = or i64 %shl.i.i7, %conv2.i.i9
  %call1.i11 = call i32 @tb_cfg_write(ptr noundef %24, ptr noundef nonnull %command, i64 noundef %or.i.i10, i32 noundef 0, i32 noundef 2, i32 noundef %add8, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i11)
  %tobool10.not = icmp eq i32 %call1.i11, 0
  br i1 %tobool10.not, label %if.end12, label %tb_sw_write.exit14.cleanup_crit_edge

tb_sw_write.exit14.cleanup_crit_edge:             ; preds = %tb_sw_write.exit14
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end12:                                         ; preds = %tb_sw_write.exit14
  %call13 = call i32 @tb_switch_wait_for_bit(ptr noundef %sw, i32 noundef %add8, i32 noundef 1073741824, i32 noundef 0, i32 noundef 100)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.end16, label %if.end12.cleanup_crit_edge

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end16:                                         ; preds = %if.end12
  %29 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %30)
  %tobool.not.i16 = icmp eq i8 %30, 0
  br i1 %tobool.not.i16, label %tb_sw_read.exit, label %if.end16.cleanup_crit_edge

if.end16.cleanup_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_sw_read.exit:                                  ; preds = %if.end16
  %31 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %tb.i, align 8
  %ctl.i18 = getelementptr inbounds %struct.tb, ptr %32, i32 0, i32 3
  %33 = ptrtoint ptr %ctl.i18 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %ctl.i18, align 8
  %35 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %35, i32 8)
  %bf.load.i.i20 = load i64, ptr %route_hi.i.i, align 4
  %36 = lshr i64 %bf.load.i.i20, 1
  %shl.i.i21 = and i64 %36, 9223372032559808512
  %37 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i23 = zext i32 %38 to i64
  %or.i.i24 = or i64 %shl.i.i21, %conv2.i.i23
  %call1.i25 = call i32 @tb_cfg_read(ptr noundef %34, ptr noundef nonnull %val, i64 noundef %or.i.i24, i32 noundef 0, i32 noundef 2, i32 noundef %add8, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i25)
  %tobool18.not = icmp eq i32 %call1.i25, 0
  br i1 %tobool18.not, label %if.end20, label %tb_sw_read.exit.cleanup_crit_edge

tb_sw_read.exit.cleanup_crit_edge:                ; preds = %tb_sw_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end20:                                         ; preds = %tb_sw_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  %39 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %val, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool22.not.inv = icmp slt i32 %40, 0
  %. = select i1 %tobool22.not.inv, i32 -110, i32 0
  br label %cleanup

cleanup:                                          ; preds = %if.end20, %tb_sw_read.exit.cleanup_crit_edge, %if.end16.cleanup_crit_edge, %if.end12.cleanup_crit_edge, %tb_sw_write.exit14.cleanup_crit_edge, %if.end2.cleanup_crit_edge, %tb_sw_write.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -95, %entry.cleanup_crit_edge ], [ %call1.i, %tb_sw_write.exit.cleanup_crit_edge ], [ %call1.i11, %tb_sw_write.exit14.cleanup_crit_edge ], [ %call13, %if.end12.cleanup_crit_edge ], [ %call1.i25, %tb_sw_read.exit.cleanup_crit_edge ], [ %., %if.end20 ], [ -19, %if.end.cleanup_crit_edge ], [ -19, %if.end2.cleanup_crit_edge ], [ -19, %if.end16.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %command) #16
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_cfg_write(ptr noundef, ptr noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ida_alloc_range(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @usleep_range_state(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @add_uevent_var(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_port_free(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ida_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @tb_switch_runtime_suspend(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %1, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %dev, ptr null
  %tb = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 5
  %2 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tb, align 8
  %cm_ops1 = getelementptr inbounds %struct.tb, ptr %3, i32 0, i32 6
  %4 = ptrtoint ptr %cm_ops1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cm_ops1, align 4
  %runtime_suspend_switch = getelementptr inbounds %struct.tb_cm_ops, ptr %5, i32 0, i32 11
  %6 = ptrtoint ptr %runtime_suspend_switch to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %runtime_suspend_switch, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.then

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call3 = tail call i32 %7(ptr noundef %dev..i) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.then ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @tb_switch_runtime_resume(ptr noundef %dev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %1, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %dev, ptr null
  %tb = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 5
  %2 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tb, align 8
  %cm_ops1 = getelementptr inbounds %struct.tb, ptr %3, i32 0, i32 6
  %4 = ptrtoint ptr %cm_ops1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cm_ops1, align 4
  %runtime_resume_switch = getelementptr inbounds %struct.tb_cm_ops, ptr %5, i32 0, i32 12
  %6 = ptrtoint ptr %runtime_resume_switch to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %runtime_resume_switch, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.then

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call3 = tail call i32 %7(ptr noundef %dev..i) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.then ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #6

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i16 @switch_attr_is_visible(ptr noundef %kobj, ptr noundef readonly %attr, i32 noundef %n) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type.i.i = getelementptr inbounds %struct.device, ptr %kobj, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %1, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %kobj, ptr null
  %cmp = icmp eq ptr %attr, @dev_attr_authorized
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %tb = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 5
  %2 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tb, align 8
  %security_level = getelementptr inbounds %struct.tb, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %security_level to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %security_level, align 4
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.211)
  switch i32 %5, label %if.then.if.end95_crit_edge [
    i32 5, label %if.then.cleanup_crit_edge
    i32 3, label %if.then.cleanup_crit_edge149
  ]

if.then.cleanup_crit_edge149:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.if.end95_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end95

if.else:                                          ; preds = %entry
  %cmp7 = icmp eq ptr %attr, @dev_attr_device
  br i1 %cmp7, label %if.then8, label %if.else11

if.then8:                                         ; preds = %if.else
  %device = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 9
  %7 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %device, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %tobool.not = icmp eq i16 %8, 0
  br i1 %tobool.not, label %if.then8.cleanup_crit_edge, label %if.then8.if.end95_crit_edge

if.then8.if.end95_crit_edge:                      ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end95

if.then8.cleanup_crit_edge:                       ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.else11:                                        ; preds = %if.else
  %cmp12 = icmp eq ptr %attr, @dev_attr_device_name
  br i1 %cmp12, label %if.then13, label %if.else17

if.then13:                                        ; preds = %if.else11
  %device_name = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 11
  %9 = ptrtoint ptr %device_name to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %device_name, align 4
  %tobool14.not = icmp eq ptr %10, null
  br i1 %tobool14.not, label %if.then13.cleanup_crit_edge, label %if.then13.if.end95_crit_edge

if.then13.if.end95_crit_edge:                     ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end95

if.then13.cleanup_crit_edge:                      ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.else17:                                        ; preds = %if.else11
  %cmp18 = icmp eq ptr %attr, @dev_attr_vendor
  br i1 %cmp18, label %if.then19, label %if.else23

if.then19:                                        ; preds = %if.else17
  %vendor = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 8
  %11 = ptrtoint ptr %vendor to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %vendor, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %12)
  %tobool20.not = icmp eq i16 %12, 0
  br i1 %tobool20.not, label %if.then19.cleanup_crit_edge, label %if.then19.if.end95_crit_edge

if.then19.if.end95_crit_edge:                     ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end95

if.then19.cleanup_crit_edge:                      ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.else23:                                        ; preds = %if.else17
  %cmp24 = icmp eq ptr %attr, @dev_attr_vendor_name
  br i1 %cmp24, label %if.then25, label %if.else29

if.then25:                                        ; preds = %if.else23
  %vendor_name = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 10
  %13 = ptrtoint ptr %vendor_name to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %vendor_name, align 8
  %tobool26.not = icmp eq ptr %14, null
  br i1 %tobool26.not, label %if.then25.cleanup_crit_edge, label %if.then25.if.end95_crit_edge

if.then25.if.end95_crit_edge:                     ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end95

if.then25.cleanup_crit_edge:                      ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.else29:                                        ; preds = %if.else23
  %cmp30 = icmp eq ptr %attr, @dev_attr_key
  br i1 %cmp30, label %if.then31, label %if.else42

if.then31:                                        ; preds = %if.else29
  %route_hi.i = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 1, i32 4
  %15 = ptrtoint ptr %route_hi.i to i32
  call void @__asan_loadN_noabort(i32 %15, i32 8)
  %bf.load.i = load i64, ptr %route_hi.i, align 4
  %16 = lshr i64 %bf.load.i, 1
  %shl.i = and i64 %16, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 1, i32 3
  %17 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %18 to i64
  %or.i = or i64 %shl.i, %conv2.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i)
  %tobool33.not = icmp eq i64 %or.i, 0
  br i1 %tobool33.not, label %if.then31.cleanup_crit_edge, label %land.lhs.true

if.then31.cleanup_crit_edge:                      ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true:                                    ; preds = %if.then31
  %tb34 = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 5
  %19 = ptrtoint ptr %tb34 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %tb34, align 8
  %security_level35 = getelementptr inbounds %struct.tb, ptr %20, i32 0, i32 8
  %21 = ptrtoint ptr %security_level35 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %security_level35, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %22)
  %cmp36 = icmp eq i32 %22, 2
  br i1 %cmp36, label %land.lhs.true37, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true37:                                  ; preds = %land.lhs.true
  %security_level38 = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 28
  %23 = ptrtoint ptr %security_level38 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %security_level38, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %24)
  %cmp39 = icmp eq i32 %24, 2
  br i1 %cmp39, label %land.lhs.true37.cleanup.sink.split_crit_edge, label %land.lhs.true37.cleanup_crit_edge

land.lhs.true37.cleanup_crit_edge:                ; preds = %land.lhs.true37
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true37.cleanup.sink.split_crit_edge:     ; preds = %land.lhs.true37
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

if.else42:                                        ; preds = %if.else29
  %cmp43 = icmp eq ptr %attr, @dev_attr_rx_speed
  %cmp45 = icmp eq ptr %attr, @dev_attr_rx_lanes
  %or.cond = or i1 %cmp43, %cmp45
  %cmp47 = icmp eq ptr %attr, @dev_attr_tx_speed
  %or.cond134 = or i1 %cmp47, %or.cond
  %cmp49 = icmp eq ptr %attr, @dev_attr_tx_lanes
  %or.cond135 = or i1 %cmp49, %or.cond134
  br i1 %or.cond135, label %if.then50, label %if.else56

if.then50:                                        ; preds = %if.else42
  %route_hi.i136 = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 1, i32 4
  %25 = ptrtoint ptr %route_hi.i136 to i32
  call void @__asan_loadN_noabort(i32 %25, i32 8)
  %bf.load.i137 = load i64, ptr %route_hi.i136, align 4
  %26 = lshr i64 %bf.load.i137, 1
  %shl.i138 = and i64 %26, 9223372032559808512
  %route_lo.i139 = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 1, i32 3
  %27 = ptrtoint ptr %route_lo.i139 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %route_lo.i139, align 8
  %conv2.i140 = zext i32 %28 to i64
  %or.i141 = or i64 %shl.i138, %conv2.i140
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i141)
  %tobool52.not = icmp eq i64 %or.i141, 0
  br i1 %tobool52.not, label %if.then50.cleanup_crit_edge, label %if.then53

if.then50.cleanup_crit_edge:                      ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then53:                                        ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #18
  %mode54 = getelementptr inbounds %struct.attribute, ptr %attr, i32 0, i32 1
  br label %cleanup.sink.split

if.else56:                                        ; preds = %if.else42
  %cmp57 = icmp eq ptr %attr, @dev_attr_nvm_authenticate
  br i1 %cmp57, label %if.then58, label %if.else63

if.then58:                                        ; preds = %if.else56
  %call59 = tail call fastcc zeroext i1 @nvm_upgradeable(ptr noundef %dev..i)
  br i1 %call59, label %if.then58.cleanup.sink.split_crit_edge, label %if.then58.cleanup_crit_edge

if.then58.cleanup_crit_edge:                      ; preds = %if.then58
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then58.cleanup.sink.split_crit_edge:           ; preds = %if.then58
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

if.else63:                                        ; preds = %if.else56
  %cmp64 = icmp eq ptr %attr, @dev_attr_nvm_version
  br i1 %cmp64, label %if.then65, label %if.else70

if.then65:                                        ; preds = %if.else63
  %thunderbolt_version.i.i = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 1, i32 4
  %29 = ptrtoint ptr %thunderbolt_version.i.i to i32
  call void @__asan_loadN_noabort(i32 %29, i32 8)
  %bf.load.i.i = load i64, ptr %thunderbolt_version.i.i, align 4
  %bf.cast1.i.i = and i64 %bf.load.i.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i.i)
  %cmp.i.i142 = icmp eq i64 %bf.cast1.i.i, 32
  br i1 %cmp.i.i142, label %if.then.i, label %nvm_readable.exit

if.then.i:                                        ; preds = %if.then65
  %call1.i = tail call i32 @usb4_switch_nvm_sector_size(ptr noundef %dev..i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %cmp.i = icmp sgt i32 %call1.i, 0
  br i1 %cmp.i, label %if.then.i.cleanup.sink.split_crit_edge, label %if.then.i.cleanup_crit_edge

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i.cleanup.sink.split_crit_edge:           ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

nvm_readable.exit:                                ; preds = %if.then65
  %dma_port.i = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 3
  %30 = ptrtoint ptr %dma_port.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %dma_port.i, align 8
  %tobool.i.not = icmp eq ptr %31, null
  br i1 %tobool.i.not, label %nvm_readable.exit.cleanup_crit_edge, label %nvm_readable.exit.cleanup.sink.split_crit_edge

nvm_readable.exit.cleanup.sink.split_crit_edge:   ; preds = %nvm_readable.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

nvm_readable.exit.cleanup_crit_edge:              ; preds = %nvm_readable.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.else70:                                        ; preds = %if.else63
  %cmp71 = icmp eq ptr %attr, @dev_attr_boot
  br i1 %cmp71, label %if.then72, label %if.else78

if.then72:                                        ; preds = %if.else70
  %route_hi.i143 = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 1, i32 4
  %32 = ptrtoint ptr %route_hi.i143 to i32
  call void @__asan_loadN_noabort(i32 %32, i32 8)
  %bf.load.i144 = load i64, ptr %route_hi.i143, align 4
  %33 = lshr i64 %bf.load.i144, 1
  %shl.i145 = and i64 %33, 9223372032559808512
  %route_lo.i146 = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 1, i32 3
  %34 = ptrtoint ptr %route_lo.i146 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %route_lo.i146, align 8
  %conv2.i147 = zext i32 %35 to i64
  %or.i148 = or i64 %shl.i145, %conv2.i147
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i148)
  %tobool74.not = icmp eq i64 %or.i148, 0
  br i1 %tobool74.not, label %if.then72.cleanup_crit_edge, label %if.then72.cleanup.sink.split_crit_edge

if.then72.cleanup.sink.split_crit_edge:           ; preds = %if.then72
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

if.then72.cleanup_crit_edge:                      ; preds = %if.then72
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.else78:                                        ; preds = %if.else70
  %cmp79 = icmp eq ptr %attr, @dev_attr_nvm_authenticate_on_disconnect
  br i1 %cmp79, label %if.then80, label %if.else78.if.end95_crit_edge

if.else78.if.end95_crit_edge:                     ; preds = %if.else78
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end95

if.then80:                                        ; preds = %if.else78
  %quirks = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 36
  %36 = ptrtoint ptr %quirks to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %quirks, align 4
  %and = and i32 %37, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool81.not = icmp eq i32 %and, 0
  br i1 %tobool81.not, label %if.then80.cleanup_crit_edge, label %if.then80.cleanup.sink.split_crit_edge

if.then80.cleanup.sink.split_crit_edge:           ; preds = %if.then80
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

if.then80.cleanup_crit_edge:                      ; preds = %if.then80
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end95:                                         ; preds = %if.else78.if.end95_crit_edge, %if.then25.if.end95_crit_edge, %if.then19.if.end95_crit_edge, %if.then13.if.end95_crit_edge, %if.then8.if.end95_crit_edge, %if.then.if.end95_crit_edge
  %safe_mode = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 24
  %38 = ptrtoint ptr %safe_mode to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %safe_mode, align 1, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %39)
  %tobool96.not = icmp eq i8 %39, 0
  br i1 %tobool96.not, label %cond.false, label %if.end95.cleanup_crit_edge

if.end95.cleanup_crit_edge:                       ; preds = %if.end95
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cond.false:                                       ; preds = %if.end95
  call void @__sanitizer_cov_trace_pc() #18
  %mode97 = getelementptr inbounds %struct.attribute, ptr %attr, i32 0, i32 1
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %cond.false, %if.then80.cleanup.sink.split_crit_edge, %if.then72.cleanup.sink.split_crit_edge, %nvm_readable.exit.cleanup.sink.split_crit_edge, %if.then.i.cleanup.sink.split_crit_edge, %if.then58.cleanup.sink.split_crit_edge, %if.then53, %land.lhs.true37.cleanup.sink.split_crit_edge
  %mode97.sink = phi ptr [ %mode97, %cond.false ], [ %mode54, %if.then53 ], [ getelementptr inbounds (%struct.device_attribute, ptr @dev_attr_key, i32 0, i32 0, i32 1), %land.lhs.true37.cleanup.sink.split_crit_edge ], [ getelementptr inbounds (%struct.device_attribute, ptr @dev_attr_nvm_authenticate, i32 0, i32 0, i32 1), %if.then58.cleanup.sink.split_crit_edge ], [ getelementptr inbounds (%struct.device_attribute, ptr @dev_attr_nvm_version, i32 0, i32 0, i32 1), %if.then.i.cleanup.sink.split_crit_edge ], [ getelementptr inbounds (%struct.device_attribute, ptr @dev_attr_nvm_version, i32 0, i32 0, i32 1), %nvm_readable.exit.cleanup.sink.split_crit_edge ], [ getelementptr inbounds (%struct.device_attribute, ptr @dev_attr_boot, i32 0, i32 0, i32 1), %if.then72.cleanup.sink.split_crit_edge ], [ getelementptr inbounds (%struct.device_attribute, ptr @dev_attr_nvm_authenticate_on_disconnect, i32 0, i32 0, i32 1), %if.then80.cleanup.sink.split_crit_edge ]
  %40 = ptrtoint ptr %mode97.sink to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %mode97.sink, align 4
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end95.cleanup_crit_edge, %if.then80.cleanup_crit_edge, %if.then72.cleanup_crit_edge, %nvm_readable.exit.cleanup_crit_edge, %if.then.i.cleanup_crit_edge, %if.then58.cleanup_crit_edge, %if.then50.cleanup_crit_edge, %land.lhs.true37.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %if.then31.cleanup_crit_edge, %if.then25.cleanup_crit_edge, %if.then19.cleanup_crit_edge, %if.then13.cleanup_crit_edge, %if.then8.cleanup_crit_edge, %if.then.cleanup_crit_edge, %if.then.cleanup_crit_edge149
  %retval.0 = phi i16 [ 0, %if.then.cleanup_crit_edge ], [ 0, %if.then.cleanup_crit_edge149 ], [ 0, %if.then8.cleanup_crit_edge ], [ 0, %if.then13.cleanup_crit_edge ], [ 0, %if.then19.cleanup_crit_edge ], [ 0, %if.then25.cleanup_crit_edge ], [ 0, %land.lhs.true37.cleanup_crit_edge ], [ 0, %land.lhs.true.cleanup_crit_edge ], [ 0, %if.then31.cleanup_crit_edge ], [ 0, %if.then50.cleanup_crit_edge ], [ 0, %if.then58.cleanup_crit_edge ], [ 0, %nvm_readable.exit.cleanup_crit_edge ], [ 0, %if.then72.cleanup_crit_edge ], [ 0, %if.then80.cleanup_crit_edge ], [ 0, %if.end95.cleanup_crit_edge ], [ 0, %if.then.i.cleanup_crit_edge ], [ %41, %cleanup.sink.split ]
  ret i16 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @nvm_upgradeable(ptr noundef %sw) unnamed_addr #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %no_nvm_upgrade = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 23
  %0 = ptrtoint ptr %no_nvm_upgrade to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %no_nvm_upgrade, align 4, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end:                                           ; preds = %entry
  %thunderbolt_version.i.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %2 = ptrtoint ptr %thunderbolt_version.i.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %bf.load.i.i = load i64, ptr %thunderbolt_version.i.i, align 4
  %bf.cast1.i.i = and i64 %bf.load.i.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i.i)
  %cmp.i.i = icmp eq i64 %bf.cast1.i.i, 32
  br i1 %cmp.i.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call1.i = tail call i32 @usb4_switch_nvm_sector_size(ptr noundef %sw) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %cmp.i = icmp sgt i32 %call1.i, 0
  br label %return

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %dma_port.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 3
  %3 = ptrtoint ptr %dma_port.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %dma_port.i, align 8
  %tobool.i = icmp ne ptr %4, null
  br label %return

return:                                           ; preds = %if.end.i, %if.then.i, %entry.return_crit_edge
  %retval.0 = phi i1 [ false, %entry.return_crit_edge ], [ %cmp.i, %if.then.i ], [ %tobool.i, %if.end.i ]
  ret i1 %retval.0
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @authorized_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %1, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %dev, ptr null
  %authorized = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 27
  %2 = ptrtoint ptr %authorized to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %authorized, align 8
  %call1 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.126, i32 noundef %3)
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @authorized_store(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf, i32 noundef %count) #0 align 64 {
entry:
  %envp.i.i = alloca [2 x ptr], align 8
  %envp_string.i = alloca [13 x i8], align 1
  %envp.i = alloca [2 x ptr], align 4
  %val = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %1, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %dev, ptr null
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val) #16
  %2 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %val, align 4, !annotation !447
  %call1 = call i32 @kstrtouint(ptr noundef %buf, i32 noundef 0, ptr noundef nonnull %val) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %val, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %4)
  %cmp = icmp ugt i32 %4, 2
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %call.i = call i32 @__pm_runtime_resume(ptr noundef %dev..i, i32 noundef 4) #16
  %5 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %val, align 4
  call void @llvm.lifetime.start.p0(i64 13, ptr nonnull %envp_string.i) #16
  %7 = call ptr @memset(ptr %envp_string.i, i32 255, i32 13)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %envp.i) #16
  %8 = getelementptr inbounds [2 x ptr], ptr %envp.i, i32 0, i32 1
  %9 = ptrtoint ptr %envp.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %envp_string.i, ptr %envp.i, align 4
  %10 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %8, align 4
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 5
  %11 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %tb.i, align 8
  %lock.i = getelementptr inbounds %struct.tb, ptr %12, i32 0, i32 1
  %call.i19 = call i32 @mutex_trylock(ptr noundef %lock.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i19)
  %tobool.not.i = icmp eq i32 %call.i19, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  %13 = call i32 @llvm.read_register.i32(metadata !435) #16
  %and.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %task.i.i, align 8
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %stack.i.i.i, align 4
  call void @_set_bit(i32 noundef 0, ptr noundef %18) #16
  br label %tb_switch_set_authorized.exit

if.end.i:                                         ; preds = %if.end3
  %authorized.i = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 27
  %19 = ptrtoint ptr %authorized.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %authorized.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool2.i = icmp eq i32 %20, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool4.i = icmp ne i32 %6, 0
  %cmp.i = xor i1 %tobool4.i, %tobool2.i
  br i1 %cmp.i, label %if.end.i.unlock.i_crit_edge, label %if.end10.i

if.end.i.unlock.i_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.i

if.end10.i:                                       ; preds = %if.end.i
  %21 = zext i32 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %21, ptr @__sancov_gen_cov_switch_values.212)
  switch i32 %6, label %if.end10.i.unlock.i_crit_edge [
    i32 0, label %sw.bb.i
    i32 1, label %sw.bb16.i
    i32 2, label %sw.bb24.i
  ]

if.end10.i.unlock.i_crit_edge:                    ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.i

sw.bb.i:                                          ; preds = %if.end10.i
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 1, i32 4
  %22 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %22, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %23 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %23, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 1, i32 3
  %24 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %25 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i.i)
  %tobool12.not.i = icmp eq i64 %or.i.i, 0
  br i1 %tobool12.not.i, label %sw.bb.i.unlock.i_crit_edge, label %if.then13.i

sw.bb.i.unlock.i_crit_edge:                       ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.i

if.then13.i:                                      ; preds = %sw.bb.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %envp.i.i) #16
  %26 = load i64, ptr @__const.disapprove_switch.envp, align 8
  %27 = ptrtoint ptr %envp.i.i to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %26, ptr %envp.i.i, align 8
  %type.i.i.i.i = getelementptr inbounds %struct.device, ptr %dev..i, i32 0, i32 4
  %28 = ptrtoint ptr %type.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %type.i.i.i.i, align 4
  %cmp.i.i.i.i = icmp ne ptr %29, @tb_switch_type
  %tobool.not27.i.i = icmp eq ptr %dev..i, null
  %tobool.not.i.i = or i1 %tobool.not27.i.i, %cmp.i.i.i.i
  %brmerge.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.i
  br i1 %brmerge.i, label %if.then13.i.disapprove_switch.exit.i_crit_edge, label %if.then.i.i

if.then13.i.disapprove_switch.exit.i_crit_edge:   ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %disapprove_switch.exit.i

if.then.i.i:                                      ; preds = %if.then13.i
  %call3.i.i = call i32 @device_for_each_child_reverse(ptr noundef nonnull %dev..i, ptr noundef null, ptr noundef nonnull @disapprove_switch) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i.i)
  %tobool4.not.i.i = icmp eq i32 %call3.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end.i.i, label %if.then.i.i.disapprove_switch.exit.i_crit_edge

if.then.i.i.disapprove_switch.exit.i_crit_edge:   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %disapprove_switch.exit.i

if.end.i.i:                                       ; preds = %if.then.i.i
  %30 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %tb.i, align 8
  %call6.i.i = call i32 @tb_domain_disapprove_switch(ptr noundef %31, ptr noundef nonnull %dev..i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i)
  %tobool7.not.i.i = icmp eq i32 %call6.i.i, 0
  br i1 %tobool7.not.i.i, label %cleanup.i.i, label %if.end.i.i.disapprove_switch.exit.i_crit_edge

if.end.i.i.disapprove_switch.exit.i_crit_edge:    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %disapprove_switch.exit.i

cleanup.i.i:                                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %32 = ptrtoint ptr %authorized.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 0, ptr %authorized.i, align 8
  %call12.i.i = call i32 @kobject_uevent_env(ptr noundef nonnull %dev..i, i32 noundef 2, ptr noundef nonnull %envp.i.i) #16
  br label %disapprove_switch.exit.i

disapprove_switch.exit.i:                         ; preds = %cleanup.i.i, %if.end.i.i.disapprove_switch.exit.i_crit_edge, %if.then.i.i.disapprove_switch.exit.i_crit_edge, %if.then13.i.disapprove_switch.exit.i_crit_edge
  %retval.1.i.i = phi i32 [ 0, %cleanup.i.i ], [ 0, %if.then13.i.disapprove_switch.exit.i_crit_edge ], [ %call6.i.i, %if.end.i.i.disapprove_switch.exit.i_crit_edge ], [ %call3.i.i, %if.then.i.i.disapprove_switch.exit.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %envp.i.i) #16
  br label %unlock.i

sw.bb16.i:                                        ; preds = %if.end10.i
  %key.i = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 30
  %33 = ptrtoint ptr %key.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %key.i, align 4
  %tobool17.not.i = icmp eq ptr %34, null
  %35 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %tb.i, align 8
  br i1 %tobool17.not.i, label %if.else.i, label %if.then18.i

if.then18.i:                                      ; preds = %sw.bb16.i
  call void @__sanitizer_cov_trace_pc() #18
  %call20.i = call i32 @tb_domain_approve_switch_key(ptr noundef %36, ptr noundef %dev..i) #16
  br label %sw.epilog.i

if.else.i:                                        ; preds = %sw.bb16.i
  call void @__sanitizer_cov_trace_pc() #18
  %call22.i = call i32 @tb_domain_approve_switch(ptr noundef %36, ptr noundef %dev..i) #16
  br label %sw.epilog.i

sw.bb24.i:                                        ; preds = %if.end10.i
  %key25.i = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 30
  %37 = ptrtoint ptr %key25.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %key25.i, align 4
  %tobool26.not.i = icmp eq ptr %38, null
  br i1 %tobool26.not.i, label %sw.bb24.i.unlock.i_crit_edge, label %if.then27.i

sw.bb24.i.unlock.i_crit_edge:                     ; preds = %sw.bb24.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.i

if.then27.i:                                      ; preds = %sw.bb24.i
  call void @__sanitizer_cov_trace_pc() #18
  %39 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %tb.i, align 8
  %call29.i = call i32 @tb_domain_challenge_switch_key(ptr noundef %40, ptr noundef %dev..i) #16
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %if.then27.i, %if.else.i, %if.then18.i
  %ret.0.i = phi i32 [ %call29.i, %if.then27.i ], [ %call20.i, %if.then18.i ], [ %call22.i, %if.else.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0.i)
  %tobool31.not.i = icmp eq i32 %ret.0.i, 0
  br i1 %tobool31.not.i, label %if.then32.i, label %sw.epilog.i.unlock.i_crit_edge

sw.epilog.i.unlock.i_crit_edge:                   ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.i

if.then32.i:                                      ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  %41 = ptrtoint ptr %authorized.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %6, ptr %authorized.i, align 8
  %call36.i = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %envp_string.i, ptr noundef nonnull @.str.127, i32 noundef %6) #16
  %call39.i = call i32 @kobject_uevent_env(ptr noundef %dev..i, i32 noundef 2, ptr noundef nonnull %envp.i) #16
  br label %unlock.i

unlock.i:                                         ; preds = %if.then32.i, %sw.epilog.i.unlock.i_crit_edge, %sw.bb24.i.unlock.i_crit_edge, %disapprove_switch.exit.i, %sw.bb.i.unlock.i_crit_edge, %if.end10.i.unlock.i_crit_edge, %if.end.i.unlock.i_crit_edge
  %ret.1.i = phi i32 [ -22, %if.end.i.unlock.i_crit_edge ], [ %ret.0.i, %sw.epilog.i.unlock.i_crit_edge ], [ 0, %if.then32.i ], [ %retval.1.i.i, %disapprove_switch.exit.i ], [ -22, %if.end10.i.unlock.i_crit_edge ], [ -22, %sw.bb24.i.unlock.i_crit_edge ], [ -22, %sw.bb.i.unlock.i_crit_edge ]
  %42 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %tb.i, align 8
  %lock42.i = getelementptr inbounds %struct.tb, ptr %43, i32 0, i32 1
  call void @mutex_unlock(ptr noundef %lock42.i) #16
  br label %tb_switch_set_authorized.exit

tb_switch_set_authorized.exit:                    ; preds = %unlock.i, %if.then.i
  %retval.0.i = phi i32 [ %ret.1.i, %unlock.i ], [ -513, %if.then.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %envp.i) #16
  call void @llvm.lifetime.end.p0(i64 13, ptr nonnull %envp_string.i) #16
  %call.i20 = call i64 @ktime_get_mono_fast_ns() #16
  %last_busy.i = getelementptr inbounds %struct.device, ptr %dev..i, i32 0, i32 12, i32 22
  %44 = ptrtoint ptr %last_busy.i to i32
  call void @__asan_store8_noabort(i32 %44)
  store volatile i64 %call.i20, ptr %last_busy.i, align 8
  %call.i21 = call i32 @__pm_runtime_suspend(ptr noundef %dev..i, i32 noundef 13) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %tobool10.not = icmp eq i32 %retval.0.i, 0
  %spec.select = select i1 %tobool10.not, i32 %count, i32 %retval.0.i
  br label %cleanup

cleanup:                                          ; preds = %tb_switch_set_authorized.exit, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ %spec.select, %tb_switch_set_authorized.exit ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val) #16
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kstrtouint(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mutex_trylock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @disapprove_switch(ptr noundef %dev, ptr nocapture noundef readnone %not_used) #0 align 64 {
entry:
  %envp = alloca [2 x ptr], align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %envp) #16
  %0 = load i64, ptr @__const.disapprove_switch.envp, align 8
  %1 = ptrtoint ptr %envp to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 %0, ptr %envp, align 8
  %type.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %2 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp ne ptr %3, @tb_switch_type
  %tobool.not27 = icmp eq ptr %dev, null
  %tobool.not = or i1 %tobool.not27, %cmp.i.i
  br i1 %tobool.not, label %entry.cleanup14_crit_edge, label %land.lhs.true

entry.cleanup14_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup14

land.lhs.true:                                    ; preds = %entry
  %authorized = getelementptr inbounds %struct.tb_switch, ptr %dev, i32 0, i32 27
  %4 = ptrtoint ptr %authorized to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %authorized, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool1.not = icmp eq i32 %5, 0
  br i1 %tobool1.not, label %land.lhs.true.cleanup14_crit_edge, label %if.then

land.lhs.true.cleanup14_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup14

if.then:                                          ; preds = %land.lhs.true
  %call3 = tail call i32 @device_for_each_child_reverse(ptr noundef nonnull %dev, ptr noundef null, ptr noundef nonnull @disapprove_switch) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.end, label %if.then.cleanup14_crit_edge

if.then.cleanup14_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup14

if.end:                                           ; preds = %if.then
  %tb = getelementptr inbounds %struct.tb_switch, ptr %dev, i32 0, i32 5
  %6 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tb, align 8
  %call6 = tail call i32 @tb_domain_disapprove_switch(ptr noundef %7, ptr noundef nonnull %dev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %cleanup, label %if.end.cleanup14_crit_edge

if.end.cleanup14_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup14

cleanup:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %8 = ptrtoint ptr %authorized to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %authorized, align 8
  %call12 = call i32 @kobject_uevent_env(ptr noundef nonnull %dev, i32 noundef 2, ptr noundef nonnull %envp) #16
  br label %cleanup14

cleanup14:                                        ; preds = %cleanup, %if.end.cleanup14_crit_edge, %if.then.cleanup14_crit_edge, %land.lhs.true.cleanup14_crit_edge, %entry.cleanup14_crit_edge
  %retval.1 = phi i32 [ 0, %cleanup ], [ 0, %land.lhs.true.cleanup14_crit_edge ], [ 0, %entry.cleanup14_crit_edge ], [ %call6, %if.end.cleanup14_crit_edge ], [ %call3, %if.then.cleanup14_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %envp) #16
  ret i32 %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_domain_approve_switch_key(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_domain_approve_switch(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_domain_challenge_switch_key(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kobject_uevent_env(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #12

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @device_for_each_child_reverse(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_domain_disapprove_switch(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_suspend(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @device_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %1, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %dev, ptr null
  %device = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 9
  %2 = ptrtoint ptr %device to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %device, align 2
  %conv = zext i16 %3 to i32
  %call1 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.129, i32 noundef %conv)
  ret i32 %call1
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @device_name_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %1, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %dev, ptr null
  %device_name = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 11
  %2 = ptrtoint ptr %device_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %device_name, align 4
  %tobool.not = icmp eq ptr %3, null
  %spec.select = select i1 %tobool.not, ptr @.str.132, ptr %3
  %call2 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.131, ptr noundef nonnull %spec.select)
  ret i32 %call2
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vendor_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %1, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %dev, ptr null
  %vendor = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 8
  %2 = ptrtoint ptr %vendor to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %vendor, align 4
  %conv = zext i16 %3 to i32
  %call1 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.129, i32 noundef %conv)
  ret i32 %call1
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vendor_name_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %1, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %dev, ptr null
  %vendor_name = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 10
  %2 = ptrtoint ptr %vendor_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vendor_name, align 8
  %tobool.not = icmp eq ptr %3, null
  %spec.select = select i1 %tobool.not, ptr @.str.132, ptr %3
  %call2 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.131, ptr noundef nonnull %spec.select)
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @key_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %1, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %dev, ptr null
  %tb = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 5
  %2 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tb, align 8
  %lock = getelementptr inbounds %struct.tb, ptr %3, i32 0, i32 1
  %call1 = tail call i32 @mutex_trylock(ptr noundef %lock) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %4 = tail call i32 @llvm.read_register.i32(metadata !435) #16
  %and.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task.i, align 8
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %stack.i.i, align 4
  tail call void @_set_bit(i32 noundef 0, ptr noundef %9) #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %key = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 30
  %10 = ptrtoint ptr %key to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %key, align 4
  %tobool3.not = icmp eq ptr %11, null
  br i1 %tobool3.not, label %if.else, label %if.then4

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call6 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.136, i32 noundef 32, ptr noundef nonnull %11)
  br label %if.end8

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %12 = ptrtoint ptr %buf to i32
  call void @__asan_storeN_noabort(i32 %12, i32 2)
  store i16 2560, ptr %buf, align 1
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then4
  %ret.0 = phi i32 [ %call6, %if.then4 ], [ 1, %if.else ]
  %13 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %tb, align 8
  %lock10 = getelementptr inbounds %struct.tb, ptr %14, i32 0, i32 1
  tail call void @mutex_unlock(ptr noundef %lock10) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.then
  %retval.0 = phi i32 [ %ret.0, %if.end8 ], [ -513, %if.then ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @key_store(ptr nocapture noundef %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf, i32 noundef %count) #0 align 64 {
entry:
  %key = alloca [32 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %1, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %dev, ptr null
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %key) #16
  %2 = call ptr @memset(ptr %key, i32 255, i32 32)
  %call1 = tail call i32 @strcmp(ptr noundef %buf, ptr noundef nonnull dereferenceable(2) @.str.137) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %entry.if.end5_crit_edge, label %if.else

entry.if.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

if.else:                                          ; preds = %entry
  %call2 = call i32 @hex2bin(ptr noundef nonnull %key, ptr noundef %buf, i32 noundef 32) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.else.if.end5_crit_edge, label %if.else.cleanup_crit_edge

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.else.if.end5_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

if.end5:                                          ; preds = %if.else.if.end5_crit_edge, %entry.if.end5_crit_edge
  %tb = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 5
  %3 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %tb, align 8
  %lock = getelementptr inbounds %struct.tb, ptr %4, i32 0, i32 1
  %call6 = call i32 @mutex_trylock(ptr noundef %lock) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %if.then8, label %if.end10

if.then8:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  %5 = call i32 @llvm.read_register.i32(metadata !435) #16
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %task.i, align 8
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %stack.i.i, align 4
  call void @_set_bit(i32 noundef 0, ptr noundef %10) #16
  br label %cleanup

if.end10:                                         ; preds = %if.end5
  %authorized = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 27
  %11 = ptrtoint ptr %authorized to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %authorized, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool11.not = icmp eq i32 %12, 0
  br i1 %tobool11.not, label %if.else13, label %if.end10.if.end27_crit_edge

if.end10.if.end27_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end27

if.else13:                                        ; preds = %if.end10
  %key14 = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 30
  %13 = ptrtoint ptr %key14 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %key14, align 4
  call void @kfree(ptr noundef %14) #16
  br i1 %tobool.not, label %if.then16, label %if.else18

if.then16:                                        ; preds = %if.else13
  call void @__sanitizer_cov_trace_pc() #18
  %15 = ptrtoint ptr %key14 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %key14, align 4
  br label %if.end27

if.else18:                                        ; preds = %if.else13
  call void @__sanitizer_cov_trace_pc() #18
  %call20 = call ptr @kmemdup(ptr noundef nonnull %key, i32 noundef 32, i32 noundef 3264) #16
  %16 = ptrtoint ptr %key14 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %call20, ptr %key14, align 4
  %tobool23.not = icmp eq ptr %call20, null
  %spec.select = select i1 %tobool23.not, i32 -12, i32 %count
  br label %if.end27

if.end27:                                         ; preds = %if.else18, %if.then16, %if.end10.if.end27_crit_edge
  %ret.0 = phi i32 [ %count, %if.then16 ], [ -16, %if.end10.if.end27_crit_edge ], [ %spec.select, %if.else18 ]
  %17 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %tb, align 8
  %lock29 = getelementptr inbounds %struct.tb, ptr %18, i32 0, i32 1
  call void @mutex_unlock(ptr noundef %lock29) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end27, %if.then8, %if.else.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %if.end27 ], [ -513, %if.then8 ], [ -22, %if.else.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %key) #16
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #13

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hex2bin(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmemdup(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @speed_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %1, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %dev, ptr null
  %link_speed = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 12
  %2 = ptrtoint ptr %link_speed to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %link_speed, align 8
  %call1 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.139, i32 noundef %3)
  ret i32 %call1
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @lanes_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %1, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %dev, ptr null
  %link_width = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 13
  %2 = ptrtoint ptr %link_width to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %link_width, align 4
  %call1 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.126, i32 noundef %3)
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nvm_authenticate_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %1, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %dev, ptr null
  tail call void @mutex_lock_nested(ptr noundef nonnull @nvm_auth_status_lock, i32 noundef 0) #16
  %uuid1.i.i = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 7
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i.for.cond.i.i_crit_edge, %entry
  %st.0.in.i.i = phi ptr [ @nvm_auth_status_cache, %entry ], [ %st.0.i.i, %for.body.i.i.for.cond.i.i_crit_edge ]
  %2 = ptrtoint ptr %st.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %st.0.i.i = load ptr, ptr %st.0.in.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %st.0.i.i, @nvm_auth_status_cache
  br i1 %cmp.not.i.i, label %__nvm_get_auth_status.exit.thread.i, label %for.body.i.i

__nvm_get_auth_status.exit.thread.i:              ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @mutex_unlock(ptr noundef nonnull @nvm_auth_status_lock) #16
  br label %nvm_get_auth_status.exit

for.body.i.i:                                     ; preds = %for.cond.i.i
  %uuid.i.i = getelementptr inbounds %struct.nvm_auth_status, ptr %st.0.i.i, i32 0, i32 1
  %3 = ptrtoint ptr %uuid1.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %uuid1.i.i, align 8
  %bcmp.i.i.i = tail call i32 @bcmp(ptr noundef dereferenceable(16) %uuid.i.i, ptr noundef dereferenceable(16) %4, i32 16) #22
  %cmp.i.i.i = icmp eq i32 %bcmp.i.i.i, 0
  br i1 %cmp.i.i.i, label %__nvm_get_auth_status.exit.i, label %for.body.i.i.for.cond.i.i_crit_edge

for.body.i.i.for.cond.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i.i

__nvm_get_auth_status.exit.i:                     ; preds = %for.body.i.i
  tail call void @mutex_unlock(ptr noundef nonnull @nvm_auth_status_lock) #16
  %tobool.not.i = icmp eq ptr %st.0.i.i, null
  br i1 %tobool.not.i, label %__nvm_get_auth_status.exit.i.nvm_get_auth_status.exit_crit_edge, label %cond.true.i

__nvm_get_auth_status.exit.i.nvm_get_auth_status.exit_crit_edge: ; preds = %__nvm_get_auth_status.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nvm_get_auth_status.exit

cond.true.i:                                      ; preds = %__nvm_get_auth_status.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %status1.i = getelementptr inbounds %struct.nvm_auth_status, ptr %st.0.i.i, i32 0, i32 2
  %5 = ptrtoint ptr %status1.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %status1.i, align 4
  br label %nvm_get_auth_status.exit

nvm_get_auth_status.exit:                         ; preds = %cond.true.i, %__nvm_get_auth_status.exit.i.nvm_get_auth_status.exit_crit_edge, %__nvm_get_auth_status.exit.thread.i
  %cond.i = phi i32 [ %6, %cond.true.i ], [ 0, %__nvm_get_auth_status.exit.i.nvm_get_auth_status.exit_crit_edge ], [ 0, %__nvm_get_auth_status.exit.thread.i ]
  %call1 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.129, i32 noundef %cond.i)
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nvm_authenticate_store(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf, i32 noundef %count) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @nvm_authenticate_sysfs(ptr noundef %dev, ptr noundef %buf, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  %count.call = select i1 %tobool.not, i32 %count, i32 %call
  ret i32 %count.call
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nvm_authenticate_sysfs(ptr noundef %dev, ptr noundef %buf, i1 noundef zeroext %disconnect) unnamed_addr #0 align 64 {
entry:
  %val = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %1, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %dev, ptr null
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val) #16
  %2 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %val, align 4, !annotation !447
  %call.i = tail call i32 @__pm_runtime_resume(ptr noundef %dev..i, i32 noundef 4) #16
  %tb = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 5
  %3 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %tb, align 8
  %lock = getelementptr inbounds %struct.tb, ptr %4, i32 0, i32 1
  %call3 = tail call i32 @mutex_trylock(ptr noundef %lock) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %5 = tail call i32 @llvm.read_register.i32(metadata !435) #16
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %task.i, align 8
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %stack.i.i, align 4
  tail call void @_set_bit(i32 noundef 0, ptr noundef %10) #16
  br label %exit_rpm

if.end:                                           ; preds = %entry
  %nvm = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 22
  %11 = ptrtoint ptr %nvm to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %nvm, align 8
  %tobool5.not = icmp eq ptr %12, null
  br i1 %tobool5.not, label %if.end.exit_unlock_crit_edge, label %if.end7

if.end.exit_unlock_crit_edge:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %exit_unlock

if.end7:                                          ; preds = %if.end
  %call8 = call i32 @kstrtoint(ptr noundef %buf, i32 noundef 10, ptr noundef nonnull %val) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %if.end11, label %if.end7.exit_unlock_crit_edge

if.end7.exit_unlock_crit_edge:                    ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %exit_unlock

if.end11:                                         ; preds = %if.end7
  call fastcc void @nvm_clear_auth_status(ptr noundef %dev..i)
  %13 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %val, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp = icmp sgt i32 %14, 0
  br i1 %cmp, label %if.then12, label %if.end11.exit_unlock_crit_edge

if.end11.exit_unlock_crit_edge:                   ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  br label %exit_unlock

if.then12:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %14)
  %cmp13 = icmp eq i32 %14, 3
  br i1 %cmp13, label %if.then14, label %if.else19

if.then14:                                        ; preds = %if.then12
  br i1 %disconnect, label %if.then14.exit_unlock_crit_edge, label %if.else

if.then14.exit_unlock_crit_edge:                  ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #18
  br label %exit_unlock

if.else:                                          ; preds = %if.then14
  %thunderbolt_version.i.i = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 1, i32 4
  %15 = ptrtoint ptr %thunderbolt_version.i.i to i32
  call void @__asan_loadN_noabort(i32 %15, i32 8)
  %bf.load.i.i = load i64, ptr %thunderbolt_version.i.i, align 4
  %bf.cast1.i.i = and i64 %bf.load.i.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i.i)
  %cmp.i.i65 = icmp eq i64 %bf.cast1.i.i, 32
  br i1 %cmp.i.i65, label %if.then.i, label %if.else.exit_unlock_crit_edge

if.else.exit_unlock_crit_edge:                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %exit_unlock

if.then.i:                                        ; preds = %if.else
  %call2.i = call i32 @usb4_switch_nvm_set_offset(ptr noundef %dev..i, i32 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %if.end5.i, label %if.then.i.exit_unlock_crit_edge

if.then.i.exit_unlock_crit_edge:                  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %exit_unlock

if.end5.i:                                        ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %16 = ptrtoint ptr %nvm to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %nvm, align 8
  %authenticating.i = getelementptr inbounds %struct.tb_nvm, ptr %17, i32 0, i32 8
  %18 = ptrtoint ptr %authenticating.i to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 1, ptr %authenticating.i, align 4
  %call6.i = call i32 @usb4_switch_nvm_authenticate(ptr noundef %dev..i) #16
  br label %exit_unlock

if.else19:                                        ; preds = %if.then12
  %19 = ptrtoint ptr %nvm to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %nvm, align 8
  %flushed = getelementptr inbounds %struct.tb_nvm, ptr %20, i32 0, i32 9
  %21 = ptrtoint ptr %flushed to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %flushed, align 1, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool21.not = icmp eq i8 %22, 0
  br i1 %tobool21.not, label %if.then22, label %if.end33thread-pre-split

if.then22:                                        ; preds = %if.else19
  %buf24 = getelementptr inbounds %struct.tb_nvm, ptr %20, i32 0, i32 6
  %23 = ptrtoint ptr %buf24 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %buf24, align 4
  %tobool25.not = icmp eq ptr %24, null
  br i1 %tobool25.not, label %if.then22.exit_unlock_crit_edge, label %if.end27

if.then22.exit_unlock_crit_edge:                  ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #18
  br label %exit_unlock

if.end27:                                         ; preds = %if.then22
  %call28 = call fastcc i32 @nvm_validate_and_write(ptr noundef %dev..i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28)
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %lor.lhs.false, label %if.end27.exit_unlock_crit_edge

if.end27.exit_unlock_crit_edge:                   ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #18
  br label %exit_unlock

lor.lhs.false:                                    ; preds = %if.end27
  %25 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %val, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %26)
  %cmp30 = icmp eq i32 %26, 2
  br i1 %cmp30, label %lor.lhs.false.exit_unlock_crit_edge, label %lor.lhs.false.if.end33_crit_edge

lor.lhs.false.if.end33_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end33

lor.lhs.false.exit_unlock_crit_edge:              ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %exit_unlock

if.end33thread-pre-split:                         ; preds = %if.else19
  call void @__sanitizer_cov_trace_pc() #18
  %27 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %27)
  %.pr = load i32, ptr %val, align 4
  br label %if.end33

if.end33:                                         ; preds = %if.end33thread-pre-split, %lor.lhs.false.if.end33_crit_edge
  %28 = phi i32 [ %.pr, %if.end33thread-pre-split ], [ %26, %lor.lhs.false.if.end33_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %28)
  %cmp34 = icmp eq i32 %28, 1
  br i1 %cmp34, label %if.then35, label %if.end33.exit_unlock_crit_edge

if.end33.exit_unlock_crit_edge:                   ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #18
  br label %exit_unlock

if.then35:                                        ; preds = %if.end33
  br i1 %disconnect, label %if.then37, label %if.else39

if.then37:                                        ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #18
  %call38 = call i32 @tb_lc_force_power(ptr noundef %dev..i) #16
  br label %exit_unlock

if.else39:                                        ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #18
  %call40 = call fastcc i32 @nvm_authenticate(ptr noundef %dev..i, i1 noundef zeroext false)
  br label %exit_unlock

exit_unlock:                                      ; preds = %if.else39, %if.then37, %if.end33.exit_unlock_crit_edge, %lor.lhs.false.exit_unlock_crit_edge, %if.end27.exit_unlock_crit_edge, %if.then22.exit_unlock_crit_edge, %if.end5.i, %if.then.i.exit_unlock_crit_edge, %if.else.exit_unlock_crit_edge, %if.then14.exit_unlock_crit_edge, %if.end11.exit_unlock_crit_edge, %if.end7.exit_unlock_crit_edge, %if.end.exit_unlock_crit_edge
  %ret.1 = phi i32 [ %call8, %if.end7.exit_unlock_crit_edge ], [ %call38, %if.then37 ], [ %call40, %if.else39 ], [ 0, %if.end33.exit_unlock_crit_edge ], [ %call28, %if.end27.exit_unlock_crit_edge ], [ 0, %lor.lhs.false.exit_unlock_crit_edge ], [ 0, %if.end11.exit_unlock_crit_edge ], [ -11, %if.end.exit_unlock_crit_edge ], [ -22, %if.then14.exit_unlock_crit_edge ], [ -22, %if.then22.exit_unlock_crit_edge ], [ %call6.i, %if.end5.i ], [ %call2.i, %if.then.i.exit_unlock_crit_edge ], [ -95, %if.else.exit_unlock_crit_edge ]
  %29 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %tb, align 8
  %lock46 = getelementptr inbounds %struct.tb, ptr %30, i32 0, i32 1
  call void @mutex_unlock(ptr noundef %lock46) #16
  br label %exit_rpm

exit_rpm:                                         ; preds = %exit_unlock, %if.then
  %ret.2 = phi i32 [ %ret.1, %exit_unlock ], [ -513, %if.then ]
  %call.i66 = call i64 @ktime_get_mono_fast_ns() #16
  %last_busy.i = getelementptr inbounds %struct.device, ptr %dev..i, i32 0, i32 12, i32 22
  %31 = ptrtoint ptr %last_busy.i to i32
  call void @__asan_store8_noabort(i32 %31)
  store volatile i64 %call.i66, ptr %last_busy.i, align 8
  %call.i67 = call i32 @__pm_runtime_suspend(ptr noundef %dev..i, i32 noundef 13) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val) #16
  ret i32 %ret.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kstrtoint(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @nvm_clear_auth_status(ptr nocapture noundef readonly %sw) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @nvm_auth_status_lock, i32 noundef 0) #16
  %uuid1.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 7
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %entry
  %st.0.in.i = phi ptr [ @nvm_auth_status_cache, %entry ], [ %st.0.i, %for.body.i.for.cond.i_crit_edge ]
  %0 = ptrtoint ptr %st.0.in.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %st.0.i = load ptr, ptr %st.0.in.i, align 4
  %cmp.not.i = icmp eq ptr %st.0.i, @nvm_auth_status_cache
  br i1 %cmp.not.i, label %for.cond.i.if.end_crit_edge, label %for.body.i

for.cond.i.if.end_crit_edge:                      ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

for.body.i:                                       ; preds = %for.cond.i
  %uuid.i = getelementptr inbounds %struct.nvm_auth_status, ptr %st.0.i, i32 0, i32 1
  %1 = ptrtoint ptr %uuid1.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %uuid1.i, align 8
  %bcmp.i.i = tail call i32 @bcmp(ptr noundef dereferenceable(16) %uuid.i, ptr noundef dereferenceable(16) %2, i32 16) #22
  %cmp.i.i = icmp eq i32 %bcmp.i.i, 0
  br i1 %cmp.i.i, label %__nvm_get_auth_status.exit, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i

__nvm_get_auth_status.exit:                       ; preds = %for.body.i
  %tobool.not = icmp eq ptr %st.0.i, null
  br i1 %tobool.not, label %__nvm_get_auth_status.exit.if.end_crit_edge, label %if.then

__nvm_get_auth_status.exit.if.end_crit_edge:      ; preds = %__nvm_get_auth_status.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %__nvm_get_auth_status.exit
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %st.0.i) #16
  br i1 %call.i.i, label %if.end.i.i, label %if.then.list_del.exit_crit_edge

if.then.list_del.exit_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %st.0.i, i32 0, i32 1
  %3 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %prev.i.i, align 4
  %5 = ptrtoint ptr %st.0.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %st.0.i, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %4, ptr %prev1.i.i.i, align 4
  %8 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %6, ptr %4, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.then.list_del.exit_crit_edge
  %9 = ptrtoint ptr %st.0.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 256 to ptr), ptr %st.0.i, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %st.0.i, i32 0, i32 1
  %10 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @kfree(ptr noundef nonnull %st.0.i) #16
  br label %if.end

if.end:                                           ; preds = %list_del.exit, %__nvm_get_auth_status.exit.if.end_crit_edge, %for.cond.i.if.end_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @nvm_auth_status_lock) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nvm_authenticate(ptr noundef %sw, i1 noundef zeroext %auth_only) unnamed_addr #0 align 64 {
entry:
  %status.i36 = alloca i32, align 4
  %status.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %thunderbolt_version.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %0 = ptrtoint ptr %thunderbolt_version.i to i32
  call void @__asan_loadN_noabort(i32 %0, i32 8)
  %bf.load.i = load i64, ptr %thunderbolt_version.i, align 4
  %bf.cast1.i = and i64 %bf.load.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i)
  %cmp.i = icmp eq i64 %bf.cast1.i, 32
  br i1 %cmp.i, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br i1 %auth_only, label %if.then1, label %if.then.if.end5_crit_edge

if.then.if.end5_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

if.then1:                                         ; preds = %if.then
  %call2 = tail call i32 @usb4_switch_nvm_set_offset(ptr noundef %sw, i32 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.then1.if.end5_crit_edge, label %if.then1.cleanup_crit_edge

if.then1.cleanup_crit_edge:                       ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then1.if.end5_crit_edge:                       ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

if.end5:                                          ; preds = %if.then1.if.end5_crit_edge, %if.then.if.end5_crit_edge
  %nvm = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 22
  %1 = ptrtoint ptr %nvm to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %nvm, align 8
  %authenticating = getelementptr inbounds %struct.tb_nvm, ptr %2, i32 0, i32 8
  %3 = ptrtoint ptr %authenticating to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 1, ptr %authenticating, align 4
  %call6 = tail call i32 @usb4_switch_nvm_authenticate(ptr noundef %sw) #16
  br label %cleanup

if.else:                                          ; preds = %entry
  br i1 %auth_only, label %if.else.cleanup_crit_edge, label %if.end10

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end10:                                         ; preds = %if.else
  %nvm11 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 22
  %4 = ptrtoint ptr %nvm11 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %nvm11, align 8
  %authenticating12 = getelementptr inbounds %struct.tb_nvm, ptr %5, i32 0, i32 8
  %6 = ptrtoint ptr %authenticating12 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 1, ptr %authenticating12, align 4
  %7 = ptrtoint ptr %thunderbolt_version.i to i32
  call void @__asan_loadN_noabort(i32 %7, i32 8)
  %bf.load.i31 = load i64, ptr %thunderbolt_version.i, align 4
  %8 = lshr i64 %bf.load.i31, 1
  %shl.i = and i64 %8, 9223372032559808512
  %route_lo.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 3
  %9 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %route_lo.i, align 8
  %conv2.i = zext i32 %10 to i64
  %or.i = or i64 %shl.i, %conv2.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %or.i)
  %tobool14.not = icmp eq i64 %or.i, 0
  br i1 %tobool14.not, label %if.then15, label %if.else17

if.then15:                                        ; preds = %if.end10
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %11 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %tb.i, align 8
  %nhi.i = getelementptr inbounds %struct.tb, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %nhi.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %nhi.i, align 4
  %pdev.i = getelementptr inbounds %struct.tb_nhi, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %pdev.i, align 4
  %tobool.not7.i.i = icmp eq ptr %16, null
  br i1 %tobool.not7.i.i, label %if.then15.nvm_authenticate_start_dma_port.exit_crit_edge, label %if.then15.while.body.i.i_crit_edge

if.then15.while.body.i.i_crit_edge:               ; preds = %if.then15
  br label %while.body.i.i

if.then15.nvm_authenticate_start_dma_port.exit_crit_edge: ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #18
  br label %nvm_authenticate_start_dma_port.exit

while.body.i.i:                                   ; preds = %pci_upstream_bridge.exit.i.i.while.body.i.i_crit_edge, %if.then15.while.body.i.i_crit_edge
  %dev.addr.08.i.i = phi ptr [ %32, %pci_upstream_bridge.exit.i.i.while.body.i.i_crit_edge ], [ %16, %if.then15.while.body.i.i_crit_edge ]
  %pcie_cap.i.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.08.i.i, i32 0, i32 19
  %17 = ptrtoint ptr %pcie_cap.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %pcie_cap.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool.i.not.i.i = icmp eq i8 %18, 0
  br i1 %tobool.i.not.i.i, label %while.body.i.i.if.end.i.i_crit_edge, label %land.lhs.true.i.i

while.body.i.i.if.end.i.i_crit_edge:              ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i

land.lhs.true.i.i:                                ; preds = %while.body.i.i
  %pcie_flags_reg.i.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.08.i.i, i32 0, i32 25
  %19 = ptrtoint ptr %pcie_flags_reg.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %pcie_flags_reg.i.i.i.i, align 2
  %21 = and i16 %20, 240
  call void @__sanitizer_cov_trace_const_cmp2(i16 64, i16 %21)
  %cmp.i.i = icmp eq i16 %21, 64
  br i1 %cmp.i.i, label %if.then.i, label %land.lhs.true.i.i.if.end.i.i_crit_edge

land.lhs.true.i.i.if.end.i.i_crit_edge:           ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i.if.end.i.i_crit_edge, %while.body.i.i.if.end.i.i_crit_edge
  %is_virtfn.i.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.08.i.i, i32 0, i32 49
  %22 = ptrtoint ptr %is_virtfn.i.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %22, i32 5)
  %bf.load.i.i.i.i = load i40, ptr %is_virtfn.i.i.i.i, align 1
  %23 = and i40 %bf.load.i.i.i.i, 65536
  %tobool.not.i.i.i.i = icmp eq i40 %23, 0
  br i1 %tobool.not.i.i.i.i, label %if.end.i.i.pci_physfn.exit.i.i.i_crit_edge, label %if.then.i.i.i.i

if.end.i.i.pci_physfn.exit.i.i.i_crit_edge:       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pci_physfn.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %24 = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.08.i.i, i32 0, i32 66
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %24, align 8
  br label %pci_physfn.exit.i.i.i

pci_physfn.exit.i.i.i:                            ; preds = %if.then.i.i.i.i, %if.end.i.i.pci_physfn.exit.i.i.i_crit_edge
  %dev.addr.0.i.i.i.i = phi ptr [ %26, %if.then.i.i.i.i ], [ %dev.addr.08.i.i, %if.end.i.i.pci_physfn.exit.i.i.i_crit_edge ]
  %bus.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.0.i.i.i.i, i32 0, i32 1
  %27 = ptrtoint ptr %bus.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %bus.i.i.i, align 8
  %parent.i.i.i.i = getelementptr inbounds %struct.pci_bus, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %parent.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %parent.i.i.i.i, align 8
  %tobool.not.i5.i.i.i = icmp eq ptr %30, null
  br i1 %tobool.not.i5.i.i.i, label %pci_physfn.exit.i.i.i.nvm_authenticate_start_dma_port.exit_crit_edge, label %pci_upstream_bridge.exit.i.i

pci_physfn.exit.i.i.i.nvm_authenticate_start_dma_port.exit_crit_edge: ; preds = %pci_physfn.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nvm_authenticate_start_dma_port.exit

pci_upstream_bridge.exit.i.i:                     ; preds = %pci_physfn.exit.i.i.i
  %self.i.i.i = getelementptr inbounds %struct.pci_bus, ptr %28, i32 0, i32 4
  %31 = ptrtoint ptr %self.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %self.i.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %32, null
  br i1 %tobool.not.i.i, label %pci_upstream_bridge.exit.i.i.nvm_authenticate_start_dma_port.exit_crit_edge, label %pci_upstream_bridge.exit.i.i.while.body.i.i_crit_edge

pci_upstream_bridge.exit.i.i.while.body.i.i_crit_edge: ; preds = %pci_upstream_bridge.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body.i.i

pci_upstream_bridge.exit.i.i.nvm_authenticate_start_dma_port.exit_crit_edge: ; preds = %pci_upstream_bridge.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nvm_authenticate_start_dma_port.exit

if.then.i:                                        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %usage_count.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.08.i.i, i32 0, i32 44, i32 12, i32 13
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage_count.i.i, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %usage_count.i.i, i32 1, i32 3, i32 1) #16
  %33 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %usage_count.i.i, ptr %usage_count.i.i, i32 1, ptr elementtype(i32) %usage_count.i.i) #16, !srcloc !452
  br label %nvm_authenticate_start_dma_port.exit

nvm_authenticate_start_dma_port.exit:             ; preds = %if.then.i, %pci_upstream_bridge.exit.i.i.nvm_authenticate_start_dma_port.exit_crit_edge, %pci_physfn.exit.i.i.i.nvm_authenticate_start_dma_port.exit_crit_edge, %if.then15.nvm_authenticate_start_dma_port.exit_crit_edge
  %safe_mode.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 24
  %34 = ptrtoint ptr %safe_mode.i to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %safe_mode.i, align 1, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %35)
  %tobool.not.i = icmp eq i8 %35, 0
  br i1 %tobool.not.i, label %if.then.i33, label %nvm_authenticate_start_dma_port.exit.if.end17.i_crit_edge

nvm_authenticate_start_dma_port.exit.if.end17.i_crit_edge: ; preds = %nvm_authenticate_start_dma_port.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17.i

if.then.i33:                                      ; preds = %nvm_authenticate_start_dma_port.exit
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %status.i) #16
  %36 = ptrtoint ptr %status.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 -1, ptr %status.i, align 4, !annotation !447
  %37 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %tb.i, align 8
  %call.i = tail call i32 @tb_domain_disconnect_all_paths(ptr noundef %38) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool1.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool1.not.i, label %if.end.i, label %if.then.i33.cleanup.i_crit_edge

if.then.i33.cleanup.i_crit_edge:                  ; preds = %if.then.i33
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.i

if.end.i:                                         ; preds = %if.then.i33
  %dma_port.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 3
  %39 = ptrtoint ptr %dma_port.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %dma_port.i, align 8
  %call3.i = tail call i32 @dma_port_flash_update_auth(ptr noundef %40) #16
  %41 = zext i32 %call3.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %41, ptr @__sancov_gen_cov_switch_values.213)
  switch i32 %call3.i, label %do.body.i [
    i32 0, label %if.end.i.cleanup.i_crit_edge
    i32 -110, label %if.end.i.cleanup.i_crit_edge59
  ]

if.end.i.cleanup.i_crit_edge59:                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.i

if.end.i.cleanup.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.i

do.body.i:                                        ; preds = %if.end.i
  %42 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %tb.i, align 8
  %nhi.i34 = getelementptr inbounds %struct.tb, ptr %43, i32 0, i32 2
  %44 = ptrtoint ptr %nhi.i34 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %nhi.i34, align 4
  %pdev.i35 = getelementptr inbounds %struct.tb_nhi, ptr %45, i32 0, i32 1
  %46 = ptrtoint ptr %pdev.i35 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %pdev.i35, align 4
  %dev.i = getelementptr inbounds %struct.pci_dev, ptr %47, i32 0, i32 44
  %48 = ptrtoint ptr %thunderbolt_version.i to i32
  call void @__asan_loadN_noabort(i32 %48, i32 8)
  %bf.load.i.i = load i64, ptr %thunderbolt_version.i, align 4
  %49 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %49, 9223372032559808512
  %50 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %route_lo.i, align 8
  %conv2.i.i = zext i32 %51 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev.i, ptr noundef nonnull @.str.146, i64 noundef %or.i.i) #19
  %52 = ptrtoint ptr %dma_port.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %dma_port.i, align 8
  %call13.i = call i32 @dma_port_flash_update_auth_status(ptr noundef %53, ptr noundef nonnull %status.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %cmp14.i = icmp sgt i32 %call13.i, 0
  br i1 %cmp14.i, label %if.then15.i, label %do.body.i.cleanup.thread.i_crit_edge

do.body.i.cleanup.thread.i_crit_edge:             ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.thread.i

if.then15.i:                                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %54 = ptrtoint ptr %status.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %status.i, align 4
  call fastcc void @nvm_set_auth_status(ptr noundef %sw, i32 noundef %55) #16
  br label %cleanup.thread.i

cleanup.thread.i:                                 ; preds = %if.then15.i, %do.body.i.cleanup.thread.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %status.i) #16
  br label %if.end17.i

cleanup.i:                                        ; preds = %if.end.i.cleanup.i_crit_edge, %if.end.i.cleanup.i_crit_edge59, %if.then.i33.cleanup.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %status.i) #16
  br label %cleanup

if.end17.i:                                       ; preds = %cleanup.thread.i, %nvm_authenticate_start_dma_port.exit.if.end17.i_crit_edge
  %ret.1.i = phi i32 [ 0, %nvm_authenticate_start_dma_port.exit.if.end17.i_crit_edge ], [ %call3.i, %cleanup.thread.i ]
  %dma_port18.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 3
  %56 = ptrtoint ptr %dma_port18.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %dma_port18.i, align 8
  %call19.i = call i32 @dma_port_power_cycle(ptr noundef %57) #16
  br label %cleanup

if.else17:                                        ; preds = %if.end10
  %dma_port.i37 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 3
  %58 = ptrtoint ptr %dma_port.i37 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %dma_port.i37, align 8
  %call.i38 = tail call i32 @dma_port_flash_update_auth(ptr noundef %59) #16
  %60 = zext i32 %call.i38 to i64
  call void @__sanitizer_cov_trace_switch(i64 %60, ptr @__sancov_gen_cov_switch_values.214)
  switch i32 %call.i38, label %if.else17.cleanup_crit_edge [
    i32 0, label %if.else17.sw.epilog.i_crit_edge
    i32 -110, label %if.else17.sw.epilog.i_crit_edge60
    i32 -13, label %if.else17.sw.epilog.i_crit_edge61
    i32 -22, label %if.else17.sw.epilog.i_crit_edge62
  ]

if.else17.sw.epilog.i_crit_edge62:                ; preds = %if.else17
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.i

if.else17.sw.epilog.i_crit_edge61:                ; preds = %if.else17
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.i

if.else17.sw.epilog.i_crit_edge60:                ; preds = %if.else17
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.i

if.else17.sw.epilog.i_crit_edge:                  ; preds = %if.else17
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.i

if.else17.cleanup_crit_edge:                      ; preds = %if.else17
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.epilog.i:                                      ; preds = %if.else17.sw.epilog.i_crit_edge, %if.else17.sw.epilog.i_crit_edge60, %if.else17.sw.epilog.i_crit_edge61, %if.else17.sw.epilog.i_crit_edge62
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %status.i36) #16
  %61 = ptrtoint ptr %status.i36 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 -1, ptr %status.i36, align 4, !annotation !447
  %62 = ptrtoint ptr %dma_port.i37 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %dma_port.i37, align 8
  %call2.i = call i32 @dma_port_flash_update_auth_status(ptr noundef %63, ptr noundef nonnull %status.i36) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call2.i)
  %cmp.i39 = icmp sgt i32 %call2.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -110, i32 %call2.i)
  %cmp3.not.i = icmp eq i32 %call2.i, -110
  %or.cond.i = or i1 %cmp.i39, %cmp3.not.i
  br i1 %or.cond.i, label %if.end.i40, label %sw.epilog.i.cleanup.thread.i52_crit_edge

sw.epilog.i.cleanup.thread.i52_crit_edge:         ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.thread.i52

if.end.i40:                                       ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %cmp4.i = icmp sgt i32 %call2.i, 0
  br i1 %cmp4.i, label %if.end.i40.if.then5.i_crit_edge, label %do.cond28.i

if.end.i40.if.then5.i_crit_edge:                  ; preds = %if.end.i40
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then5.i

if.then5.i:                                       ; preds = %if.end.9.i.if.then5.i_crit_edge, %if.end.8.i.if.then5.i_crit_edge, %if.end.7.i.if.then5.i_crit_edge, %if.end.6.i.if.then5.i_crit_edge, %if.end.5.i.if.then5.i_crit_edge, %if.end.4.i.if.then5.i_crit_edge, %if.end.3.i.if.then5.i_crit_edge, %if.end.2.i.if.then5.i_crit_edge, %if.end.1.i.if.then5.i_crit_edge, %if.end.i40.if.then5.i_crit_edge
  %64 = ptrtoint ptr %status.i36 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %status.i36, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool.not.i41 = icmp eq i32 %65, 0
  br i1 %tobool.not.i41, label %if.then5.i.do.body13.i_crit_edge, label %do.body7.i

if.then5.i.do.body13.i_crit_edge:                 ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body13.i

do.body7.i:                                       ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #18
  %tb.i42 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %66 = ptrtoint ptr %tb.i42 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %tb.i42, align 8
  %nhi.i43 = getelementptr inbounds %struct.tb, ptr %67, i32 0, i32 2
  %68 = ptrtoint ptr %nhi.i43 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %nhi.i43, align 4
  %pdev.i44 = getelementptr inbounds %struct.tb_nhi, ptr %69, i32 0, i32 1
  %70 = ptrtoint ptr %pdev.i44 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %pdev.i44, align 4
  %dev.i45 = getelementptr inbounds %struct.pci_dev, ptr %71, i32 0, i32 44
  %72 = ptrtoint ptr %thunderbolt_version.i to i32
  call void @__asan_loadN_noabort(i32 %72, i32 8)
  %bf.load.i.i47 = load i64, ptr %thunderbolt_version.i, align 4
  %73 = lshr i64 %bf.load.i.i47, 1
  %shl.i.i48 = and i64 %73, 9223372032559808512
  %74 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %route_lo.i, align 8
  %conv2.i.i50 = zext i32 %75 to i64
  %or.i.i51 = or i64 %shl.i.i48, %conv2.i.i50
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %dev.i45, ptr noundef nonnull @.str.148, i64 noundef %or.i.i51) #19
  %76 = ptrtoint ptr %status.i36 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %status.i36, align 4
  call fastcc void @nvm_set_auth_status(ptr noundef %sw, i32 noundef %77) #16
  br label %do.body13.i

do.body13.i:                                      ; preds = %do.body7.i, %if.then5.i.do.body13.i_crit_edge
  %tb18.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %78 = ptrtoint ptr %tb18.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %tb18.i, align 8
  %nhi19.i = getelementptr inbounds %struct.tb, ptr %79, i32 0, i32 2
  %80 = ptrtoint ptr %nhi19.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %nhi19.i, align 4
  %pdev20.i = getelementptr inbounds %struct.tb_nhi, ptr %81, i32 0, i32 1
  %82 = ptrtoint ptr %pdev20.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %pdev20.i, align 4
  %dev21.i = getelementptr inbounds %struct.pci_dev, ptr %83, i32 0, i32 44
  %84 = ptrtoint ptr %thunderbolt_version.i to i32
  call void @__asan_loadN_noabort(i32 %84, i32 8)
  %bf.load.i46.i = load i64, ptr %thunderbolt_version.i, align 4
  %85 = lshr i64 %bf.load.i46.i, 1
  %shl.i47.i = and i64 %85, 9223372032559808512
  %86 = ptrtoint ptr %route_lo.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %route_lo.i, align 8
  %conv2.i49.i = zext i32 %87 to i64
  %or.i50.i = or i64 %shl.i47.i, %conv2.i49.i
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev21.i, ptr noundef nonnull @.str.151, i64 noundef %or.i50.i) #19
  %88 = ptrtoint ptr %dma_port.i37 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %dma_port.i37, align 8
  %call26.i = call i32 @dma_port_power_cycle(ptr noundef %89) #16
  br label %cleanup.thread.i52

cleanup.thread.i52:                               ; preds = %do.cond28.8.i.cleanup.thread.i52_crit_edge, %do.cond28.7.i.cleanup.thread.i52_crit_edge, %do.cond28.6.i.cleanup.thread.i52_crit_edge, %do.cond28.5.i.cleanup.thread.i52_crit_edge, %do.cond28.4.i.cleanup.thread.i52_crit_edge, %do.cond28.3.i.cleanup.thread.i52_crit_edge, %do.cond28.2.i.cleanup.thread.i52_crit_edge, %do.cond28.1.i.cleanup.thread.i52_crit_edge, %do.cond28.i.cleanup.thread.i52_crit_edge, %do.body13.i, %sw.epilog.i.cleanup.thread.i52_crit_edge
  %retval.1.ph.i = phi i32 [ 0, %do.body13.i ], [ %call2.i, %sw.epilog.i.cleanup.thread.i52_crit_edge ], [ %call2.1.i, %do.cond28.i.cleanup.thread.i52_crit_edge ], [ %call2.2.i, %do.cond28.1.i.cleanup.thread.i52_crit_edge ], [ %call2.3.i, %do.cond28.2.i.cleanup.thread.i52_crit_edge ], [ %call2.4.i, %do.cond28.3.i.cleanup.thread.i52_crit_edge ], [ %call2.5.i, %do.cond28.4.i.cleanup.thread.i52_crit_edge ], [ %call2.6.i, %do.cond28.5.i.cleanup.thread.i52_crit_edge ], [ %call2.7.i, %do.cond28.6.i.cleanup.thread.i52_crit_edge ], [ %call2.8.i, %do.cond28.7.i.cleanup.thread.i52_crit_edge ], [ %call2.9.i, %do.cond28.8.i.cleanup.thread.i52_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %status.i36) #16
  br label %cleanup

do.cond28.i:                                      ; preds = %if.end.i40
  call void @msleep(i32 noundef 500) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %status.i36) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %status.i36) #16
  %90 = ptrtoint ptr %status.i36 to i32
  call void @__asan_store4_noabort(i32 %90)
  store i32 -1, ptr %status.i36, align 4, !annotation !447
  %91 = ptrtoint ptr %dma_port.i37 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %dma_port.i37, align 8
  %call2.1.i = call i32 @dma_port_flash_update_auth_status(ptr noundef %92, ptr noundef nonnull %status.i36) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call2.1.i)
  %cmp.1.i = icmp sgt i32 %call2.1.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -110, i32 %call2.1.i)
  %cmp3.not.1.i = icmp eq i32 %call2.1.i, -110
  %or.cond.1.i = or i1 %cmp.1.i, %cmp3.not.1.i
  br i1 %or.cond.1.i, label %if.end.1.i, label %do.cond28.i.cleanup.thread.i52_crit_edge

do.cond28.i.cleanup.thread.i52_crit_edge:         ; preds = %do.cond28.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.thread.i52

if.end.1.i:                                       ; preds = %do.cond28.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.1.i)
  %cmp4.1.i = icmp sgt i32 %call2.1.i, 0
  br i1 %cmp4.1.i, label %if.end.1.i.if.then5.i_crit_edge, label %do.cond28.1.i

if.end.1.i.if.then5.i_crit_edge:                  ; preds = %if.end.1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then5.i

do.cond28.1.i:                                    ; preds = %if.end.1.i
  call void @msleep(i32 noundef 500) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %status.i36) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %status.i36) #16
  %93 = ptrtoint ptr %status.i36 to i32
  call void @__asan_store4_noabort(i32 %93)
  store i32 -1, ptr %status.i36, align 4, !annotation !447
  %94 = ptrtoint ptr %dma_port.i37 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %dma_port.i37, align 8
  %call2.2.i = call i32 @dma_port_flash_update_auth_status(ptr noundef %95, ptr noundef nonnull %status.i36) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call2.2.i)
  %cmp.2.i = icmp sgt i32 %call2.2.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -110, i32 %call2.2.i)
  %cmp3.not.2.i = icmp eq i32 %call2.2.i, -110
  %or.cond.2.i = or i1 %cmp.2.i, %cmp3.not.2.i
  br i1 %or.cond.2.i, label %if.end.2.i, label %do.cond28.1.i.cleanup.thread.i52_crit_edge

do.cond28.1.i.cleanup.thread.i52_crit_edge:       ; preds = %do.cond28.1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.thread.i52

if.end.2.i:                                       ; preds = %do.cond28.1.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.2.i)
  %cmp4.2.i = icmp sgt i32 %call2.2.i, 0
  br i1 %cmp4.2.i, label %if.end.2.i.if.then5.i_crit_edge, label %do.cond28.2.i

if.end.2.i.if.then5.i_crit_edge:                  ; preds = %if.end.2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then5.i

do.cond28.2.i:                                    ; preds = %if.end.2.i
  call void @msleep(i32 noundef 500) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %status.i36) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %status.i36) #16
  %96 = ptrtoint ptr %status.i36 to i32
  call void @__asan_store4_noabort(i32 %96)
  store i32 -1, ptr %status.i36, align 4, !annotation !447
  %97 = ptrtoint ptr %dma_port.i37 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %dma_port.i37, align 8
  %call2.3.i = call i32 @dma_port_flash_update_auth_status(ptr noundef %98, ptr noundef nonnull %status.i36) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call2.3.i)
  %cmp.3.i = icmp sgt i32 %call2.3.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -110, i32 %call2.3.i)
  %cmp3.not.3.i = icmp eq i32 %call2.3.i, -110
  %or.cond.3.i = or i1 %cmp.3.i, %cmp3.not.3.i
  br i1 %or.cond.3.i, label %if.end.3.i, label %do.cond28.2.i.cleanup.thread.i52_crit_edge

do.cond28.2.i.cleanup.thread.i52_crit_edge:       ; preds = %do.cond28.2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.thread.i52

if.end.3.i:                                       ; preds = %do.cond28.2.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.3.i)
  %cmp4.3.i = icmp sgt i32 %call2.3.i, 0
  br i1 %cmp4.3.i, label %if.end.3.i.if.then5.i_crit_edge, label %do.cond28.3.i

if.end.3.i.if.then5.i_crit_edge:                  ; preds = %if.end.3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then5.i

do.cond28.3.i:                                    ; preds = %if.end.3.i
  call void @msleep(i32 noundef 500) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %status.i36) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %status.i36) #16
  %99 = ptrtoint ptr %status.i36 to i32
  call void @__asan_store4_noabort(i32 %99)
  store i32 -1, ptr %status.i36, align 4, !annotation !447
  %100 = ptrtoint ptr %dma_port.i37 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %dma_port.i37, align 8
  %call2.4.i = call i32 @dma_port_flash_update_auth_status(ptr noundef %101, ptr noundef nonnull %status.i36) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call2.4.i)
  %cmp.4.i = icmp sgt i32 %call2.4.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -110, i32 %call2.4.i)
  %cmp3.not.4.i = icmp eq i32 %call2.4.i, -110
  %or.cond.4.i = or i1 %cmp.4.i, %cmp3.not.4.i
  br i1 %or.cond.4.i, label %if.end.4.i, label %do.cond28.3.i.cleanup.thread.i52_crit_edge

do.cond28.3.i.cleanup.thread.i52_crit_edge:       ; preds = %do.cond28.3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.thread.i52

if.end.4.i:                                       ; preds = %do.cond28.3.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.4.i)
  %cmp4.4.i = icmp sgt i32 %call2.4.i, 0
  br i1 %cmp4.4.i, label %if.end.4.i.if.then5.i_crit_edge, label %do.cond28.4.i

if.end.4.i.if.then5.i_crit_edge:                  ; preds = %if.end.4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then5.i

do.cond28.4.i:                                    ; preds = %if.end.4.i
  call void @msleep(i32 noundef 500) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %status.i36) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %status.i36) #16
  %102 = ptrtoint ptr %status.i36 to i32
  call void @__asan_store4_noabort(i32 %102)
  store i32 -1, ptr %status.i36, align 4, !annotation !447
  %103 = ptrtoint ptr %dma_port.i37 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %dma_port.i37, align 8
  %call2.5.i = call i32 @dma_port_flash_update_auth_status(ptr noundef %104, ptr noundef nonnull %status.i36) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call2.5.i)
  %cmp.5.i = icmp sgt i32 %call2.5.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -110, i32 %call2.5.i)
  %cmp3.not.5.i = icmp eq i32 %call2.5.i, -110
  %or.cond.5.i = or i1 %cmp.5.i, %cmp3.not.5.i
  br i1 %or.cond.5.i, label %if.end.5.i, label %do.cond28.4.i.cleanup.thread.i52_crit_edge

do.cond28.4.i.cleanup.thread.i52_crit_edge:       ; preds = %do.cond28.4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.thread.i52

if.end.5.i:                                       ; preds = %do.cond28.4.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.5.i)
  %cmp4.5.i = icmp sgt i32 %call2.5.i, 0
  br i1 %cmp4.5.i, label %if.end.5.i.if.then5.i_crit_edge, label %do.cond28.5.i

if.end.5.i.if.then5.i_crit_edge:                  ; preds = %if.end.5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then5.i

do.cond28.5.i:                                    ; preds = %if.end.5.i
  call void @msleep(i32 noundef 500) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %status.i36) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %status.i36) #16
  %105 = ptrtoint ptr %status.i36 to i32
  call void @__asan_store4_noabort(i32 %105)
  store i32 -1, ptr %status.i36, align 4, !annotation !447
  %106 = ptrtoint ptr %dma_port.i37 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %dma_port.i37, align 8
  %call2.6.i = call i32 @dma_port_flash_update_auth_status(ptr noundef %107, ptr noundef nonnull %status.i36) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call2.6.i)
  %cmp.6.i = icmp sgt i32 %call2.6.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -110, i32 %call2.6.i)
  %cmp3.not.6.i = icmp eq i32 %call2.6.i, -110
  %or.cond.6.i = or i1 %cmp.6.i, %cmp3.not.6.i
  br i1 %or.cond.6.i, label %if.end.6.i, label %do.cond28.5.i.cleanup.thread.i52_crit_edge

do.cond28.5.i.cleanup.thread.i52_crit_edge:       ; preds = %do.cond28.5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.thread.i52

if.end.6.i:                                       ; preds = %do.cond28.5.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.6.i)
  %cmp4.6.i = icmp sgt i32 %call2.6.i, 0
  br i1 %cmp4.6.i, label %if.end.6.i.if.then5.i_crit_edge, label %do.cond28.6.i

if.end.6.i.if.then5.i_crit_edge:                  ; preds = %if.end.6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then5.i

do.cond28.6.i:                                    ; preds = %if.end.6.i
  call void @msleep(i32 noundef 500) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %status.i36) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %status.i36) #16
  %108 = ptrtoint ptr %status.i36 to i32
  call void @__asan_store4_noabort(i32 %108)
  store i32 -1, ptr %status.i36, align 4, !annotation !447
  %109 = ptrtoint ptr %dma_port.i37 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %dma_port.i37, align 8
  %call2.7.i = call i32 @dma_port_flash_update_auth_status(ptr noundef %110, ptr noundef nonnull %status.i36) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call2.7.i)
  %cmp.7.i = icmp sgt i32 %call2.7.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -110, i32 %call2.7.i)
  %cmp3.not.7.i = icmp eq i32 %call2.7.i, -110
  %or.cond.7.i = or i1 %cmp.7.i, %cmp3.not.7.i
  br i1 %or.cond.7.i, label %if.end.7.i, label %do.cond28.6.i.cleanup.thread.i52_crit_edge

do.cond28.6.i.cleanup.thread.i52_crit_edge:       ; preds = %do.cond28.6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.thread.i52

if.end.7.i:                                       ; preds = %do.cond28.6.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.7.i)
  %cmp4.7.i = icmp sgt i32 %call2.7.i, 0
  br i1 %cmp4.7.i, label %if.end.7.i.if.then5.i_crit_edge, label %do.cond28.7.i

if.end.7.i.if.then5.i_crit_edge:                  ; preds = %if.end.7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then5.i

do.cond28.7.i:                                    ; preds = %if.end.7.i
  call void @msleep(i32 noundef 500) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %status.i36) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %status.i36) #16
  %111 = ptrtoint ptr %status.i36 to i32
  call void @__asan_store4_noabort(i32 %111)
  store i32 -1, ptr %status.i36, align 4, !annotation !447
  %112 = ptrtoint ptr %dma_port.i37 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %dma_port.i37, align 8
  %call2.8.i = call i32 @dma_port_flash_update_auth_status(ptr noundef %113, ptr noundef nonnull %status.i36) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call2.8.i)
  %cmp.8.i = icmp sgt i32 %call2.8.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -110, i32 %call2.8.i)
  %cmp3.not.8.i = icmp eq i32 %call2.8.i, -110
  %or.cond.8.i = or i1 %cmp.8.i, %cmp3.not.8.i
  br i1 %or.cond.8.i, label %if.end.8.i, label %do.cond28.7.i.cleanup.thread.i52_crit_edge

do.cond28.7.i.cleanup.thread.i52_crit_edge:       ; preds = %do.cond28.7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.thread.i52

if.end.8.i:                                       ; preds = %do.cond28.7.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.8.i)
  %cmp4.8.i = icmp sgt i32 %call2.8.i, 0
  br i1 %cmp4.8.i, label %if.end.8.i.if.then5.i_crit_edge, label %do.cond28.8.i

if.end.8.i.if.then5.i_crit_edge:                  ; preds = %if.end.8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then5.i

do.cond28.8.i:                                    ; preds = %if.end.8.i
  call void @msleep(i32 noundef 500) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %status.i36) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %status.i36) #16
  %114 = ptrtoint ptr %status.i36 to i32
  call void @__asan_store4_noabort(i32 %114)
  store i32 -1, ptr %status.i36, align 4, !annotation !447
  %115 = ptrtoint ptr %dma_port.i37 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %dma_port.i37, align 8
  %call2.9.i = call i32 @dma_port_flash_update_auth_status(ptr noundef %116, ptr noundef nonnull %status.i36) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call2.9.i)
  %cmp.9.i = icmp sgt i32 %call2.9.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -110, i32 %call2.9.i)
  %cmp3.not.9.i = icmp eq i32 %call2.9.i, -110
  %or.cond.9.i = or i1 %cmp.9.i, %cmp3.not.9.i
  br i1 %or.cond.9.i, label %if.end.9.i, label %do.cond28.8.i.cleanup.thread.i52_crit_edge

do.cond28.8.i.cleanup.thread.i52_crit_edge:       ; preds = %do.cond28.8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.thread.i52

if.end.9.i:                                       ; preds = %do.cond28.8.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.9.i)
  %cmp4.9.i = icmp sgt i32 %call2.9.i, 0
  br i1 %cmp4.9.i, label %if.end.9.i.if.then5.i_crit_edge, label %do.cond28.9.i

if.end.9.i.if.then5.i_crit_edge:                  ; preds = %if.end.9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then5.i

do.cond28.9.i:                                    ; preds = %if.end.9.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @msleep(i32 noundef 500) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %status.i36) #16
  br label %cleanup

cleanup:                                          ; preds = %do.cond28.9.i, %cleanup.thread.i52, %if.else17.cleanup_crit_edge, %if.end17.i, %cleanup.i, %if.else.cleanup_crit_edge, %if.end5, %if.then1.cleanup_crit_edge
  %retval.0 = phi i32 [ %call6, %if.end5 ], [ %call2, %if.then1.cleanup_crit_edge ], [ -95, %if.else.cleanup_crit_edge ], [ %ret.1.i, %if.end17.i ], [ %call.i, %cleanup.i ], [ %call.i38, %if.else17.cleanup_crit_edge ], [ %retval.1.ph.i, %cleanup.thread.i52 ], [ -110, %do.cond28.9.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nvm_validate_and_write(ptr noundef %sw) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %nvm = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 22
  %0 = ptrtoint ptr %nvm to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %nvm, align 8
  %buf1 = getelementptr inbounds %struct.tb_nvm, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %buf1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %buf1, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.cleanup49_crit_edge, label %if.end

entry.cleanup49_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup49

if.end:                                           ; preds = %entry
  %buf_data_size = getelementptr inbounds %struct.tb_nvm, ptr %1, i32 0, i32 7
  %4 = ptrtoint ptr %buf_data_size to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %buf_data_size, align 4
  %6 = add i32 %5, -524289
  call void @__sanitizer_cov_trace_const_cmp4(i32 -491521, i32 %6)
  %7 = icmp ult i32 %6, -491521
  br i1 %7, label %if.end.cleanup49_crit_edge, label %if.end5

if.end.cleanup49_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup49

if.end5:                                          ; preds = %if.end
  %8 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %3, align 4
  %and = and i32 %9, 16777215
  %add6 = add nuw nsw i32 %and, 7
  call void @__sanitizer_cov_trace_cmp4(i32 %add6, i32 %5)
  %cmp7.not = icmp ult i32 %add6, %5
  %and10 = and i32 %9, 4095
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10)
  %cmp11 = icmp eq i32 %and10, 0
  %or.cond85 = select i1 %cmp7.not, i1 %cmp11, i1 false
  br i1 %or.cond85, label %if.end13, label %if.end5.cleanup49_crit_edge

if.end5.cleanup49_crit_edge:                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup49

if.end13:                                         ; preds = %if.end5
  %add.ptr = getelementptr i8, ptr %3, i32 %and
  %10 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %add.ptr, align 2
  %conv = zext i16 %11 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %conv)
  %cmp14.not = icmp ugt i32 %5, %conv
  br i1 %cmp14.not, label %if.end17, label %if.end13.cleanup49_crit_edge

if.end13.cleanup49_crit_edge:                     ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup49

if.end17:                                         ; preds = %if.end13
  %safe_mode = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 24
  %12 = ptrtoint ptr %safe_mode to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %safe_mode, align 1, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool18.not = icmp eq i8 %13, 0
  br i1 %tobool18.not, label %if.then19, label %if.end17.if.end38_crit_edge

if.end17.if.end38_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end38

if.then19:                                        ; preds = %if.end17
  %add.ptr21 = getelementptr i8, ptr %add.ptr, i32 5
  %14 = ptrtoint ptr %add.ptr21 to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %add.ptr21, align 2
  %device_id23 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 1
  %16 = ptrtoint ptr %device_id23 to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %device_id23, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %15, i16 %17)
  %cmp25.not = icmp eq i16 %15, %17
  br i1 %cmp25.not, label %if.end28, label %if.then19.cleanup49_crit_edge

if.then19.cleanup49_crit_edge:                    ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup49

if.end28:                                         ; preds = %if.then19
  %generation = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 15
  %18 = ptrtoint ptr %generation to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %generation, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %19)
  %cmp29 = icmp ult i32 %19, 3
  br i1 %cmp29, label %if.then31, label %if.end28.cleanup_crit_edge

if.end28.cleanup_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then31:                                        ; preds = %if.end28
  %dma_port = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 3
  %20 = ptrtoint ptr %dma_port to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %dma_port, align 8
  %add.ptr32 = getelementptr i8, ptr %3, i32 16
  %call = tail call i32 @dma_port_flash_write(ptr noundef %21, i32 noundef 4194303, ptr noundef %add.ptr32, i32 noundef 128) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool33.not = icmp eq i32 %call, 0
  br i1 %tobool33.not, label %if.then31.cleanup_crit_edge, label %if.then31.cleanup49_crit_edge

if.then31.cleanup49_crit_edge:                    ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup49

if.then31.cleanup_crit_edge:                      ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup:                                          ; preds = %if.then31.cleanup_crit_edge, %if.end28.cleanup_crit_edge
  %sub = sub nsw i32 %5, %and
  br label %if.end38

if.end38:                                         ; preds = %cleanup, %if.end17.if.end38_crit_edge
  %image_size.1 = phi i32 [ %5, %if.end17.if.end38_crit_edge ], [ %sub, %cleanup ]
  %buf.1 = phi ptr [ %3, %if.end17.if.end38_crit_edge ], [ %add.ptr, %cleanup ]
  %thunderbolt_version.i = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 1, i32 4
  %22 = ptrtoint ptr %thunderbolt_version.i to i32
  call void @__asan_loadN_noabort(i32 %22, i32 8)
  %bf.load.i = load i64, ptr %thunderbolt_version.i, align 4
  %bf.cast1.i = and i64 %bf.load.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i)
  %cmp.i = icmp eq i64 %bf.cast1.i, 32
  br i1 %cmp.i, label %if.then40, label %if.else

if.then40:                                        ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #18
  %call41 = tail call i32 @usb4_switch_nvm_write(ptr noundef %sw, i32 noundef 0, ptr noundef %buf.1, i32 noundef %image_size.1) #16
  br label %if.end44

if.else:                                          ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #18
  %dma_port42 = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 3
  %23 = ptrtoint ptr %dma_port42 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %dma_port42, align 8
  %call43 = tail call i32 @dma_port_flash_write(ptr noundef %24, i32 noundef 0, ptr noundef %buf.1, i32 noundef %image_size.1) #16
  br label %if.end44

if.end44:                                         ; preds = %if.else, %if.then40
  %ret.0 = phi i32 [ %call41, %if.then40 ], [ %call43, %if.else ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool45.not = icmp eq i32 %ret.0, 0
  br i1 %tobool45.not, label %if.then46, label %if.end44.cleanup49_crit_edge

if.end44.cleanup49_crit_edge:                     ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup49

if.then46:                                        ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #18
  %25 = ptrtoint ptr %nvm to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %nvm, align 8
  %flushed = getelementptr inbounds %struct.tb_nvm, ptr %26, i32 0, i32 9
  %27 = ptrtoint ptr %flushed to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 1, ptr %flushed, align 1
  br label %cleanup49

cleanup49:                                        ; preds = %if.then46, %if.end44.cleanup49_crit_edge, %if.then31.cleanup49_crit_edge, %if.then19.cleanup49_crit_edge, %if.end13.cleanup49_crit_edge, %if.end5.cleanup49_crit_edge, %if.end.cleanup49_crit_edge, %entry.cleanup49_crit_edge
  %retval.1 = phi i32 [ -22, %entry.cleanup49_crit_edge ], [ -22, %if.end.cleanup49_crit_edge ], [ -22, %if.end5.cleanup49_crit_edge ], [ -22, %if.end13.cleanup49_crit_edge ], [ 0, %if.then46 ], [ %ret.0, %if.end44.cleanup49_crit_edge ], [ %call, %if.then31.cleanup49_crit_edge ], [ -22, %if.then19.cleanup49_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_lc_force_power(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb4_switch_nvm_set_offset(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb4_switch_nvm_authenticate(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #14

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_domain_disconnect_all_paths(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_port_flash_update_auth(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_port_flash_update_auth_status(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @nvm_set_auth_status(ptr nocapture noundef readonly %sw, i32 noundef %status) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %uuid = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 7
  %0 = ptrtoint ptr %uuid to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %uuid, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %do.end, label %if.end23, !prof !448

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 69, i32 noundef 9, ptr noundef null) #16
  br label %cleanup

if.end23:                                         ; preds = %entry
  tail call void @mutex_lock_nested(ptr noundef nonnull @nvm_auth_status_lock, i32 noundef 0) #16
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %if.end23
  %st.0.in.i = phi ptr [ @nvm_auth_status_cache, %if.end23 ], [ %st.0.i, %for.body.i.for.cond.i_crit_edge ]
  %2 = ptrtoint ptr %st.0.in.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %st.0.i = load ptr, ptr %st.0.in.i, align 4
  %cmp.not.i = icmp eq ptr %st.0.i, @nvm_auth_status_cache
  br i1 %cmp.not.i, label %for.cond.i.if.then25_crit_edge, label %for.body.i

for.cond.i.if.then25_crit_edge:                   ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then25

for.body.i:                                       ; preds = %for.cond.i
  %uuid.i = getelementptr inbounds %struct.nvm_auth_status, ptr %st.0.i, i32 0, i32 1
  %3 = ptrtoint ptr %uuid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %uuid, align 8
  %bcmp.i.i = tail call i32 @bcmp(ptr noundef dereferenceable(16) %uuid.i, ptr noundef dereferenceable(16) %4, i32 16) #22
  %cmp.i.i = icmp eq i32 %bcmp.i.i, 0
  br i1 %cmp.i.i, label %__nvm_get_auth_status.exit, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i

__nvm_get_auth_status.exit:                       ; preds = %for.body.i
  %tobool24.not = icmp eq ptr %st.0.i, null
  br i1 %tobool24.not, label %__nvm_get_auth_status.exit.if.then25_crit_edge, label %__nvm_get_auth_status.exit.if.end33_crit_edge

__nvm_get_auth_status.exit.if.end33_crit_edge:    ; preds = %__nvm_get_auth_status.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end33

__nvm_get_auth_status.exit.if.then25_crit_edge:   ; preds = %__nvm_get_auth_status.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then25

if.then25:                                        ; preds = %__nvm_get_auth_status.exit.if.then25_crit_edge, %for.cond.i.if.then25_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %5 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %5, i32 noundef 3520, i32 noundef 28) #20
  %tobool27.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool27.not, label %if.then25.unlock_crit_edge, label %if.end29

if.then25.unlock_crit_edge:                       ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock

if.end29:                                         ; preds = %if.then25
  %uuid30 = getelementptr inbounds %struct.nvm_auth_status, ptr %call7.i.i, i32 0, i32 1
  %6 = ptrtoint ptr %uuid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %uuid, align 8
  %8 = call ptr @memcpy(ptr %uuid30, ptr %7, i32 16)
  %9 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %call7.i.i, ptr %call7.i.i, align 8
  %prev.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %call7.i.i, ptr %prev.i, align 4
  %11 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @nvm_auth_status_cache, i32 0, i32 1), align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i, ptr noundef %11, ptr noundef nonnull @nvm_auth_status_cache) #16
  br i1 %call.i.i, label %if.end.i.i, label %if.end29.if.end33_crit_edge

if.end29.if.end33_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end33

if.end.i.i:                                       ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #18
  store ptr %call7.i.i, ptr getelementptr inbounds (%struct.list_head, ptr @nvm_auth_status_cache, i32 0, i32 1), align 4
  %12 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr @nvm_auth_status_cache, ptr %call7.i.i, align 8
  %13 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %11, ptr %prev.i, align 4
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %call7.i.i, ptr %11, align 4
  br label %if.end33

if.end33:                                         ; preds = %if.end.i.i, %if.end29.if.end33_crit_edge, %__nvm_get_auth_status.exit.if.end33_crit_edge
  %st.0 = phi ptr [ %st.0.i, %__nvm_get_auth_status.exit.if.end33_crit_edge ], [ %call7.i.i, %if.end29.if.end33_crit_edge ], [ %call7.i.i, %if.end.i.i ]
  %status34 = getelementptr inbounds %struct.nvm_auth_status, ptr %st.0, i32 0, i32 2
  %15 = ptrtoint ptr %status34 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %status, ptr %status34, align 4
  br label %unlock

unlock:                                           ; preds = %if.end33, %if.then25.unlock_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @nvm_auth_status_lock) #16
  br label %cleanup

cleanup:                                          ; preds = %unlock, %do.end
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_port_power_cycle(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_port_flash_write(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb4_switch_nvm_write(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nvm_version_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %1, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %dev, ptr null
  %tb = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 5
  %2 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tb, align 8
  %lock = getelementptr inbounds %struct.tb, ptr %3, i32 0, i32 1
  %call1 = tail call i32 @mutex_trylock(ptr noundef %lock) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %4 = tail call i32 @llvm.read_register.i32(metadata !435) #16
  %and.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task.i, align 8
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %stack.i.i, align 4
  tail call void @_set_bit(i32 noundef 0, ptr noundef %9) #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %safe_mode = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 24
  %10 = ptrtoint ptr %safe_mode to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %safe_mode, align 1, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool3.not = icmp eq i8 %11, 0
  br i1 %tobool3.not, label %if.else, label %if.end.if.end13_crit_edge

if.end.if.end13_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

if.else:                                          ; preds = %if.end
  %nvm = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 22
  %12 = ptrtoint ptr %nvm to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %nvm, align 8
  %tobool5.not = icmp eq ptr %13, null
  br i1 %tobool5.not, label %if.else.if.end13_crit_edge, label %if.else7

if.else.if.end13_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

if.else7:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %major = getelementptr inbounds %struct.tb_nvm, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %major to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %major, align 4
  %conv = zext i8 %15 to i32
  %minor = getelementptr inbounds %struct.tb_nvm, ptr %13, i32 0, i32 2
  %16 = ptrtoint ptr %minor to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %minor, align 1
  %conv10 = zext i8 %17 to i32
  %call11 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.154, i32 noundef %conv, i32 noundef %conv10)
  br label %if.end13

if.end13:                                         ; preds = %if.else7, %if.else.if.end13_crit_edge, %if.end.if.end13_crit_edge
  %ret.0 = phi i32 [ %call11, %if.else7 ], [ -61, %if.end.if.end13_crit_edge ], [ -11, %if.else.if.end13_crit_edge ]
  %18 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %tb, align 8
  %lock15 = getelementptr inbounds %struct.tb, ptr %19, i32 0, i32 1
  tail call void @mutex_unlock(ptr noundef %lock15) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.then
  %retval.0 = phi i32 [ %ret.0, %if.end13 ], [ -513, %if.then ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb4_switch_nvm_sector_size(ptr noundef) local_unnamed_addr #2

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @boot_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %1, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %dev, ptr null
  %boot = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 25
  %2 = ptrtoint ptr %boot to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %boot, align 2, !range !445
  %4 = zext i8 %3 to i32
  %call1 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.126, i32 noundef %4)
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nvm_authenticate_on_disconnect_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type.i.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i.i, align 4
  %cmp.i.i.i = icmp eq ptr %1, @tb_switch_type
  %dev..i.i = select i1 %cmp.i.i.i, ptr %dev, ptr null
  tail call void @mutex_lock_nested(ptr noundef nonnull @nvm_auth_status_lock, i32 noundef 0) #16
  %uuid1.i.i.i = getelementptr inbounds %struct.tb_switch, ptr %dev..i.i, i32 0, i32 7
  br label %for.cond.i.i.i

for.cond.i.i.i:                                   ; preds = %for.body.i.i.i.for.cond.i.i.i_crit_edge, %entry
  %st.0.in.i.i.i = phi ptr [ @nvm_auth_status_cache, %entry ], [ %st.0.i.i.i, %for.body.i.i.i.for.cond.i.i.i_crit_edge ]
  %2 = ptrtoint ptr %st.0.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %st.0.i.i.i = load ptr, ptr %st.0.in.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %st.0.i.i.i, @nvm_auth_status_cache
  br i1 %cmp.not.i.i.i, label %__nvm_get_auth_status.exit.thread.i.i, label %for.body.i.i.i

__nvm_get_auth_status.exit.thread.i.i:            ; preds = %for.cond.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @mutex_unlock(ptr noundef nonnull @nvm_auth_status_lock) #16
  br label %nvm_authenticate_show.exit

for.body.i.i.i:                                   ; preds = %for.cond.i.i.i
  %uuid.i.i.i = getelementptr inbounds %struct.nvm_auth_status, ptr %st.0.i.i.i, i32 0, i32 1
  %3 = ptrtoint ptr %uuid1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %uuid1.i.i.i, align 8
  %bcmp.i.i.i.i = tail call i32 @bcmp(ptr noundef dereferenceable(16) %uuid.i.i.i, ptr noundef dereferenceable(16) %4, i32 16) #22
  %cmp.i.i.i.i = icmp eq i32 %bcmp.i.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %__nvm_get_auth_status.exit.i.i, label %for.body.i.i.i.for.cond.i.i.i_crit_edge

for.body.i.i.i.for.cond.i.i.i_crit_edge:          ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i.i.i

__nvm_get_auth_status.exit.i.i:                   ; preds = %for.body.i.i.i
  tail call void @mutex_unlock(ptr noundef nonnull @nvm_auth_status_lock) #16
  %tobool.not.i.i = icmp eq ptr %st.0.i.i.i, null
  br i1 %tobool.not.i.i, label %__nvm_get_auth_status.exit.i.i.nvm_authenticate_show.exit_crit_edge, label %cond.true.i.i

__nvm_get_auth_status.exit.i.i.nvm_authenticate_show.exit_crit_edge: ; preds = %__nvm_get_auth_status.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nvm_authenticate_show.exit

cond.true.i.i:                                    ; preds = %__nvm_get_auth_status.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %status1.i.i = getelementptr inbounds %struct.nvm_auth_status, ptr %st.0.i.i.i, i32 0, i32 2
  %5 = ptrtoint ptr %status1.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %status1.i.i, align 4
  br label %nvm_authenticate_show.exit

nvm_authenticate_show.exit:                       ; preds = %cond.true.i.i, %__nvm_get_auth_status.exit.i.i.nvm_authenticate_show.exit_crit_edge, %__nvm_get_auth_status.exit.thread.i.i
  %cond.i.i = phi i32 [ %6, %cond.true.i.i ], [ 0, %__nvm_get_auth_status.exit.i.i.nvm_authenticate_show.exit_crit_edge ], [ 0, %__nvm_get_auth_status.exit.thread.i.i ]
  %call1.i = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.129, i32 noundef %cond.i.i) #16
  ret i32 %call1.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nvm_authenticate_on_disconnect_store(ptr noundef %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf, i32 noundef %count) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @nvm_authenticate_sysfs(ptr noundef %dev, ptr noundef %buf, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  %count.call = select i1 %tobool.not, i32 %count, i32 %call
  ret i32 %count.call
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @generation_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %1, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %dev, ptr null
  %generation = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 15
  %2 = ptrtoint ptr %generation to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %generation, align 4
  %call1 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.126, i32 noundef %3)
  ret i32 %call1
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @unique_id_show(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %type.i.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 4
  %0 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %1, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %dev, ptr null
  %uuid = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 7
  %2 = ptrtoint ptr %uuid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %uuid, align 8
  %call1 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.159, ptr noundef %3)
  ret i32 %call1
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @usb4_switch_lane_bonding_possible(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @tb_lc_lane_bonding_possible(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kobject_uevent(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb4_switch_nvm_authenticate_status(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dma_port_alloc(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @nvm_authenticate_complete_dma_port(ptr nocapture noundef readonly %sw) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %tb = getelementptr inbounds %struct.tb_switch, ptr %sw, i32 0, i32 5
  %0 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tb, align 8
  %nhi = getelementptr inbounds %struct.tb, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev, align 4
  %tobool.not7.i = icmp eq ptr %5, null
  br i1 %tobool.not7.i, label %entry.if.end_crit_edge, label %entry.while.body.i_crit_edge

entry.while.body.i_crit_edge:                     ; preds = %entry
  br label %while.body.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

while.body.i:                                     ; preds = %pci_upstream_bridge.exit.i.while.body.i_crit_edge, %entry.while.body.i_crit_edge
  %dev.addr.08.i = phi ptr [ %21, %pci_upstream_bridge.exit.i.while.body.i_crit_edge ], [ %5, %entry.while.body.i_crit_edge ]
  %pcie_cap.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.08.i, i32 0, i32 19
  %6 = ptrtoint ptr %pcie_cap.i.i.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %pcie_cap.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.i.not.i = icmp eq i8 %7, 0
  br i1 %tobool.i.not.i, label %while.body.i.if.end.i_crit_edge, label %land.lhs.true.i

while.body.i.if.end.i_crit_edge:                  ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %while.body.i
  %pcie_flags_reg.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.08.i, i32 0, i32 25
  %8 = ptrtoint ptr %pcie_flags_reg.i.i.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %pcie_flags_reg.i.i.i, align 2
  %10 = and i16 %9, 240
  call void @__sanitizer_cov_trace_const_cmp2(i16 64, i16 %10)
  %cmp.i = icmp eq i16 %10, 64
  br i1 %cmp.i, label %if.then, label %land.lhs.true.i.if.end.i_crit_edge

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.end.i:                                         ; preds = %land.lhs.true.i.if.end.i_crit_edge, %while.body.i.if.end.i_crit_edge
  %is_virtfn.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.08.i, i32 0, i32 49
  %11 = ptrtoint ptr %is_virtfn.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 5)
  %bf.load.i.i.i = load i40, ptr %is_virtfn.i.i.i, align 1
  %12 = and i40 %bf.load.i.i.i, 65536
  %tobool.not.i.i.i = icmp eq i40 %12, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.pci_physfn.exit.i.i_crit_edge, label %if.then.i.i.i

if.end.i.pci_physfn.exit.i.i_crit_edge:           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pci_physfn.exit.i.i

if.then.i.i.i:                                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %13 = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.08.i, i32 0, i32 66
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 8
  br label %pci_physfn.exit.i.i

pci_physfn.exit.i.i:                              ; preds = %if.then.i.i.i, %if.end.i.pci_physfn.exit.i.i_crit_edge
  %dev.addr.0.i.i.i = phi ptr [ %15, %if.then.i.i.i ], [ %dev.addr.08.i, %if.end.i.pci_physfn.exit.i.i_crit_edge ]
  %bus.i.i = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.0.i.i.i, i32 0, i32 1
  %16 = ptrtoint ptr %bus.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %bus.i.i, align 8
  %parent.i.i.i = getelementptr inbounds %struct.pci_bus, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %parent.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %parent.i.i.i, align 8
  %tobool.not.i5.i.i = icmp eq ptr %19, null
  br i1 %tobool.not.i5.i.i, label %pci_physfn.exit.i.i.if.end_crit_edge, label %pci_upstream_bridge.exit.i

pci_physfn.exit.i.i.if.end_crit_edge:             ; preds = %pci_physfn.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

pci_upstream_bridge.exit.i:                       ; preds = %pci_physfn.exit.i.i
  %self.i.i = getelementptr inbounds %struct.pci_bus, ptr %17, i32 0, i32 4
  %20 = ptrtoint ptr %self.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %self.i.i, align 4
  %tobool.not.i = icmp eq ptr %21, null
  br i1 %tobool.not.i, label %pci_upstream_bridge.exit.i.if.end_crit_edge, label %pci_upstream_bridge.exit.i.while.body.i_crit_edge

pci_upstream_bridge.exit.i.while.body.i_crit_edge: ; preds = %pci_upstream_bridge.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body.i

pci_upstream_bridge.exit.i.if.end_crit_edge:      ; preds = %pci_upstream_bridge.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %dev = getelementptr inbounds %struct.pci_dev, ptr %dev.addr.08.i, i32 0, i32 44
  %call.i = tail call i32 @__pm_runtime_idle(ptr noundef %dev, i32 noundef 5) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %pci_upstream_bridge.exit.i.if.end_crit_edge, %pci_physfn.exit.i.i.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_idle(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb4_switch_credits_init(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_lc_read_uuid(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_port_find_cap(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @tb_dump_port(ptr nocapture noundef readonly %tb, ptr nocapture noundef readonly %port) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_dump_port.__UNIQUE_ID_ddebug239, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_dump_port, %if.then)) #16
          to label %do.body17 [label %if.then], !srcloc !446

if.then:                                          ; preds = %entry
  %nhi = getelementptr inbounds %struct.tb, ptr %tb, i32 0, i32 2
  %0 = ptrtoint ptr %nhi to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %nhi, align 4
  %pdev = getelementptr inbounds %struct.tb_nhi, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 44
  %port_number = getelementptr inbounds %struct.tb_regs_port_header, ptr %port, i32 0, i32 2
  %4 = ptrtoint ptr %port_number to i32
  call void @__asan_loadN_noabort(i32 %4, i32 12)
  %bf.load = load i96, ptr %port_number, align 1
  %5 = trunc i96 %bf.load to i32
  %6 = lshr i32 %5, 6
  %bf.cast = and i32 %6, 63
  %7 = ptrtoint ptr %port to i32
  call void @__asan_loadN_noabort(i32 %7, i32 2)
  %8 = load i16, ptr %port, align 1
  %conv = zext i16 %8 to i32
  %device_id = getelementptr inbounds %struct.tb_regs_port_header, ptr %port, i32 0, i32 1
  %9 = ptrtoint ptr %device_id to i32
  call void @__asan_loadN_noabort(i32 %9, i32 2)
  %10 = load i16, ptr %device_id, align 1
  %conv3 = zext i16 %10 to i32
  %bf.lshr5 = lshr i96 %bf.load, 64
  %11 = trunc i96 %bf.lshr5 to i32
  %bf.cast7 = and i32 %11, 255
  %bf.lshr9 = lshr i96 %bf.load, 32
  %12 = trunc i96 %bf.lshr9 to i32
  %bf.cast11 = and i32 %12, 255
  %13 = lshr i96 %bf.load, 56
  %trunc.i = trunc i96 %13 to i8
  %14 = zext i8 %trunc.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.215)
  switch i8 %trunc.i, label %sw.default15.i [
    i8 0, label %sw.bb.i
    i8 2, label %if.then.tb_port_type.exit_crit_edge
    i8 8, label %sw.bb11.i
    i8 14, label %sw.bb12.i
    i8 16, label %sw.bb13.i
    i8 32, label %sw.bb14.i
  ]

if.then.tb_port_type.exit_crit_edge:              ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_type.exit

sw.bb.i:                                          ; preds = %if.then
  %bf.lshr.i = lshr i96 %bf.load, 40
  %15 = trunc i96 %bf.lshr.i to i8
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %15)
  %16 = icmp ult i8 %15, 3
  br i1 %16, label %switch.lookup, label %sw.bb.i.tb_port_type.exit_crit_edge

sw.bb.i.tb_port_type.exit_crit_edge:              ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_type.exit

sw.bb11.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_type.exit

sw.bb12.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_type.exit

sw.bb13.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_type.exit

sw.bb14.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_type.exit

sw.default15.i:                                   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %tb_port_type.exit

switch.lookup:                                    ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  %17 = sext i8 %15 to i32
  %switch.gep = getelementptr inbounds [3 x ptr], ptr @switch.table.tb_dump_port, i32 0, i32 %17
  %18 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %18)
  %switch.load = load ptr, ptr %switch.gep, align 4
  br label %tb_port_type.exit

tb_port_type.exit:                                ; preds = %switch.lookup, %sw.default15.i, %sw.bb14.i, %sw.bb13.i, %sw.bb12.i, %sw.bb11.i, %sw.bb.i.tb_port_type.exit_crit_edge, %if.then.tb_port_type.exit_crit_edge
  %retval.0.i130 = phi ptr [ @.str.180, %sw.default15.i ], [ @.str.185, %sw.bb14.i ], [ @.str.184, %sw.bb13.i ], [ @.str.183, %sw.bb12.i ], [ @.str.182, %sw.bb11.i ], [ @.str.181, %if.then.tb_port_type.exit_crit_edge ], [ %switch.load, %switch.lookup ], [ @.str.180, %sw.bb.i.tb_port_type.exit_crit_edge ]
  %bf.lshr14 = lshr i96 %bf.load, 40
  %19 = trunc i96 %bf.lshr14 to i32
  %bf.cast16 = and i32 %19, 16777215
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_dump_port.__UNIQUE_ID_ddebug239, ptr noundef %dev, ptr noundef nonnull @.str.172, i32 noundef %bf.cast, i32 noundef %conv, i32 noundef %conv3, i32 noundef %bf.cast7, i32 noundef %bf.cast11, ptr noundef nonnull %retval.0.i130, i32 noundef %bf.cast16) #16
  br label %do.body17

do.body17:                                        ; preds = %tb_port_type.exit, %entry
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_dump_port.__UNIQUE_ID_ddebug240, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_dump_port, %if.then29)) #16
          to label %do.body41 [label %if.then29], !srcloc !446

if.then29:                                        ; preds = %do.body17
  call void @__sanitizer_cov_trace_pc() #18
  %nhi30 = getelementptr inbounds %struct.tb, ptr %tb, i32 0, i32 2
  %20 = ptrtoint ptr %nhi30 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %nhi30, align 4
  %pdev31 = getelementptr inbounds %struct.tb_nhi, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %pdev31 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pdev31, align 4
  %dev32 = getelementptr inbounds %struct.pci_dev, ptr %23, i32 0, i32 44
  %max_in_hop_id = getelementptr inbounds %struct.tb_regs_port_header, ptr %port, i32 0, i32 4
  %24 = ptrtoint ptr %max_in_hop_id to i32
  call void @__asan_loadN_noabort(i32 %24, i32 4)
  %bf.load33 = load i32, ptr %max_in_hop_id, align 1
  %bf.lshr34 = lshr i32 %bf.load33, 21
  %bf.lshr36 = lshr i32 %bf.load33, 10
  %bf.clear37 = and i32 %bf.lshr36, 2047
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_dump_port.__UNIQUE_ID_ddebug240, ptr noundef %dev32, ptr noundef nonnull @.str.173, i32 noundef %bf.lshr34, i32 noundef %bf.clear37) #16
  br label %do.body41

do.body41:                                        ; preds = %if.then29, %do.body17
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_dump_port.__UNIQUE_ID_ddebug241, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_dump_port, %if.then53)) #16
          to label %do.body64 [label %if.then53], !srcloc !446

if.then53:                                        ; preds = %do.body41
  call void @__sanitizer_cov_trace_pc() #18
  %nhi54 = getelementptr inbounds %struct.tb, ptr %tb, i32 0, i32 2
  %25 = ptrtoint ptr %nhi54 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %nhi54, align 4
  %pdev55 = getelementptr inbounds %struct.tb_nhi, ptr %26, i32 0, i32 1
  %27 = ptrtoint ptr %pdev55 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %pdev55, align 4
  %dev56 = getelementptr inbounds %struct.pci_dev, ptr %28, i32 0, i32 44
  %max_counters = getelementptr inbounds %struct.tb_regs_port_header, ptr %port, i32 0, i32 2
  %29 = ptrtoint ptr %max_counters to i32
  call void @__asan_loadN_noabort(i32 %29, i32 12)
  %bf.load57 = load i96, ptr %max_counters, align 1
  %bf.lshr58 = lshr i96 %bf.load57, 77
  %30 = trunc i96 %bf.lshr58 to i32
  %bf.cast60 = and i32 %30, 2047
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_dump_port.__UNIQUE_ID_ddebug241, ptr noundef %dev56, ptr noundef nonnull @.str.174, i32 noundef %bf.cast60) #16
  br label %do.body64

do.body64:                                        ; preds = %if.then53, %do.body41
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_dump_port.__UNIQUE_ID_ddebug242, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_dump_port, %if.then76)) #16
          to label %do.body83 [label %if.then76], !srcloc !446

if.then76:                                        ; preds = %do.body64
  call void @__sanitizer_cov_trace_pc() #18
  %nhi77 = getelementptr inbounds %struct.tb, ptr %tb, i32 0, i32 2
  %31 = ptrtoint ptr %nhi77 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %nhi77, align 4
  %pdev78 = getelementptr inbounds %struct.tb_nhi, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %pdev78 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %pdev78, align 4
  %dev79 = getelementptr inbounds %struct.pci_dev, ptr %34, i32 0, i32 44
  %nfc_credits = getelementptr inbounds %struct.tb_regs_port_header, ptr %port, i32 0, i32 3
  %35 = ptrtoint ptr %nfc_credits to i32
  call void @__asan_loadN_noabort(i32 %35, i32 4)
  %36 = load i32, ptr %nfc_credits, align 1
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_dump_port.__UNIQUE_ID_ddebug242, ptr noundef %dev79, ptr noundef nonnull @.str.175, i32 noundef %36) #16
  br label %do.body83

do.body83:                                        ; preds = %if.then76, %do.body64
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @tb_dump_port.__UNIQUE_ID_ddebug243, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@tb_dump_port, %if.then95)) #16
          to label %do.end101 [label %if.then95], !srcloc !446

if.then95:                                        ; preds = %do.body83
  call void @__sanitizer_cov_trace_pc() #18
  %nhi96 = getelementptr inbounds %struct.tb, ptr %tb, i32 0, i32 2
  %37 = ptrtoint ptr %nhi96 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %nhi96, align 4
  %pdev97 = getelementptr inbounds %struct.tb_nhi, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %pdev97 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %pdev97, align 4
  %dev98 = getelementptr inbounds %struct.pci_dev, ptr %40, i32 0, i32 44
  %total_credits = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 17
  %41 = ptrtoint ptr %total_credits to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %total_credits, align 4
  %ctl_credits = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 18
  %43 = ptrtoint ptr %ctl_credits to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %ctl_credits, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @tb_dump_port.__UNIQUE_ID_ddebug243, ptr noundef %dev98, ptr noundef nonnull @.str.176, i32 noundef %42, i32 noundef %44) #16
  br label %do.end101

do.end101:                                        ; preds = %if.then95, %do.body83
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @tb_nvm_alloc(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_nvm_add_active(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @tb_switch_nvm_read(ptr nocapture noundef readonly %priv, i32 noundef %offset, ptr noundef %val, i32 noundef %bytes) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %type.i.i = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %3, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %1, ptr null
  %call.i = tail call i32 @__pm_runtime_resume(ptr noundef %dev..i, i32 noundef 4) #16
  %tb = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 5
  %4 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %tb, align 8
  %lock = getelementptr inbounds %struct.tb, ptr %5, i32 0, i32 1
  %call3 = tail call i32 @mutex_trylock(ptr noundef %lock) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %6 = tail call i32 @llvm.read_register.i32(metadata !435) #16
  %and.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task.i, align 8
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %stack.i.i, align 4
  tail call void @_set_bit(i32 noundef 0, ptr noundef %11) #16
  br label %out

if.end:                                           ; preds = %entry
  %thunderbolt_version.i.i = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 1, i32 4
  %12 = ptrtoint ptr %thunderbolt_version.i.i to i32
  call void @__asan_loadN_noabort(i32 %12, i32 8)
  %bf.load.i.i = load i64, ptr %thunderbolt_version.i.i, align 4
  %bf.cast1.i.i = and i64 %bf.load.i.i, 255
  call void @__sanitizer_cov_trace_const_cmp8(i64 32, i64 %bf.cast1.i.i)
  %cmp.i.i16 = icmp eq i64 %bf.cast1.i.i, 32
  br i1 %cmp.i.i16, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call1.i = tail call i32 @usb4_switch_nvm_read(ptr noundef %dev..i, i32 noundef %offset, ptr noundef %val, i32 noundef %bytes) #16
  br label %nvm_read.exit

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %dma_port.i = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 3
  %13 = ptrtoint ptr %dma_port.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %dma_port.i, align 8
  %call2.i = tail call i32 @dma_port_flash_read(ptr noundef %14, i32 noundef %offset, ptr noundef %val, i32 noundef %bytes) #16
  br label %nvm_read.exit

nvm_read.exit:                                    ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi i32 [ %call1.i, %if.then.i ], [ %call2.i, %if.end.i ]
  %15 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %tb, align 8
  %lock7 = getelementptr inbounds %struct.tb, ptr %16, i32 0, i32 1
  tail call void @mutex_unlock(ptr noundef %lock7) #16
  br label %out

out:                                              ; preds = %nvm_read.exit, %if.then
  %ret.0 = phi i32 [ %retval.0.i, %nvm_read.exit ], [ -513, %if.then ]
  %call.i17 = tail call i64 @ktime_get_mono_fast_ns() #16
  %last_busy.i = getelementptr inbounds %struct.device, ptr %dev..i, i32 0, i32 12, i32 22
  %17 = ptrtoint ptr %last_busy.i to i32
  call void @__asan_store8_noabort(i32 %17)
  store volatile i64 %call.i17, ptr %last_busy.i, align 8
  %call.i18 = tail call i32 @__pm_runtime_suspend(ptr noundef %dev..i, i32 noundef 13) #16
  ret i32 %ret.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_nvm_add_non_active(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @tb_switch_nvm_write(ptr noundef %priv, i32 noundef %offset, ptr noundef %val, i32 noundef %bytes) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %type.i.i = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %type.i.i, align 4
  %cmp.i.i = icmp eq ptr %3, @tb_switch_type
  %dev..i = select i1 %cmp.i.i, ptr %1, ptr null
  %tb = getelementptr inbounds %struct.tb_switch, ptr %dev..i, i32 0, i32 5
  %4 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %tb, align 8
  %lock = getelementptr inbounds %struct.tb, ptr %5, i32 0, i32 1
  %call1 = tail call i32 @mutex_trylock(ptr noundef %lock) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %6 = tail call i32 @llvm.read_register.i32(metadata !435) #16
  %and.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %task.i, align 8
  %stack.i.i = getelementptr inbounds %struct.task_struct, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %stack.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %stack.i.i, align 4
  tail call void @_set_bit(i32 noundef 0, ptr noundef %11) #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call3 = tail call i32 @tb_nvm_write_buf(ptr noundef %priv, i32 noundef %offset, ptr noundef %val, i32 noundef %bytes) #16
  %12 = ptrtoint ptr %tb to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %tb, align 8
  %lock5 = getelementptr inbounds %struct.tb, ptr %13, i32 0, i32 1
  tail call void @mutex_unlock(ptr noundef %lock5) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %call3, %if.end ], [ -513, %if.then ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @tb_nvm_free(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb4_switch_nvm_read(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_port_flash_read(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_nvm_write_buf(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_set_status(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__pm_runtime_use_autosuspend(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get_mono_fast_ns() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_resume(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__pm_runtime_disable(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb4_switch_set_wake(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_lc_set_wake(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @usb4_port_device_resume(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tb_lc_start_lane_initialization(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @get_device(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__tb_port_pm_secondary_set(ptr nocapture noundef readonly %port, i1 noundef zeroext %secondary) unnamed_addr #0 align 64 {
entry:
  %phy = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %phy) #16
  %0 = ptrtoint ptr %phy to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %phy, align 4, !annotation !447
  %cap_phy = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 4
  %sw.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %1 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %sw.i, align 4
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 20
  %3 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not.i = icmp eq i8 %4, 0
  br i1 %tobool.not.i, label %tb_port_read.exit, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_port_read.exit:                                ; preds = %entry
  %5 = ptrtoint ptr %cap_phy to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %cap_phy, align 4
  %add = add i32 %6, 1
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 5
  %7 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ctl.i, align 8
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 1, i32 4
  %11 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %12 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %12, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 1, i32 3
  %13 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %14 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %port3.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %15 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %port3.i, align 4
  %conv.i = zext i8 %16 to i32
  %call4.i = call i32 @tb_cfg_read(ptr noundef %10, ptr noundef nonnull %phy, i64 noundef %or.i.i, i32 noundef %conv.i, i32 noundef 1, i32 noundef %add, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not = icmp eq i32 %call4.i, 0
  br i1 %tobool.not, label %if.end, label %tb_port_read.exit.cleanup_crit_edge

tb_port_read.exit.cleanup_crit_edge:              ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %tb_port_read.exit
  %17 = ptrtoint ptr %phy to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %phy, align 4
  %and = and i32 %18, -1073741825
  %masksel = select i1 %secondary, i32 1073741824, i32 0
  %storemerge = or i32 %and, %masksel
  store i32 %storemerge, ptr %phy, align 4
  %19 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %sw.i, align 4
  %is_unplugged.i13 = getelementptr inbounds %struct.tb_switch, ptr %20, i32 0, i32 20
  %21 = ptrtoint ptr %is_unplugged.i13 to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %is_unplugged.i13, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool.not.i14 = icmp eq i8 %22, 0
  br i1 %tobool.not.i14, label %if.end.i26, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i26:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %23 = ptrtoint ptr %cap_phy to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %cap_phy, align 4
  %add5 = add i32 %24, 1
  %tb.i15 = getelementptr inbounds %struct.tb_switch, ptr %20, i32 0, i32 5
  %25 = ptrtoint ptr %tb.i15 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %tb.i15, align 8
  %ctl.i16 = getelementptr inbounds %struct.tb, ptr %26, i32 0, i32 3
  %27 = ptrtoint ptr %ctl.i16 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ctl.i16, align 8
  %route_hi.i.i17 = getelementptr inbounds %struct.tb_switch, ptr %20, i32 0, i32 1, i32 4
  %29 = ptrtoint ptr %route_hi.i.i17 to i32
  call void @__asan_loadN_noabort(i32 %29, i32 8)
  %bf.load.i.i18 = load i64, ptr %route_hi.i.i17, align 4
  %30 = lshr i64 %bf.load.i.i18, 1
  %shl.i.i19 = and i64 %30, 9223372032559808512
  %route_lo.i.i20 = getelementptr inbounds %struct.tb_switch, ptr %20, i32 0, i32 1, i32 3
  %31 = ptrtoint ptr %route_lo.i.i20 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %route_lo.i.i20, align 8
  %conv2.i.i21 = zext i32 %32 to i64
  %or.i.i22 = or i64 %shl.i.i19, %conv2.i.i21
  %33 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %port3.i, align 4
  %conv.i24 = zext i8 %34 to i32
  %call4.i25 = call i32 @tb_cfg_write(ptr noundef %28, ptr noundef nonnull %phy, i64 noundef %or.i.i22, i32 noundef %conv.i24, i32 noundef 1, i32 noundef %add5, i32 noundef 1) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end.i26, %if.end.cleanup_crit_edge, %tb_port_read.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4.i, %tb_port_read.exit.cleanup_crit_edge ], [ %call4.i25, %if.end.i26 ], [ -19, %if.end.cleanup_crit_edge ], [ -19, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %phy) #16
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @usb4_port_clx_supported(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @tb_lc_is_clx_supported(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__tb_port_cl0s_set(ptr nocapture noundef readonly %port, i1 noundef zeroext %enable) unnamed_addr #0 align 64 {
entry:
  %phy = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %phy) #16
  %0 = ptrtoint ptr %phy to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %phy, align 4, !annotation !447
  %cap_phy = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 4
  %sw.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 1
  %1 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %sw.i, align 4
  %is_unplugged.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 20
  %3 = ptrtoint ptr %is_unplugged.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %is_unplugged.i, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not.i = icmp eq i8 %4, 0
  br i1 %tobool.not.i, label %tb_port_read.exit, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

tb_port_read.exit:                                ; preds = %entry
  %5 = ptrtoint ptr %cap_phy to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %cap_phy, align 4
  %add = add i32 %6, 1
  %tb.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 5
  %7 = ptrtoint ptr %tb.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %tb.i, align 8
  %ctl.i = getelementptr inbounds %struct.tb, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %ctl.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ctl.i, align 8
  %route_hi.i.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 1, i32 4
  %11 = ptrtoint ptr %route_hi.i.i to i32
  call void @__asan_loadN_noabort(i32 %11, i32 8)
  %bf.load.i.i = load i64, ptr %route_hi.i.i, align 4
  %12 = lshr i64 %bf.load.i.i, 1
  %shl.i.i = and i64 %12, 9223372032559808512
  %route_lo.i.i = getelementptr inbounds %struct.tb_switch, ptr %2, i32 0, i32 1, i32 3
  %13 = ptrtoint ptr %route_lo.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %route_lo.i.i, align 8
  %conv2.i.i = zext i32 %14 to i64
  %or.i.i = or i64 %shl.i.i, %conv2.i.i
  %port3.i = getelementptr inbounds %struct.tb_port, ptr %port, i32 0, i32 9
  %15 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %port3.i, align 4
  %conv.i = zext i8 %16 to i32
  %call4.i = call i32 @tb_cfg_read(ptr noundef %10, ptr noundef nonnull %phy, i64 noundef %or.i.i, i32 noundef %conv.i, i32 noundef 1, i32 noundef %add, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not = icmp eq i32 %call4.i, 0
  br i1 %tobool.not, label %if.end, label %tb_port_read.exit.cleanup_crit_edge

tb_port_read.exit.cleanup_crit_edge:              ; preds = %tb_port_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %tb_port_read.exit
  %17 = ptrtoint ptr %phy to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %phy, align 4
  %and = and i32 %18, -3073
  %masksel = select i1 %enable, i32 3072, i32 0
  %storemerge = or i32 %and, %masksel
  store i32 %storemerge, ptr %phy, align 4
  %19 = ptrtoint ptr %sw.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %sw.i, align 4
  %is_unplugged.i15 = getelementptr inbounds %struct.tb_switch, ptr %20, i32 0, i32 20
  %21 = ptrtoint ptr %is_unplugged.i15 to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %is_unplugged.i15, align 8, !range !445
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool.not.i16 = icmp eq i8 %22, 0
  br i1 %tobool.not.i16, label %if.end.i28, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i28:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %23 = ptrtoint ptr %cap_phy to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %cap_phy, align 4
  %add5 = add i32 %24, 1
  %tb.i17 = getelementptr inbounds %struct.tb_switch, ptr %20, i32 0, i32 5
  %25 = ptrtoint ptr %tb.i17 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %tb.i17, align 8
  %ctl.i18 = getelementptr inbounds %struct.tb, ptr %26, i32 0, i32 3
  %27 = ptrtoint ptr %ctl.i18 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ctl.i18, align 8
  %route_hi.i.i19 = getelementptr inbounds %struct.tb_switch, ptr %20, i32 0, i32 1, i32 4
  %29 = ptrtoint ptr %route_hi.i.i19 to i32
  call void @__asan_loadN_noabort(i32 %29, i32 8)
  %bf.load.i.i20 = load i64, ptr %route_hi.i.i19, align 4
  %30 = lshr i64 %bf.load.i.i20, 1
  %shl.i.i21 = and i64 %30, 9223372032559808512
  %route_lo.i.i22 = getelementptr inbounds %struct.tb_switch, ptr %20, i32 0, i32 1, i32 3
  %31 = ptrtoint ptr %route_lo.i.i22 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %route_lo.i.i22, align 8
  %conv2.i.i23 = zext i32 %32 to i64
  %or.i.i24 = or i64 %shl.i.i21, %conv2.i.i23
  %33 = ptrtoint ptr %port3.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %port3.i, align 4
  %conv.i26 = zext i8 %34 to i32
  %call4.i27 = call i32 @tb_cfg_write(ptr noundef %28, ptr noundef nonnull %phy, i64 noundef %or.i.i24, i32 noundef %conv.i26, i32 noundef 1, i32 noundef %add5, i32 noundef 1) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end.i28, %if.end.cleanup_crit_edge, %tb_port_read.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4.i, %tb_port_read.exit.cleanup_crit_edge ], [ %call4.i27, %if.end.i28 ], [ -19, %if.end.cleanup_crit_edge ], [ -19, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %phy) #16
  ret i32 %retval.0
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #6

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #15

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #16

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #17 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 223)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #17 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 223)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { mustprogress nofree nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #7 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nounwind readonly }
attributes #13 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #15 = { argmemonly nofree nounwind readonly willreturn }
attributes #16 = { nounwind }
attributes #17 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #18 = { nomerge }
attributes #19 = { cold nounwind }
attributes #20 = { nounwind allocsize(2) }
attributes #21 = { nounwind allocsize(0) }
attributes #22 = { nobuiltin nounwind }
attributes #23 = { nobuiltin }

!llvm.asan.globals = !{!0, !2, !3, !5, !7, !8, !10, !12, !14, !15, !16, !17, !19, !20, !22, !23, !25, !26, !28, !29, !31, !32, !33, !34, !35, !37, !38, !39, !41, !42, !43, !45, !46, !47, !49, !51, !53, !54, !55, !57, !59, !60, !61, !62, !63, !65, !66, !67, !69, !70, !71, !73, !74, !75, !76, !78, !79, !81, !82, !83, !85, !86, !88, !89, !90, !91, !93, !94, !96, !97, !98, !99, !100, !102, !103, !104, !106, !107, !109, !110, !111, !113, !114, !116, !117, !118, !120, !121, !122, !124, !125, !126, !127, !129, !130, !131, !133, !134, !135, !137, !138, !139, !141, !142, !143, !144, !146, !148, !150, !151, !152, !154, !155, !156, !158, !159, !160, !162, !163, !164, !166, !167, !168, !170, !171, !172, !174, !175, !177, !178, !179, !181, !182, !183, !185, !186, !187, !188, !190, !191, !193, !194, !195, !196, !198, !199, !200, !202, !204, !206, !207, !208, !210, !212, !214, !216, !218, !220, !222, !223, !224, !225, !227, !228, !229, !231, !232, !234, !235, !237, !238, !240, !241, !243, !245, !247, !249, !251, !253, !254, !256, !258, !260, !261, !263, !265, !267, !269, !271, !273, !274, !276, !278, !280, !281, !283, !284, !286, !287, !289, !291, !293, !294, !296, !298, !299, !301, !302, !304, !305, !307, !308, !310, !311, !312, !314, !316, !317, !318, !319, !321, !322, !323, !324, !326, !327, !328, !330, !331, !333, !335, !336, !338, !339, !341, !343, !344, !346, !347, !349, !351, !352, !353, !354, !356, !357, !359, !360, !362, !363, !364, !365, !367, !368, !369, !371, !373, !374, !375, !377, !378, !380, !381, !383, !384, !386, !387, !389, !391, !393, !395, !397, !399, !401, !403, !405, !407, !408, !409, !411, !412, !413, !414, !416, !417, !418, !420, !421, !423, !424, !425, !426, !428, !430, !431, !433, !434}
!llvm.named.register.sp = !{!435}
!llvm.module.flags = !{!436, !437, !438, !439, !440, !441, !442, !443}
!llvm.ident = !{!444}

!0 = !{ptr @__param_clx, !1, !"__param_clx", i1 false, i1 false}
!1 = !{!"../drivers/thunderbolt/switch.c", i32 31, i32 1}
!2 = !{ptr @__UNIQUE_ID_clxtype237, !1, !"__UNIQUE_ID_clxtype237", i1 false, i1 false}
!3 = !{ptr @__UNIQUE_ID_clx238, !4, !"__UNIQUE_ID_clx238", i1 false, i1 false}
!4 = !{!"../drivers/thunderbolt/switch.c", i32 32, i32 1}
!5 = !{ptr @.str, !6, !"<string literal>", i1 false, i1 false}
!6 = !{!"../drivers/thunderbolt/switch.c", i32 531, i32 3}
!7 = !{ptr @.str.1, !6, !"<string literal>", i1 false, i1 false}
!8 = !{ptr @.str.2, !9, !"<string literal>", i1 false, i1 false}
!9 = !{!"../drivers/thunderbolt/switch.c", i32 560, i32 3}
!10 = !{ptr @.str.3, !11, !"<string literal>", i1 false, i1 false}
!11 = !{!"../drivers/thunderbolt/switch.c", i32 564, i32 3}
!12 = !{ptr @.str.4, !13, !"<string literal>", i1 false, i1 false}
!13 = !{!"../drivers/thunderbolt/switch.c", i32 573, i32 4}
!14 = !{ptr @.str.5, !13, !"<string literal>", i1 false, i1 false}
!15 = !{ptr @.str.6, !13, !"<string literal>", i1 false, i1 false}
!16 = !{ptr @tb_wait_for_port.__UNIQUE_ID_ddebug244, !13, !"__UNIQUE_ID_ddebug244", i1 false, i1 false}
!17 = !{ptr @.str.7, !18, !"<string literal>", i1 false, i1 false}
!18 = !{!"../drivers/thunderbolt/switch.c", i32 579, i32 5}
!19 = !{ptr @tb_wait_for_port.__UNIQUE_ID_ddebug245, !18, !"__UNIQUE_ID_ddebug245", i1 false, i1 false}
!20 = !{ptr @.str.8, !21, !"<string literal>", i1 false, i1 false}
!21 = !{!"../drivers/thunderbolt/switch.c", i32 584, i32 4}
!22 = !{ptr @tb_wait_for_port.__UNIQUE_ID_ddebug246, !21, !"__UNIQUE_ID_ddebug246", i1 false, i1 false}
!23 = !{ptr @.str.9, !24, !"<string literal>", i1 false, i1 false}
!24 = !{!"../drivers/thunderbolt/switch.c", i32 588, i32 4}
!25 = !{ptr @tb_wait_for_port.__UNIQUE_ID_ddebug247, !24, !"__UNIQUE_ID_ddebug247", i1 false, i1 false}
!26 = !{ptr @.str.10, !27, !"<string literal>", i1 false, i1 false}
!27 = !{!"../drivers/thunderbolt/switch.c", i32 596, i32 3}
!28 = !{ptr @tb_wait_for_port.__UNIQUE_ID_ddebug248, !27, !"__UNIQUE_ID_ddebug248", i1 false, i1 false}
!29 = !{ptr @.str.11, !30, !"<string literal>", i1 false, i1 false}
!30 = !{!"../drivers/thunderbolt/switch.c", i32 601, i32 2}
!31 = !{ptr @.str.12, !30, !"<string literal>", i1 false, i1 false}
!32 = !{ptr @.str.13, !30, !"<string literal>", i1 false, i1 false}
!33 = !{ptr @tb_wait_for_port._entry, !30, !"_entry", i1 false, i1 false}
!34 = !{ptr @tb_wait_for_port._entry_ptr, !30, !"_entry_ptr", i1 false, i1 false}
!35 = !{ptr @.str.14, !36, !"<string literal>", i1 false, i1 false}
!36 = !{!"../drivers/thunderbolt/switch.c", i32 636, i32 2}
!37 = !{ptr @.str.15, !36, !"<string literal>", i1 false, i1 false}
!38 = !{ptr @tb_port_add_nfc_credits.__UNIQUE_ID_ddebug251, !36, !"__UNIQUE_ID_ddebug251", i1 false, i1 false}
!39 = !{ptr @.str.16, !40, !"<string literal>", i1 false, i1 false}
!40 = !{!"../drivers/thunderbolt/switch.c", i32 656, i32 2}
!41 = !{ptr @.str.17, !40, !"<string literal>", i1 false, i1 false}
!42 = !{ptr @tb_port_clear_counter.__UNIQUE_ID_ddebug252, !40, !"__UNIQUE_ID_ddebug252", i1 false, i1 false}
!43 = !{ptr @.str.18, !44, !"<string literal>", i1 false, i1 false}
!44 = !{!"../drivers/thunderbolt/switch.c", i32 1453, i32 2}
!45 = !{ptr @.str.19, !44, !"<string literal>", i1 false, i1 false}
!46 = !{ptr @tb_switch_reset.__UNIQUE_ID_ddebug260, !44, !"__UNIQUE_ID_ddebug260", i1 false, i1 false}
!47 = !{ptr @.str.20, !48, !"<string literal>", i1 false, i1 false}
!48 = !{!"../drivers/thunderbolt/switch.c", i32 2086, i32 10}
!49 = !{ptr @tb_switch_type, !50, !"tb_switch_type", i1 false, i1 false}
!50 = !{!"../drivers/thunderbolt/switch.c", i32 2085, i32 20}
!51 = !{ptr @.str.21, !52, !"<string literal>", i1 false, i1 false}
!52 = !{!"../drivers/thunderbolt/switch.c", i32 2196, i32 2}
!53 = !{ptr @.str.22, !52, !"<string literal>", i1 false, i1 false}
!54 = !{ptr @tb_switch_alloc.__UNIQUE_ID_ddebug261, !52, !"__UNIQUE_ID_ddebug261", i1 false, i1 false}
!55 = !{ptr @.str.23, !56, !"<string literal>", i1 false, i1 false}
!56 = !{!"../drivers/thunderbolt/switch.c", i32 2257, i32 25}
!57 = !{ptr @.str.24, !58, !"<string literal>", i1 false, i1 false}
!58 = !{!"../drivers/thunderbolt/switch.c", i32 2326, i32 2}
!59 = !{ptr @.str.25, !58, !"<string literal>", i1 false, i1 false}
!60 = !{ptr @tb_switch_configure.__UNIQUE_ID_ddebug262, !58, !"__UNIQUE_ID_ddebug262", i1 false, i1 false}
!61 = !{ptr @.str.26, !58, !"<string literal>", i1 false, i1 false}
!62 = !{ptr @.str.27, !58, !"<string literal>", i1 false, i1 false}
!63 = !{ptr @.str.28, !64, !"<string literal>", i1 false, i1 false}
!64 = !{!"../drivers/thunderbolt/switch.c", i32 2349, i32 4}
!65 = !{ptr @tb_switch_configure._entry, !64, !"_entry", i1 false, i1 false}
!66 = !{ptr @tb_switch_configure._entry_ptr, !64, !"_entry_ptr", i1 false, i1 false}
!67 = !{ptr @.str.30, !68, !"<string literal>", i1 false, i1 false}
!68 = !{!"../drivers/thunderbolt/switch.c", i32 2353, i32 4}
!69 = !{ptr @tb_switch_configure._entry.29, !68, !"_entry", i1 false, i1 false}
!70 = !{ptr @tb_switch_configure._entry_ptr.31, !68, !"_entry_ptr", i1 false, i1 false}
!71 = !{ptr @.str.32, !72, !"<string literal>", i1 false, i1 false}
!72 = !{!"../drivers/thunderbolt/switch.c", i32 2611, i32 3}
!73 = !{ptr @.str.33, !72, !"<string literal>", i1 false, i1 false}
!74 = !{ptr @tb_switch_lane_bonding_enable._entry, !72, !"_entry", i1 false, i1 false}
!75 = !{ptr @tb_switch_lane_bonding_enable._entry_ptr, !72, !"_entry_ptr", i1 false, i1 false}
!76 = !{ptr @tb_switch_lane_bonding_enable._entry.34, !77, !"_entry", i1 false, i1 false}
!77 = !{!"../drivers/thunderbolt/switch.c", i32 2617, i32 3}
!78 = !{ptr @tb_switch_lane_bonding_enable._entry_ptr.35, !77, !"_entry_ptr", i1 false, i1 false}
!79 = !{ptr @.str.37, !80, !"<string literal>", i1 false, i1 false}
!80 = !{!"../drivers/thunderbolt/switch.c", i32 2624, i32 3}
!81 = !{ptr @tb_switch_lane_bonding_enable._entry.36, !80, !"_entry", i1 false, i1 false}
!82 = !{ptr @tb_switch_lane_bonding_enable._entry_ptr.38, !80, !"_entry_ptr", i1 false, i1 false}
!83 = !{ptr @.str.39, !84, !"<string literal>", i1 false, i1 false}
!84 = !{!"../drivers/thunderbolt/switch.c", i32 2632, i32 2}
!85 = !{ptr @tb_switch_lane_bonding_enable.__UNIQUE_ID_ddebug264, !84, !"__UNIQUE_ID_ddebug264", i1 false, i1 false}
!86 = !{ptr @.str.40, !87, !"<string literal>", i1 false, i1 false}
!87 = !{!"../drivers/thunderbolt/switch.c", i32 2665, i32 3}
!88 = !{ptr @.str.41, !87, !"<string literal>", i1 false, i1 false}
!89 = !{ptr @tb_switch_lane_bonding_disable._entry, !87, !"_entry", i1 false, i1 false}
!90 = !{ptr @tb_switch_lane_bonding_disable._entry_ptr, !87, !"_entry_ptr", i1 false, i1 false}
!91 = !{ptr @.str.42, !92, !"<string literal>", i1 false, i1 false}
!92 = !{!"../drivers/thunderbolt/switch.c", i32 2671, i32 2}
!93 = !{ptr @tb_switch_lane_bonding_disable.__UNIQUE_ID_ddebug265, !92, !"__UNIQUE_ID_ddebug265", i1 false, i1 false}
!94 = !{ptr @.str.43, !95, !"<string literal>", i1 false, i1 false}
!95 = !{!"../drivers/thunderbolt/switch.c", i32 2772, i32 3}
!96 = !{ptr @.str.44, !95, !"<string literal>", i1 false, i1 false}
!97 = !{ptr @.str.45, !95, !"<string literal>", i1 false, i1 false}
!98 = !{ptr @tb_switch_add._entry, !95, !"_entry", i1 false, i1 false}
!99 = !{ptr @tb_switch_add._entry_ptr, !95, !"_entry_ptr", i1 false, i1 false}
!100 = !{ptr @.str.47, !101, !"<string literal>", i1 false, i1 false}
!101 = !{!"../drivers/thunderbolt/switch.c", i32 2782, i32 4}
!102 = !{ptr @tb_switch_add._entry.46, !101, !"_entry", i1 false, i1 false}
!103 = !{ptr @tb_switch_add._entry_ptr.48, !101, !"_entry_ptr", i1 false, i1 false}
!104 = !{ptr @.str.49, !105, !"<string literal>", i1 false, i1 false}
!105 = !{!"../drivers/thunderbolt/switch.c", i32 2785, i32 3}
!106 = !{ptr @tb_switch_add.__UNIQUE_ID_ddebug266, !105, !"__UNIQUE_ID_ddebug266", i1 false, i1 false}
!107 = !{ptr @.str.51, !108, !"<string literal>", i1 false, i1 false}
!108 = !{!"../drivers/thunderbolt/switch.c", i32 2791, i32 4}
!109 = !{ptr @tb_switch_add._entry.50, !108, !"_entry", i1 false, i1 false}
!110 = !{ptr @tb_switch_add._entry_ptr.52, !108, !"_entry_ptr", i1 false, i1 false}
!111 = !{ptr @.str.53, !112, !"<string literal>", i1 false, i1 false}
!112 = !{!"../drivers/thunderbolt/switch.c", i32 2797, i32 5}
!113 = !{ptr @tb_switch_add.__UNIQUE_ID_ddebug267, !112, !"__UNIQUE_ID_ddebug267", i1 false, i1 false}
!114 = !{ptr @.str.55, !115, !"<string literal>", i1 false, i1 false}
!115 = !{!"../drivers/thunderbolt/switch.c", i32 2802, i32 5}
!116 = !{ptr @tb_switch_add._entry.54, !115, !"_entry", i1 false, i1 false}
!117 = !{ptr @tb_switch_add._entry_ptr.56, !115, !"_entry_ptr", i1 false, i1 false}
!118 = !{ptr @.str.58, !119, !"<string literal>", i1 false, i1 false}
!119 = !{!"../drivers/thunderbolt/switch.c", i32 2820, i32 3}
!120 = !{ptr @tb_switch_add._entry.57, !119, !"_entry", i1 false, i1 false}
!121 = !{ptr @tb_switch_add._entry_ptr.59, !119, !"_entry_ptr", i1 false, i1 false}
!122 = !{ptr @.str.61, !123, !"<string literal>", i1 false, i1 false}
!123 = !{!"../drivers/thunderbolt/switch.c", i32 2825, i32 3}
!124 = !{ptr @.str.62, !123, !"<string literal>", i1 false, i1 false}
!125 = !{ptr @tb_switch_add._entry.60, !123, !"_entry", i1 false, i1 false}
!126 = !{ptr @tb_switch_add._entry_ptr.63, !123, !"_entry_ptr", i1 false, i1 false}
!127 = !{ptr @.str.65, !128, !"<string literal>", i1 false, i1 false}
!128 = !{!"../drivers/thunderbolt/switch.c", i32 2828, i32 4}
!129 = !{ptr @tb_switch_add._entry.64, !128, !"_entry", i1 false, i1 false}
!130 = !{ptr @tb_switch_add._entry_ptr.66, !128, !"_entry_ptr", i1 false, i1 false}
!131 = !{ptr @.str.68, !132, !"<string literal>", i1 false, i1 false}
!132 = !{!"../drivers/thunderbolt/switch.c", i32 2834, i32 3}
!133 = !{ptr @tb_switch_add._entry.67, !132, !"_entry", i1 false, i1 false}
!134 = !{ptr @tb_switch_add._entry_ptr.69, !132, !"_entry_ptr", i1 false, i1 false}
!135 = !{ptr @.str.71, !136, !"<string literal>", i1 false, i1 false}
!136 = !{!"../drivers/thunderbolt/switch.c", i32 2840, i32 3}
!137 = !{ptr @tb_switch_add._entry.70, !136, !"_entry", i1 false, i1 false}
!138 = !{ptr @tb_switch_add._entry_ptr.72, !136, !"_entry_ptr", i1 false, i1 false}
!139 = !{ptr @.str.73, !140, !"<string literal>", i1 false, i1 false}
!140 = !{!"../drivers/thunderbolt/switch.c", i32 2911, i32 3}
!141 = !{ptr @.str.74, !140, !"<string literal>", i1 false, i1 false}
!142 = !{ptr @tb_switch_remove._entry, !140, !"_entry", i1 false, i1 false}
!143 = !{ptr @tb_switch_remove._entry_ptr, !140, !"_entry_ptr", i1 false, i1 false}
!144 = !{ptr @.str.75, !145, !"<string literal>", i1 false, i1 false}
!145 = !{!"../drivers/thunderbolt/switch.c", i32 2924, i32 3}
!146 = !{ptr @.str.76, !147, !"<string literal>", i1 false, i1 false}
!147 = !{!"../drivers/thunderbolt/switch.c", i32 2928, i32 3}
!148 = !{ptr @.str.77, !149, !"<string literal>", i1 false, i1 false}
!149 = !{!"../drivers/thunderbolt/switch.c", i32 2957, i32 2}
!150 = !{ptr @.str.78, !149, !"<string literal>", i1 false, i1 false}
!151 = !{ptr @tb_switch_resume.__UNIQUE_ID_ddebug270, !149, !"__UNIQUE_ID_ddebug270", i1 false, i1 false}
!152 = !{ptr @.str.79, !153, !"<string literal>", i1 false, i1 false}
!153 = !{!"../drivers/thunderbolt/switch.c", i32 2973, i32 4}
!154 = !{ptr @tb_switch_resume._entry, !153, !"_entry", i1 false, i1 false}
!155 = !{ptr @tb_switch_resume._entry_ptr, !153, !"_entry_ptr", i1 false, i1 false}
!156 = !{ptr @.str.81, !157, !"<string literal>", i1 false, i1 false}
!157 = !{!"../drivers/thunderbolt/switch.c", i32 2982, i32 4}
!158 = !{ptr @tb_switch_resume._entry.80, !157, !"_entry", i1 false, i1 false}
!159 = !{ptr @tb_switch_resume._entry_ptr.82, !157, !"_entry_ptr", i1 false, i1 false}
!160 = !{ptr @.str.84, !161, !"<string literal>", i1 false, i1 false}
!161 = !{!"../drivers/thunderbolt/switch.c", i32 2986, i32 4}
!162 = !{ptr @tb_switch_resume._entry.83, !161, !"_entry", i1 false, i1 false}
!163 = !{ptr @tb_switch_resume._entry_ptr.85, !161, !"_entry_ptr", i1 false, i1 false}
!164 = !{ptr @.str.87, !165, !"<string literal>", i1 false, i1 false}
!165 = !{!"../drivers/thunderbolt/switch.c", i32 3013, i32 4}
!166 = !{ptr @tb_switch_resume._entry.86, !165, !"_entry", i1 false, i1 false}
!167 = !{ptr @tb_switch_resume._entry_ptr.88, !165, !"_entry_ptr", i1 false, i1 false}
!168 = !{ptr @.str.90, !169, !"<string literal>", i1 false, i1 false}
!169 = !{!"../drivers/thunderbolt/switch.c", i32 3025, i32 5}
!170 = !{ptr @tb_switch_resume._entry.89, !169, !"_entry", i1 false, i1 false}
!171 = !{ptr @tb_switch_resume._entry_ptr.91, !169, !"_entry_ptr", i1 false, i1 false}
!172 = !{ptr @tb_switch_resume._entry.92, !173, !"_entry", i1 false, i1 false}
!173 = !{!"../drivers/thunderbolt/switch.c", i32 3027, i32 5}
!174 = !{ptr @tb_switch_resume._entry_ptr.93, !173, !"_entry_ptr", i1 false, i1 false}
!175 = !{ptr @.str.94, !176, !"<string literal>", i1 false, i1 false}
!176 = !{!"../drivers/thunderbolt/switch.c", i32 3052, i32 2}
!177 = !{ptr @.str.95, !176, !"<string literal>", i1 false, i1 false}
!178 = !{ptr @tb_switch_suspend.__UNIQUE_ID_ddebug271, !176, !"__UNIQUE_ID_ddebug271", i1 false, i1 false}
!179 = !{ptr @.str.96, !180, !"<string literal>", i1 false, i1 false}
!180 = !{!"../drivers/thunderbolt/switch.c", i32 3059, i32 3}
!181 = !{ptr @tb_switch_suspend._entry, !180, !"_entry", i1 false, i1 false}
!182 = !{ptr @tb_switch_suspend._entry_ptr, !180, !"_entry_ptr", i1 false, i1 false}
!183 = !{ptr @.str.97, !184, !"<string literal>", i1 false, i1 false}
!184 = !{!"../drivers/thunderbolt/switch.c", i32 3121, i32 3}
!185 = !{ptr @.str.98, !184, !"<string literal>", i1 false, i1 false}
!186 = !{ptr @tb_switch_alloc_dp_resource._entry, !184, !"_entry", i1 false, i1 false}
!187 = !{ptr @tb_switch_alloc_dp_resource._entry_ptr, !184, !"_entry_ptr", i1 false, i1 false}
!188 = !{ptr @.str.99, !189, !"<string literal>", i1 false, i1 false}
!189 = !{!"../drivers/thunderbolt/switch.c", i32 3124, i32 3}
!190 = !{ptr @tb_switch_alloc_dp_resource.__UNIQUE_ID_ddebug272, !189, !"__UNIQUE_ID_ddebug272", i1 false, i1 false}
!191 = !{ptr @.str.100, !192, !"<string literal>", i1 false, i1 false}
!192 = !{!"../drivers/thunderbolt/switch.c", i32 3147, i32 3}
!193 = !{ptr @.str.101, !192, !"<string literal>", i1 false, i1 false}
!194 = !{ptr @tb_switch_dealloc_dp_resource._entry, !192, !"_entry", i1 false, i1 false}
!195 = !{ptr @tb_switch_dealloc_dp_resource._entry_ptr, !192, !"_entry_ptr", i1 false, i1 false}
!196 = !{ptr @.str.102, !197, !"<string literal>", i1 false, i1 false}
!197 = !{!"../drivers/thunderbolt/switch.c", i32 3150, i32 3}
!198 = !{ptr @tb_switch_dealloc_dp_resource.__UNIQUE_ID_ddebug273, !197, !"__UNIQUE_ID_ddebug273", i1 false, i1 false}
!199 = !{ptr @__param_str_clx, !1, !"__param_str_clx", i1 false, i1 false}
!200 = !{ptr @clx_enabled, !201, !"clx_enabled", i1 false, i1 false}
!201 = !{!"../drivers/thunderbolt/switch.c", i32 30, i32 13}
!202 = !{ptr @.str.103, !203, !"<string literal>", i1 false, i1 false}
!203 = !{!"../drivers/thunderbolt/tb.h", i32 538, i32 6}
!204 = !{ptr @.str.104, !205, !"<string literal>", i1 false, i1 false}
!205 = !{!"../drivers/thunderbolt/switch.c", i32 1133, i32 3}
!206 = !{ptr @.str.105, !205, !"<string literal>", i1 false, i1 false}
!207 = !{ptr @tb_port_do_update_credits.__UNIQUE_ID_ddebug254, !205, !"__UNIQUE_ID_ddebug254", i1 false, i1 false}
!208 = !{ptr @.str.106, !209, !"<string literal>", i1 false, i1 false}
!209 = !{!"../drivers/thunderbolt/switch.c", i32 2028, i32 27}
!210 = !{ptr @.str.107, !211, !"<string literal>", i1 false, i1 false}
!211 = !{!"../drivers/thunderbolt/switch.c", i32 2033, i32 10}
!212 = !{ptr @.str.108, !213, !"<string literal>", i1 false, i1 false}
!213 = !{!"../drivers/thunderbolt/switch.c", i32 2047, i32 16}
!214 = !{ptr @.str.109, !215, !"<string literal>", i1 false, i1 false}
!215 = !{!"../drivers/thunderbolt/switch.c", i32 2047, i32 24}
!216 = !{ptr @.str.110, !217, !"<string literal>", i1 false, i1 false}
!217 = !{!"../drivers/thunderbolt/switch.c", i32 2050, i32 26}
!218 = !{ptr @tb_switch_pm_ops, !219, !"tb_switch_pm_ops", i1 false, i1 false}
!219 = !{!"../drivers/thunderbolt/switch.c", i32 2080, i32 32}
!220 = !{ptr @.str.111, !221, !"<string literal>", i1 false, i1 false}
!221 = !{!"../drivers/thunderbolt/switch.c", i32 2130, i32 3}
!222 = !{ptr @.str.112, !221, !"<string literal>", i1 false, i1 false}
!223 = !{ptr @tb_switch_get_generation._entry, !221, !"_entry", i1 false, i1 false}
!224 = !{ptr @tb_switch_get_generation._entry_ptr, !221, !"_entry_ptr", i1 false, i1 false}
!225 = !{ptr @.str.113, !226, !"<string literal>", i1 false, i1 false}
!226 = !{!"../drivers/thunderbolt/switch.c", i32 1426, i32 2}
!227 = !{ptr @.str.114, !226, !"<string literal>", i1 false, i1 false}
!228 = !{ptr @tb_dump_switch.__UNIQUE_ID_ddebug255, !226, !"__UNIQUE_ID_ddebug255", i1 false, i1 false}
!229 = !{ptr @.str.115, !230, !"<string literal>", i1 false, i1 false}
!230 = !{!"../drivers/thunderbolt/switch.c", i32 1429, i32 2}
!231 = !{ptr @tb_dump_switch.__UNIQUE_ID_ddebug256, !230, !"__UNIQUE_ID_ddebug256", i1 false, i1 false}
!232 = !{ptr @.str.116, !233, !"<string literal>", i1 false, i1 false}
!233 = !{!"../drivers/thunderbolt/switch.c", i32 1430, i32 2}
!234 = !{ptr @tb_dump_switch.__UNIQUE_ID_ddebug257, !233, !"__UNIQUE_ID_ddebug257", i1 false, i1 false}
!235 = !{ptr @.str.117, !236, !"<string literal>", i1 false, i1 false}
!236 = !{!"../drivers/thunderbolt/switch.c", i32 1431, i32 2}
!237 = !{ptr @tb_dump_switch.__UNIQUE_ID_ddebug258, !236, !"__UNIQUE_ID_ddebug258", i1 false, i1 false}
!238 = !{ptr @.str.118, !239, !"<string literal>", i1 false, i1 false}
!239 = !{!"../drivers/thunderbolt/switch.c", i32 1436, i32 2}
!240 = !{ptr @tb_dump_switch.__UNIQUE_ID_ddebug259, !239, !"__UNIQUE_ID_ddebug259", i1 false, i1 false}
!241 = !{ptr @.str.119, !242, !"<string literal>", i1 false, i1 false}
!242 = !{!"../drivers/thunderbolt/switch.c", i32 1410, i32 10}
!243 = !{ptr @.str.120, !244, !"<string literal>", i1 false, i1 false}
!244 = !{!"../drivers/thunderbolt/switch.c", i32 1412, i32 10}
!245 = !{ptr @.str.121, !246, !"<string literal>", i1 false, i1 false}
!246 = !{!"../drivers/thunderbolt/switch.c", i32 1414, i32 10}
!247 = !{ptr @.str.122, !248, !"<string literal>", i1 false, i1 false}
!248 = !{!"../drivers/thunderbolt/switch.c", i32 1416, i32 10}
!249 = !{ptr @.str.123, !250, !"<string literal>", i1 false, i1 false}
!250 = !{!"../drivers/thunderbolt/switch.c", i32 1418, i32 10}
!251 = !{ptr @xa_init_flags.__key, !252, !"__key", i1 false, i1 false}
!252 = !{!"../include/linux/xarray.h", i32 378, i32 2}
!253 = !{ptr @.str.124, !252, !"<string literal>", i1 false, i1 false}
!254 = !{ptr @switch_groups, !255, !"switch_groups", i1 false, i1 false}
!255 = !{!"../drivers/thunderbolt/switch.c", i32 1996, i32 38}
!256 = !{ptr @switch_group, !257, !"switch_group", i1 false, i1 false}
!257 = !{!"../drivers/thunderbolt/switch.c", i32 1991, i32 37}
!258 = !{ptr @.str.125, !259, !"<string literal>", i1 false, i1 false}
!259 = !{!"../drivers/thunderbolt/switch.c", i32 1649, i32 8}
!260 = !{ptr @dev_attr_authorized, !259, !"dev_attr_authorized", i1 false, i1 false}
!261 = !{ptr @.str.126, !262, !"<string literal>", i1 false, i1 false}
!262 = !{!"../drivers/thunderbolt/switch.c", i32 1546, i32 22}
!263 = !{ptr @.str.127, !264, !"<string literal>", i1 false, i1 false}
!264 = !{!"../drivers/thunderbolt/switch.c", i32 1619, i32 24}
!265 = !{ptr @.str.128, !266, !"<string literal>", i1 false, i1 false}
!266 = !{!"../drivers/thunderbolt/switch.c", i32 1551, i32 19}
!267 = !{ptr @dev_attr_device, !268, !"dev_attr_device", i1 false, i1 false}
!268 = !{!"../drivers/thunderbolt/switch.c", i32 1667, i32 8}
!269 = !{ptr @.str.129, !270, !"<string literal>", i1 false, i1 false}
!270 = !{!"../drivers/thunderbolt/switch.c", i32 1665, i32 22}
!271 = !{ptr @.str.130, !272, !"<string literal>", i1 false, i1 false}
!272 = !{!"../drivers/thunderbolt/switch.c", i32 1676, i32 8}
!273 = !{ptr @dev_attr_device_name, !272, !"dev_attr_device_name", i1 false, i1 false}
!274 = !{ptr @.str.131, !275, !"<string literal>", i1 false, i1 false}
!275 = !{!"../drivers/thunderbolt/switch.c", i32 1674, i32 22}
!276 = !{ptr @.str.132, !277, !"<string literal>", i1 false, i1 false}
!277 = !{!"../drivers/thunderbolt/switch.c", i32 1674, i32 66}
!278 = !{ptr @.str.133, !279, !"<string literal>", i1 false, i1 false}
!279 = !{!"../drivers/thunderbolt/switch.c", i32 1895, i32 8}
!280 = !{ptr @dev_attr_vendor, !279, !"dev_attr_vendor", i1 false, i1 false}
!281 = !{ptr @.str.134, !282, !"<string literal>", i1 false, i1 false}
!282 = !{!"../drivers/thunderbolt/switch.c", i32 1904, i32 8}
!283 = !{ptr @dev_attr_vendor_name, !282, !"dev_attr_vendor_name", i1 false, i1 false}
!284 = !{ptr @.str.135, !285, !"<string literal>", i1 false, i1 false}
!285 = !{!"../drivers/thunderbolt/switch.c", i32 1737, i32 8}
!286 = !{ptr @dev_attr_key, !285, !"dev_attr_key", i1 false, i1 false}
!287 = !{ptr @.str.136, !288, !"<string literal>", i1 false, i1 false}
!288 = !{!"../drivers/thunderbolt/switch.c", i32 1697, i32 22}
!289 = !{ptr @.str.137, !290, !"<string literal>", i1 false, i1 false}
!290 = !{!"../drivers/thunderbolt/switch.c", i32 1699, i32 22}
!291 = !{ptr @.str.138, !292, !"<string literal>", i1 false, i1 false}
!292 = !{!"../drivers/thunderbolt/switch.c", i32 1751, i32 8}
!293 = !{ptr @dev_attr_rx_speed, !292, !"dev_attr_rx_speed", i1 false, i1 false}
!294 = !{ptr @.str.139, !295, !"<string literal>", i1 false, i1 false}
!295 = !{!"../drivers/thunderbolt/switch.c", i32 1744, i32 22}
!296 = !{ptr @.str.140, !297, !"<string literal>", i1 false, i1 false}
!297 = !{!"../drivers/thunderbolt/switch.c", i32 1766, i32 8}
!298 = !{ptr @dev_attr_rx_lanes, !297, !"dev_attr_rx_lanes", i1 false, i1 false}
!299 = !{ptr @.str.141, !300, !"<string literal>", i1 false, i1 false}
!300 = !{!"../drivers/thunderbolt/switch.c", i32 1752, i32 8}
!301 = !{ptr @dev_attr_tx_speed, !300, !"dev_attr_tx_speed", i1 false, i1 false}
!302 = !{ptr @.str.142, !303, !"<string literal>", i1 false, i1 false}
!303 = !{!"../drivers/thunderbolt/switch.c", i32 1767, i32 8}
!304 = !{ptr @dev_attr_tx_lanes, !303, !"dev_attr_tx_lanes", i1 false, i1 false}
!305 = !{ptr @.str.143, !306, !"<string literal>", i1 false, i1 false}
!306 = !{!"../drivers/thunderbolt/switch.c", i32 1848, i32 8}
!307 = !{ptr @dev_attr_nvm_authenticate, !306, !"dev_attr_nvm_authenticate", i1 false, i1 false}
!308 = !{ptr @.str.144, !309, !"<string literal>", i1 false, i1 false}
!309 = !{!"../drivers/thunderbolt/switch.c", i32 40, i32 8}
!310 = !{ptr @.str.145, !309, !"<string literal>", i1 false, i1 false}
!311 = !{ptr @nvm_auth_status_lock, !309, !"nvm_auth_status_lock", i1 false, i1 false}
!312 = !{ptr @nvm_auth_status_cache, !313, !"nvm_auth_status_cache", i1 false, i1 false}
!313 = !{!"../drivers/thunderbolt/switch.c", i32 39, i32 8}
!314 = !{ptr @.str.146, !315, !"<string literal>", i1 false, i1 false}
!315 = !{!"../drivers/thunderbolt/switch.c", i32 198, i32 3}
!316 = !{ptr @.str.147, !315, !"<string literal>", i1 false, i1 false}
!317 = !{ptr @nvm_authenticate_host_dma_port._entry, !315, !"_entry", i1 false, i1 false}
!318 = !{ptr @nvm_authenticate_host_dma_port._entry_ptr, !315, !"_entry_ptr", i1 false, i1 false}
!319 = !{ptr @.str.148, !320, !"<string literal>", i1 false, i1 false}
!320 = !{!"../drivers/thunderbolt/switch.c", i32 241, i32 5}
!321 = !{ptr @.str.149, !320, !"<string literal>", i1 false, i1 false}
!322 = !{ptr @nvm_authenticate_device_dma_port._entry, !320, !"_entry", i1 false, i1 false}
!323 = !{ptr @nvm_authenticate_device_dma_port._entry_ptr, !320, !"_entry_ptr", i1 false, i1 false}
!324 = !{ptr @.str.151, !325, !"<string literal>", i1 false, i1 false}
!325 = !{!"../drivers/thunderbolt/switch.c", i32 245, i32 4}
!326 = !{ptr @nvm_authenticate_device_dma_port._entry.150, !325, !"_entry", i1 false, i1 false}
!327 = !{ptr @nvm_authenticate_device_dma_port._entry_ptr.152, !325, !"_entry_ptr", i1 false, i1 false}
!328 = !{ptr @.str.153, !329, !"<string literal>", i1 false, i1 false}
!329 = !{!"../drivers/thunderbolt/switch.c", i32 1886, i32 8}
!330 = !{ptr @dev_attr_nvm_version, !329, !"dev_attr_nvm_version", i1 false, i1 false}
!331 = !{ptr @.str.154, !332, !"<string literal>", i1 false, i1 false}
!332 = !{!"../drivers/thunderbolt/switch.c", i32 1880, i32 22}
!333 = !{ptr @.str.155, !334, !"<string literal>", i1 false, i1 false}
!334 = !{!"../drivers/thunderbolt/switch.c", i32 1658, i32 8}
!335 = !{ptr @dev_attr_boot, !334, !"dev_attr_boot", i1 false, i1 false}
!336 = !{ptr @.str.156, !337, !"<string literal>", i1 false, i1 false}
!337 = !{!"../drivers/thunderbolt/switch.c", i32 1864, i32 8}
!338 = !{ptr @dev_attr_nvm_authenticate_on_disconnect, !337, !"dev_attr_nvm_authenticate_on_disconnect", i1 false, i1 false}
!339 = !{ptr @switch_attrs, !340, !"switch_attrs", i1 false, i1 false}
!340 = !{!"../drivers/thunderbolt/switch.c", i32 1915, i32 26}
!341 = !{ptr @.str.157, !342, !"<string literal>", i1 false, i1 false}
!342 = !{!"../drivers/thunderbolt/switch.c", i32 1685, i32 8}
!343 = !{ptr @dev_attr_generation, !342, !"dev_attr_generation", i1 false, i1 false}
!344 = !{ptr @.str.158, !345, !"<string literal>", i1 false, i1 false}
!345 = !{!"../drivers/thunderbolt/switch.c", i32 1913, i32 8}
!346 = !{ptr @dev_attr_unique_id, !345, !"dev_attr_unique_id", i1 false, i1 false}
!347 = !{ptr @.str.159, !348, !"<string literal>", i1 false, i1 false}
!348 = !{!"../drivers/thunderbolt/switch.c", i32 1911, i32 22}
!349 = !{ptr @.str.160, !350, !"<string literal>", i1 false, i1 false}
!350 = !{!"../drivers/thunderbolt/switch.c", i32 2451, i32 4}
!351 = !{ptr @.str.161, !350, !"<string literal>", i1 false, i1 false}
!352 = !{ptr @tb_switch_add_dma_port._entry, !350, !"_entry", i1 false, i1 false}
!353 = !{ptr @tb_switch_add_dma_port._entry_ptr, !350, !"_entry_ptr", i1 false, i1 false}
!354 = !{ptr @tb_switch_add_dma_port._entry.162, !355, !"_entry", i1 false, i1 false}
!355 = !{!"../drivers/thunderbolt/switch.c", i32 2493, i32 3}
!356 = !{ptr @tb_switch_add_dma_port._entry_ptr.163, !355, !"_entry_ptr", i1 false, i1 false}
!357 = !{ptr @tb_switch_add_dma_port._entry.164, !358, !"_entry", i1 false, i1 false}
!358 = !{!"../drivers/thunderbolt/switch.c", i32 2497, i32 2}
!359 = !{ptr @tb_switch_add_dma_port._entry_ptr.165, !358, !"_entry_ptr", i1 false, i1 false}
!360 = !{ptr @.str.166, !361, !"<string literal>", i1 false, i1 false}
!361 = !{!"../drivers/thunderbolt/switch.c", i32 2744, i32 3}
!362 = !{ptr @.str.167, !361, !"<string literal>", i1 false, i1 false}
!363 = !{ptr @tb_switch_credits_init._entry, !361, !"_entry", i1 false, i1 false}
!364 = !{ptr @tb_switch_credits_init._entry_ptr, !361, !"_entry_ptr", i1 false, i1 false}
!365 = !{ptr @.str.168, !366, !"<string literal>", i1 false, i1 false}
!366 = !{!"../drivers/thunderbolt/switch.c", i32 744, i32 4}
!367 = !{ptr @.str.169, !366, !"<string literal>", i1 false, i1 false}
!368 = !{ptr @tb_init_port.__UNIQUE_ID_ddebug253, !366, !"__UNIQUE_ID_ddebug253", i1 false, i1 false}
!369 = !{ptr @.str.170, !370, !"<string literal>", i1 false, i1 false}
!370 = !{!"../drivers/thunderbolt/switch.c", i32 759, i32 4}
!371 = !{ptr @.str.171, !372, !"<string literal>", i1 false, i1 false}
!372 = !{!"../drivers/thunderbolt/switch.c", i32 505, i32 2}
!373 = !{ptr @.str.172, !372, !"<string literal>", i1 false, i1 false}
!374 = !{ptr @tb_dump_port.__UNIQUE_ID_ddebug239, !372, !"__UNIQUE_ID_ddebug239", i1 false, i1 false}
!375 = !{ptr @.str.173, !376, !"<string literal>", i1 false, i1 false}
!376 = !{!"../drivers/thunderbolt/switch.c", i32 510, i32 2}
!377 = !{ptr @tb_dump_port.__UNIQUE_ID_ddebug240, !376, !"__UNIQUE_ID_ddebug240", i1 false, i1 false}
!378 = !{ptr @.str.174, !379, !"<string literal>", i1 false, i1 false}
!379 = !{!"../drivers/thunderbolt/switch.c", i32 512, i32 2}
!380 = !{ptr @tb_dump_port.__UNIQUE_ID_ddebug241, !379, !"__UNIQUE_ID_ddebug241", i1 false, i1 false}
!381 = !{ptr @.str.175, !382, !"<string literal>", i1 false, i1 false}
!382 = !{!"../drivers/thunderbolt/switch.c", i32 513, i32 2}
!383 = !{ptr @tb_dump_port.__UNIQUE_ID_ddebug242, !382, !"__UNIQUE_ID_ddebug242", i1 false, i1 false}
!384 = !{ptr @.str.176, !385, !"<string literal>", i1 false, i1 false}
!385 = !{!"../drivers/thunderbolt/switch.c", i32 514, i32 2}
!386 = !{ptr @tb_dump_port.__UNIQUE_ID_ddebug243, !385, !"__UNIQUE_ID_ddebug243", i1 false, i1 false}
!387 = !{ptr @.str.177, !388, !"<string literal>", i1 false, i1 false}
!388 = !{!"../drivers/thunderbolt/switch.c", i32 478, i32 11}
!389 = !{ptr @.str.178, !390, !"<string literal>", i1 false, i1 false}
!390 = !{!"../drivers/thunderbolt/switch.c", i32 480, i32 11}
!391 = !{ptr @.str.179, !392, !"<string literal>", i1 false, i1 false}
!392 = !{!"../drivers/thunderbolt/switch.c", i32 482, i32 11}
!393 = !{ptr @.str.180, !394, !"<string literal>", i1 false, i1 false}
!394 = !{!"../drivers/thunderbolt/switch.c", i32 484, i32 11}
!395 = !{ptr @.str.181, !396, !"<string literal>", i1 false, i1 false}
!396 = !{!"../drivers/thunderbolt/switch.c", i32 487, i32 10}
!397 = !{ptr @.str.182, !398, !"<string literal>", i1 false, i1 false}
!398 = !{!"../drivers/thunderbolt/switch.c", i32 489, i32 10}
!399 = !{ptr @.str.183, !400, !"<string literal>", i1 false, i1 false}
!400 = !{!"../drivers/thunderbolt/switch.c", i32 491, i32 10}
!401 = !{ptr @.str.184, !402, !"<string literal>", i1 false, i1 false}
!402 = !{!"../drivers/thunderbolt/switch.c", i32 493, i32 10}
!403 = !{ptr @.str.185, !404, !"<string literal>", i1 false, i1 false}
!404 = !{!"../drivers/thunderbolt/switch.c", i32 495, i32 10}
!405 = !{ptr @.str.186, !406, !"<string literal>", i1 false, i1 false}
!406 = !{!"../drivers/thunderbolt/switch.c", i32 2531, i32 4}
!407 = !{ptr @.str.187, !406, !"<string literal>", i1 false, i1 false}
!408 = !{ptr @tb_switch_default_link_ports.__UNIQUE_ID_ddebug263, !406, !"__UNIQUE_ID_ddebug263", i1 false, i1 false}
!409 = !{ptr @.str.188, !410, !"<string literal>", i1 false, i1 false}
!410 = !{!"../drivers/thunderbolt/switch.c", i32 400, i32 3}
!411 = !{ptr @.str.189, !410, !"<string literal>", i1 false, i1 false}
!412 = !{ptr @tb_switch_nvm_add._entry, !410, !"_entry", i1 false, i1 false}
!413 = !{ptr @tb_switch_nvm_add._entry_ptr, !410, !"_entry_ptr", i1 false, i1 false}
!414 = !{ptr @.str.190, !415, !"<string literal>", i1 false, i1 false}
!415 = !{!"../drivers/thunderbolt/switch.c", i32 2943, i32 3}
!416 = !{ptr @.str.191, !415, !"<string literal>", i1 false, i1 false}
!417 = !{ptr @tb_switch_set_wake.__UNIQUE_ID_ddebug268, !415, !"__UNIQUE_ID_ddebug268", i1 false, i1 false}
!418 = !{ptr @.str.192, !419, !"<string literal>", i1 false, i1 false}
!419 = !{!"../drivers/thunderbolt/switch.c", i32 2945, i32 3}
!420 = !{ptr @tb_switch_set_wake.__UNIQUE_ID_ddebug269, !419, !"__UNIQUE_ID_ddebug269", i1 false, i1 false}
!421 = !{ptr @.str.193, !422, !"<string literal>", i1 false, i1 false}
!422 = !{!"../drivers/thunderbolt/switch.c", i32 3437, i32 2}
!423 = !{ptr @.str.194, !422, !"<string literal>", i1 false, i1 false}
!424 = !{ptr @tb_switch_enable_cl0s.__UNIQUE_ID_ddebug274, !422, !"__UNIQUE_ID_ddebug274", i1 false, i1 false}
!425 = !{ptr @.str.195, !422, !"<string literal>", i1 false, i1 false}
!426 = !{ptr @tb_switch_enable_cl0s.__UNIQUE_ID_ddebug275, !427, !"__UNIQUE_ID_ddebug275", i1 false, i1 false}
!427 = !{!"../drivers/thunderbolt/switch.c", i32 3439, i32 2}
!428 = !{ptr @.str.196, !429, !"<string literal>", i1 false, i1 false}
!429 = !{!"../drivers/thunderbolt/switch.c", i32 3464, i32 2}
!430 = !{ptr @tb_switch_enable_cl0s.__UNIQUE_ID_ddebug276, !429, !"__UNIQUE_ID_ddebug276", i1 false, i1 false}
!431 = !{ptr @.str.197, !432, !"<string literal>", i1 false, i1 false}
!432 = !{!"../drivers/thunderbolt/switch.c", i32 3537, i32 2}
!433 = !{ptr @.str.198, !432, !"<string literal>", i1 false, i1 false}
!434 = !{ptr @tb_switch_disable_cl0s.__UNIQUE_ID_ddebug277, !432, !"__UNIQUE_ID_ddebug277", i1 false, i1 false}
!435 = !{!"sp"}
!436 = !{i32 1, !"wchar_size", i32 2}
!437 = !{i32 1, !"min_enum_size", i32 4}
!438 = !{i32 8, !"branch-target-enforcement", i32 0}
!439 = !{i32 8, !"sign-return-address", i32 0}
!440 = !{i32 8, !"sign-return-address-all", i32 0}
!441 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!442 = !{i32 7, !"uwtable", i32 1}
!443 = !{i32 7, !"frame-pointer", i32 2}
!444 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!445 = !{i8 0, i8 2}
!446 = !{i64 2148843158, i64 2148843163, i64 2148843176, i64 2148843220, i64 2148843254, i64 2148843275}
!447 = !{!"auto-init"}
!448 = !{!"branch_weights", i32 1, i32 2000}
!449 = !{i32 0, i32 33}
!450 = distinct !{!450, !451}
!451 = !{!"llvm.loop.peeled.count", i32 1}
!452 = !{i64 2148275493, i64 2148275519, i64 2148275548, i64 2148275582, i64 2148275613, i64 2148275636}
