; ModuleID = '/llk/IR_all_yes/drivers/tty/vt/vt.c_pt.bc'
source_filename = "../drivers/tty/vt/vt.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab_gpl+register_vt_notifier\22, \22a\22\09"
module asm "\09.weak\09__crc_register_vt_notifier\09\09\09\09"
module asm "\09.long\09__crc_register_vt_notifier\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_register_vt_notifier:\09\09\09\09\09"
module asm "\09.asciz \09\22register_vt_notifier\22\09\09\09\09\09"
module asm "__kstrtabns_register_vt_notifier:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+unregister_vt_notifier\22, \22a\22\09"
module asm "\09.weak\09__crc_unregister_vt_notifier\09\09\09\09"
module asm "\09.long\09__crc_unregister_vt_notifier\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_unregister_vt_notifier:\09\09\09\09\09"
module asm "\09.asciz \09\22unregister_vt_notifier\22\09\09\09\09\09"
module asm "__kstrtabns_unregister_vt_notifier:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+do_unbind_con_driver\22, \22a\22\09"
module asm "\09.weak\09__crc_do_unbind_con_driver\09\09\09\09"
module asm "\09.long\09__crc_do_unbind_con_driver\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_do_unbind_con_driver:\09\09\09\09\09"
module asm "\09.asciz \09\22do_unbind_con_driver\22\09\09\09\09\09"
module asm "__kstrtabns_do_unbind_con_driver:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+con_is_bound\22, \22a\22\09"
module asm "\09.weak\09__crc_con_is_bound\09\09\09\09"
module asm "\09.long\09__crc_con_is_bound\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_con_is_bound:\09\09\09\09\09"
module asm "\09.asciz \09\22con_is_bound\22\09\09\09\09\09"
module asm "__kstrtabns_con_is_bound:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+con_is_visible\22, \22a\22\09"
module asm "\09.weak\09__crc_con_is_visible\09\09\09\09"
module asm "\09.long\09__crc_con_is_visible\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_con_is_visible:\09\09\09\09\09"
module asm "\09.asciz \09\22con_is_visible\22\09\09\09\09\09"
module asm "__kstrtabns_con_is_visible:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+con_debug_enter\22, \22a\22\09"
module asm "\09.weak\09__crc_con_debug_enter\09\09\09\09"
module asm "\09.long\09__crc_con_debug_enter\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_con_debug_enter:\09\09\09\09\09"
module asm "\09.asciz \09\22con_debug_enter\22\09\09\09\09\09"
module asm "__kstrtabns_con_debug_enter:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+con_debug_leave\22, \22a\22\09"
module asm "\09.weak\09__crc_con_debug_leave\09\09\09\09"
module asm "\09.long\09__crc_con_debug_leave\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_con_debug_leave:\09\09\09\09\09"
module asm "\09.asciz \09\22con_debug_leave\22\09\09\09\09\09"
module asm "__kstrtabns_con_debug_leave:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+do_unregister_con_driver\22, \22a\22\09"
module asm "\09.weak\09__crc_do_unregister_con_driver\09\09\09\09"
module asm "\09.long\09__crc_do_unregister_con_driver\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_do_unregister_con_driver:\09\09\09\09\09"
module asm "\09.asciz \09\22do_unregister_con_driver\22\09\09\09\09\09"
module asm "__kstrtabns_do_unregister_con_driver:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+do_take_over_console\22, \22a\22\09"
module asm "\09.weak\09__crc_do_take_over_console\09\09\09\09"
module asm "\09.long\09__crc_do_take_over_console\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_do_take_over_console:\09\09\09\09\09"
module asm "\09.asciz \09\22do_take_over_console\22\09\09\09\09\09"
module asm "__kstrtabns_do_take_over_console:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+do_blank_screen\22, \22a\22\09"
module asm "\09.weak\09__crc_do_blank_screen\09\09\09\09"
module asm "\09.long\09__crc_do_blank_screen\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_do_blank_screen:\09\09\09\09\09"
module asm "\09.asciz \09\22do_blank_screen\22\09\09\09\09\09"
module asm "__kstrtabns_do_blank_screen:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+do_unblank_screen\22, \22a\22\09"
module asm "\09.weak\09__crc_do_unblank_screen\09\09\09\09"
module asm "\09.long\09__crc_do_unblank_screen\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_do_unblank_screen:\09\09\09\09\09"
module asm "\09.asciz \09\22do_unblank_screen\22\09\09\09\09\09"
module asm "__kstrtabns_do_unblank_screen:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+screen_glyph\22, \22a\22\09"
module asm "\09.weak\09__crc_screen_glyph\09\09\09\09"
module asm "\09.long\09__crc_screen_glyph\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_screen_glyph:\09\09\09\09\09"
module asm "\09.asciz \09\22screen_glyph\22\09\09\09\09\09"
module asm "__kstrtabns_screen_glyph:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+screen_glyph_unicode\22, \22a\22\09"
module asm "\09.weak\09__crc_screen_glyph_unicode\09\09\09\09"
module asm "\09.long\09__crc_screen_glyph_unicode\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_screen_glyph_unicode:\09\09\09\09\09"
module asm "\09.asciz \09\22screen_glyph_unicode\22\09\09\09\09\09"
module asm "__kstrtabns_screen_glyph_unicode:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+screen_pos\22, \22a\22\09"
module asm "\09.weak\09__crc_screen_pos\09\09\09\09"
module asm "\09.long\09__crc_screen_pos\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_screen_pos:\09\09\09\09\09"
module asm "\09.asciz \09\22screen_pos\22\09\09\09\09\09"
module asm "__kstrtabns_screen_pos:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+vc_scrolldelta_helper\22, \22a\22\09"
module asm "\09.weak\09__crc_vc_scrolldelta_helper\09\09\09\09"
module asm "\09.long\09__crc_vc_scrolldelta_helper\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vc_scrolldelta_helper:\09\09\09\09\09"
module asm "\09.asciz \09\22vc_scrolldelta_helper\22\09\09\09\09\09"
module asm "__kstrtabns_vc_scrolldelta_helper:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+color_table\22, \22a\22\09"
module asm "\09.weak\09__crc_color_table\09\09\09\09"
module asm "\09.long\09__crc_color_table\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_color_table:\09\09\09\09\09"
module asm "\09.asciz \09\22color_table\22\09\09\09\09\09"
module asm "__kstrtabns_color_table:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+default_red\22, \22a\22\09"
module asm "\09.weak\09__crc_default_red\09\09\09\09"
module asm "\09.long\09__crc_default_red\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_default_red:\09\09\09\09\09"
module asm "\09.asciz \09\22default_red\22\09\09\09\09\09"
module asm "__kstrtabns_default_red:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+default_grn\22, \22a\22\09"
module asm "\09.weak\09__crc_default_grn\09\09\09\09"
module asm "\09.long\09__crc_default_grn\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_default_grn:\09\09\09\09\09"
module asm "\09.asciz \09\22default_grn\22\09\09\09\09\09"
module asm "__kstrtabns_default_grn:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+default_blu\22, \22a\22\09"
module asm "\09.weak\09__crc_default_blu\09\09\09\09"
module asm "\09.long\09__crc_default_blu\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_default_blu:\09\09\09\09\09"
module asm "\09.asciz \09\22default_blu\22\09\09\09\09\09"
module asm "__kstrtabns_default_blu:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+update_region\22, \22a\22\09"
module asm "\09.weak\09__crc_update_region\09\09\09\09"
module asm "\09.long\09__crc_update_region\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_update_region:\09\09\09\09\09"
module asm "\09.asciz \09\22update_region\22\09\09\09\09\09"
module asm "__kstrtabns_update_region:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+redraw_screen\22, \22a\22\09"
module asm "\09.weak\09__crc_redraw_screen\09\09\09\09"
module asm "\09.long\09__crc_redraw_screen\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_redraw_screen:\09\09\09\09\09"
module asm "\09.asciz \09\22redraw_screen\22\09\09\09\09\09"
module asm "__kstrtabns_redraw_screen:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vc_resize\22, \22a\22\09"
module asm "\09.weak\09__crc_vc_resize\09\09\09\09"
module asm "\09.long\09__crc_vc_resize\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vc_resize:\09\09\09\09\09"
module asm "\09.asciz \09\22vc_resize\22\09\09\09\09\09"
module asm "__kstrtabns_vc_resize:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+fg_console\22, \22a\22\09"
module asm "\09.weak\09__crc_fg_console\09\09\09\09"
module asm "\09.long\09__crc_fg_console\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_fg_console:\09\09\09\09\09"
module asm "\09.asciz \09\22fg_console\22\09\09\09\09\09"
module asm "__kstrtabns_fg_console:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+console_blank_hook\22, \22a\22\09"
module asm "\09.weak\09__crc_console_blank_hook\09\09\09\09"
module asm "\09.long\09__crc_console_blank_hook\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_console_blank_hook:\09\09\09\09\09"
module asm "\09.asciz \09\22console_blank_hook\22\09\09\09\09\09"
module asm "__kstrtabns_console_blank_hook:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+console_blanked\22, \22a\22\09"
module asm "\09.weak\09__crc_console_blanked\09\09\09\09"
module asm "\09.long\09__crc_console_blanked\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_console_blanked:\09\09\09\09\09"
module asm "\09.asciz \09\22console_blanked\22\09\09\09\09\09"
module asm "__kstrtabns_console_blanked:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+vc_cons\22, \22a\22\09"
module asm "\09.weak\09__crc_vc_cons\09\09\09\09"
module asm "\09.long\09__crc_vc_cons\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_vc_cons:\09\09\09\09\09"
module asm "\09.asciz \09\22vc_cons\22\09\09\09\09\09"
module asm "__kstrtabns_vc_cons:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+global_cursor_default\22, \22a\22\09"
module asm "\09.weak\09__crc_global_cursor_default\09\09\09\09"
module asm "\09.long\09__crc_global_cursor_default\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_global_cursor_default:\09\09\09\09\09"
module asm "\09.asciz \09\22global_cursor_default\22\09\09\09\09\09"
module asm "__kstrtabns_global_cursor_default:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+give_up_console\22, \22a\22\09"
module asm "\09.weak\09__crc_give_up_console\09\09\09\09"
module asm "\09.long\09__crc_give_up_console\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_give_up_console:\09\09\09\09\09"
module asm "\09.asciz \09\22give_up_console\22\09\09\09\09\09"
module asm "__kstrtabns_give_up_console:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, ptr, ptr, ptr }
%struct.kernel_param = type { ptr, ptr, ptr, i16, i8, i8, %union.anon.68 }
%union.anon.68 = type { ptr }
%struct.atomic_notifier_head = type { %struct.spinlock, ptr }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.atomic_t = type { i32 }
%struct.list_head = type { ptr, ptr }
%struct.vc = type { ptr, %struct.work_struct }
%struct.tty_port_operations = type { ptr, ptr, ptr, ptr, ptr }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.kparam_array = type { i32, i32, ptr, ptr, ptr }
%struct.cdev = type { %struct.kobject, ptr, ptr, %struct.list_head, i32, i32 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.ktermios = type { i32, i32, i32, i32, i8, [19 x i8], i32, i32 }
%struct.tty_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.con_driver = type { ptr, ptr, ptr, i32, i32, i32, i32 }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.consw = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.console = type { [16 x i8], ptr, ptr, ptr, ptr, ptr, ptr, ptr, i16, i16, i32, i32, i32, ptr, ptr }
%struct.attribute_group = type { ptr, ptr, ptr, ptr, ptr }
%struct.device_attribute = type { %struct.attribute, ptr, ptr }
%struct.attribute = type { ptr, i16, i8, ptr, %struct.lock_class_key }
%struct.interval = type { i32, i32 }
%struct.vc_data = type { %struct.tty_port, %struct.vc_state, %struct.vc_state, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, i32, i8, i8, i8, i8, i8, i8, i32, i16, i16, i32, i16, %struct.console_font, i16, i32, i32, [16 x i32], %struct.vt_mode, ptr, i32, %struct.wait_queue_head, i16, i8, i32, [8 x i32], [48 x i8], ptr, i32, i32, i32, i16, ptr, ptr, ptr, ptr }
%struct.tty_port = type { %struct.tty_bufhead, ptr, ptr, ptr, ptr, %struct.spinlock, i32, i32, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i8, %struct.mutex, %struct.mutex, ptr, i32, i32, i32, %struct.kref, ptr }
%struct.tty_bufhead = type { ptr, %struct.work_struct, %struct.mutex, %struct.atomic_t, %struct.tty_buffer, %struct.llist_head, %struct.atomic_t, i32, ptr }
%struct.tty_buffer = type { %union.anon.37, i32, i32, i32, i32, i32, [0 x i32] }
%union.anon.37 = type { ptr }
%struct.llist_head = type { ptr }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.vc_state = type { i32, i32, i8, [2 x i8], i8, i32, i8, i8, i8, i8 }
%struct.console_font = type { i32, i32, i32, ptr }
%struct.vt_mode = type { i8, i8, i16, i16, i16 }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.vt_notifier_param = type { ptr, i32 }
%struct.winsize = type { i16, i16, i16, i16 }
%struct.tty_struct = type { i32, %struct.kref, ptr, ptr, ptr, i32, %struct.ld_semaphore, ptr, %struct.mutex, %struct.mutex, %struct.mutex, %struct.rw_semaphore, %struct.mutex, %struct.ktermios, %struct.ktermios, [64 x i8], i32, i32, %struct.winsize, %struct.anon.38, %struct.anon.39, i32, i32, i32, ptr, ptr, %struct.wait_queue_head, %struct.wait_queue_head, %struct.work_struct, ptr, ptr, %struct.spinlock, %struct.list_head, i32, ptr, i32, %struct.work_struct, ptr }
%struct.ld_semaphore = type { %struct.atomic_t, %struct.raw_spinlock, i32, %struct.list_head, %struct.list_head, %struct.lockdep_map }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.anon.38 = type { %struct.spinlock, i8, i8, [0 x i32] }
%struct.anon.39 = type { %struct.spinlock, ptr, ptr, i8, i8, [0 x i32] }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.56, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.29 }
%struct.llist_node = type { ptr }
%union.anon.29 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%struct.cpumask = type { [1 x i32] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.rb_node = type { i32, ptr, ptr }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.31 }
%union.anon.31 = type { %struct.anon.32 }
%struct.anon.32 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.kuid_t = type { i32 }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.tlbflush_unmap_batch = type {}
%union.anon.56 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, ptr, %struct.sigpending, %struct.hlist_head, i32, i32, ptr, i32, i32, ptr, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x ptr], ptr, i32, ptr, ptr, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.task_io_accounting, i64, [16 x %struct.rlimit], %struct.pacct_struct, ptr, i32, ptr, i8, i16, i16, ptr, %struct.mutex, %struct.rw_semaphore }
%struct.hlist_head = type { ptr }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.atomic64_t = type { i64 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i32, i32 }
%struct.pacct_struct = type { i32, i32, i32, i64, i64, i32, i32 }
%struct.tty_driver = type { i32, %struct.kref, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i16, i16, %struct.ktermios, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head }
%struct.console_font_op = type { i32, i32, i32, i32, i32, ptr }
%struct.rgb = type { i8, i8, i8 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }

@default_utf8 = dso_local global { i32, [28 x i8] } { i32 1, [28 x i8] zeroinitializer }, align 32
@__param_str_default_utf8 = internal constant [16 x i8] c"vt.default_utf8\00", align 1
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 4
@__param_default_utf8 = internal constant %struct.kernel_param { ptr @__param_str_default_utf8, ptr null, ptr @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.68 { ptr @default_utf8 } }, section "__param", align 4
@__UNIQUE_ID_default_utf8type232 = internal constant [29 x i8] c"vt.parmtype=default_utf8:int\00", section ".modinfo", align 1
@global_cursor_default = dso_local global { i32, [28 x i8] } { i32 -1, [28 x i8] zeroinitializer }, align 32
@__param_str_global_cursor_default = internal constant [25 x i8] c"vt.global_cursor_default\00", align 1
@__param_global_cursor_default = internal constant %struct.kernel_param { ptr @__param_str_global_cursor_default, ptr null, ptr @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.68 { ptr @global_cursor_default } }, section "__param", align 4
@__UNIQUE_ID_global_cursor_defaulttype233 = internal constant [38 x i8] c"vt.parmtype=global_cursor_default:int\00", section ".modinfo", align 1
@__param_str_cur_default = internal constant [15 x i8] c"vt.cur_default\00", align 1
@cur_default = internal global { i32, [28 x i8] } { i32 2, [28 x i8] zeroinitializer }, align 32
@__param_cur_default = internal constant %struct.kernel_param { ptr @__param_str_cur_default, ptr null, ptr @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.68 { ptr @cur_default } }, section "__param", align 4
@__UNIQUE_ID_cur_defaulttype234 = internal constant [28 x i8] c"vt.parmtype=cur_default:int\00", section ".modinfo", align 1
@__param_str_consoleblank = internal constant [13 x i8] c"consoleblank\00", align 1
@blankinterval = internal global { i32, [28 x i8] } zeroinitializer, align 32
@__param_consoleblank = internal constant %struct.kernel_param { ptr @__param_str_consoleblank, ptr null, ptr @param_ops_int, i16 292, i8 -1, i8 0, %union.anon.68 { ptr @blankinterval } }, section "__param", align 4
@want_console = dso_local global { i32, [28 x i8] } { i32 -1, [28 x i8] zeroinitializer }, align 32
@vt_notifier_list = internal global { %struct.atomic_notifier_head, [48 x i8] } { %struct.atomic_notifier_head { %struct.spinlock { %union.anon.0 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.16, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, ptr null }, [48 x i8] zeroinitializer }, align 32
@__kstrtab_register_vt_notifier = external dso_local constant [0 x i8], align 1
@__kstrtabns_register_vt_notifier = external dso_local constant [0 x i8], align 1
@__ksymtab_register_vt_notifier = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @register_vt_notifier to i32), ptr @__kstrtab_register_vt_notifier, ptr @__kstrtabns_register_vt_notifier }, section "___ksymtab_gpl+register_vt_notifier", align 4
@__kstrtab_unregister_vt_notifier = external dso_local constant [0 x i8], align 1
@__kstrtabns_unregister_vt_notifier = external dso_local constant [0 x i8], align 1
@__ksymtab_unregister_vt_notifier = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @unregister_vt_notifier to i32), ptr @__kstrtab_unregister_vt_notifier, ptr @__kstrtabns_unregister_vt_notifier }, section "___ksymtab_gpl+unregister_vt_notifier", align 4
@console_work = internal global { %struct.work_struct, [52 x i8] } { %struct.work_struct { %struct.atomic_t { i32 -48 }, %struct.list_head { ptr getelementptr (i8, ptr @console_work, i64 4), ptr getelementptr (i8, ptr @console_work, i64 4) }, ptr @console_callback, %struct.lockdep_map { ptr @console_work, [2 x ptr] zeroinitializer, ptr @.str.17, i8 0, i8 0, i8 0, i32 0, i32 0 } }, [52 x i8] zeroinitializer }, align 32
@ignore_console_lock_warning = external dso_local global %struct.atomic_t, align 4
@oops_in_progress = external dso_local local_unnamed_addr global i32, align 4
@.str = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"drivers/tty/vt/vt.c\00", [44 x i8] zeroinitializer }, align 32
@complement_pos.old_offset = internal global { i32, [28 x i8] } { i32 -1, [28 x i8] zeroinitializer }, align 32
@complement_pos.old = internal global { i16, [30 x i8] } zeroinitializer, align 32
@complement_pos.oldx = internal global { i16, [30 x i8] } zeroinitializer, align 32
@complement_pos.oldy = internal global { i16, [30 x i8] } zeroinitializer, align 32
@vc_cons = dso_local global { [63 x %struct.vc], [752 x i8] } zeroinitializer, align 32
@fg_console = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@tty0dev = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@.str.1 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"active\00", [25 x i8] zeroinitializer }, align 32
@vc_port_ops = internal constant { %struct.tty_port_operations, [44 x i8] } { %struct.tty_port_operations { ptr null, ptr null, ptr null, ptr null, ptr @vc_port_destruct }, [44 x i8] zeroinitializer }, align 32
@vc_allocate.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.2 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"(work_completion)(&vc_cons[currcons].SAK_work)\00", [49 x i8] zeroinitializer }, align 32
@color_table = dso_local constant { [16 x i8], [16 x i8] } { [16 x i8] c"\00\04\02\06\01\05\03\07\08\0C\0A\0E\09\0D\0B\0F", [16 x i8] zeroinitializer }, align 32
@default_red = dso_local global { [16 x i8], [16 x i8] } { [16 x i8] c"\00\AA\00\AA\00\AA\00\AAU\FFU\FFU\FFU\FF", [16 x i8] zeroinitializer }, align 32
@__param_str_default_red = internal constant [15 x i8] c"vt.default_red\00", align 1
@param_array_ops = external dso_local constant %struct.kernel_param_ops, align 4
@__param_arr_default_red = internal constant %struct.kparam_array { i32 16, i32 1, ptr null, ptr @param_ops_byte, ptr @default_red }, align 4
@__param_default_red = internal constant %struct.kernel_param { ptr @__param_str_default_red, ptr null, ptr @param_array_ops, i16 420, i8 -1, i8 0, %union.anon.68 { ptr @__param_arr_default_red } }, section "__param", align 4
@__UNIQUE_ID_default_redtype241 = internal constant [38 x i8] c"vt.parmtype=default_red:array of byte\00", section ".modinfo", align 1
@default_grn = dso_local global { [16 x i8], [16 x i8] } { [16 x i8] c"\00\00\AAU\00\00\AA\AAUU\FF\FFUU\FF\FF", [16 x i8] zeroinitializer }, align 32
@__param_str_default_grn = internal constant [15 x i8] c"vt.default_grn\00", align 1
@__param_arr_default_grn = internal constant %struct.kparam_array { i32 16, i32 1, ptr null, ptr @param_ops_byte, ptr @default_grn }, align 4
@__param_default_grn = internal constant %struct.kernel_param { ptr @__param_str_default_grn, ptr null, ptr @param_array_ops, i16 420, i8 -1, i8 0, %union.anon.68 { ptr @__param_arr_default_grn } }, section "__param", align 4
@__UNIQUE_ID_default_grntype242 = internal constant [38 x i8] c"vt.parmtype=default_grn:array of byte\00", section ".modinfo", align 1
@default_blu = dso_local global { [16 x i8], [16 x i8] } { [16 x i8] c"\00\00\00\00\AA\AA\AA\AAUUUU\FF\FF\FF\FF", [16 x i8] zeroinitializer }, align 32
@__param_str_default_blu = internal constant [15 x i8] c"vt.default_blu\00", align 1
@__param_arr_default_blu = internal constant %struct.kparam_array { i32 16, i32 1, ptr null, ptr @param_ops_byte, ptr @default_blu }, align 4
@__param_default_blu = internal constant %struct.kernel_param { ptr @__param_str_default_blu, ptr null, ptr @param_array_ops, i16 420, i8 -1, i8 0, %union.anon.68 { ptr @__param_arr_default_blu } }, section "__param", align 4
@__UNIQUE_ID_default_blutype243 = internal constant [38 x i8] c"vt.parmtype=default_blu:array of byte\00", section ".modinfo", align 1
@.str.3 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"\1B[M%c%c%c\00", [22 x i8] zeroinitializer }, align 32
@vt_dont_switch = external dso_local local_unnamed_addr global i8, align 1
@vt_kmsg_redirect.kmsg_con = internal global { i32, [28 x i8] } zeroinitializer, align 32
@ignore_poke = internal global { i1, [31 x i8] } zeroinitializer, align 32
@console_blanked = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@__param_str_color = internal constant [9 x i8] c"vt.color\00", align 1
@default_color = internal global { i32, [28 x i8] } { i32 7, [28 x i8] zeroinitializer }, align 32
@__param_color = internal constant %struct.kernel_param { ptr @__param_str_color, ptr null, ptr @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.68 { ptr @default_color } }, section "__param", align 4
@__UNIQUE_ID_colortype256 = internal constant [22 x i8] c"vt.parmtype=color:int\00", section ".modinfo", align 1
@__param_str_italic = internal constant [10 x i8] c"vt.italic\00", align 1
@default_italic_color = internal global { i32, [28 x i8] } { i32 2, [28 x i8] zeroinitializer }, align 32
@__param_italic = internal constant %struct.kernel_param { ptr @__param_str_italic, ptr null, ptr @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.68 { ptr @default_italic_color } }, section "__param", align 4
@__UNIQUE_ID_italictype257 = internal constant [23 x i8] c"vt.parmtype=italic:int\00", section ".modinfo", align 1
@__param_str_underline = internal constant [13 x i8] c"vt.underline\00", align 1
@default_underline_color = internal global { i32, [28 x i8] } { i32 3, [28 x i8] zeroinitializer }, align 32
@__param_underline = internal constant %struct.kernel_param { ptr @__param_str_underline, ptr null, ptr @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.68 { ptr @default_underline_color } }, section "__param", align 4
@__UNIQUE_ID_underlinetype258 = internal constant [26 x i8] c"vt.parmtype=underline:int\00", section ".modinfo", align 1
@__initcall__kmod_vt__259_3549_con_initcon = internal global ptr @con_init, section ".con_initcall.init", align 4
@vc0_cdev = internal global { %struct.cdev, [32 x i8] } zeroinitializer, align 32
@.str.4 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"/dev/vc/0\00", [22 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Couldn't register /dev/tty0 driver\0A\00", [60 x i8] zeroinitializer }, align 32
@tty_class = external dso_local local_unnamed_addr global ptr, align 4
@vt_dev_groups = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @vt_dev_group, ptr null], [24 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"tty0\00", [27 x i8] zeroinitializer }, align 32
@console_driver = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@.str.7 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"Couldn't allocate console driver\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"tty\00", [28 x i8] zeroinitializer }, align 32
@tty_std_termios = external dso_local local_unnamed_addr global %struct.ktermios, align 4
@con_ops = internal constant { %struct.tty_operations, [48 x i8] } { %struct.tty_operations { ptr null, ptr @con_install, ptr null, ptr @con_open, ptr @con_close, ptr @con_shutdown, ptr @con_cleanup, ptr @con_write, ptr @con_put_char, ptr @con_flush_chars, ptr @con_write_room, ptr null, ptr @vt_ioctl, ptr null, ptr null, ptr @con_throttle, ptr @con_unthrottle, ptr @con_stop, ptr @con_start, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @vt_resize, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [48 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"Couldn't register console driver\0A\00", [62 x i8] zeroinitializer }, align 32
@registered_con_driver = internal global { [16 x %struct.con_driver], [96 x i8] } zeroinitializer, align 32
@con_driver_map = internal global { [63 x ptr], [36 x i8] } zeroinitializer, align 32
@conswitchp = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@__kstrtab_do_unbind_con_driver = external dso_local constant [0 x i8], align 1
@__kstrtabns_do_unbind_con_driver = external dso_local constant [0 x i8], align 1
@__ksymtab_do_unbind_con_driver = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @do_unbind_con_driver to i32), ptr @__kstrtab_do_unbind_con_driver, ptr @__kstrtabns_do_unbind_con_driver }, section "___ksymtab_gpl+do_unbind_con_driver", align 4
@__kstrtab_con_is_bound = external dso_local constant [0 x i8], align 1
@__kstrtabns_con_is_bound = external dso_local constant [0 x i8], align 1
@__ksymtab_con_is_bound = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @con_is_bound to i32), ptr @__kstrtab_con_is_bound, ptr @__kstrtabns_con_is_bound }, section "___ksymtab+con_is_bound", align 4
@__kstrtab_con_is_visible = external dso_local constant [0 x i8], align 1
@__kstrtabns_con_is_visible = external dso_local constant [0 x i8], align 1
@__ksymtab_con_is_visible = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @con_is_visible to i32), ptr @__kstrtab_con_is_visible, ptr @__kstrtabns_con_is_visible }, section "___ksymtab+con_is_visible", align 4
@saved_fg_console = internal global { i32, [28 x i8] } zeroinitializer, align 32
@last_console = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@saved_last_console = internal global { i32, [28 x i8] } zeroinitializer, align 32
@saved_want_console = internal global { i32, [28 x i8] } zeroinitializer, align 32
@saved_vc_mode = internal global { i32, [28 x i8] } zeroinitializer, align 32
@saved_console_blanked = internal global { i32, [28 x i8] } zeroinitializer, align 32
@.str.10 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"set\00", [28 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"LINES\00", [26 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"%i\00", [29 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"COLUMNS\00", [24 x i8] zeroinitializer }, align 32
@__kstrtab_con_debug_enter = external dso_local constant [0 x i8], align 1
@__kstrtabns_con_debug_enter = external dso_local constant [0 x i8], align 1
@__ksymtab_con_debug_enter = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @con_debug_enter to i32), ptr @__kstrtab_con_debug_enter, ptr @__kstrtabns_con_debug_enter }, section "___ksymtab_gpl+con_debug_enter", align 4
@__kstrtab_con_debug_leave = external dso_local constant [0 x i8], align 1
@__kstrtabns_con_debug_leave = external dso_local constant [0 x i8], align 1
@__ksymtab_con_debug_leave = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @con_debug_leave to i32), ptr @__kstrtab_con_debug_leave, ptr @__kstrtabns_con_debug_leave }, section "___ksymtab_gpl+con_debug_leave", align 4
@con_driver_unregister_work = internal global { %struct.work_struct, [52 x i8] } { %struct.work_struct { %struct.atomic_t { i32 -48 }, %struct.list_head { ptr getelementptr (i8, ptr @con_driver_unregister_work, i64 4), ptr getelementptr (i8, ptr @con_driver_unregister_work, i64 4) }, ptr @con_driver_unregister_callback, %struct.lockdep_map { ptr @con_driver_unregister_work, [2 x ptr] zeroinitializer, ptr @.str.42, i8 0, i8 0, i8 0, i32 0, i32 0 } }, [52 x i8] zeroinitializer }, align 32
@__kstrtab_do_unregister_con_driver = external dso_local constant [0 x i8], align 1
@__kstrtabns_do_unregister_con_driver = external dso_local constant [0 x i8], align 1
@__ksymtab_do_unregister_con_driver = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @do_unregister_con_driver to i32), ptr @__kstrtab_do_unregister_con_driver, ptr @__kstrtabns_do_unregister_con_driver }, section "___ksymtab_gpl+do_unregister_con_driver", align 4
@__kstrtab_do_take_over_console = external dso_local constant [0 x i8], align 1
@__kstrtabns_do_take_over_console = external dso_local constant [0 x i8], align 1
@__ksymtab_do_take_over_console = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @do_take_over_console to i32), ptr @__kstrtab_do_take_over_console, ptr @__kstrtabns_do_take_over_console }, section "___ksymtab_gpl+do_take_over_console", align 4
@__initcall__kmod_vt__268_4326_vtconsole_class_init2 = internal global ptr @vtconsole_class_init, section ".initcall2.init", align 4
@blank_state = internal global { i32, [28 x i8] } zeroinitializer, align 32
@vesa_blank_mode = internal global { i32, [28 x i8] } zeroinitializer, align 32
@console_timer = internal global { %struct.timer_list, [48 x i8] } { %struct.timer_list { %struct.hlist_node { ptr inttoptr (i32 768 to ptr), ptr null }, i32 0, ptr @blank_screen_t, i32 0, %struct.lockdep_map { ptr @.str.58, [2 x ptr] zeroinitializer, ptr @.str.58, i8 0, i8 0, i8 0, i32 0, i32 0 } }, [48 x i8] zeroinitializer }, align 32
@blank_timer_expired = internal global { i1, [31 x i8] } zeroinitializer, align 32
@vesa_off_interval = internal global { i32, [28 x i8] } zeroinitializer, align 32
@console_blank_hook = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@__kstrtab_do_blank_screen = external dso_local constant [0 x i8], align 1
@__kstrtabns_do_blank_screen = external dso_local constant [0 x i8], align 1
@__ksymtab_do_blank_screen = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @do_blank_screen to i32), ptr @__kstrtab_do_blank_screen, ptr @__kstrtabns_do_blank_screen }, section "___ksymtab+do_blank_screen", align 4
@do_unblank_screen._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.14, ptr @.str.15, ptr @.str, i32 4425, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\014unblank_screen: tty %d not allocated ??\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"do_unblank_screen\00", [46 x i8] zeroinitializer }, align 32
@do_unblank_screen._entry_ptr = internal global ptr @do_unblank_screen._entry, section ".printk_index", align 4
@__kstrtab_do_unblank_screen = external dso_local constant [0 x i8], align 1
@__kstrtabns_do_unblank_screen = external dso_local constant [0 x i8], align 1
@__ksymtab_do_unblank_screen = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @do_unblank_screen to i32), ptr @__kstrtab_do_unblank_screen, ptr @__kstrtabns_do_unblank_screen }, section "___ksymtab+do_unblank_screen", align 4
@__kstrtab_screen_glyph = external dso_local constant [0 x i8], align 1
@__kstrtabns_screen_glyph = external dso_local constant [0 x i8], align 1
@__ksymtab_screen_glyph = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @screen_glyph to i32), ptr @__kstrtab_screen_glyph, ptr @__kstrtabns_screen_glyph }, section "___ksymtab_gpl+screen_glyph", align 4
@__kstrtab_screen_glyph_unicode = external dso_local constant [0 x i8], align 1
@__kstrtabns_screen_glyph_unicode = external dso_local constant [0 x i8], align 1
@__ksymtab_screen_glyph_unicode = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @screen_glyph_unicode to i32), ptr @__kstrtab_screen_glyph_unicode, ptr @__kstrtabns_screen_glyph_unicode }, section "___ksymtab_gpl+screen_glyph_unicode", align 4
@__kstrtab_screen_pos = external dso_local constant [0 x i8], align 1
@__kstrtabns_screen_pos = external dso_local constant [0 x i8], align 1
@__ksymtab_screen_pos = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @screen_pos to i32), ptr @__kstrtab_screen_pos, ptr @__kstrtabns_screen_pos }, section "___ksymtab_gpl+screen_pos", align 4
@softcursor_original = internal global { i32, [28 x i8] } { i32 -1, [28 x i8] zeroinitializer }, align 32
@__kstrtab_vc_scrolldelta_helper = external dso_local constant [0 x i8], align 1
@__kstrtabns_vc_scrolldelta_helper = external dso_local constant [0 x i8], align 1
@__ksymtab_vc_scrolldelta_helper = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vc_scrolldelta_helper to i32), ptr @__kstrtab_vc_scrolldelta_helper, ptr @__kstrtabns_vc_scrolldelta_helper }, section "___ksymtab_gpl+vc_scrolldelta_helper", align 4
@__kstrtab_color_table = external dso_local constant [0 x i8], align 1
@__kstrtabns_color_table = external dso_local constant [0 x i8], align 1
@__ksymtab_color_table = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @color_table to i32), ptr @__kstrtab_color_table, ptr @__kstrtabns_color_table }, section "___ksymtab+color_table", align 4
@__kstrtab_default_red = external dso_local constant [0 x i8], align 1
@__kstrtabns_default_red = external dso_local constant [0 x i8], align 1
@__ksymtab_default_red = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @default_red to i32), ptr @__kstrtab_default_red, ptr @__kstrtabns_default_red }, section "___ksymtab+default_red", align 4
@__kstrtab_default_grn = external dso_local constant [0 x i8], align 1
@__kstrtabns_default_grn = external dso_local constant [0 x i8], align 1
@__ksymtab_default_grn = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @default_grn to i32), ptr @__kstrtab_default_grn, ptr @__kstrtabns_default_grn }, section "___ksymtab+default_grn", align 4
@__kstrtab_default_blu = external dso_local constant [0 x i8], align 1
@__kstrtabns_default_blu = external dso_local constant [0 x i8], align 1
@__ksymtab_default_blu = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @default_blu to i32), ptr @__kstrtab_default_blu, ptr @__kstrtabns_default_blu }, section "___ksymtab+default_blu", align 4
@__kstrtab_update_region = external dso_local constant [0 x i8], align 1
@__kstrtabns_update_region = external dso_local constant [0 x i8], align 1
@__ksymtab_update_region = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @update_region to i32), ptr @__kstrtab_update_region, ptr @__kstrtabns_update_region }, section "___ksymtab+update_region", align 4
@__kstrtab_redraw_screen = external dso_local constant [0 x i8], align 1
@__kstrtabns_redraw_screen = external dso_local constant [0 x i8], align 1
@__ksymtab_redraw_screen = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @redraw_screen to i32), ptr @__kstrtab_redraw_screen, ptr @__kstrtabns_redraw_screen }, section "___ksymtab+redraw_screen", align 4
@__kstrtab_vc_resize = external dso_local constant [0 x i8], align 1
@__kstrtabns_vc_resize = external dso_local constant [0 x i8], align 1
@__ksymtab_vc_resize = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vc_resize to i32), ptr @__kstrtab_vc_resize, ptr @__kstrtabns_vc_resize }, section "___ksymtab+vc_resize", align 4
@__kstrtab_fg_console = external dso_local constant [0 x i8], align 1
@__kstrtabns_fg_console = external dso_local constant [0 x i8], align 1
@__ksymtab_fg_console = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @fg_console to i32), ptr @__kstrtab_fg_console, ptr @__kstrtabns_fg_console }, section "___ksymtab+fg_console", align 4
@__kstrtab_console_blank_hook = external dso_local constant [0 x i8], align 1
@__kstrtabns_console_blank_hook = external dso_local constant [0 x i8], align 1
@__ksymtab_console_blank_hook = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @console_blank_hook to i32), ptr @__kstrtab_console_blank_hook, ptr @__kstrtabns_console_blank_hook }, section "___ksymtab+console_blank_hook", align 4
@__kstrtab_console_blanked = external dso_local constant [0 x i8], align 1
@__kstrtabns_console_blanked = external dso_local constant [0 x i8], align 1
@__ksymtab_console_blanked = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @console_blanked to i32), ptr @__kstrtab_console_blanked, ptr @__kstrtabns_console_blanked }, section "___ksymtab+console_blanked", align 4
@__kstrtab_vc_cons = external dso_local constant [0 x i8], align 1
@__kstrtabns_vc_cons = external dso_local constant [0 x i8], align 1
@__ksymtab_vc_cons = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @vc_cons to i32), ptr @__kstrtab_vc_cons, ptr @__kstrtabns_vc_cons }, section "___ksymtab+vc_cons", align 4
@__kstrtab_global_cursor_default = external dso_local constant [0 x i8], align 1
@__kstrtabns_global_cursor_default = external dso_local constant [0 x i8], align 1
@__ksymtab_global_cursor_default = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @global_cursor_default to i32), ptr @__kstrtab_global_cursor_default, ptr @__kstrtabns_global_cursor_default }, section "___ksymtab+global_cursor_default", align 4
@__kstrtab_give_up_console = external dso_local constant [0 x i8], align 1
@__kstrtabns_give_up_console = external dso_local constant [0 x i8], align 1
@__ksymtab_give_up_console = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @give_up_console to i32), ptr @__kstrtab_give_up_console, ptr @__kstrtabns_give_up_console }, section "___ksymtab+give_up_console", align 4
@do_poke_blanked_console = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@.str.16 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"vt_notifier_list.lock\00", [42 x i8] zeroinitializer }, align 32
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@.str.17 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"console_work\00", [19 x i8] zeroinitializer }, align 32
@scrollback_delta = internal global { i32, [28 x i8] } zeroinitializer, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@master_display_fg = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@param_ops_byte = external dso_local constant %struct.kernel_param_ops, align 4
@vc_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.18 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"&vc->paste_wait\00", [16 x i8] zeroinitializer }, align 32
@dummy_con = external dso_local constant %struct.consw, align 4
@con_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@con_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.20, ptr @.str, i32 3539, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"\016Console: %s %s %dx%d\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"con_init\00", [23 x i8] zeroinitializer }, align 32
@con_init._entry_ptr = internal global ptr @con_init._entry, section ".printk_index", align 4
@.str.21 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"colour\00", [25 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"mono\00", [27 x i8] zeroinitializer }, align 32
@printable = internal global { i1, [31 x i8] } zeroinitializer, align 32
@vt_console_driver = internal global { %struct.console, [60 x i8] } { %struct.console { [16 x i8] c"tty\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr @vt_console_print, ptr null, ptr @vt_console_device, ptr @unblank_screen, ptr null, ptr null, ptr null, i16 1, i16 -1, i32 0, i32 0, i32 0, ptr null, ptr null }, [60 x i8] zeroinitializer }, align 32
@vt_console_print.printing_lock = internal global { %struct.spinlock, [52 x i8] } { %struct.spinlock { %union.anon.0 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.23, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, [52 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"printing_lock\00", [18 x i8] zeroinitializer }, align 32
@vt_dev_group = internal constant { %struct.attribute_group, [44 x i8] } { %struct.attribute_group { ptr null, ptr null, ptr null, ptr @vt_dev_attrs, ptr null }, [44 x i8] zeroinitializer }, align 32
@vt_dev_attrs = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @dev_attr_active, ptr null], [24 x i8] zeroinitializer }, align 32
@dev_attr_active = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.1, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @show_tty_active, ptr null }, [36 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"tty%d\0A\00", [25 x i8] zeroinitializer }, align 32
@do_con_write._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.25, ptr @.str.26, ptr @.str, i32 2911, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"\013vt: argh, driver_data is NULL !\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"do_con_write\00", [19 x i8] zeroinitializer }, align 32
@do_con_write._entry_ptr = internal global ptr @do_con_write._entry, section ".printk_index", align 4
@do_con_write.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@do_con_write._entry.27 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.28, ptr @.str.26, ptr @.str, i32 2919, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"\014con_write: tty %d not allocated\0A\00", [61 x i8] zeroinitializer }, align 32
@do_con_write._entry_ptr.29 = internal global ptr @do_con_write._entry.27, section ".printk_index", align 4
@vc_translate_unicode.utf8_length_changes = internal constant { [6 x i32], [40 x i8] } { [6 x i32] [i32 127, i32 2047, i32 65535, i32 2097151, i32 67108863, i32 2147483647], [40 x i8] zeroinitializer }, align 32
@_ctype = external dso_local local_unnamed_addr constant [0 x i8], align 1
@respond_ID.vt102_id = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"\1B[?6c\00", [26 x i8] zeroinitializer }, align 32
@status_report.teminal_ok = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"\1B[0n\00", [27 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"\1B[%d;%dR\00", [23 x i8] zeroinitializer }, align 32
@is_double_width.double_width = internal constant { [12 x %struct.interval], [32 x i8] } { [12 x %struct.interval] [%struct.interval { i32 4352, i32 4447 }, %struct.interval { i32 9001, i32 9002 }, %struct.interval { i32 11904, i32 12350 }, %struct.interval { i32 12352, i32 42191 }, %struct.interval { i32 44032, i32 55203 }, %struct.interval { i32 63744, i32 64255 }, %struct.interval { i32 65040, i32 65049 }, %struct.interval { i32 65072, i32 65135 }, %struct.interval { i32 65280, i32 65376 }, %struct.interval { i32 65504, i32 65510 }, %struct.interval { i32 131072, i32 196605 }, %struct.interval { i32 196608, i32 262141 }], [32 x i8] zeroinitializer }, align 32
@do_bind_con_driver._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.31, ptr @.str.32, ptr @.str, i32 3707, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"\016Console: switching \00", [42 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"do_bind_con_driver\00", [45 x i8] zeroinitializer }, align 32
@do_bind_con_driver._entry_ptr = internal global ptr @do_bind_con_driver._entry, section ".printk_index", align 4
@do_bind_con_driver._entry.33 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.34, ptr @.str.32, ptr @.str, i32 3709, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"\01cconsoles %d-%d \00", [46 x i8] zeroinitializer }, align 32
@do_bind_con_driver._entry_ptr.35 = internal global ptr @do_bind_con_driver._entry.33, section ".printk_index", align 4
@do_bind_con_driver._entry.36 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.37, ptr @.str.32, ptr @.str, i32 3715, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"\01cto %s %s %dx%d\0A\00", [46 x i8] zeroinitializer }, align 32
@do_bind_con_driver._entry_ptr.38 = internal global ptr @do_bind_con_driver._entry.36, section ".printk_index", align 4
@do_bind_con_driver._entry.39 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.40, ptr @.str.32, ptr @.str, i32 3722, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"\01cto %s\0A\00", [23 x i8] zeroinitializer }, align 32
@do_bind_con_driver._entry_ptr.41 = internal global ptr @do_bind_con_driver._entry.39, section ".printk_index", align 4
@.str.42 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"con_driver_unregister_work\00", [37 x i8] zeroinitializer }, align 32
@vtconsole_class = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@con_driver_unregister_callback.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@con_driver_unregister_callback.__already_done.43 = internal unnamed_addr global i1 false, section ".data.once", align 1
@con_dev_groups = internal global { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @con_dev_group, ptr null], [24 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"vtcon%i\00", [24 x i8] zeroinitializer }, align 32
@do_register_con_driver._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.45, ptr @.str.46, ptr @.str, i32 4161, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"\014Unable to create device for %s; errno = %ld\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"do_register_con_driver\00", [41 x i8] zeroinitializer }, align 32
@do_register_con_driver._entry_ptr = internal global ptr @do_register_con_driver._entry, section ".printk_index", align 4
@con_dev_group = internal constant { %struct.attribute_group, [44 x i8] } { %struct.attribute_group { ptr null, ptr null, ptr null, ptr @con_dev_attrs, ptr null }, [44 x i8] zeroinitializer }, align 32
@con_dev_attrs = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @dev_attr_bind, ptr @dev_attr_name, ptr null], [20 x i8] zeroinitializer }, align 32
@dev_attr_bind = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.47, i16 420, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @show_bind, ptr @store_bind }, [36 x i8] zeroinitializer }, align 32
@dev_attr_name = internal global { %struct.device_attribute, [36 x i8] } { %struct.device_attribute { %struct.attribute { ptr @.str.49, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @show_name, ptr null }, [36 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"bind\00", [27 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%i\0A\00", [28 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"name\00", [27 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"%s %s\0A\00", [25 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"(M)\00", [28 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"(S)\00", [28 x i8] zeroinitializer }, align 32
@vtconsole_class_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.53 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"vtconsole\00", [22 x i8] zeroinitializer }, align 32
@vtconsole_class_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.54, ptr @.str.55, ptr @.str, i32 4299, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\014Unable to create vt console class; errno = %ld\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"vtconsole_class_init\00", [43 x i8] zeroinitializer }, align 32
@vtconsole_class_init._entry_ptr = internal global ptr @vtconsole_class_init._entry, section ".printk_index", align 4
@vtconsole_class_init._entry.56 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.45, ptr @.str.55, ptr @.str, i32 4316, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@vtconsole_class_init._entry_ptr.57 = internal global ptr @vtconsole_class_init._entry.56, section ".printk_index", align 4
@.str.58 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"drivers/tty/vt/vt.c:227\00", [40 x i8] zeroinitializer }, align 32
@check_copy_size.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.59 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/linux/thread_info.h\00", [36 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/uaccess.h\00", [40 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [15 x i64] [i64 13, i64 8, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15, i64 17]
@__sancov_gen_cov_switch_values.62 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.63 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.64 = internal global [5 x i64] [i64 3, i64 8, i64 8, i64 10, i64 13]
@__sancov_gen_cov_switch_values.65 = internal global [4 x i64] [i64 2, i64 8, i64 8, i64 13]
@__sancov_gen_cov_switch_values.66 = internal global [4 x i64] [i64 2, i64 8, i64 10, i64 13]
@__sancov_gen_cov_switch_values.67 = internal global [4 x i64] [i64 2, i64 32, i64 127, i64 155]
@__sancov_gen_cov_switch_values.68 = internal global [17 x i64] [i64 15, i64 8, i64 0, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15, i64 24, i64 26, i64 27, i64 127, i64 155]
@__sancov_gen_cov_switch_values.69 = internal global [17 x i64] [i64 15, i64 32, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15]
@__sancov_gen_cov_switch_values.70 = internal global [21 x i64] [i64 19, i64 8, i64 35, i64 37, i64 40, i64 41, i64 55, i64 56, i64 61, i64 62, i64 68, i64 69, i64 72, i64 77, i64 80, i64 90, i64 91, i64 93, i64 94, i64 95, i64 99]
@__sancov_gen_cov_switch_values.71 = internal global [4 x i64] [i64 2, i64 8, i64 80, i64 82]
@__sancov_gen_cov_switch_values.72 = internal global [7 x i64] [i64 5, i64 8, i64 60, i64 61, i64 62, i64 63, i64 91]
@__sancov_gen_cov_switch_values.73 = internal global [7 x i64] [i64 5, i64 8, i64 99, i64 104, i64 108, i64 109, i64 110]
@__sancov_gen_cov_switch_values.74 = internal global [4 x i64] [i64 2, i64 32, i64 5, i64 6]
@__sancov_gen_cov_switch_values.75 = internal global [30 x i64] [i64 28, i64 8, i64 64, i64 65, i64 66, i64 67, i64 68, i64 69, i64 70, i64 71, i64 72, i64 74, i64 75, i64 76, i64 77, i64 80, i64 88, i64 93, i64 96, i64 97, i64 99, i64 100, i64 101, i64 102, i64 103, i64 109, i64 113, i64 114, i64 115, i64 117]
@__sancov_gen_cov_switch_values.76 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 3]
@__sancov_gen_cov_switch_values.77 = internal global [5 x i64] [i64 3, i64 8, i64 56, i64 64, i64 71]
@__sancov_gen_cov_switch_values.78 = internal global [10 x i64] [i64 8, i64 32, i64 1, i64 5, i64 6, i64 7, i64 8, i64 9, i64 25, i64 1000]
@__sancov_gen_cov_switch_values.79 = internal global [5 x i64] [i64 3, i64 32, i64 3, i64 4, i64 20]
@__sancov_gen_cov_switch_values.80 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.81 = internal global [22 x i64] [i64 20, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 7, i64 10, i64 11, i64 12, i64 21, i64 22, i64 23, i64 24, i64 25, i64 27, i64 38, i64 39, i64 48, i64 49]
@__sancov_gen_cov_switch_values.82 = internal global [13 x i64] [i64 11, i64 32, i64 1, i64 2, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15, i64 16]
@__sancov_gen_cov_switch_values.83 = internal global [6 x i64] [i64 4, i64 32, i64 48, i64 66, i64 75, i64 85]
@__sancov_gen_cov_switch_values.84 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 5]
@__sancov_gen_cov_switch_values.85 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967295]
@__sancov_gen_cov_switch_values.86 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967295]
@___asan_gen_.87 = private unnamed_addr constant [13 x i8] c"default_utf8\00", align 1
@___asan_gen_.89 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 161, i32 5 }
@___asan_gen_.90 = private unnamed_addr constant [22 x i8] c"global_cursor_default\00", align 1
@___asan_gen_.92 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 163, i32 5 }
@___asan_gen_.93 = private unnamed_addr constant [12 x i8] c"cur_default\00", align 1
@___asan_gen_.95 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 166, i32 12 }
@___asan_gen_.96 = private unnamed_addr constant [14 x i8] c"blankinterval\00", align 1
@___asan_gen_.98 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 180, i32 12 }
@___asan_gen_.99 = private unnamed_addr constant [13 x i8] c"want_console\00", align 1
@___asan_gen_.101 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 194, i32 5 }
@___asan_gen_.102 = private unnamed_addr constant [17 x i8] c"vt_notifier_list\00", align 1
@___asan_gen_.105 = private unnamed_addr constant [13 x i8] c"console_work\00", align 1
@___asan_gen_.110 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 510, i32 2 }
@___asan_gen_.111 = private unnamed_addr constant [11 x i8] c"old_offset\00", align 1
@___asan_gen_.113 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 807, i32 13 }
@___asan_gen_.114 = private unnamed_addr constant [4 x i8] c"old\00", align 1
@___asan_gen_.116 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 808, i32 24 }
@___asan_gen_.117 = private unnamed_addr constant [5 x i8] c"oldx\00", align 1
@___asan_gen_.119 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 809, i32 24 }
@___asan_gen_.120 = private unnamed_addr constant [5 x i8] c"oldy\00", align 1
@___asan_gen_.122 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 809, i32 30 }
@___asan_gen_.123 = private unnamed_addr constant [8 x i8] c"vc_cons\00", align 1
@___asan_gen_.125 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 137, i32 11 }
@___asan_gen_.126 = private unnamed_addr constant [11 x i8] c"fg_console\00", align 1
@___asan_gen_.128 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 192, i32 5 }
@___asan_gen_.129 = private unnamed_addr constant [8 x i8] c"tty0dev\00", align 1
@___asan_gen_.131 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 242, i32 23 }
@___asan_gen_.134 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1010, i32 39 }
@___asan_gen_.135 = private unnamed_addr constant [12 x i8] c"vc_port_ops\00", align 1
@___asan_gen_.137 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1096, i32 41 }
@___asan_gen_.143 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1135, i32 2 }
@___asan_gen_.144 = private unnamed_addr constant [12 x i8] c"color_table\00", align 1
@___asan_gen_.146 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1425, i32 21 }
@___asan_gen_.147 = private unnamed_addr constant [12 x i8] c"default_red\00", align 1
@___asan_gen_.149 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1429, i32 15 }
@___asan_gen_.150 = private unnamed_addr constant [12 x i8] c"default_grn\00", align 1
@___asan_gen_.152 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1435, i32 15 }
@___asan_gen_.153 = private unnamed_addr constant [12 x i8] c"default_blu\00", align 1
@___asan_gen_.155 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1441, i32 15 }
@___asan_gen_.158 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1870, i32 21 }
@___asan_gen_.159 = private unnamed_addr constant [9 x i8] c"kmsg_con\00", align 1
@___asan_gen_.161 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3064, i32 13 }
@___asan_gen_.162 = private unnamed_addr constant [12 x i8] c"ignore_poke\00", align 1
@___asan_gen_.163 = private unnamed_addr constant [16 x i8] c"console_blanked\00", align 1
@___asan_gen_.165 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 176, i32 5 }
@___asan_gen_.166 = private unnamed_addr constant [14 x i8] c"default_color\00", align 1
@___asan_gen_.168 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3443, i32 12 }
@___asan_gen_.169 = private unnamed_addr constant [21 x i8] c"default_italic_color\00", align 1
@___asan_gen_.171 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3444, i32 12 }
@___asan_gen_.172 = private unnamed_addr constant [24 x i8] c"default_underline_color\00", align 1
@___asan_gen_.174 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3445, i32 12 }
@___asan_gen_.175 = private unnamed_addr constant [9 x i8] c"vc0_cdev\00", align 1
@___asan_gen_.177 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3572, i32 20 }
@___asan_gen_.180 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3592, i32 53 }
@___asan_gen_.183 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3593, i32 9 }
@___asan_gen_.184 = private unnamed_addr constant [14 x i8] c"vt_dev_groups\00", align 1
@___asan_gen_.189 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3596, i32 25 }
@___asan_gen_.190 = private unnamed_addr constant [15 x i8] c"console_driver\00", align 1
@___asan_gen_.192 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3037, i32 20 }
@___asan_gen_.195 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3605, i32 9 }
@___asan_gen_.198 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3607, i32 25 }
@___asan_gen_.199 = private unnamed_addr constant [8 x i8] c"con_ops\00", align 1
@___asan_gen_.201 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3551, i32 36 }
@___asan_gen_.204 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3617, i32 9 }
@___asan_gen_.205 = private unnamed_addr constant [22 x i8] c"registered_con_driver\00", align 1
@___asan_gen_.207 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 127, i32 26 }
@___asan_gen_.208 = private unnamed_addr constant [15 x i8] c"con_driver_map\00", align 1
@___asan_gen_.210 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 140, i32 28 }
@___asan_gen_.211 = private unnamed_addr constant [11 x i8] c"conswitchp\00", align 1
@___asan_gen_.213 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 128, i32 21 }
@___asan_gen_.214 = private unnamed_addr constant [17 x i8] c"saved_fg_console\00", align 1
@___asan_gen_.216 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 195, i32 12 }
@___asan_gen_.217 = private unnamed_addr constant [13 x i8] c"last_console\00", align 1
@___asan_gen_.219 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 193, i32 5 }
@___asan_gen_.220 = private unnamed_addr constant [19 x i8] c"saved_last_console\00", align 1
@___asan_gen_.222 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 196, i32 12 }
@___asan_gen_.223 = private unnamed_addr constant [19 x i8] c"saved_want_console\00", align 1
@___asan_gen_.225 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 197, i32 12 }
@___asan_gen_.226 = private unnamed_addr constant [14 x i8] c"saved_vc_mode\00", align 1
@___asan_gen_.228 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 198, i32 12 }
@___asan_gen_.229 = private unnamed_addr constant [22 x i8] c"saved_console_blanked\00", align 1
@___asan_gen_.231 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 199, i32 12 }
@___asan_gen_.234 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 4049, i32 4 }
@___asan_gen_.237 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 4050, i32 4 }
@___asan_gen_.240 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 4054, i32 21 }
@___asan_gen_.243 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 4063, i32 4 }
@___asan_gen_.244 = private unnamed_addr constant [27 x i8] c"con_driver_unregister_work\00", align 1
@___asan_gen_.247 = private unnamed_addr constant [12 x i8] c"blank_state\00", align 1
@___asan_gen_.249 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 228, i32 12 }
@___asan_gen_.250 = private unnamed_addr constant [16 x i8] c"vesa_blank_mode\00", align 1
@___asan_gen_.252 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 178, i32 12 }
@___asan_gen_.253 = private unnamed_addr constant [14 x i8] c"console_timer\00", align 1
@___asan_gen_.256 = private unnamed_addr constant [20 x i8] c"blank_timer_expired\00", align 1
@___asan_gen_.257 = private unnamed_addr constant [18 x i8] c"vesa_off_interval\00", align 1
@___asan_gen_.259 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 179, i32 12 }
@___asan_gen_.260 = private unnamed_addr constant [19 x i8] c"console_blank_hook\00", align 1
@___asan_gen_.262 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 225, i32 7 }
@___asan_gen_.271 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 4424, i32 3 }
@___asan_gen_.272 = private unnamed_addr constant [20 x i8] c"softcursor_original\00", align 1
@___asan_gen_.274 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 867, i32 12 }
@___asan_gen_.275 = private unnamed_addr constant [24 x i8] c"do_poke_blanked_console\00", align 1
@___asan_gen_.277 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 175, i32 5 }
@___asan_gen_.280 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 247, i32 8 }
@___asan_gen_.283 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 183, i32 8 }
@___asan_gen_.284 = private unnamed_addr constant [17 x i8] c"scrollback_delta\00", align 1
@___asan_gen_.286 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 219, i32 12 }
@___asan_gen_.287 = private unnamed_addr constant [18 x i8] c"master_display_fg\00", align 1
@___asan_gen_.289 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 207, i32 24 }
@___asan_gen_.295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3472, i32 2 }
@___asan_gen_.298 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3522, i32 3 }
@___asan_gen_.313 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3537, i32 2 }
@___asan_gen_.314 = private unnamed_addr constant [10 x i8] c"printable\00", align 1
@___asan_gen_.315 = private unnamed_addr constant [18 x i8] c"vt_console_driver\00", align 1
@___asan_gen_.317 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3159, i32 23 }
@___asan_gen_.318 = private unnamed_addr constant [14 x i8] c"printing_lock\00", align 1
@___asan_gen_.323 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3082, i32 9 }
@___asan_gen_.324 = private unnamed_addr constant [13 x i8] c"vt_dev_group\00", align 1
@___asan_gen_.326 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3586, i32 1 }
@___asan_gen_.327 = private unnamed_addr constant [13 x i8] c"vt_dev_attrs\00", align 1
@___asan_gen_.329 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3581, i32 26 }
@___asan_gen_.330 = private unnamed_addr constant [16 x i8] c"dev_attr_active\00", align 1
@___asan_gen_.332 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3579, i32 8 }
@___asan_gen_.335 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3577, i32 22 }
@___asan_gen_.344 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 2911, i32 3 }
@___asan_gen_.350 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 2919, i32 3 }
@___asan_gen_.351 = private unnamed_addr constant [20 x i8] c"utf8_length_changes\00", align 1
@___asan_gen_.353 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 2660, i32 19 }
@___asan_gen_.354 = private unnamed_addr constant [9 x i8] c"vt102_id\00", align 1
@___asan_gen_.356 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1860, i32 20 }
@___asan_gen_.357 = private unnamed_addr constant [11 x i8] c"teminal_ok\00", align 1
@___asan_gen_.359 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1852, i32 20 }
@___asan_gen_.362 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 1844, i32 21 }
@___asan_gen_.363 = private unnamed_addr constant [13 x i8] c"double_width\00", align 1
@___asan_gen_.365 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 2593, i32 31 }
@___asan_gen_.374 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3707, i32 2 }
@___asan_gen_.380 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3709, i32 3 }
@___asan_gen_.386 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3713, i32 3 }
@___asan_gen_.392 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3722, i32 3 }
@___asan_gen_.395 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 184, i32 8 }
@___asan_gen_.396 = private unnamed_addr constant [16 x i8] c"vtconsole_class\00", align 1
@___asan_gen_.398 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3628, i32 22 }
@___asan_gen_.399 = private unnamed_addr constant [15 x i8] c"con_dev_groups\00", align 1
@___asan_gen_.404 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 4158, i32 8 }
@___asan_gen_.413 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 4160, i32 3 }
@___asan_gen_.414 = private unnamed_addr constant [14 x i8] c"con_dev_group\00", align 1
@___asan_gen_.416 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3965, i32 1 }
@___asan_gen_.417 = private unnamed_addr constant [14 x i8] c"con_dev_attrs\00", align 1
@___asan_gen_.419 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3959, i32 26 }
@___asan_gen_.420 = private unnamed_addr constant [14 x i8] c"dev_attr_bind\00", align 1
@___asan_gen_.423 = private unnamed_addr constant [14 x i8] c"dev_attr_name\00", align 1
@___asan_gen_.428 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3956, i32 8 }
@___asan_gen_.431 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3942, i32 34 }
@___asan_gen_.434 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3957, i32 8 }
@___asan_gen_.437 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3950, i32 34 }
@___asan_gen_.440 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3951, i32 43 }
@___asan_gen_.443 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 3951, i32 51 }
@___asan_gen_.444 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.449 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 4296, i32 20 }
@___asan_gen_.458 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 4298, i32 3 }
@___asan_gen_.459 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.461 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 4315, i32 5 }
@___asan_gen_.463 = private constant [23 x i8] c"../drivers/tty/vt/vt.c\00", align 1
@___asan_gen_.464 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.463, i32 227, i32 8 }
@___asan_gen_.467 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.469, i32 230, i32 6 }
@___asan_gen_.469 = private unnamed_addr constant [31 x i8] c"../include/linux/thread_info.h\00", align 1
@___asan_gen_.470 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.469, i32 214, i32 2 }
@___asan_gen_.471 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.472 = private unnamed_addr constant [27 x i8] c"../include/linux/uaccess.h\00", align 1
@___asan_gen_.473 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.472, i32 156, i32 2 }
@llvm.compiler.used = appending global [191 x ptr] [ptr @__UNIQUE_ID_colortype256, ptr @__UNIQUE_ID_cur_defaulttype234, ptr @__UNIQUE_ID_default_blutype243, ptr @__UNIQUE_ID_default_grntype242, ptr @__UNIQUE_ID_default_redtype241, ptr @__UNIQUE_ID_default_utf8type232, ptr @__UNIQUE_ID_global_cursor_defaulttype233, ptr @__UNIQUE_ID_italictype257, ptr @__UNIQUE_ID_underlinetype258, ptr @__initcall__kmod_vt__259_3549_con_initcon, ptr @__initcall__kmod_vt__268_4326_vtconsole_class_init2, ptr @__ksymtab_color_table, ptr @__ksymtab_con_debug_enter, ptr @__ksymtab_con_debug_leave, ptr @__ksymtab_con_is_bound, ptr @__ksymtab_con_is_visible, ptr @__ksymtab_console_blank_hook, ptr @__ksymtab_console_blanked, ptr @__ksymtab_default_blu, ptr @__ksymtab_default_grn, ptr @__ksymtab_default_red, ptr @__ksymtab_do_blank_screen, ptr @__ksymtab_do_take_over_console, ptr @__ksymtab_do_unbind_con_driver, ptr @__ksymtab_do_unblank_screen, ptr @__ksymtab_do_unregister_con_driver, ptr @__ksymtab_fg_console, ptr @__ksymtab_give_up_console, ptr @__ksymtab_global_cursor_default, ptr @__ksymtab_redraw_screen, ptr @__ksymtab_register_vt_notifier, ptr @__ksymtab_screen_glyph, ptr @__ksymtab_screen_glyph_unicode, ptr @__ksymtab_screen_pos, ptr @__ksymtab_unregister_vt_notifier, ptr @__ksymtab_update_region, ptr @__ksymtab_vc_cons, ptr @__ksymtab_vc_resize, ptr @__ksymtab_vc_scrolldelta_helper, ptr @__param_color, ptr @__param_consoleblank, ptr @__param_cur_default, ptr @__param_default_blu, ptr @__param_default_grn, ptr @__param_default_red, ptr @__param_default_utf8, ptr @__param_global_cursor_default, ptr @__param_italic, ptr @__param_underline, ptr @con_init._entry, ptr @con_init._entry_ptr, ptr @do_bind_con_driver._entry, ptr @do_bind_con_driver._entry.33, ptr @do_bind_con_driver._entry.36, ptr @do_bind_con_driver._entry.39, ptr @do_bind_con_driver._entry_ptr, ptr @do_bind_con_driver._entry_ptr.35, ptr @do_bind_con_driver._entry_ptr.38, ptr @do_bind_con_driver._entry_ptr.41, ptr @do_con_write._entry, ptr @do_con_write._entry.27, ptr @do_con_write._entry_ptr, ptr @do_con_write._entry_ptr.29, ptr @do_register_con_driver._entry, ptr @do_register_con_driver._entry_ptr, ptr @do_unblank_screen._entry, ptr @do_unblank_screen._entry_ptr, ptr @vtconsole_class_init._entry, ptr @vtconsole_class_init._entry.56, ptr @vtconsole_class_init._entry_ptr, ptr @vtconsole_class_init._entry_ptr.57, ptr @default_utf8, ptr @global_cursor_default, ptr @cur_default, ptr @blankinterval, ptr @want_console, ptr @vt_notifier_list, ptr @console_work, ptr @.str, ptr @complement_pos.old_offset, ptr @complement_pos.old, ptr @complement_pos.oldx, ptr @complement_pos.oldy, ptr @vc_cons, ptr @fg_console, ptr @tty0dev, ptr @.str.1, ptr @vc_port_ops, ptr @vc_allocate.__key, ptr @.str.2, ptr @color_table, ptr @default_red, ptr @default_grn, ptr @default_blu, ptr @.str.3, ptr @vt_kmsg_redirect.kmsg_con, ptr @ignore_poke, ptr @console_blanked, ptr @default_color, ptr @default_italic_color, ptr @default_underline_color, ptr @vc0_cdev, ptr @.str.4, ptr @.str.5, ptr @vt_dev_groups, ptr @.str.6, ptr @console_driver, ptr @.str.7, ptr @.str.8, ptr @con_ops, ptr @.str.9, ptr @registered_con_driver, ptr @con_driver_map, ptr @conswitchp, ptr @saved_fg_console, ptr @last_console, ptr @saved_last_console, ptr @saved_want_console, ptr @saved_vc_mode, ptr @saved_console_blanked, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @con_driver_unregister_work, ptr @blank_state, ptr @vesa_blank_mode, ptr @console_timer, ptr @blank_timer_expired, ptr @vesa_off_interval, ptr @console_blank_hook, ptr @.str.14, ptr @.str.15, ptr @softcursor_original, ptr @do_poke_blanked_console, ptr @.str.16, ptr @.str.17, ptr @scrollback_delta, ptr @master_display_fg, ptr @vc_init.__key, ptr @.str.18, ptr @con_init.__key, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @printable, ptr @vt_console_driver, ptr @vt_console_print.printing_lock, ptr @.str.23, ptr @vt_dev_group, ptr @vt_dev_attrs, ptr @dev_attr_active, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.28, ptr @vc_translate_unicode.utf8_length_changes, ptr @respond_ID.vt102_id, ptr @status_report.teminal_ok, ptr @.str.30, ptr @is_double_width.double_width, ptr @.str.31, ptr @.str.32, ptr @.str.34, ptr @.str.37, ptr @.str.40, ptr @.str.42, ptr @vtconsole_class, ptr @con_dev_groups, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @con_dev_group, ptr @con_dev_attrs, ptr @dev_attr_bind, ptr @dev_attr_name, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @vtconsole_class_init.__key, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61], section "llvm.metadata"
@0 = internal global [131 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @default_utf8 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.87 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.89 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @global_cursor_default to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.90 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.92 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cur_default to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.93 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.95 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blankinterval to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.96 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.98 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @want_console to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.99 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.101 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vt_notifier_list to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.102 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.280 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @console_work to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.105 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.110 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @complement_pos.old_offset to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.111 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.113 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @complement_pos.old to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.114 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.116 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @complement_pos.oldx to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.117 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @complement_pos.oldy to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.120 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.122 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vc_cons to i32), i32 3024, i32 3776, i32 ptrtoint (ptr @___asan_gen_.123 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.125 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fg_console to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.126 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.128 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tty0dev to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.129 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.131 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.134 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vc_port_ops to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.135 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.137 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vc_allocate.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.143 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.143 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @color_table to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.144 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.146 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @default_red to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.147 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.149 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @default_grn to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.150 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.152 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @default_blu to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.153 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.155 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.158 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vt_kmsg_redirect.kmsg_con to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.159 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.161 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ignore_poke to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @console_blanked to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.165 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @default_color to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.166 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.168 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @default_italic_color to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @default_underline_color to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.172 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.174 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vc0_cdev to i32), i32 160, i32 192, i32 ptrtoint (ptr @___asan_gen_.175 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.180 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.183 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vt_dev_groups to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.184 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.326 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.189 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @console_driver to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.190 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.192 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.195 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @con_ops to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.199 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.201 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @registered_con_driver to i32), i32 448, i32 544, i32 ptrtoint (ptr @___asan_gen_.205 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.207 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @con_driver_map to i32), i32 252, i32 288, i32 ptrtoint (ptr @___asan_gen_.208 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @conswitchp to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.213 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @saved_fg_console to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @last_console to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.219 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @saved_last_console to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.220 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.222 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @saved_want_console to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.223 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.225 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @saved_vc_mode to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.228 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @saved_console_blanked to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.234 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.237 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.240 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.243 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @con_driver_unregister_work to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blank_state to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vesa_blank_mode to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.250 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.252 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @console_timer to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @blank_timer_expired to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.256 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vesa_off_interval to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.257 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @console_blank_hook to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.260 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.262 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @do_unblank_screen._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @softcursor_original to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.272 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @do_poke_blanked_console to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.275 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.280 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @scrollback_delta to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.284 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @master_display_fg to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.287 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.289 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vc_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @con_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.298 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @con_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @printable to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vt_console_driver to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.315 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.317 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vt_console_print.printing_lock to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.318 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.323 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.323 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vt_dev_group to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.324 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.326 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vt_dev_attrs to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.327 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.329 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_active to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.330 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.332 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.335 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @do_con_write._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @do_con_write._entry.27 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.350 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.350 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vc_translate_unicode.utf8_length_changes to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @respond_ID.vt102_id to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.356 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @status_report.teminal_ok to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.357 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.359 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @is_double_width.double_width to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.365 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @do_bind_con_driver._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @do_bind_con_driver._entry.33 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.380 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.380 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @do_bind_con_driver._entry.36 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.386 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.386 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @do_bind_con_driver._entry.39 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.392 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.392 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vtconsole_class to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.396 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.398 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @con_dev_groups to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.399 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @do_register_con_driver._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @con_dev_group to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @con_dev_attrs to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.419 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_bind to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.420 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dev_attr_name to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.423 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.434 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.431 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.434 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vtconsole_class_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vtconsole_class_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.458 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.458 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.458 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vtconsole_class_init._entry.56 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.461 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @register_vt_notifier(ptr noundef %nb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @atomic_notifier_chain_register(ptr noundef nonnull @vt_notifier_list, ptr noundef %nb) #21
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @atomic_notifier_chain_register(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @unregister_vt_notifier(ptr noundef %nb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @atomic_notifier_chain_unregister(ptr noundef nonnull @vt_notifier_list, ptr noundef %nb) #21
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @atomic_notifier_chain_unregister(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @schedule_console_callback() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %0 = load ptr, ptr @system_wq, align 4
  %call.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %0, ptr noundef nonnull @console_work) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vc_uniscr_check(ptr noundef %vc) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %0 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.rhs, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %land.lhs.true
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %1 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool3.not = icmp eq i32 %1, 0
  br i1 %tobool3.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !365

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 510, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %vc_utf = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %2 = ptrtoint ptr %vc_utf to i32
  call void @__asan_load2_noabort(i32 %2)
  %bf.load = load i16, ptr %vc_utf, align 4
  %3 = and i16 %bf.load, 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %3)
  %tobool24.not = icmp eq i16 %3, 0
  br i1 %tobool24.not, label %if.end.cleanup_crit_edge, label %if.end26

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end26:                                         ; preds = %if.end
  %vc_uni_screen = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 50
  %4 = ptrtoint ptr %vc_uni_screen to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %vc_uni_screen, align 4
  %tobool27.not = icmp eq ptr %5, null
  br i1 %tobool27.not, label %if.end29, label %if.end26.cleanup_crit_edge

if.end26.cleanup_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end29:                                         ; preds = %if.end26
  %vc_cols = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %6 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %vc_cols, align 4
  %vc_rows = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 5
  %8 = ptrtoint ptr %vc_rows to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %vc_rows, align 4
  %mul.i = mul i32 %9, %7
  %mul121.i = add i32 %mul.i, %9
  %add.i = shl i32 %mul121.i, 2
  %call.i = tail call noalias ptr @vmalloc(i32 noundef %add.i) #24
  %tobool.not.i = icmp eq ptr %call.i, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp22.not.i = icmp eq i32 %9, 0
  %or.cond.i = or i1 %cmp22.not.i, %tobool.not.i
  br i1 %or.cond.i, label %if.end29.vc_uniscr_alloc.exit_crit_edge, label %for.body.lr.ph.i

if.end29.vc_uniscr_alloc.exit_crit_edge:          ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_alloc.exit

for.body.lr.ph.i:                                 ; preds = %if.end29
  %add.ptr.i = getelementptr ptr, ptr %call.i, i32 %9
  %mul4.i = shl i32 %7, 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.024.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %p.023.i = phi ptr [ %add.ptr.i, %for.body.lr.ph.i ], [ %add.ptr5.i, %for.body.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr [0 x ptr], ptr %call.i, i32 0, i32 %i.024.i
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %p.023.i, ptr %arrayidx.i, align 4
  %add.ptr5.i = getelementptr i8, ptr %p.023.i, i32 %mul4.i
  %inc.i = add nuw i32 %i.024.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %9
  br i1 %exitcond.not.i, label %for.body.i.vc_uniscr_alloc.exit_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.body.i.vc_uniscr_alloc.exit_crit_edge:        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_alloc.exit

vc_uniscr_alloc.exit:                             ; preds = %for.body.i.vc_uniscr_alloc.exit_crit_edge, %if.end29.vc_uniscr_alloc.exit_crit_edge
  br i1 %tobool.not.i, label %vc_uniscr_alloc.exit.cleanup_crit_edge, label %if.end33

vc_uniscr_alloc.exit.cleanup_crit_edge:           ; preds = %vc_uniscr_alloc.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end33:                                         ; preds = %vc_uniscr_alloc.exit
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 27
  %11 = ptrtoint ptr %vc_hi_font_mask to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %vc_hi_font_mask, align 4
  %13 = or i16 %12, 255
  %14 = ptrtoint ptr %vc_rows to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %vc_rows, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp76.not = icmp eq i32 %15, 0
  br i1 %cmp76.not, label %if.end33.for.end49_crit_edge, label %for.body.preheader

if.end33.for.end49_crit_edge:                     ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end49

for.body.preheader:                               ; preds = %if.end33
  %vc_origin = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 9
  %16 = ptrtoint ptr %vc_origin to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %vc_origin, align 4
  %18 = inttoptr i32 %17 to ptr
  br label %for.body

for.body:                                         ; preds = %for.end.for.body_crit_edge, %for.body.preheader
  %y.078 = phi i32 [ %inc48, %for.end.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %p.077 = phi ptr [ %p.1.lcssa, %for.end.for.body_crit_edge ], [ %18, %for.body.preheader ]
  %arrayidx = getelementptr [0 x ptr], ptr %call.i, i32 0, i32 %y.078
  %19 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx, align 4
  %21 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %vc_cols, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %cmp3873.not = icmp eq i32 %22, 0
  br i1 %cmp3873.not, label %for.body.for.end_crit_edge, label %for.body.for.body40_crit_edge

for.body.for.body40_crit_edge:                    ; preds = %for.body
  br label %for.body40

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body40:                                       ; preds = %for.body40.for.body40_crit_edge, %for.body.for.body40_crit_edge
  %x.075 = phi i32 [ %inc, %for.body40.for.body40_crit_edge ], [ 0, %for.body.for.body40_crit_edge ]
  %p.174 = phi ptr [ %incdec.ptr, %for.body40.for.body40_crit_edge ], [ %p.077, %for.body.for.body40_crit_edge ]
  %incdec.ptr = getelementptr i16, ptr %p.174, i32 1
  %23 = ptrtoint ptr %p.174 to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %p.174, align 2
  %and71 = and i16 %24, %13
  %conv43 = zext i16 %and71 to i32
  %call44 = tail call zeroext i16 @inverse_translate(ptr noundef %vc, i32 noundef %conv43, i32 noundef 1) #21
  %conv45 = zext i16 %call44 to i32
  %arrayidx46 = getelementptr i32, ptr %20, i32 %x.075
  %25 = ptrtoint ptr %arrayidx46 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %conv45, ptr %arrayidx46, align 4
  %inc = add nuw i32 %x.075, 1
  %26 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %vc_cols, align 4
  %cmp38 = icmp ult i32 %inc, %27
  br i1 %cmp38, label %for.body40.for.body40_crit_edge, label %for.body40.for.end_crit_edge

for.body40.for.end_crit_edge:                     ; preds = %for.body40
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body40.for.body40_crit_edge:                  ; preds = %for.body40
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body40

for.end:                                          ; preds = %for.body40.for.end_crit_edge, %for.body.for.end_crit_edge
  %p.1.lcssa = phi ptr [ %p.077, %for.body.for.end_crit_edge ], [ %incdec.ptr, %for.body40.for.end_crit_edge ]
  %inc48 = add nuw i32 %y.078, 1
  %28 = ptrtoint ptr %vc_rows to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %vc_rows, align 4
  %cmp = icmp ult i32 %inc48, %29
  br i1 %cmp, label %for.end.for.body_crit_edge, label %for.end.for.end49_crit_edge

for.end.for.end49_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end49

for.end.for.body_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end49:                                        ; preds = %for.end.for.end49_crit_edge, %if.end33.for.end49_crit_edge
  %30 = ptrtoint ptr %vc_uni_screen to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %call.i, ptr %vc_uni_screen, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.end49, %vc_uniscr_alloc.exit.cleanup_crit_edge, %if.end26.cleanup_crit_edge, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %for.end49 ], [ -61, %if.end.cleanup_crit_edge ], [ 0, %if.end26.cleanup_crit_edge ], [ -12, %vc_uniscr_alloc.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @is_console_locked() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i16 @inverse_translate(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @vc_uniscr_copy_line(ptr noundef %vc, ptr nocapture noundef writeonly %dest, i1 noundef zeroext %viewed, i32 noundef %row, i32 noundef %col, i32 noundef %nr) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %vc_uni_screen = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 50
  %0 = ptrtoint ptr %vc_uni_screen to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vc_uni_screen, align 4
  %vc_size_row = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 6
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %do.body5, label %do.end10, !prof !365

do.body5:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/tty/vt/vt.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 554, 0\0A.popsection", ""() #21, !srcloc !366
  unreachable

do.end10:                                         ; preds = %entry
  %2 = ptrtoint ptr %vc_size_row to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vc_size_row, align 4
  %mul = mul i32 %3, %row
  %mul1 = shl i32 %col, 1
  %add = add i32 %mul, %mul1
  br i1 %viewed, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %do.end10
  call void @__sanitizer_cov_trace_pc() #23
  %vc_origin.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 9
  %4 = ptrtoint ptr %vc_origin.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vc_origin.i, align 4
  %add.i = add i32 %5, %add
  %6 = inttoptr i32 %add.i to ptr
  br label %screenpos.exit

if.else.i:                                        ; preds = %do.end10
  %vc_sw.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %7 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %vc_sw.i, align 4
  %con_screen_pos.i = getelementptr inbounds %struct.consw, ptr %8, i32 0, i32 21
  %9 = ptrtoint ptr %con_screen_pos.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %con_screen_pos.i, align 4
  %tobool1.not.i = icmp eq ptr %10, null
  br i1 %tobool1.not.i, label %if.then2.i, label %if.else4.i

if.then2.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  %vc_visible_origin.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 11
  %11 = ptrtoint ptr %vc_visible_origin.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %vc_visible_origin.i, align 4
  %add3.i = add i32 %12, %add
  %13 = inttoptr i32 %add3.i to ptr
  br label %screenpos.exit

if.else4.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  %call.i = tail call ptr %10(ptr noundef %vc, i32 noundef %add) #21
  br label %screenpos.exit

screenpos.exit:                                   ; preds = %if.else4.i, %if.then2.i, %if.then.i
  %p.0.i = phi ptr [ %call.i, %if.else4.i ], [ %13, %if.then2.i ], [ %6, %if.then.i ]
  %14 = ptrtoint ptr %p.0.i to i32
  %vc_origin = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 9
  %15 = ptrtoint ptr %vc_origin to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %vc_origin, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %14)
  %cmp.not = icmp ugt i32 %16, %14
  br i1 %cmp.not, label %screenpos.exit.if.else_crit_edge, label %land.lhs.true

screenpos.exit.if.else_crit_edge:                 ; preds = %screenpos.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

land.lhs.true:                                    ; preds = %screenpos.exit
  %vc_scr_end = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 10
  %17 = ptrtoint ptr %vc_scr_end to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %vc_scr_end, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %18, i32 %14)
  %cmp12 = icmp ugt i32 %18, %14
  br i1 %cmp12, label %if.then13, label %land.lhs.true.if.else_crit_edge

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

if.then13:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  %sub = sub i32 %14, %16
  %19 = ptrtoint ptr %vc_size_row to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %vc_size_row, align 4
  %sub.frozen = freeze i32 %sub
  %.frozen = freeze i32 %20
  %div = udiv i32 %sub.frozen, %.frozen
  %21 = mul i32 %div, %.frozen
  %rem.decomposed = sub i32 %sub.frozen, %21
  %div1951 = lshr i32 %rem.decomposed, 1
  %arrayidx = getelementptr [0 x ptr], ptr %1, i32 0, i32 %div
  %22 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx, align 4
  %arrayidx20 = getelementptr i32, ptr %23, i32 %div1951
  %mul21 = shl i32 %nr, 2
  %24 = call ptr @memcpy(ptr %dest, ptr %arrayidx20, i32 %mul21)
  br label %if.end29

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %screenpos.exit.if.else_crit_edge
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 27
  %25 = ptrtoint ptr %vc_hi_font_mask to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %vc_hi_font_mask, align 4
  %27 = or i16 %26, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr)
  %tobool22.not52 = icmp eq i32 %nr, 0
  br i1 %tobool22.not52, label %if.else.if.end29_crit_edge, label %if.else.while.body_crit_edge

if.else.while.body_crit_edge:                     ; preds = %if.else
  br label %while.body

if.else.if.end29_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29

while.body:                                       ; preds = %while.body.while.body_crit_edge, %if.else.while.body_crit_edge
  %uni_buf.055 = phi ptr [ %incdec.ptr28, %while.body.while.body_crit_edge ], [ %dest, %if.else.while.body_crit_edge ]
  %p.054 = phi ptr [ %incdec.ptr, %while.body.while.body_crit_edge ], [ %p.0.i, %if.else.while.body_crit_edge ]
  %nr.addr.053 = phi i32 [ %dec, %while.body.while.body_crit_edge ], [ %nr, %if.else.while.body_crit_edge ]
  %dec = add i32 %nr.addr.053, -1
  %incdec.ptr = getelementptr i16, ptr %p.054, i32 1
  %28 = ptrtoint ptr %p.054 to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %p.054, align 2
  %and50 = and i16 %29, %27
  %conv25 = zext i16 %and50 to i32
  %call26 = tail call zeroext i16 @inverse_translate(ptr noundef %vc, i32 noundef %conv25, i32 noundef 1) #21
  %conv27 = zext i16 %call26 to i32
  %incdec.ptr28 = getelementptr i32, ptr %uni_buf.055, i32 1
  %30 = ptrtoint ptr %uni_buf.055 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %conv27, ptr %uni_buf.055, align 4
  %tobool22.not = icmp eq i32 %dec, 0
  br i1 %tobool22.not, label %while.body.if.end29_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body

while.body.if.end29_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29

if.end29:                                         ; preds = %while.body.if.end29_crit_edge, %if.else.if.end29_crit_edge, %if.then13
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @update_region(ptr noundef %vc, i32 noundef %start, i32 noundef %count) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %0 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.rhs, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %land.lhs.true
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %1 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool3.not = icmp eq i32 %1, 0
  br i1 %tobool3.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !365

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 690, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %2 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %if.end.con_is_visible.exit.i_crit_edge

if.end.con_is_visible.exit.i_crit_edge:           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

land.lhs.true.i.i:                                ; preds = %if.end
  %call1.i.i = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool2.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool2.not.i.i, label %land.rhs.i.i, label %land.lhs.true.i.i.con_is_visible.exit.i_crit_edge

land.lhs.true.i.i.con_is_visible.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

land.rhs.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %3 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool3.not.i.i = icmp eq i32 %3, 0
  br i1 %tobool3.not.i.i, label %do.end.i.i, label %land.rhs.i.i.con_is_visible.exit.i_crit_edge, !prof !365

land.rhs.i.i.con_is_visible.exit.i_crit_edge:     ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4012, i32 noundef 9, ptr noundef null) #21
  br label %con_is_visible.exit.i

con_is_visible.exit.i:                            ; preds = %do.end.i.i, %land.rhs.i.i.con_is_visible.exit.i_crit_edge, %land.lhs.true.i.i.con_is_visible.exit.i_crit_edge, %if.end.con_is_visible.exit.i_crit_edge
  %vc_display_fg.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 47
  %4 = ptrtoint ptr %vc_display_fg.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %vc_display_fg.i.i, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %cmp.i.i = icmp eq ptr %7, %vc
  br i1 %cmp.i.i, label %con_should_update.exit, label %con_is_visible.exit.i.if.end26_crit_edge

con_is_visible.exit.i.if.end26_crit_edge:         ; preds = %con_is_visible.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end26

con_should_update.exit:                           ; preds = %con_is_visible.exit.i
  %8 = load i32, ptr @console_blanked, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not.i = icmp eq i32 %8, 0
  br i1 %tobool.not.i, label %if.then25, label %con_should_update.exit.if.end26_crit_edge

con_should_update.exit.if.end26_crit_edge:        ; preds = %con_should_update.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end26

if.then25:                                        ; preds = %con_should_update.exit
  tail call fastcc void @hide_cursor(ptr noundef %vc)
  tail call fastcc void @do_update_region(ptr noundef %vc, i32 noundef %start, i32 noundef %count)
  %vc_num.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 3
  %9 = ptrtoint ptr %vc_num.i.i to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %vc_num.i.i, align 4
  %conv.i.i = zext i16 %10 to i32
  %11 = load i32, ptr @fg_console, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %conv.i.i)
  %cmp.i.i32 = icmp eq i32 %11, %conv.i.i
  br i1 %cmp.i.i32, label %lor.lhs.false.i, label %if.then25.if.end26_crit_edge

if.then25.if.end26_crit_edge:                     ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end26

lor.lhs.false.i:                                  ; preds = %if.then25
  %12 = load i32, ptr @console_blanked, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not.i33 = icmp eq i32 %12, 0
  br i1 %tobool.not.i33, label %lor.lhs.false1.i, label %lor.lhs.false.i.if.end26_crit_edge

lor.lhs.false.i.if.end26_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end26

lor.lhs.false1.i:                                 ; preds = %lor.lhs.false.i
  %vc_mode.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 17
  %13 = ptrtoint ptr %vc_mode.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %vc_mode.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %14)
  %cmp.i = icmp eq i8 %14, 1
  br i1 %cmp.i, label %lor.lhs.false1.i.if.end26_crit_edge, label %if.end.i

lor.lhs.false1.i.if.end26_crit_edge:              ; preds = %lor.lhs.false1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end26

if.end.i:                                         ; preds = %lor.lhs.false1.i
  %vc_deccm.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %15 = ptrtoint ptr %vc_deccm.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %bf.load.i = load i16, ptr %vc_deccm.i, align 4
  %16 = and i16 %bf.load.i, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %16)
  %tobool3.not.i = icmp eq i16 %16, 0
  br i1 %tobool3.not.i, label %if.else.i, label %if.then4.i

if.then4.i:                                       ; preds = %if.end.i
  %call5.i = tail call zeroext i1 @vc_is_sel(ptr noundef %vc) #21
  br i1 %call5.i, label %if.then6.i, label %if.then4.i.if.end7.i_crit_edge

if.then4.i.if.end7.i_crit_edge:                   ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7.i

if.then6.i:                                       ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @clear_selection() #21
  br label %if.end7.i

if.end7.i:                                        ; preds = %if.then6.i, %if.then4.i.if.end7.i_crit_edge
  tail call fastcc void @add_softcursor(ptr noundef %vc) #21
  %vc_cursor_type.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 23
  %17 = ptrtoint ptr %vc_cursor_type.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %vc_cursor_type.i, align 4
  %and.i = and i32 %18, 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i)
  %cmp8.not.i = icmp eq i32 %and.i, 1
  br i1 %cmp8.not.i, label %if.end7.i.if.end26_crit_edge, label %if.then10.i

if.end7.i.if.end26_crit_edge:                     ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end26

if.then10.i:                                      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  %vc_sw.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %19 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %vc_sw.i, align 4
  %con_cursor.i = getelementptr inbounds %struct.consw, ptr %20, i32 0, i32 7
  %21 = ptrtoint ptr %con_cursor.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %con_cursor.i, align 4
  tail call void %22(ptr noundef %vc, i32 noundef 1) #21
  br label %if.end26

if.else.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @hide_cursor(ptr noundef %vc) #21
  br label %if.end26

if.end26:                                         ; preds = %if.else.i, %if.then10.i, %if.end7.i.if.end26_crit_edge, %lor.lhs.false1.i.if.end26_crit_edge, %lor.lhs.false.i.if.end26_crit_edge, %if.then25.if.end26_crit_edge, %con_should_update.exit.if.end26_crit_edge, %con_is_visible.exit.i.if.end26_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @hide_cursor(ptr noundef %vc) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @vc_is_sel(ptr noundef %vc) #21
  br i1 %call, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @clear_selection() #21
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %vc_sw = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %0 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vc_sw, align 4
  %con_cursor = getelementptr inbounds %struct.consw, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %con_cursor to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %con_cursor, align 4
  tail call void %3(ptr noundef %vc, i32 noundef 2) #21
  %4 = load i32, ptr @softcursor_original, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %4)
  %cmp.not.i = icmp eq i32 %4, -1
  br i1 %cmp.not.i, label %if.end.hide_softcursor.exit_crit_edge, label %if.then.i

if.end.hide_softcursor.exit_crit_edge:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %hide_softcursor.exit

if.then.i:                                        ; preds = %if.end
  %conv.i = trunc i32 %4 to i16
  %vc_pos.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 26
  %5 = ptrtoint ptr %vc_pos.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %vc_pos.i, align 4
  %7 = inttoptr i32 %6 to ptr
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 %conv.i, ptr %7, align 2
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %9 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not.i.i.i = icmp eq i32 %9, 0
  br i1 %tobool.not.i.i.i, label %land.lhs.true.i.i.i, label %if.then.i.con_is_visible.exit.i.i_crit_edge

if.then.i.con_is_visible.exit.i.i_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i.i

land.lhs.true.i.i.i:                              ; preds = %if.then.i
  %call1.i.i.i = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool2.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool2.not.i.i.i, label %land.rhs.i.i.i, label %land.lhs.true.i.i.i.con_is_visible.exit.i.i_crit_edge

land.lhs.true.i.i.i.con_is_visible.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i.i

land.rhs.i.i.i:                                   ; preds = %land.lhs.true.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %10 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool3.not.i.i.i = icmp eq i32 %10, 0
  br i1 %tobool3.not.i.i.i, label %do.end.i.i.i, label %land.rhs.i.i.i.con_is_visible.exit.i.i_crit_edge, !prof !365

land.rhs.i.i.i.con_is_visible.exit.i.i_crit_edge: ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i.i

do.end.i.i.i:                                     ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4012, i32 noundef 9, ptr noundef null) #21
  br label %con_is_visible.exit.i.i

con_is_visible.exit.i.i:                          ; preds = %do.end.i.i.i, %land.rhs.i.i.i.con_is_visible.exit.i.i_crit_edge, %land.lhs.true.i.i.i.con_is_visible.exit.i.i_crit_edge, %if.then.i.con_is_visible.exit.i.i_crit_edge
  %vc_display_fg.i.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 47
  %11 = ptrtoint ptr %vc_display_fg.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %vc_display_fg.i.i.i, align 4
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %12, align 4
  %cmp.i.i.i = icmp eq ptr %14, %vc
  br i1 %cmp.i.i.i, label %con_should_update.exit.i, label %con_is_visible.exit.i.i.if.end.i_crit_edge

con_is_visible.exit.i.i.if.end.i_crit_edge:       ; preds = %con_is_visible.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

con_should_update.exit.i:                         ; preds = %con_is_visible.exit.i.i
  %15 = load i32, ptr @console_blanked, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.not.i.i = icmp eq i32 %15, 0
  br i1 %tobool.not.i.i, label %if.then1.i, label %con_should_update.exit.i.if.end.i_crit_edge

con_should_update.exit.i.if.end.i_crit_edge:      ; preds = %con_should_update.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

if.then1.i:                                       ; preds = %con_should_update.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  %16 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %vc_sw, align 4
  %con_putc.i = getelementptr inbounds %struct.consw, ptr %17, i32 0, i32 5
  %18 = ptrtoint ptr %con_putc.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %con_putc.i, align 4
  %20 = load i32, ptr @softcursor_original, align 4
  %state.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %y.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %21 = ptrtoint ptr %y.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %y.i, align 4
  %23 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %state.i, align 4
  tail call void %19(ptr noundef %vc, i32 noundef %20, i32 noundef %22, i32 noundef %24) #21
  br label %if.end.i

if.end.i:                                         ; preds = %if.then1.i, %con_should_update.exit.i.if.end.i_crit_edge, %con_is_visible.exit.i.i.if.end.i_crit_edge
  store i32 -1, ptr @softcursor_original, align 4
  br label %hide_softcursor.exit

hide_softcursor.exit:                             ; preds = %if.end.i, %if.end.hide_softcursor.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @do_update_region(ptr noundef %vc, i32 noundef %start, i32 noundef %count) unnamed_addr #0 align 64 {
entry:
  %nxx = alloca i32, align 4
  %nyy = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %vc_sw = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %0 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vc_sw, align 4
  %con_getxy = getelementptr inbounds %struct.consw, ptr %1, i32 0, i32 22
  %2 = ptrtoint ptr %con_getxy to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %con_getxy, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %vc_origin = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 9
  %4 = ptrtoint ptr %vc_origin to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vc_origin, align 4
  %sub = sub i32 %start, %5
  %div88 = lshr i32 %sub, 1
  %vc_cols = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %6 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %vc_cols, align 4
  %div88.frozen = freeze i32 %div88
  %.frozen = freeze i32 %7
  %div2 = udiv i32 %div88.frozen, %.frozen
  %8 = mul i32 %div2, %.frozen
  %rem.decomposed = sub i32 %div88.frozen, %8
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nxx) #21
  %9 = ptrtoint ptr %nxx to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -1, ptr %nxx, align 4, !annotation !367
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nyy) #21
  %10 = ptrtoint ptr %nyy to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 -1, ptr %nyy, align 4, !annotation !367
  %call = call i32 %3(ptr noundef %vc, i32 noundef %start, ptr noundef nonnull %nxx, ptr noundef nonnull %nyy) #21
  %11 = ptrtoint ptr %nxx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %nxx, align 4
  %13 = ptrtoint ptr %nyy to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %nyy, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nyy) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nxx) #21
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %start.addr.0 = phi i32 [ %call, %if.else ], [ %start, %if.then ]
  %xx.0 = phi i32 [ %12, %if.else ], [ %rem.decomposed, %if.then ]
  %yy.0 = phi i32 [ %14, %if.else ], [ %div2, %if.then ]
  %vc_cols6 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  br label %for.cond.outer

for.cond.outer:                                   ; preds = %if.then41, %if.end
  %start.addr.1.ph = phi i32 [ %call44, %if.then41 ], [ %start.addr.0, %if.end ]
  %count.addr.0.ph = phi i32 [ %count.addr.1.lcssa118122, %if.then41 ], [ %count, %if.end ]
  %xx.1.ph = phi i32 [ 0, %if.then41 ], [ %xx.0, %if.end ]
  %yy.1.ph = phi i32 [ %inc37, %if.then41 ], [ %yy.0, %if.end ]
  %p.0.ph.in = phi i32 [ %start.addr.1.ph, %if.then41 ], [ %start, %if.end ]
  %p.0.ph = inttoptr i32 %p.0.ph.in to ptr
  br label %for.cond

for.cond:                                         ; preds = %if.end36.for.cond_crit_edge, %for.cond.outer
  %count.addr.0 = phi i32 [ %count.addr.1.lcssa118122, %if.end36.for.cond_crit_edge ], [ %count.addr.0.ph, %for.cond.outer ]
  %xx.1 = phi i32 [ 0, %if.end36.for.cond_crit_edge ], [ %xx.1.ph, %for.cond.outer ]
  %yy.1 = phi i32 [ %inc37, %if.end36.for.cond_crit_edge ], [ %yy.1.ph, %for.cond.outer ]
  %p.0 = phi ptr [ %p.1.lcssa119121, %if.end36.for.cond_crit_edge ], [ %p.0.ph, %for.cond.outer ]
  %15 = ptrtoint ptr %vc_cols6 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %vc_cols6, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %xx.1, i32 %16)
  %cmp95 = icmp uge i32 %xx.1, %16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %count.addr.0)
  %tobool8.not96 = icmp eq i32 %count.addr.0, 0
  %or.cond97 = select i1 %cmp95, i1 true, i1 %tobool8.not96
  br i1 %or.cond97, label %while.end.thread, label %while.body.preheader

while.end.thread:                                 ; preds = %for.cond
  br i1 %tobool8.not96, label %while.end.thread.for.end_crit_edge, label %while.end.thread.if.end36_crit_edge

while.end.thread.if.end36_crit_edge:              ; preds = %while.end.thread
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end36

while.end.thread.for.end_crit_edge:               ; preds = %while.end.thread
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

while.body.preheader:                             ; preds = %for.cond
  %17 = ptrtoint ptr %p.0 to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %p.0, align 2
  %19 = and i16 %18, -256
  br label %while.body

while.body:                                       ; preds = %if.end23.while.body_crit_edge, %while.body.preheader
  %q.0106 = phi ptr [ %q.1, %if.end23.while.body_crit_edge ], [ %p.0, %while.body.preheader ]
  %startx.0105 = phi i32 [ %startx.1, %if.end23.while.body_crit_edge ], [ %xx.1, %while.body.preheader ]
  %attrib.0104 = phi i16 [ %attrib.1, %if.end23.while.body_crit_edge ], [ %19, %while.body.preheader ]
  %p.1101 = phi ptr [ %incdec.ptr, %if.end23.while.body_crit_edge ], [ %p.0, %while.body.preheader ]
  %xx.299 = phi i32 [ %inc, %if.end23.while.body_crit_edge ], [ %xx.1, %while.body.preheader ]
  %count.addr.198 = phi i32 [ %dec, %if.end23.while.body_crit_edge ], [ %count.addr.0, %while.body.preheader ]
  %20 = ptrtoint ptr %p.1101 to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %p.1101, align 2
  %22 = and i16 %21, -256
  call void @__sanitizer_cov_trace_cmp2(i16 %attrib.0104, i16 %22)
  %cmp12.not = icmp eq i16 %attrib.0104, %22
  br i1 %cmp12.not, label %while.body.if.end23_crit_edge, label %if.then14

while.body.if.end23_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end23

if.then14:                                        ; preds = %while.body
  %cmp15 = icmp ugt ptr %p.1101, %q.0106
  br i1 %cmp15, label %if.then17, label %if.then14.if.end19_crit_edge

if.then14.if.end19_crit_edge:                     ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end19

if.then17:                                        ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #23
  %23 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %vc_sw, align 4
  %con_putcs = getelementptr inbounds %struct.consw, ptr %24, i32 0, i32 6
  %25 = ptrtoint ptr %con_putcs to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %con_putcs, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %p.1101 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %q.0106 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i32 %sub.ptr.sub, 1
  call void %26(ptr noundef %vc, ptr noundef %q.0106, i32 noundef %sub.ptr.div, i32 noundef %yy.1, i32 noundef %startx.0105) #21
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %if.then14.if.end19_crit_edge
  %27 = ptrtoint ptr %p.1101 to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %p.1101, align 2
  %29 = and i16 %28, -256
  br label %if.end23

if.end23:                                         ; preds = %if.end19, %while.body.if.end23_crit_edge
  %attrib.1 = phi i16 [ %29, %if.end19 ], [ %attrib.0104, %while.body.if.end23_crit_edge ]
  %startx.1 = phi i32 [ %xx.299, %if.end19 ], [ %startx.0105, %while.body.if.end23_crit_edge ]
  %q.1 = phi ptr [ %p.1101, %if.end19 ], [ %q.0106, %while.body.if.end23_crit_edge ]
  %incdec.ptr = getelementptr i16, ptr %p.1101, i32 1
  %inc = add nuw i32 %xx.299, 1
  %dec = add i32 %count.addr.198, -1
  %30 = ptrtoint ptr %vc_cols6 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %vc_cols6, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc, i32 %31)
  %cmp = icmp uge i32 %inc, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %tobool8.not = icmp eq i32 %dec, 0
  %or.cond = select i1 %cmp, i1 true, i1 %tobool8.not
  br i1 %or.cond, label %while.end, label %if.end23.while.body_crit_edge

if.end23.while.body_crit_edge:                    ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body

while.end:                                        ; preds = %if.end23
  %cmp24 = icmp ugt ptr %incdec.ptr, %q.1
  br i1 %cmp24, label %if.then26, label %if.end33

if.then26:                                        ; preds = %while.end
  %32 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %vc_sw, align 4
  %con_putcs28 = getelementptr inbounds %struct.consw, ptr %33, i32 0, i32 6
  %34 = ptrtoint ptr %con_putcs28 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %con_putcs28, align 4
  %sub.ptr.lhs.cast29 = ptrtoint ptr %incdec.ptr to i32
  %sub.ptr.rhs.cast30 = ptrtoint ptr %q.1 to i32
  %sub.ptr.sub31 = sub i32 %sub.ptr.lhs.cast29, %sub.ptr.rhs.cast30
  %sub.ptr.div32 = ashr exact i32 %sub.ptr.sub31, 1
  call void %35(ptr noundef %vc, ptr noundef %q.1, i32 noundef %sub.ptr.div32, i32 noundef %yy.1, i32 noundef %startx.1) #21
  br i1 %tobool8.not, label %if.then26.for.end_crit_edge, label %if.then26.if.end36_crit_edge

if.then26.if.end36_crit_edge:                     ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end36

if.then26.for.end_crit_edge:                      ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

if.end33:                                         ; preds = %while.end
  br i1 %tobool8.not, label %if.end33.for.end_crit_edge, label %if.end33.if.end36_crit_edge

if.end33.if.end36_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end36

if.end33.for.end_crit_edge:                       ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

if.end36:                                         ; preds = %if.end33.if.end36_crit_edge, %if.then26.if.end36_crit_edge, %while.end.thread.if.end36_crit_edge
  %count.addr.1.lcssa118122 = phi i32 [ %count.addr.0, %while.end.thread.if.end36_crit_edge ], [ %dec, %if.end33.if.end36_crit_edge ], [ %dec, %if.then26.if.end36_crit_edge ]
  %p.1.lcssa119121 = phi ptr [ %p.0, %while.end.thread.if.end36_crit_edge ], [ %incdec.ptr, %if.end33.if.end36_crit_edge ], [ %incdec.ptr, %if.then26.if.end36_crit_edge ]
  %inc37 = add i32 %yy.1, 1
  %36 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %vc_sw, align 4
  %con_getxy39 = getelementptr inbounds %struct.consw, ptr %37, i32 0, i32 22
  %38 = ptrtoint ptr %con_getxy39 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %con_getxy39, align 4
  %tobool40.not = icmp eq ptr %39, null
  br i1 %tobool40.not, label %if.end36.for.cond_crit_edge, label %if.then41

if.end36.for.cond_crit_edge:                      ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond

if.then41:                                        ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #23
  %call44 = call i32 %39(ptr noundef %vc, i32 noundef %start.addr.1.ph, ptr noundef null, ptr noundef null) #21
  br label %for.cond.outer

for.end:                                          ; preds = %if.end33.for.end_crit_edge, %if.then26.for.end_crit_edge, %while.end.thread.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @invert_screen(ptr noundef %vc, i32 noundef %offset, i32 noundef %count, i1 noundef zeroext %viewed) local_unnamed_addr #0 align 64 {
entry:
  %param.i = alloca %struct.vt_notifier_param, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %0 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.rhs, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %land.lhs.true
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %1 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool3.not = icmp eq i32 %1, 0
  br i1 %tobool3.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !365

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 760, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %div = sdiv i32 %count, 2
  br i1 %viewed, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %vc_origin.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 9
  %2 = ptrtoint ptr %vc_origin.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vc_origin.i, align 4
  %add.i = add i32 %3, %offset
  %4 = inttoptr i32 %add.i to ptr
  br label %screenpos.exit

if.else.i:                                        ; preds = %if.end
  %vc_sw.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %5 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %vc_sw.i, align 4
  %con_screen_pos.i = getelementptr inbounds %struct.consw, ptr %6, i32 0, i32 21
  %7 = ptrtoint ptr %con_screen_pos.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %con_screen_pos.i, align 4
  %tobool1.not.i = icmp eq ptr %8, null
  br i1 %tobool1.not.i, label %if.then2.i, label %if.else4.i

if.then2.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  %vc_visible_origin.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 11
  %9 = ptrtoint ptr %vc_visible_origin.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %vc_visible_origin.i, align 4
  %add3.i = add i32 %10, %offset
  %11 = inttoptr i32 %add3.i to ptr
  br label %screenpos.exit

if.else4.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  %call.i = tail call ptr %8(ptr noundef %vc, i32 noundef %offset) #21
  br label %screenpos.exit

screenpos.exit:                                   ; preds = %if.else4.i, %if.then2.i, %if.then.i
  %p.0.i = phi ptr [ %call.i, %if.else4.i ], [ %11, %if.then2.i ], [ %4, %if.then.i ]
  %vc_sw = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %12 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %vc_sw, align 4
  %con_invert_region = getelementptr inbounds %struct.consw, ptr %13, i32 0, i32 20
  %14 = ptrtoint ptr %con_invert_region to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %con_invert_region, align 4
  %tobool26.not = icmp eq ptr %15, null
  br i1 %tobool26.not, label %if.else, label %if.then27

if.then27:                                        ; preds = %screenpos.exit
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %15(ptr noundef %vc, ptr noundef %p.0.i, i32 noundef %div) #21
  br label %if.end71

if.else:                                          ; preds = %screenpos.exit
  %vc_can_do_color = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %16 = ptrtoint ptr %vc_can_do_color to i32
  call void @__asan_load2_noabort(i32 %16)
  %bf.load = load i16, ptr %vc_can_do_color, align 4
  %17 = and i16 %bf.load, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %17)
  %tobool30.not = icmp eq i16 %17, 0
  br i1 %tobool30.not, label %while.cond.preheader, label %if.else34

while.cond.preheader:                             ; preds = %if.else
  %count.off122 = add i32 %count, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %count.off122)
  %18 = icmp ult i32 %count.off122, 3
  br i1 %18, label %while.cond.preheader.if.end71_crit_edge, label %while.cond.preheader.while.body_crit_edge

while.cond.preheader.while.body_crit_edge:        ; preds = %while.cond.preheader
  br label %while.body

while.cond.preheader.if.end71_crit_edge:          ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end71

while.body:                                       ; preds = %while.body.while.body_crit_edge, %while.cond.preheader.while.body_crit_edge
  %cnt.0120 = phi i32 [ %dec, %while.body.while.body_crit_edge ], [ %div, %while.cond.preheader.while.body_crit_edge ]
  %q.0119 = phi ptr [ %incdec.ptr, %while.body.while.body_crit_edge ], [ %p.0.i, %while.cond.preheader.while.body_crit_edge ]
  %dec = add i32 %cnt.0120, -1
  %19 = ptrtoint ptr %q.0119 to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %q.0119, align 2
  %21 = xor i16 %20, 2048
  store i16 %21, ptr %q.0119, align 2
  %incdec.ptr = getelementptr i16, ptr %q.0119, i32 1
  %tobool32.not = icmp eq i32 %dec, 0
  br i1 %tobool32.not, label %while.body.if.end71_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body

while.body.if.end71_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end71

if.else34:                                        ; preds = %if.else
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 27
  %22 = ptrtoint ptr %vc_hi_font_mask to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %vc_hi_font_mask, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 256, i16 %23)
  %cmp = icmp eq i16 %23, 256
  %count.off121 = add i32 %count, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %count.off121)
  %24 = icmp ult i32 %count.off121, 3
  br i1 %cmp, label %while.cond38.preheader, label %while.cond52.preheader

while.cond52.preheader:                           ; preds = %if.else34
  br i1 %24, label %while.cond52.preheader.if.end71_crit_edge, label %while.cond52.preheader.while.body55_crit_edge

while.cond52.preheader.while.body55_crit_edge:    ; preds = %while.cond52.preheader
  br label %while.body55

while.cond52.preheader.if.end71_crit_edge:        ; preds = %while.cond52.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end71

while.cond38.preheader:                           ; preds = %if.else34
  br i1 %24, label %while.cond38.preheader.if.end71_crit_edge, label %while.cond38.preheader.while.body41_crit_edge

while.cond38.preheader.while.body41_crit_edge:    ; preds = %while.cond38.preheader
  br label %while.body41

while.cond38.preheader.if.end71_crit_edge:        ; preds = %while.cond38.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end71

while.body41:                                     ; preds = %while.body41.while.body41_crit_edge, %while.cond38.preheader.while.body41_crit_edge
  %cnt.1117 = phi i32 [ %dec39, %while.body41.while.body41_crit_edge ], [ %div, %while.cond38.preheader.while.body41_crit_edge ]
  %q.1116 = phi ptr [ %incdec.ptr49, %while.body41.while.body41_crit_edge ], [ %p.0.i, %while.cond38.preheader.while.body41_crit_edge ]
  %dec39 = add i32 %cnt.1117, -1
  %25 = ptrtoint ptr %q.1116 to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %q.1116, align 2
  %and = and i16 %26, 4607
  %and44 = lshr i16 %26, 4
  %27 = and i16 %and44, 3584
  %or = or i16 %27, %and
  %and46 = shl i16 %26, 4
  %shl = and i16 %and46, -8192
  %or47 = or i16 %or, %shl
  store i16 %or47, ptr %q.1116, align 2
  %incdec.ptr49 = getelementptr i16, ptr %q.1116, i32 1
  %tobool40.not = icmp eq i32 %dec39, 0
  br i1 %tobool40.not, label %while.body41.if.end71_crit_edge, label %while.body41.while.body41_crit_edge

while.body41.while.body41_crit_edge:              ; preds = %while.body41
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body41

while.body41.if.end71_crit_edge:                  ; preds = %while.body41
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end71

while.body55:                                     ; preds = %while.body55.while.body55_crit_edge, %while.cond52.preheader.while.body55_crit_edge
  %cnt.2114 = phi i32 [ %dec53, %while.body55.while.body55_crit_edge ], [ %div, %while.cond52.preheader.while.body55_crit_edge ]
  %q.2113 = phi ptr [ %incdec.ptr67, %while.body55.while.body55_crit_edge ], [ %p.0.i, %while.cond52.preheader.while.body55_crit_edge ]
  %dec53 = add i32 %cnt.2114, -1
  %28 = ptrtoint ptr %q.2113 to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %q.2113, align 2
  %and57 = and i16 %29, -30465
  %and59 = lshr i16 %29, 4
  %30 = and i16 %and59, 1792
  %or61 = or i16 %30, %and57
  %and63 = shl i16 %29, 4
  %shl64 = and i16 %and63, 28672
  %or65 = or i16 %or61, %shl64
  store i16 %or65, ptr %q.2113, align 2
  %incdec.ptr67 = getelementptr i16, ptr %q.2113, i32 1
  %tobool54.not = icmp eq i32 %dec53, 0
  br i1 %tobool54.not, label %while.body55.if.end71_crit_edge, label %while.body55.while.body55_crit_edge

while.body55.while.body55_crit_edge:              ; preds = %while.body55
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body55

while.body55.if.end71_crit_edge:                  ; preds = %while.body55
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end71

if.end71:                                         ; preds = %while.body55.if.end71_crit_edge, %while.body41.if.end71_crit_edge, %while.cond38.preheader.if.end71_crit_edge, %while.cond52.preheader.if.end71_crit_edge, %while.body.if.end71_crit_edge, %while.cond.preheader.if.end71_crit_edge, %if.then27
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %31 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool.not.i.i = icmp eq i32 %31, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %if.end71.con_is_visible.exit.i_crit_edge

if.end71.con_is_visible.exit.i_crit_edge:         ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

land.lhs.true.i.i:                                ; preds = %if.end71
  %call1.i.i = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool2.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool2.not.i.i, label %land.rhs.i.i, label %land.lhs.true.i.i.con_is_visible.exit.i_crit_edge

land.lhs.true.i.i.con_is_visible.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

land.rhs.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %32 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool3.not.i.i = icmp eq i32 %32, 0
  br i1 %tobool3.not.i.i, label %do.end.i.i, label %land.rhs.i.i.con_is_visible.exit.i_crit_edge, !prof !365

land.rhs.i.i.con_is_visible.exit.i_crit_edge:     ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4012, i32 noundef 9, ptr noundef null) #21
  br label %con_is_visible.exit.i

con_is_visible.exit.i:                            ; preds = %do.end.i.i, %land.rhs.i.i.con_is_visible.exit.i_crit_edge, %land.lhs.true.i.i.con_is_visible.exit.i_crit_edge, %if.end71.con_is_visible.exit.i_crit_edge
  %vc_display_fg.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 47
  %33 = ptrtoint ptr %vc_display_fg.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %vc_display_fg.i.i, align 4
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %34, align 4
  %cmp.i.i = icmp eq ptr %36, %vc
  br i1 %cmp.i.i, label %con_should_update.exit, label %con_is_visible.exit.i.if.end74_crit_edge

con_is_visible.exit.i.if.end74_crit_edge:         ; preds = %con_is_visible.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end74

con_should_update.exit:                           ; preds = %con_is_visible.exit.i
  %37 = load i32, ptr @console_blanked, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %tobool.not.i = icmp eq i32 %37, 0
  br i1 %tobool.not.i, label %if.then73, label %con_should_update.exit.if.end74_crit_edge

con_should_update.exit.if.end74_crit_edge:        ; preds = %con_should_update.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end74

if.then73:                                        ; preds = %con_should_update.exit
  call void @__sanitizer_cov_trace_pc() #23
  %38 = ptrtoint ptr %p.0.i to i32
  tail call fastcc void @do_update_region(ptr noundef %vc, i32 noundef %38, i32 noundef %div)
  br label %if.end74

if.end74:                                         ; preds = %if.then73, %con_should_update.exit.if.end74_crit_edge, %con_is_visible.exit.i.if.end74_crit_edge
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param.i) #21
  %39 = getelementptr inbounds %struct.vt_notifier_param, ptr %param.i, i32 0, i32 1
  %40 = ptrtoint ptr %param.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %vc, ptr %param.i, align 4
  %41 = ptrtoint ptr %39 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 0, ptr %39, align 4
  %call.i109 = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 4, ptr noundef nonnull %param.i) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param.i) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @complement_pos(ptr noundef %vc, i32 noundef %offset) local_unnamed_addr #0 align 64 {
entry:
  %param.i114 = alloca %struct.vt_notifier_param, align 4
  %param.i = alloca %struct.vt_notifier_param, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %0 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.rhs, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %land.lhs.true
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %1 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool3.not = icmp eq i32 %1, 0
  br i1 %tobool3.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !365

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 811, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %2 = load i32, ptr @complement_pos.old_offset, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %2)
  %cmp25 = icmp sgt i32 %2, -1
  br i1 %cmp25, label %land.lhs.true26, label %if.end.if.end35_crit_edge

if.end.if.end35_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

land.lhs.true26:                                  ; preds = %if.end
  %vc_screenbuf_size = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 16
  %3 = ptrtoint ptr %vc_screenbuf_size to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %vc_screenbuf_size, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %4)
  %cmp27 = icmp ult i32 %2, %4
  br i1 %cmp27, label %if.then28, label %land.lhs.true26.if.end35_crit_edge

land.lhs.true26.if.end35_crit_edge:               ; preds = %land.lhs.true26
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

if.then28:                                        ; preds = %land.lhs.true26
  %5 = load i16, ptr @complement_pos.old, align 2
  %vc_sw.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %6 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %vc_sw.i, align 4
  %con_screen_pos.i = getelementptr inbounds %struct.consw, ptr %7, i32 0, i32 21
  %8 = ptrtoint ptr %con_screen_pos.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %con_screen_pos.i, align 4
  %tobool1.not.i = icmp eq ptr %9, null
  br i1 %tobool1.not.i, label %if.then2.i, label %if.else4.i

if.then2.i:                                       ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #23
  %vc_visible_origin.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 11
  %10 = ptrtoint ptr %vc_visible_origin.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %vc_visible_origin.i, align 4
  %add3.i = add i32 %11, %2
  %12 = inttoptr i32 %add3.i to ptr
  br label %screenpos.exit

if.else4.i:                                       ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #23
  %call.i = tail call ptr %9(ptr noundef %vc, i32 noundef %2) #21
  br label %screenpos.exit

screenpos.exit:                                   ; preds = %if.else4.i, %if.then2.i
  %p.0.i = phi ptr [ %call.i, %if.else4.i ], [ %12, %if.then2.i ]
  %13 = ptrtoint ptr %p.0.i to i32
  call void @__asan_store2_noabort(i32 %13)
  store i16 %5, ptr %p.0.i, align 2
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %14 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.not.i.i = icmp eq i32 %14, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %screenpos.exit.con_is_visible.exit.i_crit_edge

screenpos.exit.con_is_visible.exit.i_crit_edge:   ; preds = %screenpos.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

land.lhs.true.i.i:                                ; preds = %screenpos.exit
  %call1.i.i = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool2.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool2.not.i.i, label %land.rhs.i.i, label %land.lhs.true.i.i.con_is_visible.exit.i_crit_edge

land.lhs.true.i.i.con_is_visible.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

land.rhs.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %15 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool3.not.i.i = icmp eq i32 %15, 0
  br i1 %tobool3.not.i.i, label %do.end.i.i, label %land.rhs.i.i.con_is_visible.exit.i_crit_edge, !prof !365

land.rhs.i.i.con_is_visible.exit.i_crit_edge:     ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4012, i32 noundef 9, ptr noundef null) #21
  br label %con_is_visible.exit.i

con_is_visible.exit.i:                            ; preds = %do.end.i.i, %land.rhs.i.i.con_is_visible.exit.i_crit_edge, %land.lhs.true.i.i.con_is_visible.exit.i_crit_edge, %screenpos.exit.con_is_visible.exit.i_crit_edge
  %vc_display_fg.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 47
  %16 = ptrtoint ptr %vc_display_fg.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %vc_display_fg.i.i, align 4
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %17, align 4
  %cmp.i.i = icmp eq ptr %19, %vc
  br i1 %cmp.i.i, label %con_should_update.exit, label %con_is_visible.exit.i.if.end34_crit_edge

con_is_visible.exit.i.if.end34_crit_edge:         ; preds = %con_is_visible.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end34

con_should_update.exit:                           ; preds = %con_is_visible.exit.i
  %20 = load i32, ptr @console_blanked, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.not.i = icmp eq i32 %20, 0
  br i1 %tobool.not.i, label %if.then31, label %con_should_update.exit.if.end34_crit_edge

con_should_update.exit.if.end34_crit_edge:        ; preds = %con_should_update.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end34

if.then31:                                        ; preds = %con_should_update.exit
  call void @__sanitizer_cov_trace_pc() #23
  %21 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %vc_sw.i, align 4
  %con_putc = getelementptr inbounds %struct.consw, ptr %22, i32 0, i32 5
  %23 = ptrtoint ptr %con_putc to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %con_putc, align 4
  %25 = load i16, ptr @complement_pos.old, align 2
  %conv = zext i16 %25 to i32
  %26 = load i16, ptr @complement_pos.oldy, align 2
  %conv32 = zext i16 %26 to i32
  %27 = load i16, ptr @complement_pos.oldx, align 2
  %conv33 = zext i16 %27 to i32
  tail call void %24(ptr noundef %vc, i32 noundef %conv, i32 noundef %conv32, i32 noundef %conv33) #21
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %con_should_update.exit.if.end34_crit_edge, %con_is_visible.exit.i.if.end34_crit_edge
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param.i) #21
  %28 = getelementptr inbounds %struct.vt_notifier_param, ptr %param.i, i32 0, i32 1
  %29 = ptrtoint ptr %param.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %vc, ptr %param.i, align 4
  %30 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 0, ptr %28, align 4
  %call.i89 = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 4, ptr noundef nonnull %param.i) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param.i) #21
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %land.lhs.true26.if.end35_crit_edge, %if.end.if.end35_crit_edge
  store i32 %offset, ptr @complement_pos.old_offset, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %offset)
  %cmp39 = icmp sgt i32 %offset, -1
  br i1 %cmp39, label %land.lhs.true41, label %if.end35.if.end62_crit_edge

if.end35.if.end62_crit_edge:                      ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end62

land.lhs.true41:                                  ; preds = %if.end35
  %vc_screenbuf_size42 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 16
  %31 = ptrtoint ptr %vc_screenbuf_size42 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %vc_screenbuf_size42, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %32, i32 %offset)
  %cmp43 = icmp ugt i32 %32, %offset
  br i1 %cmp43, label %if.then45, label %land.lhs.true41.if.end62_crit_edge

land.lhs.true41.if.end62_crit_edge:               ; preds = %land.lhs.true41
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end62

if.then45:                                        ; preds = %land.lhs.true41
  %vc_sw.i90 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %33 = ptrtoint ptr %vc_sw.i90 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %vc_sw.i90, align 4
  %con_screen_pos.i91 = getelementptr inbounds %struct.consw, ptr %34, i32 0, i32 21
  %35 = ptrtoint ptr %con_screen_pos.i91 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %con_screen_pos.i91, align 4
  %tobool1.not.i92 = icmp eq ptr %36, null
  br i1 %tobool1.not.i92, label %if.then2.i95, label %if.else4.i97

if.then2.i95:                                     ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #23
  %vc_visible_origin.i93 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 11
  %37 = ptrtoint ptr %vc_visible_origin.i93 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %vc_visible_origin.i93, align 4
  %add3.i94 = add i32 %38, %offset
  %39 = inttoptr i32 %add3.i94 to ptr
  br label %screenpos.exit99

if.else4.i97:                                     ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #23
  %call.i96 = call ptr %36(ptr noundef %vc, i32 noundef %offset) #21
  br label %screenpos.exit99

screenpos.exit99:                                 ; preds = %if.else4.i97, %if.then2.i95
  %p.0.i98 = phi ptr [ %call.i96, %if.else4.i97 ], [ %39, %if.then2.i95 ]
  %40 = ptrtoint ptr %p.0.i98 to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %p.0.i98, align 2
  store i16 %41, ptr @complement_pos.old, align 2
  %vc_complement_mask = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 24
  %42 = ptrtoint ptr %vc_complement_mask to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %vc_complement_mask, align 4
  %xor86 = xor i16 %43, %41
  store i16 %xor86, ptr %p.0.i98, align 2
  %call.i.i.i.i100 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %44 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool.not.i.i101 = icmp eq i32 %44, 0
  br i1 %tobool.not.i.i101, label %land.lhs.true.i.i104, label %screenpos.exit99.con_is_visible.exit.i110_crit_edge

screenpos.exit99.con_is_visible.exit.i110_crit_edge: ; preds = %screenpos.exit99
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i110

land.lhs.true.i.i104:                             ; preds = %screenpos.exit99
  %call1.i.i102 = call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i102)
  %tobool2.not.i.i103 = icmp eq i32 %call1.i.i102, 0
  br i1 %tobool2.not.i.i103, label %land.rhs.i.i106, label %land.lhs.true.i.i104.con_is_visible.exit.i110_crit_edge

land.lhs.true.i.i104.con_is_visible.exit.i110_crit_edge: ; preds = %land.lhs.true.i.i104
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i110

land.rhs.i.i106:                                  ; preds = %land.lhs.true.i.i104
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %45 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool3.not.i.i105 = icmp eq i32 %45, 0
  br i1 %tobool3.not.i.i105, label %do.end.i.i107, label %land.rhs.i.i106.con_is_visible.exit.i110_crit_edge, !prof !365

land.rhs.i.i106.con_is_visible.exit.i110_crit_edge: ; preds = %land.rhs.i.i106
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i110

do.end.i.i107:                                    ; preds = %land.rhs.i.i106
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4012, i32 noundef 9, ptr noundef null) #21
  br label %con_is_visible.exit.i110

con_is_visible.exit.i110:                         ; preds = %do.end.i.i107, %land.rhs.i.i106.con_is_visible.exit.i110_crit_edge, %land.lhs.true.i.i104.con_is_visible.exit.i110_crit_edge, %screenpos.exit99.con_is_visible.exit.i110_crit_edge
  %vc_display_fg.i.i108 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 47
  %46 = ptrtoint ptr %vc_display_fg.i.i108 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %vc_display_fg.i.i108, align 4
  %48 = ptrtoint ptr %47 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %47, align 4
  %cmp.i.i109 = icmp eq ptr %49, %vc
  br i1 %cmp.i.i109, label %con_should_update.exit113, label %con_is_visible.exit.i110.if.end61_crit_edge

con_is_visible.exit.i110.if.end61_crit_edge:      ; preds = %con_is_visible.exit.i110
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end61

con_should_update.exit113:                        ; preds = %con_is_visible.exit.i110
  %50 = load i32, ptr @console_blanked, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %50)
  %tobool.not.i111 = icmp eq i32 %50, 0
  br i1 %tobool.not.i111, label %if.then51, label %con_should_update.exit113.if.end61_crit_edge

con_should_update.exit113.if.end61_crit_edge:     ; preds = %con_should_update.exit113
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end61

if.then51:                                        ; preds = %con_should_update.exit113
  call void @__sanitizer_cov_trace_pc() #23
  %shr116 = lshr i32 %offset, 1
  %vc_cols = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %51 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %vc_cols, align 4
  %.frozen = freeze i32 %52
  %div = udiv i32 %shr116, %.frozen
  %53 = mul i32 %div, %.frozen
  %rem.decomposed = sub i32 %shr116, %53
  %conv52 = trunc i32 %rem.decomposed to i16
  store i16 %conv52, ptr @complement_pos.oldx, align 2
  %conv55 = trunc i32 %div to i16
  store i16 %conv55, ptr @complement_pos.oldy, align 2
  %54 = ptrtoint ptr %vc_sw.i90 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %vc_sw.i90, align 4
  %con_putc57 = getelementptr inbounds %struct.consw, ptr %55, i32 0, i32 5
  %56 = ptrtoint ptr %con_putc57 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %con_putc57, align 4
  %conv58 = zext i16 %xor86 to i32
  %conv59 = and i32 %div, 65535
  %conv60 = and i32 %rem.decomposed, 65535
  call void %57(ptr noundef %vc, i32 noundef %conv58, i32 noundef %conv59, i32 noundef %conv60) #21
  br label %if.end61

if.end61:                                         ; preds = %if.then51, %con_should_update.exit113.if.end61_crit_edge, %con_is_visible.exit.i110.if.end61_crit_edge
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param.i114) #21
  %58 = getelementptr inbounds %struct.vt_notifier_param, ptr %param.i114, i32 0, i32 1
  %59 = ptrtoint ptr %param.i114 to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr %vc, ptr %param.i114, align 4
  %60 = ptrtoint ptr %58 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 0, ptr %58, align 4
  %call.i115 = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 4, ptr noundef nonnull %param.i114) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param.i114) #21
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %land.lhs.true41.if.end62_crit_edge, %if.end35.if.end62_crit_edge
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @clear_buffer_attributes(ptr nocapture noundef readonly %vc) local_unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %vc_screenbuf_size = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 16
  %0 = ptrtoint ptr %vc_screenbuf_size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vc_screenbuf_size, align 4
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 27
  %2 = ptrtoint ptr %vc_hi_font_mask to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %vc_hi_font_mask, align 4
  %4 = or i16 %3, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %1)
  %cmp16.not = icmp ult i32 %1, 2
  br i1 %cmp16.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %div14 = lshr i32 %1, 1
  %vc_origin = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 9
  %5 = ptrtoint ptr %vc_origin to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %vc_origin, align 4
  %7 = inttoptr i32 %6 to ptr
  %vc_video_erase_char = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 29
  %neg = xor i16 %4, -1
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %count.018 = phi i32 [ %div14, %for.body.lr.ph ], [ %dec, %for.body.for.body_crit_edge ]
  %p.017 = phi ptr [ %7, %for.body.lr.ph ], [ %incdec.ptr, %for.body.for.body_crit_edge ]
  %8 = ptrtoint ptr %p.017 to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %p.017, align 2
  %and15 = and i16 %9, %4
  %10 = ptrtoint ptr %vc_video_erase_char to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %vc_video_erase_char, align 4
  %and4 = and i16 %11, %neg
  %or5 = or i16 %and4, %and15
  store i16 %or5, ptr %p.017, align 2
  %dec = add nsw i32 %count.018, -1
  %incdec.ptr = getelementptr i16, ptr %p.017, i32 1
  %cmp = icmp ugt i32 %count.018, 1
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @redraw_screen(ptr noundef %vc, i32 noundef %is_switch) #0 align 64 {
entry:
  %param.i = alloca %struct.vt_notifier_param, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %0 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.rhs, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %land.lhs.true
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %1 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool3.not = icmp eq i32 %1, 0
  br i1 %tobool3.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !365

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 988, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool24.not = icmp eq ptr %vc, null
  br i1 %tobool24.not, label %if.end.cleanup64_crit_edge, label %if.end26

if.end.cleanup64_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup64

if.end26:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %is_switch)
  %tobool27.not = icmp eq i32 %is_switch, 0
  br i1 %tobool27.not, label %if.end40.thread, label %if.then28

if.then28:                                        ; preds = %if.end26
  %2 = load i32, ptr @fg_console, align 4
  %arrayidx = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %2
  %3 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %arrayidx, align 4
  %cmp = icmp eq ptr %4, %vc
  br i1 %cmp, label %if.then28.cleanup64_crit_edge, label %if.end30

if.then28.cleanup64_crit_edge:                    ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup64

if.end30:                                         ; preds = %if.then28
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %5 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not.i = icmp eq i32 %5, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.end30.con_is_visible.exit_crit_edge

if.end30.con_is_visible.exit_crit_edge:           ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit

land.lhs.true.i:                                  ; preds = %if.end30
  %call1.i = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %land.rhs.i, label %land.lhs.true.i.con_is_visible.exit_crit_edge

land.lhs.true.i.con_is_visible.exit_crit_edge:    ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit

land.rhs.i:                                       ; preds = %land.lhs.true.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %6 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool3.not.i = icmp eq i32 %6, 0
  br i1 %tobool3.not.i, label %do.end.i, label %land.rhs.i.con_is_visible.exit_crit_edge, !prof !365

land.rhs.i.con_is_visible.exit_crit_edge:         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4012, i32 noundef 9, ptr noundef null) #21
  br label %con_is_visible.exit

con_is_visible.exit:                              ; preds = %do.end.i, %land.rhs.i.con_is_visible.exit_crit_edge, %land.lhs.true.i.con_is_visible.exit_crit_edge, %if.end30.con_is_visible.exit_crit_edge
  %vc_display_fg.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 47
  %7 = ptrtoint ptr %vc_display_fg.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %vc_display_fg.i, align 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 4
  %cmp.i.not = icmp eq ptr %10, %vc
  store ptr %vc, ptr %8, align 4
  %vc_num = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 3
  %11 = ptrtoint ptr %vc_num to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %vc_num, align 4
  %conv = zext i16 %12 to i32
  store i32 %conv, ptr @fg_console, align 4
  tail call fastcc void @hide_cursor(ptr noundef %4)
  %call.i.i.i97 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %13 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not.i98 = icmp eq i32 %13, 0
  br i1 %tobool.not.i98, label %land.lhs.true.i101, label %con_is_visible.exit.con_is_visible.exit107_crit_edge

con_is_visible.exit.con_is_visible.exit107_crit_edge: ; preds = %con_is_visible.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit107

land.lhs.true.i101:                               ; preds = %con_is_visible.exit
  %call1.i99 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i99)
  %tobool2.not.i100 = icmp eq i32 %call1.i99, 0
  br i1 %tobool2.not.i100, label %land.rhs.i103, label %land.lhs.true.i101.con_is_visible.exit107_crit_edge

land.lhs.true.i101.con_is_visible.exit107_crit_edge: ; preds = %land.lhs.true.i101
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit107

land.rhs.i103:                                    ; preds = %land.lhs.true.i101
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %14 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool3.not.i102 = icmp eq i32 %14, 0
  br i1 %tobool3.not.i102, label %do.end.i104, label %land.rhs.i103.con_is_visible.exit107_crit_edge, !prof !365

land.rhs.i103.con_is_visible.exit107_crit_edge:   ; preds = %land.rhs.i103
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit107

do.end.i104:                                      ; preds = %land.rhs.i103
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4012, i32 noundef 9, ptr noundef null) #21
  br label %con_is_visible.exit107

con_is_visible.exit107:                           ; preds = %do.end.i104, %land.rhs.i103.con_is_visible.exit107_crit_edge, %land.lhs.true.i101.con_is_visible.exit107_crit_edge, %con_is_visible.exit.con_is_visible.exit107_crit_edge
  %vc_display_fg.i105 = getelementptr inbounds %struct.vc_data, ptr %4, i32 0, i32 47
  %15 = ptrtoint ptr %vc_display_fg.i105 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %vc_display_fg.i105, align 4
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %16, align 4
  %cmp.i106 = icmp eq ptr %18, %4
  br i1 %cmp.i106, label %con_is_visible.exit107.if.end36_crit_edge, label %if.then35

con_is_visible.exit107.if.end36_crit_edge:        ; preds = %con_is_visible.exit107
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end36

if.then35:                                        ; preds = %con_is_visible.exit107
  %call.i.i.i108 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %19 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool.not.i109 = icmp eq i32 %19, 0
  br i1 %tobool.not.i109, label %land.lhs.true.i112, label %if.then35.if.end.i_crit_edge

if.then35.if.end.i_crit_edge:                     ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.lhs.true.i112:                               ; preds = %if.then35
  %call1.i110 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i110)
  %tobool2.not.i111 = icmp eq i32 %call1.i110, 0
  br i1 %tobool2.not.i111, label %land.rhs.i114, label %land.lhs.true.i112.if.end.i_crit_edge

land.lhs.true.i112.if.end.i_crit_edge:            ; preds = %land.lhs.true.i112
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i114:                                    ; preds = %land.lhs.true.i112
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %20 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool3.not.i113 = icmp eq i32 %20, 0
  br i1 %tobool3.not.i113, label %do.end.i115, label %land.rhs.i114.if.end.i_crit_edge, !prof !365

land.rhs.i114.if.end.i_crit_edge:                 ; preds = %land.rhs.i114
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i115:                                      ; preds = %land.rhs.i114
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 941, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i115, %land.rhs.i114.if.end.i_crit_edge, %land.lhs.true.i112.if.end.i_crit_edge, %if.then35.if.end.i_crit_edge
  %vc_sw.i = getelementptr inbounds %struct.vc_data, ptr %4, i32 0, i32 14
  %21 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %vc_sw.i, align 4
  %con_save_screen.i = getelementptr inbounds %struct.consw, ptr %22, i32 0, i32 18
  %23 = ptrtoint ptr %con_save_screen.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %con_save_screen.i, align 4
  %tobool24.not.i = icmp eq ptr %24, null
  br i1 %tobool24.not.i, label %if.end.i.save_screen.exit_crit_edge, label %if.then25.i

if.end.i.save_screen.exit_crit_edge:              ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %save_screen.exit

if.then25.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %24(ptr noundef %4) #21
  br label %save_screen.exit

save_screen.exit:                                 ; preds = %if.then25.i, %if.end.i.save_screen.exit_crit_edge
  tail call fastcc void @set_origin(ptr noundef %4)
  br label %if.end36

if.end36:                                         ; preds = %save_screen.exit, %con_is_visible.exit107.if.end36_crit_edge
  %25 = load ptr, ptr @tty0dev, align 4
  %tobool37.not = icmp eq ptr %25, null
  br i1 %tobool37.not, label %if.end36.if.end40_crit_edge, label %if.then38

if.end36.if.end40_crit_edge:                      ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end40

if.then38:                                        ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @sysfs_notify(ptr noundef nonnull %25, ptr noundef null, ptr noundef nonnull @.str.1) #21
  br label %if.end40

if.end40.thread:                                  ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @hide_cursor(ptr noundef nonnull %vc)
  br label %if.then42

if.end40:                                         ; preds = %if.then38, %if.end36.if.end40_crit_edge
  br i1 %cmp.i.not, label %if.end40.if.end60_crit_edge, label %if.end40.if.then42_crit_edge

if.end40.if.then42_crit_edge:                     ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then42

if.end40.if.end60_crit_edge:                      ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end60

if.then42:                                        ; preds = %if.end40.if.then42_crit_edge, %if.end40.thread
  %vc_can_do_color = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %26 = ptrtoint ptr %vc_can_do_color to i32
  call void @__asan_load2_noabort(i32 %26)
  %bf.load = load i16, ptr %vc_can_do_color, align 4
  tail call fastcc void @set_origin(ptr noundef nonnull %vc)
  %vc_sw = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %27 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %vc_sw, align 4
  %con_switch = getelementptr inbounds %struct.consw, ptr %28, i32 0, i32 9
  %29 = ptrtoint ptr %con_switch to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %con_switch, align 4
  %call43 = tail call i32 %30(ptr noundef nonnull %vc) #21
  %call.i.i.i116 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %31 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool.not.i117 = icmp eq i32 %31, 0
  br i1 %tobool.not.i117, label %land.lhs.true.i120, label %if.then42.if.end.i124_crit_edge

if.then42.if.end.i124_crit_edge:                  ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i124

land.lhs.true.i120:                               ; preds = %if.then42
  %call1.i118 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i118)
  %tobool2.not.i119 = icmp eq i32 %call1.i118, 0
  br i1 %tobool2.not.i119, label %land.rhs.i122, label %land.lhs.true.i120.if.end.i124_crit_edge

land.lhs.true.i120.if.end.i124_crit_edge:         ; preds = %land.lhs.true.i120
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i124

land.rhs.i122:                                    ; preds = %land.lhs.true.i120
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %32 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool3.not.i121 = icmp eq i32 %32, 0
  br i1 %tobool3.not.i121, label %do.end.i123, label %land.rhs.i122.if.end.i124_crit_edge, !prof !365

land.rhs.i122.if.end.i124_crit_edge:              ; preds = %land.rhs.i122
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i124

do.end.i123:                                      ; preds = %land.rhs.i122
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4505, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i124

if.end.i124:                                      ; preds = %do.end.i123, %land.rhs.i122.if.end.i124_crit_edge, %land.lhs.true.i120.if.end.i124_crit_edge, %if.then42.if.end.i124_crit_edge
  %vc_mode.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 17
  %33 = ptrtoint ptr %vc_mode.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %vc_mode.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %34)
  %cmp.not.i = icmp eq i8 %34, 1
  br i1 %cmp.not.i, label %if.end.i124.set_palette.exit_crit_edge, label %land.lhs.true25.i

if.end.i124.set_palette.exit_crit_edge:           ; preds = %if.end.i124
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_palette.exit

land.lhs.true25.i:                                ; preds = %if.end.i124
  %35 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %vc_sw, align 4
  %con_set_palette.i = getelementptr inbounds %struct.consw, ptr %36, i32 0, i32 15
  %37 = ptrtoint ptr %con_set_palette.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %con_set_palette.i, align 4
  %tobool26.not.i = icmp eq ptr %38, null
  br i1 %tobool26.not.i, label %land.lhs.true25.i.set_palette.exit_crit_edge, label %if.then27.i

land.lhs.true25.i.set_palette.exit_crit_edge:     ; preds = %land.lhs.true25.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_palette.exit

if.then27.i:                                      ; preds = %land.lhs.true25.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %38(ptr noundef nonnull %vc, ptr noundef nonnull @color_table) #21
  br label %set_palette.exit

set_palette.exit:                                 ; preds = %if.then27.i, %land.lhs.true25.i.set_palette.exit_crit_edge, %if.end.i124.set_palette.exit_crit_edge
  %39 = ptrtoint ptr %vc_can_do_color to i32
  call void @__asan_load2_noabort(i32 %39)
  %bf.load45 = load i16, ptr %vc_can_do_color, align 4
  %bf.lshr94 = xor i16 %bf.load45, %bf.load
  %40 = and i16 %bf.lshr94, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %40)
  %cmp49.not = icmp eq i16 %40, 0
  br i1 %cmp49.not, label %set_palette.exit.if.end52_crit_edge, label %if.then51

set_palette.exit.if.end52_crit_edge:              ; preds = %set_palette.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end52

if.then51:                                        ; preds = %set_palette.exit
  tail call fastcc void @update_attr(ptr noundef nonnull %vc)
  %vc_screenbuf_size.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 16
  %41 = ptrtoint ptr %vc_screenbuf_size.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %vc_screenbuf_size.i, align 4
  %vc_hi_font_mask.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 27
  %43 = ptrtoint ptr %vc_hi_font_mask.i to i32
  call void @__asan_load2_noabort(i32 %43)
  %44 = load i16, ptr %vc_hi_font_mask.i, align 4
  %45 = or i16 %44, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %42)
  %cmp16.not.i = icmp ult i32 %42, 2
  br i1 %cmp16.not.i, label %if.then51.if.end52_crit_edge, label %for.body.lr.ph.i

if.then51.if.end52_crit_edge:                     ; preds = %if.then51
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end52

for.body.lr.ph.i:                                 ; preds = %if.then51
  %div14.i = lshr i32 %42, 1
  %vc_origin.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 9
  %46 = ptrtoint ptr %vc_origin.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %vc_origin.i, align 4
  %48 = inttoptr i32 %47 to ptr
  %vc_video_erase_char.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 29
  %neg.i = xor i16 %45, -1
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %count.018.i = phi i32 [ %div14.i, %for.body.lr.ph.i ], [ %dec.i, %for.body.i.for.body.i_crit_edge ]
  %p.017.i = phi ptr [ %48, %for.body.lr.ph.i ], [ %incdec.ptr.i, %for.body.i.for.body.i_crit_edge ]
  %49 = ptrtoint ptr %p.017.i to i32
  call void @__asan_load2_noabort(i32 %49)
  %50 = load i16, ptr %p.017.i, align 2
  %and15.i = and i16 %50, %45
  %51 = ptrtoint ptr %vc_video_erase_char.i to i32
  call void @__asan_load2_noabort(i32 %51)
  %52 = load i16, ptr %vc_video_erase_char.i, align 4
  %and4.i = and i16 %52, %neg.i
  %or5.i = or i16 %and4.i, %and15.i
  store i16 %or5.i, ptr %p.017.i, align 2
  %dec.i = add nsw i32 %count.018.i, -1
  %incdec.ptr.i = getelementptr i16, ptr %p.017.i, i32 1
  %cmp.i126 = icmp ugt i32 %count.018.i, 1
  br i1 %cmp.i126, label %for.body.i.for.body.i_crit_edge, label %for.body.i.if.end52_crit_edge

for.body.i.if.end52_crit_edge:                    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end52

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

if.end52:                                         ; preds = %for.body.i.if.end52_crit_edge, %if.then51.if.end52_crit_edge, %set_palette.exit.if.end52_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call43)
  %tobool53.not = icmp eq i32 %call43, 0
  br i1 %tobool53.not, label %if.end52.if.end60_crit_edge, label %land.lhs.true54

if.end52.if.end60_crit_edge:                      ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end60

land.lhs.true54:                                  ; preds = %if.end52
  %53 = ptrtoint ptr %vc_mode.i to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %vc_mode.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %54)
  %cmp56.not = icmp eq i8 %54, 1
  br i1 %cmp56.not, label %land.lhs.true54.if.end60_crit_edge, label %if.then58

land.lhs.true54.if.end60_crit_edge:               ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end60

if.then58:                                        ; preds = %land.lhs.true54
  call void @__sanitizer_cov_trace_pc() #23
  %vc_origin = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 9
  %55 = ptrtoint ptr %vc_origin to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %vc_origin, align 4
  %vc_screenbuf_size = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 16
  %57 = ptrtoint ptr %vc_screenbuf_size to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %vc_screenbuf_size, align 4
  %div95 = lshr i32 %58, 1
  tail call fastcc void @do_update_region(ptr noundef nonnull %vc, i32 noundef %56, i32 noundef %div95)
  br label %if.end60

if.end60:                                         ; preds = %if.then58, %land.lhs.true54.if.end60_crit_edge, %if.end52.if.end60_crit_edge, %if.end40.if.end60_crit_edge
  %vc_num.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 3
  %59 = ptrtoint ptr %vc_num.i.i to i32
  call void @__asan_load2_noabort(i32 %59)
  %60 = load i16, ptr %vc_num.i.i, align 4
  %conv.i.i = zext i16 %60 to i32
  %61 = load i32, ptr @fg_console, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %61, i32 %conv.i.i)
  %cmp.i.i = icmp eq i32 %61, %conv.i.i
  br i1 %cmp.i.i, label %lor.lhs.false.i, label %if.end60.set_cursor.exit_crit_edge

if.end60.set_cursor.exit_crit_edge:               ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_cursor.exit

lor.lhs.false.i:                                  ; preds = %if.end60
  %62 = load i32, ptr @console_blanked, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %62)
  %tobool.not.i127 = icmp eq i32 %62, 0
  br i1 %tobool.not.i127, label %lor.lhs.false1.i, label %lor.lhs.false.i.set_cursor.exit_crit_edge

lor.lhs.false.i.set_cursor.exit_crit_edge:        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_cursor.exit

lor.lhs.false1.i:                                 ; preds = %lor.lhs.false.i
  %vc_mode.i128 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 17
  %63 = ptrtoint ptr %vc_mode.i128 to i32
  call void @__asan_load1_noabort(i32 %63)
  %64 = load i8, ptr %vc_mode.i128, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %64)
  %cmp.i129 = icmp eq i8 %64, 1
  br i1 %cmp.i129, label %lor.lhs.false1.i.set_cursor.exit_crit_edge, label %if.end.i131

lor.lhs.false1.i.set_cursor.exit_crit_edge:       ; preds = %lor.lhs.false1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_cursor.exit

if.end.i131:                                      ; preds = %lor.lhs.false1.i
  %vc_deccm.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %65 = ptrtoint ptr %vc_deccm.i to i32
  call void @__asan_load2_noabort(i32 %65)
  %bf.load.i = load i16, ptr %vc_deccm.i, align 4
  %66 = and i16 %bf.load.i, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %66)
  %tobool3.not.i130 = icmp eq i16 %66, 0
  br i1 %tobool3.not.i130, label %if.else.i, label %if.then4.i

if.then4.i:                                       ; preds = %if.end.i131
  %call5.i = tail call zeroext i1 @vc_is_sel(ptr noundef %vc) #21
  br i1 %call5.i, label %if.then6.i, label %if.then4.i.if.end7.i_crit_edge

if.then4.i.if.end7.i_crit_edge:                   ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7.i

if.then6.i:                                       ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @clear_selection() #21
  br label %if.end7.i

if.end7.i:                                        ; preds = %if.then6.i, %if.then4.i.if.end7.i_crit_edge
  tail call fastcc void @add_softcursor(ptr noundef %vc) #21
  %vc_cursor_type.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 23
  %67 = ptrtoint ptr %vc_cursor_type.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %vc_cursor_type.i, align 4
  %and.i = and i32 %68, 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i)
  %cmp8.not.i = icmp eq i32 %and.i, 1
  br i1 %cmp8.not.i, label %if.end7.i.set_cursor.exit_crit_edge, label %if.then10.i

if.end7.i.set_cursor.exit_crit_edge:              ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_cursor.exit

if.then10.i:                                      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  %vc_sw.i132 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %69 = ptrtoint ptr %vc_sw.i132 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %vc_sw.i132, align 4
  %con_cursor.i = getelementptr inbounds %struct.consw, ptr %70, i32 0, i32 7
  %71 = ptrtoint ptr %con_cursor.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %con_cursor.i, align 4
  tail call void %72(ptr noundef %vc, i32 noundef 1) #21
  br label %set_cursor.exit

if.else.i:                                        ; preds = %if.end.i131
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @hide_cursor(ptr noundef %vc) #21
  br label %set_cursor.exit

set_cursor.exit:                                  ; preds = %if.else.i, %if.then10.i, %if.end7.i.set_cursor.exit_crit_edge, %lor.lhs.false1.i.set_cursor.exit_crit_edge, %lor.lhs.false.i.set_cursor.exit_crit_edge, %if.end60.set_cursor.exit_crit_edge
  br i1 %tobool27.not, label %set_cursor.exit.cleanup64_crit_edge, label %if.then62

set_cursor.exit.cleanup64_crit_edge:              ; preds = %set_cursor.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup64

if.then62:                                        ; preds = %set_cursor.exit
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @vt_set_leds_compute_shiftstate() #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param.i) #21
  %73 = getelementptr inbounds %struct.vt_notifier_param, ptr %param.i, i32 0, i32 1
  %74 = ptrtoint ptr %param.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr %vc, ptr %param.i, align 4
  %75 = ptrtoint ptr %73 to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 0, ptr %73, align 4
  %call.i = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 4, ptr noundef nonnull %param.i) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param.i) #21
  br label %cleanup64

cleanup64:                                        ; preds = %if.then62, %set_cursor.exit.cleanup64_crit_edge, %if.then28.cleanup64_crit_edge, %if.end.cleanup64_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @con_is_visible(ptr noundef readonly %vc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %0 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.rhs, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %land.lhs.true
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %1 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool3.not = icmp eq i32 %1, 0
  br i1 %tobool3.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !365

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4012, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %vc_display_fg = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 47
  %2 = ptrtoint ptr %vc_display_fg to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vc_display_fg, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %cmp = icmp eq ptr %5, %vc
  ret i1 %cmp
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @set_origin(ptr noundef %vc) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %0 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.rhs, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %land.lhs.true
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %1 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool3.not = icmp eq i32 %1, 0
  br i1 %tobool3.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !365

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 927, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %2 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.end.con_is_visible.exit_crit_edge

if.end.con_is_visible.exit_crit_edge:             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %land.rhs.i, label %land.lhs.true.i.con_is_visible.exit_crit_edge

land.lhs.true.i.con_is_visible.exit_crit_edge:    ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit

land.rhs.i:                                       ; preds = %land.lhs.true.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %3 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool3.not.i = icmp eq i32 %3, 0
  br i1 %tobool3.not.i, label %do.end.i, label %land.rhs.i.con_is_visible.exit_crit_edge, !prof !365

land.rhs.i.con_is_visible.exit_crit_edge:         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4012, i32 noundef 9, ptr noundef null) #21
  br label %con_is_visible.exit

con_is_visible.exit:                              ; preds = %do.end.i, %land.rhs.i.con_is_visible.exit_crit_edge, %land.lhs.true.i.con_is_visible.exit_crit_edge, %if.end.con_is_visible.exit_crit_edge
  %vc_display_fg.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 47
  %4 = ptrtoint ptr %vc_display_fg.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %vc_display_fg.i, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %cmp.i = icmp eq ptr %7, %vc
  br i1 %cmp.i, label %lor.lhs.false, label %con_is_visible.exit.if.then31_crit_edge

con_is_visible.exit.if.then31_crit_edge:          ; preds = %con_is_visible.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then31

lor.lhs.false:                                    ; preds = %con_is_visible.exit
  %vc_sw = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %8 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %vc_sw, align 4
  %con_set_origin = getelementptr inbounds %struct.consw, ptr %9, i32 0, i32 17
  %10 = ptrtoint ptr %con_set_origin to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %con_set_origin, align 4
  %tobool25.not = icmp eq ptr %11, null
  br i1 %tobool25.not, label %lor.lhs.false.if.then31_crit_edge, label %lor.lhs.false26

lor.lhs.false.if.then31_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then31

lor.lhs.false26:                                  ; preds = %lor.lhs.false
  %call29 = tail call i32 %11(ptr noundef %vc) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29)
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %lor.lhs.false26.if.then31_crit_edge, label %lor.lhs.false26.if.end32_crit_edge

lor.lhs.false26.if.end32_crit_edge:               ; preds = %lor.lhs.false26
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end32

lor.lhs.false26.if.then31_crit_edge:              ; preds = %lor.lhs.false26
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then31

if.then31:                                        ; preds = %lor.lhs.false26.if.then31_crit_edge, %lor.lhs.false.if.then31_crit_edge, %con_is_visible.exit.if.then31_crit_edge
  %vc_screenbuf = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 15
  %12 = ptrtoint ptr %vc_screenbuf to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %vc_screenbuf, align 4
  %14 = ptrtoint ptr %13 to i32
  %vc_origin = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 9
  %15 = ptrtoint ptr %vc_origin to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %vc_origin, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then31, %lor.lhs.false26.if.end32_crit_edge
  %vc_origin33 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 9
  %16 = ptrtoint ptr %vc_origin33 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %vc_origin33, align 4
  %vc_visible_origin = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 11
  %18 = ptrtoint ptr %vc_visible_origin to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %vc_visible_origin, align 4
  %vc_screenbuf_size = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 16
  %19 = ptrtoint ptr %vc_screenbuf_size to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %vc_screenbuf_size, align 4
  %add = add i32 %20, %17
  %vc_scr_end = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 10
  %21 = ptrtoint ptr %vc_scr_end to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %add, ptr %vc_scr_end, align 4
  %vc_size_row = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 6
  %22 = ptrtoint ptr %vc_size_row to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %vc_size_row, align 4
  %state = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %y = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %24 = ptrtoint ptr %y to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %y, align 4
  %mul = mul i32 %25, %23
  %add36 = add i32 %mul, %17
  %26 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %state, align 4
  %mul38 = shl i32 %27, 1
  %add39 = add i32 %add36, %mul38
  %vc_pos = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 26
  %28 = ptrtoint ptr %vc_pos to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %add39, ptr %vc_pos, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @sysfs_notify(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @set_palette(ptr noundef %vc) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %0 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.rhs, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %land.lhs.true
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %1 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool3.not = icmp eq i32 %1, 0
  br i1 %tobool3.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !365

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4505, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %vc_mode = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 17
  %2 = ptrtoint ptr %vc_mode to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %vc_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %3)
  %cmp.not = icmp eq i8 %3, 1
  br i1 %cmp.not, label %if.end.if.end30_crit_edge, label %land.lhs.true25

if.end.if.end30_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end30

land.lhs.true25:                                  ; preds = %if.end
  %vc_sw = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %4 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %vc_sw, align 4
  %con_set_palette = getelementptr inbounds %struct.consw, ptr %5, i32 0, i32 15
  %6 = ptrtoint ptr %con_set_palette to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %con_set_palette, align 4
  %tobool26.not = icmp eq ptr %7, null
  br i1 %tobool26.not, label %land.lhs.true25.if.end30_crit_edge, label %if.then27

land.lhs.true25.if.end30_crit_edge:               ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end30

if.then27:                                        ; preds = %land.lhs.true25
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %7(ptr noundef %vc, ptr noundef nonnull @color_table) #21
  br label %if.end30

if.end30:                                         ; preds = %if.then27, %land.lhs.true25.if.end30_crit_edge, %if.end.if.end30_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @update_attr(ptr noundef %vc) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %color = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 2
  %0 = ptrtoint ptr %color to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %color, align 4
  %intensity = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 5
  %2 = ptrtoint ptr %intensity to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %intensity, align 4
  %blink = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 8
  %4 = ptrtoint ptr %blink to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %blink, align 2, !range !368
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool = icmp ne i8 %5, 0
  %underline = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 7
  %6 = ptrtoint ptr %underline to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %underline, align 1, !range !368
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool4 = icmp ne i8 %7, 0
  %reverse = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 9
  %8 = ptrtoint ptr %reverse to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %reverse, align 1, !range !368
  %vc_decscnm = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %10 = ptrtoint ptr %vc_decscnm to i32
  call void @__asan_load2_noabort(i32 %10)
  %bf.load = load i16, ptr %vc_decscnm, align 4
  %bf.lshr = lshr i16 %bf.load, 13
  %bf.clear = and i16 %bf.lshr, 1
  %11 = zext i8 %9 to i16
  call void @__sanitizer_cov_trace_cmp2(i16 %bf.clear, i16 %11)
  %tobool7 = icmp ne i16 %bf.clear, %11
  %italic = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 6
  %12 = ptrtoint ptr %italic to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %italic, align 4, !range !368
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool9 = icmp ne i8 %13, 0
  %vc_sw.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %14 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %vc_sw.i, align 4
  %con_build_attr.i = getelementptr inbounds %struct.consw, ptr %15, i32 0, i32 19
  %16 = ptrtoint ptr %con_build_attr.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %con_build_attr.i, align 4
  %tobool.not.i = icmp eq ptr %17, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %call.i = tail call zeroext i8 %17(ptr noundef %vc, i8 noundef zeroext %1, i32 noundef %3, i1 noundef zeroext %tobool, i1 noundef zeroext %tobool4, i1 noundef zeroext %tobool7, i1 noundef zeroext %tobool9) #21
  br label %build_attr.exit

if.end.i:                                         ; preds = %entry
  %18 = and i16 %bf.load, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %18)
  %tobool10.not.i = icmp eq i16 %18, 0
  br i1 %tobool10.not.i, label %if.then11.i, label %if.end26.i

if.then11.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %shl.i = select i1 %tobool9, i32 2, i32 0
  %shl15.i = select i1 %tobool4, i32 4, i32 0
  %shl19.i = select i1 %tobool7, i32 8, i32 0
  %shl23.i = select i1 %tobool, i32 128, i32 0
  %or.i = or i32 %shl23.i, %3
  %or16.i = or i32 %or.i, %shl15.i
  %or20.i = or i32 %or16.i, %shl.i
  %or24.i = or i32 %or20.i, %shl19.i
  %conv25.i = trunc i32 %or24.i to i8
  br label %build_attr.exit

if.end26.i:                                       ; preds = %if.end.i
  br i1 %tobool9, label %if.then28.i, label %if.else.i

if.then28.i:                                      ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #23
  %19 = and i8 %1, -16
  %vc_itcolor.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 21
  %20 = ptrtoint ptr %vc_itcolor.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %vc_itcolor.i, align 4
  %or31113.i = or i8 %21, %19
  br label %if.end50.i

if.else.i:                                        ; preds = %if.end26.i
  br i1 %tobool4, label %if.then34.i, label %if.else40.i

if.then34.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  %22 = and i8 %1, -16
  %vc_ulcolor.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 20
  %23 = ptrtoint ptr %vc_ulcolor.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %vc_ulcolor.i, align 1
  %or38112.i = or i8 %24, %22
  br label %if.end50.i

if.else40.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.i = icmp eq i32 %3, 0
  br i1 %cmp.i, label %if.then42.i, label %if.else40.i.if.end50.i_crit_edge

if.else40.i.if.end50.i_crit_edge:                 ; preds = %if.else40.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end50.i

if.then42.i:                                      ; preds = %if.else40.i
  call void @__sanitizer_cov_trace_pc() #23
  %25 = and i8 %1, -16
  %vc_halfcolor.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 22
  %26 = ptrtoint ptr %vc_halfcolor.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %vc_halfcolor.i, align 1
  %or46111.i = or i8 %27, %25
  br label %if.end50.i

if.end50.i:                                       ; preds = %if.then42.i, %if.else40.i.if.end50.i_crit_edge, %if.then34.i, %if.then28.i
  %a.0.i = phi i8 [ %or31113.i, %if.then28.i ], [ %or38112.i, %if.then34.i ], [ %or46111.i, %if.then42.i ], [ %1, %if.else40.i.if.end50.i_crit_edge ]
  br i1 %tobool7, label %if.then52.i, label %if.end50.i.if.end62.i_crit_edge

if.end50.i.if.end62.i_crit_edge:                  ; preds = %if.end50.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end62.i

if.then52.i:                                      ; preds = %if.end50.i
  call void @__sanitizer_cov_trace_pc() #23
  %and54.i = and i8 %a.0.i, -120
  %or58.i = tail call i8 @llvm.fshl.i8(i8 %a.0.i, i8 %a.0.i, i8 4) #21
  %and59.i = and i8 %or58.i, 119
  %or60.i = or i8 %and59.i, %and54.i
  br label %if.end62.i

if.end62.i:                                       ; preds = %if.then52.i, %if.end50.i.if.end62.i_crit_edge
  %a.1.i = phi i8 [ %or60.i, %if.then52.i ], [ %a.0.i, %if.end50.i.if.end62.i_crit_edge ]
  %28 = xor i8 %a.1.i, -128
  %spec.select.i = select i1 %tobool, i8 %28, i8 %a.1.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %3)
  %cmp68.i = icmp eq i32 %3, 2
  %29 = xor i8 %spec.select.i, 8
  %a.3.i = select i1 %cmp68.i, i8 %29, i8 %spec.select.i
  %vc_hi_font_mask.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 27
  %30 = ptrtoint ptr %vc_hi_font_mask.i to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %vc_hi_font_mask.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 256, i16 %31)
  %cmp76.i = icmp eq i16 %31, 256
  %shl80.i = zext i1 %cmp76.i to i8
  %a.4.i = shl i8 %a.3.i, %shl80.i
  br label %build_attr.exit

build_attr.exit:                                  ; preds = %if.end62.i, %if.then11.i, %if.then.i
  %retval.1.i = phi i8 [ %call.i, %if.then.i ], [ %a.4.i, %if.end62.i ], [ %conv25.i, %if.then11.i ]
  %vc_attr = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 18
  %32 = ptrtoint ptr %vc_attr to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 %retval.1.i, ptr %vc_attr, align 1
  %33 = ptrtoint ptr %color to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %color, align 4
  %35 = ptrtoint ptr %blink to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %blink, align 2, !range !368
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %tobool14 = icmp ne i8 %36, 0
  %37 = ptrtoint ptr %vc_decscnm to i32
  call void @__asan_load2_noabort(i32 %37)
  %bf.load16 = load i16, ptr %vc_decscnm, align 4
  %38 = and i16 %bf.load16, 8192
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %38)
  %tobool20 = icmp ne i16 %38, 0
  %39 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %vc_sw.i, align 4
  %con_build_attr.i38 = getelementptr inbounds %struct.consw, ptr %40, i32 0, i32 19
  %41 = ptrtoint ptr %con_build_attr.i38 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %con_build_attr.i38, align 4
  %tobool.not.i39 = icmp eq ptr %42, null
  br i1 %tobool.not.i39, label %if.end.i45, label %if.then.i41

if.then.i41:                                      ; preds = %build_attr.exit
  call void @__sanitizer_cov_trace_pc() #23
  %call.i40 = tail call zeroext i8 %42(ptr noundef %vc, i8 noundef zeroext %34, i32 noundef 1, i1 noundef zeroext %tobool14, i1 noundef zeroext false, i1 noundef zeroext %tobool20, i1 noundef zeroext false) #21
  br label %build_attr.exit70

if.end.i45:                                       ; preds = %build_attr.exit
  %43 = and i16 %bf.load16, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %43)
  %tobool10.not.i44 = icmp eq i16 %43, 0
  br i1 %tobool10.not.i44, label %if.then11.i51, label %if.end26.i52

if.then11.i51:                                    ; preds = %if.end.i45
  call void @__sanitizer_cov_trace_pc() #23
  %44 = lshr exact i16 %38, 10
  %45 = trunc i16 %44 to i8
  %or.i48 = select i1 %tobool14, i8 -127, i8 1
  %or20.i49 = or i8 %or.i48, %45
  br label %build_attr.exit70

if.end26.i52:                                     ; preds = %if.end.i45
  br i1 %tobool20, label %if.then52.i61, label %if.end26.i52.if.end62.i68_crit_edge

if.end26.i52.if.end62.i68_crit_edge:              ; preds = %if.end26.i52
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end62.i68

if.then52.i61:                                    ; preds = %if.end26.i52
  call void @__sanitizer_cov_trace_pc() #23
  %and54.i57 = and i8 %34, -120
  %or58.i58 = tail call i8 @llvm.fshl.i8(i8 %34, i8 %34, i8 4) #21
  %and59.i59 = and i8 %or58.i58, 119
  %or60.i60 = or i8 %and59.i59, %and54.i57
  br label %if.end62.i68

if.end62.i68:                                     ; preds = %if.then52.i61, %if.end26.i52.if.end62.i68_crit_edge
  %a.1.i62 = phi i8 [ %or60.i60, %if.then52.i61 ], [ %34, %if.end26.i52.if.end62.i68_crit_edge ]
  %46 = xor i8 %a.1.i62, -128
  %spec.select.i63 = select i1 %tobool14, i8 %46, i8 %a.1.i62
  %vc_hi_font_mask.i64 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 27
  %47 = ptrtoint ptr %vc_hi_font_mask.i64 to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %vc_hi_font_mask.i64, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 256, i16 %48)
  %cmp76.i65 = icmp eq i16 %48, 256
  %shl80.i66 = zext i1 %cmp76.i65 to i8
  %a.4.i67 = shl i8 %spec.select.i63, %shl80.i66
  br label %build_attr.exit70

build_attr.exit70:                                ; preds = %if.end62.i68, %if.then11.i51, %if.then.i41
  %retval.1.i69 = phi i8 [ %call.i40, %if.then.i41 ], [ %a.4.i67, %if.end62.i68 ], [ %or20.i49, %if.then11.i51 ]
  %conv22 = zext i8 %retval.1.i69 to i16
  %shl = shl nuw i16 %conv22, 8
  %or = or i16 %shl, 32
  %vc_video_erase_char = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 29
  %49 = ptrtoint ptr %vc_video_erase_char to i32
  call void @__asan_store2_noabort(i32 %49)
  store i16 %or, ptr %vc_video_erase_char, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @vt_set_leds_compute_shiftstate() local_unnamed_addr #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @vc_cons_allocated(i32 noundef %i) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 63, i32 %i)
  %cmp = icmp ult i32 %i, 63
  br i1 %cmp, label %land.rhs, label %entry.land.end_crit_edge

entry.land.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.end

land.rhs:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %arrayidx = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %i
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 4
  %tobool = icmp ne ptr %1, null
  %phi.cast = zext i1 %tobool to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry.land.end_crit_edge
  %2 = phi i32 [ 0, %entry.land.end_crit_edge ], [ %phi.cast, %land.rhs ]
  ret i32 %2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vc_allocate(i32 noundef %currcons) local_unnamed_addr #0 align 64 {
entry:
  %param = alloca %struct.vt_notifier_param, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param) #21
  %0 = getelementptr inbounds %struct.vt_notifier_param, ptr %param, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4, !annotation !367
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %2 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.rhs, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %land.lhs.true
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %3 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool3.not = icmp eq i32 %3, 0
  br i1 %tobool3.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !365

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1114, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 62, i32 %currcons)
  %cmp = icmp ugt i32 %currcons, 62
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end25

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end25:                                         ; preds = %if.end
  %arrayidx = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %currcons
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  %tobool26.not = icmp eq ptr %5, null
  br i1 %tobool26.not, label %if.end28, label %if.end25.cleanup_crit_edge

if.end25.cleanup_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end28:                                         ; preds = %if.end25
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %6 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %6, i32 noundef 3520, i32 noundef 980) #25
  %7 = ptrtoint ptr %param to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %call7.i.i, ptr %param, align 4
  %tobool31.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool31.not, label %if.end28.cleanup_crit_edge, label %if.end33

if.end28.cleanup_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end33:                                         ; preds = %if.end28
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %call7.i.i, ptr %arrayidx, align 4
  tail call void @tty_port_init(ptr noundef nonnull %call7.i.i) #21
  %ops = getelementptr inbounds %struct.tty_port, ptr %call7.i.i, i32 0, i32 3
  %9 = ptrtoint ptr %ops to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr @vc_port_ops, ptr %ops, align 8
  %SAK_work = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %currcons, i32 1
  tail call void @__init_work(ptr noundef %SAK_work, i32 noundef 0) #21
  %10 = ptrtoint ptr %SAK_work to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 -64, ptr %SAK_work, align 4
  %lockdep_map = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %currcons, i32 1, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.2, ptr noundef nonnull @vc_allocate.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #21
  %entry45 = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %currcons, i32 1, i32 1
  %11 = ptrtoint ptr %entry45 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %entry45, ptr %entry45, align 4
  %prev.i = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %currcons, i32 1, i32 1, i32 1
  %12 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %entry45, ptr %prev.i, align 4
  %func = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %currcons, i32 1, i32 2
  %13 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr @vc_SAK, ptr %func, align 4
  tail call fastcc void @visual_init(ptr noundef nonnull %call7.i.i, i32 noundef %currcons, i32 noundef 1)
  %vc_uni_pagedir_loc = getelementptr inbounds %struct.vc_data, ptr %call7.i.i, i32 0, i32 49
  %14 = ptrtoint ptr %vc_uni_pagedir_loc to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %vc_uni_pagedir_loc, align 4
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 4
  %tobool50.not = icmp eq ptr %17, null
  br i1 %tobool50.not, label %if.then51, label %if.end33.if.end53_crit_edge

if.end33.if.end53_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end53

if.then51:                                        ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #23
  %call52 = tail call i32 @con_set_default_unimap(ptr noundef nonnull %call7.i.i) #21
  br label %if.end53

if.end53:                                         ; preds = %if.then51, %if.end33.if.end53_crit_edge
  %vc_cols = getelementptr inbounds %struct.vc_data, ptr %call7.i.i, i32 0, i32 4
  %18 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %vc_cols, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 32767, i32 %19)
  %cmp54 = icmp ugt i32 %19, 32767
  br i1 %cmp54, label %if.end53.err_free_crit_edge, label %lor.lhs.false

if.end53.err_free_crit_edge:                      ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #23
  br label %err_free

lor.lhs.false:                                    ; preds = %if.end53
  %vc_rows = getelementptr inbounds %struct.vc_data, ptr %call7.i.i, i32 0, i32 5
  %20 = ptrtoint ptr %vc_rows to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %vc_rows, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 32767, i32 %21)
  %cmp55 = icmp ugt i32 %21, 32767
  br i1 %cmp55, label %lor.lhs.false.err_free_crit_edge, label %lor.lhs.false56

lor.lhs.false.err_free_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %err_free

lor.lhs.false56:                                  ; preds = %lor.lhs.false
  %vc_screenbuf_size = getelementptr inbounds %struct.vc_data, ptr %call7.i.i, i32 0, i32 16
  %22 = ptrtoint ptr %vc_screenbuf_size to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %vc_screenbuf_size, align 4
  %24 = add i32 %23, -8388609
  call void @__sanitizer_cov_trace_const_cmp4(i32 -8388608, i32 %24)
  %25 = icmp ult i32 %24, -8388608
  br i1 %25, label %lor.lhs.false56.err_free_crit_edge, label %if.end8.i.i

lor.lhs.false56.err_free_crit_edge:               ; preds = %lor.lhs.false56
  call void @__sanitizer_cov_trace_pc() #23
  br label %err_free

if.end8.i.i:                                      ; preds = %lor.lhs.false56
  %call9.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %23, i32 noundef 3520) #24
  %vc_screenbuf = getelementptr inbounds %struct.vc_data, ptr %call7.i.i, i32 0, i32 15
  %26 = ptrtoint ptr %vc_screenbuf to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %call9.i.i, ptr %vc_screenbuf, align 8
  %tobool66.not = icmp eq ptr %call9.i.i, null
  br i1 %tobool66.not, label %if.end8.i.i.err_free_crit_edge, label %if.end68

if.end8.i.i.err_free_crit_edge:                   ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %err_free

if.end68:                                         ; preds = %if.end8.i.i
  %27 = load i32, ptr @global_cursor_default, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %27)
  %cmp69 = icmp eq i32 %27, -1
  br i1 %cmp69, label %if.then70, label %if.end68.if.end71_crit_edge

if.end68.if.end71_crit_edge:                      ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end71

if.then70:                                        ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #23
  store i32 1, ptr @global_cursor_default, align 4
  br label %if.end71

if.end71:                                         ; preds = %if.then70, %if.end68.if.end71_crit_edge
  %28 = ptrtoint ptr %vc_rows to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %vc_rows, align 8
  %30 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %vc_cols, align 4
  tail call fastcc void @vc_init(ptr noundef nonnull %call7.i.i, i32 noundef %29, i32 noundef %31, i32 noundef 1)
  tail call void @vcs_make_sysfs(i32 noundef %currcons) #21
  %call74 = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 1, ptr noundef nonnull %param) #21
  br label %cleanup

err_free:                                         ; preds = %if.end8.i.i.err_free_crit_edge, %lor.lhs.false56.err_free_crit_edge, %lor.lhs.false.err_free_crit_edge, %if.end53.err_free_crit_edge
  %err.0 = phi i32 [ -22, %if.end53.err_free_crit_edge ], [ -22, %lor.lhs.false.err_free_crit_edge ], [ -22, %lor.lhs.false56.err_free_crit_edge ], [ -12, %if.end8.i.i.err_free_crit_edge ]
  %vc_sw.i = getelementptr inbounds %struct.vc_data, ptr %call7.i.i, i32 0, i32 14
  %32 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %vc_sw.i, align 4
  %con_deinit.i = getelementptr inbounds %struct.consw, ptr %33, i32 0, i32 3
  %34 = ptrtoint ptr %con_deinit.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %con_deinit.i, align 4
  tail call void %35(ptr noundef nonnull %call7.i.i) #21
  %36 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %vc_sw.i, align 4
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %37, align 4
  tail call void @module_put(ptr noundef %39) #21
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #21
  %40 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr null, ptr %arrayidx, align 4
  br label %cleanup

cleanup:                                          ; preds = %err_free, %if.end71, %if.end28.cleanup_crit_edge, %if.end25.cleanup_crit_edge, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %err_free ], [ 0, %if.end71 ], [ -6, %if.end.cleanup_crit_edge ], [ 0, %if.end25.cleanup_crit_edge ], [ -12, %if.end28.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param) #21
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @tty_port_init(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @vc_SAK(ptr noundef) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @visual_init(ptr noundef %vc, i32 noundef %num, i32 noundef %init) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %vc_sw = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %0 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vc_sw, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  tail call void @module_put(ptr noundef %3) #21
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %4 = load ptr, ptr @conswitchp, align 4
  %arrayidx = getelementptr [63 x ptr], ptr @con_driver_map, i32 0, i32 %num
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx, align 4
  %tobool3.not = icmp eq ptr %6, null
  %spec.store.select = select i1 %tobool3.not, ptr %4, ptr %6
  %7 = ptrtoint ptr %vc_sw to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %spec.store.select, ptr %vc_sw, align 4
  %8 = ptrtoint ptr %spec.store.select to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %spec.store.select, align 4
  tail call void @__module_get(ptr noundef %9) #21
  %conv = trunc i32 %num to i16
  %vc_num = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 3
  %10 = ptrtoint ptr %vc_num to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 %conv, ptr %vc_num, align 4
  %vc_display_fg = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 47
  %11 = ptrtoint ptr %vc_display_fg to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr @master_display_fg, ptr %vc_display_fg, align 4
  %vc_uni_pagedir_loc = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 49
  %12 = ptrtoint ptr %vc_uni_pagedir_loc to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %vc_uni_pagedir_loc, align 4
  %tobool10.not = icmp eq ptr %13, null
  br i1 %tobool10.not, label %if.end.if.end12_crit_edge, label %if.then11

if.end.if.end12_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end12

if.then11:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @con_free_unimap(ptr noundef %vc) #21
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %if.end.if.end12_crit_edge
  %vc_uni_pagedir = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 48
  %14 = ptrtoint ptr %vc_uni_pagedir_loc to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %vc_uni_pagedir, ptr %vc_uni_pagedir_loc, align 4
  %15 = ptrtoint ptr %vc_uni_pagedir to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %vc_uni_pagedir, align 4
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 27
  %16 = ptrtoint ptr %vc_hi_font_mask to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 0, ptr %vc_hi_font_mask, align 4
  %vc_complement_mask = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 24
  %17 = ptrtoint ptr %vc_complement_mask to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 0, ptr %vc_complement_mask, align 4
  %vc_can_do_color = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %18 = ptrtoint ptr %vc_can_do_color to i32
  call void @__asan_load2_noabort(i32 %18)
  %bf.load = load i16, ptr %vc_can_do_color, align 4
  %bf.clear = and i16 %bf.load, -17
  store i16 %bf.clear, ptr %vc_can_do_color, align 4
  %vc_cur_blink_ms = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 46
  %19 = ptrtoint ptr %vc_cur_blink_ms to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 200, ptr %vc_cur_blink_ms, align 4
  %20 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %vc_sw, align 4
  %con_init = getelementptr inbounds %struct.consw, ptr %21, i32 0, i32 2
  %22 = ptrtoint ptr %con_init to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %con_init, align 4
  tail call void %23(ptr noundef %vc, i32 noundef %init) #21
  %24 = ptrtoint ptr %vc_complement_mask to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %vc_complement_mask, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %25)
  %tobool17.not = icmp eq i16 %25, 0
  br i1 %tobool17.not, label %if.then18, label %if.end12.if.end25_crit_edge

if.end12.if.end25_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end25

if.then18:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #23
  %26 = ptrtoint ptr %vc_can_do_color to i32
  call void @__asan_load2_noabort(i32 %26)
  %bf.load20 = load i16, ptr %vc_can_do_color, align 4
  %27 = and i16 %bf.load20, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %27)
  %tobool22.not = icmp eq i16 %27, 0
  %conv23 = select i1 %tobool22.not, i16 2048, i16 30464
  %28 = ptrtoint ptr %vc_complement_mask to i32
  call void @__asan_store2_noabort(i32 %28)
  store i16 %conv23, ptr %vc_complement_mask, align 4
  br label %if.end25

if.end25:                                         ; preds = %if.then18, %if.end12.if.end25_crit_edge
  %29 = ptrtoint ptr %vc_complement_mask to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %vc_complement_mask, align 4
  %vc_s_complement_mask = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 25
  %31 = ptrtoint ptr %vc_s_complement_mask to i32
  call void @__asan_store2_noabort(i32 %31)
  store i16 %30, ptr %vc_s_complement_mask, align 2
  %vc_cols = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %32 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %vc_cols, align 4
  %shl = shl i32 %33, 1
  %vc_size_row = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 6
  %34 = ptrtoint ptr %vc_size_row to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %shl, ptr %vc_size_row, align 4
  %vc_rows = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 5
  %35 = ptrtoint ptr %vc_rows to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %vc_rows, align 4
  %mul = mul i32 %36, %shl
  %vc_screenbuf_size = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 16
  %37 = ptrtoint ptr %vc_screenbuf_size to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %mul, ptr %vc_screenbuf_size, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @con_set_default_unimap(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @vc_init(ptr noundef %vc, i32 noundef %rows, i32 noundef %cols, i32 noundef %do_clear) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %vc_cols = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %0 = ptrtoint ptr %vc_cols to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %cols, ptr %vc_cols, align 4
  %vc_rows = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 5
  %1 = ptrtoint ptr %vc_rows to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %rows, ptr %vc_rows, align 4
  %shl = shl i32 %cols, 1
  %vc_size_row = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 6
  %2 = ptrtoint ptr %vc_size_row to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %shl, ptr %vc_size_row, align 4
  %mul = mul i32 %shl, %rows
  %vc_screenbuf_size = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 16
  %3 = ptrtoint ptr %vc_screenbuf_size to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %mul, ptr %vc_screenbuf_size, align 4
  tail call fastcc void @set_origin(ptr noundef %vc)
  %vc_origin = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 9
  %4 = ptrtoint ptr %vc_origin to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vc_origin, align 4
  %vc_pos = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 26
  %6 = ptrtoint ptr %vc_pos to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %vc_pos, align 4
  tail call void @reset_vc(ptr noundef %vc) #21
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry
  %k.041 = phi i32 [ 0, %entry ], [ %inc10, %for.body.for.body_crit_edge ]
  %j.040 = phi i32 [ 0, %entry ], [ %inc12, %for.body.for.body_crit_edge ]
  %arrayidx = getelementptr [16 x i8], ptr @default_red, i32 0, i32 %j.040
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %arrayidx, align 1
  %inc = add nuw nsw i32 %k.041, 1
  %arrayidx3 = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 41, i32 %k.041
  %9 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %8, ptr %arrayidx3, align 1
  %arrayidx4 = getelementptr [16 x i8], ptr @default_grn, i32 0, i32 %j.040
  %10 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx4, align 1
  %inc6 = add nuw nsw i32 %k.041, 2
  %arrayidx7 = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 41, i32 %inc
  %12 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %11, ptr %arrayidx7, align 1
  %arrayidx8 = getelementptr [16 x i8], ptr @default_blu, i32 0, i32 %j.040
  %13 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %arrayidx8, align 1
  %inc10 = add nuw nsw i32 %k.041, 3
  %arrayidx11 = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 41, i32 %inc6
  %15 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 %14, ptr %arrayidx11, align 1
  %inc12 = add nuw nsw i32 %j.040, 1
  %exitcond.not = icmp eq i32 %inc12, 16
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %16 = load i32, ptr @default_color, align 4
  %conv = trunc i32 %16 to i8
  %vc_def_color = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 19
  %17 = ptrtoint ptr %vc_def_color to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %conv, ptr %vc_def_color, align 2
  %18 = load i32, ptr @default_underline_color, align 4
  %conv13 = trunc i32 %18 to i8
  %vc_ulcolor = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 20
  %19 = ptrtoint ptr %vc_ulcolor to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 %conv13, ptr %vc_ulcolor, align 1
  %20 = load i32, ptr @default_italic_color, align 4
  %conv14 = trunc i32 %20 to i8
  %vc_itcolor = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 21
  %21 = ptrtoint ptr %vc_itcolor to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %conv14, ptr %vc_itcolor, align 4
  %vc_halfcolor = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 22
  %22 = ptrtoint ptr %vc_halfcolor to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 8, ptr %vc_halfcolor, align 1
  %paste_wait = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 36
  tail call void @__init_waitqueue_head(ptr noundef %paste_wait, ptr noundef nonnull @.str.18, ptr noundef nonnull @vc_init.__key) #21
  tail call fastcc void @reset_terminal(ptr noundef %vc, i32 noundef %do_clear)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @vcs_make_sysfs(i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @atomic_notifier_call_chain(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vc_resize(ptr noundef %vc, i32 noundef %cols, i32 noundef %rows) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tty = getelementptr inbounds %struct.tty_port, ptr %vc, i32 0, i32 1
  %0 = ptrtoint ptr %tty to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tty, align 4
  %call = tail call fastcc i32 @vc_do_resize(ptr noundef %1, ptr noundef %vc, i32 noundef %cols, i32 noundef %rows)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @vc_do_resize(ptr noundef %tty, ptr noundef %vc, i32 noundef %cols, i32 noundef %lines) unnamed_addr #0 align 64 {
entry:
  %param.i = alloca %struct.vt_notifier_param, align 4
  %ws = alloca %struct.winsize, align 8
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %0 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.rhs, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %land.lhs.true
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %1 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool3.not = icmp eq i32 %1, 0
  br i1 %tobool3.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !365

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1206, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool24.not = icmp eq ptr %vc, null
  br i1 %tobool24.not, label %if.end.cleanup_crit_edge, label %if.end26

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end26:                                         ; preds = %if.end
  %vc_resize_user = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 43
  %2 = ptrtoint ptr %vc_resize_user to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vc_resize_user, align 4
  store i32 0, ptr %vc_resize_user, align 4
  %4 = or i32 %lines, %cols
  call void @__sanitizer_cov_trace_const_cmp4(i32 32768, i32 %4)
  %.not = icmp ult i32 %4, 32768
  br i1 %.not, label %if.end30, label %if.end26.cleanup_crit_edge

if.end26.cleanup_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end30:                                         ; preds = %if.end26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cols)
  %tobool31.not = icmp eq i32 %cols, 0
  br i1 %tobool31.not, label %cond.false, label %if.end30.cond.end_crit_edge

if.end30.cond.end_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

cond.false:                                       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #23
  %vc_cols = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %5 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %vc_cols, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end30.cond.end_crit_edge
  %cond = phi i32 [ %6, %cond.false ], [ %cols, %if.end30.cond.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %lines)
  %tobool32.not = icmp eq i32 %lines, 0
  br i1 %tobool32.not, label %cond.false34, label %cond.end.cond.end35_crit_edge

cond.end.cond.end35_crit_edge:                    ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end35

cond.false34:                                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #23
  %vc_rows = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 5
  %7 = ptrtoint ptr %vc_rows to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %vc_rows, align 4
  br label %cond.end35

cond.end35:                                       ; preds = %cond.false34, %cond.end.cond.end35_crit_edge
  %cond36 = phi i32 [ %8, %cond.false34 ], [ %lines, %cond.end.cond.end35_crit_edge ]
  %shl = shl i32 %cond, 1
  %mul = mul i32 %cond36, %shl
  %vc_cols37 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %9 = ptrtoint ptr %vc_cols37 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %vc_cols37, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %cond, i32 %10)
  %cmp38 = icmp eq i32 %cond, %10
  br i1 %cmp38, label %land.lhs.true39, label %cond.end35.if.end44_crit_edge

cond.end35.if.end44_crit_edge:                    ; preds = %cond.end35
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end44

land.lhs.true39:                                  ; preds = %cond.end35
  %vc_rows40 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 5
  %11 = ptrtoint ptr %vc_rows40 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %vc_rows40, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %cond36, i32 %12)
  %cmp41 = icmp eq i32 %cond36, %12
  br i1 %cmp41, label %if.then42, label %land.lhs.true39.if.end44_crit_edge

land.lhs.true39.if.end44_crit_edge:               ; preds = %land.lhs.true39
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end44

if.then42:                                        ; preds = %land.lhs.true39
  %vc_sw.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %13 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %vc_sw.i, align 4
  %con_resize.i = getelementptr inbounds %struct.consw, ptr %14, i32 0, i32 14
  %15 = ptrtoint ptr %con_resize.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %con_resize.i, align 4
  %tobool.not.i = icmp eq ptr %16, null
  br i1 %tobool.not.i, label %if.then42.cleanup_crit_edge, label %if.then.i

if.then42.cleanup_crit_edge:                      ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then.i:                                        ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #23
  %call.i = tail call i32 %16(ptr noundef nonnull %vc, i32 noundef %cond, i32 noundef %cond36, i32 noundef %3) #21
  br label %cleanup

if.end44:                                         ; preds = %land.lhs.true39.if.end44_crit_edge, %cond.end35.if.end44_crit_edge
  %17 = add i32 %mul, -8388609
  call void @__sanitizer_cov_trace_const_cmp4(i32 -8388608, i32 %17)
  %18 = icmp ult i32 %17, -8388608
  br i1 %18, label %if.end44.cleanup_crit_edge, label %if.end8.i.i

if.end44.cleanup_crit_edge:                       ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end8.i.i:                                      ; preds = %if.end44
  %call9.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %mul, i32 noundef 1052096) #24
  %tobool51.not = icmp eq ptr %call9.i.i, null
  br i1 %tobool51.not, label %if.end8.i.i.cleanup_crit_edge, label %if.end53

if.end8.i.i.cleanup_crit_edge:                    ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end53:                                         ; preds = %if.end8.i.i
  %vc_uni_screen = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 50
  %19 = ptrtoint ptr %vc_uni_screen to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %vc_uni_screen, align 4
  %tobool54.not = icmp eq ptr %20, null
  br i1 %tobool54.not, label %if.end53.if.end60_crit_edge, label %if.then55

if.end53.if.end60_crit_edge:                      ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end60

if.then55:                                        ; preds = %if.end53
  %mul.i = mul i32 %cond36, %cond
  %mul121.i = add i32 %mul.i, %cond36
  %add.i = shl i32 %mul121.i, 2
  %call.i280 = tail call noalias ptr @vmalloc(i32 noundef %add.i) #24
  %tobool.not.i281 = icmp eq ptr %call.i280, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond36)
  %cmp22.not.i = icmp eq i32 %cond36, 0
  %or.cond.i = or i1 %cmp22.not.i, %tobool.not.i281
  br i1 %or.cond.i, label %if.then55.vc_uniscr_alloc.exit_crit_edge, label %for.body.lr.ph.i

if.then55.vc_uniscr_alloc.exit_crit_edge:         ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_alloc.exit

for.body.lr.ph.i:                                 ; preds = %if.then55
  %add.ptr.i = getelementptr ptr, ptr %call.i280, i32 %cond36
  %mul4.i = shl i32 %cond, 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.024.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %p.023.i = phi ptr [ %add.ptr.i, %for.body.lr.ph.i ], [ %add.ptr5.i, %for.body.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr [0 x ptr], ptr %call.i280, i32 0, i32 %i.024.i
  %21 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %p.023.i, ptr %arrayidx.i, align 4
  %add.ptr5.i = getelementptr i8, ptr %p.023.i, i32 %mul4.i
  %inc.i = add nuw i32 %i.024.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %cond36
  br i1 %exitcond.not.i, label %for.body.i.vc_uniscr_alloc.exit_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.body.i.vc_uniscr_alloc.exit_crit_edge:        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_alloc.exit

vc_uniscr_alloc.exit:                             ; preds = %for.body.i.vc_uniscr_alloc.exit_crit_edge, %if.then55.vc_uniscr_alloc.exit_crit_edge
  br i1 %tobool.not.i281, label %if.then58, label %vc_uniscr_alloc.exit.if.end60_crit_edge

vc_uniscr_alloc.exit.if.end60_crit_edge:          ; preds = %vc_uniscr_alloc.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end60

if.then58:                                        ; preds = %vc_uniscr_alloc.exit
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @kfree(ptr noundef nonnull %call9.i.i) #21
  br label %cleanup

if.end60:                                         ; preds = %vc_uniscr_alloc.exit.if.end60_crit_edge, %if.end53.if.end60_crit_edge
  %new_uniscr.0 = phi ptr [ %call.i280, %vc_uniscr_alloc.exit.if.end60_crit_edge ], [ null, %if.end53.if.end60_crit_edge ]
  %call61 = tail call zeroext i1 @vc_is_sel(ptr noundef %vc) #21
  br i1 %call61, label %if.then62, label %if.end60.if.end63_crit_edge

if.end60.if.end63_crit_edge:                      ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end63

if.then62:                                        ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @clear_selection() #21
  br label %if.end63

if.end63:                                         ; preds = %if.then62, %if.end60.if.end63_crit_edge
  %vc_rows64 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 5
  %22 = ptrtoint ptr %vc_rows64 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %vc_rows64, align 4
  %vc_size_row = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 6
  %24 = ptrtoint ptr %vc_size_row to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %vc_size_row, align 4
  %vc_sw.i282 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %26 = ptrtoint ptr %vc_sw.i282 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %vc_sw.i282, align 4
  %con_resize.i283 = getelementptr inbounds %struct.consw, ptr %27, i32 0, i32 14
  %28 = ptrtoint ptr %con_resize.i283 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %con_resize.i283, align 4
  %tobool.not.i284 = icmp eq ptr %29, null
  br i1 %tobool.not.i284, label %if.end63.if.end68_crit_edge, label %resize_screen.exit288

if.end63.if.end68_crit_edge:                      ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end68

resize_screen.exit288:                            ; preds = %if.end63
  %call.i285 = tail call i32 %29(ptr noundef %vc, i32 noundef %cond, i32 noundef %cond36, i32 noundef %3) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i285)
  %tobool66.not = icmp eq i32 %call.i285, 0
  br i1 %tobool66.not, label %resize_screen.exit288.if.end68_crit_edge, label %if.then67

resize_screen.exit288.if.end68_crit_edge:         ; preds = %resize_screen.exit288
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end68

if.then67:                                        ; preds = %resize_screen.exit288
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @kfree(ptr noundef nonnull %call9.i.i) #21
  tail call void @vfree(ptr noundef %new_uniscr.0) #21
  br label %cleanup

if.end68:                                         ; preds = %resize_screen.exit288.if.end68_crit_edge, %if.end63.if.end68_crit_edge
  %30 = ptrtoint ptr %vc_rows64 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %cond36, ptr %vc_rows64, align 4
  %31 = ptrtoint ptr %vc_cols37 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %cond, ptr %vc_cols37, align 4
  %32 = ptrtoint ptr %vc_size_row to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %shl, ptr %vc_size_row, align 4
  %vc_screenbuf_size = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 16
  %33 = ptrtoint ptr %vc_screenbuf_size to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %mul, ptr %vc_screenbuf_size, align 4
  %34 = tail call i32 @llvm.umin.i32(i32 %25, i32 %shl)
  %sub = sub i32 %shl, %34
  %vc_origin = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 9
  %35 = ptrtoint ptr %vc_origin to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %vc_origin, align 4
  %37 = ptrtoint ptr %call9.i.i to i32
  %add = add i32 %mul, %37
  %state = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %y = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %38 = ptrtoint ptr %y to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %y, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %39, i32 %cond36)
  %cmp78 = icmp ugt i32 %39, %cond36
  br i1 %cmp78, label %if.then79, label %if.end68.if.end93_crit_edge

if.end68.if.end93_crit_edge:                      ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end93

if.then79:                                        ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #23
  %sub82 = sub i32 %23, %39
  call void @__sanitizer_cov_trace_cmp4(i32 %sub82, i32 %cond36)
  %cmp83 = icmp ult i32 %sub82, %cond36
  %sub85 = sub i32 %23, %cond36
  %div277 = lshr i32 %cond36, 1
  %sub88 = sub i32 %39, %div277
  %first_copied_row.0 = select i1 %cmp83, i32 %sub85, i32 %sub88
  %mul90 = mul i32 %first_copied_row.0, %25
  %add91 = add i32 %mul90, %36
  br label %if.end93

if.end93:                                         ; preds = %if.then79, %if.end68.if.end93_crit_edge
  %first_copied_row.1 = phi i32 [ %first_copied_row.0, %if.then79 ], [ 0, %if.end68.if.end93_crit_edge ]
  %old_origin.0 = phi i32 [ %add91, %if.then79 ], [ %36, %if.end68.if.end93_crit_edge ]
  %40 = tail call i32 @llvm.umin.i32(i32 %23, i32 %cond36)
  %mul100 = mul i32 %25, %40
  %add101 = add i32 %old_origin.0, %mul100
  %41 = ptrtoint ptr %vc_uni_screen to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %vc_uni_screen, align 4
  %div103276 = lshr i32 %34, 1
  %tobool.not.i289 = icmp eq ptr %new_uniscr.0, null
  br i1 %tobool.not.i289, label %if.end93.vc_uniscr_copy_area.exit_crit_edge, label %while.cond.preheader.i

if.end93.vc_uniscr_copy_area.exit_crit_edge:      ; preds = %if.end93
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_copy_area.exit

while.cond.preheader.i:                           ; preds = %if.end93
  call void @__sanitizer_cov_trace_cmp4(i32 %40, i32 %first_copied_row.1)
  %cmp33.i = icmp ugt i32 %40, %first_copied_row.1
  br i1 %cmp33.i, label %while.body.lr.ph.i, label %while.cond.preheader.i.while.cond8.preheader.i_crit_edge

while.cond.preheader.i.while.cond8.preheader.i_crit_edge: ; preds = %while.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.cond8.preheader.i

while.body.lr.ph.i:                               ; preds = %while.cond.preheader.i
  %mul.i290 = shl i32 %div103276, 2
  call void @__sanitizer_cov_trace_cmp4(i32 %cond, i32 %div103276)
  %tobool3.not.i = icmp eq i32 %cond, %div103276
  %sub.i = sub i32 %cond, %div103276
  %mul.i.i = shl i32 %sub.i, 2
  %43 = sub i32 %40, %first_copied_row.1
  br label %while.body.i

while.cond8.preheader.i:                          ; preds = %if.end6.i.while.cond8.preheader.i_crit_edge, %while.cond.preheader.i.while.cond8.preheader.i_crit_edge
  %dst_row.0.lcssa.i = phi i32 [ 0, %while.cond.preheader.i.while.cond8.preheader.i_crit_edge ], [ %43, %if.end6.i.while.cond8.preheader.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %dst_row.0.lcssa.i, i32 %cond36)
  %cmp936.i = icmp ult i32 %dst_row.0.lcssa.i, %cond36
  br i1 %cmp936.i, label %while.body10.lr.ph.i, label %while.cond8.preheader.i.vc_uniscr_copy_area.exit_crit_edge

while.cond8.preheader.i.vc_uniscr_copy_area.exit_crit_edge: ; preds = %while.cond8.preheader.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_copy_area.exit

while.body10.lr.ph.i:                             ; preds = %while.cond8.preheader.i
  %mul.i31.i = shl i32 %cond, 2
  br label %while.body10.i

while.body.i:                                     ; preds = %if.end6.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %src_top_row.addr.035.i = phi i32 [ %first_copied_row.1, %while.body.lr.ph.i ], [ %inc.i294, %if.end6.i.while.body.i_crit_edge ]
  %dst_row.034.i = phi i32 [ 0, %while.body.lr.ph.i ], [ %inc7.i, %if.end6.i.while.body.i_crit_edge ]
  %arrayidx.i291 = getelementptr [0 x ptr], ptr %42, i32 0, i32 %src_top_row.addr.035.i
  %44 = ptrtoint ptr %arrayidx.i291 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %arrayidx.i291, align 4
  %arrayidx2.i = getelementptr [0 x ptr], ptr %new_uniscr.0, i32 0, i32 %dst_row.034.i
  %46 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %arrayidx2.i, align 4
  %48 = call ptr @memcpy(ptr %47, ptr %45, i32 %mul.i290)
  br i1 %tobool3.not.i, label %while.body.i.if.end6.i_crit_edge, label %if.then4.i

while.body.i.if.end6.i_crit_edge:                 ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end6.i

if.then4.i:                                       ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #23
  %add.ptr.i292 = getelementptr i32, ptr %47, i32 %div103276
  %call.i.i293 = tail call ptr @__memset32(ptr noundef %add.ptr.i292, i32 noundef 32, i32 noundef %mul.i.i) #21
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.then4.i, %while.body.i.if.end6.i_crit_edge
  %inc.i294 = add nuw i32 %src_top_row.addr.035.i, 1
  %inc7.i = add nuw i32 %dst_row.034.i, 1
  %exitcond.not.i295 = icmp eq i32 %inc7.i, %43
  br i1 %exitcond.not.i295, label %if.end6.i.while.cond8.preheader.i_crit_edge, label %if.end6.i.while.body.i_crit_edge

if.end6.i.while.body.i_crit_edge:                 ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body.i

if.end6.i.while.cond8.preheader.i_crit_edge:      ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.cond8.preheader.i

while.body10.i:                                   ; preds = %while.body10.i.while.body10.i_crit_edge, %while.body10.lr.ph.i
  %dst_row.137.i = phi i32 [ %dst_row.0.lcssa.i, %while.body10.lr.ph.i ], [ %inc15.i, %while.body10.i.while.body10.i_crit_edge ]
  %arrayidx13.i = getelementptr [0 x ptr], ptr %new_uniscr.0, i32 0, i32 %dst_row.137.i
  %49 = ptrtoint ptr %arrayidx13.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %arrayidx13.i, align 4
  %call.i32.i = tail call ptr @__memset32(ptr noundef %50, i32 noundef 32, i32 noundef %mul.i31.i) #21
  %inc15.i = add i32 %dst_row.137.i, 1
  %exitcond38.not.i = icmp eq i32 %inc15.i, %cond36
  br i1 %exitcond38.not.i, label %while.body10.i.vc_uniscr_copy_area.exit_crit_edge, label %while.body10.i.while.body10.i_crit_edge

while.body10.i.while.body10.i_crit_edge:          ; preds = %while.body10.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body10.i

while.body10.i.vc_uniscr_copy_area.exit_crit_edge: ; preds = %while.body10.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_copy_area.exit

vc_uniscr_copy_area.exit:                         ; preds = %while.body10.i.vc_uniscr_copy_area.exit_crit_edge, %while.cond8.preheader.i.vc_uniscr_copy_area.exit_crit_edge, %if.end93.vc_uniscr_copy_area.exit_crit_edge
  %51 = ptrtoint ptr %vc_uni_screen to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %vc_uni_screen, align 4
  tail call void @vfree(ptr noundef %52) #21
  %53 = ptrtoint ptr %vc_uni_screen to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %new_uniscr.0, ptr %vc_uni_screen, align 4
  tail call fastcc void @update_attr(ptr noundef %vc)
  call void @__sanitizer_cov_trace_cmp4(i32 %old_origin.0, i32 %add101)
  %cmp110309 = icmp ult i32 %old_origin.0, %add101
  br i1 %cmp110309, label %while.body.lr.ph, label %vc_uniscr_copy_area.exit.while.end_crit_edge

vc_uniscr_copy_area.exit.while.end_crit_edge:     ; preds = %vc_uniscr_copy_area.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end

while.body.lr.ph:                                 ; preds = %vc_uniscr_copy_area.exit
  call void @__sanitizer_cov_trace_cmp4(i32 %shl, i32 %25)
  %tobool111.not.not = icmp ugt i32 %shl, %25
  %vc_video_erase_char = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 29
  %div1.i = lshr i32 %sub, 1
  br label %while.body

while.body:                                       ; preds = %if.end114.while.body_crit_edge, %while.body.lr.ph
  %old_origin.1311 = phi i32 [ %old_origin.0, %while.body.lr.ph ], [ %add115, %if.end114.while.body_crit_edge ]
  %new_origin.0310 = phi i32 [ %37, %while.body.lr.ph ], [ %add116, %if.end114.while.body_crit_edge ]
  %54 = inttoptr i32 %new_origin.0310 to ptr
  %55 = inttoptr i32 %old_origin.1311 to ptr
  %56 = call ptr @memcpy(ptr %54, ptr %55, i32 %34)
  br i1 %tobool111.not.not, label %if.then112, label %while.body.if.end114_crit_edge

while.body.if.end114_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end114

if.then112:                                       ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  %add113 = add i32 %new_origin.0310, %34
  %57 = inttoptr i32 %add113 to ptr
  %58 = ptrtoint ptr %vc_video_erase_char to i32
  call void @__asan_load2_noabort(i32 %58)
  %59 = load i16, ptr %vc_video_erase_char, align 4
  %call.i296 = tail call ptr @memset16(ptr noundef %57, i16 noundef zeroext %59, i32 noundef %div1.i) #21
  br label %if.end114

if.end114:                                        ; preds = %if.then112, %while.body.if.end114_crit_edge
  %add115 = add i32 %old_origin.1311, %25
  %add116 = add i32 %new_origin.0310, %shl
  %cmp110 = icmp ult i32 %add115, %add101
  br i1 %cmp110, label %if.end114.while.body_crit_edge, label %if.end114.while.end_crit_edge

if.end114.while.end_crit_edge:                    ; preds = %if.end114
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end

if.end114.while.body_crit_edge:                   ; preds = %if.end114
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body

while.end:                                        ; preds = %if.end114.while.end_crit_edge, %vc_uniscr_copy_area.exit.while.end_crit_edge
  %new_origin.0.lcssa = phi i32 [ %37, %vc_uniscr_copy_area.exit.while.end_crit_edge ], [ %add116, %if.end114.while.end_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %new_origin.0.lcssa)
  %cmp117 = icmp ugt i32 %add, %new_origin.0.lcssa
  br i1 %cmp117, label %if.then118, label %while.end.if.end121_crit_edge

while.end.if.end121_crit_edge:                    ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end121

if.then118:                                       ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #23
  %60 = inttoptr i32 %new_origin.0.lcssa to ptr
  %vc_video_erase_char119 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 29
  %61 = ptrtoint ptr %vc_video_erase_char119 to i32
  call void @__asan_load2_noabort(i32 %61)
  %62 = load i16, ptr %vc_video_erase_char119, align 4
  %sub120 = sub i32 %add, %new_origin.0.lcssa
  %div1.i297 = lshr exact i32 %sub120, 1
  %call.i298 = tail call ptr @memset16(ptr noundef %60, i16 noundef zeroext %62, i32 noundef %div1.i297) #21
  br label %if.end121

if.end121:                                        ; preds = %if.then118, %while.end.if.end121_crit_edge
  %vc_screenbuf = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 15
  %63 = ptrtoint ptr %vc_screenbuf to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %vc_screenbuf, align 4
  store ptr %call9.i.i, ptr %vc_screenbuf, align 4
  %65 = ptrtoint ptr %vc_screenbuf_size to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 %mul, ptr %vc_screenbuf_size, align 4
  tail call fastcc void @set_origin(ptr noundef %vc)
  tail call void @kfree(ptr noundef %64) #21
  %vc_top = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 12
  %66 = ptrtoint ptr %vc_top to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 0, ptr %vc_top, align 4
  %67 = ptrtoint ptr %vc_rows64 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %vc_rows64, align 4
  %vc_bottom = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 13
  %69 = ptrtoint ptr %vc_bottom to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %68, ptr %vc_bottom, align 4
  %70 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %state, align 4
  %72 = ptrtoint ptr %y to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %y, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %cmp.i = icmp slt i32 %71, 0
  br i1 %cmp.i, label %if.end121.if.end9.i_crit_edge, label %if.else.i

if.end121.if.end9.i_crit_edge:                    ; preds = %if.end121
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9.i

if.else.i:                                        ; preds = %if.end121
  call void @__sanitizer_cov_trace_pc() #23
  %74 = ptrtoint ptr %vc_cols37 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %vc_cols37, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %75, i32 %71)
  %cmp1.not.i = icmp ugt i32 %75, %71
  %sub.i299 = add i32 %75, -1
  %spec.select.i = select i1 %cmp1.not.i, i32 %71, i32 %sub.i299
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.else.i, %if.end121.if.end9.i_crit_edge
  %sub.sink.i = phi i32 [ 0, %if.end121.if.end9.i_crit_edge ], [ %spec.select.i, %if.else.i ]
  %76 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 %sub.sink.i, ptr %state, align 4
  %vc_decom.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %77 = ptrtoint ptr %vc_decom.i to i32
  call void @__asan_load2_noabort(i32 %77)
  %bf.load.i = load i16, ptr %vc_decom.i, align 4
  %78 = and i16 %bf.load.i, 4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %78)
  %tobool.not.i300 = icmp eq i16 %78, 0
  %spec.select = select i1 %tobool.not.i300, ptr %vc_rows64, ptr %vc_bottom
  %79 = ptrtoint ptr %spec.select to i32
  call void @__asan_load4_noabort(i32 %79)
  %max_y.0.i = load i32, ptr %spec.select, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %73)
  %cmp13.i = icmp slt i32 %73, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %max_y.0.i, i32 %73)
  %cmp17.not.i = icmp sgt i32 %max_y.0.i, %73
  %sub19.i = add i32 %max_y.0.i, -1
  %spec.select57.i = select i1 %cmp17.not.i, i32 %73, i32 %sub19.i
  %sub19.sink.i = select i1 %cmp13.i, i32 0, i32 %spec.select57.i
  %80 = ptrtoint ptr %y to i32
  call void @__asan_store4_noabort(i32 %80)
  store i32 %sub19.sink.i, ptr %y, align 4
  %81 = ptrtoint ptr %vc_origin to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %vc_origin, align 4
  %83 = ptrtoint ptr %vc_size_row to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %vc_size_row, align 4
  %mul.i301 = mul i32 %84, %sub19.sink.i
  %shl.i = shl i32 %sub.sink.i, 1
  %add.i302 = add i32 %82, %shl.i
  %add31.i = add i32 %add.i302, %mul.i301
  %vc_pos.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 26
  %85 = ptrtoint ptr %vc_pos.i to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 %add31.i, ptr %vc_pos.i, align 4
  %bf.clear33.i = and i16 %bf.load.i, -33
  %86 = ptrtoint ptr %vc_decom.i to i32
  call void @__asan_store2_noabort(i32 %86)
  store i16 %bf.clear33.i, ptr %vc_decom.i, align 4
  %saved_state.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 2
  %87 = call ptr @memcpy(ptr %saved_state.i, ptr %state, i32 20)
  %tobool128.not = icmp eq ptr %tty, null
  br i1 %tobool128.not, label %if.end9.i.if.end135_crit_edge, label %if.then129

if.end9.i.if.end135_crit_edge:                    ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end135

if.then129:                                       ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %ws) #21
  %88 = getelementptr inbounds %struct.winsize, ptr %ws, i32 0, i32 1
  %89 = getelementptr inbounds %struct.winsize, ptr %ws, i32 0, i32 3
  %90 = ptrtoint ptr %ws to i32
  call void @__asan_store8_noabort(i32 %90)
  store i64 0, ptr %ws, align 8
  %conv = trunc i32 %68 to i16
  store i16 %conv, ptr %ws, align 8
  %91 = ptrtoint ptr %vc_cols37 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %vc_cols37, align 4
  %conv132 = trunc i32 %92 to i16
  %93 = ptrtoint ptr %88 to i32
  call void @__asan_store2_noabort(i32 %93)
  store i16 %conv132, ptr %88, align 2
  %vc_scan_lines = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 7
  %94 = ptrtoint ptr %vc_scan_lines to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %vc_scan_lines, align 4
  %conv133 = trunc i32 %95 to i16
  %96 = ptrtoint ptr %89 to i32
  call void @__asan_store2_noabort(i32 %96)
  store i16 %conv133, ptr %89, align 2
  %call134 = call i32 @tty_do_resize(ptr noundef nonnull %tty, ptr noundef nonnull %ws) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %ws) #21
  br label %if.end135

if.end135:                                        ; preds = %if.then129, %if.end9.i.if.end135_crit_edge
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %97 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %97)
  %tobool.not.i303 = icmp eq i32 %97, 0
  br i1 %tobool.not.i303, label %land.lhs.true.i, label %if.end135.con_is_visible.exit_crit_edge

if.end135.con_is_visible.exit_crit_edge:          ; preds = %if.end135
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit

land.lhs.true.i:                                  ; preds = %if.end135
  %call1.i = call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %land.rhs.i, label %land.lhs.true.i.con_is_visible.exit_crit_edge

land.lhs.true.i.con_is_visible.exit_crit_edge:    ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit

land.rhs.i:                                       ; preds = %land.lhs.true.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %98 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %98)
  %tobool3.not.i304 = icmp eq i32 %98, 0
  br i1 %tobool3.not.i304, label %do.end.i, label %land.rhs.i.con_is_visible.exit_crit_edge, !prof !365

land.rhs.i.con_is_visible.exit_crit_edge:         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4012, i32 noundef 9, ptr noundef null) #21
  br label %con_is_visible.exit

con_is_visible.exit:                              ; preds = %do.end.i, %land.rhs.i.con_is_visible.exit_crit_edge, %land.lhs.true.i.con_is_visible.exit_crit_edge, %if.end135.con_is_visible.exit_crit_edge
  %vc_display_fg.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 47
  %99 = ptrtoint ptr %vc_display_fg.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %vc_display_fg.i, align 4
  %101 = ptrtoint ptr %100 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %100, align 4
  %cmp.i305 = icmp eq ptr %102, %vc
  br i1 %cmp.i305, label %if.then137, label %con_is_visible.exit.if.end138_crit_edge

con_is_visible.exit.if.end138_crit_edge:          ; preds = %con_is_visible.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end138

if.then137:                                       ; preds = %con_is_visible.exit
  call void @__sanitizer_cov_trace_pc() #23
  call void @redraw_screen(ptr noundef %vc, i32 noundef 0)
  br label %if.end138

if.end138:                                        ; preds = %if.then137, %con_is_visible.exit.if.end138_crit_edge
  %vc_num = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 3
  %103 = ptrtoint ptr %vc_num to i32
  call void @__asan_load2_noabort(i32 %103)
  %104 = load i16, ptr %vc_num, align 4
  %conv139 = zext i16 %104 to i32
  call void @vt_event_post(i32 noundef 8, i32 noundef %conv139, i32 noundef %conv139) #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param.i) #21
  %105 = getelementptr inbounds %struct.vt_notifier_param, ptr %param.i, i32 0, i32 1
  %106 = ptrtoint ptr %param.i to i32
  call void @__asan_store4_noabort(i32 %106)
  store ptr %vc, ptr %param.i, align 4
  %107 = ptrtoint ptr %105 to i32
  call void @__asan_store4_noabort(i32 %107)
  store i32 0, ptr %105, align 4
  %call.i306 = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 4, ptr noundef nonnull %param.i) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param.i) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end138, %if.then67, %if.then58, %if.end8.i.i.cleanup_crit_edge, %if.end44.cleanup_crit_edge, %if.then.i, %if.then42.cleanup_crit_edge, %if.end26.cleanup_crit_edge, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i285, %if.then67 ], [ 0, %if.end138 ], [ -12, %if.then58 ], [ -6, %if.end.cleanup_crit_edge ], [ -22, %if.end26.cleanup_crit_edge ], [ -22, %if.end44.cleanup_crit_edge ], [ -12, %if.end8.i.i.cleanup_crit_edge ], [ %call.i, %if.then.i ], [ 0, %if.then42.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @vc_deallocate(i32 noundef %currcons) local_unnamed_addr #0 align 64 {
entry:
  %param = alloca %struct.vt_notifier_param, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %0 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.rhs, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %land.lhs.true
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %1 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool3.not = icmp eq i32 %1, 0
  br i1 %tobool3.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !365

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1392, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 63, i32 %currcons)
  %cmp.i = icmp ult i32 %currcons, 63
  br i1 %cmp.i, label %vc_cons_allocated.exit, label %if.end.if.end31_crit_edge

if.end.if.end31_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end31

vc_cons_allocated.exit:                           ; preds = %if.end
  %arrayidx.i = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %currcons
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx.i, align 4
  %tobool.i.not = icmp eq ptr %3, null
  br i1 %tobool.i.not, label %vc_cons_allocated.exit.if.end31_crit_edge, label %if.then26

vc_cons_allocated.exit.if.end31_crit_edge:        ; preds = %vc_cons_allocated.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end31

if.then26:                                        ; preds = %vc_cons_allocated.exit
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param) #21
  %4 = getelementptr inbounds %struct.vt_notifier_param, ptr %param, i32 0, i32 1
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 -1, ptr %4, align 4, !annotation !367
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx.i, align 4
  %8 = ptrtoint ptr %param to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %7, ptr %param, align 4
  %call28 = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 2, ptr noundef nonnull %param) #21
  call void @vcs_remove_sysfs(i32 noundef %currcons) #21
  %vc_sw.i = getelementptr inbounds %struct.vc_data, ptr %7, i32 0, i32 14
  %9 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %vc_sw.i, align 4
  %con_deinit.i = getelementptr inbounds %struct.consw, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %con_deinit.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %con_deinit.i, align 4
  call void %12(ptr noundef %7) #21
  %13 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %vc_sw.i, align 4
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %14, align 4
  call void @module_put(ptr noundef %16) #21
  call void @con_free_unimap(ptr noundef %7) #21
  %vt_pid = getelementptr inbounds %struct.vc_data, ptr %7, i32 0, i32 34
  %17 = ptrtoint ptr %vt_pid to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %vt_pid, align 4
  call void @put_pid(ptr noundef %18) #21
  %vc_uni_screen.i = getelementptr inbounds %struct.vc_data, ptr %7, i32 0, i32 50
  %19 = ptrtoint ptr %vc_uni_screen.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %vc_uni_screen.i, align 4
  call void @vfree(ptr noundef %20) #21
  %21 = ptrtoint ptr %vc_uni_screen.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %vc_uni_screen.i, align 4
  %vc_screenbuf = getelementptr inbounds %struct.vc_data, ptr %7, i32 0, i32 15
  %22 = ptrtoint ptr %vc_screenbuf to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %vc_screenbuf, align 4
  call void @kfree(ptr noundef %23) #21
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr null, ptr %arrayidx.i, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param) #21
  br label %if.end31

if.end31:                                         ; preds = %if.then26, %vc_cons_allocated.exit.if.end31_crit_edge, %if.end.if.end31_crit_edge
  %vc.0 = phi ptr [ %7, %if.then26 ], [ null, %vc_cons_allocated.exit.if.end31_crit_edge ], [ null, %if.end.if.end31_crit_edge ]
  ret ptr %vc.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @vcs_remove_sysfs(i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @con_free_unimap(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_pid(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @scrollback(ptr nocapture noundef readonly %vc) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %vc_rows = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 5
  %0 = ptrtoint ptr %vc_rows to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vc_rows, align 4
  %div1 = lshr i32 %1, 1
  %2 = load i32, ptr @scrollback_delta, align 4
  %add.i = sub i32 %2, %div1
  store i32 %add.i, ptr @scrollback_delta, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %3 = load ptr, ptr @system_wq, align 4
  %call.i.i.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %3, ptr noundef nonnull @console_work) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @scrollfront(ptr nocapture noundef readonly %vc, i32 noundef %lines) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %lines)
  %tobool.not = icmp eq i32 %lines, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %vc_rows = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 5
  %0 = ptrtoint ptr %vc_rows to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vc_rows, align 4
  %div2 = lshr i32 %1, 1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %lines.addr.0 = phi i32 [ %lines, %entry.if.end_crit_edge ], [ %div2, %if.then ]
  %2 = load i32, ptr @scrollback_delta, align 4
  %add.i = add i32 %2, %lines.addr.0
  store i32 %add.i, ptr @scrollback_delta, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %3 = load ptr, ptr @system_wq, align 4
  %call.i.i.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %3, ptr noundef nonnull @console_work) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @mouse_report(ptr nocapture noundef readonly %tty, i32 noundef %butt, i32 noundef %mrx, i32 noundef %mry) local_unnamed_addr #0 align 64 {
entry:
  %buf = alloca [8 x i8], align 8
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %buf) #21
  %conv = add i32 %butt, 32
  %conv1 = and i32 %conv, 255
  %conv3 = add i32 %mrx, 33
  %conv4 = and i32 %conv3, 255
  %conv6 = add i32 %mry, 33
  %conv7 = and i32 %conv6, 255
  %0 = ptrtoint ptr %buf to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 -1, ptr %buf, align 8
  %call = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %buf, ptr noundef nonnull @.str.3, i32 noundef %conv1, i32 noundef %conv4, i32 noundef %conv7)
  %port = getelementptr inbounds %struct.tty_struct, ptr %tty, i32 0, i32 37
  %1 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %port, align 4
  %call.i.i = call i32 @tty_insert_flip_string_fixed_flag(ptr noundef %2, ptr noundef nonnull %buf, i8 noundef zeroext 0, i32 noundef %call) #21
  call void @tty_flip_buffer_push(ptr noundef %2) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %buf) #21
  ret void
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @mouse_reporting() local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @fg_console, align 4
  %arrayidx = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %0
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %arrayidx, align 4
  %vc_report_mouse = getelementptr inbounds %struct.vc_data, ptr %2, i32 0, i32 37
  %3 = ptrtoint ptr %vc_report_mouse to i32
  call void @__asan_load2_noabort(i32 %3)
  %bf.load = load i16, ptr %vc_report_mouse, align 4
  %bf.lshr = lshr i16 %bf.load, 2
  %bf.clear = and i16 %bf.lshr, 3
  %bf.cast = zext i16 %bf.clear to i32
  ret i32 %bf.cast
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @set_console(i32 noundef %nr) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @fg_console, align 4
  %arrayidx = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %0
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 63, i32 %nr)
  %cmp.i = icmp ult i32 %nr, 63
  br i1 %cmp.i, label %vc_cons_allocated.exit, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

vc_cons_allocated.exit:                           ; preds = %entry
  %arrayidx.i = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %nr
  %3 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %arrayidx.i, align 4
  %tobool.i.not = icmp eq ptr %4, null
  br i1 %tobool.i.not, label %vc_cons_allocated.exit.cleanup_crit_edge, label %lor.lhs.false

vc_cons_allocated.exit.cleanup_crit_edge:         ; preds = %vc_cons_allocated.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

lor.lhs.false:                                    ; preds = %vc_cons_allocated.exit
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @vt_dont_switch to i32))
  %5 = load i8, ptr @vt_dont_switch, align 1, !range !368
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool1.not = icmp eq i8 %5, 0
  br i1 %tobool1.not, label %lor.lhs.false2, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %vt_mode = getelementptr inbounds %struct.vc_data, ptr %2, i32 0, i32 33
  %6 = ptrtoint ptr %vt_mode to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %vt_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %cmp = icmp eq i8 %7, 0
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false2.if.end_crit_edge

lor.lhs.false2.if.end_crit_edge:                  ; preds = %lor.lhs.false2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false2
  %vc_mode = getelementptr inbounds %struct.vc_data, ptr %2, i32 0, i32 17
  %8 = ptrtoint ptr %vc_mode to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %vc_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %9)
  %cmp5 = icmp eq i8 %9, 1
  br i1 %cmp5, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %lor.lhs.false2.if.end_crit_edge
  store i32 %nr, ptr @want_console, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %10 = load ptr, ptr @system_wq, align 4
  %call.i.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %10, ptr noundef nonnull @console_work) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end, %land.lhs.true.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %vc_cons_allocated.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -22, %land.lhs.true.cleanup_crit_edge ], [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %vc_cons_allocated.exit.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vt_kmsg_redirect(i32 noundef %new) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %new)
  %cmp.not = icmp eq i32 %new, -1
  br i1 %cmp.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %call.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull @vt_kmsg_redirect.kmsg_con, i32 noundef 4) #21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !369
  tail call void @llvm.prefetch.p0(ptr nonnull @vt_kmsg_redirect.kmsg_con, i32 1, i32 3, i32 1) #21
  %0 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 %new, ptr nonnull @vt_kmsg_redirect.kmsg_con) #21, !srcloc !370
  %asmresult.i = extractvalue { i32, i32 } %0, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !371
  br label %return

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %1 = load i32, ptr @vt_kmsg_redirect.kmsg_con, align 4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ %asmresult.i, %if.then ], [ %1, %if.else ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @tioclinux(ptr noundef %tty, i32 noundef %arg) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = inttoptr i32 %arg to ptr
  %1 = tail call i32 @llvm.read_register.i32(metadata !355) #21
  %and.i147 = and i32 %1, -16384
  %2 = inttoptr i32 %and.i147 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task, align 8
  %signal = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 111
  %5 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %signal, align 16
  %tty1 = getelementptr inbounds %struct.signal_struct, ptr %6, i32 0, i32 25
  %7 = ptrtoint ptr %tty1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %tty1, align 8
  %cmp.not = icmp eq ptr %8, %tty
  br i1 %cmp.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %call2 = tail call zeroext i1 @capable(i32 noundef 21) #21
  br i1 %call2, label %land.lhs.true.if.end_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  tail call void @__might_fault(ptr noundef nonnull @.str, i32 noundef 3193) #21
  %9 = tail call i32 @llvm.read_register.i32(metadata !355) #21
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 4
  %11 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #14, !srcloc !372
  %and.i = and i32 %11, -13
  %or.i = or i32 %and.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #21, !srcloc !373
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #21, !srcloc !374
  %12 = tail call { i32, i32 } asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__get_user_1", "=&{r0},={r2},{r0},{r1},~{lr},~{cc}"(ptr %0, i32 -1226833921) #21, !srcloc !375
  %asmresult = extractvalue { i32, i32 } %12, 0
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %11) #21, !srcloc !373
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #21, !srcloc !374
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult)
  %tobool.not = icmp eq i32 %asmresult, 0
  br i1 %tobool.not, label %if.end7, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %asmresult4 = extractvalue { i32, i32 } %12, 1
  %trunc = trunc i32 %asmresult4 to i8
  %13 = zext i8 %trunc to i64
  call void @__sanitizer_cov_trace_switch(i64 %13, ptr @__sancov_gen_cov_switch_values)
  switch i8 %trunc, label %if.end7.cleanup_crit_edge [
    i8 2, label %sw.bb
    i8 3, label %sw.bb10
    i8 4, label %sw.bb12
    i8 5, label %sw.bb13
    i8 6, label %sw.bb15
    i8 7, label %sw.bb27
    i8 10, label %sw.bb45
    i8 17, label %sw.bb47
    i8 11, label %sw.bb65
    i8 12, label %sw.bb89
    i8 13, label %sw.bb90
    i8 14, label %sw.bb108
    i8 15, label %sw.bb109
  ]

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

sw.bb:                                            ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  %add.ptr = getelementptr i8, ptr %0, i32 1
  %call9 = tail call i32 @set_selection_user(ptr noundef %add.ptr, ptr noundef %tty) #21
  br label %cleanup

sw.bb10:                                          ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  %call11 = tail call i32 @paste_selection(ptr noundef %tty) #21
  br label %cleanup

sw.bb12:                                          ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @console_lock() #21
  tail call void @do_unblank_screen(i32 noundef 0) #21
  tail call void @console_unlock() #21
  br label %cleanup

sw.bb13:                                          ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @console_lock() #21
  %call14 = tail call i32 @sel_loadlut(ptr noundef %0) #21
  tail call void @console_unlock() #21
  br label %cleanup

sw.bb15:                                          ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  %call16 = tail call i32 @vt_get_shift_state() #21
  %conv17 = trunc i32 %call16 to i8
  tail call void @__might_fault(ptr noundef nonnull @.str, i32 noundef 3225) #21
  %14 = tail call i32 @llvm.read_register.i32(metadata !355) #21
  %and.i.i.i127 = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i127 to ptr
  %cpu_domain.i.i128 = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 4
  %16 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i128) #14, !srcloc !372
  %and.i129 = and i32 %16, -13
  %or.i130 = or i32 %and.i129, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i130) #21, !srcloc !373
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #21, !srcloc !374
  %17 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_1", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %0, i8 %conv17, i32 -1226833921) #21, !srcloc !376
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %16) #21, !srcloc !373
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #21, !srcloc !374
  br label %cleanup

sw.bb27:                                          ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @console_lock() #21
  %18 = load i32, ptr @fg_console, align 4
  %arrayidx.i = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %18
  %19 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx.i, align 4
  %vc_report_mouse.i = getelementptr inbounds %struct.vc_data, ptr %20, i32 0, i32 37
  %21 = ptrtoint ptr %vc_report_mouse.i to i32
  call void @__asan_load2_noabort(i32 %21)
  %bf.load.i = load i16, ptr %vc_report_mouse.i, align 4
  %22 = trunc i16 %bf.load.i to i8
  %23 = lshr i8 %22, 2
  %conv29 = and i8 %23, 3
  tail call void @console_unlock() #21
  tail call void @__might_fault(ptr noundef nonnull @.str, i32 noundef 3231) #21
  %24 = tail call i32 @llvm.read_register.i32(metadata !355) #21
  %and.i.i.i131 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i131 to ptr
  %cpu_domain.i.i132 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 4
  %26 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i132) #14, !srcloc !372
  %and.i133 = and i32 %26, -13
  %or.i134 = or i32 %and.i133, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i134) #21, !srcloc !373
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #21, !srcloc !374
  %27 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_1", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %0, i8 %conv29, i32 -1226833921) #21, !srcloc !377
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %26) #21, !srcloc !373
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #21, !srcloc !374
  br label %cleanup

sw.bb45:                                          ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @console_lock() #21
  %call46 = tail call fastcc i32 @set_vesa_blanking(ptr noundef %0)
  tail call void @console_unlock() #21
  br label %cleanup

sw.bb47:                                          ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  %28 = load i32, ptr @vt_kmsg_redirect.kmsg_con, align 4
  %conv49 = trunc i32 %28 to i8
  tail call void @__might_fault(ptr noundef nonnull @.str, i32 noundef 3240) #21
  %29 = tail call i32 @llvm.read_register.i32(metadata !355) #21
  %and.i.i.i135 = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i135 to ptr
  %cpu_domain.i.i136 = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 4
  %31 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i136) #14, !srcloc !372
  %and.i137 = and i32 %31, -13
  %or.i138 = or i32 %and.i137, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i138) #21, !srcloc !373
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #21, !srcloc !374
  %32 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_1", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %0, i8 %conv49, i32 -1226833921) #21, !srcloc !378
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %31) #21, !srcloc !373
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #21, !srcloc !374
  br label %cleanup

sw.bb65:                                          ; preds = %if.end7
  %call66 = tail call zeroext i1 @capable(i32 noundef 21) #21
  br i1 %call66, label %if.else, label %sw.bb65.cleanup_crit_edge

sw.bb65.cleanup_crit_edge:                        ; preds = %sw.bb65
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.else:                                          ; preds = %sw.bb65
  tail call void @__might_fault(ptr noundef nonnull @.str, i32 noundef 3246) #21
  %add.ptr71 = getelementptr i8, ptr %0, i32 1
  %33 = tail call i32 @llvm.read_register.i32(metadata !355) #21
  %and.i.i.i139 = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i139 to ptr
  %cpu_domain.i.i140 = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 4
  %35 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i140) #14, !srcloc !372
  %and.i141 = and i32 %35, -13
  %or.i142 = or i32 %and.i141, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i142) #21, !srcloc !373
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #21, !srcloc !374
  %36 = tail call { i32, i32 } asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__get_user_1", "=&{r0},={r2},{r0},{r1},~{lr},~{cc}"(ptr %add.ptr71, i32 -1226833921) #21, !srcloc !379
  %asmresult78 = extractvalue { i32, i32 } %36, 0
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %35) #21, !srcloc !373
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #21, !srcloc !374
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult78)
  %tobool82.not = icmp eq i32 %asmresult78, 0
  br i1 %tobool82.not, label %if.else84, label %if.else.cleanup_crit_edge

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.else84:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  %asmresult79 = extractvalue { i32, i32 } %36, 1
  %conv85 = and i32 %asmresult79, 255
  %call86 = tail call i32 @vt_kmsg_redirect(i32 noundef %conv85)
  br label %cleanup

sw.bb89:                                          ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  %37 = load i32, ptr @fg_console, align 4
  br label %cleanup

sw.bb90:                                          ; preds = %if.end7
  tail call void @__might_fault(ptr noundef nonnull @.str, i32 noundef 3259) #21
  %add.ptr94 = getelementptr i8, ptr %0, i32 4
  %38 = tail call i32 @llvm.read_register.i32(metadata !355) #21
  %and.i.i.i143 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i143 to ptr
  %cpu_domain.i.i144 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 4
  %40 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i144) #14, !srcloc !372
  %and.i145 = and i32 %40, -13
  %or.i146 = or i32 %and.i145, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i146) #21, !srcloc !373
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #21, !srcloc !374
  %41 = tail call { i32, i32 } asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__get_user_4", "=&{r0},={r2},{r0},{r1},~{lr},~{cc}"(ptr %add.ptr94, i32 -1226833921) #21, !srcloc !380
  %asmresult101 = extractvalue { i32, i32 } %41, 0
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %40) #21, !srcloc !373
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #21, !srcloc !374
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult101)
  %tobool104.not = icmp eq i32 %asmresult101, 0
  br i1 %tobool104.not, label %if.else106, label %sw.bb90.cleanup_crit_edge

sw.bb90.cleanup_crit_edge:                        ; preds = %sw.bb90
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.else106:                                       ; preds = %sw.bb90
  call void @__sanitizer_cov_trace_pc() #23
  %asmresult102 = extractvalue { i32, i32 } %41, 1
  tail call void @console_lock() #21
  %42 = load i32, ptr @fg_console, align 4
  %arrayidx = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %42
  %43 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %arrayidx, align 4
  tail call void @scrollfront(ptr noundef %44, i32 noundef %asmresult102)
  tail call void @console_unlock() #21
  br label %cleanup

sw.bb108:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @console_lock() #21
  store i1 true, ptr @ignore_poke, align 4
  tail call void @do_blank_screen(i32 noundef 0)
  tail call void @console_unlock() #21
  br label %cleanup

sw.bb109:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  %45 = load i32, ptr @console_blanked, align 4
  br label %cleanup

cleanup:                                          ; preds = %sw.bb109, %sw.bb108, %if.else106, %sw.bb90.cleanup_crit_edge, %sw.bb89, %if.else84, %if.else.cleanup_crit_edge, %sw.bb65.cleanup_crit_edge, %sw.bb47, %sw.bb45, %sw.bb27, %sw.bb15, %sw.bb13, %sw.bb12, %sw.bb10, %sw.bb, %if.end7.cleanup_crit_edge, %if.end.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  %retval.0 = phi i32 [ -1, %land.lhs.true.cleanup_crit_edge ], [ -14, %if.end.cleanup_crit_edge ], [ %45, %sw.bb109 ], [ 0, %sw.bb108 ], [ 0, %if.else106 ], [ %37, %sw.bb89 ], [ 0, %if.else84 ], [ %32, %sw.bb47 ], [ %call46, %sw.bb45 ], [ %27, %sw.bb27 ], [ %17, %sw.bb15 ], [ %call14, %sw.bb13 ], [ 0, %sw.bb12 ], [ %call11, %sw.bb10 ], [ %call9, %sw.bb ], [ -1, %sw.bb65.cleanup_crit_edge ], [ -14, %if.else.cleanup_crit_edge ], [ -14, %sw.bb90.cleanup_crit_edge ], [ -22, %if.end7.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @capable(i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_fault(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @set_selection_user(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @paste_selection(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @console_lock() local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @unblank_screen() #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @do_unblank_screen(i32 noundef 0)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @console_unlock() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sel_loadlut(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vt_get_shift_state() local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @set_vesa_blanking(ptr noundef %p) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__might_fault(ptr noundef nonnull @.str, i32 noundef 4338) #21
  %add.ptr = getelementptr i8, ptr %p, i32 1
  %0 = tail call i32 @llvm.read_register.i32(metadata !355) #21
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 4
  %2 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #14, !srcloc !372
  %and.i = and i32 %2, -13
  %or.i = or i32 %and.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #21, !srcloc !373
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #21, !srcloc !374
  %3 = tail call { i32, i32 } asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__get_user_1", "=&{r0},={r2},{r0},{r1},~{lr},~{cc}"(ptr %add.ptr, i32 -1226833921) #21, !srcloc !381
  %asmresult = extractvalue { i32, i32 } %3, 0
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %2) #21, !srcloc !373
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #21, !srcloc !374
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult)
  %tobool.not = icmp eq i32 %asmresult, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %asmresult1 = extractvalue { i32, i32 } %3, 1
  %conv2 = and i32 %asmresult1, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %conv2)
  %cmp = icmp ult i32 %conv2, 4
  %spec.select = select i1 %cmp, i32 %conv2, i32 0
  store i32 %spec.select, ptr @vesa_blank_mode, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -14, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @do_blank_screen(i32 noundef %entering_gfx) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @fg_console, align 4
  %arrayidx = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %0
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %arrayidx, align 4
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 4350) #21
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %3 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %call4 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %land.rhs, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %land.lhs.true
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %4 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool6.not = icmp eq i32 %4, 0
  br i1 %tobool6.not, label %do.end18, label %land.rhs.if.end_crit_edge, !prof !365

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end18:                                         ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4352, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end18, %land.rhs.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %5 = load i32, ptr @console_blanked, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool30.not = icmp eq i32 %5, 0
  br i1 %tobool30.not, label %if.end35, label %if.then31

if.then31:                                        ; preds = %if.end
  %6 = load i32, ptr @blank_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %6)
  %cmp = icmp eq i32 %6, 2
  br i1 %cmp, label %if.then32, label %if.then31.cleanup_crit_edge

if.then31.cleanup_crit_edge:                      ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then32:                                        ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #23
  store i32 0, ptr @blank_state, align 4
  %vc_sw = getelementptr inbounds %struct.vc_data, ptr %2, i32 0, i32 14
  %7 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %vc_sw, align 4
  %con_blank = getelementptr inbounds %struct.consw, ptr %8, i32 0, i32 10
  %9 = ptrtoint ptr %con_blank to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %con_blank, align 4
  %11 = load i32, ptr @vesa_blank_mode, align 4
  %add = add i32 %11, 1
  %call33 = tail call i32 %10(ptr noundef %2, i32 noundef %add, i32 noundef 0) #21
  br label %cleanup

if.end35:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %entering_gfx)
  %tobool36.not = icmp eq i32 %entering_gfx, 0
  br i1 %tobool36.not, label %if.end42, label %if.then37

if.then37:                                        ; preds = %if.end35
  tail call fastcc void @hide_cursor(ptr noundef %2)
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %12 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not.i = icmp eq i32 %12, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.then37.if.end.i_crit_edge

if.then37.if.end.i_crit_edge:                     ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %if.then37
  %call1.i = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %land.rhs.i, label %land.lhs.true.i.if.end.i_crit_edge

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i:                                       ; preds = %land.lhs.true.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %13 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool3.not.i = icmp eq i32 %13, 0
  br i1 %tobool3.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !365

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 941, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %land.lhs.true.i.if.end.i_crit_edge, %if.then37.if.end.i_crit_edge
  %vc_sw.i = getelementptr inbounds %struct.vc_data, ptr %2, i32 0, i32 14
  %14 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %vc_sw.i, align 4
  %con_save_screen.i = getelementptr inbounds %struct.consw, ptr %15, i32 0, i32 18
  %16 = ptrtoint ptr %con_save_screen.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %con_save_screen.i, align 4
  %tobool24.not.i = icmp eq ptr %17, null
  br i1 %tobool24.not.i, label %if.end.i.save_screen.exit_crit_edge, label %if.then25.i

if.end.i.save_screen.exit_crit_edge:              ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %save_screen.exit

if.then25.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %17(ptr noundef %2) #21
  br label %save_screen.exit

save_screen.exit:                                 ; preds = %if.then25.i, %if.end.i.save_screen.exit_crit_edge
  %18 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %vc_sw.i, align 4
  %con_blank39 = getelementptr inbounds %struct.consw, ptr %19, i32 0, i32 10
  %20 = ptrtoint ptr %con_blank39 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %con_blank39, align 4
  %call40 = tail call i32 %21(ptr noundef %2, i32 noundef -1, i32 noundef 1) #21
  %22 = load i32, ptr @fg_console, align 4
  %add41 = add i32 %22, 1
  store i32 %add41, ptr @console_blanked, align 4
  store i32 0, ptr @blank_state, align 4
  tail call fastcc void @set_origin(ptr noundef %2)
  br label %cleanup

if.end42:                                         ; preds = %if.end35
  store i32 0, ptr @blank_state, align 4
  %vc_mode = getelementptr inbounds %struct.vc_data, ptr %2, i32 0, i32 17
  %23 = ptrtoint ptr %vc_mode to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %vc_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %24)
  %cmp43.not = icmp eq i8 %24, 0
  br i1 %cmp43.not, label %if.end47, label %if.then45

if.then45:                                        ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #23
  %25 = load i32, ptr @fg_console, align 4
  %add46 = add i32 %25, 1
  store i32 %add46, ptr @console_blanked, align 4
  br label %cleanup

if.end47:                                         ; preds = %if.end42
  tail call fastcc void @hide_cursor(ptr noundef %2)
  %call48 = tail call i32 @del_timer_sync(ptr noundef nonnull @console_timer) #21
  store i1 false, ptr @blank_timer_expired, align 4
  %call.i.i.i91 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %26 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool.not.i92 = icmp eq i32 %26, 0
  br i1 %tobool.not.i92, label %land.lhs.true.i95, label %if.end47.if.end.i102_crit_edge

if.end47.if.end.i102_crit_edge:                   ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i102

land.lhs.true.i95:                                ; preds = %if.end47
  %call1.i93 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i93)
  %tobool2.not.i94 = icmp eq i32 %call1.i93, 0
  br i1 %tobool2.not.i94, label %land.rhs.i97, label %land.lhs.true.i95.if.end.i102_crit_edge

land.lhs.true.i95.if.end.i102_crit_edge:          ; preds = %land.lhs.true.i95
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i102

land.rhs.i97:                                     ; preds = %land.lhs.true.i95
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %27 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool3.not.i96 = icmp eq i32 %27, 0
  br i1 %tobool3.not.i96, label %do.end.i98, label %land.rhs.i97.if.end.i102_crit_edge, !prof !365

land.rhs.i97.if.end.i102_crit_edge:               ; preds = %land.rhs.i97
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i102

do.end.i98:                                       ; preds = %land.rhs.i97
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 941, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i102

if.end.i102:                                      ; preds = %do.end.i98, %land.rhs.i97.if.end.i102_crit_edge, %land.lhs.true.i95.if.end.i102_crit_edge, %if.end47.if.end.i102_crit_edge
  %vc_sw.i99 = getelementptr inbounds %struct.vc_data, ptr %2, i32 0, i32 14
  %28 = ptrtoint ptr %vc_sw.i99 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %vc_sw.i99, align 4
  %con_save_screen.i100 = getelementptr inbounds %struct.consw, ptr %29, i32 0, i32 18
  %30 = ptrtoint ptr %con_save_screen.i100 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %con_save_screen.i100, align 4
  %tobool24.not.i101 = icmp eq ptr %31, null
  br i1 %tobool24.not.i101, label %if.end.i102.save_screen.exit104_crit_edge, label %if.then25.i103

if.end.i102.save_screen.exit104_crit_edge:        ; preds = %if.end.i102
  call void @__sanitizer_cov_trace_pc() #23
  br label %save_screen.exit104

if.then25.i103:                                   ; preds = %if.end.i102
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %31(ptr noundef %2) #21
  br label %save_screen.exit104

save_screen.exit104:                              ; preds = %if.then25.i103, %if.end.i102.save_screen.exit104_crit_edge
  %32 = ptrtoint ptr %vc_sw.i99 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %vc_sw.i99, align 4
  %con_blank50 = getelementptr inbounds %struct.consw, ptr %33, i32 0, i32 10
  %34 = ptrtoint ptr %con_blank50 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %con_blank50, align 4
  %36 = load i32, ptr @vesa_off_interval, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool51.not = icmp eq i32 %36, 0
  br i1 %tobool51.not, label %cond.false, label %save_screen.exit104.cond.end_crit_edge

save_screen.exit104.cond.end_crit_edge:           ; preds = %save_screen.exit104
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

cond.false:                                       ; preds = %save_screen.exit104
  call void @__sanitizer_cov_trace_pc() #23
  %37 = load i32, ptr @vesa_blank_mode, align 4
  %add52 = add i32 %37, 1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %save_screen.exit104.cond.end_crit_edge
  %cond = phi i32 [ %add52, %cond.false ], [ 1, %save_screen.exit104.cond.end_crit_edge ]
  %call53 = tail call i32 %35(ptr noundef %2, i32 noundef %cond, i32 noundef 0) #21
  %38 = load i32, ptr @fg_console, align 4
  %add54 = add i32 %38, 1
  store i32 %add54, ptr @console_blanked, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call53)
  %tobool55.not = icmp eq i32 %call53, 0
  br i1 %tobool55.not, label %cond.end.if.end57_crit_edge, label %if.then56

cond.end.if.end57_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end57

if.then56:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @set_origin(ptr noundef %2)
  br label %if.end57

if.end57:                                         ; preds = %if.then56, %cond.end.if.end57_crit_edge
  %39 = load ptr, ptr @console_blank_hook, align 4
  %tobool58.not = icmp eq ptr %39, null
  br i1 %tobool58.not, label %if.end57.if.end63_crit_edge, label %land.lhs.true59

if.end57.if.end63_crit_edge:                      ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end63

land.lhs.true59:                                  ; preds = %if.end57
  %call60 = tail call i32 %39(i32 noundef 1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true59.if.end63_crit_edge, label %land.lhs.true59.cleanup_crit_edge

land.lhs.true59.cleanup_crit_edge:                ; preds = %land.lhs.true59
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

land.lhs.true59.if.end63_crit_edge:               ; preds = %land.lhs.true59
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end63

if.end63:                                         ; preds = %land.lhs.true59.if.end63_crit_edge, %if.end57.if.end63_crit_edge
  %40 = load i32, ptr @vesa_off_interval, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool64.not = icmp eq i32 %40, 0
  br i1 %tobool64.not, label %if.end63.if.end70_crit_edge, label %land.lhs.true65

if.end63.if.end70_crit_edge:                      ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end70

land.lhs.true65:                                  ; preds = %if.end63
  %41 = load i32, ptr @vesa_blank_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool66.not = icmp eq i32 %41, 0
  br i1 %tobool66.not, label %land.lhs.true65.if.end70_crit_edge, label %if.then67

land.lhs.true65.if.end70_crit_edge:               ; preds = %land.lhs.true65
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end70

if.then67:                                        ; preds = %land.lhs.true65
  call void @__sanitizer_cov_trace_pc() #23
  store i32 2, ptr @blank_state, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %42 = load volatile i32, ptr @jiffies, align 128
  %add68 = add i32 %42, %40
  %call69 = tail call i32 @mod_timer(ptr noundef nonnull @console_timer, i32 noundef %add68) #21
  br label %if.end70

if.end70:                                         ; preds = %if.then67, %land.lhs.true65.if.end70_crit_edge, %if.end63.if.end70_crit_edge
  %vc_num = getelementptr inbounds %struct.vc_data, ptr %2, i32 0, i32 3
  %43 = ptrtoint ptr %vc_num to i32
  call void @__asan_load2_noabort(i32 %43)
  %44 = load i16, ptr %vc_num, align 4
  %conv71 = zext i16 %44 to i32
  tail call void @vt_event_post(i32 noundef 2, i32 noundef %conv71, i32 noundef %conv71) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end70, %land.lhs.true59.cleanup_crit_edge, %if.then45, %save_screen.exit, %if.then32, %if.then31.cleanup_crit_edge
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @con_init() #6 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @console_lock() #21
  %0 = load ptr, ptr @conswitchp, align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  store ptr @dummy_con, ptr @conswitchp, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %1 = load ptr, ptr @conswitchp, align 4
  %con_startup = getelementptr inbounds %struct.consw, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %con_startup to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %con_startup, align 4
  %call = tail call ptr %3() #21
  %tobool1.not = icmp eq ptr %call, null
  br i1 %tobool1.not, label %if.then2, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  store i32 0, ptr @fg_console, align 4
  tail call void @console_unlock() #21
  br label %cleanup50

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end.for.body_crit_edge
  %i.097 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %if.end.for.body_crit_edge ]
  %arrayidx = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.097
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  %cmp4 = icmp eq ptr %5, null
  br i1 %cmp4, label %cleanup, label %for.inc

cleanup:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %6 = load ptr, ptr @conswitchp, align 4
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %6, ptr %arrayidx, align 4
  %desc = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.097, i32 1
  %8 = ptrtoint ptr %desc to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %call, ptr %desc, align 4
  %flag = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.097, i32 6
  %9 = ptrtoint ptr %flag to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 2, ptr %flag, align 4
  %first = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.097, i32 4
  %10 = ptrtoint ptr %first to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %first, align 4
  %last = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.097, i32 5
  %11 = ptrtoint ptr %last to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 62, ptr %last, align 4
  br label %for.end

for.inc:                                          ; preds = %for.body
  %inc = add nuw nsw i32 %i.097, 1
  %exitcond.not = icmp eq i32 %inc, 16
  br i1 %exitcond.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %cleanup
  %12 = load ptr, ptr @conswitchp, align 4
  br label %for.body10

for.body10:                                       ; preds = %for.body10.for.body10_crit_edge, %for.end
  %i.198 = phi i32 [ 0, %for.end ], [ %inc13, %for.body10.for.body10_crit_edge ]
  %arrayidx11 = getelementptr [63 x ptr], ptr @con_driver_map, i32 0, i32 %i.198
  %13 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %12, ptr %arrayidx11, align 4
  %inc13 = add nuw nsw i32 %i.198, 1
  %exitcond101.not = icmp eq i32 %inc13, 63
  br i1 %exitcond101.not, label %for.end14, label %for.body10.for.body10_crit_edge

for.body10.for.body10_crit_edge:                  ; preds = %for.body10
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body10

for.end14:                                        ; preds = %for.body10
  %14 = load i32, ptr @blankinterval, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool15.not = icmp eq i32 %14, 0
  br i1 %tobool15.not, label %for.end14.if.end18_crit_edge, label %if.then16

for.end14.if.end18_crit_edge:                     ; preds = %for.end14
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end18

if.then16:                                        ; preds = %for.end14
  call void @__sanitizer_cov_trace_pc() #23
  store i32 1, ptr @blank_state, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %15 = load volatile i32, ptr @jiffies, align 128
  %mul = mul i32 %14, 100
  %add = add i32 %15, %mul
  %call17 = tail call i32 @mod_timer(ptr noundef nonnull @console_timer, i32 noundef %add) #21
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %for.end14.if.end18_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %16 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %16, i32 noundef 2304, i32 noundef 980) #25
  store ptr %call7.i.i, ptr @vc_cons, align 4
  tail call void @__init_work(ptr noundef getelementptr inbounds ([63 x %struct.vc], ptr @vc_cons, i32 0, i32 0, i32 1), i32 noundef 0) #21
  store i32 -64, ptr getelementptr inbounds ([63 x %struct.vc], ptr @vc_cons, i32 0, i32 0, i32 1), align 4
  tail call void @lockdep_init_map_type(ptr noundef getelementptr inbounds ([63 x %struct.vc], ptr @vc_cons, i32 0, i32 0, i32 1, i32 3), ptr noundef nonnull @.str.2, ptr noundef nonnull @con_init.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #21
  store volatile ptr getelementptr inbounds ([63 x %struct.vc], ptr @vc_cons, i32 0, i32 0, i32 1, i32 1), ptr getelementptr inbounds ([63 x %struct.vc], ptr @vc_cons, i32 0, i32 0, i32 1, i32 1), align 4
  store ptr getelementptr inbounds ([63 x %struct.vc], ptr @vc_cons, i32 0, i32 0, i32 1, i32 1), ptr getelementptr inbounds ([63 x %struct.vc], ptr @vc_cons, i32 0, i32 0, i32 1, i32 1, i32 1), align 4
  store ptr @vc_SAK, ptr getelementptr inbounds ([63 x %struct.vc], ptr @vc_cons, i32 0, i32 0, i32 1, i32 2), align 4
  tail call void @tty_port_init(ptr noundef %call7.i.i) #21
  tail call fastcc void @visual_init(ptr noundef %call7.i.i, i32 noundef 0, i32 noundef 1)
  %vc_screenbuf_size = getelementptr inbounds %struct.vc_data, ptr %call7.i.i, i32 0, i32 16
  %17 = ptrtoint ptr %vc_screenbuf_size to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %vc_screenbuf_size, align 4
  %call9.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %18, i32 noundef 2304) #24
  %vc_screenbuf = getelementptr inbounds %struct.vc_data, ptr %call7.i.i, i32 0, i32 15
  %19 = ptrtoint ptr %vc_screenbuf to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %call9.i.i, ptr %vc_screenbuf, align 8
  %vc_rows = getelementptr inbounds %struct.vc_data, ptr %call7.i.i, i32 0, i32 5
  %20 = ptrtoint ptr %vc_rows to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %vc_rows, align 8
  %vc_cols = getelementptr inbounds %struct.vc_data, ptr %call7.i.i, i32 0, i32 4
  %22 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %vc_cols, align 4
  %vc_sw = getelementptr inbounds %struct.vc_data, ptr %call7.i.i, i32 0, i32 14
  %24 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %vc_sw, align 4
  %con_save_screen = getelementptr inbounds %struct.consw, ptr %25, i32 0, i32 18
  %26 = ptrtoint ptr %con_save_screen to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %con_save_screen, align 4
  %tobool36.not = icmp eq ptr %27, null
  %lor.ext = zext i1 %tobool36.not to i32
  tail call fastcc void @vc_init(ptr noundef %call7.i.i, i32 noundef %21, i32 noundef %23, i32 noundef %lor.ext)
  store i32 0, ptr @fg_console, align 4
  %28 = load ptr, ptr @vc_cons, align 4
  store ptr %28, ptr @master_display_fg, align 4
  tail call fastcc void @set_origin(ptr noundef %28)
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %29 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool.not.i = icmp eq i32 %29, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.end18.if.end.i_crit_edge

if.end18.if.end.i_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %if.end18
  %call1.i = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %land.rhs.i, label %land.lhs.true.i.if.end.i_crit_edge

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i:                                       ; preds = %land.lhs.true.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %30 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool3.not.i = icmp eq i32 %30, 0
  br i1 %tobool3.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !365

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 941, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %land.lhs.true.i.if.end.i_crit_edge, %if.end18.if.end.i_crit_edge
  %vc_sw.i = getelementptr inbounds %struct.vc_data, ptr %28, i32 0, i32 14
  %31 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %vc_sw.i, align 4
  %con_save_screen.i = getelementptr inbounds %struct.consw, ptr %32, i32 0, i32 18
  %33 = ptrtoint ptr %con_save_screen.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %con_save_screen.i, align 4
  %tobool24.not.i = icmp eq ptr %34, null
  br i1 %tobool24.not.i, label %if.end.i.save_screen.exit_crit_edge, label %if.then25.i

if.end.i.save_screen.exit_crit_edge:              ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %save_screen.exit

if.then25.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %34(ptr noundef %28) #21
  br label %save_screen.exit

save_screen.exit:                                 ; preds = %if.then25.i, %if.end.i.save_screen.exit_crit_edge
  %state = getelementptr inbounds %struct.vc_data, ptr %28, i32 0, i32 1
  %35 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %state, align 4
  %y = getelementptr inbounds %struct.vc_data, ptr %28, i32 0, i32 1, i32 1
  %37 = ptrtoint ptr %y to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %y, align 4
  tail call fastcc void @gotoxy(ptr noundef %28, i32 noundef %36, i32 noundef %38)
  tail call fastcc void @csi_J(ptr noundef %28, i32 noundef 0)
  tail call void @redraw_screen(ptr noundef %28, i32 noundef 0)
  %vc_can_do_color = getelementptr inbounds %struct.vc_data, ptr %28, i32 0, i32 37
  %39 = ptrtoint ptr %vc_can_do_color to i32
  call void @__asan_load2_noabort(i32 %39)
  %bf.load = load i16, ptr %vc_can_do_color, align 4
  %40 = and i16 %bf.load, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %40)
  %tobool46.not = icmp eq i16 %40, 0
  %cond = select i1 %tobool46.not, ptr @.str.22, ptr @.str.21
  %vc_cols47 = getelementptr inbounds %struct.vc_data, ptr %28, i32 0, i32 4
  %41 = ptrtoint ptr %vc_cols47 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %vc_cols47, align 4
  %vc_rows48 = getelementptr inbounds %struct.vc_data, ptr %28, i32 0, i32 5
  %43 = ptrtoint ptr %vc_rows48 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %vc_rows48, align 4
  %call49 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.19, ptr noundef nonnull %cond, ptr noundef nonnull %call, i32 noundef %42, i32 noundef %44) #26
  store i1 true, ptr @printable, align 4
  tail call void @console_unlock() #21
  tail call void @register_console(ptr noundef nonnull @vt_console_driver) #21
  br label %cleanup50

cleanup50:                                        ; preds = %save_screen.exit, %if.then2
  ret i32 0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local i32 @vty_init(ptr noundef %console_fops) local_unnamed_addr #6 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @cdev_init(ptr noundef nonnull @vc0_cdev, ptr noundef %console_fops) #21
  %call = tail call i32 @cdev_add(ptr noundef nonnull @vc0_cdev, i32 noundef 4194304, i32 noundef 1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.if.then_crit_edge

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call i32 @register_chrdev_region(i32 noundef 4194304, i32 noundef 1, ptr noundef nonnull @.str.4) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %cmp = icmp slt i32 %call1, 0
  br i1 %cmp, label %lor.lhs.false.if.then_crit_edge, label %if.end

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %entry.if.then_crit_edge
  call void @__asan_handle_no_return()
  tail call void (ptr, ...) @panic(ptr noundef nonnull @.str.5) #27
  unreachable

if.end:                                           ; preds = %lor.lhs.false
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @tty_class to i32))
  %0 = load ptr, ptr @tty_class, align 4
  %call2 = tail call ptr (ptr, ptr, i32, ptr, ptr, ptr, ...) @device_create_with_groups(ptr noundef %0, ptr noundef null, i32 noundef 4194304, ptr noundef null, ptr noundef nonnull @vt_dev_groups, ptr noundef nonnull @.str.6) #21
  %cmp.i = icmp ugt ptr %call2, inttoptr (i32 -4096 to ptr)
  %spec.store.select = select i1 %cmp.i, ptr null, ptr %call2
  store ptr %spec.store.select, ptr @tty0dev, align 4
  %call6 = tail call i32 @vcs_init() #21
  %call7 = tail call ptr @__tty_alloc_driver(i32 noundef 63, ptr noundef null, i32 noundef 6) #21
  store ptr %call7, ptr @console_driver, align 4
  %cmp.i20 = icmp ugt ptr %call7, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i20, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_handle_no_return()
  tail call void (ptr, ...) @panic(ptr noundef nonnull @.str.7) #27
  unreachable

if.end10:                                         ; preds = %if.end
  %name = getelementptr inbounds %struct.tty_driver, ptr %call7, i32 0, i32 5
  %1 = ptrtoint ptr %name to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr @.str.8, ptr %name, align 4
  %name_base = getelementptr inbounds %struct.tty_driver, ptr %call7, i32 0, i32 6
  %2 = ptrtoint ptr %name_base to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 1, ptr %name_base, align 4
  %major = getelementptr inbounds %struct.tty_driver, ptr %call7, i32 0, i32 7
  %3 = ptrtoint ptr %major to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 4, ptr %major, align 4
  %minor_start = getelementptr inbounds %struct.tty_driver, ptr %call7, i32 0, i32 8
  %4 = ptrtoint ptr %minor_start to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 1, ptr %minor_start, align 4
  %type = getelementptr inbounds %struct.tty_driver, ptr %call7, i32 0, i32 10
  %5 = ptrtoint ptr %type to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 2, ptr %type, align 4
  %init_termios = getelementptr inbounds %struct.tty_driver, ptr %call7, i32 0, i32 12
  %6 = call ptr @memcpy(ptr %init_termios, ptr @tty_std_termios, i32 44)
  %7 = load i32, ptr @default_utf8, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool11.not = icmp eq i32 %7, 0
  br i1 %tobool11.not, label %if.end10.if.end14_crit_edge, label %if.then12

if.end10.if.end14_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end14

if.then12:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #23
  %8 = ptrtoint ptr %init_termios to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %init_termios, align 4
  %or = or i32 %9, 16384
  store i32 %or, ptr %init_termios, align 4
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end10.if.end14_crit_edge
  %ops.i = getelementptr inbounds %struct.tty_driver, ptr %call7, i32 0, i32 20
  %10 = ptrtoint ptr %ops.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @con_ops, ptr %ops.i, align 4
  %call15 = tail call i32 @tty_register_driver(ptr noundef %call7) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %if.end18, label %if.then17

if.then17:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_handle_no_return()
  tail call void (ptr, ...) @panic(ptr noundef nonnull @.str.9) #27
  unreachable

if.end18:                                         ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #23
  %call19 = tail call i32 @kbd_init() #21
  tail call void @console_map_init() #21
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @cdev_init(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @cdev_add(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_chrdev_region(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: cold noreturn null_pointer_is_valid
declare dso_local void @panic(ptr noundef, ...) local_unnamed_addr #7

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @device_create_with_groups(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vcs_init() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__tty_alloc_driver(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tty_register_driver(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kbd_init() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @console_map_init() local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @do_unbind_con_driver(ptr noundef readonly %csw, i32 noundef %first, i32 noundef %last, i32 noundef %deflt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %csw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %csw, align 4
  %call = tail call zeroext i1 @try_module_get(ptr noundef %1) #21
  br i1 %call, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %2 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %land.lhs.true, label %if.end.for.body.preheader_crit_edge

if.end.for.body.preheader_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.preheader

land.lhs.true:                                    ; preds = %if.end
  %call4 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %land.rhs, label %land.lhs.true.for.body.preheader_crit_edge

land.lhs.true.for.body.preheader_crit_edge:       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.preheader

land.rhs:                                         ; preds = %land.lhs.true
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %3 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool6.not = icmp eq i32 %3, 0
  br i1 %tobool6.not, label %do.end, label %land.rhs.for.body.preheader_crit_edge, !prof !365

land.rhs.for.body.preheader_crit_edge:            ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.preheader

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3743, i32 noundef 9, ptr noundef null) #21
  br label %for.body.preheader

for.body.preheader:                               ; preds = %do.end, %land.rhs.for.body.preheader_crit_edge, %land.lhs.true.for.body.preheader_crit_edge, %if.end.for.body.preheader_crit_edge
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.preheader
  %i.0192 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %arrayidx = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.0192
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  %cmp29 = icmp eq ptr %5, %csw
  br i1 %cmp29, label %land.lhs.true30, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

land.lhs.true30:                                  ; preds = %for.body
  %flag = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.0192, i32 6
  %6 = ptrtoint ptr %flag to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flag, align 4
  %and = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool31.not = icmp eq i32 %and, 0
  br i1 %tobool31.not, label %land.lhs.true30.for.inc_crit_edge, label %for.cond37.preheader

land.lhs.true30.for.inc_crit_edge:                ; preds = %land.lhs.true30
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

for.cond37.preheader:                             ; preds = %land.lhs.true30
  %8 = load ptr, ptr @registered_con_driver, align 4
  %tobool42.not = icmp eq ptr %8, null
  %cmp45.not = icmp eq ptr %8, %csw
  %or.cond = or i1 %tobool42.not, %cmp45.not
  br i1 %or.cond, label %for.inc49, label %for.cond37.preheader.if.end54_crit_edge

for.cond37.preheader.if.end54_crit_edge:          ; preds = %for.cond37.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54

for.inc:                                          ; preds = %land.lhs.true30.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.0192, 1
  %exitcond.not = icmp eq i32 %inc, 16
  br i1 %exitcond.not, label %for.inc.err_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.inc.err_crit_edge:                            ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %err

for.inc49:                                        ; preds = %for.cond37.preheader
  %9 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 1), align 4
  %tobool42.not.1 = icmp eq ptr %9, null
  %cmp45.not.1 = icmp eq ptr %9, %csw
  %or.cond.1 = or i1 %tobool42.not.1, %cmp45.not.1
  br i1 %or.cond.1, label %for.inc49.1, label %for.inc49.if.end54_crit_edge

for.inc49.if.end54_crit_edge:                     ; preds = %for.inc49
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54

for.inc49.1:                                      ; preds = %for.inc49
  %10 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 2), align 4
  %tobool42.not.2 = icmp eq ptr %10, null
  %cmp45.not.2 = icmp eq ptr %10, %csw
  %or.cond.2 = or i1 %tobool42.not.2, %cmp45.not.2
  br i1 %or.cond.2, label %for.inc49.2, label %for.inc49.1.if.end54_crit_edge

for.inc49.1.if.end54_crit_edge:                   ; preds = %for.inc49.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54

for.inc49.2:                                      ; preds = %for.inc49.1
  %11 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 3), align 4
  %tobool42.not.3 = icmp eq ptr %11, null
  %cmp45.not.3 = icmp eq ptr %11, %csw
  %or.cond.3 = or i1 %tobool42.not.3, %cmp45.not.3
  br i1 %or.cond.3, label %for.inc49.3, label %for.inc49.2.if.end54_crit_edge

for.inc49.2.if.end54_crit_edge:                   ; preds = %for.inc49.2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54

for.inc49.3:                                      ; preds = %for.inc49.2
  %12 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 4), align 4
  %tobool42.not.4 = icmp eq ptr %12, null
  %cmp45.not.4 = icmp eq ptr %12, %csw
  %or.cond.4 = or i1 %tobool42.not.4, %cmp45.not.4
  br i1 %or.cond.4, label %for.inc49.4, label %for.inc49.3.if.end54_crit_edge

for.inc49.3.if.end54_crit_edge:                   ; preds = %for.inc49.3
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54

for.inc49.4:                                      ; preds = %for.inc49.3
  %13 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 5), align 4
  %tobool42.not.5 = icmp eq ptr %13, null
  %cmp45.not.5 = icmp eq ptr %13, %csw
  %or.cond.5 = or i1 %tobool42.not.5, %cmp45.not.5
  br i1 %or.cond.5, label %for.inc49.5, label %for.inc49.4.if.end54_crit_edge

for.inc49.4.if.end54_crit_edge:                   ; preds = %for.inc49.4
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54

for.inc49.5:                                      ; preds = %for.inc49.4
  %14 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 6), align 4
  %tobool42.not.6 = icmp eq ptr %14, null
  %cmp45.not.6 = icmp eq ptr %14, %csw
  %or.cond.6 = or i1 %tobool42.not.6, %cmp45.not.6
  br i1 %or.cond.6, label %for.inc49.6, label %for.inc49.5.if.end54_crit_edge

for.inc49.5.if.end54_crit_edge:                   ; preds = %for.inc49.5
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54

for.inc49.6:                                      ; preds = %for.inc49.5
  %15 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 7), align 4
  %tobool42.not.7 = icmp eq ptr %15, null
  %cmp45.not.7 = icmp eq ptr %15, %csw
  %or.cond.7 = or i1 %tobool42.not.7, %cmp45.not.7
  br i1 %or.cond.7, label %for.inc49.7, label %for.inc49.6.if.end54_crit_edge

for.inc49.6.if.end54_crit_edge:                   ; preds = %for.inc49.6
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54

for.inc49.7:                                      ; preds = %for.inc49.6
  %16 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 8), align 4
  %tobool42.not.8 = icmp eq ptr %16, null
  %cmp45.not.8 = icmp eq ptr %16, %csw
  %or.cond.8 = or i1 %tobool42.not.8, %cmp45.not.8
  br i1 %or.cond.8, label %for.inc49.8, label %for.inc49.7.if.end54_crit_edge

for.inc49.7.if.end54_crit_edge:                   ; preds = %for.inc49.7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54

for.inc49.8:                                      ; preds = %for.inc49.7
  %17 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 9), align 4
  %tobool42.not.9 = icmp eq ptr %17, null
  %cmp45.not.9 = icmp eq ptr %17, %csw
  %or.cond.9 = or i1 %tobool42.not.9, %cmp45.not.9
  br i1 %or.cond.9, label %for.inc49.9, label %for.inc49.8.if.end54_crit_edge

for.inc49.8.if.end54_crit_edge:                   ; preds = %for.inc49.8
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54

for.inc49.9:                                      ; preds = %for.inc49.8
  %18 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 10), align 4
  %tobool42.not.10 = icmp eq ptr %18, null
  %cmp45.not.10 = icmp eq ptr %18, %csw
  %or.cond.10 = or i1 %tobool42.not.10, %cmp45.not.10
  br i1 %or.cond.10, label %for.inc49.10, label %for.inc49.9.if.end54_crit_edge

for.inc49.9.if.end54_crit_edge:                   ; preds = %for.inc49.9
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54

for.inc49.10:                                     ; preds = %for.inc49.9
  %19 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 11), align 4
  %tobool42.not.11 = icmp eq ptr %19, null
  %cmp45.not.11 = icmp eq ptr %19, %csw
  %or.cond.11 = or i1 %tobool42.not.11, %cmp45.not.11
  br i1 %or.cond.11, label %for.inc49.11, label %for.inc49.10.if.end54_crit_edge

for.inc49.10.if.end54_crit_edge:                  ; preds = %for.inc49.10
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54

for.inc49.11:                                     ; preds = %for.inc49.10
  %20 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 12), align 4
  %tobool42.not.12 = icmp eq ptr %20, null
  %cmp45.not.12 = icmp eq ptr %20, %csw
  %or.cond.12 = or i1 %tobool42.not.12, %cmp45.not.12
  br i1 %or.cond.12, label %for.inc49.12, label %for.inc49.11.if.end54_crit_edge

for.inc49.11.if.end54_crit_edge:                  ; preds = %for.inc49.11
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54

for.inc49.12:                                     ; preds = %for.inc49.11
  %21 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 13), align 4
  %tobool42.not.13 = icmp eq ptr %21, null
  %cmp45.not.13 = icmp eq ptr %21, %csw
  %or.cond.13 = or i1 %tobool42.not.13, %cmp45.not.13
  br i1 %or.cond.13, label %for.inc49.13, label %for.inc49.12.if.end54_crit_edge

for.inc49.12.if.end54_crit_edge:                  ; preds = %for.inc49.12
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54

for.inc49.13:                                     ; preds = %for.inc49.12
  %22 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 14), align 4
  %tobool42.not.14 = icmp eq ptr %22, null
  %cmp45.not.14 = icmp eq ptr %22, %csw
  %or.cond.14 = or i1 %tobool42.not.14, %cmp45.not.14
  br i1 %or.cond.14, label %for.inc49.14, label %for.inc49.13.if.end54_crit_edge

for.inc49.13.if.end54_crit_edge:                  ; preds = %for.inc49.13
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54

for.inc49.14:                                     ; preds = %for.inc49.13
  %23 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 15), align 4
  %tobool42.not.15 = icmp eq ptr %23, null
  %cmp45.not.15 = icmp eq ptr %23, %csw
  %or.cond.15 = or i1 %tobool42.not.15, %cmp45.not.15
  br i1 %or.cond.15, label %for.inc49.14.err_crit_edge, label %for.inc49.14.if.end54_crit_edge

for.inc49.14.if.end54_crit_edge:                  ; preds = %for.inc49.14
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54

for.inc49.14.err_crit_edge:                       ; preds = %for.inc49.14
  call void @__sanitizer_cov_trace_pc() #23
  br label %err

if.end54:                                         ; preds = %for.inc49.14.if.end54_crit_edge, %for.inc49.13.if.end54_crit_edge, %for.inc49.12.if.end54_crit_edge, %for.inc49.11.if.end54_crit_edge, %for.inc49.10.if.end54_crit_edge, %for.inc49.9.if.end54_crit_edge, %for.inc49.8.if.end54_crit_edge, %for.inc49.7.if.end54_crit_edge, %for.inc49.6.if.end54_crit_edge, %for.inc49.5.if.end54_crit_edge, %for.inc49.4.if.end54_crit_edge, %for.inc49.3.if.end54_crit_edge, %for.inc49.2.if.end54_crit_edge, %for.inc49.1.if.end54_crit_edge, %for.inc49.if.end54_crit_edge, %for.cond37.preheader.if.end54_crit_edge
  %i.1194.lcssa = phi i32 [ 0, %for.cond37.preheader.if.end54_crit_edge ], [ 1, %for.inc49.if.end54_crit_edge ], [ 2, %for.inc49.1.if.end54_crit_edge ], [ 3, %for.inc49.2.if.end54_crit_edge ], [ 4, %for.inc49.3.if.end54_crit_edge ], [ 5, %for.inc49.4.if.end54_crit_edge ], [ 6, %for.inc49.5.if.end54_crit_edge ], [ 7, %for.inc49.6.if.end54_crit_edge ], [ 8, %for.inc49.7.if.end54_crit_edge ], [ 9, %for.inc49.8.if.end54_crit_edge ], [ 10, %for.inc49.9.if.end54_crit_edge ], [ 11, %for.inc49.10.if.end54_crit_edge ], [ 12, %for.inc49.11.if.end54_crit_edge ], [ 13, %for.inc49.12.if.end54_crit_edge ], [ 14, %for.inc49.13.if.end54_crit_edge ], [ 15, %for.inc49.14.if.end54_crit_edge ]
  %.lcssa = phi ptr [ %8, %for.cond37.preheader.if.end54_crit_edge ], [ %9, %for.inc49.if.end54_crit_edge ], [ %10, %for.inc49.1.if.end54_crit_edge ], [ %11, %for.inc49.2.if.end54_crit_edge ], [ %12, %for.inc49.3.if.end54_crit_edge ], [ %13, %for.inc49.4.if.end54_crit_edge ], [ %14, %for.inc49.5.if.end54_crit_edge ], [ %15, %for.inc49.6.if.end54_crit_edge ], [ %16, %for.inc49.7.if.end54_crit_edge ], [ %17, %for.inc49.8.if.end54_crit_edge ], [ %18, %for.inc49.9.if.end54_crit_edge ], [ %19, %for.inc49.10.if.end54_crit_edge ], [ %20, %for.inc49.11.if.end54_crit_edge ], [ %21, %for.inc49.12.if.end54_crit_edge ], [ %22, %for.inc49.13.if.end54_crit_edge ], [ %23, %for.inc49.14.if.end54_crit_edge ]
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %24 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool.not.i = icmp eq i32 %24, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.end54.for.body.i.preheader_crit_edge

if.end54.for.body.i.preheader_crit_edge:          ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.preheader

land.lhs.true.i:                                  ; preds = %if.end54
  %call1.i = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %land.rhs.i, label %land.lhs.true.i.for.body.i.preheader_crit_edge

land.lhs.true.i.for.body.i.preheader_crit_edge:   ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.preheader

land.rhs.i:                                       ; preds = %land.lhs.true.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %25 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool3.not.i = icmp eq i32 %25, 0
  br i1 %tobool3.not.i, label %do.end.i, label %land.rhs.i.for.body.i.preheader_crit_edge, !prof !365

land.rhs.i.for.body.i.preheader_crit_edge:        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.preheader

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3991, i32 noundef 9, ptr noundef null) #21
  br label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %do.end.i, %land.rhs.i.for.body.i.preheader_crit_edge, %land.lhs.true.i.for.body.i.preheader_crit_edge, %if.end54.for.body.i.preheader_crit_edge
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %inc.i = add nuw nsw i32 %i.031.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 63
  br i1 %exitcond.not.i, label %for.cond.i.err_crit_edge, label %for.cond.i.for.body.i_crit_edge

for.cond.i.for.body.i_crit_edge:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.cond.i.err_crit_edge:                         ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %err

for.body.i:                                       ; preds = %for.cond.i.for.body.i_crit_edge, %for.body.i.preheader
  %i.031.i = phi i32 [ %inc.i, %for.cond.i.for.body.i_crit_edge ], [ 0, %for.body.i.preheader ]
  %arrayidx.i = getelementptr [63 x ptr], ptr @con_driver_map, i32 0, i32 %i.031.i
  %26 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx.i, align 4
  %cmp24.i = icmp eq ptr %27, %csw
  br i1 %cmp24.i, label %if.end58, label %for.cond.i

if.end58:                                         ; preds = %for.body.i
  %first59 = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.0192, i32 4
  %28 = ptrtoint ptr %first59 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %first59, align 4
  %30 = tail call i32 @llvm.smax.i32(i32 %29, i32 %first)
  %last62 = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.0192, i32 5
  %31 = ptrtoint ptr %last62 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %last62, align 4
  %33 = tail call i32 @llvm.smin.i32(i32 %32, i32 %last)
  call void @__sanitizer_cov_trace_cmp4(i32 %30, i32 %33)
  %cmp70.not195 = icmp sgt i32 %30, %33
  br i1 %cmp70.not195, label %if.end58.for.end80_crit_edge, label %if.end58.for.body71_crit_edge

if.end58.for.body71_crit_edge:                    ; preds = %if.end58
  br label %for.body71

if.end58.for.end80_crit_edge:                     ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end80

for.body71:                                       ; preds = %for.inc78.for.body71_crit_edge, %if.end58.for.body71_crit_edge
  %i.2196 = phi i32 [ %inc79, %for.inc78.for.body71_crit_edge ], [ %30, %if.end58.for.body71_crit_edge ]
  %arrayidx72 = getelementptr [63 x ptr], ptr @con_driver_map, i32 0, i32 %i.2196
  %34 = ptrtoint ptr %arrayidx72 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %arrayidx72, align 4
  %cmp73 = icmp eq ptr %35, %csw
  br i1 %cmp73, label %if.then74, label %for.body71.for.inc78_crit_edge

for.body71.for.inc78_crit_edge:                   ; preds = %for.body71
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc78

if.then74:                                        ; preds = %for.body71
  call void @__sanitizer_cov_trace_pc() #23
  %36 = ptrtoint ptr %csw to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %csw, align 4
  tail call void @module_put(ptr noundef %37) #21
  %38 = ptrtoint ptr %arrayidx72 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr null, ptr %arrayidx72, align 4
  br label %for.inc78

for.inc78:                                        ; preds = %if.then74, %for.body71.for.inc78_crit_edge
  %inc79 = add i32 %i.2196, 1
  %cmp70.not = icmp sgt i32 %inc79, %33
  br i1 %cmp70.not, label %for.inc78.for.end80_crit_edge, label %for.inc78.for.body71_crit_edge

for.inc78.for.body71_crit_edge:                   ; preds = %for.inc78
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body71

for.inc78.for.end80_crit_edge:                    ; preds = %for.inc78
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end80

for.end80:                                        ; preds = %for.inc78.for.end80_crit_edge, %if.end58.for.end80_crit_edge
  %call.i.i.i138 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %39 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool.not.i139 = icmp eq i32 %39, 0
  br i1 %tobool.not.i139, label %land.lhs.true.i142, label %for.end80.for.body.i153.preheader_crit_edge

for.end80.for.body.i153.preheader_crit_edge:      ; preds = %for.end80
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i153.preheader

land.lhs.true.i142:                               ; preds = %for.end80
  %call1.i140 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i140)
  %tobool2.not.i141 = icmp eq i32 %call1.i140, 0
  br i1 %tobool2.not.i141, label %land.rhs.i144, label %land.lhs.true.i142.for.body.i153.preheader_crit_edge

land.lhs.true.i142.for.body.i153.preheader_crit_edge: ; preds = %land.lhs.true.i142
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i153.preheader

land.rhs.i144:                                    ; preds = %land.lhs.true.i142
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %40 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool3.not.i143 = icmp eq i32 %40, 0
  br i1 %tobool3.not.i143, label %do.end.i145, label %land.rhs.i144.for.body.i153.preheader_crit_edge, !prof !365

land.rhs.i144.for.body.i153.preheader_crit_edge:  ; preds = %land.rhs.i144
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i153.preheader

do.end.i145:                                      ; preds = %land.rhs.i144
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3991, i32 noundef 9, ptr noundef null) #21
  br label %for.body.i153.preheader

for.body.i153.preheader:                          ; preds = %do.end.i145, %land.rhs.i144.for.body.i153.preheader_crit_edge, %land.lhs.true.i142.for.body.i153.preheader_crit_edge, %for.end80.for.body.i153.preheader_crit_edge
  br label %for.body.i153

for.cond.i149:                                    ; preds = %for.body.i153
  %inc.i147 = add nuw nsw i32 %i.031.i150, 1
  %exitcond.not.i148 = icmp eq i32 %inc.i147, 63
  br i1 %exitcond.not.i148, label %if.then83, label %for.cond.i149.for.body.i153_crit_edge

for.cond.i149.for.body.i153_crit_edge:            ; preds = %for.cond.i149
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i153

for.body.i153:                                    ; preds = %for.cond.i149.for.body.i153_crit_edge, %for.body.i153.preheader
  %i.031.i150 = phi i32 [ %inc.i147, %for.cond.i149.for.body.i153_crit_edge ], [ 0, %for.body.i153.preheader ]
  %arrayidx.i151 = getelementptr [63 x ptr], ptr @con_driver_map, i32 0, i32 %i.031.i150
  %41 = ptrtoint ptr %arrayidx.i151 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %arrayidx.i151, align 4
  %cmp24.i152 = icmp eq ptr %42, %.lcssa
  br i1 %cmp24.i152, label %for.body.i153.if.end86_crit_edge, label %for.cond.i149

for.body.i153.if.end86_crit_edge:                 ; preds = %for.body.i153
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end86

if.then83:                                        ; preds = %for.cond.i149
  call void @__sanitizer_cov_trace_pc() #23
  %43 = load ptr, ptr @conswitchp, align 4
  %con_startup = getelementptr inbounds %struct.consw, ptr %.lcssa, i32 0, i32 1
  %44 = ptrtoint ptr %con_startup to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %con_startup, align 4
  %call84 = tail call ptr %45() #21
  %flag85 = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.1194.lcssa, i32 6
  %46 = ptrtoint ptr %flag85 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %flag85, align 4
  %or = or i32 %47, 2
  store i32 %or, ptr %flag85, align 4
  store ptr %43, ptr @conswitchp, align 4
  br label %if.end86

if.end86:                                         ; preds = %if.then83, %for.body.i153.if.end86_crit_edge
  %call.i.i.i156 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %48 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool.not.i157 = icmp eq i32 %48, 0
  br i1 %tobool.not.i157, label %land.lhs.true.i160, label %if.end86.for.body.i171.preheader_crit_edge

if.end86.for.body.i171.preheader_crit_edge:       ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i171.preheader

land.lhs.true.i160:                               ; preds = %if.end86
  %call1.i158 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i158)
  %tobool2.not.i159 = icmp eq i32 %call1.i158, 0
  br i1 %tobool2.not.i159, label %land.rhs.i162, label %land.lhs.true.i160.for.body.i171.preheader_crit_edge

land.lhs.true.i160.for.body.i171.preheader_crit_edge: ; preds = %land.lhs.true.i160
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i171.preheader

land.rhs.i162:                                    ; preds = %land.lhs.true.i160
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %49 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %tobool3.not.i161 = icmp eq i32 %49, 0
  br i1 %tobool3.not.i161, label %do.end.i163, label %land.rhs.i162.for.body.i171.preheader_crit_edge, !prof !365

land.rhs.i162.for.body.i171.preheader_crit_edge:  ; preds = %land.rhs.i162
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i171.preheader

do.end.i163:                                      ; preds = %land.rhs.i162
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3991, i32 noundef 9, ptr noundef null) #21
  br label %for.body.i171.preheader

for.body.i171.preheader:                          ; preds = %do.end.i163, %land.rhs.i162.for.body.i171.preheader_crit_edge, %land.lhs.true.i160.for.body.i171.preheader_crit_edge, %if.end86.for.body.i171.preheader_crit_edge
  br label %for.body.i171

for.cond.i167:                                    ; preds = %for.body.i171
  %inc.i165 = add nuw nsw i32 %i.031.i168, 1
  %exitcond.not.i166 = icmp eq i32 %inc.i165, 63
  br i1 %exitcond.not.i166, label %if.then89, label %for.cond.i167.for.body.i171_crit_edge

for.cond.i167.for.body.i171_crit_edge:            ; preds = %for.cond.i167
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i171

for.body.i171:                                    ; preds = %for.cond.i167.for.body.i171_crit_edge, %for.body.i171.preheader
  %i.031.i168 = phi i32 [ %inc.i165, %for.cond.i167.for.body.i171_crit_edge ], [ 0, %for.body.i171.preheader ]
  %arrayidx.i169 = getelementptr [63 x ptr], ptr @con_driver_map, i32 0, i32 %i.031.i168
  %50 = ptrtoint ptr %arrayidx.i169 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %arrayidx.i169, align 4
  %cmp24.i170 = icmp eq ptr %51, %csw
  br i1 %cmp24.i170, label %for.body.i171.if.end92_crit_edge, label %for.cond.i167

for.body.i171.if.end92_crit_edge:                 ; preds = %for.body.i171
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end92

if.then89:                                        ; preds = %for.cond.i167
  call void @__sanitizer_cov_trace_pc() #23
  %52 = ptrtoint ptr %flag to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %flag, align 4
  %and91 = and i32 %53, -3
  store i32 %and91, ptr %flag, align 4
  br label %if.end92

if.end92:                                         ; preds = %if.then89, %for.body.i171.if.end92_crit_edge
  tail call fastcc void @do_bind_con_driver(ptr noundef %.lcssa, i32 noundef %30, i32 noundef %33, i32 noundef %deflt)
  br label %err

err:                                              ; preds = %if.end92, %for.cond.i.err_crit_edge, %for.inc49.14.err_crit_edge, %for.inc.err_crit_edge
  %retval2.2 = phi i32 [ 0, %if.end92 ], [ -19, %for.inc49.14.err_crit_edge ], [ 0, %for.cond.i.err_crit_edge ], [ -19, %for.inc.err_crit_edge ]
  tail call void @module_put(ptr noundef %1) #21
  br label %cleanup

cleanup:                                          ; preds = %err, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval2.2, %err ], [ -19, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @try_module_get(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @con_is_bound(ptr noundef readnone %csw) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %0 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.for.body.preheader_crit_edge

entry.for.body.preheader_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.preheader

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.rhs, label %land.lhs.true.for.body.preheader_crit_edge

land.lhs.true.for.body.preheader_crit_edge:       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.preheader

land.rhs:                                         ; preds = %land.lhs.true
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %1 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool3.not = icmp eq i32 %1, 0
  br i1 %tobool3.not, label %do.end, label %land.rhs.for.body.preheader_crit_edge, !prof !365

land.rhs.for.body.preheader_crit_edge:            ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.preheader

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3991, i32 noundef 9, ptr noundef null) #21
  br label %for.body.preheader

for.body.preheader:                               ; preds = %do.end, %land.rhs.for.body.preheader_crit_edge, %land.lhs.true.for.body.preheader_crit_edge, %entry.for.body.preheader_crit_edge
  br label %for.body

for.cond:                                         ; preds = %for.body
  %inc = add nuw nsw i32 %i.031, 1
  %exitcond.not = icmp eq i32 %inc, 63
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.cond.for.body_crit_edge

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %for.body.preheader
  %i.031 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %arrayidx = getelementptr [63 x ptr], ptr @con_driver_map, i32 0, i32 %i.031
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx, align 4
  %cmp24 = icmp eq ptr %3, %csw
  br i1 %cmp24, label %for.body.for.end_crit_edge, label %for.cond

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %for.cond.for.end_crit_edge
  %bound.0 = phi i32 [ 0, %for.cond.for.end_crit_edge ], [ 1, %for.body.for.end_crit_edge ]
  ret i32 %bound.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @module_put(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @do_bind_con_driver(ptr noundef %csw, i32 noundef %first, i32 noundef %last, i32 noundef %deflt) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %csw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %csw, align 4
  %call = tail call zeroext i1 @try_module_get(ptr noundef %1) #21
  br i1 %call, label %if.end, label %entry.cleanup131_crit_edge

entry.cleanup131_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup131

if.end:                                           ; preds = %entry
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %2 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %land.lhs.true, label %if.end.if.end22_crit_edge

if.end.if.end22_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end22

land.lhs.true:                                    ; preds = %if.end
  %call4 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %land.rhs, label %land.lhs.true.if.end22_crit_edge

land.lhs.true.if.end22_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end22

land.rhs:                                         ; preds = %land.lhs.true
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %3 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool6.not = icmp eq i32 %3, 0
  br i1 %tobool6.not, label %do.end, label %land.rhs.if.end22_crit_edge, !prof !365

land.rhs.if.end22_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end22

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3641, i32 noundef 9, ptr noundef null) #21
  br label %if.end22

if.end22:                                         ; preds = %do.end, %land.rhs.if.end22_crit_edge, %land.lhs.true.if.end22_crit_edge, %if.end.if.end22_crit_edge
  %4 = load ptr, ptr @registered_con_driver, align 4
  %cmp29 = icmp eq ptr %4, %csw
  br i1 %cmp29, label %if.end22.if.end35_crit_edge, label %for.inc

if.end22.if.end35_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

for.inc:                                          ; preds = %if.end22
  %5 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 1), align 4
  %cmp29.1 = icmp eq ptr %5, %csw
  br i1 %cmp29.1, label %for.inc.if.end35_crit_edge, label %for.inc.1

for.inc.if.end35_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

for.inc.1:                                        ; preds = %for.inc
  %6 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 2), align 4
  %cmp29.2 = icmp eq ptr %6, %csw
  br i1 %cmp29.2, label %for.inc.1.if.end35_crit_edge, label %for.inc.2

for.inc.1.if.end35_crit_edge:                     ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

for.inc.2:                                        ; preds = %for.inc.1
  %7 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 3), align 4
  %cmp29.3 = icmp eq ptr %7, %csw
  br i1 %cmp29.3, label %for.inc.2.if.end35_crit_edge, label %for.inc.3

for.inc.2.if.end35_crit_edge:                     ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

for.inc.3:                                        ; preds = %for.inc.2
  %8 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 4), align 4
  %cmp29.4 = icmp eq ptr %8, %csw
  br i1 %cmp29.4, label %for.inc.3.if.end35_crit_edge, label %for.inc.4

for.inc.3.if.end35_crit_edge:                     ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

for.inc.4:                                        ; preds = %for.inc.3
  %9 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 5), align 4
  %cmp29.5 = icmp eq ptr %9, %csw
  br i1 %cmp29.5, label %for.inc.4.if.end35_crit_edge, label %for.inc.5

for.inc.4.if.end35_crit_edge:                     ; preds = %for.inc.4
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

for.inc.5:                                        ; preds = %for.inc.4
  %10 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 6), align 4
  %cmp29.6 = icmp eq ptr %10, %csw
  br i1 %cmp29.6, label %for.inc.5.if.end35_crit_edge, label %for.inc.6

for.inc.5.if.end35_crit_edge:                     ; preds = %for.inc.5
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

for.inc.6:                                        ; preds = %for.inc.5
  %11 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 7), align 4
  %cmp29.7 = icmp eq ptr %11, %csw
  br i1 %cmp29.7, label %for.inc.6.if.end35_crit_edge, label %for.inc.7

for.inc.6.if.end35_crit_edge:                     ; preds = %for.inc.6
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

for.inc.7:                                        ; preds = %for.inc.6
  %12 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 8), align 4
  %cmp29.8 = icmp eq ptr %12, %csw
  br i1 %cmp29.8, label %for.inc.7.if.end35_crit_edge, label %for.inc.8

for.inc.7.if.end35_crit_edge:                     ; preds = %for.inc.7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

for.inc.8:                                        ; preds = %for.inc.7
  %13 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 9), align 4
  %cmp29.9 = icmp eq ptr %13, %csw
  br i1 %cmp29.9, label %for.inc.8.if.end35_crit_edge, label %for.inc.9

for.inc.8.if.end35_crit_edge:                     ; preds = %for.inc.8
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

for.inc.9:                                        ; preds = %for.inc.8
  %14 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 10), align 4
  %cmp29.10 = icmp eq ptr %14, %csw
  br i1 %cmp29.10, label %for.inc.9.if.end35_crit_edge, label %for.inc.10

for.inc.9.if.end35_crit_edge:                     ; preds = %for.inc.9
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

for.inc.10:                                       ; preds = %for.inc.9
  %15 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 11), align 4
  %cmp29.11 = icmp eq ptr %15, %csw
  br i1 %cmp29.11, label %for.inc.10.if.end35_crit_edge, label %for.inc.11

for.inc.10.if.end35_crit_edge:                    ; preds = %for.inc.10
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

for.inc.11:                                       ; preds = %for.inc.10
  %16 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 12), align 4
  %cmp29.12 = icmp eq ptr %16, %csw
  br i1 %cmp29.12, label %for.inc.11.if.end35_crit_edge, label %for.inc.12

for.inc.11.if.end35_crit_edge:                    ; preds = %for.inc.11
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

for.inc.12:                                       ; preds = %for.inc.11
  %17 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 13), align 4
  %cmp29.13 = icmp eq ptr %17, %csw
  br i1 %cmp29.13, label %for.inc.12.if.end35_crit_edge, label %for.inc.13

for.inc.12.if.end35_crit_edge:                    ; preds = %for.inc.12
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

for.inc.13:                                       ; preds = %for.inc.12
  %18 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 14), align 4
  %cmp29.14 = icmp eq ptr %18, %csw
  br i1 %cmp29.14, label %for.inc.13.if.end35_crit_edge, label %for.inc.14

for.inc.13.if.end35_crit_edge:                    ; preds = %for.inc.13
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

for.inc.14:                                       ; preds = %for.inc.13
  %19 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 15), align 4
  %cmp29.15 = icmp eq ptr %19, %csw
  br i1 %cmp29.15, label %for.inc.14.if.end35_crit_edge, label %for.inc.14.err_crit_edge

for.inc.14.err_crit_edge:                         ; preds = %for.inc.14
  call void @__sanitizer_cov_trace_pc() #23
  br label %err

for.inc.14.if.end35_crit_edge:                    ; preds = %for.inc.14
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

if.end35:                                         ; preds = %for.inc.14.if.end35_crit_edge, %for.inc.13.if.end35_crit_edge, %for.inc.12.if.end35_crit_edge, %for.inc.11.if.end35_crit_edge, %for.inc.10.if.end35_crit_edge, %for.inc.9.if.end35_crit_edge, %for.inc.8.if.end35_crit_edge, %for.inc.7.if.end35_crit_edge, %for.inc.6.if.end35_crit_edge, %for.inc.5.if.end35_crit_edge, %for.inc.4.if.end35_crit_edge, %for.inc.3.if.end35_crit_edge, %for.inc.2.if.end35_crit_edge, %for.inc.1.if.end35_crit_edge, %for.inc.if.end35_crit_edge, %if.end22.if.end35_crit_edge
  %i.017.lcssa = phi i32 [ 0, %if.end22.if.end35_crit_edge ], [ 1, %for.inc.if.end35_crit_edge ], [ 2, %for.inc.1.if.end35_crit_edge ], [ 3, %for.inc.2.if.end35_crit_edge ], [ 4, %for.inc.3.if.end35_crit_edge ], [ 5, %for.inc.4.if.end35_crit_edge ], [ 6, %for.inc.5.if.end35_crit_edge ], [ 7, %for.inc.6.if.end35_crit_edge ], [ 8, %for.inc.7.if.end35_crit_edge ], [ 9, %for.inc.8.if.end35_crit_edge ], [ 10, %for.inc.9.if.end35_crit_edge ], [ 11, %for.inc.10.if.end35_crit_edge ], [ 12, %for.inc.11.if.end35_crit_edge ], [ 13, %for.inc.12.if.end35_crit_edge ], [ 14, %for.inc.13.if.end35_crit_edge ], [ 15, %for.inc.14.if.end35_crit_edge ]
  %desc31 = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.017.lcssa, i32 1
  %20 = ptrtoint ptr %desc31 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %desc31, align 4
  %flag = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.017.lcssa, i32 6
  %22 = ptrtoint ptr %flag to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %flag, align 4
  %and = and i32 %23, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool36.not = icmp eq i32 %and, 0
  br i1 %tobool36.not, label %if.then37, label %if.end35.if.end40_crit_edge

if.end35.if.end40_crit_edge:                      ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end40

if.then37:                                        ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #23
  %con_startup = getelementptr inbounds %struct.consw, ptr %csw, i32 0, i32 1
  %24 = ptrtoint ptr %con_startup to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %con_startup, align 4
  %call38 = tail call ptr %25() #21
  %26 = ptrtoint ptr %flag to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %flag, align 4
  %or = or i32 %27, 2
  store i32 %or, ptr %flag, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.then37, %if.end35.if.end40_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %deflt)
  %tobool41.not = icmp eq i32 %deflt, 0
  br i1 %tobool41.not, label %if.end40.if.end47_crit_edge, label %if.then42

if.end40.if.end47_crit_edge:                      ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end47

if.then42:                                        ; preds = %if.end40
  %28 = load ptr, ptr @conswitchp, align 4
  %tobool43.not = icmp eq ptr %28, null
  br i1 %tobool43.not, label %if.then42.if.end46_crit_edge, label %if.then44

if.then42.if.end46_crit_edge:                     ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end46

if.then44:                                        ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #23
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %28, align 4
  tail call void @module_put(ptr noundef %30) #21
  br label %if.end46

if.end46:                                         ; preds = %if.then44, %if.then42.if.end46_crit_edge
  tail call void @__module_get(ptr noundef %1) #21
  store ptr %csw, ptr @conswitchp, align 4
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.end40.if.end47_crit_edge
  %first48 = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.017.lcssa, i32 4
  %31 = ptrtoint ptr %first48 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %first48, align 4
  %33 = tail call i32 @llvm.smax.i32(i32 %32, i32 %first)
  %last51 = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.017.lcssa, i32 5
  %34 = ptrtoint ptr %last51 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %last51, align 4
  %36 = tail call i32 @llvm.smin.i32(i32 %35, i32 %last)
  call void @__sanitizer_cov_trace_cmp4(i32 %33, i32 %36)
  %cmp59.not18 = icmp sgt i32 %33, %36
  br i1 %cmp59.not18, label %if.end47.do.end91_crit_edge, label %if.end47.for.body60_crit_edge

if.end47.for.body60_crit_edge:                    ; preds = %if.end47
  br label %for.body60

if.end47.do.end91_crit_edge:                      ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end91

for.body60:                                       ; preds = %cleanup.for.body60_crit_edge, %if.end47.for.body60_crit_edge
  %i.121 = phi i32 [ %inc87, %cleanup.for.body60_crit_edge ], [ %33, %if.end47.for.body60_crit_edge ]
  %k.020 = phi i32 [ %k.2, %cleanup.for.body60_crit_edge ], [ -1, %if.end47.for.body60_crit_edge ]
  %j.019 = phi i32 [ %j.1, %cleanup.for.body60_crit_edge ], [ -1, %if.end47.for.body60_crit_edge ]
  %arrayidx61 = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %i.121
  %37 = ptrtoint ptr %arrayidx61 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %arrayidx61, align 4
  %arrayidx62 = getelementptr [63 x ptr], ptr @con_driver_map, i32 0, i32 %i.121
  %39 = ptrtoint ptr %arrayidx62 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %arrayidx62, align 4
  %tobool63.not = icmp eq ptr %40, null
  br i1 %tobool63.not, label %for.body60.if.end67_crit_edge, label %if.then64

for.body60.if.end67_crit_edge:                    ; preds = %for.body60
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end67

if.then64:                                        ; preds = %for.body60
  call void @__sanitizer_cov_trace_pc() #23
  %41 = ptrtoint ptr %40 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %40, align 4
  tail call void @module_put(ptr noundef %42) #21
  br label %if.end67

if.end67:                                         ; preds = %if.then64, %for.body60.if.end67_crit_edge
  tail call void @__module_get(ptr noundef %1) #21
  %43 = ptrtoint ptr %arrayidx62 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %csw, ptr %arrayidx62, align 4
  %tobool69.not = icmp eq ptr %38, null
  br i1 %tobool69.not, label %if.end67.cleanup_crit_edge, label %lor.lhs.false

if.end67.cleanup_crit_edge:                       ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

lor.lhs.false:                                    ; preds = %if.end67
  %vc_sw = getelementptr inbounds %struct.vc_data, ptr %38, i32 0, i32 14
  %44 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %vc_sw, align 4
  %tobool70.not = icmp eq ptr %45, null
  br i1 %tobool70.not, label %lor.lhs.false.cleanup_crit_edge, label %if.end72

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end72:                                         ; preds = %lor.lhs.false
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %46 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool.not.i = icmp eq i32 %46, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.end72.con_is_visible.exit_crit_edge

if.end72.con_is_visible.exit_crit_edge:           ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit

land.lhs.true.i:                                  ; preds = %if.end72
  %call1.i = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %land.rhs.i, label %land.lhs.true.i.con_is_visible.exit_crit_edge

land.lhs.true.i.con_is_visible.exit_crit_edge:    ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit

land.rhs.i:                                       ; preds = %land.lhs.true.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %47 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool3.not.i = icmp eq i32 %47, 0
  br i1 %tobool3.not.i, label %do.end.i, label %land.rhs.i.con_is_visible.exit_crit_edge, !prof !365

land.rhs.i.con_is_visible.exit_crit_edge:         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4012, i32 noundef 9, ptr noundef null) #21
  br label %con_is_visible.exit

con_is_visible.exit:                              ; preds = %do.end.i, %land.rhs.i.con_is_visible.exit_crit_edge, %land.lhs.true.i.con_is_visible.exit_crit_edge, %if.end72.con_is_visible.exit_crit_edge
  %vc_display_fg.i = getelementptr inbounds %struct.vc_data, ptr %38, i32 0, i32 47
  %48 = ptrtoint ptr %vc_display_fg.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %vc_display_fg.i, align 4
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %49, align 4
  %cmp.i = icmp eq ptr %51, %38
  br i1 %cmp.i, label %if.then74, label %con_is_visible.exit.if.end75_crit_edge

con_is_visible.exit.if.end75_crit_edge:           ; preds = %con_is_visible.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end75

if.then74:                                        ; preds = %con_is_visible.exit
  %call.i.i.i3 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %52 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool.not.i4 = icmp eq i32 %52, 0
  br i1 %tobool.not.i4, label %land.lhs.true.i7, label %if.then74.if.end.i_crit_edge

if.then74.if.end.i_crit_edge:                     ; preds = %if.then74
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.lhs.true.i7:                                 ; preds = %if.then74
  %call1.i5 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i5)
  %tobool2.not.i6 = icmp eq i32 %call1.i5, 0
  br i1 %tobool2.not.i6, label %land.rhs.i9, label %land.lhs.true.i7.if.end.i_crit_edge

land.lhs.true.i7.if.end.i_crit_edge:              ; preds = %land.lhs.true.i7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i9:                                      ; preds = %land.lhs.true.i7
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %53 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %53)
  %tobool3.not.i8 = icmp eq i32 %53, 0
  br i1 %tobool3.not.i8, label %do.end.i10, label %land.rhs.i9.if.end.i_crit_edge, !prof !365

land.rhs.i9.if.end.i_crit_edge:                   ; preds = %land.rhs.i9
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i10:                                       ; preds = %land.rhs.i9
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 941, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i10, %land.rhs.i9.if.end.i_crit_edge, %land.lhs.true.i7.if.end.i_crit_edge, %if.then74.if.end.i_crit_edge
  %54 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %vc_sw, align 4
  %con_save_screen.i = getelementptr inbounds %struct.consw, ptr %55, i32 0, i32 18
  %56 = ptrtoint ptr %con_save_screen.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %con_save_screen.i, align 4
  %tobool24.not.i = icmp eq ptr %57, null
  br i1 %tobool24.not.i, label %if.end.i.if.end75_crit_edge, label %if.then25.i

if.end.i.if.end75_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end75

if.then25.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %57(ptr noundef nonnull %38) #21
  br label %if.end75

if.end75:                                         ; preds = %if.then25.i, %if.end.i.if.end75_crit_edge, %con_is_visible.exit.if.end75_crit_edge
  %k.1 = phi i32 [ %k.020, %con_is_visible.exit.if.end75_crit_edge ], [ %i.121, %if.end.i.if.end75_crit_edge ], [ %i.121, %if.then25.i ]
  %vc_can_do_color = getelementptr inbounds %struct.vc_data, ptr %38, i32 0, i32 37
  %58 = ptrtoint ptr %vc_can_do_color to i32
  call void @__asan_load2_noabort(i32 %58)
  %bf.load = load i16, ptr %vc_can_do_color, align 4
  %59 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %vc_sw, align 4
  %con_deinit = getelementptr inbounds %struct.consw, ptr %60, i32 0, i32 3
  %61 = ptrtoint ptr %con_deinit to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %con_deinit, align 4
  tail call void %62(ptr noundef nonnull %38) #21
  %vc_screenbuf = getelementptr inbounds %struct.vc_data, ptr %38, i32 0, i32 15
  %63 = ptrtoint ptr %vc_screenbuf to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %vc_screenbuf, align 4
  %65 = ptrtoint ptr %64 to i32
  %vc_origin = getelementptr inbounds %struct.vc_data, ptr %38, i32 0, i32 9
  %66 = ptrtoint ptr %vc_origin to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 %65, ptr %vc_origin, align 4
  tail call fastcc void @visual_init(ptr noundef nonnull %38, i32 noundef %i.121, i32 noundef 0)
  tail call fastcc void @set_origin(ptr noundef nonnull %38)
  tail call fastcc void @update_attr(ptr noundef nonnull %38)
  %67 = ptrtoint ptr %vc_can_do_color to i32
  call void @__asan_load2_noabort(i32 %67)
  %bf.load78 = load i16, ptr %vc_can_do_color, align 4
  %bf.lshr1 = xor i16 %bf.load78, %bf.load
  %68 = and i16 %bf.lshr1, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %68)
  %cmp82.not = icmp eq i16 %68, 0
  br i1 %cmp82.not, label %if.end75.cleanup_crit_edge, label %if.then83

if.end75.cleanup_crit_edge:                       ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then83:                                        ; preds = %if.end75
  %vc_screenbuf_size.i = getelementptr inbounds %struct.vc_data, ptr %38, i32 0, i32 16
  %69 = ptrtoint ptr %vc_screenbuf_size.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %vc_screenbuf_size.i, align 4
  %vc_hi_font_mask.i = getelementptr inbounds %struct.vc_data, ptr %38, i32 0, i32 27
  %71 = ptrtoint ptr %vc_hi_font_mask.i to i32
  call void @__asan_load2_noabort(i32 %71)
  %72 = load i16, ptr %vc_hi_font_mask.i, align 4
  %73 = or i16 %72, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %70)
  %cmp16.not.i = icmp ult i32 %70, 2
  br i1 %cmp16.not.i, label %if.then83.cleanup_crit_edge, label %for.body.lr.ph.i

if.then83.cleanup_crit_edge:                      ; preds = %if.then83
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.body.lr.ph.i:                                 ; preds = %if.then83
  %div14.i = lshr i32 %70, 1
  %74 = ptrtoint ptr %vc_origin to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %vc_origin, align 4
  %76 = inttoptr i32 %75 to ptr
  %vc_video_erase_char.i = getelementptr inbounds %struct.vc_data, ptr %38, i32 0, i32 29
  %neg.i = xor i16 %73, -1
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %count.018.i = phi i32 [ %div14.i, %for.body.lr.ph.i ], [ %dec.i, %for.body.i.for.body.i_crit_edge ]
  %p.017.i = phi ptr [ %76, %for.body.lr.ph.i ], [ %incdec.ptr.i, %for.body.i.for.body.i_crit_edge ]
  %77 = ptrtoint ptr %p.017.i to i32
  call void @__asan_load2_noabort(i32 %77)
  %78 = load i16, ptr %p.017.i, align 2
  %and15.i = and i16 %78, %73
  %79 = ptrtoint ptr %vc_video_erase_char.i to i32
  call void @__asan_load2_noabort(i32 %79)
  %80 = load i16, ptr %vc_video_erase_char.i, align 4
  %and4.i = and i16 %80, %neg.i
  %or5.i = or i16 %and4.i, %and15.i
  store i16 %or5.i, ptr %p.017.i, align 2
  %dec.i = add nsw i32 %count.018.i, -1
  %incdec.ptr.i = getelementptr i16, ptr %p.017.i, i32 1
  %cmp.i11 = icmp ugt i32 %count.018.i, 1
  br i1 %cmp.i11, label %for.body.i.for.body.i_crit_edge, label %for.body.i.cleanup_crit_edge

for.body.i.cleanup_crit_edge:                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

cleanup:                                          ; preds = %for.body.i.cleanup_crit_edge, %if.then83.cleanup_crit_edge, %if.end75.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %if.end67.cleanup_crit_edge
  %j.1 = phi i32 [ %j.019, %lor.lhs.false.cleanup_crit_edge ], [ %j.019, %if.end67.cleanup_crit_edge ], [ %i.121, %if.end75.cleanup_crit_edge ], [ %i.121, %if.then83.cleanup_crit_edge ], [ %i.121, %for.body.i.cleanup_crit_edge ]
  %k.2 = phi i32 [ %k.020, %lor.lhs.false.cleanup_crit_edge ], [ %k.020, %if.end67.cleanup_crit_edge ], [ %k.1, %if.end75.cleanup_crit_edge ], [ %k.1, %if.then83.cleanup_crit_edge ], [ %k.1, %for.body.i.cleanup_crit_edge ]
  %inc87 = add i32 %i.121, 1
  %cmp59.not = icmp sgt i32 %inc87, %36
  br i1 %cmp59.not, label %cleanup.do.end91_crit_edge, label %cleanup.for.body60_crit_edge

cleanup.for.body60_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body60

cleanup.do.end91_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end91

do.end91:                                         ; preds = %cleanup.do.end91_crit_edge, %if.end47.do.end91_crit_edge
  %j.0.lcssa = phi i32 [ -1, %if.end47.do.end91_crit_edge ], [ %j.1, %cleanup.do.end91_crit_edge ]
  %k.0.lcssa = phi i32 [ -1, %if.end47.do.end91_crit_edge ], [ %k.2, %cleanup.do.end91_crit_edge ]
  %call93 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.31) #26
  br i1 %tobool41.not, label %do.end98, label %do.end91.if.end102_crit_edge

do.end91.if.end102_crit_edge:                     ; preds = %do.end91
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end102

do.end98:                                         ; preds = %do.end91
  call void @__sanitizer_cov_trace_pc() #23
  %add = add i32 %33, 1
  %add100 = add nsw i32 %36, 1
  %call101 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.34, i32 noundef %add, i32 noundef %add100) #26
  br label %if.end102

if.end102:                                        ; preds = %do.end98, %do.end91.if.end102_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %j.0.lcssa)
  %cmp103 = icmp sgt i32 %j.0.lcssa, -1
  br i1 %cmp103, label %if.then104, label %do.end127

if.then104:                                       ; preds = %if.end102
  %arrayidx106 = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %j.0.lcssa
  %81 = ptrtoint ptr %arrayidx106 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %arrayidx106, align 4
  %vc_can_do_color112 = getelementptr inbounds %struct.vc_data, ptr %82, i32 0, i32 37
  %83 = ptrtoint ptr %vc_can_do_color112 to i32
  call void @__asan_load2_noabort(i32 %83)
  %bf.load113 = load i16, ptr %vc_can_do_color112, align 4
  %84 = and i16 %bf.load113, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %84)
  %tobool117.not = icmp eq i16 %84, 0
  %cond118 = select i1 %tobool117.not, ptr @.str.22, ptr @.str.21
  %vc_cols = getelementptr inbounds %struct.vc_data, ptr %82, i32 0, i32 4
  %85 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %vc_cols, align 4
  %vc_rows = getelementptr inbounds %struct.vc_data, ptr %82, i32 0, i32 5
  %87 = ptrtoint ptr %vc_rows to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %vc_rows, align 4
  %call119 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.37, ptr noundef nonnull %cond118, ptr noundef %21, i32 noundef %86, i32 noundef %88) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %k.0.lcssa)
  %cmp120 = icmp sgt i32 %k.0.lcssa, -1
  br i1 %cmp120, label %if.then121, label %if.then104.err_crit_edge

if.then104.err_crit_edge:                         ; preds = %if.then104
  call void @__sanitizer_cov_trace_pc() #23
  br label %err

if.then121:                                       ; preds = %if.then104
  call void @__sanitizer_cov_trace_pc() #23
  %arrayidx122 = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %k.0.lcssa
  %89 = ptrtoint ptr %arrayidx122 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %arrayidx122, align 4
  tail call void @redraw_screen(ptr noundef %90, i32 noundef 0)
  br label %err

do.end127:                                        ; preds = %if.end102
  call void @__sanitizer_cov_trace_pc() #23
  %call129 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.40, ptr noundef %21) #26
  br label %err

err:                                              ; preds = %do.end127, %if.then121, %if.then104.err_crit_edge, %for.inc.14.err_crit_edge
  tail call void @module_put(ptr noundef %1) #21
  br label %cleanup131

cleanup131:                                       ; preds = %err, %entry.cleanup131_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @con_debug_enter(ptr noundef %vc) #0 align 64 {
entry:
  %linecount = alloca i32, align 4
  %lns = alloca [4 x i8], align 4
  %setargs = alloca [3 x ptr], align 4
  %colcount = alloca i32, align 4
  %cols = alloca [4 x i8], align 4
  %setargs20 = alloca [3 x ptr], align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @fg_console, align 4
  store i32 %0, ptr @saved_fg_console, align 4
  %1 = load i32, ptr @last_console, align 4
  store i32 %1, ptr @saved_last_console, align 4
  %2 = load i32, ptr @want_console, align 4
  store i32 %2, ptr @saved_want_console, align 4
  %vc_mode = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 17
  %3 = ptrtoint ptr %vc_mode to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %vc_mode, align 4
  %conv = zext i8 %4 to i32
  store i32 %conv, ptr @saved_vc_mode, align 4
  %5 = load i32, ptr @console_blanked, align 4
  store i32 %5, ptr @saved_console_blanked, align 4
  store i8 0, ptr %vc_mode, align 4
  store i32 0, ptr @console_blanked, align 4
  %vc_sw = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %6 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %vc_sw, align 4
  %con_debug_enter = getelementptr inbounds %struct.consw, ptr %7, i32 0, i32 24
  %8 = ptrtoint ptr %con_debug_enter to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %con_debug_enter, align 4
  %tobool.not = icmp eq ptr %9, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %call = tail call i32 %9(ptr noundef %vc) #21
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %ret.0 = phi i32 [ %call, %if.then ], [ 0, %entry.if.end_crit_edge ]
  %vc_rows = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 5
  %10 = ptrtoint ptr %vc_rows to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %vc_rows, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 999, i32 %11)
  %cmp = icmp ult i32 %11, 999
  br i1 %cmp, label %if.then5, label %if.end.if.end16_crit_edge

if.end.if.end16_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

if.then5:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %linecount) #21
  %12 = ptrtoint ptr %linecount to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 -1, ptr %linecount, align 4, !annotation !367
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %lns) #21
  %13 = ptrtoint ptr %lns to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 -1, ptr %lns, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %setargs) #21
  %14 = getelementptr inbounds [3 x ptr], ptr %setargs, i32 0, i32 1
  %15 = getelementptr inbounds [3 x ptr], ptr %setargs, i32 0, i32 2
  %16 = ptrtoint ptr %setargs to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr @.str.10, ptr %setargs, align 4
  %17 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr @.str.11, ptr %14, align 4
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %lns, ptr %15, align 4
  %call7 = call i32 @kdbgetintenv(ptr noundef nonnull @.str.10, ptr noundef nonnull %linecount) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.then5.if.end15_crit_edge, label %if.then9

if.then5.if.end15_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end15

if.then9:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #23
  %19 = ptrtoint ptr %vc_rows to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %vc_rows, align 4
  %call12 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %lns, i32 noundef 4, ptr noundef nonnull @.str.12, i32 noundef %20)
  %call14 = call i32 @kdb_set(i32 noundef 2, ptr noundef nonnull %setargs) #21
  br label %if.end15

if.end15:                                         ; preds = %if.then9, %if.then5.if.end15_crit_edge
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %setargs) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %lns) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %linecount) #21
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end.if.end16_crit_edge
  %vc_cols = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %21 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %vc_cols, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 999, i32 %22)
  %cmp17 = icmp ult i32 %22, 999
  br i1 %cmp17, label %if.then19, label %if.end16.if.end35_crit_edge

if.end16.if.end35_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

if.then19:                                        ; preds = %if.end16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %colcount) #21
  %23 = ptrtoint ptr %colcount to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 -1, ptr %colcount, align 4, !annotation !367
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cols) #21
  %24 = ptrtoint ptr %cols to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 -1, ptr %cols, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %setargs20) #21
  %25 = getelementptr inbounds [3 x ptr], ptr %setargs20, i32 0, i32 1
  %26 = getelementptr inbounds [3 x ptr], ptr %setargs20, i32 0, i32 2
  %27 = ptrtoint ptr %setargs20 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr @.str.10, ptr %setargs20, align 4
  %28 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr @.str.13, ptr %25, align 4
  %29 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %cols, ptr %26, align 4
  %call26 = call i32 @kdbgetintenv(ptr noundef nonnull @.str.10, ptr noundef nonnull %colcount) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %if.then19.if.end34_crit_edge, label %if.then28

if.then19.if.end34_crit_edge:                     ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end34

if.then28:                                        ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #23
  %30 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %vc_cols, align 4
  %call31 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %cols, i32 noundef 4, ptr noundef nonnull @.str.12, i32 noundef %31)
  %call33 = call i32 @kdb_set(i32 noundef 2, ptr noundef nonnull %setargs20) #21
  br label %if.end34

if.end34:                                         ; preds = %if.then28, %if.then19.if.end34_crit_edge
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %setargs20) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cols) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %colcount) #21
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.end16.if.end35_crit_edge
  ret i32 %ret.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kdbgetintenv(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kdb_set(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @con_debug_leave() #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @saved_fg_console, align 4
  store i32 %0, ptr @fg_console, align 4
  %1 = load i32, ptr @saved_last_console, align 4
  store i32 %1, ptr @last_console, align 4
  %2 = load i32, ptr @saved_want_console, align 4
  store i32 %2, ptr @want_console, align 4
  %3 = load i32, ptr @saved_console_blanked, align 4
  store i32 %3, ptr @console_blanked, align 4
  %4 = load i32, ptr @saved_vc_mode, align 4
  %conv = trunc i32 %4 to i8
  %arrayidx = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %0
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx, align 4
  %vc_mode = getelementptr inbounds %struct.vc_data, ptr %6, i32 0, i32 17
  %7 = ptrtoint ptr %vc_mode to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 %conv, ptr %vc_mode, align 4
  %8 = load ptr, ptr %arrayidx, align 4
  %vc_sw = getelementptr inbounds %struct.vc_data, ptr %8, i32 0, i32 14
  %9 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %vc_sw, align 4
  %con_debug_leave = getelementptr inbounds %struct.consw, ptr %10, i32 0, i32 25
  %11 = ptrtoint ptr %con_debug_leave to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %con_debug_leave, align 4
  %tobool.not = icmp eq ptr %12, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %call = tail call i32 %12(ptr noundef %8) #21
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %ret.0 = phi i32 [ %call, %if.then ], [ 0, %entry.if.end_crit_edge ]
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @do_unregister_con_driver(ptr noundef readnone %csw) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %0 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %entry.for.body.i.preheader_crit_edge

entry.for.body.i.preheader_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.preheader

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %land.rhs.i, label %land.lhs.true.i.for.body.i.preheader_crit_edge

land.lhs.true.i.for.body.i.preheader_crit_edge:   ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.preheader

land.rhs.i:                                       ; preds = %land.lhs.true.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %1 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool3.not.i = icmp eq i32 %1, 0
  br i1 %tobool3.not.i, label %do.end.i, label %land.rhs.i.for.body.i.preheader_crit_edge, !prof !365

land.rhs.i.for.body.i.preheader_crit_edge:        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.preheader

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3991, i32 noundef 9, ptr noundef null) #21
  br label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %do.end.i, %land.rhs.i.for.body.i.preheader_crit_edge, %land.lhs.true.i.for.body.i.preheader_crit_edge, %entry.for.body.i.preheader_crit_edge
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %inc.i = add nuw nsw i32 %i.031.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 63
  br i1 %exitcond.not.i, label %if.end, label %for.cond.i.for.body.i_crit_edge

for.cond.i.for.body.i_crit_edge:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.body.i:                                       ; preds = %for.cond.i.for.body.i_crit_edge, %for.body.i.preheader
  %i.031.i = phi i32 [ %inc.i, %for.cond.i.for.body.i_crit_edge ], [ 0, %for.body.i.preheader ]
  %arrayidx.i = getelementptr [63 x ptr], ptr @con_driver_map, i32 0, i32 %i.031.i
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx.i, align 4
  %cmp24.i = icmp eq ptr %3, %csw
  br i1 %cmp24.i, label %for.body.i.cleanup9_crit_edge, label %for.cond.i

for.body.i.cleanup9_crit_edge:                    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup9

if.end:                                           ; preds = %for.cond.i
  %4 = load ptr, ptr @conswitchp, align 4
  %cmp = icmp eq ptr %4, %csw
  br i1 %cmp, label %if.end.cleanup9_crit_edge, label %for.body.preheader

if.end.cleanup9_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup9

for.body.preheader:                               ; preds = %if.end
  %5 = load ptr, ptr @registered_con_driver, align 4
  %cmp4 = icmp eq ptr %5, %csw
  br i1 %cmp4, label %for.body.preheader.if.then5_crit_edge, label %for.inc.critedge

for.body.preheader.if.then5_crit_edge:            ; preds = %for.body.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then5

if.then5:                                         ; preds = %for.inc.critedge.14.if.then5_crit_edge, %for.inc.critedge.13.if.then5_crit_edge, %for.inc.critedge.12.if.then5_crit_edge, %for.inc.critedge.11.if.then5_crit_edge, %for.inc.critedge.10.if.then5_crit_edge, %for.inc.critedge.9.if.then5_crit_edge, %for.inc.critedge.8.if.then5_crit_edge, %for.inc.critedge.7.if.then5_crit_edge, %for.inc.critedge.6.if.then5_crit_edge, %for.inc.critedge.5.if.then5_crit_edge, %for.inc.critedge.4.if.then5_crit_edge, %for.inc.critedge.3.if.then5_crit_edge, %for.inc.critedge.2.if.then5_crit_edge, %for.inc.critedge.1.if.then5_crit_edge, %for.inc.critedge.if.then5_crit_edge, %for.body.preheader.if.then5_crit_edge
  %i.020.lcssa = phi i32 [ 0, %for.body.preheader.if.then5_crit_edge ], [ 1, %for.inc.critedge.if.then5_crit_edge ], [ 2, %for.inc.critedge.1.if.then5_crit_edge ], [ 3, %for.inc.critedge.2.if.then5_crit_edge ], [ 4, %for.inc.critedge.3.if.then5_crit_edge ], [ 5, %for.inc.critedge.4.if.then5_crit_edge ], [ 6, %for.inc.critedge.5.if.then5_crit_edge ], [ 7, %for.inc.critedge.6.if.then5_crit_edge ], [ 8, %for.inc.critedge.7.if.then5_crit_edge ], [ 9, %for.inc.critedge.8.if.then5_crit_edge ], [ 10, %for.inc.critedge.9.if.then5_crit_edge ], [ 11, %for.inc.critedge.10.if.then5_crit_edge ], [ 12, %for.inc.critedge.11.if.then5_crit_edge ], [ 13, %for.inc.critedge.12.if.then5_crit_edge ], [ 14, %for.inc.critedge.13.if.then5_crit_edge ], [ 15, %for.inc.critedge.14.if.then5_crit_edge ]
  %arrayidx.lcssa = phi ptr [ @registered_con_driver, %for.body.preheader.if.then5_crit_edge ], [ getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 1), %for.inc.critedge.if.then5_crit_edge ], [ getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 2), %for.inc.critedge.1.if.then5_crit_edge ], [ getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 3), %for.inc.critedge.2.if.then5_crit_edge ], [ getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 4), %for.inc.critedge.3.if.then5_crit_edge ], [ getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 5), %for.inc.critedge.4.if.then5_crit_edge ], [ getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 6), %for.inc.critedge.5.if.then5_crit_edge ], [ getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 7), %for.inc.critedge.6.if.then5_crit_edge ], [ getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 8), %for.inc.critedge.7.if.then5_crit_edge ], [ getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 9), %for.inc.critedge.8.if.then5_crit_edge ], [ getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 10), %for.inc.critedge.9.if.then5_crit_edge ], [ getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 11), %for.inc.critedge.10.if.then5_crit_edge ], [ getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 12), %for.inc.critedge.11.if.then5_crit_edge ], [ getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 13), %for.inc.critedge.12.if.then5_crit_edge ], [ getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 14), %for.inc.critedge.13.if.then5_crit_edge ], [ getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 15), %for.inc.critedge.14.if.then5_crit_edge ]
  %6 = ptrtoint ptr %arrayidx.lcssa to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %arrayidx.lcssa, align 4
  %flag = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.020.lcssa, i32 6
  %7 = ptrtoint ptr %flag to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 8, ptr %flag, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %8 = load ptr, ptr @system_wq, align 4
  %call.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %8, ptr noundef nonnull @con_driver_unregister_work) #21
  br label %cleanup9

for.inc.critedge:                                 ; preds = %for.body.preheader
  %9 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 1), align 4
  %cmp4.1 = icmp eq ptr %9, %csw
  br i1 %cmp4.1, label %for.inc.critedge.if.then5_crit_edge, label %for.inc.critedge.1

for.inc.critedge.if.then5_crit_edge:              ; preds = %for.inc.critedge
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then5

for.inc.critedge.1:                               ; preds = %for.inc.critedge
  %10 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 2), align 4
  %cmp4.2 = icmp eq ptr %10, %csw
  br i1 %cmp4.2, label %for.inc.critedge.1.if.then5_crit_edge, label %for.inc.critedge.2

for.inc.critedge.1.if.then5_crit_edge:            ; preds = %for.inc.critedge.1
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then5

for.inc.critedge.2:                               ; preds = %for.inc.critedge.1
  %11 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 3), align 4
  %cmp4.3 = icmp eq ptr %11, %csw
  br i1 %cmp4.3, label %for.inc.critedge.2.if.then5_crit_edge, label %for.inc.critedge.3

for.inc.critedge.2.if.then5_crit_edge:            ; preds = %for.inc.critedge.2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then5

for.inc.critedge.3:                               ; preds = %for.inc.critedge.2
  %12 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 4), align 4
  %cmp4.4 = icmp eq ptr %12, %csw
  br i1 %cmp4.4, label %for.inc.critedge.3.if.then5_crit_edge, label %for.inc.critedge.4

for.inc.critedge.3.if.then5_crit_edge:            ; preds = %for.inc.critedge.3
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then5

for.inc.critedge.4:                               ; preds = %for.inc.critedge.3
  %13 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 5), align 4
  %cmp4.5 = icmp eq ptr %13, %csw
  br i1 %cmp4.5, label %for.inc.critedge.4.if.then5_crit_edge, label %for.inc.critedge.5

for.inc.critedge.4.if.then5_crit_edge:            ; preds = %for.inc.critedge.4
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then5

for.inc.critedge.5:                               ; preds = %for.inc.critedge.4
  %14 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 6), align 4
  %cmp4.6 = icmp eq ptr %14, %csw
  br i1 %cmp4.6, label %for.inc.critedge.5.if.then5_crit_edge, label %for.inc.critedge.6

for.inc.critedge.5.if.then5_crit_edge:            ; preds = %for.inc.critedge.5
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then5

for.inc.critedge.6:                               ; preds = %for.inc.critedge.5
  %15 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 7), align 4
  %cmp4.7 = icmp eq ptr %15, %csw
  br i1 %cmp4.7, label %for.inc.critedge.6.if.then5_crit_edge, label %for.inc.critedge.7

for.inc.critedge.6.if.then5_crit_edge:            ; preds = %for.inc.critedge.6
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then5

for.inc.critedge.7:                               ; preds = %for.inc.critedge.6
  %16 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 8), align 4
  %cmp4.8 = icmp eq ptr %16, %csw
  br i1 %cmp4.8, label %for.inc.critedge.7.if.then5_crit_edge, label %for.inc.critedge.8

for.inc.critedge.7.if.then5_crit_edge:            ; preds = %for.inc.critedge.7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then5

for.inc.critedge.8:                               ; preds = %for.inc.critedge.7
  %17 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 9), align 4
  %cmp4.9 = icmp eq ptr %17, %csw
  br i1 %cmp4.9, label %for.inc.critedge.8.if.then5_crit_edge, label %for.inc.critedge.9

for.inc.critedge.8.if.then5_crit_edge:            ; preds = %for.inc.critedge.8
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then5

for.inc.critedge.9:                               ; preds = %for.inc.critedge.8
  %18 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 10), align 4
  %cmp4.10 = icmp eq ptr %18, %csw
  br i1 %cmp4.10, label %for.inc.critedge.9.if.then5_crit_edge, label %for.inc.critedge.10

for.inc.critedge.9.if.then5_crit_edge:            ; preds = %for.inc.critedge.9
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then5

for.inc.critedge.10:                              ; preds = %for.inc.critedge.9
  %19 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 11), align 4
  %cmp4.11 = icmp eq ptr %19, %csw
  br i1 %cmp4.11, label %for.inc.critedge.10.if.then5_crit_edge, label %for.inc.critedge.11

for.inc.critedge.10.if.then5_crit_edge:           ; preds = %for.inc.critedge.10
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then5

for.inc.critedge.11:                              ; preds = %for.inc.critedge.10
  %20 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 12), align 4
  %cmp4.12 = icmp eq ptr %20, %csw
  br i1 %cmp4.12, label %for.inc.critedge.11.if.then5_crit_edge, label %for.inc.critedge.12

for.inc.critedge.11.if.then5_crit_edge:           ; preds = %for.inc.critedge.11
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then5

for.inc.critedge.12:                              ; preds = %for.inc.critedge.11
  %21 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 13), align 4
  %cmp4.13 = icmp eq ptr %21, %csw
  br i1 %cmp4.13, label %for.inc.critedge.12.if.then5_crit_edge, label %for.inc.critedge.13

for.inc.critedge.12.if.then5_crit_edge:           ; preds = %for.inc.critedge.12
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then5

for.inc.critedge.13:                              ; preds = %for.inc.critedge.12
  %22 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 14), align 4
  %cmp4.14 = icmp eq ptr %22, %csw
  br i1 %cmp4.14, label %for.inc.critedge.13.if.then5_crit_edge, label %for.inc.critedge.14

for.inc.critedge.13.if.then5_crit_edge:           ; preds = %for.inc.critedge.13
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then5

for.inc.critedge.14:                              ; preds = %for.inc.critedge.13
  %23 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 15), align 4
  %cmp4.15 = icmp eq ptr %23, %csw
  br i1 %cmp4.15, label %for.inc.critedge.14.if.then5_crit_edge, label %for.inc.critedge.14.cleanup9_crit_edge

for.inc.critedge.14.cleanup9_crit_edge:           ; preds = %for.inc.critedge.14
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup9

for.inc.critedge.14.if.then5_crit_edge:           ; preds = %for.inc.critedge.14
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then5

cleanup9:                                         ; preds = %for.inc.critedge.14.cleanup9_crit_edge, %if.then5, %if.end.cleanup9_crit_edge, %for.body.i.cleanup9_crit_edge
  %retval.2 = phi i32 [ -22, %if.end.cleanup9_crit_edge ], [ 0, %if.then5 ], [ -19, %for.inc.critedge.14.cleanup9_crit_edge ], [ -16, %for.body.i.cleanup9_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @do_take_over_console(ptr noundef %csw, i32 noundef %first, i32 noundef %last, i32 noundef %deflt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %csw to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %csw, align 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %2 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %entry.if.end.i_crit_edge

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %entry
  %call3.i = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %land.rhs.i, label %land.lhs.true.i.if.end.i_crit_edge

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i:                                       ; preds = %land.lhs.true.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %3 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool5.not.i = icmp eq i32 %3, 0
  br i1 %tobool5.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !365

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4111, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %land.lhs.true.i.if.end.i_crit_edge, %entry.if.end.i_crit_edge
  %call26.i = tail call zeroext i1 @try_module_get(ptr noundef %1) #21
  br i1 %call26.i, label %for.body.preheader.i, label %if.end.i.if.end3_crit_edge

if.end.i.if.end3_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end3

for.body.preheader.i:                             ; preds = %if.end.i
  %4 = load ptr, ptr @registered_con_driver, align 4
  %cmp29.i = icmp eq ptr %4, %csw
  br i1 %cmp29.i, label %for.body.preheader.i.if.then1_crit_edge, label %for.cond.i

for.body.preheader.i.if.then1_crit_edge:          ; preds = %for.body.preheader.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then1

for.cond.i:                                       ; preds = %for.body.preheader.i
  %5 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 1), align 4
  %cmp29.1.i = icmp eq ptr %5, %csw
  br i1 %cmp29.1.i, label %for.cond.i.if.then1_crit_edge, label %for.cond.1.i

for.cond.i.if.then1_crit_edge:                    ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then1

for.cond.1.i:                                     ; preds = %for.cond.i
  %6 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 2), align 4
  %cmp29.2.i = icmp eq ptr %6, %csw
  br i1 %cmp29.2.i, label %for.cond.1.i.if.then1_crit_edge, label %for.cond.2.i

for.cond.1.i.if.then1_crit_edge:                  ; preds = %for.cond.1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then1

for.cond.2.i:                                     ; preds = %for.cond.1.i
  %7 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 3), align 4
  %cmp29.3.i = icmp eq ptr %7, %csw
  br i1 %cmp29.3.i, label %for.cond.2.i.if.then1_crit_edge, label %for.cond.3.i

for.cond.2.i.if.then1_crit_edge:                  ; preds = %for.cond.2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then1

for.cond.3.i:                                     ; preds = %for.cond.2.i
  %8 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 4), align 4
  %cmp29.4.i = icmp eq ptr %8, %csw
  br i1 %cmp29.4.i, label %for.cond.3.i.if.then1_crit_edge, label %for.cond.4.i

for.cond.3.i.if.then1_crit_edge:                  ; preds = %for.cond.3.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then1

for.cond.4.i:                                     ; preds = %for.cond.3.i
  %9 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 5), align 4
  %cmp29.5.i = icmp eq ptr %9, %csw
  br i1 %cmp29.5.i, label %for.cond.4.i.if.then1_crit_edge, label %for.cond.5.i

for.cond.4.i.if.then1_crit_edge:                  ; preds = %for.cond.4.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then1

for.cond.5.i:                                     ; preds = %for.cond.4.i
  %10 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 6), align 4
  %cmp29.6.i = icmp eq ptr %10, %csw
  br i1 %cmp29.6.i, label %for.cond.5.i.if.then1_crit_edge, label %for.cond.6.i

for.cond.5.i.if.then1_crit_edge:                  ; preds = %for.cond.5.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then1

for.cond.6.i:                                     ; preds = %for.cond.5.i
  %11 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 7), align 4
  %cmp29.7.i = icmp eq ptr %11, %csw
  br i1 %cmp29.7.i, label %for.cond.6.i.if.then1_crit_edge, label %for.cond.7.i

for.cond.6.i.if.then1_crit_edge:                  ; preds = %for.cond.6.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then1

for.cond.7.i:                                     ; preds = %for.cond.6.i
  %12 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 8), align 4
  %cmp29.8.i = icmp eq ptr %12, %csw
  br i1 %cmp29.8.i, label %for.cond.7.i.if.then1_crit_edge, label %for.cond.8.i

for.cond.7.i.if.then1_crit_edge:                  ; preds = %for.cond.7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then1

for.cond.8.i:                                     ; preds = %for.cond.7.i
  %13 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 9), align 4
  %cmp29.9.i = icmp eq ptr %13, %csw
  br i1 %cmp29.9.i, label %for.cond.8.i.if.then1_crit_edge, label %for.cond.9.i

for.cond.8.i.if.then1_crit_edge:                  ; preds = %for.cond.8.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then1

for.cond.9.i:                                     ; preds = %for.cond.8.i
  %14 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 10), align 4
  %cmp29.10.i = icmp eq ptr %14, %csw
  br i1 %cmp29.10.i, label %for.cond.9.i.if.then1_crit_edge, label %for.cond.10.i

for.cond.9.i.if.then1_crit_edge:                  ; preds = %for.cond.9.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then1

for.cond.10.i:                                    ; preds = %for.cond.9.i
  %15 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 11), align 4
  %cmp29.11.i = icmp eq ptr %15, %csw
  br i1 %cmp29.11.i, label %for.cond.10.i.if.then1_crit_edge, label %for.cond.11.i

for.cond.10.i.if.then1_crit_edge:                 ; preds = %for.cond.10.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then1

for.cond.11.i:                                    ; preds = %for.cond.10.i
  %16 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 12), align 4
  %cmp29.12.i = icmp eq ptr %16, %csw
  br i1 %cmp29.12.i, label %for.cond.11.i.if.then1_crit_edge, label %for.cond.12.i

for.cond.11.i.if.then1_crit_edge:                 ; preds = %for.cond.11.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then1

for.cond.12.i:                                    ; preds = %for.cond.11.i
  %17 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 13), align 4
  %cmp29.13.i = icmp eq ptr %17, %csw
  br i1 %cmp29.13.i, label %for.cond.12.i.if.then1_crit_edge, label %for.cond.13.i

for.cond.12.i.if.then1_crit_edge:                 ; preds = %for.cond.12.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then1

for.cond.13.i:                                    ; preds = %for.cond.12.i
  %18 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 14), align 4
  %cmp29.14.i = icmp eq ptr %18, %csw
  br i1 %cmp29.14.i, label %for.cond.13.i.if.then1_crit_edge, label %for.cond.14.i

for.cond.13.i.if.then1_crit_edge:                 ; preds = %for.cond.13.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then1

for.cond.14.i:                                    ; preds = %for.cond.13.i
  %19 = load ptr, ptr getelementptr inbounds ([16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 15), align 4
  %cmp29.15.i = icmp eq ptr %19, %csw
  br i1 %cmp29.15.i, label %for.cond.14.i.if.then1_crit_edge, label %for.cond.15.i

for.cond.14.i.if.then1_crit_edge:                 ; preds = %for.cond.14.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then1

for.cond.15.i:                                    ; preds = %for.cond.14.i
  %con_startup.i = getelementptr inbounds %struct.consw, ptr %csw, i32 0, i32 1
  %20 = ptrtoint ptr %con_startup.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %con_startup.i, align 4
  %call32.i = tail call ptr %21() #21
  %tobool33.not.i = icmp eq ptr %call32.i, null
  br i1 %tobool33.not.i, label %for.cond.15.i..loopexit_crit_edge, label %for.cond.15.i.for.body38.i_crit_edge

for.cond.15.i.for.body38.i_crit_edge:             ; preds = %for.cond.15.i
  br label %for.body38.i

for.cond.15.i..loopexit_crit_edge:                ; preds = %for.cond.15.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %.loopexit

for.body38.i:                                     ; preds = %for.inc51.i.for.body38.i_crit_edge, %for.cond.15.i.for.body38.i_crit_edge
  %i.1115.i = phi i32 [ %inc52.i, %for.inc51.i.for.body38.i_crit_edge ], [ 0, %for.cond.15.i.for.body38.i_crit_edge ]
  %arrayidx39.i = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.1115.i
  %22 = ptrtoint ptr %arrayidx39.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx39.i, align 4
  %cmp41.i = icmp eq ptr %23, null
  br i1 %cmp41.i, label %land.lhs.true42.i, label %for.body38.i.for.inc51.i_crit_edge

for.body38.i.for.inc51.i_crit_edge:               ; preds = %for.body38.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc51.i

land.lhs.true42.i:                                ; preds = %for.body38.i
  %flag.i = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.1115.i, i32 6
  %24 = ptrtoint ptr %flag.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %flag.i, align 4
  %and.i = and i32 %25, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool43.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool43.not.i, label %if.end56.i, label %land.lhs.true42.i.for.inc51.i_crit_edge

land.lhs.true42.i.for.inc51.i_crit_edge:          ; preds = %land.lhs.true42.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc51.i

for.inc51.i:                                      ; preds = %land.lhs.true42.i.for.inc51.i_crit_edge, %for.body38.i.for.inc51.i_crit_edge
  %inc52.i = add nuw nsw i32 %i.1115.i, 1
  %exitcond.not.i = icmp eq i32 %inc52.i, 16
  br i1 %exitcond.not.i, label %for.inc51.i..loopexit_crit_edge, label %for.inc51.i.for.body38.i_crit_edge

for.inc51.i.for.body38.i_crit_edge:               ; preds = %for.inc51.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body38.i

for.inc51.i..loopexit_crit_edge:                  ; preds = %for.inc51.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %.loopexit

if.end56.i:                                       ; preds = %land.lhs.true42.i
  %26 = ptrtoint ptr %arrayidx39.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %csw, ptr %arrayidx39.i, align 4
  %desc46.i = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.1115.i, i32 1
  %27 = ptrtoint ptr %desc46.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %call32.i, ptr %desc46.i, align 4
  %node.i = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.1115.i, i32 3
  %28 = ptrtoint ptr %node.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %i.1115.i, ptr %node.i, align 4
  %29 = ptrtoint ptr %flag.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 3, ptr %flag.i, align 4
  %first48.i = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.1115.i, i32 4
  %30 = ptrtoint ptr %first48.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %first, ptr %first48.i, align 4
  %last49.i = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.1115.i, i32 5
  %31 = ptrtoint ptr %last49.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %last, ptr %last49.i, align 4
  %32 = load ptr, ptr @vtconsole_class, align 4
  %call59.i = tail call ptr (ptr, ptr, i32, ptr, ptr, ptr, ...) @device_create_with_groups(ptr noundef %32, ptr noundef null, i32 noundef %i.1115.i, ptr noundef %arrayidx39.i, ptr noundef nonnull @con_dev_groups, ptr noundef nonnull @.str.44, i32 noundef %i.1115.i) #21
  %dev.i = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.1115.i, i32 2
  %33 = ptrtoint ptr %dev.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %call59.i, ptr %dev.i, align 4
  %cmp.i.i = icmp ugt ptr %call59.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %do.end65.i, label %if.else.i

do.end65.i:                                       ; preds = %if.end56.i
  call void @__sanitizer_cov_trace_pc() #23
  %34 = ptrtoint ptr %desc46.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %desc46.i, align 4
  %36 = ptrtoint ptr %call59.i to i32
  %call70.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.45, ptr noundef %35, i32 noundef %36) #26
  %37 = ptrtoint ptr %dev.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr null, ptr %dev.i, align 4
  br label %if.then1

if.else.i:                                        ; preds = %if.end56.i
  call void @__sanitizer_cov_trace_pc() #23
  %38 = ptrtoint ptr %flag.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %flag.i, align 4
  %or.i.i = or i32 %39, 4
  store i32 %or.i.i, ptr %flag.i, align 4
  br label %if.then1

.loopexit:                                        ; preds = %for.inc51.i..loopexit_crit_edge, %for.cond.15.i..loopexit_crit_edge
  %retval2.1.i = phi i32 [ -19, %for.cond.15.i..loopexit_crit_edge ], [ -22, %for.inc51.i..loopexit_crit_edge ]
  tail call void @module_put(ptr noundef %1) #21
  br label %if.end3

if.then1:                                         ; preds = %if.else.i, %do.end65.i, %for.cond.14.i.if.then1_crit_edge, %for.cond.13.i.if.then1_crit_edge, %for.cond.12.i.if.then1_crit_edge, %for.cond.11.i.if.then1_crit_edge, %for.cond.10.i.if.then1_crit_edge, %for.cond.9.i.if.then1_crit_edge, %for.cond.8.i.if.then1_crit_edge, %for.cond.7.i.if.then1_crit_edge, %for.cond.6.i.if.then1_crit_edge, %for.cond.5.i.if.then1_crit_edge, %for.cond.4.i.if.then1_crit_edge, %for.cond.3.i.if.then1_crit_edge, %for.cond.2.i.if.then1_crit_edge, %for.cond.1.i.if.then1_crit_edge, %for.cond.i.if.then1_crit_edge, %for.body.preheader.i.if.then1_crit_edge
  tail call void @module_put(ptr noundef %1) #21
  tail call fastcc void @do_bind_con_driver(ptr noundef %csw, i32 noundef %first, i32 noundef %last, i32 noundef %deflt)
  br label %if.end3

if.end3:                                          ; preds = %if.then1, %.loopexit, %if.end.i.if.end3_crit_edge
  %40 = phi i32 [ 0, %if.then1 ], [ %retval2.1.i, %.loopexit ], [ -19, %if.end.i.if.end3_crit_edge ]
  ret i32 %40
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @give_up_console(ptr noundef %csw) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @console_lock() #21
  %call = tail call i32 @do_unregister_con_driver(ptr noundef %csw)
  tail call void @console_unlock() #21
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @vtconsole_class_init() #6 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @__class_create(ptr noundef null, ptr noundef nonnull @.str.53, ptr noundef nonnull @vtconsole_class_init.__key) #21
  store ptr %call, ptr @vtconsole_class, align 4
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %do.end, label %entry.for.body.preheader_crit_edge

entry.for.body.preheader_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.preheader

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %call to i32
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.54, i32 noundef %0) #26
  store ptr null, ptr @vtconsole_class, align 4
  br label %for.body.preheader

for.body.preheader:                               ; preds = %do.end, %entry.for.body.preheader_crit_edge
  br label %for.body

for.body:                                         ; preds = %if.end24.for.body_crit_edge, %for.body.preheader
  %i.038 = phi i32 [ %inc, %if.end24.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %arrayidx = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.038
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %2, null
  br i1 %tobool.not, label %for.body.if.end24_crit_edge, label %land.lhs.true

for.body.if.end24_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end24

land.lhs.true:                                    ; preds = %for.body
  %dev = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.038, i32 2
  %3 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %dev, align 4
  %tobool6.not = icmp eq ptr %4, null
  br i1 %tobool6.not, label %if.then7, label %land.lhs.true.if.end24_crit_edge

land.lhs.true.if.end24_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end24

if.then7:                                         ; preds = %land.lhs.true
  %5 = load ptr, ptr @vtconsole_class, align 4
  %node = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.038, i32 3
  %6 = ptrtoint ptr %node to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %node, align 4
  %call9 = tail call ptr (ptr, ptr, i32, ptr, ptr, ptr, ...) @device_create_with_groups(ptr noundef %5, ptr noundef null, i32 noundef %7, ptr noundef %arrayidx, ptr noundef nonnull @con_dev_groups, ptr noundef nonnull @.str.44, i32 noundef %7) #21
  %8 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %call9, ptr %dev, align 4
  %cmp.i37 = icmp ugt ptr %call9, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i37, label %do.end16, label %if.else

do.end16:                                         ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #23
  %desc = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.038, i32 1
  %9 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %desc, align 4
  %11 = ptrtoint ptr %call9 to i32
  %call20 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.45, ptr noundef %10, i32 noundef %11) #26
  %12 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %dev, align 4
  br label %if.end24

if.else:                                          ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #23
  %flag.i = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.038, i32 6
  %13 = ptrtoint ptr %flag.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %flag.i, align 4
  %or.i = or i32 %14, 4
  store i32 %or.i, ptr %flag.i, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.else, %do.end16, %land.lhs.true.if.end24_crit_edge, %for.body.if.end24_crit_edge
  %inc = add nuw nsw i32 %i.038, 1
  %exitcond.not = icmp eq i32 %inc, 16
  br i1 %exitcond.not, label %for.end, label %if.end24.for.body_crit_edge

if.end24.for.body_crit_edge:                      ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #23
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @del_timer_sync(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mod_timer(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @vt_event_post(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @do_unblank_screen(i32 noundef %leaving_gfx) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %0 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %do.body, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 4415) #21
  br label %if.end

if.end:                                           ; preds = %do.body, %entry.if.end_crit_edge
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %1 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool4.not = icmp eq i32 %1, 0
  br i1 %tobool4.not, label %land.lhs.true, label %if.end.if.end26_crit_edge

if.end.if.end26_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end26

land.lhs.true:                                    ; preds = %if.end
  %call5 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %land.rhs, label %land.lhs.true.if.end26_crit_edge

land.lhs.true.if.end26_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end26

land.rhs:                                         ; preds = %land.lhs.true
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %2 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool7.not = icmp eq i32 %2, 0
  br i1 %tobool7.not, label %do.end20, label %land.rhs.if.end26_crit_edge, !prof !365

land.rhs.if.end26_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end26

do.end20:                                         ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4417, i32 noundef 9, ptr noundef null) #21
  br label %if.end26

if.end26:                                         ; preds = %do.end20, %land.rhs.if.end26_crit_edge, %land.lhs.true.if.end26_crit_edge, %if.end.if.end26_crit_edge
  store i1 false, ptr @ignore_poke, align 4
  %3 = load i32, ptr @console_blanked, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool33.not = icmp eq i32 %3, 0
  br i1 %tobool33.not, label %if.end26.cleanup_crit_edge, label %if.end35

if.end26.cleanup_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end35:                                         ; preds = %if.end26
  %4 = load i32, ptr @fg_console, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 63, i32 %4)
  %cmp.i = icmp ult i32 %4, 63
  br i1 %cmp.i, label %vc_cons_allocated.exit, label %if.end35.do.end41_crit_edge

if.end35.do.end41_crit_edge:                      ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end41

vc_cons_allocated.exit:                           ; preds = %if.end35
  %arrayidx.i = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %4
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i, align 4
  %tobool.i.not = icmp eq ptr %6, null
  br i1 %tobool.i.not, label %vc_cons_allocated.exit.do.end41_crit_edge, label %if.end44

vc_cons_allocated.exit.do.end41_crit_edge:        ; preds = %vc_cons_allocated.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end41

do.end41:                                         ; preds = %vc_cons_allocated.exit.do.end41_crit_edge, %if.end35.do.end41_crit_edge
  %add = add i32 %4, 1
  %call43 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.14, i32 noundef %add) #26
  br label %cleanup

if.end44:                                         ; preds = %vc_cons_allocated.exit
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx.i, align 4
  %vc_mode = getelementptr inbounds %struct.vc_data, ptr %8, i32 0, i32 17
  %9 = ptrtoint ptr %vc_mode to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %vc_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %cmp.not = icmp eq i8 %10, 0
  br i1 %cmp.not, label %if.end47, label %if.end44.cleanup_crit_edge

if.end44.cleanup_crit_edge:                       ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end47:                                         ; preds = %if.end44
  %11 = load i32, ptr @blankinterval, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool48.not = icmp eq i32 %11, 0
  br i1 %tobool48.not, label %if.end47.if.end52_crit_edge, label %if.then49

if.end47.if.end52_crit_edge:                      ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end52

if.then49:                                        ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %12 = load volatile i32, ptr @jiffies, align 128
  %mul = mul i32 %11, 100
  %add50 = add i32 %12, %mul
  %call51 = tail call i32 @mod_timer(ptr noundef nonnull @console_timer, i32 noundef %add50) #21
  store i32 1, ptr @blank_state, align 4
  br label %if.end52

if.end52:                                         ; preds = %if.then49, %if.end47.if.end52_crit_edge
  store i32 0, ptr @console_blanked, align 4
  %vc_sw = getelementptr inbounds %struct.vc_data, ptr %8, i32 0, i32 14
  %13 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %vc_sw, align 4
  %con_blank = getelementptr inbounds %struct.consw, ptr %14, i32 0, i32 10
  %15 = ptrtoint ptr %con_blank to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %con_blank, align 4
  %call53 = tail call i32 %16(ptr noundef %8, i32 noundef 0, i32 noundef %leaving_gfx) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call53)
  %tobool54.not = icmp eq i32 %call53, 0
  br i1 %tobool54.not, label %if.end52.if.end56_crit_edge, label %if.then55

if.end52.if.end56_crit_edge:                      ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end56

if.then55:                                        ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @redraw_screen(ptr noundef %8, i32 noundef 0)
  br label %if.end56

if.end56:                                         ; preds = %if.then55, %if.end52.if.end56_crit_edge
  %17 = load ptr, ptr @console_blank_hook, align 4
  %tobool57.not = icmp eq ptr %17, null
  br i1 %tobool57.not, label %if.end56.if.end60_crit_edge, label %if.then58

if.end56.if.end60_crit_edge:                      ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end60

if.then58:                                        ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #23
  %call59 = tail call i32 %17(i32 noundef 0) #21
  br label %if.end60

if.end60:                                         ; preds = %if.then58, %if.end56.if.end60_crit_edge
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %18 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.not.i = icmp eq i32 %18, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.end60.if.end.i_crit_edge

if.end60.if.end.i_crit_edge:                      ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %if.end60
  %call1.i = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %land.rhs.i73, label %land.lhs.true.i.if.end.i_crit_edge

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i73:                                     ; preds = %land.lhs.true.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %19 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool3.not.i = icmp eq i32 %19, 0
  br i1 %tobool3.not.i, label %do.end.i, label %land.rhs.i73.if.end.i_crit_edge, !prof !365

land.rhs.i73.if.end.i_crit_edge:                  ; preds = %land.rhs.i73
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i73
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4505, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i73.if.end.i_crit_edge, %land.lhs.true.i.if.end.i_crit_edge, %if.end60.if.end.i_crit_edge
  %20 = ptrtoint ptr %vc_mode to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %vc_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %21)
  %cmp.not.i = icmp eq i8 %21, 1
  br i1 %cmp.not.i, label %if.end.i.set_palette.exit_crit_edge, label %land.lhs.true25.i

if.end.i.set_palette.exit_crit_edge:              ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_palette.exit

land.lhs.true25.i:                                ; preds = %if.end.i
  %22 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %vc_sw, align 4
  %con_set_palette.i = getelementptr inbounds %struct.consw, ptr %23, i32 0, i32 15
  %24 = ptrtoint ptr %con_set_palette.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %con_set_palette.i, align 4
  %tobool26.not.i = icmp eq ptr %25, null
  br i1 %tobool26.not.i, label %land.lhs.true25.i.set_palette.exit_crit_edge, label %if.then27.i

land.lhs.true25.i.set_palette.exit_crit_edge:     ; preds = %land.lhs.true25.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_palette.exit

if.then27.i:                                      ; preds = %land.lhs.true25.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %25(ptr noundef %8, ptr noundef nonnull @color_table) #21
  br label %set_palette.exit

set_palette.exit:                                 ; preds = %if.then27.i, %land.lhs.true25.i.set_palette.exit_crit_edge, %if.end.i.set_palette.exit_crit_edge
  %vc_num.i.i = getelementptr inbounds %struct.vc_data, ptr %8, i32 0, i32 3
  %26 = ptrtoint ptr %vc_num.i.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %vc_num.i.i, align 4
  %conv.i.i = zext i16 %27 to i32
  %28 = load i32, ptr @fg_console, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %conv.i.i)
  %cmp.i.i = icmp eq i32 %28, %conv.i.i
  br i1 %cmp.i.i, label %lor.lhs.false.i, label %set_palette.exit.set_cursor.exit_crit_edge

set_palette.exit.set_cursor.exit_crit_edge:       ; preds = %set_palette.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_cursor.exit

lor.lhs.false.i:                                  ; preds = %set_palette.exit
  %29 = load i32, ptr @console_blanked, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool.not.i74 = icmp eq i32 %29, 0
  br i1 %tobool.not.i74, label %lor.lhs.false1.i, label %lor.lhs.false.i.set_cursor.exit_crit_edge

lor.lhs.false.i.set_cursor.exit_crit_edge:        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_cursor.exit

lor.lhs.false1.i:                                 ; preds = %lor.lhs.false.i
  %30 = ptrtoint ptr %vc_mode to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %vc_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %31)
  %cmp.i76 = icmp eq i8 %31, 1
  br i1 %cmp.i76, label %lor.lhs.false1.i.set_cursor.exit_crit_edge, label %if.end.i78

lor.lhs.false1.i.set_cursor.exit_crit_edge:       ; preds = %lor.lhs.false1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_cursor.exit

if.end.i78:                                       ; preds = %lor.lhs.false1.i
  %vc_deccm.i = getelementptr inbounds %struct.vc_data, ptr %8, i32 0, i32 37
  %32 = ptrtoint ptr %vc_deccm.i to i32
  call void @__asan_load2_noabort(i32 %32)
  %bf.load.i = load i16, ptr %vc_deccm.i, align 4
  %33 = and i16 %bf.load.i, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %33)
  %tobool3.not.i77 = icmp eq i16 %33, 0
  br i1 %tobool3.not.i77, label %if.else.i, label %if.then4.i

if.then4.i:                                       ; preds = %if.end.i78
  %call5.i = tail call zeroext i1 @vc_is_sel(ptr noundef %8) #21
  br i1 %call5.i, label %if.then6.i, label %if.then4.i.if.end7.i_crit_edge

if.then4.i.if.end7.i_crit_edge:                   ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7.i

if.then6.i:                                       ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @clear_selection() #21
  br label %if.end7.i

if.end7.i:                                        ; preds = %if.then6.i, %if.then4.i.if.end7.i_crit_edge
  tail call fastcc void @add_softcursor(ptr noundef %8) #21
  %vc_cursor_type.i = getelementptr inbounds %struct.vc_data, ptr %8, i32 0, i32 23
  %34 = ptrtoint ptr %vc_cursor_type.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %vc_cursor_type.i, align 4
  %and.i = and i32 %35, 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i)
  %cmp8.not.i = icmp eq i32 %and.i, 1
  br i1 %cmp8.not.i, label %if.end7.i.set_cursor.exit_crit_edge, label %if.then10.i

if.end7.i.set_cursor.exit_crit_edge:              ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_cursor.exit

if.then10.i:                                      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  %36 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %vc_sw, align 4
  %con_cursor.i = getelementptr inbounds %struct.consw, ptr %37, i32 0, i32 7
  %38 = ptrtoint ptr %con_cursor.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %con_cursor.i, align 4
  tail call void %39(ptr noundef %8, i32 noundef 1) #21
  br label %set_cursor.exit

if.else.i:                                        ; preds = %if.end.i78
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @hide_cursor(ptr noundef %8) #21
  br label %set_cursor.exit

set_cursor.exit:                                  ; preds = %if.else.i, %if.then10.i, %if.end7.i.set_cursor.exit_crit_edge, %lor.lhs.false1.i.set_cursor.exit_crit_edge, %lor.lhs.false.i.set_cursor.exit_crit_edge, %set_palette.exit.set_cursor.exit_crit_edge
  %40 = ptrtoint ptr %vc_num.i.i to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %vc_num.i.i, align 4
  %conv61 = zext i16 %41 to i32
  tail call void @vt_event_post(i32 noundef 4, i32 noundef %conv61, i32 noundef %conv61) #21
  br label %cleanup

cleanup:                                          ; preds = %set_cursor.exit, %if.end44.cleanup_crit_edge, %do.end41, %if.end26.cleanup_crit_edge
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #8

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @poke_blanked_console() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %0 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.rhs, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.rhs:                                         ; preds = %land.lhs.true
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %1 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool3.not = icmp eq i32 %1, 0
  br i1 %tobool3.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !365

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4473, i32 noundef 9, ptr noundef null) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  tail call void @__might_sleep(ptr noundef nonnull @.str, i32 noundef 4481) #21
  %call30 = tail call i32 @del_timer(ptr noundef nonnull @console_timer) #21
  store i1 false, ptr @blank_timer_expired, align 4
  %.b = load i1, ptr @ignore_poke, align 4
  br i1 %.b, label %if.end.if.end45_crit_edge, label %lor.lhs.false

if.end.if.end45_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end45

lor.lhs.false:                                    ; preds = %if.end
  %2 = load i32, ptr @fg_console, align 4
  %arrayidx = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %2
  %3 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %arrayidx, align 4
  %tobool32.not = icmp eq ptr %4, null
  br i1 %tobool32.not, label %lor.lhs.false.if.end45_crit_edge, label %lor.lhs.false33

lor.lhs.false.if.end45_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end45

lor.lhs.false33:                                  ; preds = %lor.lhs.false
  %vc_mode = getelementptr inbounds %struct.vc_data, ptr %4, i32 0, i32 17
  %5 = ptrtoint ptr %vc_mode to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %vc_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %6)
  %cmp = icmp eq i8 %6, 1
  br i1 %cmp, label %lor.lhs.false33.if.end45_crit_edge, label %if.end38

lor.lhs.false33.if.end45_crit_edge:               ; preds = %lor.lhs.false33
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end45

if.end38:                                         ; preds = %lor.lhs.false33
  %7 = load i32, ptr @console_blanked, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool39.not = icmp eq i32 %7, 0
  br i1 %tobool39.not, label %if.else, label %if.then40

if.then40:                                        ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @do_unblank_screen(i32 noundef 0) #21
  br label %if.end45

if.else:                                          ; preds = %if.end38
  %8 = load i32, ptr @blankinterval, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool41.not = icmp eq i32 %8, 0
  br i1 %tobool41.not, label %if.else.if.end45_crit_edge, label %if.then42

if.else.if.end45_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end45

if.then42:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %9 = load volatile i32, ptr @jiffies, align 128
  %mul = mul i32 %8, 100
  %add = add i32 %9, %mul
  %call43 = tail call i32 @mod_timer(ptr noundef nonnull @console_timer, i32 noundef %add) #21
  store i32 1, ptr @blank_state, align 4
  br label %if.end45

if.end45:                                         ; preds = %if.then42, %if.else.if.end45_crit_edge, %if.then40, %lor.lhs.false33.if.end45_crit_edge, %lor.lhs.false.if.end45_crit_edge, %if.end.if.end45_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @del_timer(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @con_set_cmap(ptr noundef %arg) local_unnamed_addr #0 align 64 {
entry:
  %colormap = alloca [48 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %colormap) #21
  %0 = call ptr @memset(ptr %colormap, i32 255, i32 48)
  tail call void @__might_fault(ptr noundef nonnull @.str.61, i32 noundef 156) #21
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #21
  br i1 %call.i.i, label %entry.if.then11.i.i_crit_edge, label %land.lhs.true.i.i

entry.if.then11.i.i_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then11.i.i

land.lhs.true.i.i:                                ; preds = %entry
  %1 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %arg, i32 48, i32 -1226833920) #28, !srcloc !382
  %asmresult.i.i = extractvalue { i32, i32 } %1, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i1.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i1.i, label %if.end.i.i, label %land.lhs.true.i.i.if.then11.i.i_crit_edge, !prof !383

land.lhs.true.i.i.if.then11.i.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then11.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %colormap, i32 noundef 48) #21
  %2 = call i32 @llvm.read_register.i32(metadata !355) #21
  %and.i.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 4
  %4 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #14, !srcloc !372
  %and.i.i.i.i = and i32 %4, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #21, !srcloc !373
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #21, !srcloc !374
  %call1.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %colormap, ptr noundef %arg, i32 noundef 48) #21
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %4) #21, !srcloc !373
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #21, !srcloc !374
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool4.not.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end, label %if.end.i.i.if.then11.i.i_crit_edge, !prof !383

if.end.i.i.if.then11.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then11.i.i

if.then11.i.i:                                    ; preds = %if.end.i.i.if.then11.i.i_crit_edge, %land.lhs.true.i.i.if.then11.i.i_crit_edge, %entry.if.then11.i.i_crit_edge
  %res.03.i.i = phi i32 [ %call1.i.i.i, %if.end.i.i.if.then11.i.i_crit_edge ], [ 48, %entry.if.then11.i.i_crit_edge ], [ 48, %land.lhs.true.i.i.if.then11.i.i_crit_edge ]
  %sub.i.i = sub i32 48, %res.03.i.i
  %add.ptr.i.i = getelementptr i8, ptr %colormap, i32 %sub.i.i
  %5 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.03.i.i)
  br label %cleanup

if.end:                                           ; preds = %if.end.i.i
  call void @console_lock() #21
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end
  %k.072 = phi i32 [ 0, %if.end ], [ %inc5, %for.body.for.body_crit_edge ]
  %i.071 = phi i32 [ 0, %if.end ], [ %inc8, %for.body.for.body_crit_edge ]
  %inc = add nuw nsw i32 %k.072, 1
  %arrayidx = getelementptr [48 x i8], ptr %colormap, i32 0, i32 %k.072
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx, align 1
  %arrayidx1 = getelementptr [16 x i8], ptr @default_red, i32 0, i32 %i.071
  %8 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %7, ptr %arrayidx1, align 1
  %inc2 = add nuw nsw i32 %k.072, 2
  %arrayidx3 = getelementptr [48 x i8], ptr %colormap, i32 0, i32 %inc
  %9 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %arrayidx3, align 1
  %arrayidx4 = getelementptr [16 x i8], ptr @default_grn, i32 0, i32 %i.071
  %11 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %10, ptr %arrayidx4, align 1
  %inc5 = add nuw nsw i32 %k.072, 3
  %arrayidx6 = getelementptr [48 x i8], ptr %colormap, i32 0, i32 %inc2
  %12 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx6, align 1
  %arrayidx7 = getelementptr [16 x i8], ptr @default_blu, i32 0, i32 %i.071
  %14 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %13, ptr %arrayidx7, align 1
  %inc8 = add nuw nsw i32 %i.071, 1
  %exitcond.not = icmp eq i32 %inc8, 16
  br i1 %exitcond.not, label %for.body.vc_cons_allocated.exit_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.body.vc_cons_allocated.exit_crit_edge:        ; preds = %for.body
  br label %vc_cons_allocated.exit

vc_cons_allocated.exit:                           ; preds = %for.inc40.vc_cons_allocated.exit_crit_edge, %for.body.vc_cons_allocated.exit_crit_edge
  %i.175 = phi i32 [ %inc41, %for.inc40.vc_cons_allocated.exit_crit_edge ], [ 0, %for.body.vc_cons_allocated.exit_crit_edge ]
  %arrayidx.i = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %i.175
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %arrayidx.i, align 4
  %tobool.i.not = icmp eq ptr %16, null
  br i1 %tobool.i.not, label %vc_cons_allocated.exit.for.inc40_crit_edge, label %vc_cons_allocated.exit.for.body18_crit_edge

vc_cons_allocated.exit.for.body18_crit_edge:      ; preds = %vc_cons_allocated.exit
  br label %for.body18

vc_cons_allocated.exit.for.inc40_crit_edge:       ; preds = %vc_cons_allocated.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc40

for.body18:                                       ; preds = %for.body18.for.body18_crit_edge, %vc_cons_allocated.exit.for.body18_crit_edge
  %k.174 = phi i32 [ %inc33, %for.body18.for.body18_crit_edge ], [ 0, %vc_cons_allocated.exit.for.body18_crit_edge ]
  %j.073 = phi i32 [ %inc36, %for.body18.for.body18_crit_edge ], [ 0, %vc_cons_allocated.exit.for.body18_crit_edge ]
  %arrayidx19 = getelementptr [16 x i8], ptr @default_red, i32 0, i32 %j.073
  %17 = ptrtoint ptr %arrayidx19 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %arrayidx19, align 1
  %19 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx.i, align 4
  %inc21 = add nuw nsw i32 %k.174, 1
  %arrayidx22 = getelementptr %struct.vc_data, ptr %20, i32 0, i32 41, i32 %k.174
  %21 = ptrtoint ptr %arrayidx22 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %18, ptr %arrayidx22, align 1
  %arrayidx23 = getelementptr [16 x i8], ptr @default_grn, i32 0, i32 %j.073
  %22 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %arrayidx23, align 1
  %24 = load ptr, ptr %arrayidx.i, align 4
  %inc27 = add nuw nsw i32 %k.174, 2
  %arrayidx28 = getelementptr %struct.vc_data, ptr %24, i32 0, i32 41, i32 %inc21
  %25 = ptrtoint ptr %arrayidx28 to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 %23, ptr %arrayidx28, align 1
  %arrayidx29 = getelementptr [16 x i8], ptr @default_blu, i32 0, i32 %j.073
  %26 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %arrayidx29, align 1
  %28 = load ptr, ptr %arrayidx.i, align 4
  %inc33 = add nuw nsw i32 %k.174, 3
  %arrayidx34 = getelementptr %struct.vc_data, ptr %28, i32 0, i32 41, i32 %inc27
  %29 = ptrtoint ptr %arrayidx34 to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 %27, ptr %arrayidx34, align 1
  %inc36 = add nuw nsw i32 %j.073, 1
  %exitcond77.not = icmp eq i32 %inc36, 16
  br i1 %exitcond77.not, label %for.end37, label %for.body18.for.body18_crit_edge

for.body18.for.body18_crit_edge:                  ; preds = %for.body18
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body18

for.end37:                                        ; preds = %for.body18
  %30 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %arrayidx.i, align 4
  %call.i.i.i66 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %32 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.not.i = icmp eq i32 %32, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %for.end37.if.end.i_crit_edge

for.end37.if.end.i_crit_edge:                     ; preds = %for.end37
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %for.end37
  %call1.i = call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %land.rhs.i67, label %land.lhs.true.i.if.end.i_crit_edge

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i67:                                     ; preds = %land.lhs.true.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %33 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool3.not.i = icmp eq i32 %33, 0
  br i1 %tobool3.not.i, label %do.end.i, label %land.rhs.i67.if.end.i_crit_edge, !prof !365

land.rhs.i67.if.end.i_crit_edge:                  ; preds = %land.rhs.i67
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i67
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4505, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i67.if.end.i_crit_edge, %land.lhs.true.i.if.end.i_crit_edge, %for.end37.if.end.i_crit_edge
  %vc_mode.i = getelementptr inbounds %struct.vc_data, ptr %31, i32 0, i32 17
  %34 = ptrtoint ptr %vc_mode.i to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %vc_mode.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %35)
  %cmp.not.i = icmp eq i8 %35, 1
  br i1 %cmp.not.i, label %if.end.i.for.inc40_crit_edge, label %land.lhs.true25.i

if.end.i.for.inc40_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc40

land.lhs.true25.i:                                ; preds = %if.end.i
  %vc_sw.i = getelementptr inbounds %struct.vc_data, ptr %31, i32 0, i32 14
  %36 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %vc_sw.i, align 4
  %con_set_palette.i = getelementptr inbounds %struct.consw, ptr %37, i32 0, i32 15
  %38 = ptrtoint ptr %con_set_palette.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %con_set_palette.i, align 4
  %tobool26.not.i = icmp eq ptr %39, null
  br i1 %tobool26.not.i, label %land.lhs.true25.i.for.inc40_crit_edge, label %if.then27.i

land.lhs.true25.i.for.inc40_crit_edge:            ; preds = %land.lhs.true25.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc40

if.then27.i:                                      ; preds = %land.lhs.true25.i
  call void @__sanitizer_cov_trace_pc() #23
  call void %39(ptr noundef %31, ptr noundef nonnull @color_table) #21
  br label %for.inc40

for.inc40:                                        ; preds = %if.then27.i, %land.lhs.true25.i.for.inc40_crit_edge, %if.end.i.for.inc40_crit_edge, %vc_cons_allocated.exit.for.inc40_crit_edge
  %inc41 = add nuw nsw i32 %i.175, 1
  %exitcond78.not = icmp eq i32 %inc41, 63
  br i1 %exitcond78.not, label %for.end42, label %for.inc40.vc_cons_allocated.exit_crit_edge

for.inc40.vc_cons_allocated.exit_crit_edge:       ; preds = %for.inc40
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_cons_allocated.exit

for.end42:                                        ; preds = %for.inc40
  call void @__sanitizer_cov_trace_pc() #23
  call void @console_unlock() #21
  br label %cleanup

cleanup:                                          ; preds = %for.end42, %if.then11.i.i
  %retval.0 = phi i32 [ 0, %for.end42 ], [ -14, %if.then11.i.i ]
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %colormap) #21
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @con_get_cmap(ptr noundef %arg) local_unnamed_addr #0 align 64 {
entry:
  %colormap = alloca [48 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %colormap) #21
  %0 = call ptr @memset(ptr %colormap, i32 255, i32 48)
  tail call void @console_lock() #21
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry
  %k.020 = phi i32 [ 0, %entry ], [ %inc6, %for.body.for.body_crit_edge ]
  %i.019 = phi i32 [ 0, %entry ], [ %inc8, %for.body.for.body_crit_edge ]
  %arrayidx = getelementptr [16 x i8], ptr @default_red, i32 0, i32 %i.019
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %arrayidx, align 1
  %inc = add nuw nsw i32 %k.020, 1
  %arrayidx1 = getelementptr [48 x i8], ptr %colormap, i32 0, i32 %k.020
  %3 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 %2, ptr %arrayidx1, align 1
  %arrayidx2 = getelementptr [16 x i8], ptr @default_grn, i32 0, i32 %i.019
  %4 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %arrayidx2, align 1
  %inc3 = add nuw nsw i32 %k.020, 2
  %arrayidx4 = getelementptr [48 x i8], ptr %colormap, i32 0, i32 %inc
  %6 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %5, ptr %arrayidx4, align 1
  %arrayidx5 = getelementptr [16 x i8], ptr @default_blu, i32 0, i32 %i.019
  %7 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %arrayidx5, align 1
  %inc6 = add nuw nsw i32 %k.020, 3
  %arrayidx7 = getelementptr [48 x i8], ptr %colormap, i32 0, i32 %inc3
  %9 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %8, ptr %arrayidx7, align 1
  %inc8 = add nuw nsw i32 %i.019, 1
  %exitcond.not = icmp eq i32 %inc8, 16
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.body
  tail call void @console_unlock() #21
  tail call void @__might_fault(ptr noundef nonnull @.str.61, i32 noundef 174) #21
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #21
  br i1 %call.i.i, label %for.end.copy_to_user.exit.thread_crit_edge, label %if.end.i.i

for.end.copy_to_user.exit.thread_crit_edge:       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %copy_to_user.exit.thread

if.end.i.i:                                       ; preds = %for.end
  %10 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %arg, i32 48, i32 -1226833920) #28, !srcloc !384
  %asmresult.i.i = extractvalue { i32, i32 } %10, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.copy_to_user.exit.thread_crit_edge

if.end.i.i.copy_to_user.exit.thread_crit_edge:    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %copy_to_user.exit.thread

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %colormap, i32 noundef 48) #21
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef %arg, ptr noundef nonnull %colormap, i32 noundef 48) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -14
  br label %copy_to_user.exit.thread

copy_to_user.exit.thread:                         ; preds = %copy_to_user.exit, %if.end.i.i.copy_to_user.exit.thread_crit_edge, %for.end.copy_to_user.exit.thread_crit_edge
  %11 = phi i32 [ -14, %for.end.copy_to_user.exit.thread_crit_edge ], [ -14, %if.end.i.i.copy_to_user.exit.thread_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %colormap) #21
  ret i32 %11
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @reset_palette(ptr noundef %vc) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry
  %k.021 = phi i32 [ 0, %entry ], [ %inc8, %for.body.for.body_crit_edge ]
  %j.020 = phi i32 [ 0, %entry ], [ %inc10, %for.body.for.body_crit_edge ]
  %arrayidx = getelementptr [16 x i8], ptr @default_red, i32 0, i32 %j.020
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %arrayidx, align 1
  %inc = add nuw nsw i32 %k.021, 1
  %arrayidx1 = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 41, i32 %k.021
  %2 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 %1, ptr %arrayidx1, align 1
  %arrayidx2 = getelementptr [16 x i8], ptr @default_grn, i32 0, i32 %j.020
  %3 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %arrayidx2, align 1
  %inc4 = add nuw nsw i32 %k.021, 2
  %arrayidx5 = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 41, i32 %inc
  %5 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %4, ptr %arrayidx5, align 1
  %arrayidx6 = getelementptr [16 x i8], ptr @default_blu, i32 0, i32 %j.020
  %6 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx6, align 1
  %inc8 = add nuw nsw i32 %k.021, 3
  %arrayidx9 = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 41, i32 %inc4
  %8 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %7, ptr %arrayidx9, align 1
  %inc10 = add nuw nsw i32 %j.020, 1
  %exitcond.not = icmp eq i32 %inc10, 16
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.body
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %9 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not.i = icmp eq i32 %9, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %for.end.if.end.i_crit_edge

for.end.if.end.i_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %for.end
  %call1.i = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %land.rhs.i, label %land.lhs.true.i.if.end.i_crit_edge

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i:                                       ; preds = %land.lhs.true.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %10 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool3.not.i = icmp eq i32 %10, 0
  br i1 %tobool3.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !365

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4505, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %land.lhs.true.i.if.end.i_crit_edge, %for.end.if.end.i_crit_edge
  %vc_mode.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 17
  %11 = ptrtoint ptr %vc_mode.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %vc_mode.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %12)
  %cmp.not.i = icmp eq i8 %12, 1
  br i1 %cmp.not.i, label %if.end.i.set_palette.exit_crit_edge, label %land.lhs.true25.i

if.end.i.set_palette.exit_crit_edge:              ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_palette.exit

land.lhs.true25.i:                                ; preds = %if.end.i
  %vc_sw.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %13 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %vc_sw.i, align 4
  %con_set_palette.i = getelementptr inbounds %struct.consw, ptr %14, i32 0, i32 15
  %15 = ptrtoint ptr %con_set_palette.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %con_set_palette.i, align 4
  %tobool26.not.i = icmp eq ptr %16, null
  br i1 %tobool26.not.i, label %land.lhs.true25.i.set_palette.exit_crit_edge, label %if.then27.i

land.lhs.true25.i.set_palette.exit_crit_edge:     ; preds = %land.lhs.true25.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_palette.exit

if.then27.i:                                      ; preds = %land.lhs.true25.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %16(ptr noundef %vc, ptr noundef nonnull @color_table) #21
  br label %set_palette.exit

set_palette.exit:                                 ; preds = %if.then27.i, %land.lhs.true25.i.set_palette.exit_crit_edge, %if.end.i.set_palette.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @con_font_op(ptr noundef %vc, ptr nocapture noundef %op) local_unnamed_addr #0 align 64 {
entry:
  %font.i22 = alloca %struct.console_font, align 4
  %name.i = alloca [32 x i8], align 1
  %font.i12 = alloca %struct.console_font, align 4
  %font.i = alloca %struct.console_font, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %op, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.62)
  switch i32 %1, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb4
    i32 3, label %entry.return_crit_edge
  ]

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

sw.bb:                                            ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %font.i) #21
  %3 = getelementptr inbounds %struct.console_font, ptr %font.i, i32 0, i32 1
  %4 = getelementptr inbounds %struct.console_font, ptr %font.i, i32 0, i32 2
  %5 = getelementptr inbounds %struct.console_font, ptr %font.i, i32 0, i32 3
  %vc_mode.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 17
  %6 = ptrtoint ptr %vc_mode.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %vc_mode.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %cmp.not.i = icmp eq i8 %7, 0
  br i1 %cmp.not.i, label %if.end.i, label %sw.bb.con_font_set.exit_crit_edge

sw.bb.con_font_set.exit_crit_edge:                ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_font_set.exit

if.end.i:                                         ; preds = %sw.bb
  %data.i = getelementptr inbounds %struct.console_font_op, ptr %op, i32 0, i32 5
  %8 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %data.i, align 4
  %tobool.not.i = icmp eq ptr %9, null
  br i1 %tobool.not.i, label %if.end.i.con_font_set.exit_crit_edge, label %if.end3.i

if.end.i.con_font_set.exit_crit_edge:             ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_font_set.exit

if.end3.i:                                        ; preds = %if.end.i
  %charcount.i = getelementptr inbounds %struct.console_font_op, ptr %op, i32 0, i32 4
  %10 = ptrtoint ptr %charcount.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %charcount.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 512, i32 %11)
  %cmp4.i = icmp ugt i32 %11, 512
  br i1 %cmp4.i, label %if.end3.i.con_font_set.exit_crit_edge, label %if.end7.i

if.end3.i.con_font_set.exit_crit_edge:            ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_font_set.exit

if.end7.i:                                        ; preds = %if.end3.i
  %width.i = getelementptr inbounds %struct.console_font_op, ptr %op, i32 0, i32 2
  %12 = ptrtoint ptr %width.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %width.i, align 4
  %14 = add i32 %13, -33
  call void @__sanitizer_cov_trace_const_cmp4(i32 -32, i32 %14)
  %15 = icmp ult i32 %14, -32
  br i1 %15, label %if.end7.i.con_font_set.exit_crit_edge, label %lor.lhs.false13.i

if.end7.i.con_font_set.exit_crit_edge:            ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_font_set.exit

lor.lhs.false13.i:                                ; preds = %if.end7.i
  %height.i = getelementptr inbounds %struct.console_font_op, ptr %op, i32 0, i32 3
  %16 = ptrtoint ptr %height.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %height.i, align 4
  %18 = add i32 %17, -33
  call void @__sanitizer_cov_trace_const_cmp4(i32 -32, i32 %18)
  %19 = icmp ult i32 %18, -32
  br i1 %19, label %lor.lhs.false13.i.con_font_set.exit_crit_edge, label %if.end27.i

lor.lhs.false13.i.con_font_set.exit_crit_edge:    ; preds = %lor.lhs.false13.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_font_set.exit

if.end27.i:                                       ; preds = %lor.lhs.false13.i
  %add.i = shl nuw nsw i32 %13, 2
  %20 = add nuw nsw i32 %add.i, 28
  %mul.i = and i32 %20, -32
  %mul23.i = mul nuw nsw i32 %mul.i, %11
  %call.i = tail call ptr @memdup_user(ptr noundef nonnull %9, i32 noundef %mul23.i) #21
  %21 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %call.i, ptr %5, align 4
  %cmp.i.i = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.then32.i, label %if.end35.i

if.then32.i:                                      ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #23
  %22 = ptrtoint ptr %call.i to i32
  br label %con_font_set.exit

if.end35.i:                                       ; preds = %if.end27.i
  %23 = ptrtoint ptr %charcount.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %charcount.i, align 4
  %25 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %4, align 4
  %26 = ptrtoint ptr %width.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %width.i, align 4
  %28 = ptrtoint ptr %font.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %font.i, align 4
  %29 = ptrtoint ptr %height.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %height.i, align 4
  %31 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %3, align 4
  tail call void @console_lock() #21
  %32 = ptrtoint ptr %vc_mode.i to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %vc_mode.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %33)
  %cmp44.not.i = icmp eq i8 %33, 0
  br i1 %cmp44.not.i, label %if.else.i, label %if.end35.i.if.end54.i_crit_edge

if.end35.i.if.end54.i_crit_edge:                  ; preds = %if.end35.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54.i

if.else.i:                                        ; preds = %if.end35.i
  %vc_sw.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %34 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %vc_sw.i, align 4
  %con_font_set.i = getelementptr inbounds %struct.consw, ptr %35, i32 0, i32 11
  %36 = ptrtoint ptr %con_font_set.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %con_font_set.i, align 4
  %tobool47.not.i = icmp eq ptr %37, null
  br i1 %tobool47.not.i, label %if.else.i.if.end54.i_crit_edge, label %if.then48.i

if.else.i.if.end54.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54.i

if.then48.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  %flags.i = getelementptr inbounds %struct.console_font_op, ptr %op, i32 0, i32 1
  %38 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %flags.i, align 4
  %call51.i = call i32 %37(ptr noundef %vc, ptr noundef nonnull %font.i, i32 noundef %39) #21
  br label %if.end54.i

if.end54.i:                                       ; preds = %if.then48.i, %if.else.i.if.end54.i_crit_edge, %if.end35.i.if.end54.i_crit_edge
  %rc.0.i = phi i32 [ %call51.i, %if.then48.i ], [ -22, %if.end35.i.if.end54.i_crit_edge ], [ -38, %if.else.i.if.end54.i_crit_edge ]
  call void @console_unlock() #21
  %40 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %5, align 4
  call void @kfree(ptr noundef %41) #21
  br label %con_font_set.exit

con_font_set.exit:                                ; preds = %if.end54.i, %if.then32.i, %lor.lhs.false13.i.con_font_set.exit_crit_edge, %if.end7.i.con_font_set.exit_crit_edge, %if.end3.i.con_font_set.exit_crit_edge, %if.end.i.con_font_set.exit_crit_edge, %sw.bb.con_font_set.exit_crit_edge
  %retval.0.i = phi i32 [ %22, %if.then32.i ], [ %rc.0.i, %if.end54.i ], [ -22, %sw.bb.con_font_set.exit_crit_edge ], [ -22, %if.end.i.con_font_set.exit_crit_edge ], [ -22, %if.end3.i.con_font_set.exit_crit_edge ], [ -22, %lor.lhs.false13.i.con_font_set.exit_crit_edge ], [ -22, %if.end7.i.con_font_set.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %font.i) #21
  br label %return

sw.bb2:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %font.i12) #21
  %42 = getelementptr inbounds %struct.console_font, ptr %font.i12, i32 0, i32 1
  %43 = getelementptr inbounds %struct.console_font, ptr %font.i12, i32 0, i32 2
  %44 = getelementptr inbounds %struct.console_font, ptr %font.i12, i32 0, i32 3
  %data.i13 = getelementptr inbounds %struct.console_font_op, ptr %op, i32 0, i32 5
  %45 = call ptr @memset(ptr %font.i12, i32 255, i32 16)
  %46 = ptrtoint ptr %data.i13 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %data.i13, align 4
  %tobool.not.i14 = icmp eq ptr %47, null
  br i1 %tobool.not.i14, label %if.else.i15, label %if.then.i

if.then.i:                                        ; preds = %sw.bb2
  %call1.i.i.i = tail call noalias align 4096 ptr @kmalloc_order_trace(i32 noundef 65536, i32 noundef 3264, i32 noundef 4) #24
  %48 = ptrtoint ptr %44 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %call1.i.i.i, ptr %44, align 4
  %tobool3.not.i = icmp eq ptr %call1.i.i.i, null
  br i1 %tobool3.not.i, label %if.then.i.con_font_get.exit_crit_edge, label %if.then.i.if.end6.i_crit_edge

if.then.i.if.end6.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end6.i

if.then.i.con_font_get.exit_crit_edge:            ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_font_get.exit

if.else.i15:                                      ; preds = %sw.bb2
  call void @__sanitizer_cov_trace_pc() #23
  %49 = ptrtoint ptr %44 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr null, ptr %44, align 4
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.else.i15, %if.then.i.if.end6.i_crit_edge
  tail call void @console_lock() #21
  %vc_mode.i16 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 17
  %50 = ptrtoint ptr %vc_mode.i16 to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %vc_mode.i16, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %51)
  %cmp.not.i17 = icmp eq i8 %51, 0
  br i1 %cmp.not.i17, label %if.else9.i, label %if.end6.i.if.end17.thread.i_crit_edge

if.end6.i.if.end17.thread.i_crit_edge:            ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end17.thread.i

if.else9.i:                                       ; preds = %if.end6.i
  %vc_sw.i18 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %52 = ptrtoint ptr %vc_sw.i18 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %vc_sw.i18, align 4
  %con_font_get.i = getelementptr inbounds %struct.consw, ptr %53, i32 0, i32 12
  %54 = ptrtoint ptr %con_font_get.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %con_font_get.i, align 4
  %tobool10.not.i = icmp eq ptr %55, null
  br i1 %tobool10.not.i, label %if.else9.i.if.end17.thread.i_crit_edge, label %if.end17.i

if.else9.i.if.end17.thread.i_crit_edge:           ; preds = %if.else9.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end17.thread.i

if.end17.thread.i:                                ; preds = %if.else9.i.if.end17.thread.i_crit_edge, %if.end6.i.if.end17.thread.i_crit_edge
  %rc.0.ph.i = phi i32 [ -38, %if.else9.i.if.end17.thread.i_crit_edge ], [ -22, %if.end6.i.if.end17.thread.i_crit_edge ]
  tail call void @console_unlock() #21
  br label %out.i

if.end17.i:                                       ; preds = %if.else9.i
  %call14.i = call i32 %55(ptr noundef %vc, ptr noundef nonnull %font.i12) #21
  call void @console_unlock() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.i)
  %tobool18.not.i = icmp eq i32 %call14.i, 0
  br i1 %tobool18.not.i, label %if.end20.i, label %if.end17.i.out.i_crit_edge

if.end17.i.out.i_crit_edge:                       ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %out.i

if.end20.i:                                       ; preds = %if.end17.i
  %56 = ptrtoint ptr %font.i12 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %font.i12, align 4
  %add.i19 = shl i32 %57, 2
  %58 = add i32 %add.i19, 28
  %mul.i20 = and i32 %58, -32
  %59 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %43, align 4
  %mul21.i = mul i32 %mul.i20, %60
  %61 = ptrtoint ptr %data.i13 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %data.i13, align 4
  %tobool23.not.i = icmp eq ptr %62, null
  br i1 %tobool23.not.i, label %if.end20.i.if.end29.i_crit_edge, label %land.lhs.true.i

if.end20.i.if.end29.i_crit_edge:                  ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29.i

land.lhs.true.i:                                  ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #23
  %charcount25.i = getelementptr inbounds %struct.console_font_op, ptr %op, i32 0, i32 4
  %63 = ptrtoint ptr %charcount25.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %charcount25.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %60, i32 %64)
  %cmp26.i = icmp ugt i32 %60, %64
  %spec.select.i = select i1 %cmp26.i, i32 -28, i32 0
  br label %if.end29.i

if.end29.i:                                       ; preds = %land.lhs.true.i, %if.end20.i.if.end29.i_crit_edge
  %rc.1.i = phi i32 [ 0, %if.end20.i.if.end29.i_crit_edge ], [ %spec.select.i, %land.lhs.true.i ]
  %width31.i = getelementptr inbounds %struct.console_font_op, ptr %op, i32 0, i32 2
  %65 = ptrtoint ptr %width31.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %width31.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %57, i32 %66)
  %cmp32.i = icmp ugt i32 %57, %66
  br i1 %cmp32.i, label %if.end29.i.out.i_crit_edge, label %lor.lhs.false.i

if.end29.i.out.i_crit_edge:                       ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %out.i

lor.lhs.false.i:                                  ; preds = %if.end29.i
  %67 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %42, align 4
  %height34.i = getelementptr inbounds %struct.console_font_op, ptr %op, i32 0, i32 3
  %69 = ptrtoint ptr %height34.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %height34.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %68, i32 %70)
  %cmp35.i = icmp ugt i32 %68, %70
  br i1 %cmp35.i, label %lor.lhs.false.i.out.i_crit_edge, label %if.end38.i

lor.lhs.false.i.out.i_crit_edge:                  ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %out.i

if.end38.i:                                       ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rc.1.i)
  %tobool39.not.i = icmp eq i32 %rc.1.i, 0
  br i1 %tobool39.not.i, label %if.end41.i, label %if.end38.i.out.i_crit_edge

if.end38.i.out.i_crit_edge:                       ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %out.i

if.end41.i:                                       ; preds = %if.end38.i
  %71 = ptrtoint ptr %height34.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 %68, ptr %height34.i, align 4
  %72 = ptrtoint ptr %width31.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 %57, ptr %width31.i, align 4
  %charcount47.i = getelementptr inbounds %struct.console_font_op, ptr %op, i32 0, i32 4
  %73 = ptrtoint ptr %charcount47.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %60, ptr %charcount47.i, align 4
  br i1 %tobool23.not.i, label %if.end41.i.out.i_crit_edge, label %land.lhs.true50.i

if.end41.i.out.i_crit_edge:                       ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %out.i

land.lhs.true50.i:                                ; preds = %if.end41.i
  %74 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %44, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mul21.i)
  %cmp9.i.i.i = icmp slt i32 %mul21.i, 0
  br i1 %cmp9.i.i.i, label %land.rhs16.i.i.i, label %if.then.i.i.i.i

land.rhs16.i.i.i:                                 ; preds = %land.lhs.true50.i
  %.b71.i.i.i = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i.i, label %land.rhs16.i.i.i.out.i_crit_edge, label %if.then27.i.i.i, !prof !383

land.rhs16.i.i.i.out.i_crit_edge:                 ; preds = %land.rhs16.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %out.i

if.then27.i.i.i:                                  ; preds = %land.rhs16.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @check_copy_size.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 230, i32 noundef 9, ptr noundef null) #21
  br label %out.i

if.then.i.i.i.i:                                  ; preds = %land.lhs.true50.i
  call void @__check_object_size(ptr noundef %75, i32 noundef %mul21.i, i1 noundef zeroext true) #21
  call void @__might_fault(ptr noundef nonnull @.str.61, i32 noundef 174) #21
  %call.i.i.i = call zeroext i1 @should_fail_usercopy() #21
  br i1 %call.i.i.i, label %if.then.i.i.i.i.copy_to_user.exit.i_crit_edge, label %if.end.i.i.i

if.then.i.i.i.i.copy_to_user.exit.i_crit_edge:    ; preds = %if.then.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %copy_to_user.exit.i

if.end.i.i.i:                                     ; preds = %if.then.i.i.i.i
  %76 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr nonnull %62, i32 %mul21.i, i32 -1226833920) #28, !srcloc !384
  %asmresult.i.i.i = extractvalue { i32, i32 } %76, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i)
  %cmp.i6.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %cmp.i6.i.i, label %if.then2.i.i.i, label %if.end.i.i.i.copy_to_user.exit.i_crit_edge

if.end.i.i.i.copy_to_user.exit.i_crit_edge:       ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %copy_to_user.exit.i

if.then2.i.i.i:                                   ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %75, i32 noundef %mul21.i) #21
  %call.i12.i.i.i = call i32 @arm_copy_to_user(ptr noundef nonnull %62, ptr noundef %75, i32 noundef %mul21.i) #21
  br label %copy_to_user.exit.i

copy_to_user.exit.i:                              ; preds = %if.then2.i.i.i, %if.end.i.i.i.copy_to_user.exit.i_crit_edge, %if.then.i.i.i.i.copy_to_user.exit.i_crit_edge
  %n.addr.0.i.i = phi i32 [ %mul21.i, %if.then.i.i.i.i.copy_to_user.exit.i_crit_edge ], [ %call.i12.i.i.i, %if.then2.i.i.i ], [ %mul21.i, %if.end.i.i.i.copy_to_user.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i.i)
  %tobool54.not.i = icmp eq i32 %n.addr.0.i.i, 0
  %spec.select83.i = select i1 %tobool54.not.i, i32 0, i32 -14
  br label %out.i

out.i:                                            ; preds = %copy_to_user.exit.i, %if.then27.i.i.i, %land.rhs16.i.i.i.out.i_crit_edge, %if.end41.i.out.i_crit_edge, %if.end38.i.out.i_crit_edge, %lor.lhs.false.i.out.i_crit_edge, %if.end29.i.out.i_crit_edge, %if.end17.i.out.i_crit_edge, %if.end17.thread.i
  %rc.3.i = phi i32 [ %call14.i, %if.end17.i.out.i_crit_edge ], [ %rc.1.i, %if.end38.i.out.i_crit_edge ], [ 0, %if.end41.i.out.i_crit_edge ], [ %rc.0.ph.i, %if.end17.thread.i ], [ -28, %if.end29.i.out.i_crit_edge ], [ -28, %lor.lhs.false.i.out.i_crit_edge ], [ -14, %if.then27.i.i.i ], [ -14, %land.rhs16.i.i.i.out.i_crit_edge ], [ %spec.select83.i, %copy_to_user.exit.i ]
  %77 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %44, align 4
  call void @kfree(ptr noundef %78) #21
  br label %con_font_get.exit

con_font_get.exit:                                ; preds = %out.i, %if.then.i.con_font_get.exit_crit_edge
  %retval.0.i21 = phi i32 [ %rc.3.i, %out.i ], [ -12, %if.then.i.con_font_get.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %font.i12) #21
  br label %return

sw.bb4:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %font.i22) #21
  %79 = getelementptr inbounds %struct.console_font, ptr %font.i22, i32 0, i32 1
  %80 = getelementptr inbounds %struct.console_font, ptr %font.i22, i32 0, i32 2
  %81 = getelementptr inbounds %struct.console_font, ptr %font.i22, i32 0, i32 3
  %width1.i = getelementptr inbounds %struct.console_font_op, ptr %op, i32 0, i32 2
  %82 = ptrtoint ptr %width1.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %width1.i, align 4
  %84 = ptrtoint ptr %font.i22 to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 %83, ptr %font.i22, align 4
  %height2.i = getelementptr inbounds %struct.console_font_op, ptr %op, i32 0, i32 3
  %85 = ptrtoint ptr %height2.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %height2.i, align 4
  %87 = ptrtoint ptr %79 to i32
  call void @__asan_store4_noabort(i32 %87)
  store i32 %86, ptr %79, align 4
  %88 = ptrtoint ptr %80 to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 0, ptr %80, align 4
  %89 = ptrtoint ptr %81 to i32
  call void @__asan_store4_noabort(i32 %89)
  store ptr null, ptr %81, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %name.i) #21
  %90 = getelementptr inbounds [32 x i8], ptr %name.i, i32 0, i32 31
  %data3.i = getelementptr inbounds %struct.console_font_op, ptr %op, i32 0, i32 5
  %91 = call ptr @memset(ptr %name.i, i32 255, i32 32)
  %92 = ptrtoint ptr %data3.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %data3.i, align 4
  %tobool.not.i23 = icmp eq ptr %93, null
  br i1 %tobool.not.i23, label %sw.bb4.if.end8.i_crit_edge, label %if.else.i25

sw.bb4.if.end8.i_crit_edge:                       ; preds = %sw.bb4
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8.i

if.else.i25:                                      ; preds = %sw.bb4
  %call.i24 = call i32 @strncpy_from_user(ptr noundef nonnull %name.i, ptr noundef nonnull %93, i32 noundef 31) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i24)
  %cmp.i = icmp slt i32 %call.i24, 0
  br i1 %cmp.i, label %if.else.i25.con_font_default.exit_crit_edge, label %if.else7.i

if.else.i25.con_font_default.exit_crit_edge:      ; preds = %if.else.i25
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_font_default.exit

if.else7.i:                                       ; preds = %if.else.i25
  call void @__sanitizer_cov_trace_pc() #23
  %94 = ptrtoint ptr %90 to i32
  call void @__asan_store1_noabort(i32 %94)
  store i8 0, ptr %90, align 1
  br label %if.end8.i

if.end8.i:                                        ; preds = %if.else7.i, %sw.bb4.if.end8.i_crit_edge
  %s.0.i = phi ptr [ %name.i, %if.else7.i ], [ null, %sw.bb4.if.end8.i_crit_edge ]
  call void @console_lock() #21
  %vc_mode.i26 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 17
  %95 = ptrtoint ptr %vc_mode.i26 to i32
  call void @__asan_load1_noabort(i32 %95)
  %96 = load i8, ptr %vc_mode.i26, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %96)
  %cmp9.not.i = icmp eq i8 %96, 0
  br i1 %cmp9.not.i, label %if.end12.i, label %if.then11.i

if.then11.i:                                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @console_unlock() #21
  br label %con_font_default.exit

if.end12.i:                                       ; preds = %if.end8.i
  %vc_sw.i27 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %97 = ptrtoint ptr %vc_sw.i27 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %vc_sw.i27, align 4
  %con_font_default.i = getelementptr inbounds %struct.consw, ptr %98, i32 0, i32 13
  %99 = ptrtoint ptr %con_font_default.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %con_font_default.i, align 4
  %tobool13.not.i = icmp eq ptr %100, null
  br i1 %tobool13.not.i, label %if.end19.thread.i, label %if.end19.i

if.end19.thread.i:                                ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @console_unlock() #21
  br label %con_font_default.exit

if.end19.i:                                       ; preds = %if.end12.i
  %call17.i = call i32 %100(ptr noundef %vc, ptr noundef nonnull %font.i22, ptr noundef %s.0.i) #21
  call void @console_unlock() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17.i)
  %tobool20.not.i = icmp eq i32 %call17.i, 0
  br i1 %tobool20.not.i, label %if.then21.i, label %if.end19.i.con_font_default.exit_crit_edge

if.end19.i.con_font_default.exit_crit_edge:       ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_font_default.exit

if.then21.i:                                      ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #23
  %101 = ptrtoint ptr %font.i22 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %font.i22, align 4
  %103 = ptrtoint ptr %width1.i to i32
  call void @__asan_store4_noabort(i32 %103)
  store i32 %102, ptr %width1.i, align 4
  %104 = ptrtoint ptr %79 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %79, align 4
  %106 = ptrtoint ptr %height2.i to i32
  call void @__asan_store4_noabort(i32 %106)
  store i32 %105, ptr %height2.i, align 4
  br label %con_font_default.exit

con_font_default.exit:                            ; preds = %if.then21.i, %if.end19.i.con_font_default.exit_crit_edge, %if.end19.thread.i, %if.then11.i, %if.else.i25.con_font_default.exit_crit_edge
  %retval.0.i28 = phi i32 [ -22, %if.then11.i ], [ -14, %if.else.i25.con_font_default.exit_crit_edge ], [ 0, %if.then21.i ], [ %call17.i, %if.end19.i.con_font_default.exit_crit_edge ], [ -38, %if.end19.thread.i ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %name.i) #21
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %font.i22) #21
  br label %return

sw.epilog:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

return:                                           ; preds = %sw.epilog, %con_font_default.exit, %con_font_get.exit, %con_font_set.exit, %entry.return_crit_edge
  %retval.0 = phi i32 [ -38, %sw.epilog ], [ %retval.0.i28, %con_font_default.exit ], [ %retval.0.i21, %con_font_get.exit ], [ %retval.0.i, %con_font_set.exit ], [ -22, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i16 @screen_glyph(ptr noundef %vc, i32 noundef %offset) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %vc_sw.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %0 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vc_sw.i, align 4
  %con_screen_pos.i = getelementptr inbounds %struct.consw, ptr %1, i32 0, i32 21
  %2 = ptrtoint ptr %con_screen_pos.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %con_screen_pos.i, align 4
  %tobool1.not.i = icmp eq ptr %3, null
  br i1 %tobool1.not.i, label %if.then2.i, label %if.else4.i

if.then2.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %vc_visible_origin.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 11
  %4 = ptrtoint ptr %vc_visible_origin.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vc_visible_origin.i, align 4
  %add3.i = add i32 %5, %offset
  %6 = inttoptr i32 %add3.i to ptr
  br label %screenpos.exit

if.else4.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %call.i = tail call ptr %3(ptr noundef %vc, i32 noundef %offset) #21
  br label %screenpos.exit

screenpos.exit:                                   ; preds = %if.else4.i, %if.then2.i
  %p.0.i = phi ptr [ %call.i, %if.else4.i ], [ %6, %if.then2.i ]
  %7 = ptrtoint ptr %p.0.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %p.0.i, align 2
  %and = and i16 %8, 255
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 27
  %9 = ptrtoint ptr %vc_hi_font_mask to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %vc_hi_font_mask, align 4
  %and410 = and i16 %10, %8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %and410)
  %tobool.not = icmp eq i16 %and410, 0
  %11 = or i16 %and, 256
  %spec.select = select i1 %tobool.not, i16 %and, i16 %11
  ret i16 %spec.select
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @screen_glyph_unicode(ptr noundef %vc, i32 noundef %n) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %vc_uni_screen = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 50
  %0 = ptrtoint ptr %vc_uni_screen to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %vc_uni_screen, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %vc_cols = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %2 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vc_cols, align 4
  %.frozen = freeze i32 %3
  %div = udiv i32 %n, %.frozen
  %arrayidx = getelementptr [0 x ptr], ptr %1, i32 0, i32 %div
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  %6 = mul i32 %div, %.frozen
  %rem.decomposed = sub i32 %n, %6
  %arrayidx2 = getelementptr i32, ptr %5, i32 %rem.decomposed
  %7 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %arrayidx2, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %mul = shl i32 %n, 1
  %vc_sw.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %9 = ptrtoint ptr %vc_sw.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %vc_sw.i.i, align 4
  %con_screen_pos.i.i = getelementptr inbounds %struct.consw, ptr %10, i32 0, i32 21
  %11 = ptrtoint ptr %con_screen_pos.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %con_screen_pos.i.i, align 4
  %tobool1.not.i.i = icmp eq ptr %12, null
  br i1 %tobool1.not.i.i, label %if.then2.i.i, label %if.else4.i.i

if.then2.i.i:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %vc_visible_origin.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 11
  %13 = ptrtoint ptr %vc_visible_origin.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %vc_visible_origin.i.i, align 4
  %add3.i.i = add i32 %14, %mul
  %15 = inttoptr i32 %add3.i.i to ptr
  br label %screen_glyph.exit

if.else4.i.i:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %call.i.i = tail call ptr %12(ptr noundef %vc, i32 noundef %mul) #21
  br label %screen_glyph.exit

screen_glyph.exit:                                ; preds = %if.else4.i.i, %if.then2.i.i
  %p.0.i.i = phi ptr [ %call.i.i, %if.else4.i.i ], [ %15, %if.then2.i.i ]
  %16 = ptrtoint ptr %p.0.i.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %p.0.i.i, align 2
  %and.i = and i16 %17, 255
  %vc_hi_font_mask.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 27
  %18 = ptrtoint ptr %vc_hi_font_mask.i to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %vc_hi_font_mask.i, align 4
  %and410.i = and i16 %19, %17
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %and410.i)
  %tobool.not.i = icmp eq i16 %and410.i, 0
  %20 = or i16 %and.i, 256
  %spec.select.i = select i1 %tobool.not.i, i16 %and.i, i16 %20
  %conv = zext i16 %spec.select.i to i32
  %call3 = tail call zeroext i16 @inverse_translate(ptr noundef %vc, i32 noundef %conv, i32 noundef 1) #21
  %conv4 = zext i16 %call3 to i32
  br label %cleanup

cleanup:                                          ; preds = %screen_glyph.exit, %if.then
  %retval.0 = phi i32 [ %8, %if.then ], [ %conv4, %screen_glyph.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @screen_pos(ptr noundef %vc, i32 noundef %w_offset, i1 noundef zeroext %viewed) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %mul = shl i32 %w_offset, 1
  br i1 %viewed, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %vc_origin.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 9
  %0 = ptrtoint ptr %vc_origin.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vc_origin.i, align 4
  %add.i = add i32 %1, %mul
  %2 = inttoptr i32 %add.i to ptr
  br label %screenpos.exit

if.else.i:                                        ; preds = %entry
  %vc_sw.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %3 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %vc_sw.i, align 4
  %con_screen_pos.i = getelementptr inbounds %struct.consw, ptr %4, i32 0, i32 21
  %5 = ptrtoint ptr %con_screen_pos.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %con_screen_pos.i, align 4
  %tobool1.not.i = icmp eq ptr %6, null
  br i1 %tobool1.not.i, label %if.then2.i, label %if.else4.i

if.then2.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  %vc_visible_origin.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 11
  %7 = ptrtoint ptr %vc_visible_origin.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %vc_visible_origin.i, align 4
  %add3.i = add i32 %8, %mul
  %9 = inttoptr i32 %add3.i to ptr
  br label %screenpos.exit

if.else4.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  %call.i = tail call ptr %6(ptr noundef %vc, i32 noundef %mul) #21
  br label %screenpos.exit

screenpos.exit:                                   ; preds = %if.else4.i, %if.then2.i, %if.then.i
  %p.0.i = phi ptr [ %call.i, %if.else4.i ], [ %9, %if.then2.i ], [ %2, %if.then.i ]
  ret ptr %p.0.i
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @getconsxy(ptr nocapture noundef readonly %vc, ptr nocapture noundef writeonly align 1 dereferenceable(2) %xy) local_unnamed_addr #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %0 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %state, align 4
  %2 = tail call i32 @llvm.umin.i32(i32 %1, i32 255)
  %3 = trunc i32 %2 to i8
  %4 = ptrtoint ptr %xy to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %3, ptr %xy, align 1
  %y = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %5 = ptrtoint ptr %y to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %y, align 4
  %7 = tail call i32 @llvm.umin.i32(i32 %6, i32 255)
  %8 = trunc i32 %7 to i8
  %arrayidx10 = getelementptr i8, ptr %xy, i32 1
  %9 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %8, ptr %arrayidx10, align 1
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @putconsxy(ptr noundef %vc, ptr nocapture noundef readonly align 1 dereferenceable(2) %xy) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @hide_cursor(ptr noundef %vc)
  %0 = ptrtoint ptr %xy to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %xy, align 1
  %conv = zext i8 %1 to i32
  %arrayidx1 = getelementptr i8, ptr %xy, i32 1
  %2 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arrayidx1, align 1
  %conv2 = zext i8 %3 to i32
  %vc_cols.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %4 = ptrtoint ptr %vc_cols.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vc_cols.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %conv)
  %cmp1.not.i = icmp ugt i32 %5, %conv
  %sub.i = add i32 %5, -1
  %spec.select.i = select i1 %cmp1.not.i, i32 %conv, i32 %sub.i
  %state4.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %6 = ptrtoint ptr %state4.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %spec.select.i, ptr %state4.i, align 4
  %vc_decom.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %7 = ptrtoint ptr %vc_decom.i to i32
  call void @__asan_load2_noabort(i32 %7)
  %bf.load.i = load i16, ptr %vc_decom.i, align 4
  %8 = and i16 %bf.load.i, 4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %tobool.not.i = icmp eq i16 %8, 0
  br i1 %tobool.not.i, label %if.else11.i, label %if.then10.i

if.then10.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %vc_top.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 12
  %9 = ptrtoint ptr %vc_top.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %vc_top.i, align 4
  %vc_bottom.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 13
  br label %gotoxy.exit

if.else11.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %vc_rows.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 5
  br label %gotoxy.exit

gotoxy.exit:                                      ; preds = %if.else11.i, %if.then10.i
  %min_y.0.i = phi i32 [ %10, %if.then10.i ], [ 0, %if.else11.i ]
  %max_y.0.in.i = phi ptr [ %vc_bottom.i, %if.then10.i ], [ %vc_rows.i, %if.else11.i ]
  %11 = ptrtoint ptr %max_y.0.in.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %max_y.0.i = load i32, ptr %max_y.0.in.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %min_y.0.i, i32 %conv2)
  %cmp13.i = icmp sgt i32 %min_y.0.i, %conv2
  call void @__sanitizer_cov_trace_cmp4(i32 %max_y.0.i, i32 %conv2)
  %cmp17.not.i = icmp sgt i32 %max_y.0.i, %conv2
  %sub19.i = add i32 %max_y.0.i, -1
  %spec.select57.i = select i1 %cmp17.not.i, i32 %conv2, i32 %sub19.i
  %sub19.sink.i = select i1 %cmp13.i, i32 %min_y.0.i, i32 %spec.select57.i
  %y21.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %12 = ptrtoint ptr %y21.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %sub19.sink.i, ptr %y21.i, align 4
  %vc_origin.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 9
  %13 = ptrtoint ptr %vc_origin.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %vc_origin.i, align 4
  %vc_size_row.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 6
  %15 = ptrtoint ptr %vc_size_row.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %vc_size_row.i, align 4
  %mul.i = mul i32 %16, %sub19.sink.i
  %shl.i = shl i32 %spec.select.i, 1
  %add.i = add i32 %14, %shl.i
  %add31.i = add i32 %add.i, %mul.i
  %vc_pos.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 26
  %17 = ptrtoint ptr %vc_pos.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %add31.i, ptr %vc_pos.i, align 4
  %bf.clear33.i = and i16 %bf.load.i, -33
  %18 = ptrtoint ptr %vc_decom.i to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 %bf.clear33.i, ptr %vc_decom.i, align 4
  %vc_num.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 3
  %19 = ptrtoint ptr %vc_num.i.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %vc_num.i.i, align 4
  %conv.i.i = zext i16 %20 to i32
  %21 = load i32, ptr @fg_console, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %conv.i.i)
  %cmp.i.i = icmp eq i32 %21, %conv.i.i
  br i1 %cmp.i.i, label %lor.lhs.false.i, label %gotoxy.exit.set_cursor.exit_crit_edge

gotoxy.exit.set_cursor.exit_crit_edge:            ; preds = %gotoxy.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_cursor.exit

lor.lhs.false.i:                                  ; preds = %gotoxy.exit
  %22 = load i32, ptr @console_blanked, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool.not.i6 = icmp eq i32 %22, 0
  br i1 %tobool.not.i6, label %lor.lhs.false1.i, label %lor.lhs.false.i.set_cursor.exit_crit_edge

lor.lhs.false.i.set_cursor.exit_crit_edge:        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_cursor.exit

lor.lhs.false1.i:                                 ; preds = %lor.lhs.false.i
  %vc_mode.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 17
  %23 = ptrtoint ptr %vc_mode.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %vc_mode.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %24)
  %cmp.i = icmp eq i8 %24, 1
  br i1 %cmp.i, label %lor.lhs.false1.i.set_cursor.exit_crit_edge, label %if.end.i

lor.lhs.false1.i.set_cursor.exit_crit_edge:       ; preds = %lor.lhs.false1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_cursor.exit

if.end.i:                                         ; preds = %lor.lhs.false1.i
  %25 = and i16 %bf.load.i, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %25)
  %tobool3.not.i = icmp eq i16 %25, 0
  br i1 %tobool3.not.i, label %if.else.i, label %if.then4.i

if.then4.i:                                       ; preds = %if.end.i
  %call5.i = tail call zeroext i1 @vc_is_sel(ptr noundef %vc) #21
  br i1 %call5.i, label %if.then6.i, label %if.then4.i.if.end7.i_crit_edge

if.then4.i.if.end7.i_crit_edge:                   ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7.i

if.then6.i:                                       ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @clear_selection() #21
  br label %if.end7.i

if.end7.i:                                        ; preds = %if.then6.i, %if.then4.i.if.end7.i_crit_edge
  tail call fastcc void @add_softcursor(ptr noundef %vc) #21
  %vc_cursor_type.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 23
  %26 = ptrtoint ptr %vc_cursor_type.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %vc_cursor_type.i, align 4
  %and.i = and i32 %27, 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i)
  %cmp8.not.i = icmp eq i32 %and.i, 1
  br i1 %cmp8.not.i, label %if.end7.i.set_cursor.exit_crit_edge, label %if.then10.i8

if.end7.i.set_cursor.exit_crit_edge:              ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_cursor.exit

if.then10.i8:                                     ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  %vc_sw.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %28 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %vc_sw.i, align 4
  %con_cursor.i = getelementptr inbounds %struct.consw, ptr %29, i32 0, i32 7
  %30 = ptrtoint ptr %con_cursor.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %con_cursor.i, align 4
  tail call void %31(ptr noundef %vc, i32 noundef 1) #21
  br label %set_cursor.exit

if.else.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @hide_cursor(ptr noundef %vc) #21
  br label %set_cursor.exit

set_cursor.exit:                                  ; preds = %if.else.i, %if.then10.i8, %if.end7.i.set_cursor.exit_crit_edge, %lor.lhs.false1.i.set_cursor.exit_crit_edge, %lor.lhs.false.i.set_cursor.exit_crit_edge, %gotoxy.exit.set_cursor.exit_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc void @gotoxy(ptr nocapture noundef %vc, i32 noundef %new_x, i32 noundef %new_y) unnamed_addr #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %new_x)
  %cmp = icmp slt i32 %new_x, 0
  br i1 %cmp, label %entry.if.end9_crit_edge, label %if.else

entry.if.end9_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %vc_cols = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %0 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vc_cols, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %new_x)
  %cmp1.not = icmp ugt i32 %1, %new_x
  %sub = add i32 %1, -1
  %spec.select = select i1 %cmp1.not, i32 %new_x, i32 %sub
  br label %if.end9

if.end9:                                          ; preds = %if.else, %entry.if.end9_crit_edge
  %sub.sink = phi i32 [ 0, %entry.if.end9_crit_edge ], [ %spec.select, %if.else ]
  %state4 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %2 = ptrtoint ptr %state4 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %sub.sink, ptr %state4, align 4
  %vc_decom = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %3 = ptrtoint ptr %vc_decom to i32
  call void @__asan_load2_noabort(i32 %3)
  %bf.load = load i16, ptr %vc_decom, align 4
  %4 = and i16 %bf.load, 4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %4)
  %tobool.not = icmp eq i16 %4, 0
  br i1 %tobool.not, label %if.else11, label %if.then10

if.then10:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #23
  %vc_top = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 12
  %5 = ptrtoint ptr %vc_top to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %vc_top, align 4
  %vc_bottom = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 13
  br label %if.end12

if.else11:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #23
  %vc_rows = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 5
  br label %if.end12

if.end12:                                         ; preds = %if.else11, %if.then10
  %min_y.0 = phi i32 [ %6, %if.then10 ], [ 0, %if.else11 ]
  %max_y.0.in = phi ptr [ %vc_bottom, %if.then10 ], [ %vc_rows, %if.else11 ]
  %7 = ptrtoint ptr %max_y.0.in to i32
  call void @__asan_load4_noabort(i32 %7)
  %max_y.0 = load i32, ptr %max_y.0.in, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %min_y.0, i32 %new_y)
  %cmp13 = icmp sgt i32 %min_y.0, %new_y
  call void @__sanitizer_cov_trace_cmp4(i32 %max_y.0, i32 %new_y)
  %cmp17.not = icmp sgt i32 %max_y.0, %new_y
  %sub19 = add i32 %max_y.0, -1
  %spec.select57 = select i1 %cmp17.not, i32 %new_y, i32 %sub19
  %sub19.sink = select i1 %cmp13, i32 %min_y.0, i32 %spec.select57
  %y21 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %8 = ptrtoint ptr %y21 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %sub19.sink, ptr %y21, align 4
  %vc_origin = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 9
  %9 = ptrtoint ptr %vc_origin to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %vc_origin, align 4
  %state27 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %vc_size_row = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 6
  %11 = ptrtoint ptr %vc_size_row to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %vc_size_row, align 4
  %mul = mul i32 %12, %sub19.sink
  %add = add i32 %mul, %10
  %13 = ptrtoint ptr %state27 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %state27, align 4
  %shl = shl i32 %14, 1
  %add31 = add i32 %add, %shl
  %vc_pos = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 26
  %15 = ptrtoint ptr %vc_pos to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %add31, ptr %vc_pos, align 4
  %bf.clear33 = and i16 %bf.load, -33
  %16 = ptrtoint ptr %vc_decom to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 %bf.clear33, ptr %vc_decom, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i16 @vcs_scr_readw(ptr nocapture noundef readonly %vc, ptr noundef %org) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %org to i32
  %vc_pos = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 26
  %1 = ptrtoint ptr %vc_pos to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %vc_pos, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %0)
  %cmp = icmp eq i32 %2, %0
  br i1 %cmp, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, ptr @softcursor_original, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %3)
  %cmp1.not = icmp eq i32 %3, -1
  br i1 %cmp1.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  %conv = trunc i32 %3 to i16
  br label %return

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %4 = ptrtoint ptr %org to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %org, align 2
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i16 [ %conv, %if.then ], [ %5, %if.end ]
  ret i16 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @vcs_scr_writew(ptr noundef %vc, i16 noundef zeroext %val, ptr noundef %org) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %org to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 %val, ptr %org, align 2
  %1 = ptrtoint ptr %org to i32
  %vc_pos = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 26
  %2 = ptrtoint ptr %vc_pos to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vc_pos, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %1)
  %cmp = icmp eq i32 %3, %1
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  store i32 -1, ptr @softcursor_original, align 4
  tail call fastcc void @add_softcursor(ptr noundef %vc)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @add_softcursor(ptr noundef %vc) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %vc_pos = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 26
  %0 = ptrtoint ptr %vc_pos to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vc_pos, align 4
  %2 = inttoptr i32 %1 to ptr
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %2, align 2
  %conv = zext i16 %4 to i32
  %vc_cursor_type = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 23
  %5 = ptrtoint ptr %vc_cursor_type to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %vc_cursor_type, align 4
  %and = and i32 %6, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %7 = load i32, ptr @softcursor_original, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %7)
  %cmp.not = icmp eq i32 %7, -1
  br i1 %cmp.not, label %if.end3, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end3:                                          ; preds = %if.end
  store i32 %conv, ptr @softcursor_original, align 4
  %and4 = lshr i32 %6, 8
  %shr = and i32 %and4, 65280
  %or = or i32 %shr, %conv
  %and5 = and i32 %6, 65280
  %xor = xor i32 %or, %and5
  %and6 = and i32 %6, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6)
  %tobool7.not = icmp eq i32 %and6, 0
  br i1 %tobool7.not, label %if.end3.if.end14_crit_edge, label %land.lhs.true

if.end3.if.end14_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end14

land.lhs.true:                                    ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  %8 = xor i32 %xor, %conv
  %9 = and i32 %8, 28672
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp10 = icmp eq i32 %9, 0
  %xor13 = xor i32 %xor, 28672
  %spec.select = select i1 %cmp10, i32 %xor13, i32 %xor
  br label %if.end14

if.end14:                                         ; preds = %land.lhs.true, %if.end3.if.end14_crit_edge
  %i.0 = phi i32 [ %xor, %if.end3.if.end14_crit_edge ], [ %spec.select, %land.lhs.true ]
  %and15 = and i32 %6, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15)
  %tobool16.not = icmp eq i32 %and15, 0
  br i1 %tobool16.not, label %if.end14.if.end25_crit_edge, label %land.lhs.true17

if.end14.if.end25_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end25

land.lhs.true17:                                  ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #23
  %and19 = lshr i32 %i.0, 4
  %10 = xor i32 %and19, %i.0
  %11 = and i32 %10, 1792
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp21 = icmp eq i32 %11, 0
  %xor24 = xor i32 %i.0, 1792
  %spec.select52 = select i1 %cmp21, i32 %xor24, i32 %i.0
  br label %if.end25

if.end25:                                         ; preds = %land.lhs.true17, %if.end14.if.end25_crit_edge
  %i.1 = phi i32 [ %i.0, %if.end14.if.end25_crit_edge ], [ %spec.select52, %land.lhs.true17 ]
  %conv26 = trunc i32 %i.1 to i16
  %12 = ptrtoint ptr %2 to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %conv26, ptr %2, align 2
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %13 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not.i.i = icmp eq i32 %13, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %if.end25.con_is_visible.exit.i_crit_edge

if.end25.con_is_visible.exit.i_crit_edge:         ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

land.lhs.true.i.i:                                ; preds = %if.end25
  %call1.i.i = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool2.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool2.not.i.i, label %land.rhs.i.i, label %land.lhs.true.i.i.con_is_visible.exit.i_crit_edge

land.lhs.true.i.i.con_is_visible.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

land.rhs.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %14 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool3.not.i.i = icmp eq i32 %14, 0
  br i1 %tobool3.not.i.i, label %do.end.i.i, label %land.rhs.i.i.con_is_visible.exit.i_crit_edge, !prof !365

land.rhs.i.i.con_is_visible.exit.i_crit_edge:     ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4012, i32 noundef 9, ptr noundef null) #21
  br label %con_is_visible.exit.i

con_is_visible.exit.i:                            ; preds = %do.end.i.i, %land.rhs.i.i.con_is_visible.exit.i_crit_edge, %land.lhs.true.i.i.con_is_visible.exit.i_crit_edge, %if.end25.con_is_visible.exit.i_crit_edge
  %vc_display_fg.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 47
  %15 = ptrtoint ptr %vc_display_fg.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %vc_display_fg.i.i, align 4
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %16, align 4
  %cmp.i.i = icmp eq ptr %18, %vc
  br i1 %cmp.i.i, label %con_should_update.exit, label %con_is_visible.exit.i.cleanup_crit_edge

con_is_visible.exit.i.cleanup_crit_edge:          ; preds = %con_is_visible.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

con_should_update.exit:                           ; preds = %con_is_visible.exit.i
  %19 = load i32, ptr @console_blanked, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool.not.i = icmp eq i32 %19, 0
  br i1 %tobool.not.i, label %if.then28, label %con_should_update.exit.cleanup_crit_edge

con_should_update.exit.cleanup_crit_edge:         ; preds = %con_should_update.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then28:                                        ; preds = %con_should_update.exit
  call void @__sanitizer_cov_trace_pc() #23
  %vc_sw = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %20 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %vc_sw, align 4
  %con_putc = getelementptr inbounds %struct.consw, ptr %21, i32 0, i32 5
  %22 = ptrtoint ptr %con_putc to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %con_putc, align 4
  %state = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %y = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %24 = ptrtoint ptr %y to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %y, align 4
  %26 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %state, align 4
  tail call void %23(ptr noundef %vc, i32 noundef %i.1, i32 noundef %25, i32 noundef %27) #21
  br label %cleanup

cleanup:                                          ; preds = %if.then28, %con_should_update.exit.cleanup_crit_edge, %con_is_visible.exit.i.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @vcs_scr_updated(ptr noundef %vc) local_unnamed_addr #0 align 64 {
entry:
  %param.i = alloca %struct.vt_notifier_param, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param.i) #21
  %0 = getelementptr inbounds %struct.vt_notifier_param, ptr %param.i, i32 0, i32 1
  %1 = ptrtoint ptr %param.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %vc, ptr %param.i, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %0, align 4
  %call.i = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 4, ptr noundef nonnull %param.i) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param.i) #21
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @vc_scrolldelta_helper(ptr nocapture noundef %c, i32 noundef %lines, i32 noundef %rolled_over, ptr noundef %base, i32 noundef %size) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %vc_visible_origin = getelementptr inbounds %struct.vc_data, ptr %c, i32 0, i32 11
  %vc_origin = getelementptr inbounds %struct.vc_data, ptr %c, i32 0, i32 9
  %0 = ptrtoint ptr %vc_origin to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vc_origin, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %lines)
  %tobool.not = icmp eq i32 %lines, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %vc_size_row = getelementptr inbounds %struct.vc_data, ptr %c, i32 0, i32 6
  %2 = ptrtoint ptr %vc_size_row to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vc_size_row, align 4
  %mul = shl i32 %3, 2
  %4 = ptrtoint ptr %vc_visible_origin to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vc_visible_origin, align 4
  %vc_scr_end = getelementptr inbounds %struct.vc_data, ptr %c, i32 0, i32 10
  %6 = ptrtoint ptr %vc_scr_end to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %vc_scr_end, align 4
  %8 = ptrtoint ptr %base to i32
  %sub.ptr.sub = sub i32 %7, %8
  %add = add i32 %sub.ptr.sub, %mul
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %rolled_over)
  %cmp = icmp ult i32 %add, %rolled_over
  %add11 = add i32 %3, %rolled_over
  %from.0 = select i1 %cmp, i32 %sub.ptr.sub, i32 0
  %wrap.0 = select i1 %cmp, i32 %add11, i32 %size
  %9 = add i32 %from.0, %8
  %sub = add i32 %wrap.0, %5
  %add13 = sub i32 %sub, %9
  %rem = srem i32 %add13, %wrap.0
  %mul15 = mul i32 %3, %lines
  %add16 = add i32 %rem, %mul15
  %sub17 = add i32 %wrap.0, %1
  %add18 = sub i32 %sub17, %9
  %rem19 = srem i32 %add18, %wrap.0
  %mul20 = shl i32 %3, 3
  call void @__sanitizer_cov_trace_cmp4(i32 %rem19, i32 %mul20)
  %cmp21 = icmp slt i32 %rem19, %mul20
  %spec.store.select = select i1 %cmp21, i32 0, i32 %mul
  call void @__sanitizer_cov_trace_cmp4(i32 %add16, i32 %spec.store.select)
  %cmp24 = icmp slt i32 %add16, %spec.store.select
  %spec.store.select43 = select i1 %cmp24, i32 0, i32 %add16
  %sub27 = sub i32 %rem19, %spec.store.select
  call void @__sanitizer_cov_trace_cmp4(i32 %spec.store.select43, i32 %sub27)
  %cmp28 = icmp sgt i32 %spec.store.select43, %sub27
  %from_off.0 = select i1 %cmp28, i32 %rem19, i32 %spec.store.select43
  %add31 = add i32 %from_off.0, %from.0
  %rem32 = srem i32 %add31, %wrap.0
  %add33 = add i32 %rem32, %8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %storemerge = phi i32 [ %add33, %if.end ], [ %1, %entry.cleanup_crit_edge ]
  %10 = ptrtoint ptr %vc_visible_origin to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %storemerge, ptr %vc_visible_origin, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @console_callback(ptr nocapture noundef readnone %ignored) #0 align 64 {
entry:
  %param.i = alloca %struct.vt_notifier_param, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @console_lock() #21
  %0 = load i32, ptr @want_console, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %0)
  %cmp = icmp sgt i32 %0, -1
  br i1 %cmp, label %if.then, label %entry.if.end5_crit_edge

entry.if.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end5

if.then:                                          ; preds = %entry
  %1 = load i32, ptr @fg_console, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %0, i32 %1)
  %cmp1.not = icmp ne i32 %0, %1
  call void @__sanitizer_cov_trace_const_cmp4(i32 63, i32 %0)
  %cmp.i = icmp ult i32 %0, 63
  %or.cond = and i1 %cmp.i, %cmp1.not
  br i1 %or.cond, label %vc_cons_allocated.exit, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

vc_cons_allocated.exit:                           ; preds = %if.then
  %arrayidx.i = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %0
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx.i, align 4
  %tobool.i.not = icmp eq ptr %3, null
  br i1 %tobool.i.not, label %vc_cons_allocated.exit.if.end_crit_edge, label %if.then2

vc_cons_allocated.exit.if.end_crit_edge:          ; preds = %vc_cons_allocated.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then2:                                         ; preds = %vc_cons_allocated.exit
  call void @__sanitizer_cov_trace_pc() #23
  %arrayidx = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %1
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  tail call fastcc void @hide_cursor(ptr noundef %5)
  %6 = load i32, ptr @want_console, align 4
  %arrayidx3 = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %6
  %7 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx3, align 4
  tail call void @change_console(ptr noundef %8) #21
  br label %if.end

if.end:                                           ; preds = %if.then2, %vc_cons_allocated.exit.if.end_crit_edge, %if.then.if.end_crit_edge
  store i32 -1, ptr @want_console, align 4
  br label %if.end5

if.end5:                                          ; preds = %if.end, %entry.if.end5_crit_edge
  %9 = load i32, ptr @do_poke_blanked_console, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool6.not = icmp eq i32 %9, 0
  br i1 %tobool6.not, label %if.end5.if.end8_crit_edge, label %if.then7

if.end5.if.end8_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8

if.then7:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #23
  store i32 0, ptr @do_poke_blanked_console, align 4
  tail call void @poke_blanked_console()
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.end5.if.end8_crit_edge
  %10 = load i32, ptr @scrollback_delta, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool9.not = icmp eq i32 %10, 0
  br i1 %tobool9.not, label %if.end8.if.end21_crit_edge, label %if.then10

if.end8.if.end21_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end21

if.then10:                                        ; preds = %if.end8
  %11 = load i32, ptr @fg_console, align 4
  %arrayidx11 = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %11
  %12 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx11, align 4
  tail call void @clear_selection() #21
  %vc_mode = getelementptr inbounds %struct.vc_data, ptr %13, i32 0, i32 17
  %14 = ptrtoint ptr %vc_mode to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %vc_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %cmp13 = icmp eq i8 %15, 0
  br i1 %cmp13, label %land.lhs.true15, label %if.then10.if.end20_crit_edge

if.then10.if.end20_crit_edge:                     ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end20

land.lhs.true15:                                  ; preds = %if.then10
  %vc_sw = getelementptr inbounds %struct.vc_data, ptr %13, i32 0, i32 14
  %16 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %vc_sw, align 4
  %con_scrolldelta = getelementptr inbounds %struct.consw, ptr %17, i32 0, i32 16
  %18 = ptrtoint ptr %con_scrolldelta to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %con_scrolldelta, align 4
  %tobool16.not = icmp eq ptr %19, null
  br i1 %tobool16.not, label %land.lhs.true15.if.end20_crit_edge, label %if.then17

land.lhs.true15.if.end20_crit_edge:               ; preds = %land.lhs.true15
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end20

if.then17:                                        ; preds = %land.lhs.true15
  call void @__sanitizer_cov_trace_pc() #23
  %20 = load i32, ptr @scrollback_delta, align 4
  tail call void %19(ptr noundef %13, i32 noundef %20) #21
  br label %if.end20

if.end20:                                         ; preds = %if.then17, %land.lhs.true15.if.end20_crit_edge, %if.then10.if.end20_crit_edge
  store i32 0, ptr @scrollback_delta, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end8.if.end21_crit_edge
  %.b = load i1, ptr @blank_timer_expired, align 4
  br i1 %.b, label %if.then23, label %if.end21.if.end24_crit_edge

if.end21.if.end24_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end24

if.then23:                                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @do_blank_screen(i32 noundef 0)
  store i1 false, ptr @blank_timer_expired, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %if.end21.if.end24_crit_edge
  %21 = load i32, ptr @fg_console, align 4
  %arrayidx25 = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %21
  %22 = ptrtoint ptr %arrayidx25 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx25, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param.i) #21
  %24 = getelementptr inbounds %struct.vt_notifier_param, ptr %param.i, i32 0, i32 1
  %25 = ptrtoint ptr %param.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %23, ptr %param.i, align 4
  %26 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 0, ptr %24, align 4
  %call.i = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 4, ptr noundef nonnull %param.i) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param.i) #21
  call void @console_unlock() #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @change_console(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @clear_selection() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @vmalloc(i32 noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @vc_is_sel(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #12

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @kmalloc_order_trace(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @vc_port_destruct(ptr noundef %port) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @kfree(ptr noundef %port) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__module_get(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tty_do_resize(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @vfree(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__memset32(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @memset16(ptr noundef, i16 noundef zeroext, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @tty_flip_buffer_push(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tty_insert_flip_string_fixed_flag(ptr noundef, ptr noundef, i8 noundef zeroext, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #13

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #14

; Function Attrs: null_pointer_is_valid
declare dso_local void @reset_vc(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_waitqueue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @reset_terminal(ptr noundef %vc, i32 noundef %do_clear) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %vc_top = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 12
  %0 = ptrtoint ptr %vc_top to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %vc_top, align 4
  %vc_rows = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 5
  %1 = ptrtoint ptr %vc_rows to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %vc_rows, align 4
  %vc_bottom = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 13
  %3 = ptrtoint ptr %vc_bottom to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %2, ptr %vc_bottom, align 4
  %vc_state = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 30
  %4 = ptrtoint ptr %vc_state to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %vc_state, align 4
  %vc_priv = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %5 = ptrtoint ptr %vc_priv to i32
  call void @__asan_load2_noabort(i32 %5)
  %bf.load = load i16, ptr %vc_priv, align 4
  %bf.clear = and i16 %bf.load, -449
  store i16 %bf.clear, ptr %vc_priv, align 4
  %call = tail call ptr @set_translate(i32 noundef 0, ptr noundef %vc) #21
  %vc_translate = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 42
  %6 = ptrtoint ptr %vc_translate to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %call, ptr %vc_translate, align 4
  %Gx_charset = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 3
  %7 = ptrtoint ptr %Gx_charset to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 0, ptr %Gx_charset, align 1
  %arrayidx3 = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 1, i32 3, i32 1
  %8 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 1, ptr %arrayidx3, align 1
  %charset = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 4
  %9 = ptrtoint ptr %charset to i32
  call void @__asan_load1_noabort(i32 %9)
  %bf.load5 = load i8, ptr %charset, align 1
  %bf.clear6 = and i8 %bf.load5, 127
  store i8 %bf.clear6, ptr %charset, align 1
  %10 = ptrtoint ptr %vc_priv to i32
  call void @__asan_load2_noabort(i32 %10)
  %bf.load8 = load i16, ptr %vc_priv, align 4
  %11 = load i32, ptr @default_utf8, align 4
  %12 = trunc i32 %11 to i16
  %bf.value = shl i16 %12, 1
  %bf.shl = and i16 %bf.value, 2
  %bf.clear15 = and i16 %bf.load8, 465
  %bf.set16 = or i16 %bf.shl, %bf.clear15
  %vc_utf_count = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 38
  %13 = ptrtoint ptr %vc_utf_count to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 0, ptr %vc_utf_count, align 2
  %14 = load i32, ptr @global_cursor_default, align 4
  %15 = trunc i32 %14 to i16
  %bf.value33 = shl i16 %15, 10
  %bf.shl34 = and i16 %bf.value33, 1024
  %bf.set31 = or i16 %bf.set16, %bf.shl34
  %bf.set36 = or i16 %bf.set31, 2048
  store i16 %bf.set36, ptr %vc_priv, align 4
  %vc_num = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 3
  %16 = ptrtoint ptr %vc_num to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %vc_num, align 4
  %conv41 = zext i16 %17 to i32
  tail call void @vt_reset_keyboard(i32 noundef %conv41) #21
  %18 = load i32, ptr @cur_default, align 4
  %vc_cursor_type = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 23
  %19 = ptrtoint ptr %vc_cursor_type to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %vc_cursor_type, align 4
  %vc_s_complement_mask = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 25
  %20 = ptrtoint ptr %vc_s_complement_mask to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %vc_s_complement_mask, align 2
  %vc_complement_mask = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 24
  %22 = ptrtoint ptr %vc_complement_mask to i32
  call void @__asan_store2_noabort(i32 %22)
  store i16 %21, ptr %vc_complement_mask, align 4
  %intensity.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 5
  %23 = ptrtoint ptr %intensity.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 1, ptr %intensity.i, align 4
  %italic.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 6
  %vc_def_color.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 19
  %24 = ptrtoint ptr %italic.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 0, ptr %italic.i, align 4
  %25 = ptrtoint ptr %vc_def_color.i to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %vc_def_color.i, align 2
  %color.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 2
  %27 = ptrtoint ptr %color.i to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 %26, ptr %color.i, align 4
  tail call fastcc void @update_attr(ptr noundef %vc)
  %vc_tab_stop = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 40
  %28 = call ptr @memset(ptr %vc_tab_stop, i32 0, i32 32)
  tail call void @_set_bit(i32 noundef 0, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 8, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 16, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 24, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 32, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 40, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 48, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 56, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 64, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 72, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 80, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 88, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 96, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 104, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 112, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 120, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 128, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 136, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 144, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 152, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 160, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 168, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 176, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 184, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 192, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 200, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 208, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 216, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 224, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 232, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 240, ptr noundef %vc_tab_stop) #21
  tail call void @_set_bit(i32 noundef 248, ptr noundef %vc_tab_stop) #21
  %vc_bell_pitch = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 44
  %29 = ptrtoint ptr %vc_bell_pitch to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 750, ptr %vc_bell_pitch, align 4
  %vc_bell_duration = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 45
  %30 = ptrtoint ptr %vc_bell_duration to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 12, ptr %vc_bell_duration, align 4
  %vc_cur_blink_ms = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 46
  %31 = ptrtoint ptr %vc_cur_blink_ms to i32
  call void @__asan_store2_noabort(i32 %31)
  store i16 200, ptr %vc_cur_blink_ms, align 4
  %vc_cols.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %32 = ptrtoint ptr %vc_cols.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %vc_cols.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %cmp1.not.i.not = icmp eq i32 %33, 0
  %spec.select.i = sext i1 %cmp1.not.i.not to i32
  %state4.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %34 = ptrtoint ptr %state4.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %spec.select.i, ptr %state4.i, align 4
  %35 = ptrtoint ptr %vc_priv to i32
  call void @__asan_load2_noabort(i32 %35)
  %bf.load.i = load i16, ptr %vc_priv, align 4
  %36 = and i16 %bf.load.i, 4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %36)
  %tobool.not.i = icmp eq i16 %36, 0
  br i1 %tobool.not.i, label %gotoxy.exit.thread, label %gotoxy.exit

gotoxy.exit.thread:                               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %37 = ptrtoint ptr %vc_rows to i32
  call void @__asan_load4_noabort(i32 %37)
  %max_y.0.i83 = load i32, ptr %vc_rows, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %max_y.0.i83)
  %cmp17.not.i85 = icmp sgt i32 %max_y.0.i83, 0
  %sub19.i86 = add i32 %max_y.0.i83, -1
  %spec.select57.i87 = select i1 %cmp17.not.i85, i32 0, i32 %sub19.i86
  br label %41

gotoxy.exit:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %38 = ptrtoint ptr %vc_top to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %vc_top, align 4
  %40 = ptrtoint ptr %vc_bottom to i32
  call void @__asan_load4_noabort(i32 %40)
  %max_y.0.i = load i32, ptr %vc_bottom, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %cmp13.i = icmp sgt i32 %39, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %max_y.0.i)
  %cmp17.not.i = icmp sgt i32 %max_y.0.i, 0
  %sub19.i = add i32 %max_y.0.i, -1
  %spec.select57.i = select i1 %cmp17.not.i, i32 0, i32 %sub19.i
  %spec.select = select i1 %cmp13.i, i32 %39, i32 %spec.select57.i
  br label %41

41:                                               ; preds = %gotoxy.exit, %gotoxy.exit.thread
  %42 = phi i32 [ %spec.select57.i87, %gotoxy.exit.thread ], [ %spec.select, %gotoxy.exit ]
  %y21.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %43 = ptrtoint ptr %y21.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %y21.i, align 4
  %vc_origin.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 9
  %44 = ptrtoint ptr %vc_origin.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %vc_origin.i, align 4
  %vc_size_row.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 6
  %46 = ptrtoint ptr %vc_size_row.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %vc_size_row.i, align 4
  %mul.i = mul i32 %47, %42
  %shl.i = shl nsw i32 %spec.select.i, 1
  %add.i = add i32 %45, %shl.i
  %add31.i = add i32 %add.i, %mul.i
  %vc_pos.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 26
  %48 = ptrtoint ptr %vc_pos.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %add31.i, ptr %vc_pos.i, align 4
  %bf.clear33.i = and i16 %bf.load.i, -33
  %49 = ptrtoint ptr %vc_priv to i32
  call void @__asan_store2_noabort(i32 %49)
  store i16 %bf.clear33.i, ptr %vc_priv, align 4
  %saved_state.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 2
  %50 = call ptr @memcpy(ptr %saved_state.i, ptr %state4.i, i32 20)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %do_clear)
  %tobool.not = icmp eq i32 %do_clear, 0
  br i1 %tobool.not, label %.if.end_crit_edge, label %if.then

.if.end_crit_edge:                                ; preds = %41
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %41
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @csi_J(ptr noundef %vc, i32 noundef 2)
  br label %if.end

if.end:                                           ; preds = %if.then, %.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @set_translate(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @vt_reset_keyboard(i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @csi_J(ptr noundef %vc, i32 noundef %vpar) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %vpar to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.63)
  switch i32 %vpar, label %entry.cleanup_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %sw.bb10
    i32 3, label %sw.bb21
    i32 2, label %entry.sw.bb22_crit_edge
  ]

entry.sw.bb22_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb22

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

sw.bb:                                            ; preds = %entry
  %vc_cols = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %vc_uni_screen.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 50
  %1 = ptrtoint ptr %vc_uni_screen.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %vc_uni_screen.i, align 4
  %tobool.not.i = icmp eq ptr %2, null
  br i1 %tobool.not.i, label %sw.bb.vc_uniscr_clear_line.exit_crit_edge, label %if.then.i

sw.bb.vc_uniscr_clear_line.exit_crit_edge:        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_clear_line.exit

if.then.i:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #23
  %3 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %vc_cols, align 4
  %state = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %5 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %state, align 4
  %sub = sub i32 %4, %6
  %y.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %7 = ptrtoint ptr %y.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %y.i, align 4
  %arrayidx.i = getelementptr [0 x ptr], ptr %2, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx.i, align 4
  %arrayidx1.i = getelementptr i32, ptr %10, i32 %6
  %mul.i.i = shl i32 %sub, 2
  %call.i.i = tail call ptr @__memset32(ptr noundef %arrayidx1.i, i32 noundef 32, i32 noundef %mul.i.i) #21
  br label %vc_uniscr_clear_line.exit

vc_uniscr_clear_line.exit:                        ; preds = %if.then.i, %sw.bb.vc_uniscr_clear_line.exit_crit_edge
  %y = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %11 = ptrtoint ptr %y to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %y, align 4
  %vc_rows = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 5
  %13 = ptrtoint ptr %vc_rows to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %vc_rows, align 4
  %15 = xor i32 %12, -1
  %sub7 = add i32 %14, %15
  %16 = ptrtoint ptr %vc_uni_screen.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %vc_uni_screen.i, align 4
  %tobool.not.i59 = icmp eq ptr %17, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub7)
  %tobool1.not4.i = icmp eq i32 %sub7, 0
  %or.cond.i = or i1 %tobool.not.i59, %tobool1.not4.i
  br i1 %or.cond.i, label %vc_uniscr_clear_line.exit.vc_uniscr_clear_lines.exit_crit_edge, label %while.body.lr.ph.i

vc_uniscr_clear_line.exit.vc_uniscr_clear_lines.exit_crit_edge: ; preds = %vc_uniscr_clear_line.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_clear_lines.exit

while.body.lr.ph.i:                               ; preds = %vc_uniscr_clear_line.exit
  %18 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %vc_cols, align 4
  %mul.i.i60 = shl i32 %19, 2
  br label %while.body.i

while.body.i:                                     ; preds = %while.body.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %nr.addr.06.i = phi i32 [ %sub7, %while.body.lr.ph.i ], [ %dec.i, %while.body.i.while.body.i_crit_edge ]
  %y.addr.05.i.in = phi i32 [ %12, %while.body.lr.ph.i ], [ %y.addr.05.i, %while.body.i.while.body.i_crit_edge ]
  %y.addr.05.i = add i32 %y.addr.05.i.in, 1
  %dec.i = add i32 %nr.addr.06.i, -1
  %arrayidx.i61 = getelementptr [0 x ptr], ptr %17, i32 0, i32 %y.addr.05.i
  %20 = ptrtoint ptr %arrayidx.i61 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx.i61, align 4
  %call.i.i62 = tail call ptr @__memset32(ptr noundef %21, i32 noundef 32, i32 noundef %mul.i.i60) #21
  %tobool1.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool1.not.i, label %while.body.i.vc_uniscr_clear_lines.exit_crit_edge, label %while.body.i.while.body.i_crit_edge

while.body.i.while.body.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body.i

while.body.i.vc_uniscr_clear_lines.exit_crit_edge: ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_clear_lines.exit

vc_uniscr_clear_lines.exit:                       ; preds = %while.body.i.vc_uniscr_clear_lines.exit_crit_edge, %vc_uniscr_clear_line.exit.vc_uniscr_clear_lines.exit_crit_edge
  %vc_scr_end = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 10
  %22 = ptrtoint ptr %vc_scr_end to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %vc_scr_end, align 4
  %vc_pos = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 26
  %24 = ptrtoint ptr %vc_pos to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %vc_pos, align 4
  %sub8 = sub i32 %23, %25
  %shr = lshr i32 %sub8, 1
  br label %sw.epilog

sw.bb10:                                          ; preds = %entry
  %vc_uni_screen.i63 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 50
  %26 = ptrtoint ptr %vc_uni_screen.i63 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %vc_uni_screen.i63, align 4
  %tobool.not.i64 = icmp eq ptr %27, null
  br i1 %tobool.not.i64, label %sw.bb10.vc_uniscr_clear_line.exit70_crit_edge, label %if.then.i69

sw.bb10.vc_uniscr_clear_line.exit70_crit_edge:    ; preds = %sw.bb10
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_clear_line.exit70

if.then.i69:                                      ; preds = %sw.bb10
  call void @__sanitizer_cov_trace_pc() #23
  %state11 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %28 = ptrtoint ptr %state11 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %state11, align 4
  %y.i65 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %30 = ptrtoint ptr %y.i65 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %y.i65, align 4
  %arrayidx.i66 = getelementptr [0 x ptr], ptr %27, i32 0, i32 %31
  %32 = ptrtoint ptr %arrayidx.i66 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %arrayidx.i66, align 4
  %add13 = shl i32 %29, 2
  %mul.i.i67 = add i32 %add13, 4
  %call.i.i68 = tail call ptr @__memset32(ptr noundef %33, i32 noundef 32, i32 noundef %mul.i.i67) #21
  br label %vc_uniscr_clear_line.exit70

vc_uniscr_clear_line.exit70:                      ; preds = %if.then.i69, %sw.bb10.vc_uniscr_clear_line.exit70_crit_edge
  %y15 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %34 = ptrtoint ptr %y15 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %y15, align 4
  %36 = ptrtoint ptr %vc_uni_screen.i63 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %vc_uni_screen.i63, align 4
  %tobool.not.i72 = icmp eq ptr %37, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %tobool1.not4.i73 = icmp eq i32 %35, 0
  %or.cond.i74 = or i1 %tobool1.not4.i73, %tobool.not.i72
  br i1 %or.cond.i74, label %vc_uniscr_clear_line.exit70.vc_uniscr_clear_lines.exit86_crit_edge, label %while.body.lr.ph.i77

vc_uniscr_clear_line.exit70.vc_uniscr_clear_lines.exit86_crit_edge: ; preds = %vc_uniscr_clear_line.exit70
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_clear_lines.exit86

while.body.lr.ph.i77:                             ; preds = %vc_uniscr_clear_line.exit70
  %vc_cols.i75 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %38 = ptrtoint ptr %vc_cols.i75 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %vc_cols.i75, align 4
  %mul.i.i76 = shl i32 %39, 2
  br label %while.body.i85

while.body.i85:                                   ; preds = %while.body.i85.while.body.i85_crit_edge, %while.body.lr.ph.i77
  %nr.addr.06.i78 = phi i32 [ %35, %while.body.lr.ph.i77 ], [ %dec.i80, %while.body.i85.while.body.i85_crit_edge ]
  %y.addr.05.i79 = phi i32 [ 0, %while.body.lr.ph.i77 ], [ %inc.i81, %while.body.i85.while.body.i85_crit_edge ]
  %dec.i80 = add i32 %nr.addr.06.i78, -1
  %inc.i81 = add nuw i32 %y.addr.05.i79, 1
  %arrayidx.i82 = getelementptr [0 x ptr], ptr %37, i32 0, i32 %y.addr.05.i79
  %40 = ptrtoint ptr %arrayidx.i82 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %arrayidx.i82, align 4
  %call.i.i83 = tail call ptr @__memset32(ptr noundef %41, i32 noundef 32, i32 noundef %mul.i.i76) #21
  %tobool1.not.i84 = icmp eq i32 %dec.i80, 0
  br i1 %tobool1.not.i84, label %while.body.i85.vc_uniscr_clear_lines.exit86_crit_edge, label %while.body.i85.while.body.i85_crit_edge

while.body.i85.while.body.i85_crit_edge:          ; preds = %while.body.i85
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body.i85

while.body.i85.vc_uniscr_clear_lines.exit86_crit_edge: ; preds = %while.body.i85
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_clear_lines.exit86

vc_uniscr_clear_lines.exit86:                     ; preds = %while.body.i85.vc_uniscr_clear_lines.exit86_crit_edge, %vc_uniscr_clear_line.exit70.vc_uniscr_clear_lines.exit86_crit_edge
  %vc_pos16 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 26
  %42 = ptrtoint ptr %vc_pos16 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %vc_pos16, align 4
  %vc_origin = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 9
  %44 = ptrtoint ptr %vc_origin to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %vc_origin, align 4
  %sub17 = sub i32 %43, %45
  %shr18 = lshr i32 %sub17, 1
  %add19 = add nuw i32 %shr18, 1
  br label %sw.epilog

sw.bb21:                                          ; preds = %entry
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %46 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool.not.i87 = icmp eq i32 %46, 0
  br i1 %tobool.not.i87, label %land.lhs.true.i, label %sw.bb21.if.end.i_crit_edge

sw.bb21.if.end.i_crit_edge:                       ; preds = %sw.bb21
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %sw.bb21
  %call1.i = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %land.rhs.i, label %land.lhs.true.i.if.end.i_crit_edge

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

land.rhs.i:                                       ; preds = %land.lhs.true.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %47 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool3.not.i = icmp eq i32 %47, 0
  br i1 %tobool3.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !365

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 949, i32 noundef 9, ptr noundef null) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %land.lhs.true.i.if.end.i_crit_edge, %sw.bb21.if.end.i_crit_edge
  tail call fastcc void @set_origin(ptr noundef %vc) #21
  %vc_sw.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %48 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %vc_sw.i, align 4
  %con_flush_scrollback.i = getelementptr inbounds %struct.consw, ptr %49, i32 0, i32 23
  %50 = ptrtoint ptr %con_flush_scrollback.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %con_flush_scrollback.i, align 4
  %tobool24.not.i = icmp eq ptr %51, null
  br i1 %tobool24.not.i, label %if.else.i, label %if.then25.i

if.then25.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void %51(ptr noundef %vc) #21
  br label %sw.bb22

if.else.i:                                        ; preds = %if.end.i
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %52 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool.not.i.i = icmp eq i32 %52, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %if.else.i.con_is_visible.exit.i_crit_edge

if.else.i.con_is_visible.exit.i_crit_edge:        ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

land.lhs.true.i.i:                                ; preds = %if.else.i
  %call1.i.i = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool2.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool2.not.i.i, label %land.rhs.i.i, label %land.lhs.true.i.i.con_is_visible.exit.i_crit_edge

land.lhs.true.i.i.con_is_visible.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

land.rhs.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %53 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %53)
  %tobool3.not.i.i = icmp eq i32 %53, 0
  br i1 %tobool3.not.i.i, label %do.end.i.i, label %land.rhs.i.i.con_is_visible.exit.i_crit_edge, !prof !365

land.rhs.i.i.con_is_visible.exit.i_crit_edge:     ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4012, i32 noundef 9, ptr noundef null) #21
  br label %con_is_visible.exit.i

con_is_visible.exit.i:                            ; preds = %do.end.i.i, %land.rhs.i.i.con_is_visible.exit.i_crit_edge, %land.lhs.true.i.i.con_is_visible.exit.i_crit_edge, %if.else.i.con_is_visible.exit.i_crit_edge
  %vc_display_fg.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 47
  %54 = ptrtoint ptr %vc_display_fg.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %vc_display_fg.i.i, align 4
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %55, align 4
  %cmp.i.i = icmp eq ptr %57, %vc
  br i1 %cmp.i.i, label %if.then29.i, label %con_is_visible.exit.i.sw.bb22_crit_edge

con_is_visible.exit.i.sw.bb22_crit_edge:          ; preds = %con_is_visible.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb22

if.then29.i:                                      ; preds = %con_is_visible.exit.i
  tail call fastcc void @hide_cursor(ptr noundef %vc) #21
  %58 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %vc_sw.i, align 4
  %con_switch.i = getelementptr inbounds %struct.consw, ptr %59, i32 0, i32 9
  %60 = ptrtoint ptr %con_switch.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %con_switch.i, align 4
  %call31.i = tail call i32 %61(ptr noundef %vc) #21
  %vc_num.i.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 3
  %62 = ptrtoint ptr %vc_num.i.i.i to i32
  call void @__asan_load2_noabort(i32 %62)
  %63 = load i16, ptr %vc_num.i.i.i, align 4
  %conv.i.i.i = zext i16 %63 to i32
  %64 = load i32, ptr @fg_console, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %64, i32 %conv.i.i.i)
  %cmp.i.i.i = icmp eq i32 %64, %conv.i.i.i
  br i1 %cmp.i.i.i, label %lor.lhs.false.i.i, label %if.then29.i.sw.bb22_crit_edge

if.then29.i.sw.bb22_crit_edge:                    ; preds = %if.then29.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb22

lor.lhs.false.i.i:                                ; preds = %if.then29.i
  %65 = load i32, ptr @console_blanked, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool.not.i44.i = icmp eq i32 %65, 0
  br i1 %tobool.not.i44.i, label %lor.lhs.false1.i.i, label %lor.lhs.false.i.i.sw.bb22_crit_edge

lor.lhs.false.i.i.sw.bb22_crit_edge:              ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb22

lor.lhs.false1.i.i:                               ; preds = %lor.lhs.false.i.i
  %vc_mode.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 17
  %66 = ptrtoint ptr %vc_mode.i.i to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %vc_mode.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %67)
  %cmp.i45.i = icmp eq i8 %67, 1
  br i1 %cmp.i45.i, label %lor.lhs.false1.i.i.sw.bb22_crit_edge, label %if.end.i.i

lor.lhs.false1.i.i.sw.bb22_crit_edge:             ; preds = %lor.lhs.false1.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb22

if.end.i.i:                                       ; preds = %lor.lhs.false1.i.i
  %vc_deccm.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %68 = ptrtoint ptr %vc_deccm.i.i to i32
  call void @__asan_load2_noabort(i32 %68)
  %bf.load.i.i = load i16, ptr %vc_deccm.i.i, align 4
  %69 = and i16 %bf.load.i.i, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %69)
  %tobool3.not.i46.i = icmp eq i16 %69, 0
  br i1 %tobool3.not.i46.i, label %if.else.i.i, label %if.then4.i.i

if.then4.i.i:                                     ; preds = %if.end.i.i
  %call5.i.i = tail call zeroext i1 @vc_is_sel(ptr noundef %vc) #21
  br i1 %call5.i.i, label %if.then6.i.i, label %if.then4.i.i.if.end7.i.i_crit_edge

if.then4.i.i.if.end7.i.i_crit_edge:               ; preds = %if.then4.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7.i.i

if.then6.i.i:                                     ; preds = %if.then4.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @clear_selection() #21
  br label %if.end7.i.i

if.end7.i.i:                                      ; preds = %if.then6.i.i, %if.then4.i.i.if.end7.i.i_crit_edge
  tail call fastcc void @add_softcursor(ptr noundef %vc) #21
  %vc_cursor_type.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 23
  %70 = ptrtoint ptr %vc_cursor_type.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %vc_cursor_type.i.i, align 4
  %and.i.i = and i32 %71, 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i.i)
  %cmp8.not.i.i = icmp eq i32 %and.i.i, 1
  br i1 %cmp8.not.i.i, label %if.end7.i.i.sw.bb22_crit_edge, label %if.then10.i.i

if.end7.i.i.sw.bb22_crit_edge:                    ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb22

if.then10.i.i:                                    ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %72 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %vc_sw.i, align 4
  %con_cursor.i.i = getelementptr inbounds %struct.consw, ptr %73, i32 0, i32 7
  %74 = ptrtoint ptr %con_cursor.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %con_cursor.i.i, align 4
  tail call void %75(ptr noundef %vc, i32 noundef 1) #21
  br label %sw.bb22

if.else.i.i:                                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @hide_cursor(ptr noundef %vc) #21
  br label %sw.bb22

sw.bb22:                                          ; preds = %if.else.i.i, %if.then10.i.i, %if.end7.i.i.sw.bb22_crit_edge, %lor.lhs.false1.i.i.sw.bb22_crit_edge, %lor.lhs.false.i.i.sw.bb22_crit_edge, %if.then29.i.sw.bb22_crit_edge, %con_is_visible.exit.i.sw.bb22_crit_edge, %if.then25.i, %entry.sw.bb22_crit_edge
  %vc_rows23 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 5
  %76 = ptrtoint ptr %vc_rows23 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %vc_rows23, align 4
  %vc_uni_screen.i88 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 50
  %78 = ptrtoint ptr %vc_uni_screen.i88 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %vc_uni_screen.i88, align 4
  %tobool.not.i89 = icmp eq ptr %79, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %77)
  %tobool1.not4.i90 = icmp eq i32 %77, 0
  %or.cond.i91 = or i1 %tobool1.not4.i90, %tobool.not.i89
  br i1 %or.cond.i91, label %sw.bb22.vc_uniscr_clear_lines.exit104_crit_edge, label %while.body.lr.ph.i94

sw.bb22.vc_uniscr_clear_lines.exit104_crit_edge:  ; preds = %sw.bb22
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_clear_lines.exit104

while.body.lr.ph.i94:                             ; preds = %sw.bb22
  %vc_cols.i92 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %80 = ptrtoint ptr %vc_cols.i92 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %vc_cols.i92, align 4
  %mul.i.i93 = shl i32 %81, 2
  br label %while.body.i102

while.body.i102:                                  ; preds = %while.body.i102.while.body.i102_crit_edge, %while.body.lr.ph.i94
  %nr.addr.06.i95 = phi i32 [ %77, %while.body.lr.ph.i94 ], [ %dec.i97, %while.body.i102.while.body.i102_crit_edge ]
  %y.addr.05.i96 = phi i32 [ 0, %while.body.lr.ph.i94 ], [ %inc.i98, %while.body.i102.while.body.i102_crit_edge ]
  %dec.i97 = add i32 %nr.addr.06.i95, -1
  %inc.i98 = add nuw i32 %y.addr.05.i96, 1
  %arrayidx.i99 = getelementptr [0 x ptr], ptr %79, i32 0, i32 %y.addr.05.i96
  %82 = ptrtoint ptr %arrayidx.i99 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %arrayidx.i99, align 4
  %call.i.i100 = tail call ptr @__memset32(ptr noundef %83, i32 noundef 32, i32 noundef %mul.i.i93) #21
  %tobool1.not.i101 = icmp eq i32 %dec.i97, 0
  br i1 %tobool1.not.i101, label %while.body.i102.vc_uniscr_clear_lines.exit104_crit_edge, label %while.body.i102.while.body.i102_crit_edge

while.body.i102.while.body.i102_crit_edge:        ; preds = %while.body.i102
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body.i102

while.body.i102.vc_uniscr_clear_lines.exit104_crit_edge: ; preds = %while.body.i102
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_clear_lines.exit104

vc_uniscr_clear_lines.exit104:                    ; preds = %while.body.i102.vc_uniscr_clear_lines.exit104_crit_edge, %sw.bb22.vc_uniscr_clear_lines.exit104_crit_edge
  %vc_cols24 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %84 = ptrtoint ptr %vc_cols24 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %vc_cols24, align 4
  %86 = ptrtoint ptr %vc_rows23 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %vc_rows23, align 4
  %mul = mul i32 %87, %85
  %vc_origin26 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 9
  %88 = ptrtoint ptr %vc_origin26 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %vc_origin26, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %vc_uniscr_clear_lines.exit104, %vc_uniscr_clear_lines.exit86, %vc_uniscr_clear_lines.exit
  %count.0 = phi i32 [ %mul, %vc_uniscr_clear_lines.exit104 ], [ %add19, %vc_uniscr_clear_lines.exit86 ], [ %shr, %vc_uniscr_clear_lines.exit ]
  %start.0.in = phi i32 [ %89, %vc_uniscr_clear_lines.exit104 ], [ %45, %vc_uniscr_clear_lines.exit86 ], [ %25, %vc_uniscr_clear_lines.exit ]
  %start.0 = inttoptr i32 %start.0.in to ptr
  %vc_video_erase_char = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 29
  %90 = ptrtoint ptr %vc_video_erase_char to i32
  call void @__asan_load2_noabort(i32 %90)
  %91 = load i16, ptr %vc_video_erase_char, align 4
  %mul27 = and i32 %count.0, 2147483647
  %call.i = tail call ptr @memset16(ptr noundef %start.0, i16 noundef zeroext %91, i32 noundef %mul27) #21
  %call.i.i.i.i105 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %92 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %92)
  %tobool.not.i.i106 = icmp eq i32 %92, 0
  br i1 %tobool.not.i.i106, label %land.lhs.true.i.i109, label %sw.epilog.con_is_visible.exit.i115_crit_edge

sw.epilog.con_is_visible.exit.i115_crit_edge:     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i115

land.lhs.true.i.i109:                             ; preds = %sw.epilog
  %call1.i.i107 = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i107)
  %tobool2.not.i.i108 = icmp eq i32 %call1.i.i107, 0
  br i1 %tobool2.not.i.i108, label %land.rhs.i.i111, label %land.lhs.true.i.i109.con_is_visible.exit.i115_crit_edge

land.lhs.true.i.i109.con_is_visible.exit.i115_crit_edge: ; preds = %land.lhs.true.i.i109
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i115

land.rhs.i.i111:                                  ; preds = %land.lhs.true.i.i109
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %93 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %93)
  %tobool3.not.i.i110 = icmp eq i32 %93, 0
  br i1 %tobool3.not.i.i110, label %do.end.i.i112, label %land.rhs.i.i111.con_is_visible.exit.i115_crit_edge, !prof !365

land.rhs.i.i111.con_is_visible.exit.i115_crit_edge: ; preds = %land.rhs.i.i111
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i115

do.end.i.i112:                                    ; preds = %land.rhs.i.i111
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4012, i32 noundef 9, ptr noundef null) #21
  br label %con_is_visible.exit.i115

con_is_visible.exit.i115:                         ; preds = %do.end.i.i112, %land.rhs.i.i111.con_is_visible.exit.i115_crit_edge, %land.lhs.true.i.i109.con_is_visible.exit.i115_crit_edge, %sw.epilog.con_is_visible.exit.i115_crit_edge
  %vc_display_fg.i.i113 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 47
  %94 = ptrtoint ptr %vc_display_fg.i.i113 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %vc_display_fg.i.i113, align 4
  %96 = ptrtoint ptr %95 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %95, align 4
  %cmp.i.i114 = icmp eq ptr %97, %vc
  br i1 %cmp.i.i114, label %con_should_update.exit, label %con_is_visible.exit.i115.if.end_crit_edge

con_is_visible.exit.i115.if.end_crit_edge:        ; preds = %con_is_visible.exit.i115
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

con_should_update.exit:                           ; preds = %con_is_visible.exit.i115
  %98 = load i32, ptr @console_blanked, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %98)
  %tobool.not.i116 = icmp eq i32 %98, 0
  br i1 %tobool.not.i116, label %if.then, label %con_should_update.exit.if.end_crit_edge

con_should_update.exit.if.end_crit_edge:          ; preds = %con_should_update.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %con_should_update.exit
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @do_update_region(ptr noundef %vc, i32 noundef %start.0.in, i32 noundef %count.0)
  br label %if.end

if.end:                                           ; preds = %if.then, %con_should_update.exit.if.end_crit_edge, %con_is_visible.exit.i115.if.end_crit_edge
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %99 = ptrtoint ptr %vc_need_wrap to i32
  call void @__asan_load2_noabort(i32 %99)
  %bf.load = load i16, ptr %vc_need_wrap, align 4
  %bf.clear = and i16 %bf.load, -33
  store i16 %bf.clear, ptr %vc_need_wrap, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @register_console(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @vt_console_print(ptr nocapture noundef readnone %co, ptr nocapture noundef readonly %b, i32 noundef %count) #0 align 64 {
entry:
  %param.i214 = alloca %struct.vt_notifier_param, align 4
  %param.i = alloca %struct.vt_notifier_param, align 4
  %param.i.i184 = alloca %struct.vt_notifier_param, align 4
  %param.i.i175 = alloca %struct.vt_notifier_param, align 4
  %param.i.i = alloca %struct.vt_notifier_param, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @fg_console, align 4
  %arrayidx = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %0
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %arrayidx, align 4
  %.b = load i1, ptr @printable, align 4
  br i1 %.b, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i = tail call i32 @_raw_spin_trylock(ptr noundef nonnull @vt_console_print.printing_lock) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool1.not = icmp eq i32 %call.i, 0
  br i1 %tobool1.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %3 = load i32, ptr @vt_kmsg_redirect.kmsg_con, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool5.not = icmp eq i32 %3, 0
  br i1 %tobool5.not, label %if.end3.if.end12_crit_edge, label %land.lhs.true

if.end3.if.end12_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end12

land.lhs.true:                                    ; preds = %if.end3
  %sub = add i32 %3, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 63, i32 %sub)
  %cmp.i = icmp ult i32 %sub, 63
  br i1 %cmp.i, label %vc_cons_allocated.exit, label %land.lhs.true.if.end12_crit_edge

land.lhs.true.if.end12_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end12

vc_cons_allocated.exit:                           ; preds = %land.lhs.true
  %arrayidx.i = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %sub
  %4 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx.i, align 4
  %tobool.i.not = icmp eq ptr %5, null
  br i1 %tobool.i.not, label %vc_cons_allocated.exit.if.end12_crit_edge, label %if.then8

vc_cons_allocated.exit.if.end12_crit_edge:        ; preds = %vc_cons_allocated.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end12

if.then8:                                         ; preds = %vc_cons_allocated.exit
  call void @__sanitizer_cov_trace_pc() #23
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx.i, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.then8, %vc_cons_allocated.exit.if.end12_crit_edge, %land.lhs.true.if.end12_crit_edge, %if.end3.if.end12_crit_edge
  %vc.0 = phi ptr [ %7, %if.then8 ], [ %2, %vc_cons_allocated.exit.if.end12_crit_edge ], [ %2, %if.end3.if.end12_crit_edge ], [ %2, %land.lhs.true.if.end12_crit_edge ]
  %8 = load i32, ptr @fg_console, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 63, i32 %8)
  %cmp.i165 = icmp ult i32 %8, 63
  br i1 %cmp.i165, label %vc_cons_allocated.exit170, label %if.end12.quit_crit_edge

if.end12.quit_crit_edge:                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #23
  br label %quit

vc_cons_allocated.exit170:                        ; preds = %if.end12
  %arrayidx.i166 = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx.i166 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx.i166, align 4
  %tobool.i167.not = icmp eq ptr %10, null
  br i1 %tobool.i167.not, label %vc_cons_allocated.exit170.quit_crit_edge, label %if.end16

vc_cons_allocated.exit170.quit_crit_edge:         ; preds = %vc_cons_allocated.exit170
  call void @__sanitizer_cov_trace_pc() #23
  br label %quit

if.end16:                                         ; preds = %vc_cons_allocated.exit170
  %vc_mode = getelementptr inbounds %struct.vc_data, ptr %vc.0, i32 0, i32 17
  %11 = ptrtoint ptr %vc_mode to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %vc_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %cmp.not = icmp eq i8 %12, 0
  br i1 %cmp.not, label %if.end19, label %if.end16.quit_crit_edge

if.end16.quit_crit_edge:                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #23
  br label %quit

if.end19:                                         ; preds = %if.end16
  %vc_num.i = getelementptr inbounds %struct.vc_data, ptr %vc.0, i32 0, i32 3
  %13 = ptrtoint ptr %vc_num.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %vc_num.i, align 4
  %conv.i = zext i16 %14 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %conv.i)
  %cmp.i171 = icmp eq i32 %8, %conv.i
  br i1 %cmp.i171, label %if.then21, label %if.end19.if.end22_crit_edge

if.end19.if.end22_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end22

if.then21:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @hide_cursor(ptr noundef %vc.0)
  br label %if.end22

if.end22:                                         ; preds = %if.then21, %if.end19.if.end22_crit_edge
  %vc_pos = getelementptr inbounds %struct.vc_data, ptr %vc.0, i32 0, i32 26
  %state = getelementptr inbounds %struct.vc_data, ptr %vc.0, i32 0, i32 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %count)
  %tobool24.not219 = icmp eq i32 %count, 0
  br i1 %tobool24.not219, label %if.end22.if.end109_crit_edge, label %while.body.lr.ph

if.end22.if.end109_crit_edge:                     ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end109

while.body.lr.ph:                                 ; preds = %if.end22
  %15 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %state, align 4
  %conv23 = trunc i32 %16 to i16
  %17 = ptrtoint ptr %vc_pos to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %vc_pos, align 4
  %19 = inttoptr i32 %18 to ptr
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, ptr %vc.0, i32 0, i32 37
  %vc_display_fg.i = getelementptr inbounds %struct.vc_data, ptr %vc.0, i32 0, i32 47
  %vc_sw = getelementptr inbounds %struct.vc_data, ptr %vc.0, i32 0, i32 14
  %y = getelementptr inbounds %struct.vc_data, ptr %vc.0, i32 0, i32 1, i32 1
  %20 = getelementptr inbounds %struct.vt_notifier_param, ptr %param.i.i, i32 0, i32 1
  %vc_bottom.i = getelementptr inbounds %struct.vc_data, ptr %vc.0, i32 0, i32 13
  %vc_rows.i = getelementptr inbounds %struct.vc_data, ptr %vc.0, i32 0, i32 5
  %vc_size_row.i = getelementptr inbounds %struct.vc_data, ptr %vc.0, i32 0, i32 6
  %vc_top.i = getelementptr inbounds %struct.vc_data, ptr %vc.0, i32 0, i32 12
  %21 = getelementptr inbounds %struct.vt_notifier_param, ptr %param.i.i175, i32 0, i32 1
  %22 = getelementptr inbounds %struct.vt_notifier_param, ptr %param.i.i184, i32 0, i32 1
  %vc_uni_screen.i = getelementptr inbounds %struct.vc_data, ptr %vc.0, i32 0, i32 50
  %vc_attr = getelementptr inbounds %struct.vc_data, ptr %vc.0, i32 0, i32 18
  %23 = getelementptr inbounds %struct.vt_notifier_param, ptr %param.i, i32 0, i32 1
  %vc_cols = getelementptr inbounds %struct.vc_data, ptr %vc.0, i32 0, i32 4
  br label %while.body

while.body:                                       ; preds = %while.cond.backedge.while.body_crit_edge, %while.body.lr.ph
  %dec227.in = phi i32 [ %count, %while.body.lr.ph ], [ %dec227, %while.cond.backedge.while.body_crit_edge ]
  %cnt.0225 = phi i16 [ 0, %while.body.lr.ph ], [ %cnt.0.be, %while.cond.backedge.while.body_crit_edge ]
  %start_x.0223 = phi i16 [ %conv23, %while.body.lr.ph ], [ %start_x.0.be, %while.cond.backedge.while.body_crit_edge ]
  %start.0221 = phi ptr [ %19, %while.body.lr.ph ], [ %start.0.be, %while.cond.backedge.while.body_crit_edge ]
  %b.addr.0220 = phi ptr [ %b, %while.body.lr.ph ], [ %incdec.ptr, %while.cond.backedge.while.body_crit_edge ]
  %dec227 = add i32 %dec227.in, -1
  %incdec.ptr = getelementptr i8, ptr %b.addr.0220, i32 1
  %24 = ptrtoint ptr %b.addr.0220 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %b.addr.0220, align 1
  %conv25 = zext i8 %25 to i32
  %26 = zext i8 %25 to i64
  call void @__sanitizer_cov_trace_switch(i64 %26, ptr @__sancov_gen_cov_switch_values.64)
  switch i8 %25, label %lor.lhs.false35 [
    i8 13, label %while.body.if.then37_crit_edge
    i8 10, label %while.body.if.then37_crit_edge235
    i8 8, label %while.body.if.then37_crit_edge236
  ]

while.body.if.then37_crit_edge236:                ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then37

while.body.if.then37_crit_edge235:                ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then37

while.body.if.then37_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then37

lor.lhs.false35:                                  ; preds = %while.body
  %27 = ptrtoint ptr %vc_need_wrap to i32
  call void @__asan_load2_noabort(i32 %27)
  %bf.load = load i16, ptr %vc_need_wrap, align 4
  %28 = and i16 %bf.load, 32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %28)
  %tobool36.not = icmp eq i16 %28, 0
  br i1 %tobool36.not, label %lor.lhs.false35.if.end75_crit_edge, label %lor.lhs.false35.if.then37_crit_edge

lor.lhs.false35.if.then37_crit_edge:              ; preds = %lor.lhs.false35
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then37

lor.lhs.false35.if.end75_crit_edge:               ; preds = %lor.lhs.false35
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end75

if.then37:                                        ; preds = %lor.lhs.false35.if.then37_crit_edge, %while.body.if.then37_crit_edge, %while.body.if.then37_crit_edge235, %while.body.if.then37_crit_edge236
  %conv38 = zext i16 %cnt.0225 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %cnt.0225)
  %tobool39.not = icmp eq i16 %cnt.0225, 0
  br i1 %tobool39.not, label %if.then37.if.end47_crit_edge, label %land.lhs.true40

if.then37.if.end47_crit_edge:                     ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end47

land.lhs.true40:                                  ; preds = %if.then37
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %29 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool.not.i = icmp eq i32 %29, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %land.lhs.true40.con_is_visible.exit_crit_edge

land.lhs.true40.con_is_visible.exit_crit_edge:    ; preds = %land.lhs.true40
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit

land.lhs.true.i:                                  ; preds = %land.lhs.true40
  %call1.i = call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %land.rhs.i172, label %land.lhs.true.i.con_is_visible.exit_crit_edge

land.lhs.true.i.con_is_visible.exit_crit_edge:    ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit

land.rhs.i172:                                    ; preds = %land.lhs.true.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %30 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool3.not.i = icmp eq i32 %30, 0
  br i1 %tobool3.not.i, label %do.end.i, label %land.rhs.i172.con_is_visible.exit_crit_edge, !prof !365

land.rhs.i172.con_is_visible.exit_crit_edge:      ; preds = %land.rhs.i172
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit

do.end.i:                                         ; preds = %land.rhs.i172
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4012, i32 noundef 9, ptr noundef null) #21
  br label %con_is_visible.exit

con_is_visible.exit:                              ; preds = %do.end.i, %land.rhs.i172.con_is_visible.exit_crit_edge, %land.lhs.true.i.con_is_visible.exit_crit_edge, %land.lhs.true40.con_is_visible.exit_crit_edge
  %31 = ptrtoint ptr %vc_display_fg.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %vc_display_fg.i, align 4
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %32, align 4
  %cmp.i173 = icmp eq ptr %34, %vc.0
  br i1 %cmp.i173, label %if.then43, label %con_is_visible.exit.if.end47_crit_edge

con_is_visible.exit.if.end47_crit_edge:           ; preds = %con_is_visible.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end47

if.then43:                                        ; preds = %con_is_visible.exit
  call void @__sanitizer_cov_trace_pc() #23
  %35 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %vc_sw, align 4
  %con_putcs = getelementptr inbounds %struct.consw, ptr %36, i32 0, i32 6
  %37 = ptrtoint ptr %con_putcs to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %con_putcs, align 4
  %39 = ptrtoint ptr %y to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %y, align 4
  %conv46 = zext i16 %start_x.0223 to i32
  call void %38(ptr noundef %vc.0, ptr noundef %start.0221, i32 noundef %conv38, i32 noundef %40, i32 noundef %conv46) #21
  br label %if.end47

if.end47:                                         ; preds = %if.then43, %con_is_visible.exit.if.end47_crit_edge, %if.then37.if.end47_crit_edge
  %41 = zext i8 %25 to i64
  call void @__sanitizer_cov_trace_switch(i64 %41, ptr @__sancov_gen_cov_switch_values.65)
  switch i8 %25, label %if.then60 [
    i8 8, label %if.then51
    i8 13, label %if.end47.if.end61_crit_edge
  ]

if.end47.if.end61_crit_edge:                      ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end61

if.then51:                                        ; preds = %if.end47
  %42 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %tobool.not.i174 = icmp eq i32 %43, 0
  br i1 %tobool.not.i174, label %if.then51.bs.exit_crit_edge, label %if.then.i

if.then51.bs.exit_crit_edge:                      ; preds = %if.then51
  call void @__sanitizer_cov_trace_pc() #23
  br label %bs.exit

if.then.i:                                        ; preds = %if.then51
  call void @__sanitizer_cov_trace_pc() #23
  %44 = ptrtoint ptr %vc_pos to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %vc_pos, align 4
  %sub.i = add i32 %45, -2
  store i32 %sub.i, ptr %vc_pos, align 4
  %dec.i = add i32 %43, -1
  %46 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %dec.i, ptr %state, align 4
  %47 = ptrtoint ptr %vc_need_wrap to i32
  call void @__asan_load2_noabort(i32 %47)
  %bf.load.i = load i16, ptr %vc_need_wrap, align 4
  %bf.clear.i = and i16 %bf.load.i, -33
  store i16 %bf.clear.i, ptr %vc_need_wrap, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param.i.i) #21
  %48 = ptrtoint ptr %param.i.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %vc.0, ptr %param.i.i, align 4
  %49 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 8, ptr %20, align 4
  %call.i.i = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 3, ptr noundef nonnull %param.i.i) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param.i.i) #21
  br label %bs.exit

bs.exit:                                          ; preds = %if.then.i, %if.then51.bs.exit_crit_edge
  %50 = ptrtoint ptr %vc_pos to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %vc_pos, align 4
  %52 = inttoptr i32 %51 to ptr
  %53 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %state, align 4
  %conv55 = trunc i32 %54 to i16
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.else, %if.then87, %if.end61.while.cond.backedge_crit_edge, %if.end61.while.cond.backedge_crit_edge237, %bs.exit
  %start.0.be = phi ptr [ %52, %bs.exit ], [ %80, %if.end61.while.cond.backedge_crit_edge ], [ %80, %if.end61.while.cond.backedge_crit_edge237 ], [ %start.1, %if.else ], [ %start.1, %if.then87 ]
  %start_x.0.be = phi i16 [ %conv55, %bs.exit ], [ %conv65, %if.end61.while.cond.backedge_crit_edge ], [ %conv65, %if.end61.while.cond.backedge_crit_edge237 ], [ %start_x.1, %if.else ], [ %start_x.1, %if.then87 ]
  %cnt.0.be = phi i16 [ 0, %bs.exit ], [ 0, %if.end61.while.cond.backedge_crit_edge ], [ 0, %if.end61.while.cond.backedge_crit_edge237 ], [ %inc, %if.else ], [ %inc, %if.then87 ]
  %tobool24.not = icmp eq i32 %dec227, 0
  br i1 %tobool24.not, label %while.end, label %while.cond.backedge.while.body_crit_edge

while.cond.backedge.while.body_crit_edge:         ; preds = %while.cond.backedge
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body

if.then60:                                        ; preds = %if.end47
  %55 = ptrtoint ptr %y to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %y, align 4
  %add.i = add i32 %56, 1
  %57 = ptrtoint ptr %vc_bottom.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %vc_bottom.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %58)
  %cmp.i176 = icmp eq i32 %add.i, %58
  br i1 %cmp.i176, label %if.then.i177, label %if.else.i

if.then.i177:                                     ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #23
  %59 = ptrtoint ptr %vc_top.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %vc_top.i, align 4
  call fastcc void @con_scroll(ptr noundef %vc.0, i32 noundef %60, i32 noundef %add.i, i32 noundef 0, i32 noundef 1) #21
  br label %lf.exit

if.else.i:                                        ; preds = %if.then60
  %61 = ptrtoint ptr %vc_rows.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %vc_rows.i, align 4
  %sub.i178 = add i32 %62, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %56, i32 %sub.i178)
  %cmp4.i = icmp ult i32 %56, %sub.i178
  br i1 %cmp4.i, label %if.then5.i, label %if.else.i.lf.exit_crit_edge

if.else.i.lf.exit_crit_edge:                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %lf.exit

if.then5.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  %63 = ptrtoint ptr %y to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %add.i, ptr %y, align 4
  %64 = ptrtoint ptr %vc_size_row.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %vc_size_row.i, align 4
  %66 = ptrtoint ptr %vc_pos to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %vc_pos, align 4
  %add8.i = add i32 %67, %65
  store i32 %add8.i, ptr %vc_pos, align 4
  br label %lf.exit

lf.exit:                                          ; preds = %if.then5.i, %if.else.i.lf.exit_crit_edge, %if.then.i177
  %68 = ptrtoint ptr %vc_need_wrap to i32
  call void @__asan_load2_noabort(i32 %68)
  %bf.load.i181 = load i16, ptr %vc_need_wrap, align 4
  %bf.clear.i182 = and i16 %bf.load.i181, -33
  store i16 %bf.clear.i182, ptr %vc_need_wrap, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param.i.i175) #21
  %69 = ptrtoint ptr %param.i.i175 to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr %vc.0, ptr %param.i.i175, align 4
  %70 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 10, ptr %21, align 4
  %call.i.i183 = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 3, ptr noundef nonnull %param.i.i175) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param.i.i175) #21
  br label %if.end61

if.end61:                                         ; preds = %lf.exit, %if.end47.if.end61_crit_edge
  %71 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %state, align 4
  %shl.neg.i = mul i32 %72, -2
  %73 = ptrtoint ptr %vc_pos to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %vc_pos, align 4
  %sub.i187 = add i32 %shl.neg.i, %74
  store i32 %sub.i187, ptr %vc_pos, align 4
  store i32 0, ptr %state, align 4
  %75 = ptrtoint ptr %vc_need_wrap to i32
  call void @__asan_load2_noabort(i32 %75)
  %bf.load.i189 = load i16, ptr %vc_need_wrap, align 4
  %bf.clear.i190 = and i16 %bf.load.i189, -33
  store i16 %bf.clear.i190, ptr %vc_need_wrap, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param.i.i184) #21
  %76 = ptrtoint ptr %param.i.i184 to i32
  call void @__asan_store4_noabort(i32 %76)
  store ptr %vc.0, ptr %param.i.i184, align 4
  %77 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 13, ptr %22, align 4
  %call.i.i191 = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 3, ptr noundef nonnull %param.i.i184) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param.i.i184) #21
  %78 = ptrtoint ptr %vc_pos to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %vc_pos, align 4
  %80 = inttoptr i32 %79 to ptr
  %81 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %state, align 4
  %conv65 = trunc i32 %82 to i16
  %83 = zext i8 %25 to i64
  call void @__sanitizer_cov_trace_switch(i64 %83, ptr @__sancov_gen_cov_switch_values.66)
  switch i8 %25, label %if.end61.if.end75_crit_edge [
    i8 13, label %if.end61.while.cond.backedge_crit_edge
    i8 10, label %if.end61.while.cond.backedge_crit_edge237
  ]

if.end61.while.cond.backedge_crit_edge237:        ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.cond.backedge

if.end61.while.cond.backedge_crit_edge:           ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.cond.backedge

if.end61.if.end75_crit_edge:                      ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end75

if.end75:                                         ; preds = %if.end61.if.end75_crit_edge, %lor.lhs.false35.if.end75_crit_edge
  %start.1 = phi ptr [ %start.0221, %lor.lhs.false35.if.end75_crit_edge ], [ %80, %if.end61.if.end75_crit_edge ]
  %start_x.1 = phi i16 [ %start_x.0223, %lor.lhs.false35.if.end75_crit_edge ], [ %conv65, %if.end61.if.end75_crit_edge ]
  %cnt.1 = phi i16 [ %cnt.0225, %lor.lhs.false35.if.end75_crit_edge ], [ 0, %if.end61.if.end75_crit_edge ]
  %84 = ptrtoint ptr %vc_uni_screen.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %vc_uni_screen.i, align 4
  %tobool.not.i192 = icmp eq ptr %85, null
  br i1 %tobool.not.i192, label %if.end75.vc_uniscr_putc.exit_crit_edge, label %if.then.i196

if.end75.vc_uniscr_putc.exit_crit_edge:           ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_putc.exit

if.then.i196:                                     ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #23
  %86 = ptrtoint ptr %y to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %y, align 4
  %arrayidx.i195 = getelementptr [0 x ptr], ptr %85, i32 0, i32 %87
  %88 = ptrtoint ptr %arrayidx.i195 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %arrayidx.i195, align 4
  %90 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %state, align 4
  %arrayidx2.i = getelementptr i32, ptr %89, i32 %91
  %92 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %92)
  store i32 %conv25, ptr %arrayidx2.i, align 4
  br label %vc_uniscr_putc.exit

vc_uniscr_putc.exit:                              ; preds = %if.then.i196, %if.end75.vc_uniscr_putc.exit_crit_edge
  %93 = ptrtoint ptr %vc_attr to i32
  call void @__asan_load1_noabort(i32 %93)
  %94 = load i8, ptr %vc_attr, align 1
  %conv77 = zext i8 %94 to i32
  %shl = shl nuw nsw i32 %conv77, 8
  %add = or i32 %shl, %conv25
  %conv79 = trunc i32 %add to i16
  %95 = ptrtoint ptr %vc_pos to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %vc_pos, align 4
  %97 = inttoptr i32 %96 to ptr
  %98 = ptrtoint ptr %97 to i32
  call void @__asan_store2_noabort(i32 %98)
  store i16 %conv79, ptr %97, align 2
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param.i) #21
  %99 = ptrtoint ptr %param.i to i32
  call void @__asan_store4_noabort(i32 %99)
  store ptr %vc.0, ptr %param.i, align 4
  %100 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %100)
  store i32 %conv25, ptr %23, align 4
  %call.i197 = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 3, ptr noundef nonnull %param.i) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param.i) #21
  %inc = add i16 %cnt.1, 1
  %101 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %state, align 4
  %103 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %vc_cols, align 4
  %sub84 = add i32 %104, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %102, i32 %sub84)
  %cmp85 = icmp eq i32 %102, %sub84
  br i1 %cmp85, label %if.then87, label %if.else

if.then87:                                        ; preds = %vc_uniscr_putc.exit
  call void @__sanitizer_cov_trace_pc() #23
  %105 = ptrtoint ptr %vc_need_wrap to i32
  call void @__asan_load2_noabort(i32 %105)
  %bf.load89 = load i16, ptr %vc_need_wrap, align 4
  %bf.set = or i16 %bf.load89, 32
  store i16 %bf.set, ptr %vc_need_wrap, align 4
  br label %while.cond.backedge

if.else:                                          ; preds = %vc_uniscr_putc.exit
  call void @__sanitizer_cov_trace_pc() #23
  %106 = ptrtoint ptr %vc_pos to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %vc_pos, align 4
  %add92 = add i32 %107, 2
  store i32 %add92, ptr %vc_pos, align 4
  %inc95 = add i32 %102, 1
  %108 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %108)
  store i32 %inc95, ptr %state, align 4
  br label %while.cond.backedge

while.end:                                        ; preds = %while.cond.backedge
  %conv97 = zext i16 %cnt.0.be to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %cnt.0.be)
  %tobool98.not = icmp eq i16 %cnt.0.be, 0
  br i1 %tobool98.not, label %while.end.if.end109_crit_edge, label %land.lhs.true99

while.end.if.end109_crit_edge:                    ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end109

land.lhs.true99:                                  ; preds = %while.end
  %call.i.i.i198 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %109 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %109)
  %tobool.not.i199 = icmp eq i32 %109, 0
  br i1 %tobool.not.i199, label %land.lhs.true.i202, label %land.lhs.true99.con_is_visible.exit208_crit_edge

land.lhs.true99.con_is_visible.exit208_crit_edge: ; preds = %land.lhs.true99
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit208

land.lhs.true.i202:                               ; preds = %land.lhs.true99
  %call1.i200 = call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i200)
  %tobool2.not.i201 = icmp eq i32 %call1.i200, 0
  br i1 %tobool2.not.i201, label %land.rhs.i204, label %land.lhs.true.i202.con_is_visible.exit208_crit_edge

land.lhs.true.i202.con_is_visible.exit208_crit_edge: ; preds = %land.lhs.true.i202
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit208

land.rhs.i204:                                    ; preds = %land.lhs.true.i202
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %110 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %110)
  %tobool3.not.i203 = icmp eq i32 %110, 0
  br i1 %tobool3.not.i203, label %do.end.i205, label %land.rhs.i204.con_is_visible.exit208_crit_edge, !prof !365

land.rhs.i204.con_is_visible.exit208_crit_edge:   ; preds = %land.rhs.i204
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit208

do.end.i205:                                      ; preds = %land.rhs.i204
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4012, i32 noundef 9, ptr noundef null) #21
  br label %con_is_visible.exit208

con_is_visible.exit208:                           ; preds = %do.end.i205, %land.rhs.i204.con_is_visible.exit208_crit_edge, %land.lhs.true.i202.con_is_visible.exit208_crit_edge, %land.lhs.true99.con_is_visible.exit208_crit_edge
  %vc_display_fg.i206 = getelementptr inbounds %struct.vc_data, ptr %vc.0, i32 0, i32 47
  %111 = ptrtoint ptr %vc_display_fg.i206 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %vc_display_fg.i206, align 4
  %113 = ptrtoint ptr %112 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %112, align 4
  %cmp.i207 = icmp eq ptr %114, %vc.0
  br i1 %cmp.i207, label %if.then102, label %con_is_visible.exit208.if.end109_crit_edge

con_is_visible.exit208.if.end109_crit_edge:       ; preds = %con_is_visible.exit208
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end109

if.then102:                                       ; preds = %con_is_visible.exit208
  call void @__sanitizer_cov_trace_pc() #23
  %vc_sw103 = getelementptr inbounds %struct.vc_data, ptr %vc.0, i32 0, i32 14
  %115 = ptrtoint ptr %vc_sw103 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %vc_sw103, align 4
  %con_putcs104 = getelementptr inbounds %struct.consw, ptr %116, i32 0, i32 6
  %117 = ptrtoint ptr %con_putcs104 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %con_putcs104, align 4
  %y107 = getelementptr inbounds %struct.vc_data, ptr %vc.0, i32 0, i32 1, i32 1
  %119 = ptrtoint ptr %y107 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %y107, align 4
  %conv108 = zext i16 %start_x.0.be to i32
  call void %118(ptr noundef %vc.0, ptr noundef %start.0.be, i32 noundef %conv97, i32 noundef %120, i32 noundef %conv108) #21
  br label %if.end109

if.end109:                                        ; preds = %if.then102, %con_is_visible.exit208.if.end109_crit_edge, %while.end.if.end109_crit_edge, %if.end22.if.end109_crit_edge
  %121 = ptrtoint ptr %vc_num.i to i32
  call void @__asan_load2_noabort(i32 %121)
  %122 = load i16, ptr %vc_num.i, align 4
  %conv.i.i = zext i16 %122 to i32
  %123 = load i32, ptr @fg_console, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %123, i32 %conv.i.i)
  %cmp.i.i = icmp eq i32 %123, %conv.i.i
  br i1 %cmp.i.i, label %lor.lhs.false.i, label %if.end109.set_cursor.exit_crit_edge

if.end109.set_cursor.exit_crit_edge:              ; preds = %if.end109
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_cursor.exit

lor.lhs.false.i:                                  ; preds = %if.end109
  %124 = load i32, ptr @console_blanked, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %124)
  %tobool.not.i209 = icmp eq i32 %124, 0
  br i1 %tobool.not.i209, label %lor.lhs.false1.i, label %lor.lhs.false.i.set_cursor.exit_crit_edge

lor.lhs.false.i.set_cursor.exit_crit_edge:        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_cursor.exit

lor.lhs.false1.i:                                 ; preds = %lor.lhs.false.i
  %125 = ptrtoint ptr %vc_mode to i32
  call void @__asan_load1_noabort(i32 %125)
  %126 = load i8, ptr %vc_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %126)
  %cmp.i210 = icmp eq i8 %126, 1
  br i1 %cmp.i210, label %lor.lhs.false1.i.set_cursor.exit_crit_edge, label %if.end.i

lor.lhs.false1.i.set_cursor.exit_crit_edge:       ; preds = %lor.lhs.false1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_cursor.exit

if.end.i:                                         ; preds = %lor.lhs.false1.i
  %vc_deccm.i = getelementptr inbounds %struct.vc_data, ptr %vc.0, i32 0, i32 37
  %127 = ptrtoint ptr %vc_deccm.i to i32
  call void @__asan_load2_noabort(i32 %127)
  %bf.load.i211 = load i16, ptr %vc_deccm.i, align 4
  %128 = and i16 %bf.load.i211, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %128)
  %tobool3.not.i212 = icmp eq i16 %128, 0
  br i1 %tobool3.not.i212, label %if.else.i213, label %if.then4.i

if.then4.i:                                       ; preds = %if.end.i
  %call5.i = call zeroext i1 @vc_is_sel(ptr noundef %vc.0) #21
  br i1 %call5.i, label %if.then6.i, label %if.then4.i.if.end7.i_crit_edge

if.then4.i.if.end7.i_crit_edge:                   ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7.i

if.then6.i:                                       ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @clear_selection() #21
  br label %if.end7.i

if.end7.i:                                        ; preds = %if.then6.i, %if.then4.i.if.end7.i_crit_edge
  call fastcc void @add_softcursor(ptr noundef %vc.0) #21
  %vc_cursor_type.i = getelementptr inbounds %struct.vc_data, ptr %vc.0, i32 0, i32 23
  %129 = ptrtoint ptr %vc_cursor_type.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %vc_cursor_type.i, align 4
  %and.i = and i32 %130, 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i)
  %cmp8.not.i = icmp eq i32 %and.i, 1
  br i1 %cmp8.not.i, label %if.end7.i.set_cursor.exit_crit_edge, label %if.then10.i

if.end7.i.set_cursor.exit_crit_edge:              ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %set_cursor.exit

if.then10.i:                                      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  %vc_sw.i = getelementptr inbounds %struct.vc_data, ptr %vc.0, i32 0, i32 14
  %131 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load ptr, ptr %vc_sw.i, align 4
  %con_cursor.i = getelementptr inbounds %struct.consw, ptr %132, i32 0, i32 7
  %133 = ptrtoint ptr %con_cursor.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %con_cursor.i, align 4
  call void %134(ptr noundef %vc.0, i32 noundef 1) #21
  br label %set_cursor.exit

if.else.i213:                                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @hide_cursor(ptr noundef %vc.0) #21
  br label %set_cursor.exit

set_cursor.exit:                                  ; preds = %if.else.i213, %if.then10.i, %if.end7.i.set_cursor.exit_crit_edge, %lor.lhs.false1.i.set_cursor.exit_crit_edge, %lor.lhs.false.i.set_cursor.exit_crit_edge, %if.end109.set_cursor.exit_crit_edge
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param.i214) #21
  %135 = getelementptr inbounds %struct.vt_notifier_param, ptr %param.i214, i32 0, i32 1
  %136 = ptrtoint ptr %param.i214 to i32
  call void @__asan_store4_noabort(i32 %136)
  store ptr %vc.0, ptr %param.i214, align 4
  %137 = ptrtoint ptr %135 to i32
  call void @__asan_store4_noabort(i32 %137)
  store i32 0, ptr %135, align 4
  %call.i215 = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 4, ptr noundef nonnull %param.i214) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param.i214) #21
  br label %quit

quit:                                             ; preds = %set_cursor.exit, %if.end16.quit_crit_edge, %vc_cons_allocated.exit170.quit_crit_edge, %if.end12.quit_crit_edge
  call void @_raw_spin_unlock(ptr noundef nonnull @vt_console_print.printing_lock) #21
  br label %cleanup

cleanup:                                          ; preds = %quit, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal ptr @vt_console_device(ptr nocapture noundef readonly %c, ptr nocapture noundef writeonly %index) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %index1 = getelementptr inbounds %struct.console, ptr %c, i32 0, i32 9
  %0 = ptrtoint ptr %index1 to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %index1, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %1)
  %tobool.not = icmp eq i16 %1, 0
  br i1 %tobool.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %conv = sext i16 %1 to i32
  %sub = add nsw i32 %conv, -1
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %2 = load i32, ptr @fg_console, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %2, %cond.false ]
  %3 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %cond, ptr %index, align 4
  %4 = load ptr, ptr @console_driver, align 4
  ret ptr %4
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @lf(ptr noundef %vc) unnamed_addr #0 align 64 {
entry:
  %param.i = alloca %struct.vt_notifier_param, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %y = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %0 = ptrtoint ptr %y to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %y, align 4
  %add = add i32 %1, 1
  %vc_bottom = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 13
  %2 = ptrtoint ptr %vc_bottom to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vc_bottom, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %3)
  %cmp = icmp eq i32 %add, %3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %vc_top = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 12
  %4 = ptrtoint ptr %vc_top to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vc_top, align 4
  tail call fastcc void @con_scroll(ptr noundef %vc, i32 noundef %5, i32 noundef %add, i32 noundef 0, i32 noundef 1)
  br label %if.end9

if.else:                                          ; preds = %entry
  %vc_rows = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 5
  %6 = ptrtoint ptr %vc_rows to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %vc_rows, align 4
  %sub = add i32 %7, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %sub)
  %cmp4 = icmp ult i32 %1, %sub
  br i1 %cmp4, label %if.then5, label %if.else.if.end9_crit_edge

if.else.if.end9_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

if.then5:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  %8 = ptrtoint ptr %y to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %add, ptr %y, align 4
  %vc_size_row = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 6
  %9 = ptrtoint ptr %vc_size_row to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %vc_size_row, align 4
  %vc_pos = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 26
  %11 = ptrtoint ptr %vc_pos to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %vc_pos, align 4
  %add8 = add i32 %12, %10
  store i32 %add8, ptr %vc_pos, align 4
  br label %if.end9

if.end9:                                          ; preds = %if.then5, %if.else.if.end9_crit_edge, %if.then
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %13 = ptrtoint ptr %vc_need_wrap to i32
  call void @__asan_load2_noabort(i32 %13)
  %bf.load = load i16, ptr %vc_need_wrap, align 4
  %bf.clear = and i16 %bf.load, -33
  store i16 %bf.clear, ptr %vc_need_wrap, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param.i) #21
  %14 = getelementptr inbounds %struct.vt_notifier_param, ptr %param.i, i32 0, i32 1
  %15 = ptrtoint ptr %param.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %vc, ptr %param.i, align 4
  %16 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 10, ptr %14, align 4
  %call.i = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 3, ptr noundef nonnull %param.i) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param.i) #21
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @cr(ptr noundef %vc) unnamed_addr #15 align 64 {
entry:
  %param.i = alloca %struct.vt_notifier_param, align 4
  call void @__sanitizer_cov_trace_pc() #23
  %state = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %0 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %state, align 4
  %shl.neg = mul i32 %1, -2
  %vc_pos = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 26
  %2 = ptrtoint ptr %vc_pos to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vc_pos, align 4
  %sub = add i32 %shl.neg, %3
  store i32 %sub, ptr %vc_pos, align 4
  store i32 0, ptr %state, align 4
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %4 = ptrtoint ptr %vc_need_wrap to i32
  call void @__asan_load2_noabort(i32 %4)
  %bf.load = load i16, ptr %vc_need_wrap, align 4
  %bf.clear = and i16 %bf.load, -33
  store i16 %bf.clear, ptr %vc_need_wrap, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param.i) #21
  %5 = getelementptr inbounds %struct.vt_notifier_param, ptr %param.i, i32 0, i32 1
  %6 = ptrtoint ptr %param.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %vc, ptr %param.i, align 4
  %7 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 13, ptr %5, align 4
  %call.i = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 3, ptr noundef nonnull %param.i) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param.i) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_trylock(ptr noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @con_scroll(ptr noundef %vc, i32 noundef %t, i32 noundef %b, i32 noundef %dir, i32 noundef %nr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add = add i32 %nr, %t
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %b)
  %cmp.not = icmp ult i32 %add, %b
  %0 = xor i32 %t, -1
  %sub1 = add i32 %0, %b
  %nr.addr.0 = select i1 %cmp.not, i32 %nr, i32 %sub1
  %vc_rows = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 5
  %1 = ptrtoint ptr %vc_rows to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %vc_rows, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %b)
  %cmp2 = icmp ult i32 %2, %b
  call void @__sanitizer_cov_trace_cmp4(i32 %b, i32 %t)
  %cmp3.not = icmp ule i32 %b, %t
  %or.cond.not = or i1 %cmp3.not, %cmp2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr.addr.0)
  %cmp5 = icmp eq i32 %nr.addr.0, 0
  %or.cond70 = or i1 %cmp5, %or.cond.not
  br i1 %or.cond70, label %entry.cleanup_crit_edge, label %if.end7

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end7:                                          ; preds = %entry
  %vc_uni_screen.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 50
  %3 = ptrtoint ptr %vc_uni_screen.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %vc_uni_screen.i, align 4
  %tobool.not.i = icmp eq ptr %4, null
  br i1 %tobool.not.i, label %if.end7.vc_uniscr_scroll.exit_crit_edge, label %if.then.i

if.end7.vc_uniscr_scroll.exit_crit_edge:          ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_scroll.exit

if.then.i:                                        ; preds = %if.end7
  %sub.i = sub i32 %b, %t
  %sub1.i = sub i32 %b, %nr.addr.0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dir)
  %cmp.i = icmp eq i32 %dir, 1
  %sub3.i = sub i32 %sub.i, %nr.addr.0
  %spec.select.i = select i1 %cmp.i, i32 %sub3.i, i32 %nr.addr.0
  %spec.select51.i = select i1 %cmp.i, i32 %t, i32 %sub1.i
  %call.i = tail call i32 @gcd(i32 noundef %spec.select.i, i32 noundef %sub.i) #29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp460.not.i = icmp eq i32 %call.i, 0
  br i1 %cmp460.not.i, label %if.then.i.for.end.i_crit_edge, label %if.then.i.for.body.i_crit_edge

if.then.i.for.body.i_crit_edge:                   ; preds = %if.then.i
  br label %for.body.i

if.then.i.for.end.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.body.i:                                       ; preds = %while.end.i.for.body.i_crit_edge, %if.then.i.for.body.i_crit_edge
  %i.061.i = phi i32 [ %inc.i, %while.end.i.for.body.i_crit_edge ], [ 0, %if.then.i.for.body.i_crit_edge ]
  %add.i = add i32 %i.061.i, %t
  %arrayidx.i = getelementptr [0 x ptr], ptr %4, i32 0, i32 %add.i
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i, align 4
  %add553.i = add i32 %i.061.i, %spec.select.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add553.i, i32 %sub.i)
  %cmp6.not54.i = icmp ult i32 %add553.i, %sub.i
  %sub855.i = select i1 %cmp6.not54.i, i32 0, i32 %sub.i
  %spec.select5256.i = sub i32 %add553.i, %sub855.i
  call void @__sanitizer_cov_trace_cmp4(i32 %spec.select5256.i, i32 %i.061.i)
  %cmp1057.i = icmp eq i32 %spec.select5256.i, %i.061.i
  br i1 %cmp1057.i, label %for.body.i.while.end.i_crit_edge, label %for.body.i.if.end12.i_crit_edge

for.body.i.if.end12.i_crit_edge:                  ; preds = %for.body.i
  br label %if.end12.i

for.body.i.while.end.i_crit_edge:                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end.i

if.end12.i:                                       ; preds = %if.end12.i.if.end12.i_crit_edge, %for.body.i.if.end12.i_crit_edge
  %spec.select5259.i = phi i32 [ %spec.select52.i, %if.end12.i.if.end12.i_crit_edge ], [ %spec.select5256.i, %for.body.i.if.end12.i_crit_edge ]
  %j.058.i = phi i32 [ %spec.select5259.i, %if.end12.i.if.end12.i_crit_edge ], [ %i.061.i, %for.body.i.if.end12.i_crit_edge ]
  %add14.i = add i32 %spec.select5259.i, %t
  %arrayidx15.i = getelementptr [0 x ptr], ptr %4, i32 0, i32 %add14.i
  %7 = ptrtoint ptr %arrayidx15.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx15.i, align 4
  %add17.i = add i32 %j.058.i, %t
  %arrayidx18.i = getelementptr [0 x ptr], ptr %4, i32 0, i32 %add17.i
  %9 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %8, ptr %arrayidx18.i, align 4
  %add5.i = add i32 %spec.select5259.i, %spec.select.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add5.i, i32 %sub.i)
  %cmp6.not.i = icmp ult i32 %add5.i, %sub.i
  %sub8.i = select i1 %cmp6.not.i, i32 0, i32 %sub.i
  %spec.select52.i = sub i32 %add5.i, %sub8.i
  %cmp10.i = icmp eq i32 %spec.select52.i, %i.061.i
  br i1 %cmp10.i, label %if.end12.i.while.end.i_crit_edge, label %if.end12.i.if.end12.i_crit_edge

if.end12.i.if.end12.i_crit_edge:                  ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end12.i

if.end12.i.while.end.i_crit_edge:                 ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end.i

while.end.i:                                      ; preds = %if.end12.i.while.end.i_crit_edge, %for.body.i.while.end.i_crit_edge
  %add20.pre-phi.i = phi i32 [ %add.i, %for.body.i.while.end.i_crit_edge ], [ %add14.i, %if.end12.i.while.end.i_crit_edge ]
  %arrayidx21.i = getelementptr [0 x ptr], ptr %4, i32 0, i32 %add20.pre-phi.i
  %10 = ptrtoint ptr %arrayidx21.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %6, ptr %arrayidx21.i, align 4
  %inc.i = add nuw i32 %i.061.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %call.i
  br i1 %exitcond.not.i, label %while.end.i.for.end.i_crit_edge, label %while.end.i.for.body.i_crit_edge

while.end.i.for.body.i_crit_edge:                 ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

while.end.i.for.end.i_crit_edge:                  ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.end.i:                                        ; preds = %while.end.i.for.end.i_crit_edge, %if.then.i.for.end.i_crit_edge
  %11 = ptrtoint ptr %vc_uni_screen.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %vc_uni_screen.i, align 4
  %tobool.not.i.i = icmp eq ptr %12, null
  br i1 %tobool.not.i.i, label %for.end.i.vc_uniscr_scroll.exit_crit_edge, label %while.body.lr.ph.i.i

for.end.i.vc_uniscr_scroll.exit_crit_edge:        ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_scroll.exit

while.body.lr.ph.i.i:                             ; preds = %for.end.i
  %vc_cols.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %13 = ptrtoint ptr %vc_cols.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %vc_cols.i.i, align 4
  %mul.i.i.i = shl i32 %14, 2
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i.while.body.i.i_crit_edge, %while.body.lr.ph.i.i
  %nr.addr.06.i.i = phi i32 [ %nr.addr.0, %while.body.lr.ph.i.i ], [ %dec.i.i, %while.body.i.i.while.body.i.i_crit_edge ]
  %y.addr.05.i.i = phi i32 [ %spec.select51.i, %while.body.lr.ph.i.i ], [ %inc.i.i, %while.body.i.i.while.body.i.i_crit_edge ]
  %dec.i.i = add i32 %nr.addr.06.i.i, -1
  %inc.i.i = add i32 %y.addr.05.i.i, 1
  %arrayidx.i.i = getelementptr [0 x ptr], ptr %12, i32 0, i32 %y.addr.05.i.i
  %15 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %arrayidx.i.i, align 4
  %call.i.i.i = tail call ptr @__memset32(ptr noundef %16, i32 noundef 32, i32 noundef %mul.i.i.i) #21
  %tobool1.not.i.i = icmp eq i32 %dec.i.i, 0
  br i1 %tobool1.not.i.i, label %while.body.i.i.vc_uniscr_scroll.exit_crit_edge, label %while.body.i.i.while.body.i.i_crit_edge

while.body.i.i.while.body.i.i_crit_edge:          ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body.i.i

while.body.i.i.vc_uniscr_scroll.exit_crit_edge:   ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_scroll.exit

vc_uniscr_scroll.exit:                            ; preds = %while.body.i.i.vc_uniscr_scroll.exit_crit_edge, %for.end.i.vc_uniscr_scroll.exit_crit_edge, %if.end7.vc_uniscr_scroll.exit_crit_edge
  %call.i.i.i71 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %17 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.not.i72 = icmp eq i32 %17, 0
  br i1 %tobool.not.i72, label %land.lhs.true.i, label %vc_uniscr_scroll.exit.con_is_visible.exit_crit_edge

vc_uniscr_scroll.exit.con_is_visible.exit_crit_edge: ; preds = %vc_uniscr_scroll.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit

land.lhs.true.i:                                  ; preds = %vc_uniscr_scroll.exit
  %call1.i = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %land.rhs.i, label %land.lhs.true.i.con_is_visible.exit_crit_edge

land.lhs.true.i.con_is_visible.exit_crit_edge:    ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit

land.rhs.i:                                       ; preds = %land.lhs.true.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %18 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool3.not.i = icmp eq i32 %18, 0
  br i1 %tobool3.not.i, label %do.end.i, label %land.rhs.i.con_is_visible.exit_crit_edge, !prof !365

land.rhs.i.con_is_visible.exit_crit_edge:         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4012, i32 noundef 9, ptr noundef null) #21
  br label %con_is_visible.exit

con_is_visible.exit:                              ; preds = %do.end.i, %land.rhs.i.con_is_visible.exit_crit_edge, %land.lhs.true.i.con_is_visible.exit_crit_edge, %vc_uniscr_scroll.exit.con_is_visible.exit_crit_edge
  %vc_display_fg.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 47
  %19 = ptrtoint ptr %vc_display_fg.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %vc_display_fg.i, align 4
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %20, align 4
  %cmp.i73 = icmp eq ptr %22, %vc
  br i1 %cmp.i73, label %land.lhs.true, label %con_is_visible.exit.if.end10_crit_edge

con_is_visible.exit.if.end10_crit_edge:           ; preds = %con_is_visible.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end10

land.lhs.true:                                    ; preds = %con_is_visible.exit
  %vc_sw = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %23 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %vc_sw, align 4
  %con_scroll = getelementptr inbounds %struct.consw, ptr %24, i32 0, i32 8
  %25 = ptrtoint ptr %con_scroll to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %con_scroll, align 4
  %call8 = tail call zeroext i1 %26(ptr noundef %vc, i32 noundef %t, i32 noundef %b, i32 noundef %dir, i32 noundef %nr.addr.0) #21
  br i1 %call8, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end10_crit_edge

land.lhs.true.if.end10_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end10

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end10:                                         ; preds = %land.lhs.true.if.end10_crit_edge, %con_is_visible.exit.if.end10_crit_edge
  %vc_origin = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 9
  %27 = ptrtoint ptr %vc_origin to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %vc_origin, align 4
  %vc_size_row = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 6
  %29 = ptrtoint ptr %vc_size_row to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %vc_size_row, align 4
  %mul = mul i32 %30, %t
  %add11 = add i32 %mul, %28
  %31 = inttoptr i32 %add11 to ptr
  %add14 = add i32 %nr.addr.0, %t
  %mul15 = mul i32 %30, %add14
  %add16 = add i32 %mul15, %28
  %32 = inttoptr i32 %add16 to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dir)
  %cmp17 = icmp eq i32 %dir, 0
  %sub20 = sub i32 %b, %add14
  br i1 %cmp17, label %if.then18, label %if.end10.if.end22_crit_edge

if.end10.if.end22_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end22

if.then18:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #23
  %vc_cols = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %33 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %vc_cols, align 4
  %mul21 = mul i32 %34, %sub20
  %add.ptr = getelementptr i16, ptr %31, i32 %mul21
  br label %if.end22

if.end22:                                         ; preds = %if.then18, %if.end10.if.end22_crit_edge
  %clear.0 = phi ptr [ %add.ptr, %if.then18 ], [ %31, %if.end10.if.end22_crit_edge ]
  %d.0 = phi ptr [ %31, %if.then18 ], [ %32, %if.end10.if.end22_crit_edge ]
  %s.0 = phi ptr [ %32, %if.then18 ], [ %31, %if.end10.if.end22_crit_edge ]
  %mul26 = mul i32 %30, %sub20
  %35 = call ptr @memmove(ptr %d.0, ptr %s.0, i32 %mul26)
  %vc_video_erase_char = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 29
  %36 = ptrtoint ptr %vc_video_erase_char to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %vc_video_erase_char, align 4
  %38 = ptrtoint ptr %vc_size_row to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %vc_size_row, align 4
  %mul28 = mul i32 %39, %nr.addr.0
  %div1.i = lshr i32 %mul28, 1
  %call.i74 = tail call ptr @memset16(ptr noundef %clear.0, i16 noundef zeroext %37, i32 noundef %div1.i) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end22, %land.lhs.true.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid readnone willreturn
declare dso_local i32 @gcd(i32 noundef, i32 noundef) local_unnamed_addr #16

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @show_tty_active(ptr nocapture noundef readnone %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #17 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @fg_console, align 4
  %add = add i32 %0, 1
  %call = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef %buf, ptr noundef nonnull @.str.24, i32 noundef %add)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @con_install(ptr noundef %driver, ptr noundef %tty) #0 align 64 {
entry:
  %old.i.i.i.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %index = getelementptr inbounds %struct.tty_struct, ptr %tty, i32 0, i32 5
  %0 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %index, align 4
  tail call void @console_lock() #21
  %call = tail call i32 @vc_allocate(i32 noundef %1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.unlock_crit_edge

entry.unlock_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %unlock

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %1
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx, align 4
  %tty1 = getelementptr inbounds %struct.tty_port, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %tty1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %tty1, align 4
  %tobool2.not = icmp eq ptr %5, null
  br i1 %tobool2.not, label %if.end4, label %if.end.unlock_crit_edge

if.end.unlock_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %unlock

if.end4:                                          ; preds = %if.end
  %call6 = tail call i32 @tty_port_install(ptr noundef %3, ptr noundef %driver, ptr noundef %tty) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %if.end9, label %if.end4.unlock_crit_edge

if.end4.unlock_crit_edge:                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #23
  br label %unlock

if.end9:                                          ; preds = %if.end4
  %driver_data = getelementptr inbounds %struct.tty_struct, ptr %tty, i32 0, i32 30
  %6 = ptrtoint ptr %driver_data to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %3, ptr %driver_data, align 4
  %7 = ptrtoint ptr %tty1 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %tty, ptr %tty1, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %if.end9.tty_port_get.exit_crit_edge, label %land.lhs.true.i

if.end9.tty_port_get.exit_crit_edge:              ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #23
  br label %tty_port_get.exit

land.lhs.true.i:                                  ; preds = %if.end9
  %kref.i = getelementptr inbounds %struct.tty_port, ptr %3, i32 0, i32 19
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %old.i.i.i.i.i) #21
  %call.i.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %kref.i, i32 noundef 4) #21
  %8 = ptrtoint ptr %kref.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %kref.i, align 4
  br label %do.body.i.i.i.i.i

do.body.i.i.i.i.i:                                ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.i.do.body.i.i.i.i.i_crit_edge, %land.lhs.true.i
  %10 = phi i32 [ %9, %land.lhs.true.i ], [ %asmresult3.i.i.i.i.i.i.i.i, %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.i.do.body.i.i.i.i.i_crit_edge ]
  %11 = ptrtoint ptr %old.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %old.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not.i.i.i.i.i = icmp eq i32 %10, 0
  br i1 %tobool.not.i.i.i.i.i, label %do.body.i.i.i.i.i.if.end4.i.i.i.i.i_crit_edge, label %do.cond.i.i.i.i.i

do.body.i.i.i.i.i.if.end4.i.i.i.i.i_crit_edge:    ; preds = %do.body.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end4.i.i.i.i.i

do.cond.i.i.i.i.i:                                ; preds = %do.body.i.i.i.i.i
  %add.i.i.i.i.i = add i32 %10, 1
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %kref.i, i32 noundef 4) #21
  %call.i3.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %old.i.i.i.i.i, i32 noundef 4) #21
  %12 = ptrtoint ptr %old.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %old.i.i.i.i.i, align 4
  call void @llvm.prefetch.p0(ptr %kref.i, i32 1, i32 3, i32 1) #21
  br label %do.body.i.i.i.i.i.i.i.i

do.body.i.i.i.i.i.i.i.i:                          ; preds = %do.body.i.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i.i_crit_edge, %do.cond.i.i.i.i.i
  %14 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %kref.i, ptr %kref.i, i32 %13, i32 %add.i.i.i.i.i, ptr elementtype(i32) %kref.i) #21, !srcloc !385
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %14, 0
  %tobool.not.i.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.i, label %do.body.i.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i.i_crit_edge

do.body.i.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i.i_crit_edge: ; preds = %do.body.i.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body.i.i.i.i.i.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.i:   ; preds = %do.body.i.i.i.i.i.i.i.i
  %asmresult3.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %14, 1
  %cmp.not.i.i.i.i.i.i.i = icmp eq i32 %asmresult3.i.i.i.i.i.i.i.i, %13
  br i1 %cmp.not.i.i.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.i.if.end4.i.i.i.i.i_crit_edge, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.i.do.body.i.i.i.i.i_crit_edge, !prof !383

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.i.do.body.i.i.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body.i.i.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.i.if.end4.i.i.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end4.i.i.i.i.i

if.end4.i.i.i.i.i:                                ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.i.if.end4.i.i.i.i.i_crit_edge, %do.body.i.i.i.i.i.if.end4.i.i.i.i.i_crit_edge
  %15 = ptrtoint ptr %old.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %old.i.i.i.i.i, align 4
  %add5.i.i.i.i.i = add i32 %16, 1
  %17 = or i32 %add5.i.i.i.i.i, %16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %17)
  %.not.i.i.i.i.i = icmp sgt i32 %17, -1
  br i1 %.not.i.i.i.i.i, label %if.end4.i.i.i.i.i.kref_get_unless_zero.exit.i_crit_edge, label %if.then10.i.i.i.i.i, !prof !383

if.end4.i.i.i.i.i.kref_get_unless_zero.exit.i_crit_edge: ; preds = %if.end4.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %kref_get_unless_zero.exit.i

if.then10.i.i.i.i.i:                              ; preds = %if.end4.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @refcount_warn_saturate(ptr noundef %kref.i, i32 noundef 0) #21
  br label %kref_get_unless_zero.exit.i

kref_get_unless_zero.exit.i:                      ; preds = %if.then10.i.i.i.i.i, %if.end4.i.i.i.i.i.kref_get_unless_zero.exit.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %old.i.i.i.i.i) #21
  br label %tty_port_get.exit

tty_port_get.exit:                                ; preds = %kref_get_unless_zero.exit.i, %if.end9.tty_port_get.exit_crit_edge
  %winsize = getelementptr inbounds %struct.tty_struct, ptr %tty, i32 0, i32 18
  %18 = ptrtoint ptr %winsize to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %winsize, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %19)
  %tobool14.not = icmp eq i16 %19, 0
  br i1 %tobool14.not, label %land.lhs.true, label %tty_port_get.exit.if.end27_crit_edge

tty_port_get.exit.if.end27_crit_edge:             ; preds = %tty_port_get.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27

land.lhs.true:                                    ; preds = %tty_port_get.exit
  %ws_col = getelementptr inbounds %struct.tty_struct, ptr %tty, i32 0, i32 18, i32 1
  %20 = ptrtoint ptr %ws_col to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %ws_col, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %21)
  %tobool16.not = icmp eq i16 %21, 0
  br i1 %tobool16.not, label %if.then17, label %land.lhs.true.if.end27_crit_edge

land.lhs.true.if.end27_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end27

if.then17:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  %22 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx, align 4
  %vc_rows = getelementptr inbounds %struct.vc_data, ptr %23, i32 0, i32 5
  %24 = ptrtoint ptr %vc_rows to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %vc_rows, align 4
  %conv = trunc i32 %25 to i16
  %26 = ptrtoint ptr %winsize to i32
  call void @__asan_store2_noabort(i32 %26)
  store i16 %conv, ptr %winsize, align 4
  %27 = load ptr, ptr %arrayidx, align 4
  %vc_cols = getelementptr inbounds %struct.vc_data, ptr %27, i32 0, i32 4
  %28 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %vc_cols, align 4
  %conv24 = trunc i32 %29 to i16
  %30 = ptrtoint ptr %ws_col to i32
  call void @__asan_store2_noabort(i32 %30)
  store i16 %conv24, ptr %ws_col, align 2
  br label %if.end27

if.end27:                                         ; preds = %if.then17, %land.lhs.true.if.end27_crit_edge, %tty_port_get.exit.if.end27_crit_edge
  %vc_utf = getelementptr inbounds %struct.vc_data, ptr %3, i32 0, i32 37
  %31 = ptrtoint ptr %vc_utf to i32
  call void @__asan_load2_noabort(i32 %31)
  %bf.load = load i16, ptr %vc_utf, align 4
  %termios30 = getelementptr inbounds %struct.tty_struct, ptr %tty, i32 0, i32 13
  %32 = ptrtoint ptr %termios30 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %termios30, align 4
  %and = and i32 %33, -16385
  %34 = shl i16 %bf.load, 13
  %35 = and i16 %34, 16384
  %36 = zext i16 %35 to i32
  %or.sink = or i32 %and, %36
  store i32 %or.sink, ptr %termios30, align 4
  br label %unlock

unlock:                                           ; preds = %if.end27, %if.end4.unlock_crit_edge, %if.end.unlock_crit_edge, %entry.unlock_crit_edge
  %ret.0 = phi i32 [ %call, %entry.unlock_crit_edge ], [ %call6, %if.end4.unlock_crit_edge ], [ -512, %if.end.unlock_crit_edge ], [ 0, %if.end27 ]
  call void @console_unlock() #21
  ret i32 %ret.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @con_open(ptr nocapture noundef readnone %tty, ptr nocapture noundef readnone %filp) #18 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal void @con_close(ptr nocapture noundef %tty, ptr nocapture noundef %filp) #18 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @con_shutdown(ptr nocapture noundef readonly %tty) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data = getelementptr inbounds %struct.tty_struct, ptr %tty, i32 0, i32 30
  %0 = ptrtoint ptr %driver_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data, align 4
  %cmp = icmp eq ptr %1, null
  br i1 %cmp, label %do.body2, label %do.end7, !prof !365

do.body2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/tty/vt/vt.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3430, 0\0A.popsection", ""() #21, !srcloc !386
  unreachable

do.end7:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @console_lock() #21
  %tty8 = getelementptr inbounds %struct.tty_port, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %tty8 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %tty8, align 4
  tail call void @console_unlock() #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @con_cleanup(ptr nocapture noundef readonly %tty) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data = getelementptr inbounds %struct.tty_struct, ptr %tty, i32 0, i32 30
  %0 = ptrtoint ptr %driver_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data, align 4
  tail call void @tty_port_put(ptr noundef %1) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @con_write(ptr nocapture noundef readonly %tty, ptr nocapture noundef readonly %buf, i32 noundef %count) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @do_con_write(ptr noundef %tty, ptr noundef %buf, i32 noundef %count)
  tail call void @con_flush_chars(ptr noundef %tty)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @con_put_char(ptr nocapture noundef readonly %tty, i8 noundef zeroext %ch) #0 align 64 {
entry:
  %ch.addr = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ch.addr to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 %ch, ptr %ch.addr, align 1
  %call = call fastcc i32 @do_con_write(ptr noundef %tty, ptr noundef nonnull %ch.addr, i32 noundef 1)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @con_flush_chars(ptr nocapture noundef readonly %tty) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !355) #21
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %3, 15728640
  %4 = tail call i32 @llvm.read_register.i32(metadata !355) #21
  %and.i.i10 = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i10 to ptr
  %preempt_count.i11 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i11 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i11, align 4
  %and2 = and i32 %7, 983040
  %or = or i32 %and2, %and
  %8 = tail call i32 @llvm.read_register.i32(metadata !355) #21
  %and.i.i12 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i12 to ptr
  %preempt_count.i13 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i13 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i13, align 4
  %and4 = and i32 %11, 65280
  %or5 = or i32 %or, %and4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or5)
  %tobool.not = icmp eq i32 %or5, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @console_lock() #21
  %driver_data = getelementptr inbounds %struct.tty_struct, ptr %tty, i32 0, i32 30
  %12 = ptrtoint ptr %driver_data to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %driver_data, align 4
  %tobool6.not = icmp eq ptr %13, null
  br i1 %tobool6.not, label %if.end.if.end8_crit_edge, label %if.then7

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8

if.then7:                                         ; preds = %if.end
  %vc_num.i.i = getelementptr inbounds %struct.vc_data, ptr %13, i32 0, i32 3
  %14 = ptrtoint ptr %vc_num.i.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %vc_num.i.i, align 4
  %conv.i.i = zext i16 %15 to i32
  %16 = load i32, ptr @fg_console, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %conv.i.i)
  %cmp.i.i = icmp eq i32 %16, %conv.i.i
  br i1 %cmp.i.i, label %lor.lhs.false.i, label %if.then7.if.end8_crit_edge

if.then7.if.end8_crit_edge:                       ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8

lor.lhs.false.i:                                  ; preds = %if.then7
  %17 = load i32, ptr @console_blanked, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.not.i = icmp eq i32 %17, 0
  br i1 %tobool.not.i, label %lor.lhs.false1.i, label %lor.lhs.false.i.if.end8_crit_edge

lor.lhs.false.i.if.end8_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8

lor.lhs.false1.i:                                 ; preds = %lor.lhs.false.i
  %vc_mode.i = getelementptr inbounds %struct.vc_data, ptr %13, i32 0, i32 17
  %18 = ptrtoint ptr %vc_mode.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %vc_mode.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %19)
  %cmp.i = icmp eq i8 %19, 1
  br i1 %cmp.i, label %lor.lhs.false1.i.if.end8_crit_edge, label %if.end.i

lor.lhs.false1.i.if.end8_crit_edge:               ; preds = %lor.lhs.false1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8

if.end.i:                                         ; preds = %lor.lhs.false1.i
  %vc_deccm.i = getelementptr inbounds %struct.vc_data, ptr %13, i32 0, i32 37
  %20 = ptrtoint ptr %vc_deccm.i to i32
  call void @__asan_load2_noabort(i32 %20)
  %bf.load.i = load i16, ptr %vc_deccm.i, align 4
  %21 = and i16 %bf.load.i, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %21)
  %tobool3.not.i = icmp eq i16 %21, 0
  br i1 %tobool3.not.i, label %if.else.i, label %if.then4.i

if.then4.i:                                       ; preds = %if.end.i
  %call5.i = tail call zeroext i1 @vc_is_sel(ptr noundef nonnull %13) #21
  br i1 %call5.i, label %if.then6.i, label %if.then4.i.if.end7.i_crit_edge

if.then4.i.if.end7.i_crit_edge:                   ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7.i

if.then6.i:                                       ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @clear_selection() #21
  br label %if.end7.i

if.end7.i:                                        ; preds = %if.then6.i, %if.then4.i.if.end7.i_crit_edge
  tail call fastcc void @add_softcursor(ptr noundef nonnull %13) #21
  %vc_cursor_type.i = getelementptr inbounds %struct.vc_data, ptr %13, i32 0, i32 23
  %22 = ptrtoint ptr %vc_cursor_type.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %vc_cursor_type.i, align 4
  %and.i = and i32 %23, 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i)
  %cmp8.not.i = icmp eq i32 %and.i, 1
  br i1 %cmp8.not.i, label %if.end7.i.if.end8_crit_edge, label %if.then10.i

if.end7.i.if.end8_crit_edge:                      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8

if.then10.i:                                      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #23
  %vc_sw.i = getelementptr inbounds %struct.vc_data, ptr %13, i32 0, i32 14
  %24 = ptrtoint ptr %vc_sw.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %vc_sw.i, align 4
  %con_cursor.i = getelementptr inbounds %struct.consw, ptr %25, i32 0, i32 7
  %26 = ptrtoint ptr %con_cursor.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %con_cursor.i, align 4
  tail call void %27(ptr noundef nonnull %13, i32 noundef 1) #21
  br label %if.end8

if.else.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @hide_cursor(ptr noundef nonnull %13) #21
  br label %if.end8

if.end8:                                          ; preds = %if.else.i, %if.then10.i, %if.end7.i.if.end8_crit_edge, %lor.lhs.false1.i.if.end8_crit_edge, %lor.lhs.false.i.if.end8_crit_edge, %if.then7.if.end8_crit_edge, %if.end.if.end8_crit_edge
  tail call void @console_unlock() #21
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @con_write_room(ptr nocapture noundef readonly %tty) #19 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %stopped = getelementptr inbounds %struct.tty_struct, ptr %tty, i32 0, i32 19, i32 1
  %0 = ptrtoint ptr %stopped to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %stopped, align 4, !range !368
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  %. = select i1 %tobool.not, i32 32768, i32 0
  ret i32 %.
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vt_ioctl(ptr noundef, i32 noundef, i32 noundef) #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal void @con_throttle(ptr nocapture noundef %tty) #18 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @con_unthrottle(ptr nocapture noundef readonly %tty) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data = getelementptr inbounds %struct.tty_struct, ptr %tty, i32 0, i32 30
  %0 = ptrtoint ptr %driver_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data, align 4
  %paste_wait = getelementptr inbounds %struct.vc_data, ptr %1, i32 0, i32 36
  tail call void @__wake_up(ptr noundef %paste_wait, i32 noundef 1, i32 noundef 1, ptr noundef null) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @con_stop(ptr noundef readonly %tty) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %tty, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %index = getelementptr inbounds %struct.tty_struct, ptr %tty, i32 0, i32 5
  %0 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 63, i32 %1)
  %cmp.i = icmp ult i32 %1, 63
  br i1 %cmp.i, label %vc_cons_allocated.exit, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

vc_cons_allocated.exit:                           ; preds = %if.end
  %arrayidx.i = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %1
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx.i, align 4
  %tobool.i.not = icmp eq ptr %3, null
  br i1 %tobool.i.not, label %vc_cons_allocated.exit.cleanup_crit_edge, label %if.end3

vc_cons_allocated.exit.cleanup_crit_edge:         ; preds = %vc_cons_allocated.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end3:                                          ; preds = %vc_cons_allocated.exit
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @vt_kbd_con_stop(i32 noundef %1) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end3, %vc_cons_allocated.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @con_start(ptr noundef readonly %tty) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %tty, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %index = getelementptr inbounds %struct.tty_struct, ptr %tty, i32 0, i32 5
  %0 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 63, i32 %1)
  %cmp.i = icmp ult i32 %1, 63
  br i1 %cmp.i, label %vc_cons_allocated.exit, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

vc_cons_allocated.exit:                           ; preds = %if.end
  %arrayidx.i = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %1
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx.i, align 4
  %tobool.i.not = icmp eq ptr %3, null
  br i1 %tobool.i.not, label %vc_cons_allocated.exit.cleanup_crit_edge, label %if.end3

vc_cons_allocated.exit.cleanup_crit_edge:         ; preds = %vc_cons_allocated.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end3:                                          ; preds = %vc_cons_allocated.exit
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @vt_kbd_con_start(i32 noundef %1) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end3, %vc_cons_allocated.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @vt_resize(ptr noundef %tty, ptr nocapture noundef readonly %ws) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data = getelementptr inbounds %struct.tty_struct, ptr %tty, i32 0, i32 30
  %0 = ptrtoint ptr %driver_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data, align 4
  tail call void @console_lock() #21
  %ws_col = getelementptr inbounds %struct.winsize, ptr %ws, i32 0, i32 1
  %2 = ptrtoint ptr %ws_col to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %ws_col, align 2
  %conv = zext i16 %3 to i32
  %4 = ptrtoint ptr %ws to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %ws, align 2
  %conv1 = zext i16 %5 to i32
  %call = tail call fastcc i32 @vc_do_resize(ptr noundef %tty, ptr noundef %1, i32 noundef %conv, i32 noundef %conv1)
  tail call void @console_unlock() #21
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @tty_port_install(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @tty_port_put(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @do_con_write(ptr nocapture noundef readonly %tty, ptr nocapture noundef readonly %buf, i32 noundef %count) unnamed_addr #0 align 64 {
entry:
  %param.i = alloca %struct.vt_notifier_param, align 4
  %param.i.i126 = alloca %struct.vt_notifier_param, align 4
  %param.i.i224.i = alloca %struct.vt_notifier_param, align 4
  %param.i.i.i127 = alloca %struct.vt_notifier_param, align 4
  %ucs.addr.i.i = alloca i32, align 4
  %param.i.i1028.i = alloca %struct.vt_notifier_param, align 4
  %param.i.i1020.i = alloca %struct.vt_notifier_param, align 4
  %param.i.i = alloca %struct.vt_notifier_param, align 4
  %param.i.i.i = alloca %struct.vt_notifier_param, align 4
  %param = alloca %struct.vt_notifier_param, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param) #21
  %0 = getelementptr inbounds %struct.vt_notifier_param, ptr %param, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4, !annotation !367
  %2 = tail call i32 @llvm.read_register.i32(metadata !355) #21
  %and.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %5, 15728640
  %6 = tail call i32 @llvm.read_register.i32(metadata !355) #21
  %and.i.i97 = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i97 to ptr
  %preempt_count.i98 = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %preempt_count.i98 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %preempt_count.i98, align 4
  %and2 = and i32 %9, 983040
  %or = or i32 %and2, %and
  %10 = tail call i32 @llvm.read_register.i32(metadata !355) #21
  %and.i.i99 = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i99 to ptr
  %preempt_count.i100 = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i100 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i100, align 4
  %and4 = and i32 %13, 65280
  %or5 = or i32 %or, %and4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or5)
  %tobool.not = icmp eq i32 %or5, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup64_crit_edge

entry.cleanup64_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup64

if.end:                                           ; preds = %entry
  tail call void @console_lock() #21
  %driver_data = getelementptr inbounds %struct.tty_struct, ptr %tty, i32 0, i32 30
  %14 = ptrtoint ptr %driver_data to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %driver_data, align 4
  %cmp = icmp eq ptr %15, null
  br i1 %cmp, label %do.end, label %if.end8

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.25) #26
  tail call void @console_unlock() #21
  br label %cleanup64

if.end8:                                          ; preds = %if.end
  %vc_num = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 3
  %16 = ptrtoint ptr %vc_num to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %vc_num, align 4
  %conv = zext i16 %17 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 63, i16 %17)
  %cmp.i = icmp ult i16 %17, 63
  br i1 %cmp.i, label %vc_cons_allocated.exit, label %if.end8.land.end_crit_edge

if.end8.land.end_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.end

vc_cons_allocated.exit:                           ; preds = %if.end8
  %arrayidx.i = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %conv
  %18 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx.i, align 4
  %tobool.i.not = icmp eq ptr %19, null
  br i1 %tobool.i.not, label %vc_cons_allocated.exit.land.end_crit_edge, label %if.end32

vc_cons_allocated.exit.land.end_crit_edge:        ; preds = %vc_cons_allocated.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.end

land.end:                                         ; preds = %vc_cons_allocated.exit.land.end_crit_edge, %if.end8.land.end_crit_edge
  %.b96 = load i1, ptr @do_con_write.__already_done, align 1
  br i1 %.b96, label %land.end.if.end24_crit_edge, label %if.then18, !prof !383

land.end.if.end24_crit_edge:                      ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end24

if.then18:                                        ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @do_con_write.__already_done, align 1
  %add = add nuw nsw i32 %conv, 1
  %call23 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.28, i32 noundef %add) #26
  br label %if.end24

if.end24:                                         ; preds = %if.then18, %land.end.if.end24_crit_edge
  tail call void @console_unlock() #21
  br label %cleanup64

if.end32:                                         ; preds = %vc_cons_allocated.exit
  %20 = load i32, ptr @fg_console, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %20, i32 %conv)
  %cmp.i101 = icmp eq i32 %20, %conv
  br i1 %cmp.i101, label %if.then34, label %if.end32.if.end35_crit_edge

if.end32.if.end35_crit_edge:                      ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

if.then34:                                        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @hide_cursor(ptr noundef nonnull %15)
  br label %if.end35

if.end35:                                         ; preds = %if.then34, %if.end32.if.end35_crit_edge
  %21 = ptrtoint ptr %param to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %15, ptr %param, align 4
  %stopped = getelementptr inbounds %struct.tty_struct, ptr %tty, i32 0, i32 19, i32 1
  %22 = ptrtoint ptr %stopped to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %stopped, align 4, !range !368
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool37.not261 = icmp ne i8 %23, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %count)
  %tobool39.not262 = icmp eq i32 %count, 0
  %or.cond263 = or i1 %tobool37.not261, %tobool39.not262
  br i1 %or.cond263, label %if.end35.con_flush.exit180_crit_edge, label %while.body.lr.ph

if.end35.con_flush.exit180_crit_edge:             ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_flush.exit180

while.body.lr.ph:                                 ; preds = %if.end35
  %vc_state.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 30
  %vc_utf.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 37
  %vc_translate.i.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 42
  %vc_utf_count.i.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 38
  %vc_npar25.i.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 31
  %vc_utf_char.i.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 39
  %vc_attr1.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 18
  %vc_hi_font_mask.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 27
  %vc_sw.i.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 14
  %y.i.i145 = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 1, i32 1
  %state.i.i146 = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 1
  %vc_pos.i.i147 = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 26
  %24 = getelementptr inbounds %struct.vt_notifier_param, ptr %param.i.i.i127, i32 0, i32 1
  %vc_bottom.i.i148 = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 13
  %vc_rows.i.i149 = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 5
  %vc_size_row.i.i150 = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 6
  %vc_top.i.i151 = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 12
  %25 = getelementptr inbounds %struct.vt_notifier_param, ptr %param.i.i224.i, i32 0, i32 1
  %vc_uni_screen.i.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 50
  %vc_display_fg.i.i.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 47
  %vc_cols.i153 = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 4
  %26 = getelementptr inbounds %struct.vt_notifier_param, ptr %param.i.i126, i32 0, i32 1
  %charset51.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 1, i32 4
  %Gx_charset56.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 1, i32 3
  %arrayidx.i122 = getelementptr %struct.vc_data, ptr %15, i32 0, i32 1, i32 3, i32 1
  %27 = getelementptr inbounds %struct.vt_notifier_param, ptr %param.i.i1020.i, i32 0, i32 1
  %28 = getelementptr inbounds %struct.vt_notifier_param, ptr %param.i.i1028.i, i32 0, i32 1
  %vc_tab_stop.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 40
  %29 = getelementptr inbounds %struct.vt_notifier_param, ptr %param.i.i, i32 0, i32 1
  %30 = getelementptr inbounds %struct.vt_notifier_param, ptr %param.i.i.i, i32 0, i32 1
  %vc_bell_duration.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 45
  %vc_bell_pitch.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 44
  %vc_video_erase_char.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 29
  %vc_origin.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 9
  %vc_screenbuf_size.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 16
  %vc_par377.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 32
  %arrayidx361.i = getelementptr %struct.vc_data, ptr %15, i32 0, i32 32, i32 1
  %vc_complement_mask.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 24
  %vc_s_complement_mask.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 25
  %arrayidx337.i = getelementptr %struct.vc_data, ptr %15, i32 0, i32 32, i32 2
  %vc_cursor_type.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 23
  %saved_state.i1037.i = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 2
  %arrayidx185.i = getelementptr %struct.vc_data, ptr %15, i32 0, i32 32, i32 3
  %arrayidx192.i = getelementptr %struct.vc_data, ptr %15, i32 0, i32 32, i32 4
  %arrayidx201.i = getelementptr %struct.vc_data, ptr %15, i32 0, i32 32, i32 5
  %arrayidx207.i = getelementptr %struct.vc_data, ptr %15, i32 0, i32 32, i32 6
  br label %while.body

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %while.body.lr.ph
  %buf.addr.0269 = phi ptr [ %buf, %while.body.lr.ph ], [ %incdec.ptr, %cleanup.while.body_crit_edge ]
  %count.addr.0268 = phi i32 [ %count, %while.body.lr.ph ], [ %dec, %cleanup.while.body_crit_edge ]
  %n.0267 = phi i32 [ 0, %while.body.lr.ph ], [ %inc, %cleanup.while.body_crit_edge ]
  %draw.sroa.0.0266 = phi i32 [ 0, %while.body.lr.ph ], [ %draw.sroa.0.5, %cleanup.while.body_crit_edge ]
  %draw.sroa.9.0265 = phi i32 [ 0, %while.body.lr.ph ], [ %draw.sroa.9.4, %cleanup.while.body_crit_edge ]
  %draw.sroa.15.0264 = phi i32 [ -1, %while.body.lr.ph ], [ %draw.sroa.15.8, %cleanup.while.body_crit_edge ]
  %31 = ptrtoint ptr %buf.addr.0269 to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %buf.addr.0269, align 1
  %conv41 = zext i8 %32 to i32
  %incdec.ptr = getelementptr i8, ptr %buf.addr.0269, i32 1
  %inc = add nuw i32 %n.0267, 1
  %dec = add i32 %count.addr.0268, -1
  %and.i.i102 = and i32 %conv41, 192
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %and.i.i102)
  %cmp.i.i = icmp eq i32 %and.i.i102, 128
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %32)
  %cmp22.i.i = icmp sgt i8 %32, -1
  %and26.i.i = and i32 %conv41, 224
  call void @__sanitizer_cov_trace_const_cmp4(i32 192, i32 %and26.i.i)
  %cmp27.i.i = icmp eq i32 %and26.i.i, 192
  %and32.i.i = and i32 %conv41, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 224, i32 %and32.i.i)
  %cmp33.i.i = icmp eq i32 %and32.i.i, 224
  %and39.i.i = and i32 %conv41, 248
  call void @__sanitizer_cov_trace_const_cmp4(i32 240, i32 %and39.i.i)
  %cmp40.i.i = icmp eq i32 %and39.i.i, 240
  %and46.i.i = and i32 %conv41, 252
  call void @__sanitizer_cov_trace_const_cmp4(i32 248, i32 %and46.i.i)
  %cmp47.i.i = icmp eq i32 %and46.i.i, 248
  %and53.i.i = and i32 %conv41, 254
  call void @__sanitizer_cov_trace_const_cmp4(i32 252, i32 %and53.i.i)
  %cmp54.i.i = icmp eq i32 %and53.i.i, 252
  %and2.i.i = and i32 %conv41, 63
  br label %rescan_last_byte

rescan_last_byte:                                 ; preds = %if.end60.rescan_last_byte_crit_edge, %while.body
  %draw.sroa.15.1 = phi i32 [ %draw.sroa.15.0264, %while.body ], [ %draw.sroa.15.7.ph, %if.end60.rescan_last_byte_crit_edge ]
  %draw.sroa.9.1 = phi i32 [ %draw.sroa.9.0265, %while.body ], [ %storemerge.i, %if.end60.rescan_last_byte_crit_edge ]
  %draw.sroa.0.1 = phi i32 [ %draw.sroa.0.0266, %while.body ], [ %draw.sroa.0.3, %if.end60.rescan_last_byte_crit_edge ]
  %33 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %vc_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %cmp.not.i = icmp eq i32 %34, 0
  br i1 %cmp.not.i, label %if.end.i, label %rescan_last_byte.if.end46_crit_edge

rescan_last_byte.if.end46_crit_edge:              ; preds = %rescan_last_byte
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end46

if.end.i:                                         ; preds = %rescan_last_byte
  %35 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %35)
  %bf.load.i = load i16, ptr %vc_utf.i, align 4
  %36 = and i16 %bf.load.i, -32766
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %36)
  %37 = icmp eq i16 %36, 2
  br i1 %37, label %if.then5.i, label %if.end6.i

if.then5.i:                                       ; preds = %if.end.i
  %38 = ptrtoint ptr %vc_utf_count.i.i to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %vc_utf_count.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %39)
  %tobool.not.i.i = icmp eq i8 %39, 0
  br i1 %cmp.i.i, label %if.then.i.i, label %if.end16.i.i

if.then.i.i:                                      ; preds = %if.then5.i
  br i1 %tobool.not.i.i, label %if.then.i.i.if.end46_crit_edge, label %if.end.i.i

if.then.i.i.if.end46_crit_edge:                   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end46

if.end.i.i:                                       ; preds = %if.then.i.i
  %40 = ptrtoint ptr %vc_utf_char.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %vc_utf_char.i.i, align 4
  %shl.i.i = shl i32 %41, 6
  %or.i.i = or i32 %shl.i.i, %and2.i.i
  store i32 %or.i.i, ptr %vc_utf_char.i.i, align 4
  %42 = ptrtoint ptr %vc_npar25.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %vc_npar25.i.i, align 4
  %inc.i.i = add i32 %43, 1
  store i32 %inc.i.i, ptr %vc_npar25.i.i, align 4
  %dec.i.i = add i8 %39, -1
  %44 = ptrtoint ptr %vc_utf_count.i.i to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 %dec.i.i, ptr %vc_utf_count.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %dec.i.i)
  %tobool5.not.i.i = icmp eq i8 %dec.i.i, 0
  br i1 %tobool5.not.i.i, label %if.end7.i.i, label %if.end.i.i.cleanup_crit_edge

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end7.i.i:                                      ; preds = %if.end.i.i
  %arrayidx.i.i = getelementptr [6 x i32], ptr @vc_translate_unicode.utf8_length_changes, i32 0, i32 %43
  %45 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %arrayidx.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %or.i.i, i32 %46)
  %cmp10.not.i.i = icmp ugt i32 %or.i.i, %46
  br i1 %cmp10.not.i.i, label %lor.lhs.false.i.i, label %if.end7.i.i.if.end46_crit_edge

if.end7.i.i.if.end46_crit_edge:                   ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end46

lor.lhs.false.i.i:                                ; preds = %if.end7.i.i
  %arrayidx12.i.i = getelementptr [6 x i32], ptr @vc_translate_unicode.utf8_length_changes, i32 0, i32 %inc.i.i
  %47 = ptrtoint ptr %arrayidx12.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx12.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %or.i.i, i32 %48)
  %cmp13.i.i = icmp ugt i32 %or.i.i, %48
  br i1 %cmp13.i.i, label %lor.lhs.false.i.i.if.end46_crit_edge, label %vc_translate.exit

lor.lhs.false.i.i.if.end46_crit_edge:             ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end46

if.end16.i.i:                                     ; preds = %if.then5.i
  br i1 %tobool.not.i.i, label %if.end21.i.i, label %if.then19.i.i

if.then19.i.i:                                    ; preds = %if.end16.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %49 = ptrtoint ptr %vc_utf_count.i.i to i32
  call void @__asan_store1_noabort(i32 %49)
  store i8 0, ptr %vc_utf_count.i.i, align 2
  br label %if.end46

if.end21.i.i:                                     ; preds = %if.end16.i.i
  br i1 %cmp22.i.i, label %if.end21.i.i.if.end46_crit_edge, label %if.end24.i.i

if.end21.i.i.if.end46_crit_edge:                  ; preds = %if.end21.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end46

if.end24.i.i:                                     ; preds = %if.end21.i.i
  %50 = ptrtoint ptr %vc_npar25.i.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 0, ptr %vc_npar25.i.i, align 4
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.else.i.i

if.then28.i.i:                                    ; preds = %if.end24.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %51 = ptrtoint ptr %vc_utf_count.i.i to i32
  call void @__asan_store1_noabort(i32 %51)
  store i8 1, ptr %vc_utf_count.i.i, align 2
  %and30.i.i = and i32 %conv41, 31
  %52 = ptrtoint ptr %vc_utf_char.i.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %and30.i.i, ptr %vc_utf_char.i.i, align 4
  br label %cleanup

if.else.i.i:                                      ; preds = %if.end24.i.i
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.else38.i.i

if.then34.i.i:                                    ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %53 = ptrtoint ptr %vc_utf_count.i.i to i32
  call void @__asan_store1_noabort(i32 %53)
  store i8 2, ptr %vc_utf_count.i.i, align 2
  %and36.i.i = and i32 %conv41, 15
  %54 = ptrtoint ptr %vc_utf_char.i.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %and36.i.i, ptr %vc_utf_char.i.i, align 4
  br label %cleanup

if.else38.i.i:                                    ; preds = %if.else.i.i
  br i1 %cmp40.i.i, label %if.then41.i.i, label %if.else45.i.i

if.then41.i.i:                                    ; preds = %if.else38.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %55 = ptrtoint ptr %vc_utf_count.i.i to i32
  call void @__asan_store1_noabort(i32 %55)
  store i8 3, ptr %vc_utf_count.i.i, align 2
  %and43.i.i = and i32 %conv41, 7
  %56 = ptrtoint ptr %vc_utf_char.i.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %and43.i.i, ptr %vc_utf_char.i.i, align 4
  br label %cleanup

if.else45.i.i:                                    ; preds = %if.else38.i.i
  br i1 %cmp47.i.i, label %if.then48.i.i, label %if.else52.i.i

if.then48.i.i:                                    ; preds = %if.else45.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %57 = ptrtoint ptr %vc_utf_count.i.i to i32
  call void @__asan_store1_noabort(i32 %57)
  store i8 4, ptr %vc_utf_count.i.i, align 2
  %and50.i.i = and i32 %conv41, 3
  %58 = ptrtoint ptr %vc_utf_char.i.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %and50.i.i, ptr %vc_utf_char.i.i, align 4
  br label %cleanup

if.else52.i.i:                                    ; preds = %if.else45.i.i
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.else52.i.i.if.end46_crit_edge

if.else52.i.i.if.end46_crit_edge:                 ; preds = %if.else52.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end46

if.then55.i.i:                                    ; preds = %if.else52.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %59 = ptrtoint ptr %vc_utf_count.i.i to i32
  call void @__asan_store1_noabort(i32 %59)
  store i8 5, ptr %vc_utf_count.i.i, align 2
  %and57.i.i = and i32 %conv41, 1
  %60 = ptrtoint ptr %vc_utf_char.i.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %and57.i.i, ptr %vc_utf_char.i.i, align 4
  br label %cleanup

if.end6.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %61 = lshr i16 %bf.load.i, 7
  %62 = and i16 %61, 128
  %63 = zext i16 %62 to i32
  %64 = or i32 %63, %conv41
  %65 = ptrtoint ptr %vc_translate.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %vc_translate.i.i, align 4
  %arrayidx.i15.i = getelementptr i16, ptr %66, i32 %64
  %67 = ptrtoint ptr %arrayidx.i15.i to i32
  call void @__asan_load2_noabort(i32 %67)
  %68 = load i16, ptr %arrayidx.i15.i, align 2
  %conv.i.i = zext i16 %68 to i32
  br label %if.end46

vc_translate.exit:                                ; preds = %lor.lhs.false.i.i
  %69 = and i32 %41, 67108832
  call void @__sanitizer_cov_trace_const_cmp4(i32 864, i32 %69)
  %70 = icmp eq i32 %69, 864
  %71 = and i32 %or.i.i, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 65534, i32 %71)
  %72 = icmp eq i32 %71, 65534
  %73 = or i1 %70, %72
  %retval.0.i.i.i = select i1 %73, i32 65533, i32 %or.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.0.i.i.i)
  %cmp43 = icmp eq i32 %retval.0.i.i.i, -1
  br i1 %cmp43, label %vc_translate.exit.cleanup_crit_edge, label %vc_translate.exit.if.end46_crit_edge

vc_translate.exit.if.end46_crit_edge:             ; preds = %vc_translate.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end46

vc_translate.exit.cleanup_crit_edge:              ; preds = %vc_translate.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end46:                                         ; preds = %vc_translate.exit.if.end46_crit_edge, %if.end6.i, %if.else52.i.i.if.end46_crit_edge, %if.end21.i.i.if.end46_crit_edge, %if.then19.i.i, %lor.lhs.false.i.i.if.end46_crit_edge, %if.end7.i.i.if.end46_crit_edge, %if.then.i.i.if.end46_crit_edge, %rescan_last_byte.if.end46_crit_edge
  %retval.0.i206 = phi i32 [ %retval.0.i.i.i, %vc_translate.exit.if.end46_crit_edge ], [ 65533, %if.else52.i.i.if.end46_crit_edge ], [ %conv41, %if.end21.i.i.if.end46_crit_edge ], [ 65533, %if.end7.i.i.if.end46_crit_edge ], [ 65533, %lor.lhs.false.i.i.if.end46_crit_edge ], [ 65533, %if.then.i.i.if.end46_crit_edge ], [ 65533, %if.then19.i.i ], [ %conv41, %rescan_last_byte.if.end46_crit_edge ], [ %conv.i.i, %if.end6.i ]
  %tobool61.not = phi i1 [ true, %vc_translate.exit.if.end46_crit_edge ], [ true, %if.else52.i.i.if.end46_crit_edge ], [ true, %if.end21.i.i.if.end46_crit_edge ], [ true, %if.end7.i.i.if.end46_crit_edge ], [ true, %lor.lhs.false.i.i.if.end46_crit_edge ], [ true, %if.then.i.i.if.end46_crit_edge ], [ false, %if.then19.i.i ], [ true, %rescan_last_byte.if.end46_crit_edge ], [ true, %if.end6.i ]
  %c.0202 = phi i32 [ %retval.0.i.i.i, %vc_translate.exit.if.end46_crit_edge ], [ 65533, %if.else52.i.i.if.end46_crit_edge ], [ %conv41, %if.end21.i.i.if.end46_crit_edge ], [ 65533, %if.end7.i.i.if.end46_crit_edge ], [ 65533, %lor.lhs.false.i.i.if.end46_crit_edge ], [ 65533, %if.then.i.i.if.end46_crit_edge ], [ 65533, %if.then19.i.i ], [ %conv41, %rescan_last_byte.if.end46_crit_edge ], [ %conv41, %if.end6.i ]
  %74 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %retval.0.i206, ptr %0, align 4
  %call48 = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 5, ptr noundef nonnull %param) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 32769, i32 %call48)
  %cmp49 = icmp eq i32 %call48, 32769
  br i1 %cmp49, label %if.end46.cleanup_crit_edge, label %if.end52

if.end46.cleanup_crit_edge:                       ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end52:                                         ; preds = %if.end46
  %75 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %vc_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %76)
  %cmp.not.i104 = icmp ne i32 %76, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i206)
  %tobool.not.i = icmp eq i32 %retval.0.i206, 0
  %or.cond.i = or i1 %tobool.not.i, %cmp.not.i104
  br i1 %or.cond.i, label %if.end52.if.then54_crit_edge, label %if.end2.i

if.end52.if.then54_crit_edge:                     ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then54

if.end2.i:                                        ; preds = %if.end52
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %c.0202)
  %cmp3.i = icmp slt i32 %c.0202, 32
  br i1 %cmp3.i, label %if.then4.i, label %if.end15.i

if.then4.i:                                       ; preds = %if.end2.i
  %77 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %77)
  %bf.load.i105 = load i16, ptr %vc_utf.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load.i105)
  %tobool5.not.i = icmp sgt i16 %bf.load.i105, -1
  br i1 %tobool5.not.i, label %vc_is_control.exit, label %if.then6.i

if.then6.i:                                       ; preds = %if.then4.i
  %shl.i = shl nuw i32 1, %c.0202
  %and.i = and i32 %shl.i, 134280449
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool7.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool7.i.not, label %if.then6.i.if.end55_crit_edge, label %if.then6.i.if.then54_crit_edge

if.then6.i.if.then54_crit_edge:                   ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then54

if.then6.i.if.end55_crit_edge:                    ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end55

if.end15.i:                                       ; preds = %if.end2.i
  %78 = zext i32 %c.0202 to i64
  call void @__sanitizer_cov_trace_switch(i64 %78, ptr @__sancov_gen_cov_switch_values.67)
  switch i32 %c.0202, label %if.end15.i.if.end55_crit_edge [
    i32 127, label %land.lhs.true.i
    i32 155, label %if.end15.i.if.then54_crit_edge
  ]

if.end15.i.if.then54_crit_edge:                   ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then54

if.end15.i.if.end55_crit_edge:                    ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end55

land.lhs.true.i:                                  ; preds = %if.end15.i
  %79 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %79)
  %bf.load19.i = load i16, ptr %vc_utf.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load19.i)
  %tobool22.not.i = icmp sgt i16 %bf.load19.i, -1
  br i1 %tobool22.not.i, label %land.lhs.true.i.if.then54_crit_edge, label %land.lhs.true.i.if.end55_crit_edge

land.lhs.true.i.if.end55_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end55

land.lhs.true.i.if.then54_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then54

vc_is_control.exit:                               ; preds = %if.then4.i
  %80 = and i16 %bf.load.i105, 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %80)
  %tobool11.not.i = icmp ne i16 %80, 0
  %shl12.i = shl nuw i32 1, %c.0202
  %and13.i = and i32 %shl12.i, 218169217
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and13.i)
  %tobool14.i = icmp ne i32 %and13.i, 0
  %81 = select i1 %tobool11.not.i, i1 true, i1 %tobool14.i
  br i1 %81, label %vc_is_control.exit.if.then54_crit_edge, label %vc_is_control.exit.if.end55_crit_edge

vc_is_control.exit.if.end55_crit_edge:            ; preds = %vc_is_control.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end55

vc_is_control.exit.if.then54_crit_edge:           ; preds = %vc_is_control.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then54

if.then54:                                        ; preds = %vc_is_control.exit.if.then54_crit_edge, %land.lhs.true.i.if.then54_crit_edge, %if.end15.i.if.then54_crit_edge, %if.then6.i.if.then54_crit_edge, %if.end52.if.then54_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %draw.sroa.15.1)
  %cmp.i107 = icmp slt i32 %draw.sroa.15.1, 0
  br i1 %cmp.i107, label %if.then54.con_flush.exit_crit_edge, label %if.end.i108

if.then54.con_flush.exit_crit_edge:               ; preds = %if.then54
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_flush.exit

if.end.i108:                                      ; preds = %if.then54
  call void @__sanitizer_cov_trace_pc() #23
  %82 = ptrtoint ptr %vc_sw.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %vc_sw.i.i, align 4
  %con_putcs.i = getelementptr inbounds %struct.consw, ptr %83, i32 0, i32 6
  %84 = ptrtoint ptr %con_putcs.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %con_putcs.i, align 4
  %86 = inttoptr i32 %draw.sroa.0.1 to ptr
  %sub.ptr.sub.i = sub i32 %draw.sroa.9.1, %draw.sroa.0.1
  %sub.ptr.div.i = ashr exact i32 %sub.ptr.sub.i, 1
  %87 = ptrtoint ptr %y.i.i145 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %y.i.i145, align 4
  call void %85(ptr noundef %15, ptr noundef %86, i32 noundef %sub.ptr.div.i, i32 noundef %88, i32 noundef %draw.sroa.15.1) #21
  br label %con_flush.exit

con_flush.exit:                                   ; preds = %if.end.i108, %if.then54.con_flush.exit_crit_edge
  %draw.sroa.15.2 = phi i32 [ %draw.sroa.15.1, %if.then54.con_flush.exit_crit_edge ], [ -1, %if.end.i108 ]
  %89 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %vc_state.i, align 4
  %91 = and i32 %90, -4
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %91)
  %switch.i.i = icmp eq i32 %91, 12
  %92 = add nsw i32 %conv41, -8
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %92)
  %93 = icmp ult i32 %92, 6
  %94 = and i1 %93, %switch.i.i
  br i1 %94, label %con_flush.exit.cleanup_crit_edge, label %if.end.i110

con_flush.exit.cleanup_crit_edge:                 ; preds = %con_flush.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i110:                                      ; preds = %con_flush.exit
  %95 = zext i8 %32 to i64
  call void @__sanitizer_cov_trace_switch(i64 %95, ptr @__sancov_gen_cov_switch_values.68)
  switch i8 %32, label %sw.epilog.i [
    i8 0, label %if.end.i110.cleanup_crit_edge
    i8 7, label %sw.bb3.i
    i8 8, label %sw.bb12.i
    i8 9, label %sw.bb13.i
    i8 10, label %if.end.i110.sw.bb35.i_crit_edge
    i8 11, label %if.end.i110.sw.bb35.i_crit_edge371
    i8 12, label %if.end.i110.sw.bb35.i_crit_edge372
    i8 13, label %if.end.i110.sw.bb40.i_crit_edge
    i8 14, label %sw.bb41.i
    i8 15, label %sw.bb49.i
    i8 24, label %if.end.i110.sw.bb65.i_crit_edge
    i8 26, label %if.end.i110.sw.bb65.i_crit_edge373
    i8 27, label %sw.bb67.i
    i8 127, label %if.end.i110.cleanup_crit_edge374
    i8 -101, label %sw.bb70.i
  ]

if.end.i110.cleanup_crit_edge374:                 ; preds = %if.end.i110
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i110.sw.bb65.i_crit_edge373:               ; preds = %if.end.i110
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb65.i

if.end.i110.sw.bb65.i_crit_edge:                  ; preds = %if.end.i110
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb65.i

if.end.i110.sw.bb40.i_crit_edge:                  ; preds = %if.end.i110
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb40.i

if.end.i110.sw.bb35.i_crit_edge372:               ; preds = %if.end.i110
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb35.i

if.end.i110.sw.bb35.i_crit_edge371:               ; preds = %if.end.i110
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb35.i

if.end.i110.sw.bb35.i_crit_edge:                  ; preds = %if.end.i110
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb35.i

if.end.i110.cleanup_crit_edge:                    ; preds = %if.end.i110
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

sw.bb3.i:                                         ; preds = %if.end.i110
  br i1 %switch.i.i, label %if.then6.i111, label %if.else.i113

if.then6.i111:                                    ; preds = %sw.bb3.i
  call void @__sanitizer_cov_trace_pc() #23
  %96 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %96)
  store i32 0, ptr %vc_state.i, align 4
  br label %cleanup

if.else.i113:                                     ; preds = %sw.bb3.i
  %97 = ptrtoint ptr %vc_bell_duration.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %vc_bell_duration.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %98)
  %tobool.not.i112 = icmp eq i32 %98, 0
  br i1 %tobool.not.i112, label %if.else.i113.cleanup_crit_edge, label %if.then8.i

if.else.i113.cleanup_crit_edge:                   ; preds = %if.else.i113
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then8.i:                                       ; preds = %if.else.i113
  call void @__sanitizer_cov_trace_pc() #23
  %99 = ptrtoint ptr %vc_bell_pitch.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %vc_bell_pitch.i, align 4
  call void @kd_mksound(i32 noundef %100, i32 noundef %98) #21
  br label %cleanup

sw.bb12.i:                                        ; preds = %if.end.i110
  %101 = ptrtoint ptr %state.i.i146 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %state.i.i146, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %102)
  %tobool.not.i.i114 = icmp eq i32 %102, 0
  br i1 %tobool.not.i.i114, label %sw.bb12.i.cleanup_crit_edge, label %if.then.i.i116

sw.bb12.i.cleanup_crit_edge:                      ; preds = %sw.bb12.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then.i.i116:                                   ; preds = %sw.bb12.i
  call void @__sanitizer_cov_trace_pc() #23
  %103 = ptrtoint ptr %vc_pos.i.i147 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %vc_pos.i.i147, align 4
  %sub.i.i = add i32 %104, -2
  store i32 %sub.i.i, ptr %vc_pos.i.i147, align 4
  %dec.i.i115 = add i32 %102, -1
  %105 = ptrtoint ptr %state.i.i146 to i32
  call void @__asan_store4_noabort(i32 %105)
  store i32 %dec.i.i115, ptr %state.i.i146, align 4
  %106 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %106)
  %bf.load.i.i = load i16, ptr %vc_utf.i, align 4
  %bf.clear.i.i = and i16 %bf.load.i.i, -33
  store i16 %bf.clear.i.i, ptr %vc_utf.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param.i.i.i) #21
  %107 = ptrtoint ptr %param.i.i.i to i32
  call void @__asan_store4_noabort(i32 %107)
  store ptr %15, ptr %param.i.i.i, align 4
  %108 = ptrtoint ptr %30 to i32
  call void @__asan_store4_noabort(i32 %108)
  store i32 8, ptr %30, align 4
  %call.i.i.i = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 3, ptr noundef nonnull %param.i.i.i) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param.i.i.i) #21
  br label %cleanup

sw.bb13.i:                                        ; preds = %if.end.i110
  %109 = ptrtoint ptr %state.i.i146 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %state.i.i146, align 4
  %shl.neg.i = mul i32 %110, -2
  %111 = ptrtoint ptr %vc_pos.i.i147 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %vc_pos.i.i147, align 4
  %sub.i = add i32 %shl.neg.i, %112
  store i32 %sub.i, ptr %vc_pos.i.i147, align 4
  %113 = ptrtoint ptr %vc_cols.i153 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %vc_cols.i153, align 4
  %sub14.i = add i32 %114, -1
  %115 = call i32 @llvm.umin.i32(i32 %sub14.i, i32 256) #21
  %add.i = add i32 %110, 1
  %call18.i = call i32 @_find_next_bit_be(ptr noundef %vc_tab_stop.i, i32 noundef %115, i32 noundef %add.i) #21
  %116 = ptrtoint ptr %state.i.i146 to i32
  call void @__asan_store4_noabort(i32 %116)
  store i32 %call18.i, ptr %state.i.i146, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %call18.i)
  %cmp23.i = icmp ugt i32 %call18.i, 255
  br i1 %cmp23.i, label %if.then24.i, label %sw.bb13.i.if.end29.i_crit_edge

sw.bb13.i.if.end29.i_crit_edge:                   ; preds = %sw.bb13.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29.i

if.then24.i:                                      ; preds = %sw.bb13.i
  call void @__sanitizer_cov_trace_pc() #23
  %117 = ptrtoint ptr %vc_cols.i153 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %vc_cols.i153, align 4
  %sub26.i = add i32 %118, -1
  %119 = ptrtoint ptr %state.i.i146 to i32
  call void @__asan_store4_noabort(i32 %119)
  store i32 %sub26.i, ptr %state.i.i146, align 4
  br label %if.end29.i

if.end29.i:                                       ; preds = %if.then24.i, %sw.bb13.i.if.end29.i_crit_edge
  %120 = ptrtoint ptr %state.i.i146 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %state.i.i146, align 4
  %shl32.i = shl i32 %121, 1
  %122 = ptrtoint ptr %vc_pos.i.i147 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %vc_pos.i.i147, align 4
  %add34.i = add i32 %123, %shl32.i
  store i32 %add34.i, ptr %vc_pos.i.i147, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param.i.i) #21
  %124 = ptrtoint ptr %param.i.i to i32
  call void @__asan_store4_noabort(i32 %124)
  store ptr %15, ptr %param.i.i, align 4
  %125 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %125)
  store i32 9, ptr %29, align 4
  %call.i.i = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 3, ptr noundef nonnull %param.i.i) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param.i.i) #21
  br label %cleanup

sw.bb35.i:                                        ; preds = %if.end.i110.sw.bb35.i_crit_edge, %if.end.i110.sw.bb35.i_crit_edge371, %if.end.i110.sw.bb35.i_crit_edge372
  %126 = ptrtoint ptr %y.i.i145 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %y.i.i145, align 4
  %add.i.i = add i32 %127, 1
  %128 = ptrtoint ptr %vc_bottom.i.i148 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %vc_bottom.i.i148, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %129)
  %cmp.i.i117 = icmp eq i32 %add.i.i, %129
  br i1 %cmp.i.i117, label %if.then.i1021.i, label %if.else.i.i118

if.then.i1021.i:                                  ; preds = %sw.bb35.i
  call void @__sanitizer_cov_trace_pc() #23
  %130 = ptrtoint ptr %vc_top.i.i151 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %vc_top.i.i151, align 4
  call fastcc void @con_scroll(ptr noundef %15, i32 noundef %131, i32 noundef %add.i.i, i32 noundef 0, i32 noundef 1) #21
  br label %lf.exit.i

if.else.i.i118:                                   ; preds = %sw.bb35.i
  %132 = ptrtoint ptr %vc_rows.i.i149 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %vc_rows.i.i149, align 4
  %sub.i1022.i = add i32 %133, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %127, i32 %sub.i1022.i)
  %cmp4.i.i = icmp ult i32 %127, %sub.i1022.i
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.else.i.i118.lf.exit.i_crit_edge

if.else.i.i118.lf.exit.i_crit_edge:               ; preds = %if.else.i.i118
  call void @__sanitizer_cov_trace_pc() #23
  br label %lf.exit.i

if.then5.i.i:                                     ; preds = %if.else.i.i118
  call void @__sanitizer_cov_trace_pc() #23
  %134 = ptrtoint ptr %y.i.i145 to i32
  call void @__asan_store4_noabort(i32 %134)
  store i32 %add.i.i, ptr %y.i.i145, align 4
  %135 = ptrtoint ptr %vc_size_row.i.i150 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %vc_size_row.i.i150, align 4
  %137 = ptrtoint ptr %vc_pos.i.i147 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %vc_pos.i.i147, align 4
  %add8.i.i = add i32 %138, %136
  store i32 %add8.i.i, ptr %vc_pos.i.i147, align 4
  br label %lf.exit.i

lf.exit.i:                                        ; preds = %if.then5.i.i, %if.else.i.i118.lf.exit.i_crit_edge, %if.then.i1021.i
  %139 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %139)
  %bf.load.i1025.i = load i16, ptr %vc_utf.i, align 4
  %bf.clear.i1026.i = and i16 %bf.load.i1025.i, -33
  store i16 %bf.clear.i1026.i, ptr %vc_utf.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param.i.i1020.i) #21
  %140 = ptrtoint ptr %param.i.i1020.i to i32
  call void @__asan_store4_noabort(i32 %140)
  store ptr %15, ptr %param.i.i1020.i, align 4
  %141 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %141)
  store i32 10, ptr %27, align 4
  %call.i.i1027.i = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 3, ptr noundef nonnull %param.i.i1020.i) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param.i.i1020.i) #21
  %142 = ptrtoint ptr %vc_num to i32
  call void @__asan_load2_noabort(i32 %142)
  %143 = load i16, ptr %vc_num, align 4
  %conv.i120 = zext i16 %143 to i32
  %call36.i = call i32 @vt_get_kbd_mode_bit(i32 noundef %conv.i120, i32 noundef 3) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36.i)
  %tobool37.not.i = icmp eq i32 %call36.i, 0
  br i1 %tobool37.not.i, label %lf.exit.i.cleanup_crit_edge, label %lf.exit.i.sw.bb40.i_crit_edge

lf.exit.i.sw.bb40.i_crit_edge:                    ; preds = %lf.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb40.i

lf.exit.i.cleanup_crit_edge:                      ; preds = %lf.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

sw.bb40.i:                                        ; preds = %lf.exit.i.sw.bb40.i_crit_edge, %if.end.i110.sw.bb40.i_crit_edge
  %144 = ptrtoint ptr %state.i.i146 to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %state.i.i146, align 4
  %shl.neg.i.i = mul i32 %145, -2
  %146 = ptrtoint ptr %vc_pos.i.i147 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %vc_pos.i.i147, align 4
  %sub.i1031.i = add i32 %shl.neg.i.i, %147
  store i32 %sub.i1031.i, ptr %vc_pos.i.i147, align 4
  store i32 0, ptr %state.i.i146, align 4
  %148 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %148)
  %bf.load.i1033.i = load i16, ptr %vc_utf.i, align 4
  %bf.clear.i1034.i = and i16 %bf.load.i1033.i, -33
  store i16 %bf.clear.i1034.i, ptr %vc_utf.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param.i.i1028.i) #21
  %149 = ptrtoint ptr %param.i.i1028.i to i32
  call void @__asan_store4_noabort(i32 %149)
  store ptr %15, ptr %param.i.i1028.i, align 4
  %150 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %150)
  store i32 13, ptr %28, align 4
  %call.i.i1035.i = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 3, ptr noundef nonnull %param.i.i1028.i) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param.i.i1028.i) #21
  br label %cleanup

sw.bb41.i:                                        ; preds = %if.end.i110
  call void @__sanitizer_cov_trace_pc() #23
  %151 = ptrtoint ptr %charset51.i to i32
  call void @__asan_load1_noabort(i32 %151)
  %bf.load.i121 = load i8, ptr %charset51.i, align 1
  %bf.set.i = or i8 %bf.load.i121, -128
  store i8 %bf.set.i, ptr %charset51.i, align 1
  %152 = ptrtoint ptr %arrayidx.i122 to i32
  call void @__asan_load1_noabort(i32 %152)
  %153 = load i8, ptr %arrayidx.i122, align 1
  %conv44.i = zext i8 %153 to i32
  %call45.i = call ptr @set_translate(i32 noundef %conv44.i, ptr noundef %15) #21
  %154 = ptrtoint ptr %vc_translate.i.i to i32
  call void @__asan_store4_noabort(i32 %154)
  store ptr %call45.i, ptr %vc_translate.i.i, align 4
  %155 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %155)
  %bf.load46.i = load i16, ptr %vc_utf.i, align 4
  %bf.set48.i = or i16 %bf.load46.i, -32768
  store i16 %bf.set48.i, ptr %vc_utf.i, align 4
  br label %cleanup

sw.bb49.i:                                        ; preds = %if.end.i110
  call void @__sanitizer_cov_trace_pc() #23
  %156 = ptrtoint ptr %charset51.i to i32
  call void @__asan_load1_noabort(i32 %156)
  %bf.load52.i = load i8, ptr %charset51.i, align 1
  %bf.clear53.i = and i8 %bf.load52.i, 127
  store i8 %bf.clear53.i, ptr %charset51.i, align 1
  %157 = ptrtoint ptr %Gx_charset56.i to i32
  call void @__asan_load1_noabort(i32 %157)
  %158 = load i8, ptr %Gx_charset56.i, align 1
  %conv58.i = zext i8 %158 to i32
  %call59.i = call ptr @set_translate(i32 noundef %conv58.i, ptr noundef %15) #21
  %159 = ptrtoint ptr %vc_translate.i.i to i32
  call void @__asan_store4_noabort(i32 %159)
  store ptr %call59.i, ptr %vc_translate.i.i, align 4
  %160 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %160)
  %bf.load62.i = load i16, ptr %vc_utf.i, align 4
  %bf.clear63.i = and i16 %bf.load62.i, 32767
  store i16 %bf.clear63.i, ptr %vc_utf.i, align 4
  br label %cleanup

sw.bb65.i:                                        ; preds = %if.end.i110.sw.bb65.i_crit_edge, %if.end.i110.sw.bb65.i_crit_edge373
  %161 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %161)
  store i32 0, ptr %vc_state.i, align 4
  br label %cleanup

sw.bb67.i:                                        ; preds = %if.end.i110
  call void @__sanitizer_cov_trace_pc() #23
  %162 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %162)
  store i32 1, ptr %vc_state.i, align 4
  br label %cleanup

sw.bb70.i:                                        ; preds = %if.end.i110
  call void @__sanitizer_cov_trace_pc() #23
  %163 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %163)
  store i32 2, ptr %vc_state.i, align 4
  br label %cleanup

sw.epilog.i:                                      ; preds = %if.end.i110
  %164 = zext i32 %90 to i64
  call void @__sanitizer_cov_trace_switch(i64 %164, ptr @__sancov_gen_cov_switch_values.69)
  switch i32 %90, label %sw.default.i [
    i32 1, label %sw.bb73.i
    i32 10, label %sw.bb118.i
    i32 11, label %sw.bb148.i
    i32 2, label %sw.bb218.i
    i32 3, label %sw.epilog.i.sw.bb263.i_crit_edge
    i32 9, label %sw.bb652.i
    i32 8, label %sw.bb661.i
    i32 4, label %sw.bb673.i
    i32 5, label %sw.bb675.i
    i32 6, label %sw.bb692.i
    i32 7, label %sw.bb694.i
    i32 13, label %sw.epilog.i.cleanup_crit_edge
    i32 12, label %sw.epilog.i.cleanup_crit_edge375
    i32 14, label %sw.epilog.i.cleanup_crit_edge376
    i32 15, label %sw.epilog.i.cleanup_crit_edge377
  ]

sw.epilog.i.cleanup_crit_edge377:                 ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

sw.epilog.i.cleanup_crit_edge376:                 ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

sw.epilog.i.cleanup_crit_edge375:                 ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

sw.epilog.i.cleanup_crit_edge:                    ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

sw.epilog.i.sw.bb263.i_crit_edge:                 ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb263.i

sw.bb73.i:                                        ; preds = %sw.epilog.i
  %165 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %165)
  store i32 0, ptr %vc_state.i, align 4
  %166 = zext i8 %32 to i64
  call void @__sanitizer_cov_trace_switch(i64 %166, ptr @__sancov_gen_cov_switch_values.70)
  switch i8 %32, label %sw.bb73.i.cleanup_crit_edge [
    i8 91, label %sw.bb75.i
    i8 93, label %sw.bb77.i
    i8 95, label %sw.bb79.i
    i8 94, label %sw.bb81.i
    i8 37, label %sw.bb83.i
    i8 69, label %sw.bb85.i
    i8 77, label %sw.bb86.i
    i8 68, label %sw.bb87.i
    i8 72, label %sw.bb88.i
    i8 80, label %sw.bb99.i
    i8 90, label %sw.bb101.i
    i8 55, label %sw.bb102.i
    i8 56, label %sw.bb103.i
    i8 40, label %sw.bb104.i
    i8 41, label %sw.bb106.i
    i8 35, label %sw.bb108.i
    i8 99, label %sw.bb110.i
    i8 62, label %sw.bb111.i
    i8 61, label %sw.bb114.i
  ]

sw.bb73.i.cleanup_crit_edge:                      ; preds = %sw.bb73.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

sw.bb75.i:                                        ; preds = %sw.bb73.i
  call void @__sanitizer_cov_trace_pc() #23
  %167 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %167)
  store i32 2, ptr %vc_state.i, align 4
  br label %cleanup

sw.bb77.i:                                        ; preds = %sw.bb73.i
  call void @__sanitizer_cov_trace_pc() #23
  %168 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %168)
  store i32 10, ptr %vc_state.i, align 4
  br label %cleanup

sw.bb79.i:                                        ; preds = %sw.bb73.i
  call void @__sanitizer_cov_trace_pc() #23
  %169 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %169)
  store i32 13, ptr %vc_state.i, align 4
  br label %cleanup

sw.bb81.i:                                        ; preds = %sw.bb73.i
  call void @__sanitizer_cov_trace_pc() #23
  %170 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %170)
  store i32 14, ptr %vc_state.i, align 4
  br label %cleanup

sw.bb83.i:                                        ; preds = %sw.bb73.i
  call void @__sanitizer_cov_trace_pc() #23
  %171 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %171)
  store i32 8, ptr %vc_state.i, align 4
  br label %cleanup

sw.bb85.i:                                        ; preds = %sw.bb73.i
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @cr(ptr noundef %15) #21
  call fastcc void @lf(ptr noundef %15) #21
  br label %cleanup

sw.bb86.i:                                        ; preds = %sw.bb73.i
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @ri(ptr noundef %15) #21
  br label %cleanup

sw.bb87.i:                                        ; preds = %sw.bb73.i
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @lf(ptr noundef %15) #21
  br label %cleanup

sw.bb88.i:                                        ; preds = %sw.bb73.i
  %172 = ptrtoint ptr %state.i.i146 to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %state.i.i146, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %173)
  %cmp91.i = icmp ult i32 %173, 256
  br i1 %cmp91.i, label %if.then93.i, label %sw.bb88.i.cleanup_crit_edge

sw.bb88.i.cleanup_crit_edge:                      ; preds = %sw.bb88.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then93.i:                                      ; preds = %sw.bb88.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @_set_bit(i32 noundef %173, ptr noundef %vc_tab_stop.i) #21
  br label %cleanup

sw.bb99.i:                                        ; preds = %sw.bb73.i
  call void @__sanitizer_cov_trace_pc() #23
  %174 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %174)
  store i32 15, ptr %vc_state.i, align 4
  br label %cleanup

sw.bb101.i:                                       ; preds = %sw.bb73.i
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @respond_ID(ptr noundef %tty) #21
  br label %cleanup

sw.bb102.i:                                       ; preds = %sw.bb73.i
  call void @__sanitizer_cov_trace_pc() #23
  %175 = call ptr @memcpy(ptr %saved_state.i1037.i, ptr %state.i.i146, i32 20)
  br label %cleanup

sw.bb103.i:                                       ; preds = %sw.bb73.i
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @restore_cur(ptr noundef %15) #21
  br label %cleanup

sw.bb104.i:                                       ; preds = %sw.bb73.i
  call void @__sanitizer_cov_trace_pc() #23
  %176 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %176)
  store i32 6, ptr %vc_state.i, align 4
  br label %cleanup

sw.bb106.i:                                       ; preds = %sw.bb73.i
  call void @__sanitizer_cov_trace_pc() #23
  %177 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %177)
  store i32 7, ptr %vc_state.i, align 4
  br label %cleanup

sw.bb108.i:                                       ; preds = %sw.bb73.i
  call void @__sanitizer_cov_trace_pc() #23
  %178 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %178)
  store i32 5, ptr %vc_state.i, align 4
  br label %cleanup

sw.bb110.i:                                       ; preds = %sw.bb73.i
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @reset_terminal(ptr noundef %15, i32 noundef 1) #21
  br label %cleanup

sw.bb111.i:                                       ; preds = %sw.bb73.i
  call void @__sanitizer_cov_trace_pc() #23
  %179 = ptrtoint ptr %vc_num to i32
  call void @__asan_load2_noabort(i32 %179)
  %180 = load i16, ptr %vc_num, align 4
  %conv113.i = zext i16 %180 to i32
  call void @vt_clr_kbd_mode_bit(i32 noundef %conv113.i, i32 noundef 0) #21
  br label %cleanup

sw.bb114.i:                                       ; preds = %sw.bb73.i
  call void @__sanitizer_cov_trace_pc() #23
  %181 = ptrtoint ptr %vc_num to i32
  call void @__asan_load2_noabort(i32 %181)
  %182 = load i16, ptr %vc_num, align 4
  %conv116.i = zext i16 %182 to i32
  call void @vt_set_kbd_mode_bit(i32 noundef %conv116.i, i32 noundef 0) #21
  br label %cleanup

sw.bb118.i:                                       ; preds = %sw.epilog.i
  %183 = zext i8 %32 to i64
  call void @__sanitizer_cov_trace_switch(i64 %183, ptr @__sancov_gen_cov_switch_values.71)
  switch i8 %32, label %if.else135.i [
    i8 80, label %if.then121.i
    i8 82, label %if.then133.i
  ]

if.then121.i:                                     ; preds = %sw.bb118.i
  %184 = ptrtoint ptr %vc_npar25.i.i to i32
  call void @__asan_store4_noabort(i32 %184)
  store i32 0, ptr %vc_npar25.i.i, align 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.then121.i
  %storemerge10131048.i = phi i32 [ 0, %if.then121.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %arrayidx126.i = getelementptr %struct.vc_data, ptr %15, i32 0, i32 32, i32 %storemerge10131048.i
  %185 = ptrtoint ptr %arrayidx126.i to i32
  call void @__asan_store4_noabort(i32 %185)
  store i32 0, ptr %arrayidx126.i, align 4
  %186 = ptrtoint ptr %vc_npar25.i.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load i32, ptr %vc_npar25.i.i, align 4
  %inc.i = add i32 %187, 1
  store i32 %inc.i, ptr %vc_npar25.i.i, align 4
  %cmp123.i = icmp ult i32 %inc.i, 16
  br i1 %cmp123.i, label %for.body.i.for.body.i_crit_edge, label %for.end.i

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.end.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  %188 = ptrtoint ptr %vc_npar25.i.i to i32
  call void @__asan_store4_noabort(i32 %188)
  store i32 0, ptr %vc_npar25.i.i, align 4
  %189 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %189)
  store i32 11, ptr %vc_state.i, align 4
  br label %cleanup

if.then133.i:                                     ; preds = %sw.bb118.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @reset_palette(ptr noundef %15) #21
  %190 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %190)
  store i32 0, ptr %vc_state.i, align 4
  br label %cleanup

if.else135.i:                                     ; preds = %sw.bb118.i
  %191 = add nsw i32 %conv41, -48
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %191)
  %192 = icmp ult i32 %191, 10
  br i1 %192, label %if.then141.i, label %if.else143.i

if.then141.i:                                     ; preds = %if.else135.i
  call void @__sanitizer_cov_trace_pc() #23
  %193 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %193)
  store i32 12, ptr %vc_state.i, align 4
  br label %cleanup

if.else143.i:                                     ; preds = %if.else135.i
  call void @__sanitizer_cov_trace_pc() #23
  %194 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %194)
  store i32 0, ptr %vc_state.i, align 4
  br label %cleanup

sw.bb148.i:                                       ; preds = %sw.epilog.i
  %arrayidx151.i = getelementptr [0 x i8], ptr @_ctype, i32 0, i32 %conv41
  %195 = ptrtoint ptr %arrayidx151.i to i32
  call void @__asan_load1_noabort(i32 %195)
  %196 = load i8, ptr %arrayidx151.i, align 1
  %197 = and i8 %196, 68
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %197)
  %cmp153.not.i = icmp eq i8 %197, 0
  br i1 %cmp153.not.i, label %if.else215.i, label %if.then155.i

if.then155.i:                                     ; preds = %sw.bb148.i
  %call157.i = call i32 @hex_to_bin(i8 noundef zeroext %32) #21
  %198 = ptrtoint ptr %vc_npar25.i.i to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load i32, ptr %vc_npar25.i.i, align 4
  %inc160.i = add i32 %199, 1
  store i32 %inc160.i, ptr %vc_npar25.i.i, align 4
  %arrayidx161.i = getelementptr %struct.vc_data, ptr %15, i32 0, i32 32, i32 %199
  %200 = ptrtoint ptr %arrayidx161.i to i32
  call void @__asan_store4_noabort(i32 %200)
  store i32 %call157.i, ptr %arrayidx161.i, align 4
  %201 = load i32, ptr %vc_npar25.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %201)
  %cmp163.i = icmp eq i32 %201, 7
  br i1 %cmp163.i, label %if.then165.i, label %if.then155.i.cleanup_crit_edge

if.then155.i.cleanup_crit_edge:                   ; preds = %if.then155.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then165.i:                                     ; preds = %if.then155.i
  call void @__sanitizer_cov_trace_pc() #23
  %202 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load i32, ptr %vc_par377.i, align 4
  %mul.i = mul i32 %203, 3
  %204 = ptrtoint ptr %arrayidx361.i to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load i32, ptr %arrayidx361.i, align 4
  %.tr.i = trunc i32 %205 to i8
  %conv172.i = shl i8 %.tr.i, 4
  %arrayidx173.i = getelementptr %struct.vc_data, ptr %15, i32 0, i32 41, i32 %mul.i
  %206 = ptrtoint ptr %arrayidx173.i to i32
  call void @__asan_store1_noabort(i32 %206)
  store i8 %conv172.i, ptr %arrayidx173.i, align 1
  %207 = ptrtoint ptr %arrayidx337.i to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load i32, ptr %arrayidx337.i, align 4
  %inc178.i = add i32 %mul.i, 1
  %209 = trunc i32 %208 to i8
  %conv182.i = add i8 %conv172.i, %209
  store i8 %conv182.i, ptr %arrayidx173.i, align 1
  %210 = ptrtoint ptr %arrayidx185.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load i32, ptr %arrayidx185.i, align 4
  %.tr1011.i = trunc i32 %211 to i8
  %conv187.i = shl i8 %.tr1011.i, 4
  %arrayidx189.i = getelementptr %struct.vc_data, ptr %15, i32 0, i32 41, i32 %inc178.i
  %212 = ptrtoint ptr %arrayidx189.i to i32
  call void @__asan_store1_noabort(i32 %212)
  store i8 %conv187.i, ptr %arrayidx189.i, align 1
  %213 = ptrtoint ptr %arrayidx192.i to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load i32, ptr %arrayidx192.i, align 4
  %inc194.i = add i32 %mul.i, 2
  %215 = trunc i32 %214 to i8
  %conv198.i = add i8 %conv187.i, %215
  store i8 %conv198.i, ptr %arrayidx189.i, align 1
  %216 = ptrtoint ptr %arrayidx201.i to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load i32, ptr %arrayidx201.i, align 4
  %.tr1012.i = trunc i32 %217 to i8
  %conv203.i = shl i8 %.tr1012.i, 4
  %arrayidx205.i = getelementptr %struct.vc_data, ptr %15, i32 0, i32 41, i32 %inc194.i
  %218 = ptrtoint ptr %arrayidx205.i to i32
  call void @__asan_store1_noabort(i32 %218)
  store i8 %conv203.i, ptr %arrayidx205.i, align 1
  %219 = ptrtoint ptr %arrayidx207.i to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load i32, ptr %arrayidx207.i, align 4
  %221 = trunc i32 %220 to i8
  %conv212.i = add i8 %conv203.i, %221
  store i8 %conv212.i, ptr %arrayidx205.i, align 1
  call fastcc void @set_palette(ptr noundef %15) #21
  %222 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %222)
  store i32 0, ptr %vc_state.i, align 4
  br label %cleanup

if.else215.i:                                     ; preds = %sw.bb148.i
  call void @__sanitizer_cov_trace_pc() #23
  %223 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %223)
  store i32 0, ptr %vc_state.i, align 4
  br label %cleanup

sw.bb218.i:                                       ; preds = %sw.epilog.i
  %224 = ptrtoint ptr %vc_npar25.i.i to i32
  call void @__asan_store4_noabort(i32 %224)
  store i32 0, ptr %vc_npar25.i.i, align 4
  br label %for.body224.i

for.body224.i:                                    ; preds = %for.body224.i.for.body224.i_crit_edge, %sw.bb218.i
  %storemerge1047.i = phi i32 [ 0, %sw.bb218.i ], [ %inc230.i, %for.body224.i.for.body224.i_crit_edge ]
  %arrayidx227.i = getelementptr %struct.vc_data, ptr %15, i32 0, i32 32, i32 %storemerge1047.i
  %225 = ptrtoint ptr %arrayidx227.i to i32
  call void @__asan_store4_noabort(i32 %225)
  store i32 0, ptr %arrayidx227.i, align 4
  %226 = ptrtoint ptr %vc_npar25.i.i to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load i32, ptr %vc_npar25.i.i, align 4
  %inc230.i = add i32 %227, 1
  store i32 %inc230.i, ptr %vc_npar25.i.i, align 4
  %cmp222.i = icmp ult i32 %inc230.i, 16
  br i1 %cmp222.i, label %for.body224.i.for.body224.i_crit_edge, label %for.end231.i

for.body224.i.for.body224.i_crit_edge:            ; preds = %for.body224.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body224.i

for.end231.i:                                     ; preds = %for.body224.i
  %228 = ptrtoint ptr %vc_npar25.i.i to i32
  call void @__asan_store4_noabort(i32 %228)
  store i32 0, ptr %vc_npar25.i.i, align 4
  %229 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %229)
  store i32 3, ptr %vc_state.i, align 4
  %230 = zext i8 %32 to i64
  call void @__sanitizer_cov_trace_switch(i64 %230, ptr @__sancov_gen_cov_switch_values.72)
  switch i8 %32, label %sw.epilog258.i [
    i8 91, label %if.then236.i
    i8 63, label %sw.bb239.i
    i8 62, label %sw.bb243.i
    i8 61, label %sw.bb248.i
    i8 60, label %sw.bb253.i
  ]

if.then236.i:                                     ; preds = %for.end231.i
  call void @__sanitizer_cov_trace_pc() #23
  %231 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %231)
  store i32 4, ptr %vc_state.i, align 4
  br label %cleanup

sw.bb239.i:                                       ; preds = %for.end231.i
  call void @__sanitizer_cov_trace_pc() #23
  %232 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %232)
  %bf.load240.i = load i16, ptr %vc_utf.i, align 4
  %bf.clear241.i = and i16 %bf.load240.i, -449
  %bf.set242.i = or i16 %bf.clear241.i, 64
  store i16 %bf.set242.i, ptr %vc_utf.i, align 4
  br label %cleanup

sw.bb243.i:                                       ; preds = %for.end231.i
  call void @__sanitizer_cov_trace_pc() #23
  %233 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %233)
  %bf.load245.i = load i16, ptr %vc_utf.i, align 4
  %bf.clear246.i = and i16 %bf.load245.i, -449
  %bf.set247.i = or i16 %bf.clear246.i, 192
  store i16 %bf.set247.i, ptr %vc_utf.i, align 4
  br label %cleanup

sw.bb248.i:                                       ; preds = %for.end231.i
  call void @__sanitizer_cov_trace_pc() #23
  %234 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %234)
  %bf.load250.i = load i16, ptr %vc_utf.i, align 4
  %bf.clear251.i = and i16 %bf.load250.i, -449
  %bf.set252.i = or i16 %bf.clear251.i, 128
  store i16 %bf.set252.i, ptr %vc_utf.i, align 4
  br label %cleanup

sw.bb253.i:                                       ; preds = %for.end231.i
  call void @__sanitizer_cov_trace_pc() #23
  %235 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %235)
  %bf.load255.i = load i16, ptr %vc_utf.i, align 4
  %bf.clear256.i = and i16 %bf.load255.i, -449
  %bf.set257.i = or i16 %bf.clear256.i, 256
  store i16 %bf.set257.i, ptr %vc_utf.i, align 4
  br label %cleanup

sw.epilog258.i:                                   ; preds = %for.end231.i
  call void @__sanitizer_cov_trace_pc() #23
  %236 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %236)
  %bf.load260.i = load i16, ptr %vc_utf.i, align 4
  %bf.clear261.i = and i16 %bf.load260.i, -449
  store i16 %bf.clear261.i, ptr %vc_utf.i, align 4
  br label %sw.bb263.i

sw.bb263.i:                                       ; preds = %sw.epilog258.i, %sw.epilog.i.sw.bb263.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp1(i8 59, i8 %32)
  %cmp264.i = icmp eq i8 %32, 59
  br i1 %cmp264.i, label %land.lhs.true266.i, label %if.else273.i

land.lhs.true266.i:                               ; preds = %sw.bb263.i
  %237 = ptrtoint ptr %vc_npar25.i.i to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load i32, ptr %vc_npar25.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %238)
  %cmp268.i = icmp ult i32 %238, 15
  br i1 %cmp268.i, label %if.then270.i, label %land.lhs.true266.i.if.then296.i_crit_edge

land.lhs.true266.i.if.then296.i_crit_edge:        ; preds = %land.lhs.true266.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then296.i

if.then270.i:                                     ; preds = %land.lhs.true266.i
  call void @__sanitizer_cov_trace_pc() #23
  %inc272.i = add nuw nsw i32 %238, 1
  %239 = ptrtoint ptr %vc_npar25.i.i to i32
  call void @__asan_store4_noabort(i32 %239)
  store i32 %inc272.i, ptr %vc_npar25.i.i, align 4
  br label %cleanup

if.else273.i:                                     ; preds = %sw.bb263.i
  %240 = add nsw i32 %conv41, -48
  call void @__sanitizer_cov_trace_const_cmp4(i32 10, i32 %240)
  %241 = icmp ult i32 %240, 10
  br i1 %241, label %if.then279.i, label %if.end290.i

if.then279.i:                                     ; preds = %if.else273.i
  call void @__sanitizer_cov_trace_pc() #23
  %242 = ptrtoint ptr %vc_npar25.i.i to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load i32, ptr %vc_npar25.i.i, align 4
  %arrayidx282.i = getelementptr %struct.vc_data, ptr %15, i32 0, i32 32, i32 %243
  %244 = ptrtoint ptr %arrayidx282.i to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load i32, ptr %arrayidx282.i, align 4
  %mul283.i = mul i32 %245, 10
  store i32 %mul283.i, ptr %arrayidx282.i, align 4
  %246 = load i32, ptr %vc_npar25.i.i, align 4
  %arrayidx287.i = getelementptr %struct.vc_data, ptr %15, i32 0, i32 32, i32 %246
  %247 = ptrtoint ptr %arrayidx287.i to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load i32, ptr %arrayidx287.i, align 4
  %add288.i = add i32 %248, %240
  store i32 %add288.i, ptr %arrayidx287.i, align 4
  br label %cleanup

if.end290.i:                                      ; preds = %if.else273.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %and26.i.i)
  %249 = icmp eq i32 %and26.i.i, 32
  br i1 %249, label %if.end290.i.if.then296.i_crit_edge, label %if.end298.i

if.end290.i.if.then296.i_crit_edge:               ; preds = %if.end290.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then296.i

if.then296.i:                                     ; preds = %if.end290.i.if.then296.i_crit_edge, %land.lhs.true266.i.if.then296.i_crit_edge
  %250 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %250)
  store i32 9, ptr %vc_state.i, align 4
  br label %cleanup

if.end298.i:                                      ; preds = %if.end290.i
  %251 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %251)
  store i32 0, ptr %vc_state.i, align 4
  %252 = zext i8 %32 to i64
  call void @__sanitizer_cov_trace_switch(i64 %252, ptr @__sancov_gen_cov_switch_values.73)
  switch i8 %32, label %if.end298.i.sw.epilog391.i_crit_edge [
    i8 104, label %sw.bb300.i
    i8 108, label %sw.bb308.i
    i8 99, label %sw.bb318.i
    i8 109, label %sw.bb344.i
    i8 110, label %sw.bb368.i
  ]

if.end298.i.sw.epilog391.i_crit_edge:             ; preds = %if.end298.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog391.i

sw.bb300.i:                                       ; preds = %if.end298.i
  %253 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %253)
  %bf.load302.i = load i16, ptr %vc_utf.i, align 4
  %254 = and i16 %bf.load302.i, 384
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %254)
  %cmp304.i = icmp eq i16 %254, 0
  br i1 %cmp304.i, label %if.then306.i, label %sw.bb300.i.cleanup_crit_edge

sw.bb300.i.cleanup_crit_edge:                     ; preds = %sw.bb300.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then306.i:                                     ; preds = %sw.bb300.i
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @set_mode(ptr noundef %15, i32 noundef 1) #21
  br label %cleanup

sw.bb308.i:                                       ; preds = %if.end298.i
  %255 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %255)
  %bf.load310.i = load i16, ptr %vc_utf.i, align 4
  %256 = and i16 %bf.load310.i, 384
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %256)
  %cmp314.i = icmp eq i16 %256, 0
  br i1 %cmp314.i, label %if.then316.i, label %sw.bb308.i.cleanup_crit_edge

sw.bb308.i.cleanup_crit_edge:                     ; preds = %sw.bb308.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then316.i:                                     ; preds = %sw.bb308.i
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @set_mode(ptr noundef %15, i32 noundef 0) #21
  br label %cleanup

sw.bb318.i:                                       ; preds = %if.end298.i
  %257 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %257)
  %bf.load320.i = load i16, ptr %vc_utf.i, align 4
  %258 = and i16 %bf.load320.i, 448
  call void @__sanitizer_cov_trace_const_cmp2(i16 64, i16 %258)
  %cmp324.i = icmp eq i16 %258, 64
  br i1 %cmp324.i, label %if.then326.i, label %sw.bb318.i.sw.epilog391.i_crit_edge

sw.bb318.i.sw.epilog391.i_crit_edge:              ; preds = %sw.bb318.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog391.i

if.then326.i:                                     ; preds = %sw.bb318.i
  %259 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %259)
  %260 = load i32, ptr %vc_par377.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %260)
  %tobool329.not.i = icmp eq i32 %260, 0
  br i1 %tobool329.not.i, label %if.else340.i, label %if.then330.i

if.then330.i:                                     ; preds = %if.then326.i
  call void @__sanitizer_cov_trace_pc() #23
  %261 = ptrtoint ptr %arrayidx361.i to i32
  call void @__asan_load4_noabort(i32 %261)
  %262 = load i32, ptr %arrayidx361.i, align 4
  %shl335.i = shl i32 %262, 8
  %or.i = or i32 %shl335.i, %260
  %263 = ptrtoint ptr %arrayidx337.i to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load i32, ptr %arrayidx337.i, align 4
  %shl338.i = shl i32 %264, 16
  %or339.i = or i32 %or.i, %shl338.i
  %265 = ptrtoint ptr %vc_cursor_type.i to i32
  call void @__asan_store4_noabort(i32 %265)
  store i32 %or339.i, ptr %vc_cursor_type.i, align 4
  br label %cleanup

if.else340.i:                                     ; preds = %if.then326.i
  call void @__sanitizer_cov_trace_pc() #23
  %266 = load i32, ptr @cur_default, align 4
  %267 = ptrtoint ptr %vc_cursor_type.i to i32
  call void @__asan_store4_noabort(i32 %267)
  store i32 %266, ptr %vc_cursor_type.i, align 4
  br label %cleanup

sw.bb344.i:                                       ; preds = %if.end298.i
  %268 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %268)
  %bf.load346.i = load i16, ptr %vc_utf.i, align 4
  %269 = and i16 %bf.load346.i, 448
  call void @__sanitizer_cov_trace_const_cmp2(i16 64, i16 %269)
  %cmp350.i = icmp eq i16 %269, 64
  br i1 %cmp350.i, label %if.then352.i, label %sw.bb344.i.sw.epilog391.i_crit_edge

sw.bb344.i.sw.epilog391.i_crit_edge:              ; preds = %sw.bb344.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog391.i

if.then352.i:                                     ; preds = %sw.bb344.i
  call void @clear_selection() #21
  %270 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %270)
  %271 = load i32, ptr %vc_par377.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %271)
  %tobool355.not.i = icmp eq i32 %271, 0
  br i1 %tobool355.not.i, label %if.else364.i, label %if.then356.i

if.then356.i:                                     ; preds = %if.then352.i
  call void @__sanitizer_cov_trace_pc() #23
  %shl359.i = shl i32 %271, 8
  %272 = ptrtoint ptr %arrayidx361.i to i32
  call void @__asan_load4_noabort(i32 %272)
  %273 = load i32, ptr %arrayidx361.i, align 4
  %or362.i = or i32 %273, %shl359.i
  %conv363.i = trunc i32 %or362.i to i16
  %274 = ptrtoint ptr %vc_complement_mask.i to i32
  call void @__asan_store2_noabort(i32 %274)
  store i16 %conv363.i, ptr %vc_complement_mask.i, align 4
  br label %cleanup

if.else364.i:                                     ; preds = %if.then352.i
  call void @__sanitizer_cov_trace_pc() #23
  %275 = ptrtoint ptr %vc_s_complement_mask.i to i32
  call void @__asan_load2_noabort(i32 %275)
  %276 = load i16, ptr %vc_s_complement_mask.i, align 2
  %277 = ptrtoint ptr %vc_complement_mask.i to i32
  call void @__asan_store2_noabort(i32 %277)
  store i16 %276, ptr %vc_complement_mask.i, align 4
  br label %cleanup

sw.bb368.i:                                       ; preds = %if.end298.i
  %278 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %278)
  %bf.load370.i = load i16, ptr %vc_utf.i, align 4
  %279 = and i16 %bf.load370.i, 448
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %279)
  %cmp374.i = icmp eq i16 %279, 0
  br i1 %cmp374.i, label %if.then376.i, label %sw.bb368.i.cleanup_crit_edge

sw.bb368.i.cleanup_crit_edge:                     ; preds = %sw.bb368.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then376.i:                                     ; preds = %sw.bb368.i
  %280 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load i32, ptr %vc_par377.i, align 4
  %282 = zext i32 %281 to i64
  call void @__sanitizer_cov_trace_switch(i64 %282, ptr @__sancov_gen_cov_switch_values.74)
  switch i32 %281, label %if.then376.i.cleanup_crit_edge [
    i32 5, label %if.then381.i
    i32 6, label %if.then387.i
  ]

if.then376.i.cleanup_crit_edge:                   ; preds = %if.then376.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then381.i:                                     ; preds = %if.then376.i
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @status_report(ptr noundef %tty) #21
  br label %cleanup

if.then387.i:                                     ; preds = %if.then376.i
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @cursor_report(ptr noundef %15, ptr noundef %tty) #21
  br label %cleanup

sw.epilog391.i:                                   ; preds = %sw.bb344.i.sw.epilog391.i_crit_edge, %sw.bb318.i.sw.epilog391.i_crit_edge, %if.end298.i.sw.epilog391.i_crit_edge
  %283 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %283)
  %bf.load393.i = load i16, ptr %vc_utf.i, align 4
  %284 = and i16 %bf.load393.i, 448
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %284)
  %cmp397.not.i = icmp eq i16 %284, 0
  br i1 %cmp397.not.i, label %if.end404.i, label %if.then399.i

if.then399.i:                                     ; preds = %sw.epilog391.i
  call void @__sanitizer_cov_trace_pc() #23
  %bf.clear402.i = and i16 %bf.load393.i, -449
  %285 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_store2_noabort(i32 %285)
  store i16 %bf.clear402.i, ptr %vc_utf.i, align 4
  br label %cleanup

if.end404.i:                                      ; preds = %sw.epilog391.i
  %286 = zext i8 %32 to i64
  call void @__sanitizer_cov_trace_switch(i64 %286, ptr @__sancov_gen_cov_switch_values.75)
  switch i8 %32, label %if.end404.i.cleanup_crit_edge [
    i8 71, label %if.end404.i.sw.bb405.i_crit_edge
    i8 96, label %if.end404.i.sw.bb405.i_crit_edge378
    i8 65, label %sw.bb416.i
    i8 66, label %if.end404.i.sw.bb432.i_crit_edge
    i8 101, label %if.end404.i.sw.bb432.i_crit_edge379
    i8 67, label %if.end404.i.sw.bb448.i_crit_edge
    i8 97, label %if.end404.i.sw.bb448.i_crit_edge380
    i8 68, label %sw.bb464.i
    i8 69, label %sw.bb480.i
    i8 70, label %sw.bb494.i
    i8 100, label %sw.bb508.i
    i8 72, label %if.end404.i.sw.bb521.i_crit_edge
    i8 102, label %if.end404.i.sw.bb521.i_crit_edge381
    i8 74, label %sw.bb542.i
    i8 75, label %sw.bb545.i
    i8 76, label %sw.bb548.i
    i8 77, label %sw.bb551.i
    i8 80, label %sw.bb554.i
    i8 99, label %sw.bb557.i
    i8 103, label %sw.bb563.i
    i8 109, label %sw.bb587.i
    i8 113, label %sw.bb588.i
    i8 114, label %sw.bb607.i
    i8 115, label %sw.bb642.i
    i8 117, label %sw.bb643.i
    i8 88, label %sw.bb644.i
    i8 64, label %sw.bb647.i
    i8 93, label %sw.bb650.i
  ]

if.end404.i.sw.bb521.i_crit_edge381:              ; preds = %if.end404.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb521.i

if.end404.i.sw.bb521.i_crit_edge:                 ; preds = %if.end404.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb521.i

if.end404.i.sw.bb448.i_crit_edge380:              ; preds = %if.end404.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb448.i

if.end404.i.sw.bb448.i_crit_edge:                 ; preds = %if.end404.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb448.i

if.end404.i.sw.bb432.i_crit_edge379:              ; preds = %if.end404.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb432.i

if.end404.i.sw.bb432.i_crit_edge:                 ; preds = %if.end404.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb432.i

if.end404.i.sw.bb405.i_crit_edge378:              ; preds = %if.end404.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb405.i

if.end404.i.sw.bb405.i_crit_edge:                 ; preds = %if.end404.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb405.i

if.end404.i.cleanup_crit_edge:                    ; preds = %if.end404.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

sw.bb405.i:                                       ; preds = %if.end404.i.sw.bb405.i_crit_edge, %if.end404.i.sw.bb405.i_crit_edge378
  %287 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %287)
  %288 = load i32, ptr %vc_par377.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %288)
  %tobool408.not.i = icmp eq i32 %288, 0
  br i1 %tobool408.not.i, label %sw.bb405.i.if.end412.i_crit_edge, label %if.then409.i

sw.bb405.i.if.end412.i_crit_edge:                 ; preds = %sw.bb405.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end412.i

if.then409.i:                                     ; preds = %sw.bb405.i
  call void @__sanitizer_cov_trace_pc() #23
  %dec.i = add i32 %288, -1
  %289 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_store4_noabort(i32 %289)
  store i32 %dec.i, ptr %vc_par377.i, align 4
  br label %if.end412.i

if.end412.i:                                      ; preds = %if.then409.i, %sw.bb405.i.if.end412.i_crit_edge
  %290 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %290)
  %291 = load i32, ptr %vc_par377.i, align 4
  %292 = ptrtoint ptr %y.i.i145 to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load i32, ptr %y.i.i145, align 4
  call fastcc void @gotoxy(ptr noundef %15, i32 noundef %291, i32 noundef %293) #21
  br label %cleanup

sw.bb416.i:                                       ; preds = %if.end404.i
  %294 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %294)
  %295 = load i32, ptr %vc_par377.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %295)
  %tobool419.not.i = icmp eq i32 %295, 0
  br i1 %tobool419.not.i, label %if.then420.i, label %sw.bb416.i.if.end424.i_crit_edge

sw.bb416.i.if.end424.i_crit_edge:                 ; preds = %sw.bb416.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end424.i

if.then420.i:                                     ; preds = %sw.bb416.i
  call void @__sanitizer_cov_trace_pc() #23
  %296 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_store4_noabort(i32 %296)
  store i32 1, ptr %vc_par377.i, align 4
  br label %if.end424.i

if.end424.i:                                      ; preds = %if.then420.i, %sw.bb416.i.if.end424.i_crit_edge
  %297 = ptrtoint ptr %state.i.i146 to i32
  call void @__asan_load4_noabort(i32 %297)
  %298 = load i32, ptr %state.i.i146, align 4
  %299 = ptrtoint ptr %y.i.i145 to i32
  call void @__asan_load4_noabort(i32 %299)
  %300 = load i32, ptr %y.i.i145, align 4
  %301 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %301)
  %302 = load i32, ptr %vc_par377.i, align 4
  %sub431.i = sub i32 %300, %302
  call fastcc void @gotoxy(ptr noundef %15, i32 noundef %298, i32 noundef %sub431.i) #21
  br label %cleanup

sw.bb432.i:                                       ; preds = %if.end404.i.sw.bb432.i_crit_edge, %if.end404.i.sw.bb432.i_crit_edge379
  %303 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %303)
  %304 = load i32, ptr %vc_par377.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %304)
  %tobool435.not.i = icmp eq i32 %304, 0
  br i1 %tobool435.not.i, label %if.then436.i, label %sw.bb432.i.if.end440.i_crit_edge

sw.bb432.i.if.end440.i_crit_edge:                 ; preds = %sw.bb432.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end440.i

if.then436.i:                                     ; preds = %sw.bb432.i
  call void @__sanitizer_cov_trace_pc() #23
  %305 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_store4_noabort(i32 %305)
  store i32 1, ptr %vc_par377.i, align 4
  br label %if.end440.i

if.end440.i:                                      ; preds = %if.then436.i, %sw.bb432.i.if.end440.i_crit_edge
  %306 = ptrtoint ptr %state.i.i146 to i32
  call void @__asan_load4_noabort(i32 %306)
  %307 = load i32, ptr %state.i.i146, align 4
  %308 = ptrtoint ptr %y.i.i145 to i32
  call void @__asan_load4_noabort(i32 %308)
  %309 = load i32, ptr %y.i.i145, align 4
  %310 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %310)
  %311 = load i32, ptr %vc_par377.i, align 4
  %add447.i = add i32 %311, %309
  call fastcc void @gotoxy(ptr noundef %15, i32 noundef %307, i32 noundef %add447.i) #21
  br label %cleanup

sw.bb448.i:                                       ; preds = %if.end404.i.sw.bb448.i_crit_edge, %if.end404.i.sw.bb448.i_crit_edge380
  %312 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %312)
  %313 = load i32, ptr %vc_par377.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %313)
  %tobool451.not.i = icmp eq i32 %313, 0
  br i1 %tobool451.not.i, label %if.then452.i, label %sw.bb448.i.if.end456.i_crit_edge

sw.bb448.i.if.end456.i_crit_edge:                 ; preds = %sw.bb448.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end456.i

if.then452.i:                                     ; preds = %sw.bb448.i
  call void @__sanitizer_cov_trace_pc() #23
  %314 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_store4_noabort(i32 %314)
  store i32 1, ptr %vc_par377.i, align 4
  br label %if.end456.i

if.end456.i:                                      ; preds = %if.then452.i, %sw.bb448.i.if.end456.i_crit_edge
  %315 = ptrtoint ptr %state.i.i146 to i32
  call void @__asan_load4_noabort(i32 %315)
  %316 = load i32, ptr %state.i.i146, align 4
  %317 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %317)
  %318 = load i32, ptr %vc_par377.i, align 4
  %add461.i = add i32 %318, %316
  %319 = ptrtoint ptr %y.i.i145 to i32
  call void @__asan_load4_noabort(i32 %319)
  %320 = load i32, ptr %y.i.i145, align 4
  call fastcc void @gotoxy(ptr noundef %15, i32 noundef %add461.i, i32 noundef %320) #21
  br label %cleanup

sw.bb464.i:                                       ; preds = %if.end404.i
  %321 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %321)
  %322 = load i32, ptr %vc_par377.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %322)
  %tobool467.not.i = icmp eq i32 %322, 0
  br i1 %tobool467.not.i, label %if.then468.i, label %sw.bb464.i.if.end472.i_crit_edge

sw.bb464.i.if.end472.i_crit_edge:                 ; preds = %sw.bb464.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end472.i

if.then468.i:                                     ; preds = %sw.bb464.i
  call void @__sanitizer_cov_trace_pc() #23
  %323 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_store4_noabort(i32 %323)
  store i32 1, ptr %vc_par377.i, align 4
  br label %if.end472.i

if.end472.i:                                      ; preds = %if.then468.i, %sw.bb464.i.if.end472.i_crit_edge
  %324 = ptrtoint ptr %state.i.i146 to i32
  call void @__asan_load4_noabort(i32 %324)
  %325 = load i32, ptr %state.i.i146, align 4
  %326 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %326)
  %327 = load i32, ptr %vc_par377.i, align 4
  %sub477.i = sub i32 %325, %327
  %328 = ptrtoint ptr %y.i.i145 to i32
  call void @__asan_load4_noabort(i32 %328)
  %329 = load i32, ptr %y.i.i145, align 4
  call fastcc void @gotoxy(ptr noundef %15, i32 noundef %sub477.i, i32 noundef %329) #21
  br label %cleanup

sw.bb480.i:                                       ; preds = %if.end404.i
  %330 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %330)
  %331 = load i32, ptr %vc_par377.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %331)
  %tobool483.not.i = icmp eq i32 %331, 0
  br i1 %tobool483.not.i, label %if.then484.i, label %sw.bb480.i.if.end488.i_crit_edge

sw.bb480.i.if.end488.i_crit_edge:                 ; preds = %sw.bb480.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end488.i

if.then484.i:                                     ; preds = %sw.bb480.i
  call void @__sanitizer_cov_trace_pc() #23
  %332 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_store4_noabort(i32 %332)
  store i32 1, ptr %vc_par377.i, align 4
  br label %if.end488.i

if.end488.i:                                      ; preds = %if.then484.i, %sw.bb480.i.if.end488.i_crit_edge
  %333 = ptrtoint ptr %y.i.i145 to i32
  call void @__asan_load4_noabort(i32 %333)
  %334 = load i32, ptr %y.i.i145, align 4
  %335 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %335)
  %336 = load i32, ptr %vc_par377.i, align 4
  %add493.i = add i32 %336, %334
  call fastcc void @gotoxy(ptr noundef %15, i32 noundef 0, i32 noundef %add493.i) #21
  br label %cleanup

sw.bb494.i:                                       ; preds = %if.end404.i
  %337 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %337)
  %338 = load i32, ptr %vc_par377.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %338)
  %tobool497.not.i = icmp eq i32 %338, 0
  br i1 %tobool497.not.i, label %if.then498.i, label %sw.bb494.i.if.end502.i_crit_edge

sw.bb494.i.if.end502.i_crit_edge:                 ; preds = %sw.bb494.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end502.i

if.then498.i:                                     ; preds = %sw.bb494.i
  call void @__sanitizer_cov_trace_pc() #23
  %339 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_store4_noabort(i32 %339)
  store i32 1, ptr %vc_par377.i, align 4
  br label %if.end502.i

if.end502.i:                                      ; preds = %if.then498.i, %sw.bb494.i.if.end502.i_crit_edge
  %340 = ptrtoint ptr %y.i.i145 to i32
  call void @__asan_load4_noabort(i32 %340)
  %341 = load i32, ptr %y.i.i145, align 4
  %342 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %342)
  %343 = load i32, ptr %vc_par377.i, align 4
  %sub507.i = sub i32 %341, %343
  call fastcc void @gotoxy(ptr noundef %15, i32 noundef 0, i32 noundef %sub507.i) #21
  br label %cleanup

sw.bb508.i:                                       ; preds = %if.end404.i
  %344 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %344)
  %345 = load i32, ptr %vc_par377.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %345)
  %tobool511.not.i = icmp eq i32 %345, 0
  br i1 %tobool511.not.i, label %sw.bb508.i.if.end516.i_crit_edge, label %if.then512.i

sw.bb508.i.if.end516.i_crit_edge:                 ; preds = %sw.bb508.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end516.i

if.then512.i:                                     ; preds = %sw.bb508.i
  call void @__sanitizer_cov_trace_pc() #23
  %dec515.i = add i32 %345, -1
  %346 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_store4_noabort(i32 %346)
  store i32 %dec515.i, ptr %vc_par377.i, align 4
  br label %if.end516.i

if.end516.i:                                      ; preds = %if.then512.i, %sw.bb508.i.if.end516.i_crit_edge
  %347 = ptrtoint ptr %state.i.i146 to i32
  call void @__asan_load4_noabort(i32 %347)
  %348 = load i32, ptr %state.i.i146, align 4
  %349 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %349)
  %350 = load i32, ptr %vc_par377.i, align 4
  call fastcc void @gotoxay(ptr noundef %15, i32 noundef %348, i32 noundef %350) #21
  br label %cleanup

sw.bb521.i:                                       ; preds = %if.end404.i.sw.bb521.i_crit_edge, %if.end404.i.sw.bb521.i_crit_edge381
  %351 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %351)
  %352 = load i32, ptr %vc_par377.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %352)
  %tobool524.not.i = icmp eq i32 %352, 0
  br i1 %tobool524.not.i, label %sw.bb521.i.if.end529.i_crit_edge, label %if.then525.i

sw.bb521.i.if.end529.i_crit_edge:                 ; preds = %sw.bb521.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end529.i

if.then525.i:                                     ; preds = %sw.bb521.i
  call void @__sanitizer_cov_trace_pc() #23
  %dec528.i = add i32 %352, -1
  %353 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_store4_noabort(i32 %353)
  store i32 %dec528.i, ptr %vc_par377.i, align 4
  br label %if.end529.i

if.end529.i:                                      ; preds = %if.then525.i, %sw.bb521.i.if.end529.i_crit_edge
  %354 = ptrtoint ptr %arrayidx361.i to i32
  call void @__asan_load4_noabort(i32 %354)
  %355 = load i32, ptr %arrayidx361.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %355)
  %tobool532.not.i = icmp eq i32 %355, 0
  br i1 %tobool532.not.i, label %if.end529.i.if.end537.i_crit_edge, label %if.then533.i

if.end529.i.if.end537.i_crit_edge:                ; preds = %if.end529.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end537.i

if.then533.i:                                     ; preds = %if.end529.i
  call void @__sanitizer_cov_trace_pc() #23
  %dec536.i = add i32 %355, -1
  %356 = ptrtoint ptr %arrayidx361.i to i32
  call void @__asan_store4_noabort(i32 %356)
  store i32 %dec536.i, ptr %arrayidx361.i, align 4
  br label %if.end537.i

if.end537.i:                                      ; preds = %if.then533.i, %if.end529.i.if.end537.i_crit_edge
  %357 = ptrtoint ptr %arrayidx361.i to i32
  call void @__asan_load4_noabort(i32 %357)
  %358 = load i32, ptr %arrayidx361.i, align 4
  %359 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %359)
  %360 = load i32, ptr %vc_par377.i, align 4
  call fastcc void @gotoxay(ptr noundef %15, i32 noundef %358, i32 noundef %360) #21
  br label %cleanup

sw.bb542.i:                                       ; preds = %if.end404.i
  call void @__sanitizer_cov_trace_pc() #23
  %361 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %361)
  %362 = load i32, ptr %vc_par377.i, align 4
  call fastcc void @csi_J(ptr noundef %15, i32 noundef %362) #21
  br label %cleanup

sw.bb545.i:                                       ; preds = %if.end404.i
  call void @__sanitizer_cov_trace_pc() #23
  %363 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %363)
  %364 = load i32, ptr %vc_par377.i, align 4
  call fastcc void @csi_K(ptr noundef %15, i32 noundef %364) #21
  br label %cleanup

sw.bb548.i:                                       ; preds = %if.end404.i
  call void @__sanitizer_cov_trace_pc() #23
  %365 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %365)
  %366 = load i32, ptr %vc_par377.i, align 4
  call fastcc void @csi_L(ptr noundef %15, i32 noundef %366) #21
  br label %cleanup

sw.bb551.i:                                       ; preds = %if.end404.i
  call void @__sanitizer_cov_trace_pc() #23
  %367 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %367)
  %368 = load i32, ptr %vc_par377.i, align 4
  call fastcc void @csi_M(ptr noundef %15, i32 noundef %368) #21
  br label %cleanup

sw.bb554.i:                                       ; preds = %if.end404.i
  call void @__sanitizer_cov_trace_pc() #23
  %369 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %369)
  %370 = load i32, ptr %vc_par377.i, align 4
  call fastcc void @csi_P(ptr noundef %15, i32 noundef %370) #21
  br label %cleanup

sw.bb557.i:                                       ; preds = %if.end404.i
  %371 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %371)
  %372 = load i32, ptr %vc_par377.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %372)
  %tobool560.not.i = icmp eq i32 %372, 0
  br i1 %tobool560.not.i, label %if.then561.i, label %sw.bb557.i.cleanup_crit_edge

sw.bb557.i.cleanup_crit_edge:                     ; preds = %sw.bb557.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then561.i:                                     ; preds = %sw.bb557.i
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @respond_ID(ptr noundef %tty) #21
  br label %cleanup

sw.bb563.i:                                       ; preds = %if.end404.i
  %373 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %373)
  %374 = load i32, ptr %vc_par377.i, align 4
  %375 = zext i32 %374 to i64
  call void @__sanitizer_cov_trace_switch(i64 %375, ptr @__sancov_gen_cov_switch_values.76)
  switch i32 %374, label %sw.bb563.i.cleanup_crit_edge [
    i32 0, label %land.lhs.true567.i
    i32 3, label %if.then582.i
  ]

sw.bb563.i.cleanup_crit_edge:                     ; preds = %sw.bb563.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

land.lhs.true567.i:                               ; preds = %sw.bb563.i
  %376 = ptrtoint ptr %state.i.i146 to i32
  call void @__asan_load4_noabort(i32 %376)
  %377 = load i32, ptr %state.i.i146, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %377)
  %cmp570.i = icmp ult i32 %377, 256
  br i1 %cmp570.i, label %if.then572.i, label %land.lhs.true567.i.cleanup_crit_edge

land.lhs.true567.i.cleanup_crit_edge:             ; preds = %land.lhs.true567.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then572.i:                                     ; preds = %land.lhs.true567.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @_set_bit(i32 noundef %377, ptr noundef %vc_tab_stop.i) #21
  br label %cleanup

if.then582.i:                                     ; preds = %sw.bb563.i
  call void @__sanitizer_cov_trace_pc() #23
  %378 = call ptr @memset(ptr %vc_tab_stop.i, i32 0, i32 32)
  br label %cleanup

sw.bb587.i:                                       ; preds = %if.end404.i
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @csi_m(ptr noundef %15) #21
  br label %cleanup

sw.bb588.i:                                       ; preds = %if.end404.i
  %379 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %379)
  %380 = load i32, ptr %vc_par377.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %380)
  %cmp591.i = icmp ult i32 %380, 4
  br i1 %cmp591.i, label %if.then593.i, label %sw.bb588.i.cleanup_crit_edge

sw.bb588.i.cleanup_crit_edge:                     ; preds = %sw.bb588.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then593.i:                                     ; preds = %sw.bb588.i
  call void @__sanitizer_cov_trace_pc() #23
  %381 = ptrtoint ptr %vc_num to i32
  call void @__asan_load2_noabort(i32 %381)
  %382 = load i16, ptr %vc_num, align 4
  %conv595.i = zext i16 %382 to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %380)
  %cmp598.not.i = icmp eq i32 %380, 3
  %spec.select.i = select i1 %cmp598.not.i, i32 4, i32 %380
  call void @vt_set_led_state(i32 noundef %conv595.i, i32 noundef %spec.select.i) #21
  br label %cleanup

sw.bb607.i:                                       ; preds = %if.end404.i
  %383 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %383)
  %384 = load i32, ptr %vc_par377.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %384)
  %tobool610.not.i = icmp eq i32 %384, 0
  br i1 %tobool610.not.i, label %if.then611.i, label %sw.bb607.i.if.end615.i_crit_edge

sw.bb607.i.if.end615.i_crit_edge:                 ; preds = %sw.bb607.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end615.i

if.then611.i:                                     ; preds = %sw.bb607.i
  call void @__sanitizer_cov_trace_pc() #23
  %385 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_store4_noabort(i32 %385)
  store i32 1, ptr %vc_par377.i, align 4
  br label %if.end615.i

if.end615.i:                                      ; preds = %if.then611.i, %sw.bb607.i.if.end615.i_crit_edge
  %386 = ptrtoint ptr %arrayidx361.i to i32
  call void @__asan_load4_noabort(i32 %386)
  %387 = load i32, ptr %arrayidx361.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %387)
  %tobool618.not.i = icmp eq i32 %387, 0
  br i1 %tobool618.not.i, label %if.then619.i, label %if.end615.i.if.end622.i_crit_edge

if.end615.i.if.end622.i_crit_edge:                ; preds = %if.end615.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end622.i

if.then619.i:                                     ; preds = %if.end615.i
  call void @__sanitizer_cov_trace_pc() #23
  %388 = ptrtoint ptr %vc_rows.i.i149 to i32
  call void @__asan_load4_noabort(i32 %388)
  %389 = load i32, ptr %vc_rows.i.i149, align 4
  %390 = ptrtoint ptr %arrayidx361.i to i32
  call void @__asan_store4_noabort(i32 %390)
  store i32 %389, ptr %arrayidx361.i, align 4
  br label %if.end622.i

if.end622.i:                                      ; preds = %if.then619.i, %if.end615.i.if.end622.i_crit_edge
  %391 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %391)
  %392 = load i32, ptr %vc_par377.i, align 4
  %393 = ptrtoint ptr %arrayidx361.i to i32
  call void @__asan_load4_noabort(i32 %393)
  %394 = load i32, ptr %arrayidx361.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %392, i32 %394)
  %cmp627.i = icmp ult i32 %392, %394
  br i1 %cmp627.i, label %land.lhs.true629.i, label %if.end622.i.cleanup_crit_edge

if.end622.i.cleanup_crit_edge:                    ; preds = %if.end622.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

land.lhs.true629.i:                               ; preds = %if.end622.i
  %395 = ptrtoint ptr %vc_rows.i.i149 to i32
  call void @__asan_load4_noabort(i32 %395)
  %396 = load i32, ptr %vc_rows.i.i149, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %394, i32 %396)
  %cmp633.not.i = icmp ugt i32 %394, %396
  br i1 %cmp633.not.i, label %land.lhs.true629.i.cleanup_crit_edge, label %if.then635.i

land.lhs.true629.i.cleanup_crit_edge:             ; preds = %land.lhs.true629.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then635.i:                                     ; preds = %land.lhs.true629.i
  call void @__sanitizer_cov_trace_pc() #23
  %sub638.i = add i32 %392, -1
  %397 = ptrtoint ptr %vc_top.i.i151 to i32
  call void @__asan_store4_noabort(i32 %397)
  store i32 %sub638.i, ptr %vc_top.i.i151, align 4
  %398 = ptrtoint ptr %vc_bottom.i.i148 to i32
  call void @__asan_store4_noabort(i32 %398)
  store i32 %394, ptr %vc_bottom.i.i148, align 4
  call fastcc void @gotoxay(ptr noundef %15, i32 noundef 0, i32 noundef 0) #21
  br label %cleanup

sw.bb642.i:                                       ; preds = %if.end404.i
  call void @__sanitizer_cov_trace_pc() #23
  %399 = call ptr @memcpy(ptr %saved_state.i1037.i, ptr %state.i.i146, i32 20)
  br label %cleanup

sw.bb643.i:                                       ; preds = %if.end404.i
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @restore_cur(ptr noundef %15) #21
  br label %cleanup

sw.bb644.i:                                       ; preds = %if.end404.i
  call void @__sanitizer_cov_trace_pc() #23
  %400 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %400)
  %401 = load i32, ptr %vc_par377.i, align 4
  call fastcc void @csi_X(ptr noundef %15, i32 noundef %401) #21
  br label %cleanup

sw.bb647.i:                                       ; preds = %if.end404.i
  call void @__sanitizer_cov_trace_pc() #23
  %402 = ptrtoint ptr %vc_par377.i to i32
  call void @__asan_load4_noabort(i32 %402)
  %403 = load i32, ptr %vc_par377.i, align 4
  %404 = ptrtoint ptr %vc_cols.i153 to i32
  call void @__asan_load4_noabort(i32 %404)
  %405 = load i32, ptr %vc_cols.i153, align 4
  %406 = ptrtoint ptr %state.i.i146 to i32
  call void @__asan_load4_noabort(i32 %406)
  %407 = load i32, ptr %state.i.i146, align 4
  %sub.i1040.i = sub i32 %405, %407
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i1040.i, i32 %403)
  %cmp.i1041.i = icmp ult i32 %sub.i1040.i, %403
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %403)
  %tobool.not.i1042.i = icmp eq i32 %403, 0
  %spec.store.select.i.i = select i1 %tobool.not.i1042.i, i32 1, i32 %403
  %nr.addr.0.i.i = select i1 %cmp.i1041.i, i32 %sub.i1040.i, i32 %spec.store.select.i.i
  call fastcc void @insert_char(ptr noundef %15, i32 noundef %nr.addr.0.i.i) #21
  br label %cleanup

sw.bb650.i:                                       ; preds = %if.end404.i
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @setterm_command(ptr noundef %15) #21
  br label %cleanup

sw.bb652.i:                                       ; preds = %sw.epilog.i
  %408 = add nsw i32 %conv41, -20
  call void @__sanitizer_cov_trace_const_cmp4(i32 44, i32 %408)
  %409 = icmp ult i32 %408, 44
  br i1 %409, label %sw.bb652.i.cleanup_crit_edge, label %if.end659.i

sw.bb652.i.cleanup_crit_edge:                     ; preds = %sw.bb652.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end659.i:                                      ; preds = %sw.bb652.i
  call void @__sanitizer_cov_trace_pc() #23
  %410 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %410)
  store i32 0, ptr %vc_state.i, align 4
  br label %cleanup

sw.bb661.i:                                       ; preds = %sw.epilog.i
  %411 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %411)
  store i32 0, ptr %vc_state.i, align 4
  %412 = zext i8 %32 to i64
  call void @__sanitizer_cov_trace_switch(i64 %412, ptr @__sancov_gen_cov_switch_values.77)
  switch i8 %32, label %sw.bb661.i.cleanup_crit_edge [
    i8 64, label %sw.bb663.i
    i8 71, label %sw.bb661.i.sw.bb667.i_crit_edge
    i8 56, label %sw.bb661.i.sw.bb667.i_crit_edge382
  ]

sw.bb661.i.sw.bb667.i_crit_edge382:               ; preds = %sw.bb661.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb667.i

sw.bb661.i.sw.bb667.i_crit_edge:                  ; preds = %sw.bb661.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb667.i

sw.bb661.i.cleanup_crit_edge:                     ; preds = %sw.bb661.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

sw.bb663.i:                                       ; preds = %sw.bb661.i
  call void @__sanitizer_cov_trace_pc() #23
  %413 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %413)
  %bf.load664.i = load i16, ptr %vc_utf.i, align 4
  %bf.clear665.i = and i16 %bf.load664.i, -3
  store i16 %bf.clear665.i, ptr %vc_utf.i, align 4
  br label %cleanup

sw.bb667.i:                                       ; preds = %sw.bb661.i.sw.bb667.i_crit_edge, %sw.bb661.i.sw.bb667.i_crit_edge382
  %414 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %414)
  %bf.load669.i = load i16, ptr %vc_utf.i, align 4
  %bf.set671.i = or i16 %bf.load669.i, 2
  store i16 %bf.set671.i, ptr %vc_utf.i, align 4
  br label %cleanup

sw.bb673.i:                                       ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #23
  %415 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %415)
  store i32 0, ptr %vc_state.i, align 4
  br label %cleanup

sw.bb675.i:                                       ; preds = %sw.epilog.i
  %416 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %416)
  store i32 0, ptr %vc_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 56, i8 %32)
  %cmp677.i = icmp eq i8 %32, 56
  br i1 %cmp677.i, label %if.then679.i, label %sw.bb675.i.cleanup_crit_edge

sw.bb675.i.cleanup_crit_edge:                     ; preds = %sw.bb675.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then679.i:                                     ; preds = %sw.bb675.i
  call void @__sanitizer_cov_trace_pc() #23
  %417 = ptrtoint ptr %vc_video_erase_char.i to i32
  call void @__asan_load2_noabort(i32 %417)
  %418 = load i16, ptr %vc_video_erase_char.i, align 4
  %419 = and i16 %418, -256
  %420 = or i16 %419, 69
  store i16 %420, ptr %vc_video_erase_char.i, align 4
  call fastcc void @csi_J(ptr noundef %15, i32 noundef 2) #21
  %421 = ptrtoint ptr %vc_video_erase_char.i to i32
  call void @__asan_load2_noabort(i32 %421)
  %422 = load i16, ptr %vc_video_erase_char.i, align 4
  %423 = and i16 %422, -256
  %424 = or i16 %423, 32
  store i16 %424, ptr %vc_video_erase_char.i, align 4
  %425 = ptrtoint ptr %vc_origin.i to i32
  call void @__asan_load4_noabort(i32 %425)
  %426 = load i32, ptr %vc_origin.i, align 4
  %427 = ptrtoint ptr %vc_screenbuf_size.i to i32
  call void @__asan_load4_noabort(i32 %427)
  %428 = load i32, ptr %vc_screenbuf_size.i, align 4
  %div1010.i = lshr i32 %428, 1
  call fastcc void @do_update_region(ptr noundef %15, i32 noundef %426, i32 noundef %div1010.i) #21
  br label %cleanup

sw.bb692.i:                                       ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @vc_setGx(ptr noundef %15, i32 noundef 0, i32 noundef %conv41) #21
  %429 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %429)
  store i32 0, ptr %vc_state.i, align 4
  br label %cleanup

sw.bb694.i:                                       ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @vc_setGx(ptr noundef %15, i32 noundef 1, i32 noundef %conv41) #21
  %430 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %430)
  store i32 0, ptr %vc_state.i, align 4
  br label %cleanup

sw.default.i:                                     ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #23
  %431 = ptrtoint ptr %vc_state.i to i32
  call void @__asan_store4_noabort(i32 %431)
  store i32 0, ptr %vc_state.i, align 4
  br label %cleanup

if.end55:                                         ; preds = %vc_is_control.exit.if.end55_crit_edge, %land.lhs.true.i.if.end55_crit_edge, %if.end15.i.if.end55_crit_edge, %if.then6.i.if.end55_crit_edge
  %432 = ptrtoint ptr %vc_attr1.i to i32
  call void @__asan_load1_noabort(i32 %432)
  %433 = load i8, ptr %vc_attr1.i, align 1
  %434 = ptrtoint ptr %vc_hi_font_mask.i to i32
  call void @__asan_load2_noabort(i32 %434)
  %435 = load i16, ptr %vc_hi_font_mask.i, align 4
  %conv.i128 = zext i16 %435 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %435)
  %tobool.not.i129 = icmp eq i16 %435, 0
  %436 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %436)
  %bf.load.i131 = load i16, ptr %vc_utf.i, align 4
  %437 = and i16 %bf.load.i131, -32766
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %437)
  %438 = icmp eq i16 %437, 2
  br i1 %438, label %if.then.i132, label %if.end55.if.end11.i_crit_edge

if.end55.if.end11.i_crit_edge:                    ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end11.i

if.then.i132:                                     ; preds = %if.end55
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ucs.addr.i.i) #21
  %439 = ptrtoint ptr %ucs.addr.i.i to i32
  call void @__asan_store4_noabort(i32 %439)
  store i32 %c.0202, ptr %ucs.addr.i.i, align 4
  %440 = add i32 %c.0202, -262142
  call void @__sanitizer_cov_trace_const_cmp4(i32 -257790, i32 %440)
  %441 = icmp ult i32 %440, -257790
  br i1 %441, label %is_double_width.exit.thread.i, label %is_double_width.exit.i

is_double_width.exit.thread.i:                    ; preds = %if.then.i132
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ucs.addr.i.i) #21
  br label %442

is_double_width.exit.i:                           ; preds = %if.then.i132
  %call.i.i133 = call ptr @bsearch(ptr noundef nonnull %ucs.addr.i.i, ptr noundef nonnull @is_double_width.double_width, i32 noundef 12, i32 noundef 8, ptr noundef nonnull @ucs_cmp) #21
  %cmp2.i.not.i = icmp eq ptr %call.i.i133, null
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ucs.addr.i.i) #21
  br i1 %cmp2.i.not.i, label %is_double_width.exit.i._crit_edge, label %is_double_width.exit.i.if.end11.i_crit_edge

is_double_width.exit.i.if.end11.i_crit_edge:      ; preds = %is_double_width.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end11.i

is_double_width.exit.i._crit_edge:                ; preds = %is_double_width.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %442

442:                                              ; preds = %is_double_width.exit.i._crit_edge, %is_double_width.exit.thread.i
  br label %if.end11.i

if.end11.i:                                       ; preds = %442, %is_double_width.exit.i.if.end11.i_crit_edge, %if.end55.if.end11.i_crit_edge
  %width.0.i = phi i8 [ 1, %if.end55.if.end11.i_crit_edge ], [ 1, %442 ], [ 2, %is_double_width.exit.i.if.end11.i_crit_edge ]
  %call12.i = call i32 @conv_uni_to_pc(ptr noundef %15, i32 noundef %retval.0.i206) #21
  %neg.i = select i1 %tobool.not.i129, i32 -256, i32 -512
  %and.i134 = and i32 %call12.i, %neg.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i134)
  %tobool14.not.i = icmp eq i32 %and.i134, 0
  br i1 %tobool14.not.i, label %if.end11.i.if.end54.i_crit_edge, label %if.then15.i

if.end11.i.if.end54.i_crit_edge:                  ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54.i

if.then15.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -3, i32 %call12.i)
  %switch.i = icmp ugt i32 %call12.i, -3
  br i1 %switch.i, label %if.then15.i.cleanup_crit_edge, label %if.end20.i

if.then15.i.cleanup_crit_edge:                    ; preds = %if.then15.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end20.i:                                       ; preds = %if.then15.i
  %443 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %443)
  %bf.load22.i = load i16, ptr %vc_utf.i, align 4
  %444 = and i16 %bf.load22.i, -32766
  call void @__sanitizer_cov_trace_const_cmp2(i16 2, i16 %444)
  %445 = icmp ne i16 %444, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %c.0202)
  %cmp34.i = icmp slt i32 %c.0202, 128
  %or.cond205.i = or i1 %cmp34.i, %445
  %and39.i = and i32 %neg.i, %c.0202
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and39.i)
  %tobool40.not.i = icmp eq i32 %and39.i, 0
  %or.cond206.i = select i1 %or.cond205.i, i1 %tobool40.not.i, i1 false
  br i1 %or.cond206.i, label %if.end20.i.if.end54.i_crit_edge, label %if.else.i135

if.end20.i.if.end54.i_crit_edge:                  ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54.i

if.else.i135:                                     ; preds = %if.end20.i
  %call42.i = call i32 @conv_uni_to_pc(ptr noundef %15, i32 noundef 65533) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42.i)
  %cmp43.i = icmp slt i32 %call42.i, 0
  br i1 %cmp43.i, label %if.then45.i, label %if.else.i135.if.end54.i_crit_edge

if.else.i135.if.end54.i_crit_edge:                ; preds = %if.else.i135
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54.i

if.then45.i:                                      ; preds = %if.else.i135
  %call46.i = call i32 @conv_uni_to_pc(ptr noundef %15, i32 noundef 63) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call46.i)
  %cmp47.i = icmp slt i32 %call46.i, 0
  %spec.store.select.i = select i1 %cmp47.i, i32 63, i32 %call46.i
  %446 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %446)
  %bf.load.i.i136 = load i16, ptr %vc_utf.i, align 4
  %447 = and i16 %bf.load.i.i136, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %447)
  %tobool.not.i.i137 = icmp eq i16 %447, 0
  br i1 %tobool.not.i.i137, label %if.then.i.i138, label %if.end.i209.i

if.then.i.i138:                                   ; preds = %if.then45.i
  call void @__sanitizer_cov_trace_pc() #23
  %448 = ptrtoint ptr %vc_attr1.i to i32
  call void @__asan_load1_noabort(i32 %448)
  %449 = load i8, ptr %vc_attr1.i, align 1
  %450 = xor i8 %449, 8
  br label %vc_invert_attr.exit.i

if.end.i209.i:                                    ; preds = %if.then45.i
  %451 = ptrtoint ptr %vc_hi_font_mask.i to i32
  call void @__asan_load2_noabort(i32 %451)
  %452 = load i16, ptr %vc_hi_font_mask.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 256, i16 %452)
  %cmp.i.i139 = icmp eq i16 %452, 256
  %453 = ptrtoint ptr %vc_attr1.i to i32
  call void @__asan_load1_noabort(i32 %453)
  %454 = load i8, ptr %vc_attr1.i, align 1
  br i1 %cmp.i.i139, label %if.then4.i.i, label %if.end15.i.i144

if.then4.i.i:                                     ; preds = %if.end.i209.i
  call void @__sanitizer_cov_trace_pc() #23
  %and.i.i140 = and i8 %454, 17
  %and9.i.i = lshr i8 %454, 4
  %455 = and i8 %and9.i.i, 14
  %or.i.i141 = or i8 %455, %and.i.i140
  %and12.i.i = shl i8 %454, 4
  %shl.i.i142 = and i8 %and12.i.i, -32
  %or13.i.i = or i8 %or.i.i141, %shl.i.i142
  br label %vc_invert_attr.exit.i

if.end15.i.i144:                                  ; preds = %if.end.i209.i
  call void @__sanitizer_cov_trace_pc() #23
  %and18.i.i = and i8 %454, -120
  %and21.i.i = lshr i8 %454, 4
  %456 = and i8 %and21.i.i, 7
  %or23.i.i = or i8 %456, %and18.i.i
  %and26.i.i143 = shl i8 %454, 4
  %shl27.i.i = and i8 %and26.i.i143, 112
  %or28.i.i = or i8 %or23.i.i, %shl27.i.i
  br label %vc_invert_attr.exit.i

vc_invert_attr.exit.i:                            ; preds = %if.end15.i.i144, %if.then4.i.i, %if.then.i.i138
  %retval.0.i210.i = phi i8 [ %or13.i.i, %if.then4.i.i ], [ %or28.i.i, %if.end15.i.i144 ], [ %450, %if.then.i.i138 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %draw.sroa.15.1)
  %cmp.i211.i = icmp slt i32 %draw.sroa.15.1, 0
  br i1 %cmp.i211.i, label %vc_invert_attr.exit.i.if.end54.i_crit_edge, label %if.end.i212.i

vc_invert_attr.exit.i.if.end54.i_crit_edge:       ; preds = %vc_invert_attr.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end54.i

if.end.i212.i:                                    ; preds = %vc_invert_attr.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  %457 = ptrtoint ptr %vc_sw.i.i to i32
  call void @__asan_load4_noabort(i32 %457)
  %458 = load ptr, ptr %vc_sw.i.i, align 4
  %con_putcs.i.i = getelementptr inbounds %struct.consw, ptr %458, i32 0, i32 6
  %459 = ptrtoint ptr %con_putcs.i.i to i32
  call void @__asan_load4_noabort(i32 %459)
  %460 = load ptr, ptr %con_putcs.i.i, align 4
  %461 = inttoptr i32 %draw.sroa.0.1 to ptr
  %sub.ptr.sub.i.i = sub i32 %draw.sroa.9.1, %draw.sroa.0.1
  %sub.ptr.div.i.i = ashr exact i32 %sub.ptr.sub.i.i, 1
  %462 = ptrtoint ptr %y.i.i145 to i32
  call void @__asan_load4_noabort(i32 %462)
  %463 = load i32, ptr %y.i.i145, align 4
  call void %460(ptr noundef %15, ptr noundef %461, i32 noundef %sub.ptr.div.i.i, i32 noundef %463, i32 noundef %draw.sroa.15.1) #21
  br label %if.end54.i

if.end54.i:                                       ; preds = %if.end.i212.i, %vc_invert_attr.exit.i.if.end54.i_crit_edge, %if.else.i135.if.end54.i_crit_edge, %if.end20.i.if.end54.i_crit_edge, %if.end11.i.if.end54.i_crit_edge
  %draw.sroa.15.3 = phi i32 [ %draw.sroa.15.1, %if.end11.i.if.end54.i_crit_edge ], [ %draw.sroa.15.1, %if.end20.i.if.end54.i_crit_edge ], [ %draw.sroa.15.1, %vc_invert_attr.exit.i.if.end54.i_crit_edge ], [ -1, %if.end.i212.i ], [ %draw.sroa.15.1, %if.else.i135.if.end54.i_crit_edge ]
  %tc.addr.0.i = phi i32 [ %call12.i, %if.end11.i.if.end54.i_crit_edge ], [ %c.0202, %if.end20.i.if.end54.i_crit_edge ], [ %spec.store.select.i, %vc_invert_attr.exit.i.if.end54.i_crit_edge ], [ %spec.store.select.i, %if.end.i212.i ], [ %call42.i, %if.else.i135.if.end54.i_crit_edge ]
  %vc_attr.0.i = phi i8 [ %433, %if.end11.i.if.end54.i_crit_edge ], [ %433, %if.end20.i.if.end54.i_crit_edge ], [ %retval.0.i210.i, %vc_invert_attr.exit.i.if.end54.i_crit_edge ], [ %retval.0.i210.i, %if.end.i212.i ], [ %433, %if.else.i135.if.end54.i_crit_edge ]
  %inverse.0.off0.i = phi i1 [ true, %if.end11.i.if.end54.i_crit_edge ], [ true, %if.end20.i.if.end54.i_crit_edge ], [ false, %vc_invert_attr.exit.i.if.end54.i_crit_edge ], [ false, %if.end.i212.i ], [ true, %if.else.i135.if.end54.i_crit_edge ]
  %conv92.i = zext i8 %vc_attr.0.i to i32
  %shl.i152 = shl nuw nsw i32 %conv92.i, 8
  %neg94.i = xor i32 %conv.i128, -1
  %and95.i = and i32 %shl.i152, %neg94.i
  br label %while.cond.i

while.cond.i:                                     ; preds = %if.end130.i, %if.end54.i
  %draw.sroa.15.4 = phi i32 [ %draw.sroa.15.3, %if.end54.i ], [ %draw.sroa.15.6, %if.end130.i ]
  %draw.sroa.9.2 = phi i32 [ %draw.sroa.9.1, %if.end54.i ], [ %storemerge.i, %if.end130.i ]
  %draw.sroa.0.2 = phi i32 [ %draw.sroa.0.1, %if.end54.i ], [ %draw.sroa.0.3, %if.end130.i ]
  %tc.addr.1.i = phi i32 [ %tc.addr.0.i, %if.end54.i ], [ %spec.store.select144.i, %if.end130.i ]
  %next_c.0.i = phi i32 [ %c.0202, %if.end54.i ], [ 32, %if.end130.i ]
  %width.1.i = phi i8 [ %width.0.i, %if.end54.i ], [ 1, %if.end130.i ]
  %464 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %464)
  %bf.load55.i = load i16, ptr %vc_utf.i, align 4
  %465 = and i16 %bf.load55.i, 544
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %465)
  %466 = icmp eq i16 %465, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %draw.sroa.15.4)
  %cmp.i214.i = icmp slt i32 %draw.sroa.15.4, 0
  %or.cond227 = select i1 %466, i1 true, i1 %cmp.i214.i
  br i1 %or.cond227, label %while.cond.i.if.end67.i_crit_edge, label %if.end.i221.i

while.cond.i.if.end67.i_crit_edge:                ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end67.i

if.end.i221.i:                                    ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #23
  %467 = ptrtoint ptr %vc_sw.i.i to i32
  call void @__asan_load4_noabort(i32 %467)
  %468 = load ptr, ptr %vc_sw.i.i, align 4
  %con_putcs.i216.i = getelementptr inbounds %struct.consw, ptr %468, i32 0, i32 6
  %469 = ptrtoint ptr %con_putcs.i216.i to i32
  call void @__asan_load4_noabort(i32 %469)
  %470 = load ptr, ptr %con_putcs.i216.i, align 4
  %471 = inttoptr i32 %draw.sroa.0.2 to ptr
  %sub.ptr.sub.i218.i = sub i32 %draw.sroa.9.2, %draw.sroa.0.2
  %sub.ptr.div.i219.i = ashr exact i32 %sub.ptr.sub.i218.i, 1
  %472 = ptrtoint ptr %y.i.i145 to i32
  call void @__asan_load4_noabort(i32 %472)
  %473 = load i32, ptr %y.i.i145, align 4
  call void %470(ptr noundef %15, ptr noundef %471, i32 noundef %sub.ptr.div.i219.i, i32 noundef %473, i32 noundef %draw.sroa.15.4) #21
  br label %if.end67.i

if.end67.i:                                       ; preds = %if.end.i221.i, %while.cond.i.if.end67.i_crit_edge
  %draw.sroa.15.5 = phi i32 [ %draw.sroa.15.4, %while.cond.i.if.end67.i_crit_edge ], [ -1, %if.end.i221.i ]
  %474 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %474)
  %bf.load69.i = load i16, ptr %vc_utf.i, align 4
  %475 = and i16 %bf.load69.i, 32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %475)
  %tobool73.not.i = icmp eq i16 %475, 0
  br i1 %tobool73.not.i, label %if.end67.i.if.end75.i_crit_edge, label %if.then74.i

if.end67.i.if.end75.i_crit_edge:                  ; preds = %if.end67.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end75.i

if.then74.i:                                      ; preds = %if.end67.i
  %476 = ptrtoint ptr %state.i.i146 to i32
  call void @__asan_load4_noabort(i32 %476)
  %477 = load i32, ptr %state.i.i146, align 4
  %shl.neg.i.i154 = mul i32 %477, -2
  %478 = ptrtoint ptr %vc_pos.i.i147 to i32
  call void @__asan_load4_noabort(i32 %478)
  %479 = load i32, ptr %vc_pos.i.i147, align 4
  %sub.i.i155 = add i32 %shl.neg.i.i154, %479
  store i32 %sub.i.i155, ptr %vc_pos.i.i147, align 4
  store i32 0, ptr %state.i.i146, align 4
  %bf.clear.i.i156 = and i16 %bf.load69.i, -33
  %480 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_store2_noabort(i32 %480)
  store i16 %bf.clear.i.i156, ptr %vc_utf.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param.i.i.i127) #21
  %481 = ptrtoint ptr %param.i.i.i127 to i32
  call void @__asan_store4_noabort(i32 %481)
  store ptr %15, ptr %param.i.i.i127, align 4
  %482 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %482)
  store i32 13, ptr %24, align 4
  %call.i.i.i157 = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 3, ptr noundef nonnull %param.i.i.i127) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param.i.i.i127) #21
  %483 = ptrtoint ptr %y.i.i145 to i32
  call void @__asan_load4_noabort(i32 %483)
  %484 = load i32, ptr %y.i.i145, align 4
  %add.i.i158 = add i32 %484, 1
  %485 = ptrtoint ptr %vc_bottom.i.i148 to i32
  call void @__asan_load4_noabort(i32 %485)
  %486 = load i32, ptr %vc_bottom.i.i148, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i158, i32 %486)
  %cmp.i226.i = icmp eq i32 %add.i.i158, %486
  br i1 %cmp.i226.i, label %if.then.i227.i, label %if.else.i.i160

if.then.i227.i:                                   ; preds = %if.then74.i
  call void @__sanitizer_cov_trace_pc() #23
  %487 = ptrtoint ptr %vc_top.i.i151 to i32
  call void @__asan_load4_noabort(i32 %487)
  %488 = load i32, ptr %vc_top.i.i151, align 4
  call fastcc void @con_scroll(ptr noundef %15, i32 noundef %488, i32 noundef %add.i.i158, i32 noundef 0, i32 noundef 1) #21
  br label %lf.exit.i163

if.else.i.i160:                                   ; preds = %if.then74.i
  %489 = ptrtoint ptr %vc_rows.i.i149 to i32
  call void @__asan_load4_noabort(i32 %489)
  %490 = load i32, ptr %vc_rows.i.i149, align 4
  %sub.i228.i = add i32 %490, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %484, i32 %sub.i228.i)
  %cmp4.i.i159 = icmp ult i32 %484, %sub.i228.i
  br i1 %cmp4.i.i159, label %if.then5.i.i162, label %if.else.i.i160.lf.exit.i163_crit_edge

if.else.i.i160.lf.exit.i163_crit_edge:            ; preds = %if.else.i.i160
  call void @__sanitizer_cov_trace_pc() #23
  br label %lf.exit.i163

if.then5.i.i162:                                  ; preds = %if.else.i.i160
  call void @__sanitizer_cov_trace_pc() #23
  %491 = ptrtoint ptr %y.i.i145 to i32
  call void @__asan_store4_noabort(i32 %491)
  store i32 %add.i.i158, ptr %y.i.i145, align 4
  %492 = ptrtoint ptr %vc_size_row.i.i150 to i32
  call void @__asan_load4_noabort(i32 %492)
  %493 = load i32, ptr %vc_size_row.i.i150, align 4
  %494 = ptrtoint ptr %vc_pos.i.i147 to i32
  call void @__asan_load4_noabort(i32 %494)
  %495 = load i32, ptr %vc_pos.i.i147, align 4
  %add8.i.i161 = add i32 %495, %493
  store i32 %add8.i.i161, ptr %vc_pos.i.i147, align 4
  br label %lf.exit.i163

lf.exit.i163:                                     ; preds = %if.then5.i.i162, %if.else.i.i160.lf.exit.i163_crit_edge, %if.then.i227.i
  %496 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %496)
  %bf.load.i231.i = load i16, ptr %vc_utf.i, align 4
  %bf.clear.i232.i = and i16 %bf.load.i231.i, -33
  store i16 %bf.clear.i232.i, ptr %vc_utf.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param.i.i224.i) #21
  %497 = ptrtoint ptr %param.i.i224.i to i32
  call void @__asan_store4_noabort(i32 %497)
  store ptr %15, ptr %param.i.i224.i, align 4
  %498 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %498)
  store i32 10, ptr %25, align 4
  %call.i.i233.i = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 3, ptr noundef nonnull %param.i.i224.i) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param.i.i224.i) #21
  br label %if.end75.i

if.end75.i:                                       ; preds = %lf.exit.i163, %if.end67.i.if.end75.i_crit_edge
  %499 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %499)
  %bf.load77.i = load i16, ptr %vc_utf.i, align 4
  %500 = and i16 %bf.load77.i, 512
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %500)
  %tobool81.not.i = icmp eq i16 %500, 0
  br i1 %tobool81.not.i, label %if.end75.i.if.end83.i_crit_edge, label %if.then82.i

if.end75.i.if.end83.i_crit_edge:                  ; preds = %if.end75.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end83.i

if.then82.i:                                      ; preds = %if.end75.i
  call void @__sanitizer_cov_trace_pc() #23
  call fastcc void @insert_char(ptr noundef %15, i32 noundef 1) #21
  br label %if.end83.i

if.end83.i:                                       ; preds = %if.then82.i, %if.end75.i.if.end83.i_crit_edge
  %501 = ptrtoint ptr %vc_uni_screen.i.i to i32
  call void @__asan_load4_noabort(i32 %501)
  %502 = load ptr, ptr %vc_uni_screen.i.i, align 4
  %tobool.not.i234.i = icmp eq ptr %502, null
  br i1 %tobool.not.i234.i, label %if.end83.i.vc_uniscr_putc.exit.i_crit_edge, label %if.then.i237.i

if.end83.i.vc_uniscr_putc.exit.i_crit_edge:       ; preds = %if.end83.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_putc.exit.i

if.then.i237.i:                                   ; preds = %if.end83.i
  call void @__sanitizer_cov_trace_pc() #23
  %503 = ptrtoint ptr %y.i.i145 to i32
  call void @__asan_load4_noabort(i32 %503)
  %504 = load i32, ptr %y.i.i145, align 4
  %arrayidx.i.i164 = getelementptr [0 x ptr], ptr %502, i32 0, i32 %504
  %505 = ptrtoint ptr %arrayidx.i.i164 to i32
  call void @__asan_load4_noabort(i32 %505)
  %506 = load ptr, ptr %arrayidx.i.i164, align 4
  %507 = ptrtoint ptr %state.i.i146 to i32
  call void @__asan_load4_noabort(i32 %507)
  %508 = load i32, ptr %state.i.i146, align 4
  %arrayidx2.i.i = getelementptr i32, ptr %506, i32 %508
  %509 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_store4_noabort(i32 %509)
  store i32 %next_c.0.i, ptr %arrayidx2.i.i, align 4
  br label %vc_uniscr_putc.exit.i

vc_uniscr_putc.exit.i:                            ; preds = %if.then.i237.i, %if.end83.i.vc_uniscr_putc.exit.i_crit_edge
  br i1 %tobool.not.i129, label %vc_uniscr_putc.exit.i.if.end91.i_crit_edge, label %if.then85.i

vc_uniscr_putc.exit.i.if.end91.i_crit_edge:       ; preds = %vc_uniscr_putc.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end91.i

if.then85.i:                                      ; preds = %vc_uniscr_putc.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  %and86.i = and i32 %tc.addr.1.i, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and86.i)
  %tobool87.not.i = icmp eq i32 %and86.i, 0
  %spec.select208.i = select i1 %tobool87.not.i, i32 0, i32 %conv.i128
  %and90.i = and i32 %tc.addr.1.i, 255
  %or.i165 = or i32 %spec.select208.i, %and90.i
  br label %if.end91.i

if.end91.i:                                       ; preds = %if.then85.i, %vc_uniscr_putc.exit.i.if.end91.i_crit_edge
  %tc.addr.2.i = phi i32 [ %or.i165, %if.then85.i ], [ %tc.addr.1.i, %vc_uniscr_putc.exit.i.if.end91.i_crit_edge ]
  %or96.i = or i32 %tc.addr.2.i, %and95.i
  %conv97.i = trunc i32 %or96.i to i16
  %510 = ptrtoint ptr %vc_pos.i.i147 to i32
  call void @__asan_load4_noabort(i32 %510)
  %511 = load i32, ptr %vc_pos.i.i147, align 4
  %512 = inttoptr i32 %511 to ptr
  %513 = ptrtoint ptr %512 to i32
  call void @__asan_store2_noabort(i32 %513)
  store i16 %conv97.i, ptr %512, align 2
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %514 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %514)
  %tobool.not.i.i.i = icmp eq i32 %514, 0
  br i1 %tobool.not.i.i.i, label %land.lhs.true.i.i.i, label %if.end91.i.con_is_visible.exit.i.i_crit_edge

if.end91.i.con_is_visible.exit.i.i_crit_edge:     ; preds = %if.end91.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i.i

land.lhs.true.i.i.i:                              ; preds = %if.end91.i
  %call1.i.i.i = call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool2.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool2.not.i.i.i, label %land.rhs.i.i.i, label %land.lhs.true.i.i.i.con_is_visible.exit.i.i_crit_edge

land.lhs.true.i.i.i.con_is_visible.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i.i

land.rhs.i.i.i:                                   ; preds = %land.lhs.true.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %515 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %515)
  %tobool3.not.i.i.i = icmp eq i32 %515, 0
  br i1 %tobool3.not.i.i.i, label %do.end.i.i.i, label %land.rhs.i.i.i.con_is_visible.exit.i.i_crit_edge, !prof !365

land.rhs.i.i.i.con_is_visible.exit.i.i_crit_edge: ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i.i

do.end.i.i.i:                                     ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4012, i32 noundef 9, ptr noundef null) #21
  br label %con_is_visible.exit.i.i

con_is_visible.exit.i.i:                          ; preds = %do.end.i.i.i, %land.rhs.i.i.i.con_is_visible.exit.i.i_crit_edge, %land.lhs.true.i.i.i.con_is_visible.exit.i.i_crit_edge, %if.end91.i.con_is_visible.exit.i.i_crit_edge
  %516 = ptrtoint ptr %vc_display_fg.i.i.i to i32
  call void @__asan_load4_noabort(i32 %516)
  %517 = load ptr, ptr %vc_display_fg.i.i.i, align 4
  %518 = ptrtoint ptr %517 to i32
  call void @__asan_load4_noabort(i32 %518)
  %519 = load ptr, ptr %517, align 4
  %cmp.i.i.i = icmp eq ptr %519, %15
  br i1 %cmp.i.i.i, label %con_should_update.exit.i, label %con_is_visible.exit.i.i.if.end107.i_crit_edge

con_is_visible.exit.i.i.if.end107.i_crit_edge:    ; preds = %con_is_visible.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end107.i

con_should_update.exit.i:                         ; preds = %con_is_visible.exit.i.i
  %520 = load i32, ptr @console_blanked, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %520)
  %tobool.not.i239.i = icmp eq i32 %520, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %draw.sroa.15.5)
  %cmp101.i = icmp slt i32 %draw.sroa.15.5, 0
  %or.cond228 = select i1 %tobool.not.i239.i, i1 %cmp101.i, i1 false
  br i1 %or.cond228, label %if.then103.i, label %con_should_update.exit.i.if.end107.i_crit_edge

con_should_update.exit.i.if.end107.i_crit_edge:   ; preds = %con_should_update.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end107.i

if.then103.i:                                     ; preds = %con_should_update.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  %521 = ptrtoint ptr %state.i.i146 to i32
  call void @__asan_load4_noabort(i32 %521)
  %522 = load i32, ptr %state.i.i146, align 4
  %523 = ptrtoint ptr %vc_pos.i.i147 to i32
  call void @__asan_load4_noabort(i32 %523)
  %524 = load i32, ptr %vc_pos.i.i147, align 4
  br label %if.end107.i

if.end107.i:                                      ; preds = %if.then103.i, %con_should_update.exit.i.if.end107.i_crit_edge, %con_is_visible.exit.i.i.if.end107.i_crit_edge
  %draw.sroa.15.6 = phi i32 [ %522, %if.then103.i ], [ %draw.sroa.15.5, %con_should_update.exit.i.if.end107.i_crit_edge ], [ %draw.sroa.15.5, %con_is_visible.exit.i.i.if.end107.i_crit_edge ]
  %draw.sroa.0.3 = phi i32 [ %524, %if.then103.i ], [ %draw.sroa.0.2, %con_should_update.exit.i.if.end107.i_crit_edge ], [ %draw.sroa.0.2, %con_is_visible.exit.i.i.if.end107.i_crit_edge ]
  %525 = ptrtoint ptr %state.i.i146 to i32
  call void @__asan_load4_noabort(i32 %525)
  %526 = load i32, ptr %state.i.i146, align 4
  %527 = ptrtoint ptr %vc_cols.i153 to i32
  call void @__asan_load4_noabort(i32 %527)
  %528 = load i32, ptr %vc_cols.i153, align 4
  %sub.i166 = add i32 %528, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %526, i32 %sub.i166)
  %cmp110.i = icmp eq i32 %526, %sub.i166
  br i1 %cmp110.i, label %if.then112.i, label %if.else121.i

if.then112.i:                                     ; preds = %if.end107.i
  call void @__sanitizer_cov_trace_pc() #23
  %529 = ptrtoint ptr %vc_utf.i to i32
  call void @__asan_load2_noabort(i32 %529)
  %bf.load113.i = load i16, ptr %vc_utf.i, align 4
  %530 = lshr i16 %bf.load113.i, 6
  %bf.shl.i = and i16 %530, 32
  %bf.clear119.i = and i16 %bf.load113.i, -33
  %bf.set.i167 = or i16 %bf.shl.i, %bf.clear119.i
  store i16 %bf.set.i167, ptr %vc_utf.i, align 4
  %531 = ptrtoint ptr %vc_pos.i.i147 to i32
  call void @__asan_load4_noabort(i32 %531)
  %532 = load i32, ptr %vc_pos.i.i147, align 4
  %add.i168 = add i32 %532, 2
  br label %if.end127.i

if.else121.i:                                     ; preds = %if.end107.i
  call void @__sanitizer_cov_trace_pc() #23
  %inc.i169 = add i32 %526, 1
  %533 = ptrtoint ptr %state.i.i146 to i32
  call void @__asan_store4_noabort(i32 %533)
  store i32 %inc.i169, ptr %state.i.i146, align 4
  %534 = ptrtoint ptr %vc_pos.i.i147 to i32
  call void @__asan_load4_noabort(i32 %534)
  %535 = load i32, ptr %vc_pos.i.i147, align 4
  %add125.i = add i32 %535, 2
  store i32 %add125.i, ptr %vc_pos.i.i147, align 4
  br label %if.end127.i

if.end127.i:                                      ; preds = %if.else121.i, %if.then112.i
  %storemerge.i = phi i32 [ %add125.i, %if.else121.i ], [ %add.i168, %if.then112.i ]
  %tobool128.not.i = icmp eq i8 %width.1.i, 1
  br i1 %tobool128.not.i, label %while.end.i, label %if.end130.i

if.end130.i:                                      ; preds = %if.end127.i
  call void @__sanitizer_cov_trace_pc() #23
  %call131.i = call i32 @conv_uni_to_pc(ptr noundef %15, i32 noundef 32) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call131.i)
  %cmp132.i = icmp slt i32 %call131.i, 0
  %spec.store.select144.i = select i1 %cmp132.i, i32 32, i32 %call131.i
  br label %while.cond.i

while.end.i:                                      ; preds = %if.end127.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param.i.i126) #21
  %536 = ptrtoint ptr %param.i.i126 to i32
  call void @__asan_store4_noabort(i32 %536)
  store ptr %15, ptr %param.i.i126, align 4
  %537 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %537)
  store i32 %c.0202, ptr %26, align 4
  %call.i240.i = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 3, ptr noundef nonnull %param.i.i126) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param.i.i126) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %draw.sroa.15.6)
  %cmp.i242.i = icmp slt i32 %draw.sroa.15.6, 0
  %or.cond229 = select i1 %inverse.0.off0.i, i1 true, i1 %cmp.i242.i
  br i1 %or.cond229, label %while.end.i.if.end60_crit_edge, label %if.end.i249.i

while.end.i.if.end60_crit_edge:                   ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end60

if.end.i249.i:                                    ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %538 = ptrtoint ptr %vc_sw.i.i to i32
  call void @__asan_load4_noabort(i32 %538)
  %539 = load ptr, ptr %vc_sw.i.i, align 4
  %con_putcs.i244.i = getelementptr inbounds %struct.consw, ptr %539, i32 0, i32 6
  %540 = ptrtoint ptr %con_putcs.i244.i to i32
  call void @__asan_load4_noabort(i32 %540)
  %541 = load ptr, ptr %con_putcs.i244.i, align 4
  %542 = inttoptr i32 %draw.sroa.0.3 to ptr
  %sub.ptr.sub.i246.i = sub i32 %storemerge.i, %draw.sroa.0.3
  %sub.ptr.div.i247.i = ashr exact i32 %sub.ptr.sub.i246.i, 1
  %543 = ptrtoint ptr %y.i.i145 to i32
  call void @__asan_load4_noabort(i32 %543)
  %544 = load i32, ptr %y.i.i145, align 4
  call void %541(ptr noundef %15, ptr noundef %542, i32 noundef %sub.ptr.div.i247.i, i32 noundef %544, i32 noundef %draw.sroa.15.6) #21
  br label %if.end60

if.end60:                                         ; preds = %if.end.i249.i, %while.end.i.if.end60_crit_edge
  %draw.sroa.15.7.ph = phi i32 [ %draw.sroa.15.6, %while.end.i.if.end60_crit_edge ], [ -1, %if.end.i249.i ]
  br i1 %tobool61.not, label %if.end60.cleanup_crit_edge, label %if.end60.rescan_last_byte_crit_edge

if.end60.rescan_last_byte_crit_edge:              ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #23
  br label %rescan_last_byte

if.end60.cleanup_crit_edge:                       ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

cleanup:                                          ; preds = %if.end60.cleanup_crit_edge, %if.then15.i.cleanup_crit_edge, %sw.default.i, %sw.bb694.i, %sw.bb692.i, %if.then679.i, %sw.bb675.i.cleanup_crit_edge, %sw.bb673.i, %sw.bb667.i, %sw.bb663.i, %sw.bb661.i.cleanup_crit_edge, %if.end659.i, %sw.bb652.i.cleanup_crit_edge, %sw.bb650.i, %sw.bb647.i, %sw.bb644.i, %sw.bb643.i, %sw.bb642.i, %if.then635.i, %land.lhs.true629.i.cleanup_crit_edge, %if.end622.i.cleanup_crit_edge, %if.then593.i, %sw.bb588.i.cleanup_crit_edge, %sw.bb587.i, %if.then582.i, %if.then572.i, %land.lhs.true567.i.cleanup_crit_edge, %sw.bb563.i.cleanup_crit_edge, %if.then561.i, %sw.bb557.i.cleanup_crit_edge, %sw.bb554.i, %sw.bb551.i, %sw.bb548.i, %sw.bb545.i, %sw.bb542.i, %if.end537.i, %if.end516.i, %if.end502.i, %if.end488.i, %if.end472.i, %if.end456.i, %if.end440.i, %if.end424.i, %if.end412.i, %if.end404.i.cleanup_crit_edge, %if.then399.i, %if.then387.i, %if.then381.i, %if.then376.i.cleanup_crit_edge, %sw.bb368.i.cleanup_crit_edge, %if.else364.i, %if.then356.i, %if.else340.i, %if.then330.i, %if.then316.i, %sw.bb308.i.cleanup_crit_edge, %if.then306.i, %sw.bb300.i.cleanup_crit_edge, %if.then296.i, %if.then279.i, %if.then270.i, %sw.bb253.i, %sw.bb248.i, %sw.bb243.i, %sw.bb239.i, %if.then236.i, %if.else215.i, %if.then165.i, %if.then155.i.cleanup_crit_edge, %if.else143.i, %if.then141.i, %if.then133.i, %for.end.i, %sw.bb114.i, %sw.bb111.i, %sw.bb110.i, %sw.bb108.i, %sw.bb106.i, %sw.bb104.i, %sw.bb103.i, %sw.bb102.i, %sw.bb101.i, %sw.bb99.i, %if.then93.i, %sw.bb88.i.cleanup_crit_edge, %sw.bb87.i, %sw.bb86.i, %sw.bb85.i, %sw.bb83.i, %sw.bb81.i, %sw.bb79.i, %sw.bb77.i, %sw.bb75.i, %sw.bb73.i.cleanup_crit_edge, %sw.epilog.i.cleanup_crit_edge, %sw.epilog.i.cleanup_crit_edge375, %sw.epilog.i.cleanup_crit_edge376, %sw.epilog.i.cleanup_crit_edge377, %sw.bb70.i, %sw.bb67.i, %sw.bb65.i, %sw.bb49.i, %sw.bb41.i, %sw.bb40.i, %lf.exit.i.cleanup_crit_edge, %if.end29.i, %if.then.i.i116, %sw.bb12.i.cleanup_crit_edge, %if.then8.i, %if.else.i113.cleanup_crit_edge, %if.then6.i111, %if.end.i110.cleanup_crit_edge, %if.end.i110.cleanup_crit_edge374, %con_flush.exit.cleanup_crit_edge, %if.end46.cleanup_crit_edge, %vc_translate.exit.cleanup_crit_edge, %if.then55.i.i, %if.then48.i.i, %if.then41.i.i, %if.then34.i.i, %if.then28.i.i, %if.end.i.i.cleanup_crit_edge
  %draw.sroa.15.8 = phi i32 [ %draw.sroa.15.2, %con_flush.exit.cleanup_crit_edge ], [ %draw.sroa.15.2, %if.end.i110.cleanup_crit_edge ], [ %draw.sroa.15.2, %if.end.i110.cleanup_crit_edge374 ], [ %draw.sroa.15.2, %if.then6.i111 ], [ %draw.sroa.15.2, %if.else.i113.cleanup_crit_edge ], [ %draw.sroa.15.2, %if.then8.i ], [ %draw.sroa.15.2, %sw.bb12.i.cleanup_crit_edge ], [ %draw.sroa.15.2, %if.then.i.i116 ], [ %draw.sroa.15.2, %if.end29.i ], [ %draw.sroa.15.2, %lf.exit.i.cleanup_crit_edge ], [ %draw.sroa.15.2, %sw.bb40.i ], [ %draw.sroa.15.2, %sw.bb41.i ], [ %draw.sroa.15.2, %sw.bb49.i ], [ %draw.sroa.15.2, %sw.bb65.i ], [ %draw.sroa.15.2, %sw.bb67.i ], [ %draw.sroa.15.2, %sw.bb70.i ], [ %draw.sroa.15.2, %sw.epilog.i.cleanup_crit_edge ], [ %draw.sroa.15.2, %sw.epilog.i.cleanup_crit_edge375 ], [ %draw.sroa.15.2, %sw.epilog.i.cleanup_crit_edge376 ], [ %draw.sroa.15.2, %sw.epilog.i.cleanup_crit_edge377 ], [ %draw.sroa.15.2, %sw.bb73.i.cleanup_crit_edge ], [ %draw.sroa.15.2, %sw.bb75.i ], [ %draw.sroa.15.2, %sw.bb77.i ], [ %draw.sroa.15.2, %sw.bb79.i ], [ %draw.sroa.15.2, %sw.bb81.i ], [ %draw.sroa.15.2, %sw.bb83.i ], [ %draw.sroa.15.2, %sw.bb85.i ], [ %draw.sroa.15.2, %sw.bb86.i ], [ %draw.sroa.15.2, %sw.bb87.i ], [ %draw.sroa.15.2, %sw.bb88.i.cleanup_crit_edge ], [ %draw.sroa.15.2, %if.then93.i ], [ %draw.sroa.15.2, %sw.bb99.i ], [ %draw.sroa.15.2, %sw.bb101.i ], [ %draw.sroa.15.2, %sw.bb102.i ], [ %draw.sroa.15.2, %sw.bb103.i ], [ %draw.sroa.15.2, %sw.bb104.i ], [ %draw.sroa.15.2, %sw.bb106.i ], [ %draw.sroa.15.2, %sw.bb108.i ], [ %draw.sroa.15.2, %sw.bb110.i ], [ %draw.sroa.15.2, %sw.bb111.i ], [ %draw.sroa.15.2, %sw.bb114.i ], [ %draw.sroa.15.2, %for.end.i ], [ %draw.sroa.15.2, %if.then133.i ], [ %draw.sroa.15.2, %if.then141.i ], [ %draw.sroa.15.2, %if.else143.i ], [ %draw.sroa.15.2, %if.then155.i.cleanup_crit_edge ], [ %draw.sroa.15.2, %if.then165.i ], [ %draw.sroa.15.2, %if.else215.i ], [ %draw.sroa.15.2, %if.then236.i ], [ %draw.sroa.15.2, %sw.bb239.i ], [ %draw.sroa.15.2, %sw.bb243.i ], [ %draw.sroa.15.2, %sw.bb248.i ], [ %draw.sroa.15.2, %sw.bb253.i ], [ %draw.sroa.15.2, %if.then270.i ], [ %draw.sroa.15.2, %if.then279.i ], [ %draw.sroa.15.2, %if.then296.i ], [ %draw.sroa.15.2, %sw.bb300.i.cleanup_crit_edge ], [ %draw.sroa.15.2, %if.then306.i ], [ %draw.sroa.15.2, %sw.bb308.i.cleanup_crit_edge ], [ %draw.sroa.15.2, %if.then316.i ], [ %draw.sroa.15.2, %if.then330.i ], [ %draw.sroa.15.2, %if.else340.i ], [ %draw.sroa.15.2, %if.then356.i ], [ %draw.sroa.15.2, %if.else364.i ], [ %draw.sroa.15.2, %sw.bb368.i.cleanup_crit_edge ], [ %draw.sroa.15.2, %if.then376.i.cleanup_crit_edge ], [ %draw.sroa.15.2, %if.then381.i ], [ %draw.sroa.15.2, %if.then387.i ], [ %draw.sroa.15.2, %if.then399.i ], [ %draw.sroa.15.2, %if.end404.i.cleanup_crit_edge ], [ %draw.sroa.15.2, %if.end412.i ], [ %draw.sroa.15.2, %if.end424.i ], [ %draw.sroa.15.2, %if.end440.i ], [ %draw.sroa.15.2, %if.end456.i ], [ %draw.sroa.15.2, %if.end472.i ], [ %draw.sroa.15.2, %if.end488.i ], [ %draw.sroa.15.2, %if.end502.i ], [ %draw.sroa.15.2, %if.end516.i ], [ %draw.sroa.15.2, %if.end537.i ], [ %draw.sroa.15.2, %sw.bb542.i ], [ %draw.sroa.15.2, %sw.bb545.i ], [ %draw.sroa.15.2, %sw.bb548.i ], [ %draw.sroa.15.2, %sw.bb551.i ], [ %draw.sroa.15.2, %sw.bb554.i ], [ %draw.sroa.15.2, %sw.bb557.i.cleanup_crit_edge ], [ %draw.sroa.15.2, %if.then561.i ], [ %draw.sroa.15.2, %sw.bb563.i.cleanup_crit_edge ], [ %draw.sroa.15.2, %land.lhs.true567.i.cleanup_crit_edge ], [ %draw.sroa.15.2, %if.then572.i ], [ %draw.sroa.15.2, %if.then582.i ], [ %draw.sroa.15.2, %sw.bb587.i ], [ %draw.sroa.15.2, %sw.bb588.i.cleanup_crit_edge ], [ %draw.sroa.15.2, %if.then593.i ], [ %draw.sroa.15.2, %if.end622.i.cleanup_crit_edge ], [ %draw.sroa.15.2, %land.lhs.true629.i.cleanup_crit_edge ], [ %draw.sroa.15.2, %if.then635.i ], [ %draw.sroa.15.2, %sw.bb642.i ], [ %draw.sroa.15.2, %sw.bb643.i ], [ %draw.sroa.15.2, %sw.bb644.i ], [ %draw.sroa.15.2, %sw.bb647.i ], [ %draw.sroa.15.2, %sw.bb650.i ], [ %draw.sroa.15.2, %sw.bb652.i.cleanup_crit_edge ], [ %draw.sroa.15.2, %if.end659.i ], [ %draw.sroa.15.2, %sw.bb661.i.cleanup_crit_edge ], [ %draw.sroa.15.2, %sw.bb663.i ], [ %draw.sroa.15.2, %sw.bb667.i ], [ %draw.sroa.15.2, %sw.bb673.i ], [ %draw.sroa.15.2, %sw.bb675.i.cleanup_crit_edge ], [ %draw.sroa.15.2, %if.then679.i ], [ %draw.sroa.15.2, %sw.bb692.i ], [ %draw.sroa.15.2, %sw.bb694.i ], [ %draw.sroa.15.2, %sw.default.i ], [ %draw.sroa.15.1, %if.then28.i.i ], [ %draw.sroa.15.1, %if.then41.i.i ], [ %draw.sroa.15.1, %if.then55.i.i ], [ %draw.sroa.15.1, %if.then48.i.i ], [ %draw.sroa.15.1, %if.then34.i.i ], [ %draw.sroa.15.1, %if.end.i.i.cleanup_crit_edge ], [ %draw.sroa.15.1, %if.then15.i.cleanup_crit_edge ], [ %draw.sroa.15.7.ph, %if.end60.cleanup_crit_edge ], [ %draw.sroa.15.1, %if.end46.cleanup_crit_edge ], [ %draw.sroa.15.1, %vc_translate.exit.cleanup_crit_edge ]
  %draw.sroa.9.4 = phi i32 [ %draw.sroa.9.1, %con_flush.exit.cleanup_crit_edge ], [ %draw.sroa.9.1, %if.end.i110.cleanup_crit_edge ], [ %draw.sroa.9.1, %if.end.i110.cleanup_crit_edge374 ], [ %draw.sroa.9.1, %if.then6.i111 ], [ %draw.sroa.9.1, %if.else.i113.cleanup_crit_edge ], [ %draw.sroa.9.1, %if.then8.i ], [ %draw.sroa.9.1, %sw.bb12.i.cleanup_crit_edge ], [ %draw.sroa.9.1, %if.then.i.i116 ], [ %draw.sroa.9.1, %if.end29.i ], [ %draw.sroa.9.1, %lf.exit.i.cleanup_crit_edge ], [ %draw.sroa.9.1, %sw.bb40.i ], [ %draw.sroa.9.1, %sw.bb41.i ], [ %draw.sroa.9.1, %sw.bb49.i ], [ %draw.sroa.9.1, %sw.bb65.i ], [ %draw.sroa.9.1, %sw.bb67.i ], [ %draw.sroa.9.1, %sw.bb70.i ], [ %draw.sroa.9.1, %sw.epilog.i.cleanup_crit_edge ], [ %draw.sroa.9.1, %sw.epilog.i.cleanup_crit_edge375 ], [ %draw.sroa.9.1, %sw.epilog.i.cleanup_crit_edge376 ], [ %draw.sroa.9.1, %sw.epilog.i.cleanup_crit_edge377 ], [ %draw.sroa.9.1, %sw.bb73.i.cleanup_crit_edge ], [ %draw.sroa.9.1, %sw.bb75.i ], [ %draw.sroa.9.1, %sw.bb77.i ], [ %draw.sroa.9.1, %sw.bb79.i ], [ %draw.sroa.9.1, %sw.bb81.i ], [ %draw.sroa.9.1, %sw.bb83.i ], [ %draw.sroa.9.1, %sw.bb85.i ], [ %draw.sroa.9.1, %sw.bb86.i ], [ %draw.sroa.9.1, %sw.bb87.i ], [ %draw.sroa.9.1, %sw.bb88.i.cleanup_crit_edge ], [ %draw.sroa.9.1, %if.then93.i ], [ %draw.sroa.9.1, %sw.bb99.i ], [ %draw.sroa.9.1, %sw.bb101.i ], [ %draw.sroa.9.1, %sw.bb102.i ], [ %draw.sroa.9.1, %sw.bb103.i ], [ %draw.sroa.9.1, %sw.bb104.i ], [ %draw.sroa.9.1, %sw.bb106.i ], [ %draw.sroa.9.1, %sw.bb108.i ], [ %draw.sroa.9.1, %sw.bb110.i ], [ %draw.sroa.9.1, %sw.bb111.i ], [ %draw.sroa.9.1, %sw.bb114.i ], [ %draw.sroa.9.1, %for.end.i ], [ %draw.sroa.9.1, %if.then133.i ], [ %draw.sroa.9.1, %if.then141.i ], [ %draw.sroa.9.1, %if.else143.i ], [ %draw.sroa.9.1, %if.then155.i.cleanup_crit_edge ], [ %draw.sroa.9.1, %if.then165.i ], [ %draw.sroa.9.1, %if.else215.i ], [ %draw.sroa.9.1, %if.then236.i ], [ %draw.sroa.9.1, %sw.bb239.i ], [ %draw.sroa.9.1, %sw.bb243.i ], [ %draw.sroa.9.1, %sw.bb248.i ], [ %draw.sroa.9.1, %sw.bb253.i ], [ %draw.sroa.9.1, %if.then270.i ], [ %draw.sroa.9.1, %if.then279.i ], [ %draw.sroa.9.1, %if.then296.i ], [ %draw.sroa.9.1, %sw.bb300.i.cleanup_crit_edge ], [ %draw.sroa.9.1, %if.then306.i ], [ %draw.sroa.9.1, %sw.bb308.i.cleanup_crit_edge ], [ %draw.sroa.9.1, %if.then316.i ], [ %draw.sroa.9.1, %if.then330.i ], [ %draw.sroa.9.1, %if.else340.i ], [ %draw.sroa.9.1, %if.then356.i ], [ %draw.sroa.9.1, %if.else364.i ], [ %draw.sroa.9.1, %sw.bb368.i.cleanup_crit_edge ], [ %draw.sroa.9.1, %if.then376.i.cleanup_crit_edge ], [ %draw.sroa.9.1, %if.then381.i ], [ %draw.sroa.9.1, %if.then387.i ], [ %draw.sroa.9.1, %if.then399.i ], [ %draw.sroa.9.1, %if.end404.i.cleanup_crit_edge ], [ %draw.sroa.9.1, %if.end412.i ], [ %draw.sroa.9.1, %if.end424.i ], [ %draw.sroa.9.1, %if.end440.i ], [ %draw.sroa.9.1, %if.end456.i ], [ %draw.sroa.9.1, %if.end472.i ], [ %draw.sroa.9.1, %if.end488.i ], [ %draw.sroa.9.1, %if.end502.i ], [ %draw.sroa.9.1, %if.end516.i ], [ %draw.sroa.9.1, %if.end537.i ], [ %draw.sroa.9.1, %sw.bb542.i ], [ %draw.sroa.9.1, %sw.bb545.i ], [ %draw.sroa.9.1, %sw.bb548.i ], [ %draw.sroa.9.1, %sw.bb551.i ], [ %draw.sroa.9.1, %sw.bb554.i ], [ %draw.sroa.9.1, %sw.bb557.i.cleanup_crit_edge ], [ %draw.sroa.9.1, %if.then561.i ], [ %draw.sroa.9.1, %sw.bb563.i.cleanup_crit_edge ], [ %draw.sroa.9.1, %land.lhs.true567.i.cleanup_crit_edge ], [ %draw.sroa.9.1, %if.then572.i ], [ %draw.sroa.9.1, %if.then582.i ], [ %draw.sroa.9.1, %sw.bb587.i ], [ %draw.sroa.9.1, %sw.bb588.i.cleanup_crit_edge ], [ %draw.sroa.9.1, %if.then593.i ], [ %draw.sroa.9.1, %if.end622.i.cleanup_crit_edge ], [ %draw.sroa.9.1, %land.lhs.true629.i.cleanup_crit_edge ], [ %draw.sroa.9.1, %if.then635.i ], [ %draw.sroa.9.1, %sw.bb642.i ], [ %draw.sroa.9.1, %sw.bb643.i ], [ %draw.sroa.9.1, %sw.bb644.i ], [ %draw.sroa.9.1, %sw.bb647.i ], [ %draw.sroa.9.1, %sw.bb650.i ], [ %draw.sroa.9.1, %sw.bb652.i.cleanup_crit_edge ], [ %draw.sroa.9.1, %if.end659.i ], [ %draw.sroa.9.1, %sw.bb661.i.cleanup_crit_edge ], [ %draw.sroa.9.1, %sw.bb663.i ], [ %draw.sroa.9.1, %sw.bb667.i ], [ %draw.sroa.9.1, %sw.bb673.i ], [ %draw.sroa.9.1, %sw.bb675.i.cleanup_crit_edge ], [ %draw.sroa.9.1, %if.then679.i ], [ %draw.sroa.9.1, %sw.bb692.i ], [ %draw.sroa.9.1, %sw.bb694.i ], [ %draw.sroa.9.1, %sw.default.i ], [ %draw.sroa.9.1, %if.then28.i.i ], [ %draw.sroa.9.1, %if.then41.i.i ], [ %draw.sroa.9.1, %if.then55.i.i ], [ %draw.sroa.9.1, %if.then48.i.i ], [ %draw.sroa.9.1, %if.then34.i.i ], [ %draw.sroa.9.1, %if.end.i.i.cleanup_crit_edge ], [ %draw.sroa.9.1, %if.then15.i.cleanup_crit_edge ], [ %storemerge.i, %if.end60.cleanup_crit_edge ], [ %draw.sroa.9.1, %if.end46.cleanup_crit_edge ], [ %draw.sroa.9.1, %vc_translate.exit.cleanup_crit_edge ]
  %draw.sroa.0.5 = phi i32 [ %draw.sroa.0.1, %con_flush.exit.cleanup_crit_edge ], [ %draw.sroa.0.1, %if.end.i110.cleanup_crit_edge ], [ %draw.sroa.0.1, %if.end.i110.cleanup_crit_edge374 ], [ %draw.sroa.0.1, %if.then6.i111 ], [ %draw.sroa.0.1, %if.else.i113.cleanup_crit_edge ], [ %draw.sroa.0.1, %if.then8.i ], [ %draw.sroa.0.1, %sw.bb12.i.cleanup_crit_edge ], [ %draw.sroa.0.1, %if.then.i.i116 ], [ %draw.sroa.0.1, %if.end29.i ], [ %draw.sroa.0.1, %lf.exit.i.cleanup_crit_edge ], [ %draw.sroa.0.1, %sw.bb40.i ], [ %draw.sroa.0.1, %sw.bb41.i ], [ %draw.sroa.0.1, %sw.bb49.i ], [ %draw.sroa.0.1, %sw.bb65.i ], [ %draw.sroa.0.1, %sw.bb67.i ], [ %draw.sroa.0.1, %sw.bb70.i ], [ %draw.sroa.0.1, %sw.epilog.i.cleanup_crit_edge ], [ %draw.sroa.0.1, %sw.epilog.i.cleanup_crit_edge375 ], [ %draw.sroa.0.1, %sw.epilog.i.cleanup_crit_edge376 ], [ %draw.sroa.0.1, %sw.epilog.i.cleanup_crit_edge377 ], [ %draw.sroa.0.1, %sw.bb73.i.cleanup_crit_edge ], [ %draw.sroa.0.1, %sw.bb75.i ], [ %draw.sroa.0.1, %sw.bb77.i ], [ %draw.sroa.0.1, %sw.bb79.i ], [ %draw.sroa.0.1, %sw.bb81.i ], [ %draw.sroa.0.1, %sw.bb83.i ], [ %draw.sroa.0.1, %sw.bb85.i ], [ %draw.sroa.0.1, %sw.bb86.i ], [ %draw.sroa.0.1, %sw.bb87.i ], [ %draw.sroa.0.1, %sw.bb88.i.cleanup_crit_edge ], [ %draw.sroa.0.1, %if.then93.i ], [ %draw.sroa.0.1, %sw.bb99.i ], [ %draw.sroa.0.1, %sw.bb101.i ], [ %draw.sroa.0.1, %sw.bb102.i ], [ %draw.sroa.0.1, %sw.bb103.i ], [ %draw.sroa.0.1, %sw.bb104.i ], [ %draw.sroa.0.1, %sw.bb106.i ], [ %draw.sroa.0.1, %sw.bb108.i ], [ %draw.sroa.0.1, %sw.bb110.i ], [ %draw.sroa.0.1, %sw.bb111.i ], [ %draw.sroa.0.1, %sw.bb114.i ], [ %draw.sroa.0.1, %for.end.i ], [ %draw.sroa.0.1, %if.then133.i ], [ %draw.sroa.0.1, %if.then141.i ], [ %draw.sroa.0.1, %if.else143.i ], [ %draw.sroa.0.1, %if.then155.i.cleanup_crit_edge ], [ %draw.sroa.0.1, %if.then165.i ], [ %draw.sroa.0.1, %if.else215.i ], [ %draw.sroa.0.1, %if.then236.i ], [ %draw.sroa.0.1, %sw.bb239.i ], [ %draw.sroa.0.1, %sw.bb243.i ], [ %draw.sroa.0.1, %sw.bb248.i ], [ %draw.sroa.0.1, %sw.bb253.i ], [ %draw.sroa.0.1, %if.then270.i ], [ %draw.sroa.0.1, %if.then279.i ], [ %draw.sroa.0.1, %if.then296.i ], [ %draw.sroa.0.1, %sw.bb300.i.cleanup_crit_edge ], [ %draw.sroa.0.1, %if.then306.i ], [ %draw.sroa.0.1, %sw.bb308.i.cleanup_crit_edge ], [ %draw.sroa.0.1, %if.then316.i ], [ %draw.sroa.0.1, %if.then330.i ], [ %draw.sroa.0.1, %if.else340.i ], [ %draw.sroa.0.1, %if.then356.i ], [ %draw.sroa.0.1, %if.else364.i ], [ %draw.sroa.0.1, %sw.bb368.i.cleanup_crit_edge ], [ %draw.sroa.0.1, %if.then376.i.cleanup_crit_edge ], [ %draw.sroa.0.1, %if.then381.i ], [ %draw.sroa.0.1, %if.then387.i ], [ %draw.sroa.0.1, %if.then399.i ], [ %draw.sroa.0.1, %if.end404.i.cleanup_crit_edge ], [ %draw.sroa.0.1, %if.end412.i ], [ %draw.sroa.0.1, %if.end424.i ], [ %draw.sroa.0.1, %if.end440.i ], [ %draw.sroa.0.1, %if.end456.i ], [ %draw.sroa.0.1, %if.end472.i ], [ %draw.sroa.0.1, %if.end488.i ], [ %draw.sroa.0.1, %if.end502.i ], [ %draw.sroa.0.1, %if.end516.i ], [ %draw.sroa.0.1, %if.end537.i ], [ %draw.sroa.0.1, %sw.bb542.i ], [ %draw.sroa.0.1, %sw.bb545.i ], [ %draw.sroa.0.1, %sw.bb548.i ], [ %draw.sroa.0.1, %sw.bb551.i ], [ %draw.sroa.0.1, %sw.bb554.i ], [ %draw.sroa.0.1, %sw.bb557.i.cleanup_crit_edge ], [ %draw.sroa.0.1, %if.then561.i ], [ %draw.sroa.0.1, %sw.bb563.i.cleanup_crit_edge ], [ %draw.sroa.0.1, %land.lhs.true567.i.cleanup_crit_edge ], [ %draw.sroa.0.1, %if.then572.i ], [ %draw.sroa.0.1, %if.then582.i ], [ %draw.sroa.0.1, %sw.bb587.i ], [ %draw.sroa.0.1, %sw.bb588.i.cleanup_crit_edge ], [ %draw.sroa.0.1, %if.then593.i ], [ %draw.sroa.0.1, %if.end622.i.cleanup_crit_edge ], [ %draw.sroa.0.1, %land.lhs.true629.i.cleanup_crit_edge ], [ %draw.sroa.0.1, %if.then635.i ], [ %draw.sroa.0.1, %sw.bb642.i ], [ %draw.sroa.0.1, %sw.bb643.i ], [ %draw.sroa.0.1, %sw.bb644.i ], [ %draw.sroa.0.1, %sw.bb647.i ], [ %draw.sroa.0.1, %sw.bb650.i ], [ %draw.sroa.0.1, %sw.bb652.i.cleanup_crit_edge ], [ %draw.sroa.0.1, %if.end659.i ], [ %draw.sroa.0.1, %sw.bb661.i.cleanup_crit_edge ], [ %draw.sroa.0.1, %sw.bb663.i ], [ %draw.sroa.0.1, %sw.bb667.i ], [ %draw.sroa.0.1, %sw.bb673.i ], [ %draw.sroa.0.1, %sw.bb675.i.cleanup_crit_edge ], [ %draw.sroa.0.1, %if.then679.i ], [ %draw.sroa.0.1, %sw.bb692.i ], [ %draw.sroa.0.1, %sw.bb694.i ], [ %draw.sroa.0.1, %sw.default.i ], [ %draw.sroa.0.1, %if.then28.i.i ], [ %draw.sroa.0.1, %if.then41.i.i ], [ %draw.sroa.0.1, %if.then55.i.i ], [ %draw.sroa.0.1, %if.then48.i.i ], [ %draw.sroa.0.1, %if.then34.i.i ], [ %draw.sroa.0.1, %if.end.i.i.cleanup_crit_edge ], [ %draw.sroa.0.1, %if.then15.i.cleanup_crit_edge ], [ %draw.sroa.0.3, %if.end60.cleanup_crit_edge ], [ %draw.sroa.0.1, %if.end46.cleanup_crit_edge ], [ %draw.sroa.0.1, %vc_translate.exit.cleanup_crit_edge ]
  %545 = ptrtoint ptr %stopped to i32
  call void @__asan_load1_noabort(i32 %545)
  %546 = load i8, ptr %stopped, align 4, !range !368
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %546)
  %tobool37.not = icmp ne i8 %546, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %tobool39.not = icmp eq i32 %dec, 0
  %or.cond = select i1 %tobool37.not, i1 true, i1 %tobool39.not
  br i1 %or.cond, label %while.end, label %cleanup.while.body_crit_edge

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body

while.end:                                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %draw.sroa.15.8)
  %cmp.i172 = icmp slt i32 %draw.sroa.15.8, 0
  br i1 %cmp.i172, label %while.end.con_flush.exit180_crit_edge, label %if.end.i179

while.end.con_flush.exit180_crit_edge:            ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_flush.exit180

if.end.i179:                                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #23
  %vc_sw.i173 = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 14
  %547 = ptrtoint ptr %vc_sw.i173 to i32
  call void @__asan_load4_noabort(i32 %547)
  %548 = load ptr, ptr %vc_sw.i173, align 4
  %con_putcs.i174 = getelementptr inbounds %struct.consw, ptr %548, i32 0, i32 6
  %549 = ptrtoint ptr %con_putcs.i174 to i32
  call void @__asan_load4_noabort(i32 %549)
  %550 = load ptr, ptr %con_putcs.i174, align 4
  %551 = inttoptr i32 %draw.sroa.0.5 to ptr
  %sub.ptr.sub.i176 = sub i32 %draw.sroa.9.4, %draw.sroa.0.5
  %sub.ptr.div.i177 = ashr exact i32 %sub.ptr.sub.i176, 1
  %y.i178 = getelementptr inbounds %struct.vc_data, ptr %15, i32 0, i32 1, i32 1
  %552 = ptrtoint ptr %y.i178 to i32
  call void @__asan_load4_noabort(i32 %552)
  %553 = load i32, ptr %y.i178, align 4
  call void %550(ptr noundef %15, ptr noundef %551, i32 noundef %sub.ptr.div.i177, i32 noundef %553, i32 noundef %draw.sroa.15.8) #21
  br label %con_flush.exit180

con_flush.exit180:                                ; preds = %if.end.i179, %while.end.con_flush.exit180_crit_edge, %if.end35.con_flush.exit180_crit_edge
  %n.0.lcssa298 = phi i32 [ %inc, %while.end.con_flush.exit180_crit_edge ], [ %inc, %if.end.i179 ], [ 0, %if.end35.con_flush.exit180_crit_edge ]
  call void @console_conditional_schedule() #21
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %param.i) #21
  %554 = getelementptr inbounds %struct.vt_notifier_param, ptr %param.i, i32 0, i32 1
  %555 = ptrtoint ptr %param.i to i32
  call void @__asan_store4_noabort(i32 %555)
  store ptr %15, ptr %param.i, align 4
  %556 = ptrtoint ptr %554 to i32
  call void @__asan_store4_noabort(i32 %556)
  store i32 0, ptr %554, align 4
  %call.i = call i32 @atomic_notifier_call_chain(ptr noundef nonnull @vt_notifier_list, i32 noundef 4, ptr noundef nonnull %param.i) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param.i) #21
  call void @console_unlock() #21
  br label %cleanup64

cleanup64:                                        ; preds = %con_flush.exit180, %if.end24, %do.end, %entry.cleanup64_crit_edge
  %retval.0 = phi i32 [ 0, %do.end ], [ %n.0.lcssa298, %con_flush.exit180 ], [ 0, %if.end24 ], [ %count, %entry.cleanup64_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %param) #21
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @console_conditional_schedule() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @kd_mksound(i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_next_bit_be(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vt_get_kbd_mode_bit(i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @ri(ptr noundef %vc) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %y = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %0 = ptrtoint ptr %y to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %y, align 4
  %vc_top = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 12
  %2 = ptrtoint ptr %vc_top to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vc_top, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %3)
  %cmp = icmp eq i32 %1, %3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %vc_bottom = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 13
  %4 = ptrtoint ptr %vc_bottom to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vc_bottom, align 4
  tail call fastcc void @con_scroll(ptr noundef %vc, i32 noundef %1, i32 noundef %5, i32 noundef 1, i32 noundef 1)
  br label %if.end8

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp4.not = icmp eq i32 %1, 0
  br i1 %cmp4.not, label %if.else.if.end8_crit_edge, label %if.then5

if.else.if.end8_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8

if.then5:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  %dec = add i32 %1, -1
  %6 = ptrtoint ptr %y to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %dec, ptr %y, align 4
  %vc_size_row = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 6
  %7 = ptrtoint ptr %vc_size_row to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %vc_size_row, align 4
  %vc_pos = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 26
  %9 = ptrtoint ptr %vc_pos to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %vc_pos, align 4
  %sub = sub i32 %10, %8
  store i32 %sub, ptr %vc_pos, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.then5, %if.else.if.end8_crit_edge, %if.then
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %11 = ptrtoint ptr %vc_need_wrap to i32
  call void @__asan_load2_noabort(i32 %11)
  %bf.load = load i16, ptr %vc_need_wrap, align 4
  %bf.clear = and i16 %bf.load, -33
  store i16 %bf.clear, ptr %vc_need_wrap, align 4
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @respond_ID(ptr nocapture noundef readonly %tty) unnamed_addr #15 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %port = getelementptr inbounds %struct.tty_struct, ptr %tty, i32 0, i32 37
  %0 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %port, align 4
  %call.i.i = tail call i32 @tty_insert_flip_string_fixed_flag(ptr noundef %1, ptr noundef nonnull @respond_ID.vt102_id, i8 noundef zeroext 0, i32 noundef 5) #21
  tail call void @tty_flip_buffer_push(ptr noundef %1) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @restore_cur(ptr noundef %vc) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %state = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %saved_state = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 2
  %0 = call ptr @memcpy(ptr %state, ptr %saved_state, i32 20)
  %1 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %state, align 4
  %y = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %3 = ptrtoint ptr %y to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %y, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp.i = icmp slt i32 %2, 0
  br i1 %cmp.i, label %entry.if.end9.i_crit_edge, label %if.else.i

entry.if.end9.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9.i

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %vc_cols.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %5 = ptrtoint ptr %vc_cols.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %vc_cols.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %6, i32 %2)
  %cmp1.not.i = icmp ugt i32 %6, %2
  %sub.i = add i32 %6, -1
  %spec.select.i = select i1 %cmp1.not.i, i32 %2, i32 %sub.i
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.else.i, %entry.if.end9.i_crit_edge
  %sub.sink.i = phi i32 [ 0, %entry.if.end9.i_crit_edge ], [ %spec.select.i, %if.else.i ]
  %7 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %sub.sink.i, ptr %state, align 4
  %vc_decom.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %8 = ptrtoint ptr %vc_decom.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %bf.load.i = load i16, ptr %vc_decom.i, align 4
  %9 = and i16 %bf.load.i, 4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %9)
  %tobool.not.i = icmp eq i16 %9, 0
  br i1 %tobool.not.i, label %if.else11.i, label %if.then10.i

if.then10.i:                                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #23
  %vc_top.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 12
  %10 = ptrtoint ptr %vc_top.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %vc_top.i, align 4
  %vc_bottom.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 13
  br label %gotoxy.exit

if.else11.i:                                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #23
  %vc_rows.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 5
  br label %gotoxy.exit

gotoxy.exit:                                      ; preds = %if.else11.i, %if.then10.i
  %min_y.0.i = phi i32 [ %11, %if.then10.i ], [ 0, %if.else11.i ]
  %max_y.0.in.i = phi ptr [ %vc_bottom.i, %if.then10.i ], [ %vc_rows.i, %if.else11.i ]
  %12 = ptrtoint ptr %max_y.0.in.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %max_y.0.i = load i32, ptr %max_y.0.in.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %min_y.0.i, i32 %4)
  %cmp13.i = icmp sgt i32 %min_y.0.i, %4
  call void @__sanitizer_cov_trace_cmp4(i32 %max_y.0.i, i32 %4)
  %cmp17.not.i = icmp sgt i32 %max_y.0.i, %4
  %sub19.i = add i32 %max_y.0.i, -1
  %spec.select57.i = select i1 %cmp17.not.i, i32 %4, i32 %sub19.i
  %sub19.sink.i = select i1 %cmp13.i, i32 %min_y.0.i, i32 %spec.select57.i
  %13 = ptrtoint ptr %y to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %sub19.sink.i, ptr %y, align 4
  %vc_origin.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 9
  %14 = ptrtoint ptr %vc_origin.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %vc_origin.i, align 4
  %vc_size_row.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 6
  %16 = ptrtoint ptr %vc_size_row.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %vc_size_row.i, align 4
  %mul.i = mul i32 %17, %sub19.sink.i
  %shl.i = shl i32 %sub.sink.i, 1
  %add.i = add i32 %15, %shl.i
  %add31.i = add i32 %add.i, %mul.i
  %vc_pos.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 26
  %18 = ptrtoint ptr %vc_pos.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %add31.i, ptr %vc_pos.i, align 4
  %bf.clear33.i = and i16 %bf.load.i, -33
  %19 = ptrtoint ptr %vc_decom.i to i32
  call void @__asan_store2_noabort(i32 %19)
  store i16 %bf.clear33.i, ptr %vc_decom.i, align 4
  %charset = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 4
  %20 = ptrtoint ptr %charset to i32
  call void @__asan_load1_noabort(i32 %20)
  %bf.load = load i8, ptr %charset, align 1
  %bf.lshr = lshr i8 %bf.load, 7
  %bf.cast = zext i8 %bf.lshr to i32
  %arrayidx = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 1, i32 3, i32 %bf.cast
  %21 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %arrayidx, align 1
  %conv = zext i8 %22 to i32
  %call = tail call ptr @set_translate(i32 noundef %conv, ptr noundef %vc) #21
  %vc_translate = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 42
  %23 = ptrtoint ptr %vc_translate to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %call, ptr %vc_translate, align 4
  tail call fastcc void @update_attr(ptr noundef %vc)
  %24 = ptrtoint ptr %vc_decom.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %bf.load5 = load i16, ptr %vc_decom.i, align 4
  %bf.clear = and i16 %bf.load5, -33
  store i16 %bf.clear, ptr %vc_decom.i, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @vt_clr_kbd_mode_bit(i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @vt_set_kbd_mode_bit(i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @hex_to_bin(i8 noundef zeroext) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @set_mode(ptr noundef %vc, i32 noundef %on_off) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %vc_npar = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 31
  %vc_priv = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %on_off)
  %tobool83.not = icmp eq i32 %on_off, 0
  %vc_num85 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 3
  %0 = trunc i32 %on_off to i16
  %bf.value77 = shl i16 %0, 9
  %bf.shl78 = and i16 %bf.value77, 512
  %bf.shl71 = shl i16 %0, 15
  %bf.value50 = shl i16 %0, 10
  %bf.shl51 = and i16 %bf.value50, 1024
  %bf.shl44 = select i1 %tobool83.not, i16 0, i16 4
  %bf.value26 = shl i16 %0, 11
  %bf.shl27 = and i16 %bf.value26, 2048
  %bf.value19 = shl i16 %0, 12
  %bf.shl20 = and i16 %bf.value19, 4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %bf.shl20)
  %tobool.not.i = icmp eq i16 %bf.shl20, 0
  %vc_top.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 12
  %vc_cols.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %state4.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %vc_bottom.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 13
  %vc_rows.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 5
  %y21.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %vc_origin.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 9
  %vc_size_row.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 6
  %vc_pos.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 26
  %bf.value = shl i16 %0, 13
  %bf.shl = and i16 %bf.value, 8192
  %vc_screenbuf_size = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 16
  %1 = select i1 %tobool83.not, i16 0, i16 8
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry
  %i.0139 = phi i32 [ 0, %entry ], [ %inc, %for.inc.for.body_crit_edge ]
  %2 = ptrtoint ptr %vc_priv to i32
  call void @__asan_load2_noabort(i32 %2)
  %bf.load = load i16, ptr %vc_priv, align 4
  %3 = and i16 %bf.load, 448
  call void @__sanitizer_cov_trace_const_cmp2(i16 64, i16 %3)
  %cmp1 = icmp eq i16 %3, 64
  %arrayidx = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 32, i32 %i.0139
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  br i1 %cmp1, label %if.then, label %if.else65

if.then:                                          ; preds = %for.body
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.78)
  switch i32 %5, label %if.then.for.inc_crit_edge [
    i32 1, label %sw.bb
    i32 1000, label %sw.bb55
    i32 5, label %sw.bb5
    i32 6, label %sw.bb17
    i32 7, label %sw.bb24
    i32 8, label %sw.bb31
    i32 9, label %sw.bb40
    i32 25, label %sw.bb48
  ]

if.then.for.inc_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

sw.bb:                                            ; preds = %if.then
  %7 = ptrtoint ptr %vc_num85 to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %vc_num85, align 4
  %conv4 = zext i16 %8 to i32
  br i1 %tobool83.not, label %if.else, label %if.then2

if.then2:                                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @vt_set_kbd_mode_bit(i32 noundef %conv4, i32 noundef 1) #21
  br label %for.inc

if.else:                                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @vt_clr_kbd_mode_bit(i32 noundef %conv4, i32 noundef 1) #21
  br label %for.inc

sw.bb5:                                           ; preds = %if.then
  %bf.lshr7 = lshr i16 %bf.load, 13
  %bf.clear8 = and i16 %bf.lshr7, 1
  %bf.cast9 = zext i16 %bf.clear8 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %bf.cast9, i32 %on_off)
  %cmp10.not = icmp eq i32 %bf.cast9, %on_off
  br i1 %cmp10.not, label %sw.bb5.for.inc_crit_edge, label %if.then12

sw.bb5.for.inc_crit_edge:                         ; preds = %sw.bb5
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.then12:                                        ; preds = %sw.bb5
  call void @__sanitizer_cov_trace_pc() #23
  %bf.clear15 = and i16 %bf.load, -8193
  %bf.set = or i16 %bf.clear15, %bf.shl
  %9 = ptrtoint ptr %vc_priv to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 %bf.set, ptr %vc_priv, align 4
  %10 = ptrtoint ptr %vc_screenbuf_size to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %vc_screenbuf_size, align 4
  tail call void @invert_screen(ptr noundef %vc, i32 noundef 0, i32 noundef %11, i1 noundef zeroext false)
  tail call fastcc void @update_attr(ptr noundef %vc)
  br label %for.inc

sw.bb17:                                          ; preds = %if.then
  %bf.clear21 = and i16 %bf.load, -4129
  %bf.set22 = or i16 %bf.clear21, %bf.shl20
  br i1 %tobool.not.i, label %sw.bb17.gotoxay.exit_crit_edge, label %if.then10.i.i

sw.bb17.gotoxay.exit_crit_edge:                   ; preds = %sw.bb17
  call void @__sanitizer_cov_trace_pc() #23
  br label %gotoxay.exit

if.then10.i.i:                                    ; preds = %sw.bb17
  call void @__sanitizer_cov_trace_pc() #23
  %12 = ptrtoint ptr %vc_top.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %vc_top.i, align 4
  br label %gotoxay.exit

gotoxay.exit:                                     ; preds = %if.then10.i.i, %sw.bb17.gotoxay.exit_crit_edge
  %min_y.0.i.i = phi i32 [ %13, %if.then10.i.i ], [ 0, %sw.bb17.gotoxay.exit_crit_edge ]
  %max_y.0.in.i.i = phi ptr [ %vc_bottom.i.i, %if.then10.i.i ], [ %vc_rows.i.i, %sw.bb17.gotoxay.exit_crit_edge ]
  %14 = ptrtoint ptr %vc_cols.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %spec.select.i.i137.in.in = load i32, ptr %vc_cols.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select.i.i137.in.in)
  %spec.select.i.i137.in = icmp eq i32 %spec.select.i.i137.in.in, 0
  %spec.select.i.i137 = sext i1 %spec.select.i.i137.in to i32
  %15 = ptrtoint ptr %state4.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %spec.select.i.i137, ptr %state4.i.i, align 4
  %16 = ptrtoint ptr %max_y.0.in.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %max_y.0.i.i = load i32, ptr %max_y.0.in.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %max_y.0.i.i, i32 %min_y.0.i.i)
  %cmp17.not.i.i = icmp sgt i32 %max_y.0.i.i, %min_y.0.i.i
  %sub19.i.i = add i32 %max_y.0.i.i, -1
  %spec.select57.i.i = select i1 %cmp17.not.i.i, i32 %min_y.0.i.i, i32 %sub19.i.i
  %17 = ptrtoint ptr %y21.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %spec.select57.i.i, ptr %y21.i.i, align 4
  %18 = ptrtoint ptr %vc_origin.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %vc_origin.i.i, align 4
  %20 = ptrtoint ptr %vc_size_row.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %vc_size_row.i.i, align 4
  %mul.i.i = mul i32 %21, %spec.select57.i.i
  %shl.i.i = shl nsw i32 %spec.select.i.i137, 1
  %add.i.i = add i32 %19, %shl.i.i
  %add31.i.i = add i32 %add.i.i, %mul.i.i
  %22 = ptrtoint ptr %vc_pos.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %add31.i.i, ptr %vc_pos.i.i, align 4
  %23 = ptrtoint ptr %vc_priv to i32
  call void @__asan_store2_noabort(i32 %23)
  store i16 %bf.set22, ptr %vc_priv, align 4
  br label %for.inc

sw.bb24:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %bf.clear28 = and i16 %bf.load, -2049
  %bf.set29 = or i16 %bf.clear28, %bf.shl27
  %24 = ptrtoint ptr %vc_priv to i32
  call void @__asan_store2_noabort(i32 %24)
  store i16 %bf.set29, ptr %vc_priv, align 4
  br label %for.inc

sw.bb31:                                          ; preds = %if.then
  %25 = ptrtoint ptr %vc_num85 to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %vc_num85, align 4
  %conv38 = zext i16 %26 to i32
  br i1 %tobool83.not, label %if.else36, label %if.then33

if.then33:                                        ; preds = %sw.bb31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @vt_set_kbd_mode_bit(i32 noundef %conv38, i32 noundef 2) #21
  br label %for.inc

if.else36:                                        ; preds = %sw.bb31
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @vt_clr_kbd_mode_bit(i32 noundef %conv38, i32 noundef 2) #21
  br label %for.inc

sw.bb40:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %bf.clear45 = and i16 %bf.load, -13
  %bf.set46 = or i16 %bf.clear45, %bf.shl44
  %27 = ptrtoint ptr %vc_priv to i32
  call void @__asan_store2_noabort(i32 %27)
  store i16 %bf.set46, ptr %vc_priv, align 4
  br label %for.inc

sw.bb48:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %bf.clear52 = and i16 %bf.load, -1025
  %bf.set53 = or i16 %bf.clear52, %bf.shl51
  %28 = ptrtoint ptr %vc_priv to i32
  call void @__asan_store2_noabort(i32 %28)
  store i16 %bf.set53, ptr %vc_priv, align 4
  br label %for.inc

sw.bb55:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %bf.clear62 = and i16 %bf.load, -13
  %bf.set63 = or i16 %bf.clear62, %1
  %29 = ptrtoint ptr %vc_priv to i32
  call void @__asan_store2_noabort(i32 %29)
  store i16 %bf.set63, ptr %vc_priv, align 4
  br label %for.inc

if.else65:                                        ; preds = %for.body
  %30 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %30, ptr @__sancov_gen_cov_switch_values.79)
  switch i32 %5, label %if.else65.for.inc_crit_edge [
    i32 3, label %sw.bb68
    i32 4, label %sw.bb75
    i32 20, label %sw.bb82
  ]

if.else65.for.inc_crit_edge:                      ; preds = %if.else65
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

sw.bb68:                                          ; preds = %if.else65
  call void @__sanitizer_cov_trace_pc() #23
  %bf.clear72 = and i16 %bf.load, 32767
  %bf.set73 = or i16 %bf.clear72, %bf.shl71
  %31 = ptrtoint ptr %vc_priv to i32
  call void @__asan_store2_noabort(i32 %31)
  store i16 %bf.set73, ptr %vc_priv, align 4
  br label %for.inc

sw.bb75:                                          ; preds = %if.else65
  call void @__sanitizer_cov_trace_pc() #23
  %bf.clear79 = and i16 %bf.load, -513
  %bf.set80 = or i16 %bf.clear79, %bf.shl78
  %32 = ptrtoint ptr %vc_priv to i32
  call void @__asan_store2_noabort(i32 %32)
  store i16 %bf.set80, ptr %vc_priv, align 4
  br label %for.inc

sw.bb82:                                          ; preds = %if.else65
  %33 = ptrtoint ptr %vc_num85 to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %vc_num85, align 4
  %conv89 = zext i16 %34 to i32
  br i1 %tobool83.not, label %if.else87, label %if.then84

if.then84:                                        ; preds = %sw.bb82
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @vt_set_kbd_mode_bit(i32 noundef %conv89, i32 noundef 3) #21
  br label %for.inc

if.else87:                                        ; preds = %sw.bb82
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @vt_clr_kbd_mode_bit(i32 noundef %conv89, i32 noundef 3) #21
  br label %for.inc

for.inc:                                          ; preds = %if.else87, %if.then84, %sw.bb75, %sw.bb68, %if.else65.for.inc_crit_edge, %sw.bb55, %sw.bb48, %sw.bb40, %if.else36, %if.then33, %sw.bb24, %gotoxay.exit, %if.then12, %sw.bb5.for.inc_crit_edge, %if.else, %if.then2, %if.then.for.inc_crit_edge
  %inc = add i32 %i.0139, 1
  %35 = ptrtoint ptr %vc_npar to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %vc_npar, align 4
  %cmp.not = icmp ugt i32 %inc, %36
  br i1 %cmp.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @status_report(ptr nocapture noundef readonly %tty) unnamed_addr #15 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %port = getelementptr inbounds %struct.tty_struct, ptr %tty, i32 0, i32 37
  %0 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %port, align 4
  %call.i.i = tail call i32 @tty_insert_flip_string_fixed_flag(ptr noundef %1, ptr noundef nonnull @status_report.teminal_ok, i8 noundef zeroext 0, i32 noundef 4) #21
  tail call void @tty_flip_buffer_push(ptr noundef %1) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @cursor_report(ptr nocapture noundef readonly %vc, ptr nocapture noundef readonly %tty) unnamed_addr #0 align 64 {
entry:
  %buf = alloca [40 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %buf) #21
  %0 = call ptr @memset(ptr %buf, i32 255, i32 40)
  %y = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %1 = ptrtoint ptr %y to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %y, align 4
  %vc_decom = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %3 = ptrtoint ptr %vc_decom to i32
  call void @__asan_load2_noabort(i32 %3)
  %bf.load = load i16, ptr %vc_decom, align 4
  %4 = and i16 %bf.load, 4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %4)
  %tobool.not = icmp eq i16 %4, 0
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.true

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %vc_top = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 12
  %5 = ptrtoint ptr %vc_top to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %vc_top, align 4
  %add = add i32 %6, 1
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi i32 [ %add, %cond.true ], [ 1, %entry.cond.end_crit_edge ]
  %state = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %add1 = add i32 %cond, %2
  %7 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %state, align 4
  %add3 = add i32 %8, 1
  %call = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %buf, ptr noundef nonnull @.str.30, i32 noundef %add1, i32 noundef %add3)
  %port = getelementptr inbounds %struct.tty_struct, ptr %tty, i32 0, i32 37
  %9 = ptrtoint ptr %port to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %port, align 4
  %call.i.i = call i32 @tty_insert_flip_string_fixed_flag(ptr noundef %10, ptr noundef nonnull %buf, i8 noundef zeroext 0, i32 noundef %call) #21
  call void @tty_flip_buffer_push(ptr noundef %10) #21
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %buf) #21
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc void @gotoxay(ptr nocapture noundef %vc, i32 noundef %new_x, i32 noundef %new_y) unnamed_addr #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %vc_decom = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %0 = ptrtoint ptr %vc_decom to i32
  call void @__asan_load2_noabort(i32 %0)
  %bf.load = load i16, ptr %vc_decom, align 4
  %1 = and i16 %bf.load, 4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %1)
  %tobool.not = icmp eq i16 %1, 0
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.true

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %vc_top = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 12
  %2 = ptrtoint ptr %vc_top to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vc_top, align 4
  %add = add i32 %3, %new_y
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi i32 [ %add, %cond.true ], [ %new_y, %entry.cond.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %new_x)
  %cmp.i = icmp slt i32 %new_x, 0
  br i1 %cmp.i, label %cond.end.if.end9.i_crit_edge, label %if.else.i

cond.end.if.end9.i_crit_edge:                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9.i

if.else.i:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #23
  %vc_cols.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %4 = ptrtoint ptr %vc_cols.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vc_cols.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %new_x)
  %cmp1.not.i = icmp ugt i32 %5, %new_x
  %sub.i = add i32 %5, -1
  %spec.select.i = select i1 %cmp1.not.i, i32 %new_x, i32 %sub.i
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.else.i, %cond.end.if.end9.i_crit_edge
  %sub.sink.i = phi i32 [ 0, %cond.end.if.end9.i_crit_edge ], [ %spec.select.i, %if.else.i ]
  %state4.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %6 = ptrtoint ptr %state4.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %sub.sink.i, ptr %state4.i, align 4
  br i1 %tobool.not, label %if.else11.i, label %if.then10.i

if.then10.i:                                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #23
  %vc_top.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 12
  %7 = ptrtoint ptr %vc_top.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %vc_top.i, align 4
  %vc_bottom.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 13
  br label %gotoxy.exit

if.else11.i:                                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #23
  %vc_rows.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 5
  br label %gotoxy.exit

gotoxy.exit:                                      ; preds = %if.else11.i, %if.then10.i
  %min_y.0.i = phi i32 [ %8, %if.then10.i ], [ 0, %if.else11.i ]
  %max_y.0.in.i = phi ptr [ %vc_bottom.i, %if.then10.i ], [ %vc_rows.i, %if.else11.i ]
  %9 = ptrtoint ptr %max_y.0.in.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %max_y.0.i = load i32, ptr %max_y.0.in.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %min_y.0.i, i32 %cond)
  %cmp13.i = icmp sgt i32 %min_y.0.i, %cond
  call void @__sanitizer_cov_trace_cmp4(i32 %max_y.0.i, i32 %cond)
  %cmp17.not.i = icmp sgt i32 %max_y.0.i, %cond
  %sub19.i = add i32 %max_y.0.i, -1
  %spec.select57.i = select i1 %cmp17.not.i, i32 %cond, i32 %sub19.i
  %sub19.sink.i = select i1 %cmp13.i, i32 %min_y.0.i, i32 %spec.select57.i
  %y21.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %10 = ptrtoint ptr %y21.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %sub19.sink.i, ptr %y21.i, align 4
  %vc_origin.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 9
  %11 = ptrtoint ptr %vc_origin.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %vc_origin.i, align 4
  %vc_size_row.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 6
  %13 = ptrtoint ptr %vc_size_row.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %vc_size_row.i, align 4
  %mul.i = mul i32 %14, %sub19.sink.i
  %shl.i = shl i32 %sub.sink.i, 1
  %add.i = add i32 %12, %shl.i
  %add31.i = add i32 %add.i, %mul.i
  %vc_pos.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 26
  %15 = ptrtoint ptr %vc_pos.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %add31.i, ptr %vc_pos.i, align 4
  %bf.clear33.i = and i16 %bf.load, -33
  %16 = ptrtoint ptr %vc_decom to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 %bf.clear33.i, ptr %vc_decom, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @csi_K(ptr noundef %vc, i32 noundef %vpar) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %vc_pos = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 26
  %0 = ptrtoint ptr %vc_pos to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vc_pos, align 4
  %2 = inttoptr i32 %1 to ptr
  %3 = zext i32 %vpar to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.80)
  switch i32 %vpar, label %entry.cleanup_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb7
  ]

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %vc_cols = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %4 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vc_cols, align 4
  %state = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %6 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %state, align 4
  %sub = sub i32 %5, %7
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %state2 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %8 = ptrtoint ptr %state2 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %state2, align 4
  %sub4 = sub i32 0, %9
  %add = add i32 %9, 1
  br label %sw.epilog

sw.bb7:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %state8 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %10 = ptrtoint ptr %state8 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %state8, align 4
  %sub10 = sub i32 0, %11
  %vc_cols11 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %12 = ptrtoint ptr %vc_cols11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %vc_cols11, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb7, %sw.bb1, %sw.bb
  %count.0 = phi i32 [ %13, %sw.bb7 ], [ %add, %sw.bb1 ], [ %sub, %sw.bb ]
  %offset.0 = phi i32 [ %sub10, %sw.bb7 ], [ %sub4, %sw.bb1 ], [ 0, %sw.bb ]
  %vc_uni_screen.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 50
  %14 = ptrtoint ptr %vc_uni_screen.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %vc_uni_screen.i, align 4
  %tobool.not.i = icmp eq ptr %15, null
  br i1 %tobool.not.i, label %sw.epilog.vc_uniscr_clear_line.exit_crit_edge, label %if.then.i

sw.epilog.vc_uniscr_clear_line.exit_crit_edge:    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_clear_line.exit

if.then.i:                                        ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #23
  %state12 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %16 = ptrtoint ptr %state12 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %state12, align 4
  %add14 = add i32 %17, %offset.0
  %y.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %18 = ptrtoint ptr %y.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %y.i, align 4
  %arrayidx.i = getelementptr [0 x ptr], ptr %15, i32 0, i32 %19
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx.i, align 4
  %arrayidx1.i = getelementptr i32, ptr %21, i32 %add14
  %mul.i.i = shl i32 %count.0, 2
  %call.i.i = tail call ptr @__memset32(ptr noundef %arrayidx1.i, i32 noundef 32, i32 noundef %mul.i.i) #21
  br label %vc_uniscr_clear_line.exit

vc_uniscr_clear_line.exit:                        ; preds = %if.then.i, %sw.epilog.vc_uniscr_clear_line.exit_crit_edge
  %add.ptr = getelementptr i16, ptr %2, i32 %offset.0
  %vc_video_erase_char = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 29
  %22 = ptrtoint ptr %vc_video_erase_char to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %vc_video_erase_char, align 4
  %mul = and i32 %count.0, 2147483647
  %call.i = tail call ptr @memset16(ptr noundef %add.ptr, i16 noundef zeroext %23, i32 noundef %mul) #21
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %24 = ptrtoint ptr %vc_need_wrap to i32
  call void @__asan_load2_noabort(i32 %24)
  %bf.load = load i16, ptr %vc_need_wrap, align 4
  %bf.clear = and i16 %bf.load, -33
  store i16 %bf.clear, ptr %vc_need_wrap, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %25 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.not.i.i = icmp eq i32 %25, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %vc_uniscr_clear_line.exit.con_is_visible.exit.i_crit_edge

vc_uniscr_clear_line.exit.con_is_visible.exit.i_crit_edge: ; preds = %vc_uniscr_clear_line.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

land.lhs.true.i.i:                                ; preds = %vc_uniscr_clear_line.exit
  %call1.i.i = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool2.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool2.not.i.i, label %land.rhs.i.i, label %land.lhs.true.i.i.con_is_visible.exit.i_crit_edge

land.lhs.true.i.i.con_is_visible.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

land.rhs.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %26 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool3.not.i.i = icmp eq i32 %26, 0
  br i1 %tobool3.not.i.i, label %do.end.i.i, label %land.rhs.i.i.con_is_visible.exit.i_crit_edge, !prof !365

land.rhs.i.i.con_is_visible.exit.i_crit_edge:     ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4012, i32 noundef 9, ptr noundef null) #21
  br label %con_is_visible.exit.i

con_is_visible.exit.i:                            ; preds = %do.end.i.i, %land.rhs.i.i.con_is_visible.exit.i_crit_edge, %land.lhs.true.i.i.con_is_visible.exit.i_crit_edge, %vc_uniscr_clear_line.exit.con_is_visible.exit.i_crit_edge
  %vc_display_fg.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 47
  %27 = ptrtoint ptr %vc_display_fg.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %vc_display_fg.i.i, align 4
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %28, align 4
  %cmp.i.i = icmp eq ptr %30, %vc
  br i1 %cmp.i.i, label %con_should_update.exit, label %con_is_visible.exit.i.cleanup_crit_edge

con_is_visible.exit.i.cleanup_crit_edge:          ; preds = %con_is_visible.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

con_should_update.exit:                           ; preds = %con_is_visible.exit.i
  %31 = load i32, ptr @console_blanked, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool.not.i35 = icmp eq i32 %31, 0
  br i1 %tobool.not.i35, label %if.then, label %con_should_update.exit.cleanup_crit_edge

con_should_update.exit.cleanup_crit_edge:         ; preds = %con_should_update.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then:                                          ; preds = %con_should_update.exit
  call void @__sanitizer_cov_trace_pc() #23
  %32 = ptrtoint ptr %add.ptr to i32
  tail call fastcc void @do_update_region(ptr noundef %vc, i32 noundef %32, i32 noundef %count.0)
  br label %cleanup

cleanup:                                          ; preds = %if.then, %con_should_update.exit.cleanup_crit_edge, %con_is_visible.exit.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @csi_L(ptr noundef %vc, i32 noundef %nr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %vc_rows = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 5
  %0 = ptrtoint ptr %vc_rows to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vc_rows, align 4
  %y = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %2 = ptrtoint ptr %y to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %y, align 4
  %sub = sub i32 %1, %3
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %nr)
  %cmp = icmp ult i32 %sub, %nr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr)
  %tobool.not = icmp eq i32 %nr, 0
  %spec.store.select = select i1 %tobool.not, i32 1, i32 %nr
  %nr.addr.0 = select i1 %cmp, i32 %sub, i32 %spec.store.select
  %vc_bottom = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 13
  %4 = ptrtoint ptr %vc_bottom to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vc_bottom, align 4
  tail call fastcc void @con_scroll(ptr noundef %vc, i32 noundef %3, i32 noundef %5, i32 noundef 1, i32 noundef %nr.addr.0)
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %6 = ptrtoint ptr %vc_need_wrap to i32
  call void @__asan_load2_noabort(i32 %6)
  %bf.load = load i16, ptr %vc_need_wrap, align 4
  %bf.clear = and i16 %bf.load, -33
  store i16 %bf.clear, ptr %vc_need_wrap, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @csi_M(ptr noundef %vc, i32 noundef %nr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %vc_rows = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 5
  %0 = ptrtoint ptr %vc_rows to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vc_rows, align 4
  %y = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %2 = ptrtoint ptr %y to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %y, align 4
  %sub = sub i32 %1, %3
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %nr)
  %cmp = icmp ult i32 %sub, %nr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr)
  %tobool.not = icmp eq i32 %nr, 0
  %spec.store.select = select i1 %tobool.not, i32 1, i32 %nr
  %nr.addr.0 = select i1 %cmp, i32 %sub, i32 %spec.store.select
  %vc_bottom = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 13
  %4 = ptrtoint ptr %vc_bottom to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vc_bottom, align 4
  tail call fastcc void @con_scroll(ptr noundef %vc, i32 noundef %3, i32 noundef %5, i32 noundef 0, i32 noundef %nr.addr.0)
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %6 = ptrtoint ptr %vc_need_wrap to i32
  call void @__asan_load2_noabort(i32 %6)
  %bf.load = load i16, ptr %vc_need_wrap, align 4
  %bf.clear = and i16 %bf.load, -33
  store i16 %bf.clear, ptr %vc_need_wrap, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @csi_P(ptr noundef %vc, i32 noundef %nr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %vc_cols = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %0 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vc_cols, align 4
  %state = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %2 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %state, align 4
  %sub = sub i32 %1, %3
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %nr)
  %cmp = icmp ult i32 %sub, %nr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr)
  %tobool.not = icmp eq i32 %nr, 0
  %spec.store.select = select i1 %tobool.not, i32 1, i32 %nr
  %nr.addr.0 = select i1 %cmp, i32 %sub, i32 %spec.store.select
  %idx.neg7.i = sub i32 0, %nr.addr.0
  %vc_pos.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 26
  %4 = ptrtoint ptr %vc_pos.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vc_pos.i, align 4
  %6 = inttoptr i32 %5 to ptr
  %vc_uni_screen.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 50
  %7 = ptrtoint ptr %vc_uni_screen.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %vc_uni_screen.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %8, null
  br i1 %tobool.not.i.i, label %entry.vc_uniscr_delete.exit.i_crit_edge, label %if.then.i.i

entry.vc_uniscr_delete.exit.i_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_delete.exit.i

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %y.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %9 = ptrtoint ptr %y.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %y.i.i, align 4
  %arrayidx.i.i = getelementptr [0 x ptr], ptr %8, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx.i.i, align 4
  %arrayidx3.i.i = getelementptr i32, ptr %12, i32 %3
  %add.i.i = add i32 %nr.addr.0, %3
  %arrayidx4.i.i = getelementptr i32, ptr %12, i32 %add.i.i
  %sub5.i.i = sub i32 %1, %add.i.i
  %mul.i.i = shl i32 %sub5.i.i, 2
  %13 = call ptr @memcpy(ptr %arrayidx3.i.i, ptr %arrayidx4.i.i, i32 %mul.i.i)
  %sub6.i.i = sub i32 %1, %nr.addr.0
  %arrayidx7.i.i = getelementptr i32, ptr %12, i32 %sub6.i.i
  %mul.i.i.i = shl i32 %nr.addr.0, 2
  %call.i.i.i = tail call ptr @__memset32(ptr noundef %arrayidx7.i.i, i32 noundef 32, i32 noundef %mul.i.i.i) #21
  br label %vc_uniscr_delete.exit.i

vc_uniscr_delete.exit.i:                          ; preds = %if.then.i.i, %entry.vc_uniscr_delete.exit.i_crit_edge
  %add.ptr.i = getelementptr i16, ptr %6, i32 %nr.addr.0
  %14 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %vc_cols, align 4
  %16 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %state, align 4
  %18 = add i32 %nr.addr.0, %17
  %sub1.i = sub i32 %15, %18
  %mul.i = shl i32 %sub1.i, 1
  %19 = call ptr @memcpy(ptr %6, ptr %add.ptr.i, i32 %mul.i)
  %20 = load i32, ptr %vc_cols, align 4
  %add.ptr3.i = getelementptr i16, ptr %6, i32 %20
  %21 = load i32, ptr %state, align 4
  %idx.neg.i = sub i32 0, %21
  %add.ptr6.i = getelementptr i16, ptr %add.ptr3.i, i32 %idx.neg.i
  %add.ptr8.i = getelementptr i16, ptr %add.ptr6.i, i32 %idx.neg7.i
  %vc_video_erase_char.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 29
  %22 = ptrtoint ptr %vc_video_erase_char.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %vc_video_erase_char.i, align 4
  %mul9.i = and i32 %nr.addr.0, 2147483647
  %call.i.i = tail call ptr @memset16(ptr noundef %add.ptr8.i, i16 noundef zeroext %23, i32 noundef %mul9.i) #21
  %vc_need_wrap.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %24 = ptrtoint ptr %vc_need_wrap.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %bf.load.i = load i16, ptr %vc_need_wrap.i, align 4
  %bf.clear.i = and i16 %bf.load.i, -33
  store i16 %bf.clear.i, ptr %vc_need_wrap.i, align 4
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %25 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.not.i.i.i = icmp eq i32 %25, 0
  br i1 %tobool.not.i.i.i, label %land.lhs.true.i.i.i, label %vc_uniscr_delete.exit.i.con_is_visible.exit.i.i_crit_edge

vc_uniscr_delete.exit.i.con_is_visible.exit.i.i_crit_edge: ; preds = %vc_uniscr_delete.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i.i

land.lhs.true.i.i.i:                              ; preds = %vc_uniscr_delete.exit.i
  %call1.i.i.i = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool2.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool2.not.i.i.i, label %land.rhs.i.i.i, label %land.lhs.true.i.i.i.con_is_visible.exit.i.i_crit_edge

land.lhs.true.i.i.i.con_is_visible.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i.i

land.rhs.i.i.i:                                   ; preds = %land.lhs.true.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %26 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool3.not.i.i.i = icmp eq i32 %26, 0
  br i1 %tobool3.not.i.i.i, label %do.end.i.i.i, label %land.rhs.i.i.i.con_is_visible.exit.i.i_crit_edge, !prof !365

land.rhs.i.i.i.con_is_visible.exit.i.i_crit_edge: ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i.i

do.end.i.i.i:                                     ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4012, i32 noundef 9, ptr noundef null) #21
  br label %con_is_visible.exit.i.i

con_is_visible.exit.i.i:                          ; preds = %do.end.i.i.i, %land.rhs.i.i.i.con_is_visible.exit.i.i_crit_edge, %land.lhs.true.i.i.i.con_is_visible.exit.i.i_crit_edge, %vc_uniscr_delete.exit.i.con_is_visible.exit.i.i_crit_edge
  %vc_display_fg.i.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 47
  %27 = ptrtoint ptr %vc_display_fg.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %vc_display_fg.i.i.i, align 4
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %28, align 4
  %cmp.i.i.i = icmp eq ptr %30, %vc
  br i1 %cmp.i.i.i, label %con_should_update.exit.i, label %con_is_visible.exit.i.i.delete_char.exit_crit_edge

con_is_visible.exit.i.i.delete_char.exit_crit_edge: ; preds = %con_is_visible.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %delete_char.exit

con_should_update.exit.i:                         ; preds = %con_is_visible.exit.i.i
  %31 = load i32, ptr @console_blanked, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool.not.i32.i = icmp eq i32 %31, 0
  br i1 %tobool.not.i32.i, label %if.then.i, label %con_should_update.exit.i.delete_char.exit_crit_edge

con_should_update.exit.i.delete_char.exit_crit_edge: ; preds = %con_should_update.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %delete_char.exit

if.then.i:                                        ; preds = %con_should_update.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  %32 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %vc_cols, align 4
  %34 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %state, align 4
  %sub13.i = sub i32 %33, %35
  tail call fastcc void @do_update_region(ptr noundef %vc, i32 noundef %5, i32 noundef %sub13.i) #21
  br label %delete_char.exit

delete_char.exit:                                 ; preds = %if.then.i, %con_should_update.exit.i.delete_char.exit_crit_edge, %con_is_visible.exit.i.i.delete_char.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @csi_m(ptr noundef %vc) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %vc_npar = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 31
  %vc_def_color71 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 19
  %color75 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 2
  %reverse57 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 9
  %blink54 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 8
  %underline51 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 7
  %italic48 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 6
  %intensity45 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 5
  %vc_translate34 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 42
  %vc_disp_ctrl35 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %charset = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 4
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry
  %i.0220 = phi i32 [ 0, %entry ], [ %inc, %for.inc.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 32, i32 %i.0220
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %arrayidx, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.81)
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb5
    i32 21, label %for.body.sw.bb7_crit_edge
    i32 4, label %for.body.sw.bb7_crit_edge221
    i32 5, label %sw.bb9
    i32 7, label %sw.bb11
    i32 10, label %sw.bb13
    i32 11, label %sw.bb21
    i32 12, label %sw.bb32
    i32 22, label %sw.bb43
    i32 23, label %sw.bb46
    i32 24, label %sw.bb49
    i32 25, label %sw.bb52
    i32 27, label %sw.bb55
    i32 38, label %sw.bb58
    i32 48, label %sw.bb60
    i32 39, label %sw.bb62
    i32 49, label %sw.bb70
  ]

for.body.sw.bb7_crit_edge221:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb7

for.body.sw.bb7_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb7

sw.bb:                                            ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %3 = ptrtoint ptr %intensity45 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 1, ptr %intensity45, align 4
  %4 = ptrtoint ptr %italic48 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %italic48, align 4
  %5 = ptrtoint ptr %vc_def_color71 to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %vc_def_color71, align 2
  %7 = ptrtoint ptr %color75 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 %6, ptr %color75, align 4
  br label %for.inc

sw.bb1:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %8 = ptrtoint ptr %intensity45 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 2, ptr %intensity45, align 4
  br label %for.inc

sw.bb2:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %9 = ptrtoint ptr %intensity45 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %intensity45, align 4
  br label %for.inc

sw.bb5:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %10 = ptrtoint ptr %italic48 to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 1, ptr %italic48, align 4
  br label %for.inc

sw.bb7:                                           ; preds = %for.body.sw.bb7_crit_edge, %for.body.sw.bb7_crit_edge221
  %11 = ptrtoint ptr %underline51 to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 1, ptr %underline51, align 1
  br label %for.inc

sw.bb9:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %12 = ptrtoint ptr %blink54 to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 1, ptr %blink54, align 2
  br label %for.inc

sw.bb11:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %13 = ptrtoint ptr %reverse57 to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 1, ptr %reverse57, align 1
  br label %for.inc

sw.bb13:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %14 = ptrtoint ptr %charset to i32
  call void @__asan_load1_noabort(i32 %14)
  %bf.load = load i8, ptr %charset, align 1
  %bf.lshr = lshr i8 %bf.load, 7
  %bf.cast = zext i8 %bf.lshr to i32
  %arrayidx16 = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 1, i32 3, i32 %bf.cast
  %15 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %arrayidx16, align 1
  %conv = zext i8 %16 to i32
  %call = tail call ptr @set_translate(i32 noundef %conv, ptr noundef %vc) #21
  %17 = ptrtoint ptr %vc_translate34 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %call, ptr %vc_translate34, align 4
  %18 = ptrtoint ptr %vc_disp_ctrl35 to i32
  call void @__asan_load2_noabort(i32 %18)
  %bf.load17 = load i16, ptr %vc_disp_ctrl35, align 4
  %bf.clear19 = and i16 %bf.load17, 16383
  store i16 %bf.clear19, ptr %vc_disp_ctrl35, align 4
  br label %for.inc

sw.bb21:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %call22 = tail call ptr @set_translate(i32 noundef 2, ptr noundef %vc) #21
  %19 = ptrtoint ptr %vc_translate34 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %call22, ptr %vc_translate34, align 4
  %20 = ptrtoint ptr %vc_disp_ctrl35 to i32
  call void @__asan_load2_noabort(i32 %20)
  %bf.load25 = load i16, ptr %vc_disp_ctrl35, align 4
  %bf.set27 = and i16 %bf.load25, 16383
  %bf.clear30 = or i16 %bf.set27, -32768
  store i16 %bf.clear30, ptr %vc_disp_ctrl35, align 4
  br label %for.inc

sw.bb32:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %call33 = tail call ptr @set_translate(i32 noundef 2, ptr noundef %vc) #21
  %21 = ptrtoint ptr %vc_translate34 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %call33, ptr %vc_translate34, align 4
  %22 = ptrtoint ptr %vc_disp_ctrl35 to i32
  call void @__asan_load2_noabort(i32 %22)
  %bf.load36 = load i16, ptr %vc_disp_ctrl35, align 4
  %bf.set42 = or i16 %bf.load36, -16384
  store i16 %bf.set42, ptr %vc_disp_ctrl35, align 4
  br label %for.inc

sw.bb43:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %23 = ptrtoint ptr %intensity45 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 1, ptr %intensity45, align 4
  br label %for.inc

sw.bb46:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %24 = ptrtoint ptr %italic48 to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 0, ptr %italic48, align 4
  br label %for.inc

sw.bb49:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %25 = ptrtoint ptr %underline51 to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 0, ptr %underline51, align 1
  br label %for.inc

sw.bb52:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %26 = ptrtoint ptr %blink54 to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 0, ptr %blink54, align 2
  br label %for.inc

sw.bb55:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %27 = ptrtoint ptr %reverse57 to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 0, ptr %reverse57, align 1
  br label %for.inc

sw.bb58:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %call59 = tail call fastcc i32 @vc_t416_color(ptr noundef %vc, i32 noundef %i.0220, ptr noundef nonnull @rgb_foreground)
  br label %for.inc

sw.bb60:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %call61 = tail call fastcc i32 @vc_t416_color(ptr noundef %vc, i32 noundef %i.0220, ptr noundef nonnull @rgb_background)
  br label %for.inc

sw.bb62:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %28 = ptrtoint ptr %vc_def_color71 to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %vc_def_color71, align 2
  %30 = and i8 %29, 15
  %31 = ptrtoint ptr %color75 to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %color75, align 4
  %33 = and i8 %32, -16
  %or216 = or i8 %33, %30
  store i8 %or216, ptr %color75, align 4
  br label %for.inc

sw.bb70:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %34 = ptrtoint ptr %vc_def_color71 to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %vc_def_color71, align 2
  %36 = and i8 %35, -16
  %37 = ptrtoint ptr %color75 to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %color75, align 4
  %39 = and i8 %38, 15
  %or78215 = or i8 %39, %36
  store i8 %or78215, ptr %color75, align 4
  br label %for.inc

sw.default:                                       ; preds = %for.body
  %40 = add i32 %1, -90
  call void @__sanitizer_cov_trace_const_cmp4(i32 18, i32 %40)
  %41 = icmp ult i32 %40, 18
  br i1 %41, label %if.then, label %sw.default.if.end99_crit_edge

sw.default.if.end99_crit_edge:                    ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end99

if.then:                                          ; preds = %sw.default
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %1)
  %cmp92 = icmp ult i32 %1, 100
  br i1 %cmp92, label %if.then94, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then94:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %42 = ptrtoint ptr %intensity45 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 2, ptr %intensity45, align 4
  br label %if.end

if.end:                                           ; preds = %if.then94, %if.then.if.end_crit_edge
  %43 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx, align 4
  %sub = add i32 %44, -60
  store i32 %sub, ptr %arrayidx, align 4
  br label %if.end99

if.end99:                                         ; preds = %if.end, %sw.default.if.end99_crit_edge
  %45 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %arrayidx, align 4
  %47 = add i32 %46, -30
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %47)
  %48 = icmp ult i32 %47, 8
  br i1 %48, label %if.then109, label %if.else

if.then109:                                       ; preds = %if.end99
  call void @__sanitizer_cov_trace_pc() #23
  %arrayidx113 = getelementptr [16 x i8], ptr @color_table, i32 0, i32 %47
  %49 = ptrtoint ptr %arrayidx113 to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %arrayidx113, align 1
  %51 = ptrtoint ptr %color75 to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %color75, align 4
  %53 = and i8 %52, -16
  %or119217 = or i8 %53, %50
  store i8 %or119217, ptr %color75, align 4
  br label %for.inc

if.else:                                          ; preds = %if.end99
  %54 = and i32 %46, -8
  call void @__sanitizer_cov_trace_const_cmp4(i32 40, i32 %54)
  %55 = icmp eq i32 %54, 40
  br i1 %55, label %if.then132, label %if.else.for.inc_crit_edge

if.else.for.inc_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.then132:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  %sub135 = add nsw i32 %46, -40
  %arrayidx136 = getelementptr [16 x i8], ptr @color_table, i32 0, i32 %sub135
  %56 = ptrtoint ptr %arrayidx136 to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %arrayidx136, align 1
  %shl = shl i8 %57, 4
  %58 = ptrtoint ptr %color75 to i32
  call void @__asan_load1_noabort(i32 %58)
  %59 = load i8, ptr %color75, align 4
  %60 = and i8 %59, 15
  %or142 = or i8 %60, %shl
  store i8 %or142, ptr %color75, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.then132, %if.else.for.inc_crit_edge, %if.then109, %sw.bb70, %sw.bb62, %sw.bb60, %sw.bb58, %sw.bb55, %sw.bb52, %sw.bb49, %sw.bb46, %sw.bb43, %sw.bb32, %sw.bb21, %sw.bb13, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb2, %sw.bb1, %sw.bb
  %i.1 = phi i32 [ %i.0220, %if.then109 ], [ %i.0220, %if.then132 ], [ %i.0220, %if.else.for.inc_crit_edge ], [ %i.0220, %sw.bb70 ], [ %i.0220, %sw.bb62 ], [ %call61, %sw.bb60 ], [ %call59, %sw.bb58 ], [ %i.0220, %sw.bb55 ], [ %i.0220, %sw.bb52 ], [ %i.0220, %sw.bb49 ], [ %i.0220, %sw.bb46 ], [ %i.0220, %sw.bb43 ], [ %i.0220, %sw.bb32 ], [ %i.0220, %sw.bb21 ], [ %i.0220, %sw.bb13 ], [ %i.0220, %sw.bb11 ], [ %i.0220, %sw.bb9 ], [ %i.0220, %sw.bb7 ], [ %i.0220, %sw.bb5 ], [ %i.0220, %sw.bb2 ], [ %i.0220, %sw.bb1 ], [ %i.0220, %sw.bb ]
  %inc = add i32 %i.1, 1
  %61 = ptrtoint ptr %vc_npar to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %vc_npar, align 4
  %cmp.not = icmp ugt i32 %inc, %62
  br i1 %cmp.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @update_attr(ptr noundef %vc)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @vt_set_led_state(i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @csi_X(ptr noundef %vc, i32 noundef %vpar) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %vpar)
  %tobool.not = icmp eq i32 %vpar, 0
  %spec.select = select i1 %tobool.not, i32 1, i32 %vpar
  %vc_cols = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %0 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vc_cols, align 4
  %state = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %2 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %state, align 4
  %sub = sub i32 %1, %3
  %4 = tail call i32 @llvm.umin.i32(i32 %spec.select, i32 %sub)
  %vc_uni_screen.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 50
  %5 = ptrtoint ptr %vc_uni_screen.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %vc_uni_screen.i, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %entry.vc_uniscr_clear_line.exit_crit_edge, label %if.then.i

entry.vc_uniscr_clear_line.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_clear_line.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %y.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %7 = ptrtoint ptr %y.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %y.i, align 4
  %arrayidx.i = getelementptr [0 x ptr], ptr %6, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx.i, align 4
  %arrayidx1.i = getelementptr i32, ptr %10, i32 %3
  %mul.i.i = shl i32 %4, 2
  %call.i.i = tail call ptr @__memset32(ptr noundef %arrayidx1.i, i32 noundef 32, i32 noundef %mul.i.i) #21
  br label %vc_uniscr_clear_line.exit

vc_uniscr_clear_line.exit:                        ; preds = %if.then.i, %entry.vc_uniscr_clear_line.exit_crit_edge
  %vc_pos = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 26
  %11 = ptrtoint ptr %vc_pos to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %vc_pos, align 4
  %13 = inttoptr i32 %12 to ptr
  %vc_video_erase_char = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 29
  %14 = ptrtoint ptr %vc_video_erase_char to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %vc_video_erase_char, align 4
  %mul = and i32 %4, 2147483647
  %call.i = tail call ptr @memset16(ptr noundef %13, i16 noundef zeroext %15, i32 noundef %mul) #21
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %16 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.not.i.i = icmp eq i32 %16, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %vc_uniscr_clear_line.exit.con_is_visible.exit.i_crit_edge

vc_uniscr_clear_line.exit.con_is_visible.exit.i_crit_edge: ; preds = %vc_uniscr_clear_line.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

land.lhs.true.i.i:                                ; preds = %vc_uniscr_clear_line.exit
  %call1.i.i = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool2.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool2.not.i.i, label %land.rhs.i.i, label %land.lhs.true.i.i.con_is_visible.exit.i_crit_edge

land.lhs.true.i.i.con_is_visible.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

land.rhs.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %17 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool3.not.i.i = icmp eq i32 %17, 0
  br i1 %tobool3.not.i.i, label %do.end.i.i, label %land.rhs.i.i.con_is_visible.exit.i_crit_edge, !prof !365

land.rhs.i.i.con_is_visible.exit.i_crit_edge:     ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4012, i32 noundef 9, ptr noundef null) #21
  br label %con_is_visible.exit.i

con_is_visible.exit.i:                            ; preds = %do.end.i.i, %land.rhs.i.i.con_is_visible.exit.i_crit_edge, %land.lhs.true.i.i.con_is_visible.exit.i_crit_edge, %vc_uniscr_clear_line.exit.con_is_visible.exit.i_crit_edge
  %vc_display_fg.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 47
  %18 = ptrtoint ptr %vc_display_fg.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %vc_display_fg.i.i, align 4
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %19, align 4
  %cmp.i.i = icmp eq ptr %21, %vc
  br i1 %cmp.i.i, label %con_should_update.exit, label %con_is_visible.exit.i.if.end7_crit_edge

con_is_visible.exit.i.if.end7_crit_edge:          ; preds = %con_is_visible.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7

con_should_update.exit:                           ; preds = %con_is_visible.exit.i
  %22 = load i32, ptr @console_blanked, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool.not.i25 = icmp eq i32 %22, 0
  br i1 %tobool.not.i25, label %if.then3, label %con_should_update.exit.if.end7_crit_edge

con_should_update.exit.if.end7_crit_edge:         ; preds = %con_should_update.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7

if.then3:                                         ; preds = %con_should_update.exit
  call void @__sanitizer_cov_trace_pc() #23
  %vc_sw = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 14
  %23 = ptrtoint ptr %vc_sw to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %vc_sw, align 4
  %con_clear = getelementptr inbounds %struct.consw, ptr %24, i32 0, i32 4
  %25 = ptrtoint ptr %con_clear to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %con_clear, align 4
  %y = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %27 = ptrtoint ptr %y to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %y, align 4
  %29 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %state, align 4
  tail call void %26(ptr noundef %vc, i32 noundef %28, i32 noundef %30, i32 noundef 1, i32 noundef %4) #21
  br label %if.end7

if.end7:                                          ; preds = %if.then3, %con_should_update.exit.if.end7_crit_edge, %con_is_visible.exit.i.if.end7_crit_edge
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %31 = ptrtoint ptr %vc_need_wrap to i32
  call void @__asan_load2_noabort(i32 %31)
  %bf.load = load i16, ptr %vc_need_wrap, align 4
  %bf.clear = and i16 %bf.load, -33
  store i16 %bf.clear, ptr %vc_need_wrap, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @setterm_command(ptr noundef %vc) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %vc_par = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 32
  %0 = ptrtoint ptr %vc_par to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vc_par, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.82)
  switch i32 %1, label %entry.sw.epilog_crit_edge [
    i32 1, label %sw.bb
    i32 2, label %sw.bb9
    i32 8, label %sw.bb29
    i32 9, label %sw.bb37
    i32 10, label %sw.bb42
    i32 11, label %sw.bb50
    i32 12, label %sw.bb68
    i32 13, label %sw.bb84
    i32 14, label %sw.bb85
    i32 15, label %sw.bb97
    i32 16, label %sw.bb99
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  %vc_can_do_color = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %3 = ptrtoint ptr %vc_can_do_color to i32
  call void @__asan_load2_noabort(i32 %3)
  %bf.load = load i16, ptr %vc_can_do_color, align 4
  %4 = and i16 %bf.load, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %4)
  %tobool.not = icmp eq i16 %4, 0
  br i1 %tobool.not, label %sw.bb.sw.epilog_crit_edge, label %land.lhs.true

sw.bb.sw.epilog_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

land.lhs.true:                                    ; preds = %sw.bb
  %arrayidx2 = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 32, i32 1
  %5 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %6)
  %cmp = icmp ult i32 %6, 16
  br i1 %cmp, label %if.then, label %land.lhs.true.sw.epilog_crit_edge

land.lhs.true.sw.epilog_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

if.then:                                          ; preds = %land.lhs.true
  %arrayidx5 = getelementptr [16 x i8], ptr @color_table, i32 0, i32 %6
  %7 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %arrayidx5, align 1
  %vc_ulcolor = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 20
  %9 = ptrtoint ptr %vc_ulcolor to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %8, ptr %vc_ulcolor, align 1
  %underline = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 7
  %10 = ptrtoint ptr %underline to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %underline, align 1, !range !368
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool6.not = icmp eq i8 %11, 0
  br i1 %tobool6.not, label %if.then.sw.epilog_crit_edge, label %if.then7

if.then.sw.epilog_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

if.then7:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @update_attr(ptr noundef %vc)
  br label %sw.epilog

sw.bb9:                                           ; preds = %entry
  %vc_can_do_color10 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %12 = ptrtoint ptr %vc_can_do_color10 to i32
  call void @__asan_load2_noabort(i32 %12)
  %bf.load11 = load i16, ptr %vc_can_do_color10, align 4
  %13 = and i16 %bf.load11, 16
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %13)
  %tobool15.not = icmp eq i16 %13, 0
  br i1 %tobool15.not, label %sw.bb9.sw.epilog_crit_edge, label %land.lhs.true16

sw.bb9.sw.epilog_crit_edge:                       ; preds = %sw.bb9
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

land.lhs.true16:                                  ; preds = %sw.bb9
  %arrayidx18 = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 32, i32 1
  %14 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx18, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %15)
  %cmp19 = icmp ult i32 %15, 16
  br i1 %cmp19, label %if.then20, label %land.lhs.true16.sw.epilog_crit_edge

land.lhs.true16.sw.epilog_crit_edge:              ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

if.then20:                                        ; preds = %land.lhs.true16
  %arrayidx23 = getelementptr [16 x i8], ptr @color_table, i32 0, i32 %15
  %16 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %arrayidx23, align 1
  %vc_halfcolor = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 22
  %18 = ptrtoint ptr %vc_halfcolor to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %17, ptr %vc_halfcolor, align 1
  %intensity = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 5
  %19 = ptrtoint ptr %intensity to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %intensity, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp25 = icmp eq i32 %20, 0
  br i1 %cmp25, label %if.then26, label %if.then20.sw.epilog_crit_edge

if.then20.sw.epilog_crit_edge:                    ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

if.then26:                                        ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @update_attr(ptr noundef %vc)
  br label %sw.epilog

sw.bb29:                                          ; preds = %entry
  %vc_attr = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 18
  %21 = ptrtoint ptr %vc_attr to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %vc_attr, align 1
  %vc_def_color = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 19
  %23 = ptrtoint ptr %vc_def_color to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 %22, ptr %vc_def_color, align 2
  %vc_hi_font_mask = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 27
  %24 = ptrtoint ptr %vc_hi_font_mask to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %vc_hi_font_mask, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 256, i16 %25)
  %cmp30 = icmp eq i16 %25, 256
  br i1 %cmp30, label %if.then32, label %sw.bb29.if.end36_crit_edge

sw.bb29.if.end36_crit_edge:                       ; preds = %sw.bb29
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end36

if.then32:                                        ; preds = %sw.bb29
  call void @__sanitizer_cov_trace_pc() #23
  %26 = lshr i8 %22, 1
  %27 = ptrtoint ptr %vc_def_color to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 %26, ptr %vc_def_color, align 2
  br label %if.end36

if.end36:                                         ; preds = %if.then32, %sw.bb29.if.end36_crit_edge
  %intensity.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 5
  %28 = ptrtoint ptr %intensity.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 1, ptr %intensity.i, align 4
  %italic.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 6
  %29 = ptrtoint ptr %italic.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 0, ptr %italic.i, align 4
  %30 = ptrtoint ptr %vc_def_color to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %vc_def_color, align 2
  %color.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 2
  %32 = ptrtoint ptr %color.i to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 %31, ptr %color.i, align 4
  tail call fastcc void @update_attr(ptr noundef %vc)
  br label %sw.epilog

sw.bb37:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %arrayidx39 = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 32, i32 1
  %33 = ptrtoint ptr %arrayidx39 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx39, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 60, i32 %34)
  %cmp40 = icmp ult i32 %34, 60
  %phi.bo = mul i32 %34, 60
  %cond = select i1 %cmp40, i32 %phi.bo, i32 3600
  store i32 %cond, ptr @blankinterval, align 4
  tail call void @poke_blanked_console()
  br label %sw.epilog

sw.bb42:                                          ; preds = %entry
  %vc_npar = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 31
  %35 = ptrtoint ptr %vc_npar to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %vc_npar, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %cmp43.not = icmp eq i32 %36, 0
  br i1 %cmp43.not, label %if.else, label %if.then45

if.then45:                                        ; preds = %sw.bb42
  call void @__sanitizer_cov_trace_pc() #23
  %arrayidx47 = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 32, i32 1
  %37 = ptrtoint ptr %arrayidx47 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx47, align 4
  %vc_bell_pitch = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 44
  %39 = ptrtoint ptr %vc_bell_pitch to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %vc_bell_pitch, align 4
  br label %sw.epilog

if.else:                                          ; preds = %sw.bb42
  call void @__sanitizer_cov_trace_pc() #23
  %vc_bell_pitch48 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 44
  %40 = ptrtoint ptr %vc_bell_pitch48 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 750, ptr %vc_bell_pitch48, align 4
  br label %sw.epilog

sw.bb50:                                          ; preds = %entry
  %vc_npar51 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 31
  %41 = ptrtoint ptr %vc_npar51 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %vc_npar51, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %cmp52.not = icmp eq i32 %42, 0
  br i1 %cmp52.not, label %if.else65, label %if.then54

if.then54:                                        ; preds = %sw.bb50
  %arrayidx56 = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 32, i32 1
  %43 = ptrtoint ptr %arrayidx56 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx56, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2000, i32 %44)
  %cmp57 = icmp ult i32 %44, 2000
  br i1 %cmp57, label %if.else.i, label %if.then54.cond.end63_crit_edge

if.then54.cond.end63_crit_edge:                   ; preds = %if.then54
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end63

if.else.i:                                        ; preds = %if.then54
  call void @__sanitizer_cov_trace_pc() #23
  %call2.i = tail call i32 @__msecs_to_jiffies(i32 noundef %44) #21
  br label %cond.end63

cond.end63:                                       ; preds = %if.else.i, %if.then54.cond.end63_crit_edge
  %cond64 = phi i32 [ 0, %if.then54.cond.end63_crit_edge ], [ %call2.i, %if.else.i ]
  %vc_bell_duration = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 45
  %45 = ptrtoint ptr %vc_bell_duration to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %cond64, ptr %vc_bell_duration, align 4
  br label %sw.epilog

if.else65:                                        ; preds = %sw.bb50
  call void @__sanitizer_cov_trace_pc() #23
  %vc_bell_duration66 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 45
  %46 = ptrtoint ptr %vc_bell_duration66 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 12, ptr %vc_bell_duration66, align 4
  br label %sw.epilog

sw.bb68:                                          ; preds = %entry
  %arrayidx70 = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 32, i32 1
  %47 = ptrtoint ptr %arrayidx70 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx70, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %cmp71.not = icmp eq i32 %48, 0
  br i1 %cmp71.not, label %sw.bb68.sw.epilog_crit_edge, label %land.lhs.true73

sw.bb68.sw.epilog_crit_edge:                      ; preds = %sw.bb68
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

land.lhs.true73:                                  ; preds = %sw.bb68
  %sub = add i32 %48, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 63, i32 %sub)
  %cmp.i = icmp ult i32 %sub, 63
  br i1 %cmp.i, label %vc_cons_allocated.exit, label %land.lhs.true73.sw.epilog_crit_edge

land.lhs.true73.sw.epilog_crit_edge:              ; preds = %land.lhs.true73
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

vc_cons_allocated.exit:                           ; preds = %land.lhs.true73
  %arrayidx.i = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %sub
  %49 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %arrayidx.i, align 4
  %tobool.i.not = icmp eq ptr %50, null
  br i1 %tobool.i.not, label %vc_cons_allocated.exit.sw.epilog_crit_edge, label %vc_cons_allocated.exit.i

vc_cons_allocated.exit.sw.epilog_crit_edge:       ; preds = %vc_cons_allocated.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

vc_cons_allocated.exit.i:                         ; preds = %vc_cons_allocated.exit
  %51 = load i32, ptr @fg_console, align 4
  %arrayidx.i169 = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %51
  %52 = ptrtoint ptr %arrayidx.i169 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %arrayidx.i169, align 4
  %54 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %arrayidx.i, align 4
  %tobool.i.not.i = icmp eq ptr %55, null
  br i1 %tobool.i.not.i, label %vc_cons_allocated.exit.i.sw.epilog_crit_edge, label %lor.lhs.false.i

vc_cons_allocated.exit.i.sw.epilog_crit_edge:     ; preds = %vc_cons_allocated.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

lor.lhs.false.i:                                  ; preds = %vc_cons_allocated.exit.i
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @vt_dont_switch to i32))
  %56 = load i8, ptr @vt_dont_switch, align 1, !range !368
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %56)
  %tobool1.not.i = icmp eq i8 %56, 0
  br i1 %tobool1.not.i, label %lor.lhs.false2.i, label %lor.lhs.false.i.sw.epilog_crit_edge

lor.lhs.false.i.sw.epilog_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

lor.lhs.false2.i:                                 ; preds = %lor.lhs.false.i
  %vt_mode.i = getelementptr inbounds %struct.vc_data, ptr %53, i32 0, i32 33
  %57 = ptrtoint ptr %vt_mode.i to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %vt_mode.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %58)
  %cmp.i170 = icmp eq i8 %58, 0
  br i1 %cmp.i170, label %land.lhs.true.i, label %lor.lhs.false2.i.if.end.i171_crit_edge

lor.lhs.false2.i.if.end.i171_crit_edge:           ; preds = %lor.lhs.false2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i171

land.lhs.true.i:                                  ; preds = %lor.lhs.false2.i
  %vc_mode.i = getelementptr inbounds %struct.vc_data, ptr %53, i32 0, i32 17
  %59 = ptrtoint ptr %vc_mode.i to i32
  call void @__asan_load1_noabort(i32 %59)
  %60 = load i8, ptr %vc_mode.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %60)
  %cmp5.i = icmp eq i8 %60, 1
  br i1 %cmp5.i, label %land.lhs.true.i.sw.epilog_crit_edge, label %land.lhs.true.i.if.end.i171_crit_edge

land.lhs.true.i.if.end.i171_crit_edge:            ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i171

land.lhs.true.i.sw.epilog_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

if.end.i171:                                      ; preds = %land.lhs.true.i.if.end.i171_crit_edge, %lor.lhs.false2.i.if.end.i171_crit_edge
  store i32 %sub, ptr @want_console, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %61 = load ptr, ptr @system_wq, align 4
  %call.i.i.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %61, ptr noundef nonnull @console_work) #21
  br label %sw.epilog

sw.bb84:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @poke_blanked_console()
  br label %sw.epilog

sw.bb85:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %arrayidx87 = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 32, i32 1
  %62 = ptrtoint ptr %arrayidx87 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %arrayidx87, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 60, i32 %63)
  %cmp89 = icmp ult i32 %63, 60
  %phi.bo168 = mul i32 %63, 6000
  %cond94 = select i1 %cmp89, i32 %phi.bo168, i32 360000
  store i32 %cond94, ptr @vesa_off_interval, align 4
  br label %sw.epilog

sw.bb97:                                          ; preds = %entry
  %64 = load i32, ptr @last_console, align 4
  %65 = load i32, ptr @fg_console, align 4
  %arrayidx.i173 = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %65
  %66 = ptrtoint ptr %arrayidx.i173 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %arrayidx.i173, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 63, i32 %64)
  %cmp.i.i174 = icmp ult i32 %64, 63
  br i1 %cmp.i.i174, label %vc_cons_allocated.exit.i177, label %sw.bb97.sw.epilog_crit_edge

sw.bb97.sw.epilog_crit_edge:                      ; preds = %sw.bb97
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

vc_cons_allocated.exit.i177:                      ; preds = %sw.bb97
  %arrayidx.i.i175 = getelementptr [63 x %struct.vc], ptr @vc_cons, i32 0, i32 %64
  %68 = ptrtoint ptr %arrayidx.i.i175 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %arrayidx.i.i175, align 4
  %tobool.i.not.i176 = icmp eq ptr %69, null
  br i1 %tobool.i.not.i176, label %vc_cons_allocated.exit.i177.sw.epilog_crit_edge, label %lor.lhs.false.i179

vc_cons_allocated.exit.i177.sw.epilog_crit_edge:  ; preds = %vc_cons_allocated.exit.i177
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

lor.lhs.false.i179:                               ; preds = %vc_cons_allocated.exit.i177
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @vt_dont_switch to i32))
  %70 = load i8, ptr @vt_dont_switch, align 1, !range !368
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %70)
  %tobool1.not.i178 = icmp eq i8 %70, 0
  br i1 %tobool1.not.i178, label %lor.lhs.false2.i182, label %lor.lhs.false.i179.sw.epilog_crit_edge

lor.lhs.false.i179.sw.epilog_crit_edge:           ; preds = %lor.lhs.false.i179
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

lor.lhs.false2.i182:                              ; preds = %lor.lhs.false.i179
  %vt_mode.i180 = getelementptr inbounds %struct.vc_data, ptr %67, i32 0, i32 33
  %71 = ptrtoint ptr %vt_mode.i180 to i32
  call void @__asan_load1_noabort(i32 %71)
  %72 = load i8, ptr %vt_mode.i180, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %72)
  %cmp.i181 = icmp eq i8 %72, 0
  br i1 %cmp.i181, label %land.lhs.true.i185, label %lor.lhs.false2.i182.if.end.i187_crit_edge

lor.lhs.false2.i182.if.end.i187_crit_edge:        ; preds = %lor.lhs.false2.i182
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i187

land.lhs.true.i185:                               ; preds = %lor.lhs.false2.i182
  %vc_mode.i183 = getelementptr inbounds %struct.vc_data, ptr %67, i32 0, i32 17
  %73 = ptrtoint ptr %vc_mode.i183 to i32
  call void @__asan_load1_noabort(i32 %73)
  %74 = load i8, ptr %vc_mode.i183, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %74)
  %cmp5.i184 = icmp eq i8 %74, 1
  br i1 %cmp5.i184, label %land.lhs.true.i185.sw.epilog_crit_edge, label %land.lhs.true.i185.if.end.i187_crit_edge

land.lhs.true.i185.if.end.i187_crit_edge:         ; preds = %land.lhs.true.i185
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i187

land.lhs.true.i185.sw.epilog_crit_edge:           ; preds = %land.lhs.true.i185
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

if.end.i187:                                      ; preds = %land.lhs.true.i185.if.end.i187_crit_edge, %lor.lhs.false2.i182.if.end.i187_crit_edge
  store i32 %64, ptr @want_console, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %75 = load ptr, ptr @system_wq, align 4
  %call.i.i.i.i186 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %75, ptr noundef nonnull @console_work) #21
  br label %sw.epilog

sw.bb99:                                          ; preds = %entry
  %vc_npar100 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 31
  %76 = ptrtoint ptr %vc_npar100 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %vc_npar100, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %77)
  %cmp101.not = icmp eq i32 %77, 0
  br i1 %cmp101.not, label %sw.bb99.if.else117_crit_edge, label %land.lhs.true103

sw.bb99.if.else117_crit_edge:                     ; preds = %sw.bb99
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else117

land.lhs.true103:                                 ; preds = %sw.bb99
  %arrayidx105 = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 32, i32 1
  %78 = ptrtoint ptr %arrayidx105 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %arrayidx105, align 4
  %80 = add i32 %79, -50
  call void @__sanitizer_cov_trace_const_cmp4(i32 65486, i32 %80)
  %81 = icmp ult i32 %80, 65486
  br i1 %81, label %if.then113, label %land.lhs.true103.if.else117_crit_edge

land.lhs.true103.if.else117_crit_edge:            ; preds = %land.lhs.true103
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else117

if.then113:                                       ; preds = %land.lhs.true103
  call void @__sanitizer_cov_trace_pc() #23
  %conv116 = trunc i32 %79 to i16
  %vc_cur_blink_ms = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 46
  %82 = ptrtoint ptr %vc_cur_blink_ms to i32
  call void @__asan_store2_noabort(i32 %82)
  store i16 %conv116, ptr %vc_cur_blink_ms, align 4
  br label %sw.epilog

if.else117:                                       ; preds = %land.lhs.true103.if.else117_crit_edge, %sw.bb99.if.else117_crit_edge
  %vc_cur_blink_ms118 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 46
  %83 = ptrtoint ptr %vc_cur_blink_ms118 to i32
  call void @__asan_store2_noabort(i32 %83)
  store i16 200, ptr %vc_cur_blink_ms118, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.else117, %if.then113, %if.end.i187, %land.lhs.true.i185.sw.epilog_crit_edge, %lor.lhs.false.i179.sw.epilog_crit_edge, %vc_cons_allocated.exit.i177.sw.epilog_crit_edge, %sw.bb97.sw.epilog_crit_edge, %sw.bb85, %sw.bb84, %if.end.i171, %land.lhs.true.i.sw.epilog_crit_edge, %lor.lhs.false.i.sw.epilog_crit_edge, %vc_cons_allocated.exit.i.sw.epilog_crit_edge, %vc_cons_allocated.exit.sw.epilog_crit_edge, %land.lhs.true73.sw.epilog_crit_edge, %sw.bb68.sw.epilog_crit_edge, %if.else65, %cond.end63, %if.else, %if.then45, %sw.bb37, %if.end36, %if.then26, %if.then20.sw.epilog_crit_edge, %land.lhs.true16.sw.epilog_crit_edge, %sw.bb9.sw.epilog_crit_edge, %if.then7, %if.then.sw.epilog_crit_edge, %land.lhs.true.sw.epilog_crit_edge, %sw.bb.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @vc_setGx(ptr noundef %vc, i32 noundef %which, i32 noundef %c) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 1, i32 3, i32 %which
  %0 = zext i32 %c to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.83)
  switch i32 %c, label %entry.sw.epilog_crit_edge [
    i32 48, label %entry.sw.epilog.sink.split_crit_edge
    i32 66, label %sw.bb1
    i32 85, label %sw.bb2
    i32 75, label %sw.bb3
  ]

entry.sw.epilog.sink.split_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog.sink.split

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog.sink.split

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog.sink.split

sw.bb3:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog.sink.split

sw.epilog.sink.split:                             ; preds = %sw.bb3, %sw.bb2, %sw.bb1, %entry.sw.epilog.sink.split_crit_edge
  %.sink = phi i8 [ 3, %sw.bb3 ], [ 2, %sw.bb2 ], [ 0, %sw.bb1 ], [ 1, %entry.sw.epilog.sink.split_crit_edge ]
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 %.sink, ptr %arrayidx, align 1
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.sink.split, %entry.sw.epilog_crit_edge
  %charset5 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 4
  %2 = ptrtoint ptr %charset5 to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %charset5, align 1
  %bf.lshr = lshr i8 %bf.load, 7
  %bf.cast = zext i8 %bf.lshr to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %bf.cast, i32 %which)
  %cmp = icmp eq i32 %bf.cast, %which
  br i1 %cmp, label %if.then, label %sw.epilog.if.end_crit_edge

sw.epilog.if.end_crit_edge:                       ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #23
  %3 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %arrayidx, align 1
  %conv = zext i8 %4 to i32
  %call = tail call ptr @set_translate(i32 noundef %conv, ptr noundef %vc) #21
  %vc_translate = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 42
  %5 = ptrtoint ptr %vc_translate to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call, ptr %vc_translate, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.epilog.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @vc_t416_color(ptr noundef %vc, i32 noundef %i, ptr nocapture noundef readonly %set_color) unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.rgb, align 1
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %c) #21
  %0 = getelementptr inbounds %struct.rgb, ptr %c, i32 0, i32 1
  %1 = getelementptr inbounds %struct.rgb, ptr %c, i32 0, i32 2
  %inc = add i32 %i, 1
  %vc_npar = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 31
  %2 = ptrtoint ptr %vc_npar to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vc_npar, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc, i32 %3)
  %cmp = icmp ugt i32 %inc, %3
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 32, i32 %inc
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.84)
  switch i32 %5, label %if.end.cleanup_crit_edge [
    i32 5, label %land.lhs.true
    i32 2, label %land.lhs.true11
  ]

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

land.lhs.true:                                    ; preds = %if.end
  %add = add i32 %i, 2
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %3)
  %cmp3.not = icmp ugt i32 %add, %3
  br i1 %cmp3.not, label %land.lhs.true.cleanup_crit_edge, label %if.then4

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then4:                                         ; preds = %land.lhs.true
  %arrayidx7 = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 32, i32 %add
  %7 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %arrayidx7, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %8)
  %cmp.i = icmp slt i32 %8, 8
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #23
  %and.i = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  %conv.i = select i1 %tobool.not.i, i8 0, i8 -86
  %9 = ptrtoint ptr %c to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %conv.i, ptr %c, align 1
  %and1.i = and i32 %8, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool2.not.i = icmp eq i32 %and1.i, 0
  %conv4.i = select i1 %tobool2.not.i, i8 0, i8 -86
  %10 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 %conv4.i, ptr %0, align 1
  %and5.i = and i32 %8, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i)
  %tobool6.not.i = icmp eq i32 %and5.i, 0
  %conv8.i = select i1 %tobool6.not.i, i8 0, i8 -86
  %11 = ptrtoint ptr %1 to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %conv8.i, ptr %1, align 1
  br label %if.end30

if.else.i:                                        ; preds = %if.then4
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %8)
  %cmp9.i = icmp ult i32 %8, 16
  br i1 %cmp9.i, label %if.then11.i, label %if.else27.i

if.then11.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  %and12.i = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12.i)
  %tobool13.not.i = icmp eq i32 %and12.i, 0
  %conv15.i = select i1 %tobool13.not.i, i8 85, i8 -1
  %12 = ptrtoint ptr %c to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %conv15.i, ptr %c, align 1
  %and17.i = and i32 %8, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17.i)
  %tobool18.not.i = icmp eq i32 %and17.i, 0
  %conv20.i = select i1 %tobool18.not.i, i8 85, i8 -1
  %13 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 %conv20.i, ptr %0, align 1
  %and22.i = and i32 %8, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22.i)
  %tobool23.not.i = icmp eq i32 %and22.i, 0
  %conv25.i = select i1 %tobool23.not.i, i8 85, i8 -1
  %14 = ptrtoint ptr %1 to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %conv25.i, ptr %1, align 1
  br label %if.end30

if.else27.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 232, i32 %8)
  %cmp28.i = icmp ult i32 %8, 232
  %15 = trunc i32 %8 to i8
  br i1 %cmp28.i, label %if.then30.i, label %if.else46.i

if.then30.i:                                      ; preds = %if.else27.i
  call void @__sanitizer_cov_trace_pc() #23
  %div78.lhs.trunc.i = add i8 %15, -16
  %div7879.i = udiv i8 %div78.lhs.trunc.i, 36
  %div78.zext.i = zext i8 %div7879.i to i16
  %mul.i = mul nuw nsw i16 %div78.zext.i, 85
  %div31808192.i = lshr i16 %mul.i, 1
  %conv32.i = trunc i16 %div31808192.i to i8
  %16 = ptrtoint ptr %c to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %conv32.i, ptr %c, align 1
  %div78.lhs.trunc.i.frozen = freeze i8 %div78.lhs.trunc.i
  %div358283.i = udiv i8 %div78.lhs.trunc.i.frozen, 6
  %rem8485.i = urem i8 %div358283.i, 6
  %rem84.zext.i = zext i8 %rem8485.i to i16
  %mul36.i = mul nuw nsw i16 %rem84.zext.i, 85
  %div37868793.i = lshr i16 %mul36.i, 1
  %conv38.i = trunc i16 %div37868793.i to i8
  %17 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %conv38.i, ptr %0, align 1
  %18 = mul i8 %div358283.i, 6
  %rem418889.i.decomposed = sub i8 %div78.lhs.trunc.i.frozen, %18
  %rem4188.zext.i = zext i8 %rem418889.i.decomposed to i16
  %mul42.i = mul nuw nsw i16 %rem4188.zext.i, 85
  %div43909194.i = lshr i16 %mul42.i, 1
  %conv44.i = trunc i16 %div43909194.i to i8
  %19 = ptrtoint ptr %1 to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 %conv44.i, ptr %1, align 1
  br label %if.end30

if.else46.i:                                      ; preds = %if.else27.i
  call void @__sanitizer_cov_trace_pc() #23
  %20 = mul i8 %15, 10
  %conv49.i = add i8 %20, -8
  %21 = ptrtoint ptr %1 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %conv49.i, ptr %1, align 1
  %22 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 %conv49.i, ptr %0, align 1
  %23 = ptrtoint ptr %c to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 %conv49.i, ptr %c, align 1
  br label %if.end30

land.lhs.true11:                                  ; preds = %if.end
  %add12 = add i32 %i, 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add12, i32 %3)
  %cmp14.not = icmp ugt i32 %add12, %3
  br i1 %cmp14.not, label %land.lhs.true11.cleanup_crit_edge, label %if.then15

land.lhs.true11.cleanup_crit_edge:                ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then15:                                        ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #23
  %add17 = add i32 %i, 2
  %arrayidx18 = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 32, i32 %add17
  %24 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx18, align 4
  %conv = trunc i32 %25 to i8
  %26 = ptrtoint ptr %c to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 %conv, ptr %c, align 1
  %add20 = add i32 %i, 3
  %arrayidx21 = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 32, i32 %add20
  %27 = ptrtoint ptr %arrayidx21 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx21, align 4
  %conv22 = trunc i32 %28 to i8
  %29 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 %conv22, ptr %0, align 1
  %arrayidx25 = getelementptr %struct.vc_data, ptr %vc, i32 0, i32 32, i32 %add12
  %30 = ptrtoint ptr %arrayidx25 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %arrayidx25, align 4
  %conv26 = trunc i32 %31 to i8
  %32 = ptrtoint ptr %1 to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 %conv26, ptr %1, align 1
  br label %if.end30

if.end30:                                         ; preds = %if.then15, %if.else46.i, %if.then30.i, %if.then11.i, %if.then.i
  %i.addr.0 = phi i32 [ %add12, %if.then15 ], [ %add, %if.then.i ], [ %add, %if.then11.i ], [ %add, %if.then30.i ], [ %add, %if.else46.i ]
  call void %set_color(ptr noundef %vc, ptr noundef nonnull %c) #21, !callees !387
  br label %cleanup

cleanup:                                          ; preds = %if.end30, %land.lhs.true11.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %i.addr.0, %if.end30 ], [ %inc, %entry.cleanup_crit_edge ], [ %inc, %land.lhs.true11.cleanup_crit_edge ], [ %inc, %land.lhs.true.cleanup_crit_edge ], [ %inc, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %c) #21
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @rgb_foreground(ptr nocapture noundef %vc, ptr nocapture noundef readonly %c) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %c to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %c, align 1
  %g = getelementptr inbounds %struct.rgb, ptr %c, i32 0, i32 1
  %2 = ptrtoint ptr %g to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %g, align 1
  %4 = tail call i8 @llvm.umax.i8(i8 %1, i8 %3)
  %b = getelementptr inbounds %struct.rgb, ptr %c, i32 0, i32 2
  %5 = ptrtoint ptr %b to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %b, align 1
  %7 = tail call i8 @llvm.umax.i8(i8 %4, i8 %6)
  %8 = lshr i8 %7, 1
  call void @__sanitizer_cov_trace_cmp1(i8 %8, i8 %1)
  %cmp21 = icmp ult i8 %8, %1
  %hue.0 = select i1 %cmp21, i8 4, i8 0
  call void @__sanitizer_cov_trace_cmp1(i8 %8, i8 %3)
  %cmp29 = icmp ult i8 %8, %3
  %9 = or i8 %hue.0, 2
  %hue.1 = select i1 %cmp29, i8 %9, i8 %hue.0
  call void @__sanitizer_cov_trace_cmp1(i8 %8, i8 %6)
  %cmp40 = icmp ult i8 %8, %6
  %10 = zext i1 %cmp40 to i8
  %hue.2 = or i8 %hue.1, %10
  call void @__sanitizer_cov_trace_const_cmp1(i8 7, i8 %hue.2)
  %cmp48 = icmp eq i8 %hue.2, 7
  call void @__sanitizer_cov_trace_const_cmp1(i8 86, i8 %7)
  %cmp51 = icmp ult i8 %7, 86
  %or.cond = select i1 %cmp48, i1 %cmp51, i1 false
  br i1 %or.cond, label %if.then53, label %if.else

if.then53:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %intensity = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 5
  %11 = ptrtoint ptr %intensity to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 2, ptr %intensity, align 4
  br label %if.end64

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp1(i8 -86, i8 %7)
  %cmp55 = icmp ugt i8 %7, -86
  %intensity59 = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 5
  br i1 %cmp55, label %if.then57, label %if.else60

if.then57:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  %12 = ptrtoint ptr %intensity59 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 2, ptr %intensity59, align 4
  br label %if.end64

if.else60:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  %13 = ptrtoint ptr %intensity59 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 1, ptr %intensity59, align 4
  br label %if.end64

if.end64:                                         ; preds = %if.else60, %if.then57, %if.then53
  %hue.3 = phi i8 [ 0, %if.then53 ], [ %hue.2, %if.then57 ], [ %hue.2, %if.else60 ]
  %color = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 2
  %14 = ptrtoint ptr %color to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %color, align 4
  %16 = and i8 %15, -16
  %or6894 = or i8 %16, %hue.3
  store i8 %or6894, ptr %color, align 4
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @rgb_background(ptr nocapture noundef %vc, ptr nocapture noundef readonly %c) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %color = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 2
  %0 = ptrtoint ptr %color to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %color, align 4
  %2 = and i8 %1, 15
  %3 = ptrtoint ptr %c to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %c, align 1
  %5 = lshr i8 %4, 1
  %6 = and i8 %5, 64
  %or17 = or i8 %6, %2
  %g = getelementptr inbounds %struct.rgb, ptr %c, i32 0, i32 1
  %7 = ptrtoint ptr %g to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %g, align 1
  %9 = lshr i8 %8, 2
  %10 = and i8 %9, 32
  %or618 = or i8 %or17, %10
  %b = getelementptr inbounds %struct.rgb, ptr %c, i32 0, i32 2
  %11 = ptrtoint ptr %b to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %b, align 1
  %13 = lshr i8 %12, 3
  %14 = and i8 %13, 16
  %or1019 = or i8 %or618, %14
  store i8 %or1019, ptr %color, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @insert_char(ptr noundef %vc, i32 noundef %nr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %vc_pos = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 26
  %0 = ptrtoint ptr %vc_pos to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vc_pos, align 4
  %2 = inttoptr i32 %1 to ptr
  %vc_uni_screen.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 50
  %3 = ptrtoint ptr %vc_uni_screen.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %vc_uni_screen.i, align 4
  %tobool.not.i = icmp eq ptr %4, null
  br i1 %tobool.not.i, label %entry.vc_uniscr_insert.exit_crit_edge, label %if.then.i

entry.vc_uniscr_insert.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %vc_uniscr_insert.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %state.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %y.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1, i32 1
  %5 = ptrtoint ptr %y.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %y.i, align 4
  %arrayidx.i = getelementptr [0 x ptr], ptr %4, i32 0, i32 %6
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx.i, align 4
  %9 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %state.i, align 4
  %vc_cols.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %11 = ptrtoint ptr %vc_cols.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %vc_cols.i, align 4
  %add.i = add i32 %10, %nr
  %arrayidx3.i = getelementptr i32, ptr %8, i32 %add.i
  %arrayidx4.i = getelementptr i32, ptr %8, i32 %10
  %sub5.i = sub i32 %12, %add.i
  %mul.i = shl i32 %sub5.i, 2
  %13 = call ptr @memmove(ptr %arrayidx3.i, ptr %arrayidx4.i, i32 %mul.i)
  %mul.i.i = shl i32 %nr, 2
  %call.i.i = tail call ptr @__memset32(ptr noundef %arrayidx4.i, i32 noundef 32, i32 noundef %mul.i.i) #21
  br label %vc_uniscr_insert.exit

vc_uniscr_insert.exit:                            ; preds = %if.then.i, %entry.vc_uniscr_insert.exit_crit_edge
  %add.ptr = getelementptr i16, ptr %2, i32 %nr
  %vc_cols = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 4
  %14 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %vc_cols, align 4
  %state = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 1
  %16 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %state, align 4
  %18 = add i32 %17, %nr
  %sub1 = sub i32 %15, %18
  %mul = shl i32 %sub1, 1
  %19 = call ptr @memmove(ptr %add.ptr, ptr %2, i32 %mul)
  %vc_video_erase_char = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 29
  %20 = ptrtoint ptr %vc_video_erase_char to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %vc_video_erase_char, align 4
  %mul2 = and i32 %nr, 2147483647
  %call.i = tail call ptr @memset16(ptr noundef %2, i16 noundef zeroext %21, i32 noundef %mul2) #21
  %vc_need_wrap = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 37
  %22 = ptrtoint ptr %vc_need_wrap to i32
  call void @__asan_load2_noabort(i32 %22)
  %bf.load = load i16, ptr %vc_need_wrap, align 4
  %bf.clear = and i16 %bf.load, -33
  store i16 %bf.clear, ptr %vc_need_wrap, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %23 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool.not.i.i = icmp eq i32 %23, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %vc_uniscr_insert.exit.con_is_visible.exit.i_crit_edge

vc_uniscr_insert.exit.con_is_visible.exit.i_crit_edge: ; preds = %vc_uniscr_insert.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

land.lhs.true.i.i:                                ; preds = %vc_uniscr_insert.exit
  %call1.i.i = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool2.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool2.not.i.i, label %land.rhs.i.i, label %land.lhs.true.i.i.con_is_visible.exit.i_crit_edge

land.lhs.true.i.i.con_is_visible.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

land.rhs.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %24 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool3.not.i.i = icmp eq i32 %24, 0
  br i1 %tobool3.not.i.i, label %do.end.i.i, label %land.rhs.i.i.con_is_visible.exit.i_crit_edge, !prof !365

land.rhs.i.i.con_is_visible.exit.i_crit_edge:     ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_visible.exit.i

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4012, i32 noundef 9, ptr noundef null) #21
  br label %con_is_visible.exit.i

con_is_visible.exit.i:                            ; preds = %do.end.i.i, %land.rhs.i.i.con_is_visible.exit.i_crit_edge, %land.lhs.true.i.i.con_is_visible.exit.i_crit_edge, %vc_uniscr_insert.exit.con_is_visible.exit.i_crit_edge
  %vc_display_fg.i.i = getelementptr inbounds %struct.vc_data, ptr %vc, i32 0, i32 47
  %25 = ptrtoint ptr %vc_display_fg.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %vc_display_fg.i.i, align 4
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %26, align 4
  %cmp.i.i = icmp eq ptr %28, %vc
  br i1 %cmp.i.i, label %con_should_update.exit, label %con_is_visible.exit.i.if.end_crit_edge

con_is_visible.exit.i.if.end_crit_edge:           ; preds = %con_is_visible.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

con_should_update.exit:                           ; preds = %con_is_visible.exit.i
  %29 = load i32, ptr @console_blanked, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool.not.i22 = icmp eq i32 %29, 0
  br i1 %tobool.not.i22, label %if.then, label %con_should_update.exit.if.end_crit_edge

con_should_update.exit.if.end_crit_edge:          ; preds = %con_should_update.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %con_should_update.exit
  call void @__sanitizer_cov_trace_pc() #23
  %30 = ptrtoint ptr %vc_cols to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %vc_cols, align 4
  %32 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %state, align 4
  %sub6 = sub i32 %31, %33
  tail call fastcc void @do_update_region(ptr noundef %vc, i32 noundef %1, i32 noundef %sub6)
  br label %if.end

if.end:                                           ; preds = %if.then, %con_should_update.exit.if.end_crit_edge, %con_is_visible.exit.i.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__msecs_to_jiffies(i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @conv_uni_to_pc(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bsearch(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @ucs_cmp(ptr nocapture noundef readonly %key, ptr nocapture noundef readonly %elt) #19 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %key to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %key, align 4
  %e.sroa.5.0..sroa_idx = getelementptr inbounds i8, ptr %elt, i32 4
  %2 = ptrtoint ptr %e.sroa.5.0..sroa_idx to i32
  call void @__asan_load4_noabort(i32 %2)
  %e.sroa.5.0.copyload = load i32, ptr %e.sroa.5.0..sroa_idx, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %e.sroa.5.0.copyload)
  %cmp = icmp ugt i32 %1, %e.sroa.5.0.copyload
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.else

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %3 = ptrtoint ptr %elt to i32
  call void @__asan_load4_noabort(i32 %3)
  %e.sroa.0.0.copyload = load i32, ptr %elt, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %e.sroa.0.0.copyload)
  %cmp1 = icmp ult i32 %1, %e.sroa.0.0.copyload
  %. = sext i1 %cmp1 to i32
  br label %cleanup

cleanup:                                          ; preds = %if.else, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 1, %entry.cleanup_crit_edge ], [ %., %if.else ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @vt_kbd_con_stop(i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @vt_kbd_con_start(i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @con_driver_unregister_callback(ptr nocapture noundef readnone %ignored) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @console_lock() #21
  br label %for.body

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %entry
  %i.0121 = phi i32 [ 0, %entry ], [ %inc, %cleanup.for.body_crit_edge ]
  %arrayidx = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.0121
  %flag = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.0121, i32 6
  %0 = ptrtoint ptr %flag to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flag, align 4
  %and = and i32 %1, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.body.cleanup_crit_edge, label %if.end

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %for.body
  tail call void @console_unlock() #21
  %2 = ptrtoint ptr %flag to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flag, align 4
  %and.i = and i32 %3, -5
  store i32 %and.i, ptr %flag, align 4
  %4 = load ptr, ptr @vtconsole_class, align 4
  %node = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.0121, i32 3
  %5 = ptrtoint ptr %node to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %node, align 4
  tail call void @device_destroy(ptr noundef %4, i32 noundef %6) #21
  tail call void @console_lock() #21
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx, align 4
  %tobool1.not = icmp eq ptr %8, null
  br i1 %tobool1.not, label %if.end.if.end42_crit_edge, label %land.rhs

if.end.if.end42_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end42

land.rhs:                                         ; preds = %if.end
  %.b119 = load i1, ptr @con_driver_unregister_callback.__already_done, align 1
  br i1 %.b119, label %land.rhs.if.then40_crit_edge, label %if.then9, !prof !383

land.rhs.if.then40_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then40

if.then9:                                         ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @con_driver_unregister_callback.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4240, i32 noundef 9, ptr noundef null) #21
  br label %if.then40

if.then40:                                        ; preds = %if.then9, %land.rhs.if.then40_crit_edge
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %arrayidx, align 4
  br label %if.end42

if.end42:                                         ; preds = %if.then40, %if.end.if.end42_crit_edge
  %desc = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.0121, i32 1
  %10 = ptrtoint ptr %desc to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %desc, align 4
  %dev = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.0121, i32 2
  %11 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %dev, align 4
  %12 = ptrtoint ptr %node to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 0, ptr %node, align 4
  %13 = ptrtoint ptr %flag to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %flag, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %14)
  %cmp46.not = icmp eq i32 %14, 8
  br i1 %cmp46.not, label %if.end42.if.end91_crit_edge, label %land.rhs53

if.end42.if.end91_crit_edge:                      ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end91

land.rhs53:                                       ; preds = %if.end42
  %.b117118 = load i1, ptr @con_driver_unregister_callback.__already_done.43, align 1
  br i1 %.b117118, label %land.rhs53.if.end91_crit_edge, label %if.then64, !prof !383

land.rhs53.if.end91_crit_edge:                    ; preds = %land.rhs53
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end91

if.then64:                                        ; preds = %land.rhs53
  call void @__sanitizer_cov_trace_pc() #23
  store i1 true, ptr @con_driver_unregister_callback.__already_done.43, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4245, i32 noundef 9, ptr noundef null) #21
  br label %if.end91

if.end91:                                         ; preds = %if.then64, %land.rhs53.if.end91_crit_edge, %if.end42.if.end91_crit_edge
  %15 = ptrtoint ptr %flag to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 0, ptr %flag, align 4
  %first = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.0121, i32 4
  %16 = ptrtoint ptr %first to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %first, align 4
  %last = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.0121, i32 5
  %17 = ptrtoint ptr %last to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %last, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end91, %for.body.cleanup_crit_edge
  %inc = add nuw nsw i32 %i.0121, 1
  %exitcond.not = icmp eq i32 %inc, 16
  br i1 %exitcond.not, label %for.end, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @console_unlock() #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_destroy(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @show_bind(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  tail call void @console_lock() #21
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @ignore_console_lock_warning, i32 noundef 4) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @ignore_console_lock_warning to i32))
  %4 = load volatile i32, ptr @ignore_console_lock_warning, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %entry.for.body.i.preheader_crit_edge

entry.for.body.i.preheader_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.preheader

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @is_console_locked() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %land.rhs.i, label %land.lhs.true.i.for.body.i.preheader_crit_edge

land.lhs.true.i.for.body.i.preheader_crit_edge:   ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.preheader

land.rhs.i:                                       ; preds = %land.lhs.true.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %5 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool3.not.i = icmp eq i32 %5, 0
  br i1 %tobool3.not.i, label %do.end.i, label %land.rhs.i.for.body.i.preheader_crit_edge, !prof !365

land.rhs.i.for.body.i.preheader_crit_edge:        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i.preheader

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3991, i32 noundef 9, ptr noundef null) #21
  br label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %do.end.i, %land.rhs.i.for.body.i.preheader_crit_edge, %land.lhs.true.i.for.body.i.preheader_crit_edge, %entry.for.body.i.preheader_crit_edge
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %inc.i = add nuw nsw i32 %i.031.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 63
  br i1 %exitcond.not.i, label %for.cond.i.con_is_bound.exit_crit_edge, label %for.cond.i.for.body.i_crit_edge

for.cond.i.for.body.i_crit_edge:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.cond.i.con_is_bound.exit_crit_edge:           ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_bound.exit

for.body.i:                                       ; preds = %for.cond.i.for.body.i_crit_edge, %for.body.i.preheader
  %i.031.i = phi i32 [ %inc.i, %for.cond.i.for.body.i_crit_edge ], [ 0, %for.body.i.preheader ]
  %arrayidx.i = getelementptr [63 x ptr], ptr @con_driver_map, i32 0, i32 %i.031.i
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx.i, align 4
  %cmp24.i = icmp eq ptr %7, %3
  br i1 %cmp24.i, label %for.body.i.con_is_bound.exit_crit_edge, label %for.cond.i

for.body.i.con_is_bound.exit_crit_edge:           ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %con_is_bound.exit

con_is_bound.exit:                                ; preds = %for.body.i.con_is_bound.exit_crit_edge, %for.cond.i.con_is_bound.exit_crit_edge
  %bound.0.i = phi i32 [ 0, %for.cond.i.con_is_bound.exit_crit_edge ], [ 1, %for.body.i.con_is_bound.exit_crit_edge ]
  tail call void @console_unlock() #21
  %call3 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %buf, i32 noundef 4096, ptr noundef nonnull @.str.48, i32 noundef %bound.0.i)
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @store_bind(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr noundef %buf, i32 noundef returned %count) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %call1 = tail call i32 @simple_strtoul(ptr noundef %buf, ptr noundef null, i32 noundef 0) #21
  tail call void @console_lock() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %tobool.not.i5 = icmp eq ptr %3, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  br i1 %tobool.not.i5, label %if.then.if.end_crit_edge, label %lor.lhs.false.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

lor.lhs.false.i:                                  ; preds = %if.then
  %flag.i = getelementptr inbounds %struct.con_driver, ptr %1, i32 0, i32 6
  %4 = ptrtoint ptr %flag.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flag.i, align 4
  %and.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool2.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool2.not.i, label %lor.lhs.false.i.if.end_crit_edge, label %lor.lhs.false.i.for.body.i_crit_edge

lor.lhs.false.i.for.body.i_crit_edge:             ; preds = %lor.lhs.false.i
  br label %for.body.i

lor.lhs.false.i.if.end_crit_edge:                 ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %lor.lhs.false.i.for.body.i_crit_edge
  %i.024.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %lor.lhs.false.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.024.i
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx.i, align 4
  %tobool6.not.i = icmp eq ptr %7, null
  br i1 %tobool6.not.i, label %for.body.i.for.inc.i_crit_edge, label %land.lhs.true.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %flag7.i = getelementptr [16 x %struct.con_driver], ptr @registered_con_driver, i32 0, i32 %i.024.i, i32 6
  %8 = ptrtoint ptr %flag7.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flag7.i, align 4
  %and8.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i)
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  br i1 %tobool9.not.i, label %while.cond.preheader.i, label %land.lhs.true.i.for.inc.i_crit_edge

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

while.cond.preheader.i:                           ; preds = %land.lhs.true.i
  %first17.i = getelementptr inbounds %struct.con_driver, ptr %1, i32 0, i32 4
  %last19.i = getelementptr inbounds %struct.con_driver, ptr %1, i32 0, i32 5
  br label %while.body.i

for.inc.i:                                        ; preds = %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.024.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 16
  br i1 %exitcond.not.i, label %for.inc.i.if.end_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.if.end_crit_edge:                       ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

while.body.i:                                     ; preds = %if.end42.i.while.body.i_crit_edge, %while.cond.preheader.i
  %10 = ptrtoint ptr %first17.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %first17.i, align 4
  %12 = ptrtoint ptr %last19.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %last19.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %13)
  %cmp20.not26.i = icmp sgt i32 %11, %13
  br i1 %cmp20.not26.i, label %while.body.i.if.end_crit_edge, label %while.body.i.for.body21.i_crit_edge

while.body.i.for.body21.i_crit_edge:              ; preds = %while.body.i
  br label %for.body21.i

while.body.i.if.end_crit_edge:                    ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

for.body21.i:                                     ; preds = %for.inc32.i.for.body21.i_crit_edge, %while.body.i.for.body21.i_crit_edge
  %last.131.i = phi i32 [ %last.2.i, %for.inc32.i.for.body21.i_crit_edge ], [ -1, %while.body.i.for.body21.i_crit_edge ]
  %first.130.i = phi i32 [ %first.3.i, %for.inc32.i.for.body21.i_crit_edge ], [ -1, %while.body.i.for.body21.i_crit_edge ]
  %more.129.i = phi i32 [ %more.2.i, %for.inc32.i.for.body21.i_crit_edge ], [ 0, %while.body.i.for.body21.i_crit_edge ]
  %i.127.i = phi i32 [ %inc33.i, %for.inc32.i.for.body21.i_crit_edge ], [ %11, %while.body.i.for.body21.i_crit_edge ]
  %arrayidx22.i = getelementptr [63 x ptr], ptr @con_driver_map, i32 0, i32 %i.127.i
  %14 = ptrtoint ptr %arrayidx22.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx22.i, align 4
  %cmp23.i = icmp eq ptr %15, %7
  br i1 %cmp23.i, label %if.then24.i, label %if.else.i

if.then24.i:                                      ; preds = %for.body21.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %first.130.i)
  %cmp25.i = icmp eq i32 %first.130.i, -1
  %spec.select.i = select i1 %cmp25.i, i32 %i.127.i, i32 %first.130.i
  br label %for.inc32.i

if.else.i:                                        ; preds = %for.body21.i
  %16 = zext i32 %first.130.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %16, ptr @__sancov_gen_cov_switch_values.85)
  switch i32 %first.130.i, label %if.else.i.if.then41.i_crit_edge [
    i32 -1, label %if.else.i.for.inc32.i_crit_edge
    i32 0, label %land.lhs.true36.i
  ]

if.else.i.for.inc32.i_crit_edge:                  ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc32.i

if.else.i.if.then41.i_crit_edge:                  ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then41.i

for.inc32.i:                                      ; preds = %if.else.i.for.inc32.i_crit_edge, %if.then24.i
  %more.2.i = phi i32 [ 1, %if.then24.i ], [ %more.129.i, %if.else.i.for.inc32.i_crit_edge ]
  %first.3.i = phi i32 [ %spec.select.i, %if.then24.i ], [ %first.130.i, %if.else.i.for.inc32.i_crit_edge ]
  %last.2.i = phi i32 [ %i.127.i, %if.then24.i ], [ %last.131.i, %if.else.i.for.inc32.i_crit_edge ]
  %inc33.i = add i32 %i.127.i, 1
  %cmp20.not.i = icmp sgt i32 %inc33.i, %13
  br i1 %cmp20.not.i, label %for.end34.i, label %for.inc32.i.for.body21.i_crit_edge

for.inc32.i.for.body21.i_crit_edge:               ; preds = %for.inc32.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body21.i

for.end34.i:                                      ; preds = %for.inc32.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %first.3.i)
  %cmp35.i = icmp eq i32 %first.3.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 62, i32 %last.2.i)
  %cmp37.i = icmp eq i32 %last.2.i, 62
  %or.cond.i = select i1 %cmp35.i, i1 %cmp37.i, i1 false
  br i1 %or.cond.i, label %for.end34.i.if.then38.i_crit_edge, label %if.end39.i

for.end34.i.if.then38.i_crit_edge:                ; preds = %for.end34.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then38.i

land.lhs.true36.i:                                ; preds = %if.else.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 62, i32 %last.131.i)
  %cmp37.old.i = icmp eq i32 %last.131.i, 62
  br i1 %cmp37.old.i, label %land.lhs.true36.i.if.then38.i_crit_edge, label %land.lhs.true36.i.if.then41.i_crit_edge

land.lhs.true36.i.if.then41.i_crit_edge:          ; preds = %land.lhs.true36.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then41.i

land.lhs.true36.i.if.then38.i_crit_edge:          ; preds = %land.lhs.true36.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then38.i

if.then38.i:                                      ; preds = %land.lhs.true36.i.if.then38.i_crit_edge, %for.end34.i.if.then38.i_crit_edge
  %more.123.i = phi i32 [ %more.2.i, %for.end34.i.if.then38.i_crit_edge ], [ %more.129.i, %land.lhs.true36.i.if.then38.i_crit_edge ]
  br label %if.then41.i

if.end39.i:                                       ; preds = %for.end34.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %first.3.i)
  %cmp40.not.i = icmp eq i32 %first.3.i, -1
  br i1 %cmp40.not.i, label %if.end39.i.if.end42.i_crit_edge, label %if.end39.i.if.then41.i_crit_edge

if.end39.i.if.then41.i_crit_edge:                 ; preds = %if.end39.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then41.i

if.end39.i.if.end42.i_crit_edge:                  ; preds = %if.end39.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end42.i

if.then41.i:                                      ; preds = %if.end39.i.if.then41.i_crit_edge, %if.then38.i, %land.lhs.true36.i.if.then41.i_crit_edge, %if.else.i.if.then41.i_crit_edge
  %more.121.i = phi i32 [ %more.2.i, %if.end39.i.if.then41.i_crit_edge ], [ %more.129.i, %land.lhs.true36.i.if.then41.i_crit_edge ], [ %more.123.i, %if.then38.i ], [ %more.129.i, %if.else.i.if.then41.i_crit_edge ]
  %first.117.i = phi i32 [ %first.3.i, %if.end39.i.if.then41.i_crit_edge ], [ 0, %land.lhs.true36.i.if.then41.i_crit_edge ], [ 0, %if.then38.i ], [ %first.130.i, %if.else.i.if.then41.i_crit_edge ]
  %last.113.i = phi i32 [ %last.2.i, %if.end39.i.if.then41.i_crit_edge ], [ %last.131.i, %land.lhs.true36.i.if.then41.i_crit_edge ], [ 62, %if.then38.i ], [ %last.131.i, %if.else.i.if.then41.i_crit_edge ]
  %deflt.19.i = phi i32 [ 0, %if.end39.i.if.then41.i_crit_edge ], [ 0, %land.lhs.true36.i.if.then41.i_crit_edge ], [ 1, %if.then38.i ], [ 0, %if.else.i.if.then41.i_crit_edge ]
  tail call fastcc void @do_bind_con_driver(ptr noundef nonnull %3, i32 noundef %first.117.i, i32 noundef %last.113.i, i32 noundef %deflt.19.i) #21
  br label %if.end42.i

if.end42.i:                                       ; preds = %if.then41.i, %if.end39.i.if.end42.i_crit_edge
  %more.122.i = phi i32 [ %more.121.i, %if.then41.i ], [ %more.2.i, %if.end39.i.if.end42.i_crit_edge ]
  %tobool16.not.i = icmp eq i32 %more.122.i, 0
  br i1 %tobool16.not.i, label %if.end42.i.if.end_crit_edge, label %if.end42.i.while.body.i_crit_edge

if.end42.i.while.body.i_crit_edge:                ; preds = %if.end42.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body.i

if.end42.i.if.end_crit_edge:                      ; preds = %if.end42.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.else:                                          ; preds = %entry
  br i1 %tobool.not.i5, label %if.else.if.end_crit_edge, label %lor.lhs.false.i9

if.else.if.end_crit_edge:                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

lor.lhs.false.i9:                                 ; preds = %if.else
  %flag.i6 = getelementptr inbounds %struct.con_driver, ptr %1, i32 0, i32 6
  %17 = ptrtoint ptr %flag.i6 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %flag.i6, align 4
  %and.i7 = and i32 %18, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i7)
  %tobool2.not.i8 = icmp eq i32 %and.i7, 0
  br i1 %tobool2.not.i8, label %lor.lhs.false.i9.if.end_crit_edge, label %while.cond.preheader.i10

lor.lhs.false.i9.if.end_crit_edge:                ; preds = %lor.lhs.false.i9
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

while.cond.preheader.i10:                         ; preds = %lor.lhs.false.i9
  %first5.i = getelementptr inbounds %struct.con_driver, ptr %1, i32 0, i32 4
  %last6.i = getelementptr inbounds %struct.con_driver, ptr %1, i32 0, i32 5
  br label %while.body.i11

while.body.i11:                                   ; preds = %if.end25.i.while.body.i11_crit_edge, %while.cond.preheader.i10
  %19 = ptrtoint ptr %first5.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %first5.i, align 4
  %21 = ptrtoint ptr %last6.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %last6.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %20, i32 %22)
  %cmp.not17.i = icmp sgt i32 %20, %22
  br i1 %cmp.not17.i, label %while.body.i11.if.end_crit_edge, label %while.body.i11.for.body.i13_crit_edge

while.body.i11.for.body.i13_crit_edge:            ; preds = %while.body.i11
  br label %for.body.i13

while.body.i11.if.end_crit_edge:                  ; preds = %while.body.i11
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

for.body.i13:                                     ; preds = %for.inc.i20.for.body.i13_crit_edge, %while.body.i11.for.body.i13_crit_edge
  %last.122.i = phi i32 [ %last.2.i18, %for.inc.i20.for.body.i13_crit_edge ], [ -1, %while.body.i11.for.body.i13_crit_edge ]
  %first.121.i = phi i32 [ %first.3.i17, %for.inc.i20.for.body.i13_crit_edge ], [ -1, %while.body.i11.for.body.i13_crit_edge ]
  %more.120.i = phi i32 [ %more.2.i16, %for.inc.i20.for.body.i13_crit_edge ], [ 0, %while.body.i11.for.body.i13_crit_edge ]
  %i.018.i = phi i32 [ %inc.i19, %for.inc.i20.for.body.i13_crit_edge ], [ %20, %while.body.i11.for.body.i13_crit_edge ]
  %arrayidx.i12 = getelementptr [63 x ptr], ptr @con_driver_map, i32 0, i32 %i.018.i
  %23 = ptrtoint ptr %arrayidx.i12 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %arrayidx.i12, align 4
  %cmp7.i = icmp eq ptr %24, %3
  br i1 %cmp7.i, label %if.then8.i, label %if.else.i15

if.then8.i:                                       ; preds = %for.body.i13
  call void @__sanitizer_cov_trace_pc() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %first.121.i)
  %cmp9.i = icmp eq i32 %first.121.i, -1
  %spec.select.i14 = select i1 %cmp9.i, i32 %i.018.i, i32 %first.121.i
  br label %for.inc.i20

if.else.i15:                                      ; preds = %for.body.i13
  %25 = zext i32 %first.121.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %25, ptr @__sancov_gen_cov_switch_values.86)
  switch i32 %first.121.i, label %if.else.i15.if.then21.i_crit_edge [
    i32 -1, label %if.else.i15.for.inc.i20_crit_edge
    i32 0, label %land.lhs.true.i22
  ]

if.else.i15.for.inc.i20_crit_edge:                ; preds = %if.else.i15
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i20

if.else.i15.if.then21.i_crit_edge:                ; preds = %if.else.i15
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then21.i

for.inc.i20:                                      ; preds = %if.else.i15.for.inc.i20_crit_edge, %if.then8.i
  %more.2.i16 = phi i32 [ 1, %if.then8.i ], [ %more.120.i, %if.else.i15.for.inc.i20_crit_edge ]
  %first.3.i17 = phi i32 [ %spec.select.i14, %if.then8.i ], [ %first.121.i, %if.else.i15.for.inc.i20_crit_edge ]
  %last.2.i18 = phi i32 [ %i.018.i, %if.then8.i ], [ %last.122.i, %if.else.i15.for.inc.i20_crit_edge ]
  %inc.i19 = add i32 %i.018.i, 1
  %cmp.not.i = icmp sgt i32 %inc.i19, %22
  br i1 %cmp.not.i, label %for.end.i, label %for.inc.i20.for.body.i13_crit_edge

for.inc.i20.for.body.i13_crit_edge:               ; preds = %for.inc.i20
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i13

for.end.i:                                        ; preds = %for.inc.i20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %first.3.i17)
  %cmp16.i = icmp eq i32 %first.3.i17, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 62, i32 %last.2.i18)
  %cmp17.i = icmp eq i32 %last.2.i18, 62
  %or.cond.i21 = select i1 %cmp16.i, i1 %cmp17.i, i1 false
  br i1 %or.cond.i21, label %for.end.i.if.then18.i_crit_edge, label %if.end19.i

for.end.i.if.then18.i_crit_edge:                  ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then18.i

land.lhs.true.i22:                                ; preds = %if.else.i15
  call void @__sanitizer_cov_trace_const_cmp4(i32 62, i32 %last.122.i)
  %cmp17.old.i = icmp eq i32 %last.122.i, 62
  br i1 %cmp17.old.i, label %land.lhs.true.i22.if.then18.i_crit_edge, label %land.lhs.true.i22.if.then21.i_crit_edge

land.lhs.true.i22.if.then21.i_crit_edge:          ; preds = %land.lhs.true.i22
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then21.i

land.lhs.true.i22.if.then18.i_crit_edge:          ; preds = %land.lhs.true.i22
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then18.i

if.then18.i:                                      ; preds = %land.lhs.true.i22.if.then18.i_crit_edge, %for.end.i.if.then18.i_crit_edge
  %more.116.i = phi i32 [ %more.2.i16, %for.end.i.if.then18.i_crit_edge ], [ %more.120.i, %land.lhs.true.i22.if.then18.i_crit_edge ]
  br label %if.then21.i

if.end19.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %first.3.i17)
  %cmp20.not.i23 = icmp eq i32 %first.3.i17, -1
  br i1 %cmp20.not.i23, label %if.end19.i.if.end25.i_crit_edge, label %if.end19.i.if.then21.i_crit_edge

if.end19.i.if.then21.i_crit_edge:                 ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then21.i

if.end19.i.if.end25.i_crit_edge:                  ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end25.i

if.then21.i:                                      ; preds = %if.end19.i.if.then21.i_crit_edge, %if.then18.i, %land.lhs.true.i22.if.then21.i_crit_edge, %if.else.i15.if.then21.i_crit_edge
  %more.114.i = phi i32 [ %more.2.i16, %if.end19.i.if.then21.i_crit_edge ], [ %more.120.i, %land.lhs.true.i22.if.then21.i_crit_edge ], [ %more.116.i, %if.then18.i ], [ %more.120.i, %if.else.i15.if.then21.i_crit_edge ]
  %first.110.i = phi i32 [ %first.3.i17, %if.end19.i.if.then21.i_crit_edge ], [ 0, %land.lhs.true.i22.if.then21.i_crit_edge ], [ 0, %if.then18.i ], [ %first.121.i, %if.else.i15.if.then21.i_crit_edge ]
  %last.16.i = phi i32 [ %last.2.i18, %if.end19.i.if.then21.i_crit_edge ], [ %last.122.i, %land.lhs.true.i22.if.then21.i_crit_edge ], [ 62, %if.then18.i ], [ %last.122.i, %if.else.i15.if.then21.i_crit_edge ]
  %deflt.13.i = phi i32 [ 0, %if.end19.i.if.then21.i_crit_edge ], [ 0, %land.lhs.true.i22.if.then21.i_crit_edge ], [ 1, %if.then18.i ], [ 0, %if.else.i15.if.then21.i_crit_edge ]
  %call.i = tail call i32 @do_unbind_con_driver(ptr noundef nonnull %3, i32 noundef %first.110.i, i32 noundef %last.16.i, i32 noundef %deflt.13.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp22.not.i = icmp eq i32 %call.i, 0
  br i1 %cmp22.not.i, label %if.then21.i.if.end25.i_crit_edge, label %if.then21.i.if.end_crit_edge

if.then21.i.if.end_crit_edge:                     ; preds = %if.then21.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then21.i.if.end25.i_crit_edge:                 ; preds = %if.then21.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end25.i

if.end25.i:                                       ; preds = %if.then21.i.if.end25.i_crit_edge, %if.end19.i.if.end25.i_crit_edge
  %more.115.i = phi i32 [ %more.114.i, %if.then21.i.if.end25.i_crit_edge ], [ %more.2.i16, %if.end19.i.if.end25.i_crit_edge ]
  %tobool4.not.i = icmp eq i32 %more.115.i, 0
  br i1 %tobool4.not.i, label %if.end25.i.if.end_crit_edge, label %if.end25.i.while.body.i11_crit_edge

if.end25.i.while.body.i11_crit_edge:              ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body.i11

if.end25.i.if.end_crit_edge:                      ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %if.end25.i.if.end_crit_edge, %if.then21.i.if.end_crit_edge, %while.body.i11.if.end_crit_edge, %lor.lhs.false.i9.if.end_crit_edge, %if.else.if.end_crit_edge, %if.end42.i.if.end_crit_edge, %while.body.i.if.end_crit_edge, %for.inc.i.if.end_crit_edge, %lor.lhs.false.i.if.end_crit_edge, %if.then.if.end_crit_edge
  tail call void @console_unlock() #21
  ret i32 %count
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @simple_strtoul(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @show_name(ptr nocapture noundef readonly %dev, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #17 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %flag = getelementptr inbounds %struct.con_driver, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %flag to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flag, align 4
  %and = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %cond = select i1 %tobool.not, ptr @.str.52, ptr @.str.51
  %desc = getelementptr inbounds %struct.con_driver, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %desc, align 4
  %call1 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %buf, i32 noundef 4096, ptr noundef nonnull @.str.50, ptr noundef nonnull %cond, ptr noundef %5)
  ret i32 %call1
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__class_create(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @blank_screen_t(ptr nocapture noundef readnone %unused) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  store i1 true, ptr @blank_timer_expired, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %0 = load ptr, ptr @system_wq, align 4
  %call.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %0, ptr noundef nonnull @console_work) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__check_object_size(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @should_fail_usercopy() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_from_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_to_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @memdup_user(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @strncpy_from_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i8 @llvm.fshl.i8(i8, i8, i8) #20

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #20

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i8 @llvm.umax.i8(i8, i8) #20

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #20

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #20

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #21

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memmove(ptr, ptr, i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_handle_no_return()

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #22 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 131)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #22 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 131)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #3 = { nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { cold noreturn null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #14 = { nounwind readonly }
attributes #15 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #16 = { mustprogress nofree nosync nounwind null_pointer_is_valid readnone willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #18 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #19 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #20 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #21 = { nounwind }
attributes #22 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #23 = { nomerge }
attributes #24 = { nounwind allocsize(0) }
attributes #25 = { nounwind allocsize(2) }
attributes #26 = { cold nounwind }
attributes #27 = { cold noreturn nounwind }
attributes #28 = { nounwind readnone }
attributes #29 = { nounwind readnone willreturn }

!llvm.asan.globals = !{!0, !2, !4, !5, !7, !9, !10, !12, !13, !15, !17, !19, !21, !23, !25, !27, !29, !31, !33, !35, !36, !38, !40, !42, !43, !45, !47, !48, !50, !52, !53, !55, !57, !59, !60, !62, !63, !65, !66, !68, !70, !72, !74, !76, !78, !80, !82, !84, !86, !88, !90, !92, !94, !96, !98, !100, !102, !104, !106, !108, !109, !110, !111, !113, !115, !117, !119, !121, !123, !125, !127, !129, !131, !133, !135, !137, !139, !141, !143, !145, !147, !149, !151, !153, !155, !157, !159, !161, !163, !165, !167, !169, !171, !173, !175, !177, !179, !181, !183, !185, !187, !189, !191, !193, !194, !195, !196, !198, !199, !201, !202, !204, !205, !207, !209, !211, !212, !213, !214, !215, !216, !217, !218, !220, !221, !223, !224, !226, !228, !229, !231, !233, !234, !235, !236, !237, !238, !240, !242, !244, !245, !247, !248, !250, !252, !254, !256, !258, !259, !260, !261, !263, !264, !265, !266, !268, !270, !272, !274, !276, !278, !280, !282, !283, !284, !285, !287, !288, !289, !291, !292, !293, !295, !296, !297, !299, !300, !302, !304, !306, !308, !310, !311, !312, !313, !315, !316, !318, !320, !321, !323, !325, !326, !328, !330, !332, !334, !335, !337, !338, !339, !340, !342, !343, !345, !346, !348, !349, !351, !353}
!llvm.named.register.sp = !{!355}
!llvm.module.flags = !{!356, !357, !358, !359, !360, !361, !362, !363}
!llvm.ident = !{!364}

!0 = !{ptr @default_utf8, !1, !"default_utf8", i1 false, i1 false}
!1 = !{!"../drivers/tty/vt/vt.c", i32 161, i32 5}
!2 = !{ptr @__param_default_utf8, !3, !"__param_default_utf8", i1 false, i1 false}
!3 = !{!"../drivers/tty/vt/vt.c", i32 162, i32 1}
!4 = !{ptr @__UNIQUE_ID_default_utf8type232, !3, !"__UNIQUE_ID_default_utf8type232", i1 false, i1 false}
!5 = !{ptr @global_cursor_default, !6, !"global_cursor_default", i1 false, i1 false}
!6 = !{!"../drivers/tty/vt/vt.c", i32 163, i32 5}
!7 = !{ptr @__param_global_cursor_default, !8, !"__param_global_cursor_default", i1 false, i1 false}
!8 = !{!"../drivers/tty/vt/vt.c", i32 164, i32 1}
!9 = !{ptr @__UNIQUE_ID_global_cursor_defaulttype233, !8, !"__UNIQUE_ID_global_cursor_defaulttype233", i1 false, i1 false}
!10 = !{ptr @__param_cur_default, !11, !"__param_cur_default", i1 false, i1 false}
!11 = !{!"../drivers/tty/vt/vt.c", i32 167, i32 1}
!12 = !{ptr @__UNIQUE_ID_cur_defaulttype234, !11, !"__UNIQUE_ID_cur_defaulttype234", i1 false, i1 false}
!13 = !{ptr @__param_consoleblank, !14, !"__param_consoleblank", i1 false, i1 false}
!14 = !{!"../drivers/tty/vt/vt.c", i32 181, i32 1}
!15 = !{ptr @want_console, !16, !"want_console", i1 false, i1 false}
!16 = !{!"../drivers/tty/vt/vt.c", i32 194, i32 5}
!17 = !{ptr @__ksymtab_register_vt_notifier, !18, !"__ksymtab_register_vt_notifier", i1 false, i1 false}
!18 = !{!"../drivers/tty/vt/vt.c", i32 253, i32 1}
!19 = !{ptr @__ksymtab_unregister_vt_notifier, !20, !"__ksymtab_unregister_vt_notifier", i1 false, i1 false}
!20 = !{!"../drivers/tty/vt/vt.c", i32 259, i32 1}
!21 = !{ptr @.str, !22, !"<string literal>", i1 false, i1 false}
!22 = !{!"../drivers/tty/vt/vt.c", i32 510, i32 2}
!23 = !{ptr @complement_pos.old_offset, !24, !"old_offset", i1 false, i1 false}
!24 = !{!"../drivers/tty/vt/vt.c", i32 807, i32 13}
!25 = !{ptr @complement_pos.old, !26, !"old", i1 false, i1 false}
!26 = !{!"../drivers/tty/vt/vt.c", i32 808, i32 24}
!27 = !{ptr @complement_pos.oldx, !28, !"oldx", i1 false, i1 false}
!28 = !{!"../drivers/tty/vt/vt.c", i32 809, i32 24}
!29 = !{ptr @complement_pos.oldy, !30, !"oldy", i1 false, i1 false}
!30 = !{!"../drivers/tty/vt/vt.c", i32 809, i32 30}
!31 = !{ptr @.str.1, !32, !"<string literal>", i1 false, i1 false}
!32 = !{!"../drivers/tty/vt/vt.c", i32 1010, i32 39}
!33 = !{ptr @vc_allocate.__key, !34, !"__key", i1 false, i1 false}
!34 = !{!"../drivers/tty/vt/vt.c", i32 1135, i32 2}
!35 = !{ptr @.str.2, !34, !"<string literal>", i1 false, i1 false}
!36 = !{ptr @color_table, !37, !"color_table", i1 false, i1 false}
!37 = !{!"../drivers/tty/vt/vt.c", i32 1425, i32 21}
!38 = !{ptr @default_red, !39, !"default_red", i1 false, i1 false}
!39 = !{!"../drivers/tty/vt/vt.c", i32 1429, i32 15}
!40 = !{ptr @__param_default_red, !41, !"__param_default_red", i1 false, i1 false}
!41 = !{!"../drivers/tty/vt/vt.c", i32 1433, i32 1}
!42 = !{ptr @__UNIQUE_ID_default_redtype241, !41, !"__UNIQUE_ID_default_redtype241", i1 false, i1 false}
!43 = !{ptr @default_grn, !44, !"default_grn", i1 false, i1 false}
!44 = !{!"../drivers/tty/vt/vt.c", i32 1435, i32 15}
!45 = !{ptr @__param_default_grn, !46, !"__param_default_grn", i1 false, i1 false}
!46 = !{!"../drivers/tty/vt/vt.c", i32 1439, i32 1}
!47 = !{ptr @__UNIQUE_ID_default_grntype242, !46, !"__UNIQUE_ID_default_grntype242", i1 false, i1 false}
!48 = !{ptr @default_blu, !49, !"default_blu", i1 false, i1 false}
!49 = !{!"../drivers/tty/vt/vt.c", i32 1441, i32 15}
!50 = !{ptr @__param_default_blu, !51, !"__param_default_blu", i1 false, i1 false}
!51 = !{!"../drivers/tty/vt/vt.c", i32 1445, i32 1}
!52 = !{ptr @__UNIQUE_ID_default_blutype243, !51, !"__UNIQUE_ID_default_blutype243", i1 false, i1 false}
!53 = !{ptr @.str.3, !54, !"<string literal>", i1 false, i1 false}
!54 = !{!"../drivers/tty/vt/vt.c", i32 1870, i32 21}
!55 = !{ptr @vt_kmsg_redirect.kmsg_con, !56, !"kmsg_con", i1 false, i1 false}
!56 = !{!"../drivers/tty/vt/vt.c", i32 3064, i32 13}
!57 = !{ptr @__param_color, !58, !"__param_color", i1 false, i1 false}
!58 = !{!"../drivers/tty/vt/vt.c", i32 3446, i32 1}
!59 = !{ptr @__UNIQUE_ID_colortype256, !58, !"__UNIQUE_ID_colortype256", i1 false, i1 false}
!60 = !{ptr @__param_italic, !61, !"__param_italic", i1 false, i1 false}
!61 = !{!"../drivers/tty/vt/vt.c", i32 3447, i32 1}
!62 = !{ptr @__UNIQUE_ID_italictype257, !61, !"__UNIQUE_ID_italictype257", i1 false, i1 false}
!63 = !{ptr @__param_underline, !64, !"__param_underline", i1 false, i1 false}
!64 = !{!"../drivers/tty/vt/vt.c", i32 3448, i32 1}
!65 = !{ptr @__UNIQUE_ID_underlinetype258, !64, !"__UNIQUE_ID_underlinetype258", i1 false, i1 false}
!66 = !{ptr @__initcall__kmod_vt__259_3549_con_initcon, !67, !"__initcall__kmod_vt__259_3549_con_initcon", i1 false, i1 false}
!67 = !{!"../drivers/tty/vt/vt.c", i32 3549, i32 1}
!68 = !{ptr @.str.4, !69, !"<string literal>", i1 false, i1 false}
!69 = !{!"../drivers/tty/vt/vt.c", i32 3592, i32 53}
!70 = !{ptr @.str.5, !71, !"<string literal>", i1 false, i1 false}
!71 = !{!"../drivers/tty/vt/vt.c", i32 3593, i32 9}
!72 = !{ptr @.str.6, !73, !"<string literal>", i1 false, i1 false}
!73 = !{!"../drivers/tty/vt/vt.c", i32 3596, i32 25}
!74 = !{ptr @.str.7, !75, !"<string literal>", i1 false, i1 false}
!75 = !{!"../drivers/tty/vt/vt.c", i32 3605, i32 9}
!76 = !{ptr @.str.8, !77, !"<string literal>", i1 false, i1 false}
!77 = !{!"../drivers/tty/vt/vt.c", i32 3607, i32 25}
!78 = !{ptr @.str.9, !79, !"<string literal>", i1 false, i1 false}
!79 = !{!"../drivers/tty/vt/vt.c", i32 3617, i32 9}
!80 = !{ptr @__ksymtab_do_unbind_con_driver, !81, !"__ksymtab_do_unbind_con_driver", i1 false, i1 false}
!81 = !{!"../drivers/tty/vt/vt.c", i32 3810, i32 1}
!82 = !{ptr @__ksymtab_con_is_bound, !83, !"__ksymtab_con_is_bound", i1 false, i1 false}
!83 = !{!"../drivers/tty/vt/vt.c", i32 4002, i32 1}
!84 = !{ptr @__ksymtab_con_is_visible, !85, !"__ksymtab_con_is_visible", i1 false, i1 false}
!85 = !{!"../drivers/tty/vt/vt.c", i32 4016, i32 1}
!86 = !{ptr @.str.10, !87, !"<string literal>", i1 false, i1 false}
!87 = !{!"../drivers/tty/vt/vt.c", i32 4049, i32 4}
!88 = !{ptr @.str.11, !89, !"<string literal>", i1 false, i1 false}
!89 = !{!"../drivers/tty/vt/vt.c", i32 4050, i32 4}
!90 = !{ptr @.str.12, !91, !"<string literal>", i1 false, i1 false}
!91 = !{!"../drivers/tty/vt/vt.c", i32 4054, i32 21}
!92 = !{ptr @.str.13, !93, !"<string literal>", i1 false, i1 false}
!93 = !{!"../drivers/tty/vt/vt.c", i32 4063, i32 4}
!94 = !{ptr @__ksymtab_con_debug_enter, !95, !"__ksymtab_con_debug_enter", i1 false, i1 false}
!95 = !{!"../drivers/tty/vt/vt.c", i32 4074, i32 1}
!96 = !{ptr @__ksymtab_con_debug_leave, !97, !"__ksymtab_con_debug_leave", i1 false, i1 false}
!97 = !{!"../drivers/tty/vt/vt.c", i32 4102, i32 1}
!98 = !{ptr @__ksymtab_do_unregister_con_driver, !99, !"__ksymtab_do_unregister_con_driver", i1 false, i1 false}
!99 = !{!"../drivers/tty/vt/vt.c", i32 4219, i32 1}
!100 = !{ptr @__ksymtab_do_take_over_console, !101, !"__ksymtab_do_take_over_console", i1 false, i1 false}
!101 = !{!"../drivers/tty/vt/vt.c", i32 4278, i32 1}
!102 = !{ptr @__initcall__kmod_vt__268_4326_vtconsole_class_init2, !103, !"__initcall__kmod_vt__268_4326_vtconsole_class_init2", i1 false, i1 false}
!103 = !{!"../drivers/tty/vt/vt.c", i32 4326, i32 1}
!104 = !{ptr @__ksymtab_do_blank_screen, !105, !"__ksymtab_do_blank_screen", i1 false, i1 false}
!105 = !{!"../drivers/tty/vt/vt.c", i32 4401, i32 1}
!106 = !{ptr @.str.14, !107, !"<string literal>", i1 false, i1 false}
!107 = !{!"../drivers/tty/vt/vt.c", i32 4424, i32 3}
!108 = !{ptr @.str.15, !107, !"<string literal>", i1 false, i1 false}
!109 = !{ptr @do_unblank_screen._entry, !107, !"_entry", i1 false, i1 false}
!110 = !{ptr @do_unblank_screen._entry_ptr, !107, !"_entry_ptr", i1 false, i1 false}
!111 = !{ptr @__ksymtab_do_unblank_screen, !112, !"__ksymtab_do_unblank_screen", i1 false, i1 false}
!112 = !{!"../drivers/tty/vt/vt.c", i32 4447, i32 1}
!113 = !{ptr @__ksymtab_screen_glyph, !114, !"__ksymtab_screen_glyph", i1 false, i1 false}
!114 = !{!"../drivers/tty/vt/vt.c", i32 4736, i32 1}
!115 = !{ptr @__ksymtab_screen_glyph_unicode, !116, !"__ksymtab_screen_glyph_unicode", i1 false, i1 false}
!116 = !{!"../drivers/tty/vt/vt.c", i32 4746, i32 1}
!117 = !{ptr @__ksymtab_screen_pos, !118, !"__ksymtab_screen_pos", i1 false, i1 false}
!118 = !{!"../drivers/tty/vt/vt.c", i32 4753, i32 1}
!119 = !{ptr @__ksymtab_vc_scrolldelta_helper, !120, !"__ksymtab_vc_scrolldelta_helper", i1 false, i1 false}
!120 = !{!"../drivers/tty/vt/vt.c", i32 4828, i32 1}
!121 = !{ptr @__ksymtab_color_table, !122, !"__ksymtab_color_table", i1 false, i1 false}
!122 = !{!"../drivers/tty/vt/vt.c", i32 4834, i32 1}
!123 = !{ptr @__ksymtab_default_red, !124, !"__ksymtab_default_red", i1 false, i1 false}
!124 = !{!"../drivers/tty/vt/vt.c", i32 4835, i32 1}
!125 = !{ptr @__ksymtab_default_grn, !126, !"__ksymtab_default_grn", i1 false, i1 false}
!126 = !{!"../drivers/tty/vt/vt.c", i32 4836, i32 1}
!127 = !{ptr @__ksymtab_default_blu, !128, !"__ksymtab_default_blu", i1 false, i1 false}
!128 = !{!"../drivers/tty/vt/vt.c", i32 4837, i32 1}
!129 = !{ptr @__ksymtab_update_region, !130, !"__ksymtab_update_region", i1 false, i1 false}
!130 = !{!"../drivers/tty/vt/vt.c", i32 4838, i32 1}
!131 = !{ptr @__ksymtab_redraw_screen, !132, !"__ksymtab_redraw_screen", i1 false, i1 false}
!132 = !{!"../drivers/tty/vt/vt.c", i32 4839, i32 1}
!133 = !{ptr @__ksymtab_vc_resize, !134, !"__ksymtab_vc_resize", i1 false, i1 false}
!134 = !{!"../drivers/tty/vt/vt.c", i32 4840, i32 1}
!135 = !{ptr @__ksymtab_fg_console, !136, !"__ksymtab_fg_console", i1 false, i1 false}
!136 = !{!"../drivers/tty/vt/vt.c", i32 4841, i32 1}
!137 = !{ptr @__ksymtab_console_blank_hook, !138, !"__ksymtab_console_blank_hook", i1 false, i1 false}
!138 = !{!"../drivers/tty/vt/vt.c", i32 4842, i32 1}
!139 = !{ptr @__ksymtab_console_blanked, !140, !"__ksymtab_console_blanked", i1 false, i1 false}
!140 = !{!"../drivers/tty/vt/vt.c", i32 4843, i32 1}
!141 = !{ptr @__ksymtab_vc_cons, !142, !"__ksymtab_vc_cons", i1 false, i1 false}
!142 = !{!"../drivers/tty/vt/vt.c", i32 4844, i32 1}
!143 = !{ptr @__ksymtab_global_cursor_default, !144, !"__ksymtab_global_cursor_default", i1 false, i1 false}
!144 = !{!"../drivers/tty/vt/vt.c", i32 4845, i32 1}
!145 = !{ptr @__ksymtab_give_up_console, !146, !"__ksymtab_give_up_console", i1 false, i1 false}
!146 = !{!"../drivers/tty/vt/vt.c", i32 4847, i32 1}
!147 = !{ptr @registered_con_driver, !148, !"registered_con_driver", i1 false, i1 false}
!148 = !{!"../drivers/tty/vt/vt.c", i32 127, i32 26}
!149 = !{ptr @conswitchp, !150, !"conswitchp", i1 false, i1 false}
!150 = !{!"../drivers/tty/vt/vt.c", i32 128, i32 21}
!151 = !{ptr @vc_cons, !152, !"vc_cons", i1 false, i1 false}
!152 = !{!"../drivers/tty/vt/vt.c", i32 137, i32 11}
!153 = !{ptr @con_driver_map, !154, !"con_driver_map", i1 false, i1 false}
!154 = !{!"../drivers/tty/vt/vt.c", i32 140, i32 28}
!155 = distinct !{null, !156, !"ignore_poke", i1 false, i1 false}
!156 = !{!"../drivers/tty/vt/vt.c", i32 173, i32 12}
!157 = !{ptr @do_poke_blanked_console, !158, !"do_poke_blanked_console", i1 false, i1 false}
!158 = !{!"../drivers/tty/vt/vt.c", i32 175, i32 5}
!159 = !{ptr @console_blanked, !160, !"console_blanked", i1 false, i1 false}
!160 = !{!"../drivers/tty/vt/vt.c", i32 176, i32 5}
!161 = !{ptr @vesa_blank_mode, !162, !"vesa_blank_mode", i1 false, i1 false}
!162 = !{!"../drivers/tty/vt/vt.c", i32 178, i32 12}
!163 = !{ptr @vesa_off_interval, !164, !"vesa_off_interval", i1 false, i1 false}
!164 = !{!"../drivers/tty/vt/vt.c", i32 179, i32 12}
!165 = !{ptr @blankinterval, !166, !"blankinterval", i1 false, i1 false}
!166 = !{!"../drivers/tty/vt/vt.c", i32 180, i32 12}
!167 = !{ptr @fg_console, !168, !"fg_console", i1 false, i1 false}
!168 = !{!"../drivers/tty/vt/vt.c", i32 192, i32 5}
!169 = !{ptr @last_console, !170, !"last_console", i1 false, i1 false}
!170 = !{!"../drivers/tty/vt/vt.c", i32 193, i32 5}
!171 = !{ptr @saved_fg_console, !172, !"saved_fg_console", i1 false, i1 false}
!172 = !{!"../drivers/tty/vt/vt.c", i32 195, i32 12}
!173 = !{ptr @saved_last_console, !174, !"saved_last_console", i1 false, i1 false}
!174 = !{!"../drivers/tty/vt/vt.c", i32 196, i32 12}
!175 = !{ptr @saved_want_console, !176, !"saved_want_console", i1 false, i1 false}
!176 = !{!"../drivers/tty/vt/vt.c", i32 197, i32 12}
!177 = !{ptr @saved_vc_mode, !178, !"saved_vc_mode", i1 false, i1 false}
!178 = !{!"../drivers/tty/vt/vt.c", i32 198, i32 12}
!179 = !{ptr @saved_console_blanked, !180, !"saved_console_blanked", i1 false, i1 false}
!180 = !{!"../drivers/tty/vt/vt.c", i32 199, i32 12}
!181 = !{ptr @console_blank_hook, !182, !"console_blank_hook", i1 false, i1 false}
!182 = !{!"../drivers/tty/vt/vt.c", i32 225, i32 7}
!183 = !{ptr @blank_state, !184, !"blank_state", i1 false, i1 false}
!184 = !{!"../drivers/tty/vt/vt.c", i32 228, i32 12}
!185 = distinct !{null, !186, !"blank_timer_expired", i1 false, i1 false}
!186 = !{!"../drivers/tty/vt/vt.c", i32 229, i32 12}
!187 = !{ptr @tty0dev, !188, !"tty0dev", i1 false, i1 false}
!188 = !{!"../drivers/tty/vt/vt.c", i32 242, i32 23}
!189 = !{ptr @console_driver, !190, !"console_driver", i1 false, i1 false}
!190 = !{!"../drivers/tty/vt/vt.c", i32 3037, i32 20}
!191 = !{ptr @vc0_cdev, !192, !"vc0_cdev", i1 false, i1 false}
!192 = !{!"../drivers/tty/vt/vt.c", i32 3572, i32 20}
!193 = !{ptr @__param_str_default_utf8, !3, !"__param_str_default_utf8", i1 false, i1 false}
!194 = !{ptr @__param_str_global_cursor_default, !8, !"__param_str_global_cursor_default", i1 false, i1 false}
!195 = !{ptr @__param_str_cur_default, !11, !"__param_str_cur_default", i1 false, i1 false}
!196 = !{ptr @cur_default, !197, !"cur_default", i1 false, i1 false}
!197 = !{!"../drivers/tty/vt/vt.c", i32 166, i32 12}
!198 = !{ptr @__param_str_consoleblank, !14, !"__param_str_consoleblank", i1 false, i1 false}
!199 = !{ptr @.str.16, !200, !"<string literal>", i1 false, i1 false}
!200 = !{!"../drivers/tty/vt/vt.c", i32 247, i32 8}
!201 = !{ptr @vt_notifier_list, !200, !"vt_notifier_list", i1 false, i1 false}
!202 = !{ptr @.str.17, !203, !"<string literal>", i1 false, i1 false}
!203 = !{!"../drivers/tty/vt/vt.c", i32 183, i32 8}
!204 = !{ptr @console_work, !203, !"console_work", i1 false, i1 false}
!205 = !{ptr @scrollback_delta, !206, !"scrollback_delta", i1 false, i1 false}
!206 = !{!"../drivers/tty/vt/vt.c", i32 219, i32 12}
!207 = !{ptr @vc_port_ops, !208, !"vc_port_ops", i1 false, i1 false}
!208 = !{!"../drivers/tty/vt/vt.c", i32 1096, i32 41}
!209 = !{ptr @master_display_fg, !210, !"master_display_fg", i1 false, i1 false}
!210 = !{!"../drivers/tty/vt/vt.c", i32 207, i32 24}
!211 = !{ptr @__param_str_default_red, !41, !"__param_str_default_red", i1 false, i1 false}
!212 = !{ptr @__param_arr_default_red, !41, !"__param_arr_default_red", i1 false, i1 false}
!213 = !{ptr @__param_str_default_grn, !46, !"__param_str_default_grn", i1 false, i1 false}
!214 = !{ptr @__param_arr_default_grn, !46, !"__param_arr_default_grn", i1 false, i1 false}
!215 = !{ptr @__param_str_default_blu, !51, !"__param_str_default_blu", i1 false, i1 false}
!216 = !{ptr @__param_arr_default_blu, !51, !"__param_arr_default_blu", i1 false, i1 false}
!217 = !{ptr @__param_str_color, !58, !"__param_str_color", i1 false, i1 false}
!218 = !{ptr @default_color, !219, !"default_color", i1 false, i1 false}
!219 = !{!"../drivers/tty/vt/vt.c", i32 3443, i32 12}
!220 = !{ptr @__param_str_italic, !61, !"__param_str_italic", i1 false, i1 false}
!221 = !{ptr @default_italic_color, !222, !"default_italic_color", i1 false, i1 false}
!222 = !{!"../drivers/tty/vt/vt.c", i32 3444, i32 12}
!223 = !{ptr @__param_str_underline, !64, !"__param_str_underline", i1 false, i1 false}
!224 = !{ptr @default_underline_color, !225, !"default_underline_color", i1 false, i1 false}
!225 = !{!"../drivers/tty/vt/vt.c", i32 3445, i32 12}
!226 = !{ptr @vc_init.__key, !227, !"__key", i1 false, i1 false}
!227 = !{!"../drivers/tty/vt/vt.c", i32 3472, i32 2}
!228 = !{ptr @.str.18, !227, !"<string literal>", i1 false, i1 false}
!229 = !{ptr @con_init.__key, !230, !"__key", i1 false, i1 false}
!230 = !{!"../drivers/tty/vt/vt.c", i32 3522, i32 3}
!231 = !{ptr @.str.19, !232, !"<string literal>", i1 false, i1 false}
!232 = !{!"../drivers/tty/vt/vt.c", i32 3537, i32 2}
!233 = !{ptr @.str.20, !232, !"<string literal>", i1 false, i1 false}
!234 = !{ptr @con_init._entry, !232, !"_entry", i1 false, i1 false}
!235 = !{ptr @con_init._entry_ptr, !232, !"_entry_ptr", i1 false, i1 false}
!236 = !{ptr @.str.21, !232, !"<string literal>", i1 false, i1 false}
!237 = !{ptr @.str.22, !232, !"<string literal>", i1 false, i1 false}
!238 = distinct !{null, !239, !"printable", i1 false, i1 false}
!239 = !{!"../drivers/tty/vt/vt.c", i32 160, i32 12}
!240 = !{ptr @vt_console_driver, !241, !"vt_console_driver", i1 false, i1 false}
!241 = !{!"../drivers/tty/vt/vt.c", i32 3159, i32 23}
!242 = !{ptr @.str.23, !243, !"<string literal>", i1 false, i1 false}
!243 = !{!"../drivers/tty/vt/vt.c", i32 3082, i32 9}
!244 = !{ptr @vt_console_print.printing_lock, !243, !"printing_lock", i1 false, i1 false}
!245 = !{ptr @vt_dev_groups, !246, !"vt_dev_groups", i1 false, i1 false}
!246 = !{!"../drivers/tty/vt/vt.c", i32 3586, i32 1}
!247 = !{ptr @vt_dev_group, !246, !"vt_dev_group", i1 false, i1 false}
!248 = !{ptr @vt_dev_attrs, !249, !"vt_dev_attrs", i1 false, i1 false}
!249 = !{!"../drivers/tty/vt/vt.c", i32 3581, i32 26}
!250 = !{ptr @dev_attr_active, !251, !"dev_attr_active", i1 false, i1 false}
!251 = !{!"../drivers/tty/vt/vt.c", i32 3579, i32 8}
!252 = !{ptr @.str.24, !253, !"<string literal>", i1 false, i1 false}
!253 = !{!"../drivers/tty/vt/vt.c", i32 3577, i32 22}
!254 = !{ptr @con_ops, !255, !"con_ops", i1 false, i1 false}
!255 = !{!"../drivers/tty/vt/vt.c", i32 3551, i32 36}
!256 = !{ptr @.str.25, !257, !"<string literal>", i1 false, i1 false}
!257 = !{!"../drivers/tty/vt/vt.c", i32 2911, i32 3}
!258 = !{ptr @.str.26, !257, !"<string literal>", i1 false, i1 false}
!259 = !{ptr @do_con_write._entry, !257, !"_entry", i1 false, i1 false}
!260 = !{ptr @do_con_write._entry_ptr, !257, !"_entry_ptr", i1 false, i1 false}
!261 = distinct !{null, !262, !"__already_done", i1 false, i1 false}
!262 = !{!"../drivers/tty/vt/vt.c", i32 2919, i32 3}
!263 = !{ptr @.str.28, !262, !"<string literal>", i1 false, i1 false}
!264 = !{ptr @do_con_write._entry.27, !262, !"_entry", i1 false, i1 false}
!265 = !{ptr @do_con_write._entry_ptr.29, !262, !"_entry_ptr", i1 false, i1 false}
!266 = !{ptr @vc_translate_unicode.utf8_length_changes, !267, !"utf8_length_changes", i1 false, i1 false}
!267 = !{!"../drivers/tty/vt/vt.c", i32 2660, i32 19}
!268 = distinct !{null, !269, !"CTRL_ACTION", i1 false, i1 false}
!269 = !{!"../drivers/tty/vt/vt.c", i32 2760, i32 19}
!270 = distinct !{null, !271, !"CTRL_ALWAYS", i1 false, i1 false}
!271 = !{!"../drivers/tty/vt/vt.c", i32 2762, i32 19}
!272 = !{ptr @respond_ID.vt102_id, !273, !"vt102_id", i1 false, i1 false}
!273 = !{!"../drivers/tty/vt/vt.c", i32 1860, i32 20}
!274 = !{ptr @status_report.teminal_ok, !275, !"teminal_ok", i1 false, i1 false}
!275 = !{!"../drivers/tty/vt/vt.c", i32 1852, i32 20}
!276 = !{ptr @.str.30, !277, !"<string literal>", i1 false, i1 false}
!277 = !{!"../drivers/tty/vt/vt.c", i32 1844, i32 21}
!278 = !{ptr @is_double_width.double_width, !279, !"double_width", i1 false, i1 false}
!279 = !{!"../drivers/tty/vt/vt.c", i32 2593, i32 31}
!280 = !{ptr @.str.31, !281, !"<string literal>", i1 false, i1 false}
!281 = !{!"../drivers/tty/vt/vt.c", i32 3707, i32 2}
!282 = !{ptr @.str.32, !281, !"<string literal>", i1 false, i1 false}
!283 = !{ptr @do_bind_con_driver._entry, !281, !"_entry", i1 false, i1 false}
!284 = !{ptr @do_bind_con_driver._entry_ptr, !281, !"_entry_ptr", i1 false, i1 false}
!285 = !{ptr @.str.34, !286, !"<string literal>", i1 false, i1 false}
!286 = !{!"../drivers/tty/vt/vt.c", i32 3709, i32 3}
!287 = !{ptr @do_bind_con_driver._entry.33, !286, !"_entry", i1 false, i1 false}
!288 = !{ptr @do_bind_con_driver._entry_ptr.35, !286, !"_entry_ptr", i1 false, i1 false}
!289 = !{ptr @.str.37, !290, !"<string literal>", i1 false, i1 false}
!290 = !{!"../drivers/tty/vt/vt.c", i32 3713, i32 3}
!291 = !{ptr @do_bind_con_driver._entry.36, !290, !"_entry", i1 false, i1 false}
!292 = !{ptr @do_bind_con_driver._entry_ptr.38, !290, !"_entry_ptr", i1 false, i1 false}
!293 = !{ptr @.str.40, !294, !"<string literal>", i1 false, i1 false}
!294 = !{!"../drivers/tty/vt/vt.c", i32 3722, i32 3}
!295 = !{ptr @do_bind_con_driver._entry.39, !294, !"_entry", i1 false, i1 false}
!296 = !{ptr @do_bind_con_driver._entry_ptr.41, !294, !"_entry_ptr", i1 false, i1 false}
!297 = !{ptr @.str.42, !298, !"<string literal>", i1 false, i1 false}
!298 = !{!"../drivers/tty/vt/vt.c", i32 184, i32 8}
!299 = !{ptr @con_driver_unregister_work, !298, !"con_driver_unregister_work", i1 false, i1 false}
!300 = distinct !{null, !301, !"__already_done", i1 false, i1 false}
!301 = !{!"../drivers/tty/vt/vt.c", i32 4240, i32 7}
!302 = distinct !{null, !303, !"__already_done", i1 false, i1 false}
!303 = !{!"../drivers/tty/vt/vt.c", i32 4245, i32 3}
!304 = !{ptr @vtconsole_class, !305, !"vtconsole_class", i1 false, i1 false}
!305 = !{!"../drivers/tty/vt/vt.c", i32 3628, i32 22}
!306 = !{ptr @.str.44, !307, !"<string literal>", i1 false, i1 false}
!307 = !{!"../drivers/tty/vt/vt.c", i32 4158, i32 8}
!308 = !{ptr @.str.45, !309, !"<string literal>", i1 false, i1 false}
!309 = !{!"../drivers/tty/vt/vt.c", i32 4160, i32 3}
!310 = !{ptr @.str.46, !309, !"<string literal>", i1 false, i1 false}
!311 = !{ptr @do_register_con_driver._entry, !309, !"_entry", i1 false, i1 false}
!312 = !{ptr @do_register_con_driver._entry_ptr, !309, !"_entry_ptr", i1 false, i1 false}
!313 = !{ptr @con_dev_groups, !314, !"con_dev_groups", i1 false, i1 false}
!314 = !{!"../drivers/tty/vt/vt.c", i32 3965, i32 1}
!315 = !{ptr @con_dev_group, !314, !"con_dev_group", i1 false, i1 false}
!316 = !{ptr @con_dev_attrs, !317, !"con_dev_attrs", i1 false, i1 false}
!317 = !{!"../drivers/tty/vt/vt.c", i32 3959, i32 26}
!318 = !{ptr @.str.47, !319, !"<string literal>", i1 false, i1 false}
!319 = !{!"../drivers/tty/vt/vt.c", i32 3956, i32 8}
!320 = !{ptr @dev_attr_bind, !319, !"dev_attr_bind", i1 false, i1 false}
!321 = !{ptr @.str.48, !322, !"<string literal>", i1 false, i1 false}
!322 = !{!"../drivers/tty/vt/vt.c", i32 3942, i32 34}
!323 = !{ptr @.str.49, !324, !"<string literal>", i1 false, i1 false}
!324 = !{!"../drivers/tty/vt/vt.c", i32 3957, i32 8}
!325 = !{ptr @dev_attr_name, !324, !"dev_attr_name", i1 false, i1 false}
!326 = !{ptr @.str.50, !327, !"<string literal>", i1 false, i1 false}
!327 = !{!"../drivers/tty/vt/vt.c", i32 3950, i32 34}
!328 = !{ptr @.str.51, !329, !"<string literal>", i1 false, i1 false}
!329 = !{!"../drivers/tty/vt/vt.c", i32 3951, i32 43}
!330 = !{ptr @.str.52, !331, !"<string literal>", i1 false, i1 false}
!331 = !{!"../drivers/tty/vt/vt.c", i32 3951, i32 51}
!332 = !{ptr @vtconsole_class_init.__key, !333, !"__key", i1 false, i1 false}
!333 = !{!"../drivers/tty/vt/vt.c", i32 4296, i32 20}
!334 = !{ptr @.str.53, !333, !"<string literal>", i1 false, i1 false}
!335 = !{ptr @.str.54, !336, !"<string literal>", i1 false, i1 false}
!336 = !{!"../drivers/tty/vt/vt.c", i32 4298, i32 3}
!337 = !{ptr @.str.55, !336, !"<string literal>", i1 false, i1 false}
!338 = !{ptr @vtconsole_class_init._entry, !336, !"_entry", i1 false, i1 false}
!339 = !{ptr @vtconsole_class_init._entry_ptr, !336, !"_entry_ptr", i1 false, i1 false}
!340 = !{ptr @vtconsole_class_init._entry.56, !341, !"_entry", i1 false, i1 false}
!341 = !{!"../drivers/tty/vt/vt.c", i32 4315, i32 5}
!342 = !{ptr @vtconsole_class_init._entry_ptr.57, !341, !"_entry_ptr", i1 false, i1 false}
!343 = !{ptr @.str.58, !344, !"<string literal>", i1 false, i1 false}
!344 = !{!"../drivers/tty/vt/vt.c", i32 227, i32 8}
!345 = !{ptr @console_timer, !344, !"console_timer", i1 false, i1 false}
!346 = distinct !{null, !347, !"__already_done", i1 false, i1 false}
!347 = !{!"../include/linux/thread_info.h", i32 230, i32 6}
!348 = !{ptr @.str.59, !347, !"<string literal>", i1 false, i1 false}
!349 = !{ptr @.str.60, !350, !"<string literal>", i1 false, i1 false}
!350 = !{!"../include/linux/thread_info.h", i32 214, i32 2}
!351 = !{ptr @.str.61, !352, !"<string literal>", i1 false, i1 false}
!352 = !{!"../include/linux/uaccess.h", i32 156, i32 2}
!353 = !{ptr @softcursor_original, !354, !"softcursor_original", i1 false, i1 false}
!354 = !{!"../drivers/tty/vt/vt.c", i32 867, i32 12}
!355 = !{!"sp"}
!356 = !{i32 1, !"wchar_size", i32 2}
!357 = !{i32 1, !"min_enum_size", i32 4}
!358 = !{i32 8, !"branch-target-enforcement", i32 0}
!359 = !{i32 8, !"sign-return-address", i32 0}
!360 = !{i32 8, !"sign-return-address-all", i32 0}
!361 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!362 = !{i32 7, !"uwtable", i32 1}
!363 = !{i32 7, !"frame-pointer", i32 2}
!364 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!365 = !{!"branch_weights", i32 1, i32 2000}
!366 = !{i64 2154448116, i64 2154448600, i64 2154448153, i64 2154448209, i64 2154448243, i64 2154448267, i64 2154448308, i64 2154448329, i64 2154448357, i64 2154448391}
!367 = !{!"auto-init"}
!368 = !{i8 0, i8 2}
!369 = !{i64 2154506951}
!370 = !{i64 961246, i64 961263, i64 961287, i64 961313, i64 961331}
!371 = !{i64 2154507296}
!372 = !{i64 4721840}
!373 = !{i64 4722037}
!374 = !{i64 2152207270}
!375 = !{i64 2154511459, i64 2154511739, i64 2154512073, i64 2154512407}
!376 = !{i64 2154522095, i64 2154522375, i64 2154522709, i64 2154523043}
!377 = !{i64 2154530857, i64 2154531137, i64 2154531471, i64 2154531805}
!378 = !{i64 2154539644, i64 2154539924, i64 2154540258, i64 2154540592}
!379 = !{i64 2154549948, i64 2154550228, i64 2154550562, i64 2154550896}
!380 = !{i64 2154571353, i64 2154571633, i64 2154571967, i64 2154572301}
!381 = !{i64 2154644103, i64 2154644383, i64 2154644717, i64 2154645051}
!382 = !{i64 2152230346, i64 2152230371}
!383 = !{!"branch_weights", i32 2000, i32 1}
!384 = !{i64 2152231027, i64 2152231052}
!385 = !{i64 939011, i64 939035, i64 939056, i64 939073, i64 939090}
!386 = !{i64 2154575960, i64 2154576445, i64 2154575997, i64 2154576053, i64 2154576087, i64 2154576111, i64 2154576152, i64 2154576173, i64 2154576201, i64 2154576235}
!387 = !{ptr @rgb_background, ptr @rgb_foreground}
