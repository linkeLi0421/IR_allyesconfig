; ModuleID = '/llk/IR_all_yes/drivers/video/logo/pnmtologo.c_pt.bc'
source_filename = "../drivers/video/logo/pnmtologo.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.color = type { i8, i8, i8 }
%struct.__va_list_tag = type { i32, i32, ptr, ptr }

@programname = internal unnamed_addr global ptr null, align 8
@opterr = external local_unnamed_addr global i32, align 4
@.str = private unnamed_addr constant [8 x i8] c"hn:o:t:\00", align 1
@optarg = external local_unnamed_addr global ptr, align 8
@logoname = internal unnamed_addr global ptr @.str.6, align 8
@outputname = internal unnamed_addr global ptr null, align 8
@.str.1 = private unnamed_addr constant [5 x i8] c"mono\00", align 1
@logo_type = internal unnamed_addr global i32 3, align 4
@.str.2 = private unnamed_addr constant [6 x i8] c"vga16\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"clut224\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"gray256\00", align 1
@optind = external local_unnamed_addr global i32, align 4
@filename = internal unnamed_addr global ptr null, align 8
@.str.5 = private unnamed_addr constant [481 x i8] c"\0AUsage: %s [options] <filename>\0A\0AValid options:\0A    -h          : display this usage information\0A    -n <name>   : specify logo name (default: linux_logo)\0A    -o <output> : output to file <output> instead of stdout\0A    -t <type>   : specify logo type, one of\0A                      mono    : monochrome black/white\0A                      vga16   : 16 colors VGA text palette\0A                      clut224 : 224 colors (default)\0A                      gray256 : 256 levels grayscale\0A\0A\00", align 1
@stderr = external local_unnamed_addr global ptr, align 8
@.str.6 = private unnamed_addr constant [11 x i8] c"linux_logo\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"Cannot open file %s: %s\0A\00", align 1
@.str.9 = private unnamed_addr constant [22 x i8] c"%s is not a PNM file\0A\00", align 1
@.str.10 = private unnamed_addr constant [76 x i8] c"%s: Binary PNM is not supported\0AUse pnmnoraw(1) to convert it to ASCII PNM\0A\00", align 1
@logo_width = internal unnamed_addr global i32 0, align 4
@logo_height = internal unnamed_addr global i32 0, align 4
@logo_data = internal unnamed_addr global ptr null, align 8
@.str.11 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@is_plain_pbm = internal unnamed_addr global i1 false, align 4
@.str.12 = private unnamed_addr constant [17 x i8] c"%s: end of file\0A\00", align 1
@.str.13 = private unnamed_addr constant [26 x i8] c"Image must be monochrome\0A\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@out = internal unnamed_addr global ptr null, align 8
@.str.15 = private unnamed_addr constant [27 x i8] c"Cannot create file %s: %s\0A\00", align 1
@stdout = external local_unnamed_addr global ptr, align 8
@.str.16 = private unnamed_addr constant [4 x i8] c"/*\0A\00", align 1
@.str.17 = private unnamed_addr constant [28 x i8] c" *  DO NOT EDIT THIS FILE!\0A\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c" *\0A\00", align 1
@.str.19 = private unnamed_addr constant [44 x i8] c" *  It was automatically generated from %s\0A\00", align 1
@.str.20 = private unnamed_addr constant [19 x i8] c" *  Linux logo %s\0A\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c" */\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [32 x i8] c"#include <linux/linux_logo.h>\0A\0A\00", align 1
@.str.23 = private unnamed_addr constant [47 x i8] c"static unsigned char %s_data[] __initdata = {\0A\00", align 1
@write_hex_cnt = internal unnamed_addr global i32 0, align 4
@.str.24 = private unnamed_addr constant [9 x i8] c", 0x%02x\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c",\0A\090x%02x\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"\090x%02x\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"\0A};\0A\0A\00", align 1
@.str.28 = private unnamed_addr constant [44 x i8] c"const struct linux_logo %s __initconst = {\0A\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"\09.type\09\09= %s,\0A\00", align 1
@logo_types = internal unnamed_addr constant [5 x ptr] [ptr null, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39], align 16
@.str.30 = private unnamed_addr constant [16 x i8] c"\09.width\09\09= %d,\0A\00", align 1
@.str.31 = private unnamed_addr constant [17 x i8] c"\09.height\09\09= %d,\0A\00", align 1
@.str.32 = private unnamed_addr constant [18 x i8] c"\09.clutsize\09= %d,\0A\00", align 1
@logo_clutsize = internal unnamed_addr global i32 0, align 4
@.str.33 = private unnamed_addr constant [20 x i8] c"\09.clut\09\09= %s_clut,\0A\00", align 1
@.str.34 = private unnamed_addr constant [19 x i8] c"\09.data\09\09= %s_data\0A\00", align 1
@.str.35 = private unnamed_addr constant [5 x i8] c"};\0A\0A\00", align 1
@.str.36 = private unnamed_addr constant [16 x i8] c"LINUX_LOGO_MONO\00", align 1
@.str.37 = private unnamed_addr constant [17 x i8] c"LINUX_LOGO_VGA16\00", align 1
@.str.38 = private unnamed_addr constant [19 x i8] c"LINUX_LOGO_CLUT224\00", align 1
@.str.39 = private unnamed_addr constant [19 x i8] c"LINUX_LOGO_GRAY256\00", align 1
@.str.40 = private unnamed_addr constant [110 x i8] c"Image must use the 16 console colors only\0AUse ppmquant(1) -map clut_vga16.ppm to reduce the number of colors\0A\00", align 1
@logo_clut = internal unnamed_addr global [224 x %struct.color] zeroinitializer, align 16
@.str.41 = private unnamed_addr constant [78 x i8] c"Image has more than %d colors\0AUse ppmquant(1) to reduce the number of colors\0A\00", align 1
@.str.42 = private unnamed_addr constant [47 x i8] c"static unsigned char %s_clut[] __initdata = {\0A\00", align 1
@.str.43 = private unnamed_addr constant [25 x i8] c"Image must be grayscale\0A\00", align 1

; Function Attrs: noreturn nounwind uwtable
define dso_local i32 @main(i32 noundef %argc, ptr noundef %argv) local_unnamed_addr #0 {
entry:
  %0 = load ptr, ptr %argv, align 8, !tbaa !5
  store ptr %0, ptr @programname, align 8, !tbaa !5
  store i32 0, ptr @opterr, align 4, !tbaa !9
  br label %while.cond

while.cond:                                       ; preds = %while.cond.backedge, %entry
  %call = tail call i32 @getopt(i32 noundef %argc, ptr noundef nonnull %argv, ptr noundef nonnull @.str) #13
  switch i32 %call, label %sw.default [
    i32 -1, label %while.end
    i32 104, label %sw.bb
    i32 110, label %sw.bb1
    i32 111, label %sw.bb2
    i32 116, label %sw.bb3
  ]

sw.bb:                                            ; preds = %while.cond
  tail call fastcc void @usage() #14
  unreachable

sw.bb1:                                           ; preds = %while.cond
  %1 = load ptr, ptr @optarg, align 8, !tbaa !5
  store ptr %1, ptr @logoname, align 8, !tbaa !5
  br label %while.cond.backedge

sw.bb2:                                           ; preds = %while.cond
  %2 = load ptr, ptr @optarg, align 8, !tbaa !5
  store ptr %2, ptr @outputname, align 8, !tbaa !5
  br label %while.cond.backedge

sw.bb3:                                           ; preds = %while.cond
  %3 = load ptr, ptr @optarg, align 8, !tbaa !5
  %call4 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(5) @.str.1) #15
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %if.then5, label %if.else

if.then5:                                         ; preds = %sw.bb3
  store i32 1, ptr @logo_type, align 4, !tbaa !9
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.then16, %if.then12, %if.then8, %if.then5, %sw.bb2, %sw.bb1
  br label %while.cond

if.else:                                          ; preds = %sw.bb3
  %call6 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(6) @.str.2) #15
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %if.then8, label %if.else9

if.then8:                                         ; preds = %if.else
  store i32 2, ptr @logo_type, align 4, !tbaa !9
  br label %while.cond.backedge

if.else9:                                         ; preds = %if.else
  %call10 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(8) @.str.3) #15
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.then12, label %if.else13

if.then12:                                        ; preds = %if.else9
  store i32 3, ptr @logo_type, align 4, !tbaa !9
  br label %while.cond.backedge

if.else13:                                        ; preds = %if.else9
  %call14 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(1) %3, ptr noundef nonnull dereferenceable(8) @.str.4) #15
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.then16, label %if.else17

if.then16:                                        ; preds = %if.else13
  store i32 4, ptr @logo_type, align 4, !tbaa !9
  br label %while.cond.backedge

if.else17:                                        ; preds = %if.else13
  tail call fastcc void @usage() #14
  unreachable

sw.default:                                       ; preds = %while.cond
  tail call fastcc void @usage() #14
  unreachable

while.end:                                        ; preds = %while.cond
  %4 = load i32, ptr @optind, align 4, !tbaa !9
  %sub = add nsw i32 %argc, -1
  %cmp22.not = icmp eq i32 %4, %sub
  br i1 %cmp22.not, label %if.end24, label %if.then23

if.then23:                                        ; preds = %while.end
  tail call fastcc void @usage() #14
  unreachable

if.end24:                                         ; preds = %while.end
  %idxprom = sext i32 %4 to i64
  %arrayidx25 = getelementptr inbounds ptr, ptr %argv, i64 %idxprom
  %5 = load ptr, ptr %arrayidx25, align 8, !tbaa !5
  store ptr %5, ptr @filename, align 8, !tbaa !5
  %call.i = tail call ptr @fopen(ptr noundef %5, ptr noundef nonnull @.str.7) #13
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end24
  %6 = load ptr, ptr @filename, align 8, !tbaa !5
  %call1.i = tail call ptr @__errno_location() #16
  %7 = load i32, ptr %call1.i, align 4, !tbaa !9
  %call2.i = tail call ptr @strerror(i32 noundef %7) #13
  tail call void (ptr, ...) @die(ptr noundef nonnull @.str.8, ptr noundef %6, ptr noundef %call2.i) #17
  unreachable

if.end.i:                                         ; preds = %if.end24
  %call3.i = tail call i32 @fgetc(ptr noundef nonnull %call.i) #13
  %cmp.not.i = icmp eq i32 %call3.i, 80
  br i1 %cmp.not.i, label %if.end5.i, label %if.then4.i

if.then4.i:                                       ; preds = %if.end.i
  %8 = load ptr, ptr @filename, align 8, !tbaa !5
  tail call void (ptr, ...) @die(ptr noundef nonnull @.str.9, ptr noundef %8) #17
  unreachable

if.end5.i:                                        ; preds = %if.end.i
  %call6.i = tail call i32 @fgetc(ptr noundef nonnull %call.i) #13
  switch i32 %call6.i, label %sw.default.i [
    i32 49, label %sw.epilog.i
    i32 50, label %sw.epilog.i
    i32 51, label %sw.epilog.i
    i32 52, label %sw.bb7.i
    i32 53, label %sw.bb7.i
    i32 54, label %sw.bb7.i
  ]

sw.bb7.i:                                         ; preds = %if.end5.i, %if.end5.i, %if.end5.i
  %9 = load ptr, ptr @filename, align 8, !tbaa !5
  tail call void (ptr, ...) @die(ptr noundef nonnull @.str.10, ptr noundef %9) #17
  unreachable

sw.default.i:                                     ; preds = %if.end5.i
  %10 = load ptr, ptr @filename, align 8, !tbaa !5
  tail call void (ptr, ...) @die(ptr noundef nonnull @.str.9, ptr noundef %10) #17
  unreachable

sw.epilog.i:                                      ; preds = %if.end5.i, %if.end5.i, %if.end5.i
  %call8.i = tail call fastcc i32 @get_number(ptr noundef nonnull %call.i) #13
  store i32 %call8.i, ptr @logo_width, align 4, !tbaa !9
  %call9.i = tail call fastcc i32 @get_number(ptr noundef nonnull %call.i) #13
  store i32 %call9.i, ptr @logo_height, align 4, !tbaa !9
  %conv.i = zext i32 %call9.i to i64
  %mul.i = shl nuw nsw i64 %conv.i, 3
  %call10.i = tail call noalias ptr @malloc(i64 noundef %mul.i) #18
  store ptr %call10.i, ptr @logo_data, align 8, !tbaa !5
  %tobool11.not.i = icmp eq ptr %call10.i, null
  br i1 %tobool11.not.i, label %if.then12.i, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %sw.epilog.i
  %cmp16196.not.i = icmp eq i32 %call9.i, 0
  br i1 %cmp16196.not.i, label %for.end.i, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %11 = load i32, ptr @logo_width, align 4, !tbaa !9
  %conv18.i = zext i32 %11 to i64
  %mul19.i = mul nuw nsw i64 %conv18.i, 3
  br label %for.body.i

if.then12.i:                                      ; preds = %sw.epilog.i
  %call13.i = tail call ptr @__errno_location() #16
  %12 = load i32, ptr %call13.i, align 4, !tbaa !9
  %call14.i = tail call ptr @strerror(i32 noundef %12) #13
  tail call void (ptr, ...) @die(ptr noundef nonnull @.str.11, ptr noundef %call14.i) #17
  unreachable

for.cond.i:                                       ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %conv.i
  br i1 %exitcond.not.i, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %for.cond.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.cond.i ]
  %call20.i = tail call noalias ptr @malloc(i64 noundef %mul19.i) #18
  %arrayidx.i = getelementptr inbounds ptr, ptr %call10.i, i64 %indvars.iv.i
  store ptr %call20.i, ptr %arrayidx.i, align 8, !tbaa !5
  %tobool23.not.i = icmp eq ptr %call20.i, null
  br i1 %tobool23.not.i, label %if.then24.i, label %for.cond.i

if.then24.i:                                      ; preds = %for.body.i
  %call25.i = tail call ptr @__errno_location() #16
  %13 = load i32, ptr %call25.i, align 4, !tbaa !9
  %call26.i = tail call ptr @strerror(i32 noundef %13) #13
  tail call void (ptr, ...) @die(ptr noundef nonnull @.str.11, ptr noundef %call26.i) #17
  unreachable

for.end.i:                                        ; preds = %for.cond.i, %for.cond.preheader.i
  switch i32 %call6.i, label %read_image.exit [
    i32 49, label %sw.bb28.i
    i32 50, label %sw.bb58.i
    i32 51, label %sw.bb91.i
  ]

sw.bb28.i:                                        ; preds = %for.end.i
  store i1 true, ptr @is_plain_pbm, align 4
  br i1 %cmp16196.not.i, label %read_image.exit, label %for.cond33.preheader.preheader.i

for.cond33.preheader.preheader.i:                 ; preds = %sw.bb28.i
  %.pre237.i = load i32, ptr @logo_width, align 4, !tbaa !9
  br label %for.cond33.preheader.i

for.cond33.preheader.i:                           ; preds = %for.inc55.i, %for.cond33.preheader.preheader.i
  %14 = phi i32 [ %call9.i, %for.cond33.preheader.preheader.i ], [ %21, %for.inc55.i ]
  %15 = phi i32 [ %.pre237.i, %for.cond33.preheader.preheader.i ], [ %22, %for.inc55.i ]
  %indvars.iv231.i = phi i64 [ 0, %for.cond33.preheader.preheader.i ], [ %indvars.iv.next232.i, %for.inc55.i ]
  %cmp34208.not.i = icmp eq i32 %15, 0
  br i1 %cmp34208.not.i, label %for.inc55.i, label %for.body36.i

for.body36.i:                                     ; preds = %for.body36.i, %for.cond33.preheader.i
  %indvars.iv228.i = phi i64 [ %indvars.iv.next229.i, %for.body36.i ], [ 0, %for.cond33.preheader.i ]
  %call37.i = tail call fastcc i32 @get_number(ptr noundef nonnull %call.i) #13
  %16 = trunc i32 %call37.i to i8
  %.neg.i = add i8 %16, -1
  %17 = load ptr, ptr @logo_data, align 8, !tbaa !5
  %arrayidx41.i = getelementptr inbounds ptr, ptr %17, i64 %indvars.iv231.i
  %18 = load ptr, ptr %arrayidx41.i, align 8, !tbaa !5
  %blue.i = getelementptr inbounds %struct.color, ptr %18, i64 %indvars.iv228.i, i32 2
  store i8 %.neg.i, ptr %blue.i, align 1, !tbaa !11
  %green.i = getelementptr inbounds %struct.color, ptr %18, i64 %indvars.iv228.i, i32 1
  store i8 %.neg.i, ptr %green.i, align 1, !tbaa !13
  %arrayidx51.i = getelementptr inbounds %struct.color, ptr %18, i64 %indvars.iv228.i
  store i8 %.neg.i, ptr %arrayidx51.i, align 1, !tbaa !14
  %indvars.iv.next229.i = add nuw nsw i64 %indvars.iv228.i, 1
  %19 = load i32, ptr @logo_width, align 4, !tbaa !9
  %20 = zext i32 %19 to i64
  %cmp34.i = icmp ult i64 %indvars.iv.next229.i, %20
  br i1 %cmp34.i, label %for.body36.i, label %for.inc55.loopexit.i

for.inc55.loopexit.i:                             ; preds = %for.body36.i
  %.pre238.i = load i32, ptr @logo_height, align 4, !tbaa !9
  br label %for.inc55.i

for.inc55.i:                                      ; preds = %for.inc55.loopexit.i, %for.cond33.preheader.i
  %21 = phi i32 [ %.pre238.i, %for.inc55.loopexit.i ], [ %14, %for.cond33.preheader.i ]
  %22 = phi i32 [ %19, %for.inc55.loopexit.i ], [ 0, %for.cond33.preheader.i ]
  %indvars.iv.next232.i = add nuw nsw i64 %indvars.iv231.i, 1
  %23 = zext i32 %21 to i64
  %cmp30.i = icmp ult i64 %indvars.iv.next232.i, %23
  br i1 %cmp30.i, label %for.cond33.preheader.i, label %read_image.exit

sw.bb58.i:                                        ; preds = %for.end.i
  %call59.i = tail call fastcc i32 @get_number(ptr noundef nonnull %call.i) #13
  %24 = load i32, ptr @logo_height, align 4, !tbaa !9
  %cmp61205.not.i = icmp eq i32 %24, 0
  br i1 %cmp61205.not.i, label %read_image.exit, label %for.cond64.preheader.lr.ph.i

for.cond64.preheader.lr.ph.i:                     ; preds = %sw.bb58.i
  %div3.i.i = lshr i32 %call59.i, 1
  %.pre235.i = load i32, ptr @logo_width, align 4, !tbaa !9
  br label %for.cond64.preheader.i

for.cond64.preheader.i:                           ; preds = %for.inc88.i, %for.cond64.preheader.lr.ph.i
  %25 = phi i32 [ %24, %for.cond64.preheader.lr.ph.i ], [ %31, %for.inc88.i ]
  %26 = phi i32 [ %.pre235.i, %for.cond64.preheader.lr.ph.i ], [ %32, %for.inc88.i ]
  %indvars.iv225.i = phi i64 [ 0, %for.cond64.preheader.lr.ph.i ], [ %indvars.iv.next226.i, %for.inc88.i ]
  %cmp65203.not.i = icmp eq i32 %26, 0
  br i1 %cmp65203.not.i, label %for.inc88.i, label %for.body67.i

for.body67.i:                                     ; preds = %for.body67.i, %for.cond64.preheader.i
  %indvars.iv222.i = phi i64 [ %indvars.iv.next223.i, %for.body67.i ], [ 0, %for.cond64.preheader.i ]
  %call.i.i = tail call fastcc i32 @get_number(ptr noundef nonnull %call.i) #13
  %mul.i.i = mul i32 %call.i.i, 255
  %add.i.i = add i32 %mul.i.i, %div3.i.i
  %div1.i.i = udiv i32 %add.i.i, %call59.i
  %conv69.i = trunc i32 %div1.i.i to i8
  %27 = load ptr, ptr @logo_data, align 8, !tbaa !5
  %arrayidx71.i = getelementptr inbounds ptr, ptr %27, i64 %indvars.iv225.i
  %28 = load ptr, ptr %arrayidx71.i, align 8, !tbaa !5
  %blue74.i = getelementptr inbounds %struct.color, ptr %28, i64 %indvars.iv222.i, i32 2
  store i8 %conv69.i, ptr %blue74.i, align 1, !tbaa !11
  %green79.i = getelementptr inbounds %struct.color, ptr %28, i64 %indvars.iv222.i, i32 1
  store i8 %conv69.i, ptr %green79.i, align 1, !tbaa !13
  %arrayidx83.i = getelementptr inbounds %struct.color, ptr %28, i64 %indvars.iv222.i
  store i8 %conv69.i, ptr %arrayidx83.i, align 1, !tbaa !14
  %indvars.iv.next223.i = add nuw nsw i64 %indvars.iv222.i, 1
  %29 = load i32, ptr @logo_width, align 4, !tbaa !9
  %30 = zext i32 %29 to i64
  %cmp65.i = icmp ult i64 %indvars.iv.next223.i, %30
  br i1 %cmp65.i, label %for.body67.i, label %for.inc88.loopexit.i

for.inc88.loopexit.i:                             ; preds = %for.body67.i
  %.pre236.i = load i32, ptr @logo_height, align 4, !tbaa !9
  br label %for.inc88.i

for.inc88.i:                                      ; preds = %for.inc88.loopexit.i, %for.cond64.preheader.i
  %31 = phi i32 [ %.pre236.i, %for.inc88.loopexit.i ], [ %25, %for.cond64.preheader.i ]
  %32 = phi i32 [ %29, %for.inc88.loopexit.i ], [ 0, %for.cond64.preheader.i ]
  %indvars.iv.next226.i = add nuw nsw i64 %indvars.iv225.i, 1
  %33 = zext i32 %31 to i64
  %cmp61.i = icmp ult i64 %indvars.iv.next226.i, %33
  br i1 %cmp61.i, label %for.cond64.preheader.i, label %read_image.exit

sw.bb91.i:                                        ; preds = %for.end.i
  %call92.i = tail call fastcc i32 @get_number(ptr noundef nonnull %call.i) #13
  %34 = load i32, ptr @logo_height, align 4, !tbaa !9
  %cmp94200.not.i = icmp eq i32 %34, 0
  br i1 %cmp94200.not.i, label %read_image.exit, label %for.cond97.preheader.lr.ph.i

for.cond97.preheader.lr.ph.i:                     ; preds = %sw.bb91.i
  %div3.i181.i = lshr i32 %call92.i, 1
  %.pre.i = load i32, ptr @logo_width, align 4, !tbaa !9
  br label %for.cond97.preheader.i

for.cond97.preheader.i:                           ; preds = %for.inc125.i, %for.cond97.preheader.lr.ph.i
  %35 = phi i32 [ %34, %for.cond97.preheader.lr.ph.i ], [ %45, %for.inc125.i ]
  %36 = phi i32 [ %.pre.i, %for.cond97.preheader.lr.ph.i ], [ %46, %for.inc125.i ]
  %indvars.iv219.i = phi i64 [ 0, %for.cond97.preheader.lr.ph.i ], [ %indvars.iv.next220.i, %for.inc125.i ]
  %cmp98198.not.i = icmp eq i32 %36, 0
  br i1 %cmp98198.not.i, label %for.inc125.i, label %for.body100.i

for.body100.i:                                    ; preds = %for.body100.i, %for.cond97.preheader.i
  %indvars.iv216.i = phi i64 [ %indvars.iv.next217.i, %for.body100.i ], [ 0, %for.cond97.preheader.i ]
  %call.i179.i = tail call fastcc i32 @get_number(ptr noundef nonnull %call.i) #13
  %mul.i180.i = mul i32 %call.i179.i, 255
  %add.i182.i = add i32 %mul.i180.i, %div3.i181.i
  %div1.i183.i = udiv i32 %add.i182.i, %call92.i
  %conv102.i = trunc i32 %div1.i183.i to i8
  %37 = load ptr, ptr @logo_data, align 8, !tbaa !5
  %arrayidx104.i = getelementptr inbounds ptr, ptr %37, i64 %indvars.iv219.i
  %38 = load ptr, ptr %arrayidx104.i, align 8, !tbaa !5
  %arrayidx106.i = getelementptr inbounds %struct.color, ptr %38, i64 %indvars.iv216.i
  store i8 %conv102.i, ptr %arrayidx106.i, align 1, !tbaa !14
  %call.i184.i = tail call fastcc i32 @get_number(ptr noundef nonnull %call.i) #13
  %mul.i185.i = mul i32 %call.i184.i, 255
  %add.i187.i = add i32 %mul.i185.i, %div3.i181.i
  %div1.i188.i = udiv i32 %add.i187.i, %call92.i
  %conv109.i = trunc i32 %div1.i188.i to i8
  %39 = load ptr, ptr @logo_data, align 8, !tbaa !5
  %arrayidx111.i = getelementptr inbounds ptr, ptr %39, i64 %indvars.iv219.i
  %40 = load ptr, ptr %arrayidx111.i, align 8, !tbaa !5
  %green114.i = getelementptr inbounds %struct.color, ptr %40, i64 %indvars.iv216.i, i32 1
  store i8 %conv109.i, ptr %green114.i, align 1, !tbaa !13
  %call.i189.i = tail call fastcc i32 @get_number(ptr noundef nonnull %call.i) #13
  %mul.i190.i = mul i32 %call.i189.i, 255
  %add.i192.i = add i32 %mul.i190.i, %div3.i181.i
  %div1.i193.i = udiv i32 %add.i192.i, %call92.i
  %conv116.i = trunc i32 %div1.i193.i to i8
  %41 = load ptr, ptr @logo_data, align 8, !tbaa !5
  %arrayidx118.i = getelementptr inbounds ptr, ptr %41, i64 %indvars.iv219.i
  %42 = load ptr, ptr %arrayidx118.i, align 8, !tbaa !5
  %blue121.i = getelementptr inbounds %struct.color, ptr %42, i64 %indvars.iv216.i, i32 2
  store i8 %conv116.i, ptr %blue121.i, align 1, !tbaa !11
  %indvars.iv.next217.i = add nuw nsw i64 %indvars.iv216.i, 1
  %43 = load i32, ptr @logo_width, align 4, !tbaa !9
  %44 = zext i32 %43 to i64
  %cmp98.i = icmp ult i64 %indvars.iv.next217.i, %44
  br i1 %cmp98.i, label %for.body100.i, label %for.inc125.loopexit.i

for.inc125.loopexit.i:                            ; preds = %for.body100.i
  %.pre234.i = load i32, ptr @logo_height, align 4, !tbaa !9
  br label %for.inc125.i

for.inc125.i:                                     ; preds = %for.inc125.loopexit.i, %for.cond97.preheader.i
  %45 = phi i32 [ %.pre234.i, %for.inc125.loopexit.i ], [ %35, %for.cond97.preheader.i ]
  %46 = phi i32 [ %43, %for.inc125.loopexit.i ], [ 0, %for.cond97.preheader.i ]
  %indvars.iv.next220.i = add nuw nsw i64 %indvars.iv219.i, 1
  %47 = zext i32 %45 to i64
  %cmp94.i = icmp ult i64 %indvars.iv.next220.i, %47
  br i1 %cmp94.i, label %for.cond97.preheader.i, label %read_image.exit

read_image.exit:                                  ; preds = %for.inc125.i, %sw.bb91.i, %for.inc88.i, %sw.bb58.i, %for.inc55.i, %sw.bb28.i, %for.end.i
  %call129.i = tail call i32 @fclose(ptr noundef nonnull %call.i) #13
  %48 = load i32, ptr @logo_type, align 4, !tbaa !9
  switch i32 %48, label %sw.epilog30 [
    i32 1, label %sw.bb26
    i32 2, label %sw.bb27
    i32 3, label %sw.bb28
    i32 4, label %sw.bb29
  ]

sw.bb26:                                          ; preds = %read_image.exit
  %49 = load i32, ptr @logo_height, align 4, !tbaa !9
  %cmp63.not.i = icmp eq i32 %49, 0
  br i1 %cmp63.not.i, label %for.end14.i, label %for.cond1.preheader.lr.ph.i

for.cond1.preheader.lr.ph.i:                      ; preds = %sw.bb26
  %50 = load i32, ptr @logo_width, align 4, !tbaa !9
  %cmp261.not.i = icmp eq i32 %50, 0
  %51 = load ptr, ptr @logo_data, align 8
  %wide.trip.count80.i = zext i32 %49 to i64
  %wide.trip.count.i = zext i32 %50 to i64
  br label %for.cond1.preheader.i

for.cond1.preheader.i:                            ; preds = %for.inc12.i, %for.cond1.preheader.lr.ph.i
  %indvars.iv77.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next78.i, %for.inc12.i ]
  br i1 %cmp261.not.i, label %for.inc12.i, label %for.body3.lr.ph.i

for.body3.lr.ph.i:                                ; preds = %for.cond1.preheader.i
  %arrayidx.i35 = getelementptr inbounds ptr, ptr %51, i64 %indvars.iv77.i
  %52 = load ptr, ptr %arrayidx.i35, align 8, !tbaa !5
  br label %for.body3.i

for.body3.i:                                      ; preds = %for.inc.i, %for.body3.lr.ph.i
  %indvars.iv.i36 = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next.i39, %for.inc.i ]
  %arrayidx5.i = getelementptr inbounds %struct.color, ptr %52, i64 %indvars.iv.i36
  %arrayidx5.coerce.0.copyload.i = load i24, ptr %arrayidx5.i, align 1
  %.not.i = icmp eq i24 %arrayidx5.coerce.0.copyload.i, 0
  br i1 %.not.i, label %for.inc.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %for.body3.i
  %53 = and i24 %arrayidx5.coerce.0.copyload.i, 65535
  %54 = icmp ne i24 %53, 65535
  %cmp6.i.i = icmp ult i24 %arrayidx5.coerce.0.copyload.i, -65536
  %tobool11.not.i37 = or i1 %cmp6.i.i, %54
  br i1 %tobool11.not.i37, label %if.then.i38, label %for.inc.i

if.then.i38:                                      ; preds = %land.lhs.true.i
  tail call void (ptr, ...) @die(ptr noundef nonnull @.str.13) #17
  unreachable

for.inc.i:                                        ; preds = %land.lhs.true.i, %for.body3.i
  %indvars.iv.next.i39 = add nuw nsw i64 %indvars.iv.i36, 1
  %exitcond.not.i40 = icmp eq i64 %indvars.iv.next.i39, %wide.trip.count.i
  br i1 %exitcond.not.i40, label %for.inc12.i, label %for.body3.i

for.inc12.i:                                      ; preds = %for.inc.i, %for.cond1.preheader.i
  %indvars.iv.next78.i = add nuw nsw i64 %indvars.iv77.i, 1
  %exitcond81.not.i = icmp eq i64 %indvars.iv.next78.i, %wide.trip.count80.i
  br i1 %exitcond81.not.i, label %for.end14.i, label %for.cond1.preheader.i

for.end14.i:                                      ; preds = %for.inc12.i, %sw.bb26
  tail call fastcc void @write_header() #13
  %55 = load i32, ptr @logo_height, align 4, !tbaa !9
  %cmp1673.not.i = icmp eq i32 %55, 0
  br i1 %cmp1673.not.i, label %sw.epilog30.sink.split, label %for.cond18.preheader.preheader.i

for.cond18.preheader.preheader.i:                 ; preds = %for.end14.i
  %.pre.i41 = load i32, ptr @logo_width, align 4, !tbaa !9
  br label %for.cond18.preheader.i

for.cond18.preheader.i:                           ; preds = %for.inc42.i, %for.cond18.preheader.preheader.i
  %56 = phi i32 [ %55, %for.cond18.preheader.preheader.i ], [ %77, %for.inc42.i ]
  %57 = phi i32 [ %.pre.i41, %for.cond18.preheader.preheader.i ], [ %78, %for.inc42.i ]
  %indvars.iv84.i = phi i64 [ 0, %for.cond18.preheader.preheader.i ], [ %indvars.iv.next85.i, %for.inc42.i ]
  %cmp1971.not.i = icmp eq i32 %57, 0
  br i1 %cmp1971.not.i, label %for.inc42.i, label %for.cond21.preheader.i

for.cond21.preheader.i:                           ; preds = %write_hex.exit.i, %for.cond18.preheader.i
  %58 = phi i32 [ %76, %write_hex.exit.i ], [ %57, %for.cond18.preheader.i ]
  %j.172.i = phi i32 [ %j.2.lcssa.i, %write_hex.exit.i ], [ 0, %for.cond18.preheader.i ]
  %cmp2366.i = icmp ult i32 %j.172.i, %58
  br i1 %cmp2366.i, label %for.body25.lr.ph.i, label %for.end40.i

for.body25.lr.ph.i:                               ; preds = %for.cond21.preheader.i
  %59 = load ptr, ptr @logo_data, align 8, !tbaa !5
  %arrayidx27.i = getelementptr inbounds ptr, ptr %59, i64 %indvars.iv84.i
  %60 = load ptr, ptr %arrayidx27.i, align 8, !tbaa !5
  %61 = zext i32 %58 to i64
  %62 = zext i32 %j.172.i to i64
  %arrayidx29.i = getelementptr inbounds %struct.color, ptr %60, i64 %62
  %63 = load i8, ptr %arrayidx29.i, align 1, !tbaa !14
  %tobool30.not.i = icmp eq i8 %63, 0
  %conv34.i = select i1 %tobool30.not.i, i8 0, i8 -128
  %indvars.iv.next83.i = add nuw nsw i64 %62, 1
  %cmp23.i = icmp ult i64 %indvars.iv.next83.i, %61
  br i1 %cmp23.i, label %for.body25.i.1, label %for.end40.loopexit.i

for.body25.i.1:                                   ; preds = %for.body25.lr.ph.i
  %arrayidx29.i.1 = getelementptr inbounds %struct.color, ptr %60, i64 %indvars.iv.next83.i
  %64 = load i8, ptr %arrayidx29.i.1, align 1, !tbaa !14
  %tobool30.not.i.1 = icmp eq i8 %64, 0
  %conv34.i.1 = select i1 %tobool30.not.i.1, i8 0, i8 64
  %val.1.i.1 = or i8 %conv34.i.1, %conv34.i
  %indvars.iv.next83.i.1 = add nuw nsw i64 %62, 2
  %cmp23.i.1 = icmp ult i64 %indvars.iv.next83.i.1, %61
  br i1 %cmp23.i.1, label %for.body25.i.2, label %for.end40.loopexit.i

for.body25.i.2:                                   ; preds = %for.body25.i.1
  %arrayidx29.i.2 = getelementptr inbounds %struct.color, ptr %60, i64 %indvars.iv.next83.i.1
  %65 = load i8, ptr %arrayidx29.i.2, align 1, !tbaa !14
  %tobool30.not.i.2 = icmp eq i8 %65, 0
  %conv34.i.2 = select i1 %tobool30.not.i.2, i8 0, i8 32
  %val.1.i.2 = or i8 %conv34.i.2, %val.1.i.1
  %indvars.iv.next83.i.2 = add nuw nsw i64 %62, 3
  %cmp23.i.2 = icmp ult i64 %indvars.iv.next83.i.2, %61
  br i1 %cmp23.i.2, label %for.body25.i.3, label %for.end40.loopexit.i

for.body25.i.3:                                   ; preds = %for.body25.i.2
  %arrayidx29.i.3 = getelementptr inbounds %struct.color, ptr %60, i64 %indvars.iv.next83.i.2
  %66 = load i8, ptr %arrayidx29.i.3, align 1, !tbaa !14
  %tobool30.not.i.3 = icmp eq i8 %66, 0
  %conv34.i.3 = select i1 %tobool30.not.i.3, i8 0, i8 16
  %val.1.i.3 = or i8 %conv34.i.3, %val.1.i.2
  %indvars.iv.next83.i.3 = add nuw nsw i64 %62, 4
  %cmp23.i.3 = icmp ult i64 %indvars.iv.next83.i.3, %61
  br i1 %cmp23.i.3, label %for.body25.i.4, label %for.end40.loopexit.i

for.body25.i.4:                                   ; preds = %for.body25.i.3
  %arrayidx29.i.4 = getelementptr inbounds %struct.color, ptr %60, i64 %indvars.iv.next83.i.3
  %67 = load i8, ptr %arrayidx29.i.4, align 1, !tbaa !14
  %tobool30.not.i.4 = icmp eq i8 %67, 0
  %conv34.i.4 = select i1 %tobool30.not.i.4, i8 0, i8 8
  %val.1.i.4 = or i8 %conv34.i.4, %val.1.i.3
  %indvars.iv.next83.i.4 = add nuw nsw i64 %62, 5
  %cmp23.i.4 = icmp ult i64 %indvars.iv.next83.i.4, %61
  br i1 %cmp23.i.4, label %for.body25.i.5, label %for.end40.loopexit.i

for.body25.i.5:                                   ; preds = %for.body25.i.4
  %arrayidx29.i.5 = getelementptr inbounds %struct.color, ptr %60, i64 %indvars.iv.next83.i.4
  %68 = load i8, ptr %arrayidx29.i.5, align 1, !tbaa !14
  %tobool30.not.i.5 = icmp eq i8 %68, 0
  %conv34.i.5 = select i1 %tobool30.not.i.5, i8 0, i8 4
  %val.1.i.5 = or i8 %conv34.i.5, %val.1.i.4
  %indvars.iv.next83.i.5 = add nuw nsw i64 %62, 6
  %cmp23.i.5 = icmp ult i64 %indvars.iv.next83.i.5, %61
  br i1 %cmp23.i.5, label %for.body25.i.6, label %for.end40.loopexit.i

for.body25.i.6:                                   ; preds = %for.body25.i.5
  %arrayidx29.i.6 = getelementptr inbounds %struct.color, ptr %60, i64 %indvars.iv.next83.i.5
  %69 = load i8, ptr %arrayidx29.i.6, align 1, !tbaa !14
  %tobool30.not.i.6 = icmp eq i8 %69, 0
  %conv34.i.6 = select i1 %tobool30.not.i.6, i8 0, i8 2
  %val.1.i.6 = or i8 %conv34.i.6, %val.1.i.5
  %indvars.iv.next83.i.6 = add nuw nsw i64 %62, 7
  %cmp23.i.6 = icmp ult i64 %indvars.iv.next83.i.6, %61
  br i1 %cmp23.i.6, label %for.body25.i.7, label %for.end40.loopexit.i

for.body25.i.7:                                   ; preds = %for.body25.i.6
  %arrayidx29.i.7 = getelementptr inbounds %struct.color, ptr %60, i64 %indvars.iv.next83.i.6
  %70 = load i8, ptr %arrayidx29.i.7, align 1, !tbaa !14
  %tobool30.not.i.7 = icmp ne i8 %70, 0
  %conv34.i.7 = zext i1 %tobool30.not.i.7 to i8
  %val.1.i.7 = or i8 %val.1.i.6, %conv34.i.7
  %indvars.iv.next83.i.7 = add nuw nsw i64 %62, 8
  br label %for.end40.loopexit.i

for.end40.loopexit.i:                             ; preds = %for.body25.i.7, %for.body25.i.6, %for.body25.i.5, %for.body25.i.4, %for.body25.i.3, %for.body25.i.2, %for.body25.i.1, %for.body25.lr.ph.i
  %val.1.i.lcssa = phi i8 [ %conv34.i, %for.body25.lr.ph.i ], [ %val.1.i.1, %for.body25.i.1 ], [ %val.1.i.2, %for.body25.i.2 ], [ %val.1.i.3, %for.body25.i.3 ], [ %val.1.i.4, %for.body25.i.4 ], [ %val.1.i.5, %for.body25.i.5 ], [ %val.1.i.6, %for.body25.i.6 ], [ %val.1.i.7, %for.body25.i.7 ]
  %indvars.iv.next83.i.lcssa = phi i64 [ %indvars.iv.next83.i, %for.body25.lr.ph.i ], [ %indvars.iv.next83.i.1, %for.body25.i.1 ], [ %indvars.iv.next83.i.2, %for.body25.i.2 ], [ %indvars.iv.next83.i.3, %for.body25.i.3 ], [ %indvars.iv.next83.i.4, %for.body25.i.4 ], [ %indvars.iv.next83.i.5, %for.body25.i.5 ], [ %indvars.iv.next83.i.6, %for.body25.i.6 ], [ %indvars.iv.next83.i.7, %for.body25.i.7 ]
  %71 = trunc i64 %indvars.iv.next83.i.lcssa to i32
  br label %for.end40.i

for.end40.i:                                      ; preds = %for.end40.loopexit.i, %for.cond21.preheader.i
  %val.0.lcssa.i = phi i8 [ 0, %for.cond21.preheader.i ], [ %val.1.i.lcssa, %for.end40.loopexit.i ]
  %j.2.lcssa.i = phi i32 [ %j.172.i, %for.cond21.preheader.i ], [ %71, %for.end40.loopexit.i ]
  %72 = load i32, ptr @write_hex_cnt, align 4, !tbaa !9
  %rem.i.i = srem i32 %72, 12
  %tobool.not.i.i = icmp eq i32 %rem.i.i, 0
  br i1 %tobool.not.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %for.end40.i
  %73 = load ptr, ptr @out, align 8, !tbaa !5
  %conv.i.i = zext i8 %val.0.lcssa.i to i32
  %call.i.i42 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %73, ptr noundef nonnull @.str.24, i32 noundef %conv.i.i) #13
  br label %write_hex.exit.i

if.else.i.i:                                      ; preds = %for.end40.i
  %tobool1.not.i.i = icmp eq i32 %72, 0
  %74 = load ptr, ptr @out, align 8, !tbaa !5
  %conv6.i.i = zext i8 %val.0.lcssa.i to i32
  br i1 %tobool1.not.i.i, label %if.else5.i.i, label %if.then2.i.i

if.then2.i.i:                                     ; preds = %if.else.i.i
  %call4.i.i = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %74, ptr noundef nonnull @.str.25, i32 noundef %conv6.i.i) #13
  br label %write_hex.exit.i

if.else5.i.i:                                     ; preds = %if.else.i.i
  %call7.i.i = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %74, ptr noundef nonnull @.str.26, i32 noundef %conv6.i.i) #13
  br label %write_hex.exit.i

write_hex.exit.i:                                 ; preds = %if.else5.i.i, %if.then2.i.i, %if.then.i.i
  %75 = load i32, ptr @write_hex_cnt, align 4, !tbaa !9
  %inc.i.i = add nsw i32 %75, 1
  store i32 %inc.i.i, ptr @write_hex_cnt, align 4, !tbaa !9
  %76 = load i32, ptr @logo_width, align 4, !tbaa !9
  %cmp19.i = icmp ult i32 %j.2.lcssa.i, %76
  br i1 %cmp19.i, label %for.cond21.preheader.i, label %for.inc42.loopexit.i

for.inc42.loopexit.i:                             ; preds = %write_hex.exit.i
  %.pre87.i = load i32, ptr @logo_height, align 4, !tbaa !9
  br label %for.inc42.i

for.inc42.i:                                      ; preds = %for.inc42.loopexit.i, %for.cond18.preheader.i
  %77 = phi i32 [ %.pre87.i, %for.inc42.loopexit.i ], [ %56, %for.cond18.preheader.i ]
  %78 = phi i32 [ %76, %for.inc42.loopexit.i ], [ 0, %for.cond18.preheader.i ]
  %indvars.iv.next85.i = add nuw nsw i64 %indvars.iv84.i, 1
  %79 = zext i32 %77 to i64
  %cmp16.i = icmp ult i64 %indvars.iv.next85.i, %79
  br i1 %cmp16.i, label %for.cond18.preheader.i, label %sw.epilog30.sink.split

sw.bb27:                                          ; preds = %read_image.exit
  %80 = load i32, ptr @logo_height, align 4, !tbaa !9
  %cmp104.not.i = icmp eq i32 %80, 0
  br i1 %cmp104.not.i, label %for.end19.i, label %for.cond1.preheader.lr.ph.i44

for.cond1.preheader.lr.ph.i44:                    ; preds = %sw.bb27
  %81 = load i32, ptr @logo_width, align 4, !tbaa !9
  %cmp2102.not.i = icmp eq i32 %81, 0
  %82 = load ptr, ptr @logo_data, align 8
  %wide.trip.count119.i = zext i32 %80 to i64
  %wide.trip.count.i43 = zext i32 %81 to i64
  br label %for.cond1.preheader.i45

for.cond1.preheader.i45:                          ; preds = %for.inc17.i, %for.cond1.preheader.lr.ph.i44
  %indvars.iv116.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i44 ], [ %indvars.iv.next117.i, %for.inc17.i ]
  br i1 %cmp2102.not.i, label %for.inc17.i, label %for.cond4.preheader.lr.ph.i

for.cond4.preheader.lr.ph.i:                      ; preds = %for.cond1.preheader.i45
  %arrayidx.i46 = getelementptr inbounds ptr, ptr %82, i64 %indvars.iv116.i
  %83 = load ptr, ptr %arrayidx.i46, align 8, !tbaa !5
  br label %for.cond4.preheader.i

for.cond4.preheader.i:                            ; preds = %for.inc14.i, %for.cond4.preheader.lr.ph.i
  %indvars.iv.i47 = phi i64 [ 0, %for.cond4.preheader.lr.ph.i ], [ %indvars.iv.next.i49, %for.inc14.i ]
  %arrayidx8.i = getelementptr inbounds %struct.color, ptr %83, i64 %indvars.iv.i47
  %arrayidx8.coerce.0.copyload.i = load i24, ptr %arrayidx8.i, align 1
  switch i24 %arrayidx8.coerce.0.copyload.i, label %if.then12.i48 [
    i24 0, label %for.inc14.i
    i24 -5636096, label %for.inc14.i
    i24 43520, label %for.inc14.i
    i24 -5592576, label %for.inc14.i
    i24 170, label %for.inc14.i
    i24 -5635926, label %for.inc14.i
    i24 21930, label %for.inc14.i
    i24 -5592406, label %for.inc14.i
    i24 5592405, label %for.inc14.i
    i24 -43691, label %for.inc14.i
    i24 5635925, label %for.inc14.i
    i24 -171, label %for.inc14.i
    i24 5592575, label %for.inc14.i
    i24 -43521, label %for.inc14.i
    i24 5636095, label %for.inc14.i
    i24 -1, label %for.inc14.i
  ]

if.then12.i48:                                    ; preds = %for.cond4.preheader.i
  tail call void (ptr, ...) @die(ptr noundef nonnull @.str.40) #17
  unreachable

for.inc14.i:                                      ; preds = %for.cond4.preheader.i, %for.cond4.preheader.i, %for.cond4.preheader.i, %for.cond4.preheader.i, %for.cond4.preheader.i, %for.cond4.preheader.i, %for.cond4.preheader.i, %for.cond4.preheader.i, %for.cond4.preheader.i, %for.cond4.preheader.i, %for.cond4.preheader.i, %for.cond4.preheader.i, %for.cond4.preheader.i, %for.cond4.preheader.i, %for.cond4.preheader.i, %for.cond4.preheader.i
  %indvars.iv.next.i49 = add nuw nsw i64 %indvars.iv.i47, 1
  %exitcond.not.i50 = icmp eq i64 %indvars.iv.next.i49, %wide.trip.count.i43
  br i1 %exitcond.not.i50, label %for.inc17.i, label %for.cond4.preheader.i

for.inc17.i:                                      ; preds = %for.inc14.i, %for.cond1.preheader.i45
  %indvars.iv.next117.i = add nuw nsw i64 %indvars.iv116.i, 1
  %exitcond120.not.i = icmp eq i64 %indvars.iv.next117.i, %wide.trip.count119.i
  br i1 %exitcond120.not.i, label %for.end19.i, label %for.cond1.preheader.i45

for.end19.i:                                      ; preds = %for.inc17.i, %sw.bb27
  tail call fastcc void @write_header() #13
  %84 = load i32, ptr @logo_height, align 4, !tbaa !9
  %cmp21111.not.i = icmp eq i32 %84, 0
  br i1 %cmp21111.not.i, label %sw.epilog30.sink.split, label %for.cond23.preheader.preheader.i

for.cond23.preheader.preheader.i:                 ; preds = %for.end19.i
  %.pre.i51 = load i32, ptr @logo_width, align 4, !tbaa !9
  br label %for.cond23.preheader.i

for.cond23.preheader.i:                           ; preds = %for.inc69.i, %for.cond23.preheader.preheader.i
  %85 = phi i32 [ %84, %for.cond23.preheader.preheader.i ], [ %95, %for.inc69.i ]
  %86 = phi i32 [ %.pre.i51, %for.cond23.preheader.preheader.i ], [ %96, %for.inc69.i ]
  %indvars.iv129.i = phi i64 [ 0, %for.cond23.preheader.preheader.i ], [ %indvars.iv.next130.i, %for.inc69.i ]
  %cmp24109.not.i = icmp eq i32 %86, 0
  br i1 %cmp24109.not.i, label %for.inc69.i, label %for.cond26.preheader.i

for.cond26.preheader.i:                           ; preds = %write_hex.exit.i65, %for.cond23.preheader.i
  %87 = phi i32 [ %94, %write_hex.exit.i65 ], [ %86, %for.cond23.preheader.i ]
  %j.1110.i = phi i32 [ %inc67.i, %write_hex.exit.i65 ], [ 0, %for.cond23.preheader.i ]
  %88 = load ptr, ptr @logo_data, align 8, !tbaa !5
  %arrayidx30.i = getelementptr inbounds ptr, ptr %88, i64 %indvars.iv129.i
  %89 = load ptr, ptr %arrayidx30.i, align 8, !tbaa !5
  %idxprom31.i = zext i32 %j.1110.i to i64
  %arrayidx32.i = getelementptr inbounds %struct.color, ptr %89, i64 %idxprom31.i
  %arrayidx32.coerce.0.copyload.i = load i24, ptr %arrayidx32.i, align 1
  switch i24 %arrayidx32.coerce.0.copyload.i, label %for.end41.i [
    i24 -1, label %for.end41.fold.split146.i
    i24 -5636096, label %for.end41.fold.split.i
    i24 43520, label %for.end41.fold.split133.i
    i24 -5592576, label %for.end41.fold.split134.i
    i24 170, label %for.end41.fold.split135.i
    i24 -5635926, label %for.end41.fold.split136.i
    i24 21930, label %for.end41.fold.split137.i
    i24 -5592406, label %for.end41.fold.split138.i
    i24 5592405, label %for.end41.fold.split139.i
    i24 -43691, label %for.end41.fold.split140.i
    i24 5635925, label %for.end41.fold.split141.i
    i24 -171, label %for.end41.fold.split142.i
    i24 5592575, label %for.end41.fold.split143.i
    i24 -43521, label %for.end41.fold.split144.i
    i24 5636095, label %for.end41.fold.split145.i
  ]

for.end41.fold.split.i:                           ; preds = %for.cond26.preheader.i
  br label %for.end41.i

for.end41.fold.split133.i:                        ; preds = %for.cond26.preheader.i
  br label %for.end41.i

for.end41.fold.split134.i:                        ; preds = %for.cond26.preheader.i
  br label %for.end41.i

for.end41.fold.split135.i:                        ; preds = %for.cond26.preheader.i
  br label %for.end41.i

for.end41.fold.split136.i:                        ; preds = %for.cond26.preheader.i
  br label %for.end41.i

for.end41.fold.split137.i:                        ; preds = %for.cond26.preheader.i
  br label %for.end41.i

for.end41.fold.split138.i:                        ; preds = %for.cond26.preheader.i
  br label %for.end41.i

for.end41.fold.split139.i:                        ; preds = %for.cond26.preheader.i
  br label %for.end41.i

for.end41.fold.split140.i:                        ; preds = %for.cond26.preheader.i
  br label %for.end41.i

for.end41.fold.split141.i:                        ; preds = %for.cond26.preheader.i
  br label %for.end41.i

for.end41.fold.split142.i:                        ; preds = %for.cond26.preheader.i
  br label %for.end41.i

for.end41.fold.split143.i:                        ; preds = %for.cond26.preheader.i
  br label %for.end41.i

for.end41.fold.split144.i:                        ; preds = %for.cond26.preheader.i
  br label %for.end41.i

for.end41.fold.split145.i:                        ; preds = %for.cond26.preheader.i
  br label %for.end41.i

for.end41.fold.split146.i:                        ; preds = %for.cond26.preheader.i
  br label %for.end41.i

for.end41.i:                                      ; preds = %for.end41.fold.split146.i, %for.end41.fold.split145.i, %for.end41.fold.split144.i, %for.end41.fold.split143.i, %for.end41.fold.split142.i, %for.end41.fold.split141.i, %for.end41.fold.split140.i, %for.end41.fold.split139.i, %for.end41.fold.split138.i, %for.end41.fold.split137.i, %for.end41.fold.split136.i, %for.end41.fold.split135.i, %for.end41.fold.split134.i, %for.end41.fold.split133.i, %for.end41.fold.split.i, %for.cond26.preheader.i
  %k.1.lcssa.i = phi i8 [ 16, %for.end41.fold.split.i ], [ 32, %for.end41.fold.split133.i ], [ 48, %for.end41.fold.split134.i ], [ 64, %for.end41.fold.split135.i ], [ 80, %for.end41.fold.split136.i ], [ 96, %for.end41.fold.split137.i ], [ 112, %for.end41.fold.split138.i ], [ -128, %for.end41.fold.split139.i ], [ -112, %for.end41.fold.split140.i ], [ -96, %for.end41.fold.split141.i ], [ -80, %for.end41.fold.split142.i ], [ -64, %for.end41.fold.split143.i ], [ -48, %for.end41.fold.split144.i ], [ -32, %for.end41.fold.split145.i ], [ -16, %for.end41.fold.split146.i ], [ 0, %for.cond26.preheader.i ]
  %inc42.i = or i32 %j.1110.i, 1
  %cmp43.i = icmp ult i32 %inc42.i, %87
  br i1 %cmp43.i, label %for.cond46.preheader.i, label %if.end65.i

for.cond46.preheader.i:                           ; preds = %for.end41.i
  %idxprom52.i = zext i32 %inc42.i to i64
  %arrayidx53.i = getelementptr inbounds %struct.color, ptr %89, i64 %idxprom52.i
  %arrayidx53.coerce.0.copyload.i = load i24, ptr %arrayidx53.i, align 1
  switch i24 %arrayidx53.coerce.0.copyload.i, label %for.inc60.15.i [
    i24 0, label %for.end62.i
    i24 -5636096, label %for.end62.fold.split.i
    i24 43520, label %for.end62.fold.split147.i
    i24 -5592576, label %for.end62.fold.split148.i
    i24 170, label %for.end62.fold.split149.i
    i24 -5635926, label %for.end62.fold.split150.i
    i24 21930, label %for.end62.fold.split151.i
    i24 -5592406, label %for.end62.fold.split152.i
    i24 5592405, label %for.end62.fold.split153.i
    i24 -43691, label %for.end62.fold.split154.i
    i24 5635925, label %for.end62.fold.split155.i
    i24 -171, label %for.end62.fold.split156.i
    i24 5592575, label %for.end62.fold.split157.i
    i24 -43521, label %for.end62.fold.split158.i
    i24 5636095, label %for.end62.fold.split159.i
    i24 -1, label %for.end62.fold.split160.i
  ]

for.inc60.15.i:                                   ; preds = %for.cond46.preheader.i
  br label %for.end62.i

for.end62.fold.split.i:                           ; preds = %for.cond46.preheader.i
  br label %for.end62.i

for.end62.fold.split147.i:                        ; preds = %for.cond46.preheader.i
  br label %for.end62.i

for.end62.fold.split148.i:                        ; preds = %for.cond46.preheader.i
  br label %for.end62.i

for.end62.fold.split149.i:                        ; preds = %for.cond46.preheader.i
  br label %for.end62.i

for.end62.fold.split150.i:                        ; preds = %for.cond46.preheader.i
  br label %for.end62.i

for.end62.fold.split151.i:                        ; preds = %for.cond46.preheader.i
  br label %for.end62.i

for.end62.fold.split152.i:                        ; preds = %for.cond46.preheader.i
  br label %for.end62.i

for.end62.fold.split153.i:                        ; preds = %for.cond46.preheader.i
  br label %for.end62.i

for.end62.fold.split154.i:                        ; preds = %for.cond46.preheader.i
  br label %for.end62.i

for.end62.fold.split155.i:                        ; preds = %for.cond46.preheader.i
  br label %for.end62.i

for.end62.fold.split156.i:                        ; preds = %for.cond46.preheader.i
  br label %for.end62.i

for.end62.fold.split157.i:                        ; preds = %for.cond46.preheader.i
  br label %for.end62.i

for.end62.fold.split158.i:                        ; preds = %for.cond46.preheader.i
  br label %for.end62.i

for.end62.fold.split159.i:                        ; preds = %for.cond46.preheader.i
  br label %for.end62.i

for.end62.fold.split160.i:                        ; preds = %for.cond46.preheader.i
  br label %for.end62.i

for.end62.i:                                      ; preds = %for.end62.fold.split160.i, %for.end62.fold.split159.i, %for.end62.fold.split158.i, %for.end62.fold.split157.i, %for.end62.fold.split156.i, %for.end62.fold.split155.i, %for.end62.fold.split154.i, %for.end62.fold.split153.i, %for.end62.fold.split152.i, %for.end62.fold.split151.i, %for.end62.fold.split150.i, %for.end62.fold.split149.i, %for.end62.fold.split148.i, %for.end62.fold.split147.i, %for.end62.fold.split.i, %for.inc60.15.i, %for.cond46.preheader.i
  %k.2.lcssa.i = phi i8 [ 0, %for.cond46.preheader.i ], [ 16, %for.inc60.15.i ], [ 1, %for.end62.fold.split.i ], [ 2, %for.end62.fold.split147.i ], [ 3, %for.end62.fold.split148.i ], [ 4, %for.end62.fold.split149.i ], [ 5, %for.end62.fold.split150.i ], [ 6, %for.end62.fold.split151.i ], [ 7, %for.end62.fold.split152.i ], [ 8, %for.end62.fold.split153.i ], [ 9, %for.end62.fold.split154.i ], [ 10, %for.end62.fold.split155.i ], [ 11, %for.end62.fold.split156.i ], [ 12, %for.end62.fold.split157.i ], [ 13, %for.end62.fold.split158.i ], [ 14, %for.end62.fold.split159.i ], [ 15, %for.end62.fold.split160.i ]
  %conv64.i = or i8 %k.2.lcssa.i, %k.1.lcssa.i
  br label %if.end65.i

if.end65.i:                                       ; preds = %for.end62.i, %for.end41.i
  %val.0.i = phi i8 [ %conv64.i, %for.end62.i ], [ %k.1.lcssa.i, %for.end41.i ]
  %90 = load i32, ptr @write_hex_cnt, align 4, !tbaa !9
  %rem.i.i52 = srem i32 %90, 12
  %tobool.not.i.i53 = icmp eq i32 %rem.i.i52, 0
  br i1 %tobool.not.i.i53, label %if.else.i.i59, label %if.then.i.i56

if.then.i.i56:                                    ; preds = %if.end65.i
  %91 = load ptr, ptr @out, align 8, !tbaa !5
  %conv.i.i54 = zext i8 %val.0.i to i32
  %call.i.i55 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %91, ptr noundef nonnull @.str.24, i32 noundef %conv.i.i54) #13
  br label %write_hex.exit.i65

if.else.i.i59:                                    ; preds = %if.end65.i
  %tobool1.not.i.i57 = icmp eq i32 %90, 0
  %92 = load ptr, ptr @out, align 8, !tbaa !5
  %conv6.i.i58 = zext i8 %val.0.i to i32
  br i1 %tobool1.not.i.i57, label %if.else5.i.i63, label %if.then2.i.i61

if.then2.i.i61:                                   ; preds = %if.else.i.i59
  %call4.i.i60 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %92, ptr noundef nonnull @.str.25, i32 noundef %conv6.i.i58) #13
  br label %write_hex.exit.i65

if.else5.i.i63:                                   ; preds = %if.else.i.i59
  %call7.i.i62 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %92, ptr noundef nonnull @.str.26, i32 noundef %conv6.i.i58) #13
  br label %write_hex.exit.i65

write_hex.exit.i65:                               ; preds = %if.else5.i.i63, %if.then2.i.i61, %if.then.i.i56
  %93 = load i32, ptr @write_hex_cnt, align 4, !tbaa !9
  %inc.i.i64 = add nsw i32 %93, 1
  store i32 %inc.i.i64, ptr @write_hex_cnt, align 4, !tbaa !9
  %inc67.i = add i32 %j.1110.i, 2
  %94 = load i32, ptr @logo_width, align 4, !tbaa !9
  %cmp24.i = icmp ult i32 %inc67.i, %94
  br i1 %cmp24.i, label %for.cond26.preheader.i, label %for.inc69.loopexit.i

for.inc69.loopexit.i:                             ; preds = %write_hex.exit.i65
  %.pre132.i = load i32, ptr @logo_height, align 4, !tbaa !9
  br label %for.inc69.i

for.inc69.i:                                      ; preds = %for.inc69.loopexit.i, %for.cond23.preheader.i
  %95 = phi i32 [ %.pre132.i, %for.inc69.loopexit.i ], [ %85, %for.cond23.preheader.i ]
  %96 = phi i32 [ %94, %for.inc69.loopexit.i ], [ 0, %for.cond23.preheader.i ]
  %indvars.iv.next130.i = add nuw nsw i64 %indvars.iv129.i, 1
  %97 = zext i32 %95 to i64
  %cmp21.i = icmp ult i64 %indvars.iv.next130.i, %97
  br i1 %cmp21.i, label %for.cond23.preheader.i, label %sw.epilog30.sink.split

sw.bb28:                                          ; preds = %read_image.exit
  %98 = load i32, ptr @logo_height, align 4, !tbaa !9
  %cmp158.not.i = icmp eq i32 %98, 0
  br i1 %cmp158.not.i, label %for.end29.i, label %for.cond1.preheader.lr.ph.i66

for.cond1.preheader.lr.ph.i66:                    ; preds = %sw.bb28
  %logo_clutsize.promoted153.i = load i32, ptr @logo_clutsize, align 4, !tbaa !9
  %99 = load i32, ptr @logo_width, align 4, !tbaa !9
  %cmp2147.not.i = icmp eq i32 %99, 0
  %100 = load ptr, ptr @logo_data, align 8
  %wide.trip.count183.i = zext i32 %98 to i64
  %wide.trip.count178.i = zext i32 %99 to i64
  br label %for.cond1.preheader.i67

for.cond1.preheader.i67:                          ; preds = %for.inc27.i, %for.cond1.preheader.lr.ph.i66
  %indvars.iv180.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i66 ], [ %indvars.iv.next181.i, %for.inc27.i ]
  %logo_clutsize.promoted157159.i = phi i32 [ %logo_clutsize.promoted153.i, %for.cond1.preheader.lr.ph.i66 ], [ %logo_clutsize.promoted154.i, %for.inc27.i ]
  br i1 %cmp2147.not.i, label %for.inc27.i, label %for.cond4.preheader.lr.ph.i69

for.cond4.preheader.lr.ph.i69:                    ; preds = %for.cond1.preheader.i67
  %arrayidx.i68 = getelementptr inbounds ptr, ptr %100, i64 %indvars.iv180.i
  br label %for.cond4.preheader.i70

for.cond4.preheader.i70:                          ; preds = %for.inc24.i, %for.cond4.preheader.lr.ph.i69
  %indvars.iv175.i = phi i64 [ 0, %for.cond4.preheader.lr.ph.i69 ], [ %indvars.iv.next176.i, %for.inc24.i ]
  %logo_clutsize.promoted156.i = phi i32 [ %logo_clutsize.promoted157159.i, %for.cond4.preheader.lr.ph.i69 ], [ %logo_clutsize.promoted155.i, %for.inc24.i ]
  %inc16146148.i = phi i32 [ %logo_clutsize.promoted157159.i, %for.cond4.preheader.lr.ph.i69 ], [ %inc16145.i, %for.inc24.i ]
  %cmp5140.not.i = icmp eq i32 %inc16146148.i, 0
  br i1 %cmp5140.not.i, label %for.end.i78, label %for.body6.lr.ph.i

for.body6.lr.ph.i:                                ; preds = %for.cond4.preheader.i70
  %101 = load ptr, ptr %arrayidx.i68, align 8, !tbaa !5
  %arrayidx8.i71 = getelementptr inbounds %struct.color, ptr %101, i64 %indvars.iv175.i
  %arrayidx8.coerce.0.copyload.i72 = load i24, ptr %arrayidx8.i71, align 1
  %wide.trip.count.i73 = zext i32 %inc16146148.i to i64
  br label %for.body6.i

for.body6.i:                                      ; preds = %for.inc.i77, %for.body6.lr.ph.i
  %indvars.iv.i74 = phi i64 [ 0, %for.body6.lr.ph.i ], [ %indvars.iv.next.i75, %for.inc.i77 ]
  %arrayidx10.i = getelementptr inbounds [224 x %struct.color], ptr @logo_clut, i64 0, i64 %indvars.iv.i74
  %arrayidx10.coerce.0.copyload.i = load i24, ptr %arrayidx10.i, align 1
  %.not139.i = icmp eq i24 %arrayidx8.coerce.0.copyload.i72, %arrayidx10.coerce.0.copyload.i
  br i1 %.not139.i, label %for.end.loopexit.i, label %for.inc.i77

for.inc.i77:                                      ; preds = %for.body6.i
  %indvars.iv.next.i75 = add nuw nsw i64 %indvars.iv.i74, 1
  %exitcond.not.i76 = icmp eq i64 %indvars.iv.next.i75, %wide.trip.count.i73
  br i1 %exitcond.not.i76, label %if.then12.i79, label %for.body6.i

for.end.loopexit.i:                               ; preds = %for.body6.i
  %102 = trunc i64 %indvars.iv.i74 to i32
  br label %for.end.i78

for.end.i78:                                      ; preds = %for.end.loopexit.i, %for.cond4.preheader.i70
  %k.0.lcssa.i = phi i32 [ 0, %for.cond4.preheader.i70 ], [ %102, %for.end.loopexit.i ]
  %cmp11.i = icmp eq i32 %k.0.lcssa.i, %inc16146148.i
  br i1 %cmp11.i, label %if.then12.i79, label %for.inc24.i

if.then12.i79:                                    ; preds = %for.end.i78, %for.inc.i77
  %cmp13.i = icmp eq i32 %inc16146148.i, 224
  br i1 %cmp13.i, label %if.then14.i, label %if.end15.i

if.then14.i:                                      ; preds = %if.then12.i79
  tail call void (ptr, ...) @die(ptr noundef nonnull @.str.41, i32 noundef 224) #17
  unreachable

if.end15.i:                                       ; preds = %if.then12.i79
  %inc16.i = add i32 %inc16146148.i, 1
  store i32 %inc16.i, ptr @logo_clutsize, align 4, !tbaa !9
  %idxprom17.i = zext i32 %inc16146148.i to i64
  %arrayidx18.i = getelementptr inbounds [224 x %struct.color], ptr @logo_clut, i64 0, i64 %idxprom17.i
  %103 = load ptr, ptr %arrayidx.i68, align 8, !tbaa !5
  %arrayidx22.i = getelementptr inbounds %struct.color, ptr %103, i64 %indvars.iv175.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(3) %arrayidx18.i, ptr noundef nonnull align 1 dereferenceable(3) %arrayidx22.i, i64 3, i1 false) #13, !tbaa.struct !15
  br label %for.inc24.i

for.inc24.i:                                      ; preds = %if.end15.i, %for.end.i78
  %logo_clutsize.promoted155.i = phi i32 [ %logo_clutsize.promoted156.i, %for.end.i78 ], [ %inc16.i, %if.end15.i ]
  %inc16145.i = phi i32 [ %inc16146148.i, %for.end.i78 ], [ %inc16.i, %if.end15.i ]
  %indvars.iv.next176.i = add nuw nsw i64 %indvars.iv175.i, 1
  %exitcond179.not.i = icmp eq i64 %indvars.iv.next176.i, %wide.trip.count178.i
  br i1 %exitcond179.not.i, label %for.inc27.i, label %for.cond4.preheader.i70

for.inc27.i:                                      ; preds = %for.inc24.i, %for.cond1.preheader.i67
  %logo_clutsize.promoted154.i = phi i32 [ %logo_clutsize.promoted157159.i, %for.cond1.preheader.i67 ], [ %logo_clutsize.promoted155.i, %for.inc24.i ]
  %indvars.iv.next181.i = add nuw nsw i64 %indvars.iv180.i, 1
  %exitcond184.not.i = icmp eq i64 %indvars.iv.next181.i, %wide.trip.count183.i
  br i1 %exitcond184.not.i, label %for.end29.i, label %for.cond1.preheader.i67

for.end29.i:                                      ; preds = %for.inc27.i, %sw.bb28
  tail call fastcc void @write_header() #13
  %104 = load i32, ptr @logo_height, align 4, !tbaa !9
  %cmp31169.not.i = icmp eq i32 %104, 0
  br i1 %cmp31169.not.i, label %for.end57.i, label %for.cond33.preheader.preheader.i81

for.cond33.preheader.preheader.i81:               ; preds = %for.end29.i
  %.pre.i80 = load i32, ptr @logo_width, align 4, !tbaa !9
  br label %for.cond33.preheader.i82

for.cond33.preheader.i82:                         ; preds = %for.inc55.i102, %for.cond33.preheader.preheader.i81
  %105 = phi i32 [ %104, %for.cond33.preheader.preheader.i81 ], [ %118, %for.inc55.i102 ]
  %106 = phi i32 [ %.pre.i80, %for.cond33.preheader.preheader.i81 ], [ %119, %for.inc55.i102 ]
  %indvars.iv193.i = phi i64 [ 0, %for.cond33.preheader.preheader.i81 ], [ %indvars.iv.next194.i, %for.inc55.i102 ]
  %cmp34166.not.i = icmp eq i32 %106, 0
  br i1 %cmp34166.not.i, label %for.inc55.i102, label %for.cond36.preheader.i

for.cond36.preheader.i:                           ; preds = %write_hex.exit.i100, %for.cond33.preheader.i82
  %indvars.iv190.i = phi i64 [ %indvars.iv.next191.i, %write_hex.exit.i100 ], [ 0, %for.cond33.preheader.i82 ]
  %107 = load i32, ptr @logo_clutsize, align 4, !tbaa !9
  %cmp37162.not.i = icmp eq i32 %107, 0
  br i1 %cmp37162.not.i, label %for.end51.i, label %for.body38.lr.ph.i

for.body38.lr.ph.i:                               ; preds = %for.cond36.preheader.i
  %108 = load ptr, ptr @logo_data, align 8, !tbaa !5
  %arrayidx40.i = getelementptr inbounds ptr, ptr %108, i64 %indvars.iv193.i
  %109 = load ptr, ptr %arrayidx40.i, align 8, !tbaa !5
  %arrayidx42.i = getelementptr inbounds %struct.color, ptr %109, i64 %indvars.iv190.i
  %arrayidx42.coerce.0.copyload.i = load i24, ptr %arrayidx42.i, align 1
  %wide.trip.count188.i = zext i32 %107 to i64
  br label %for.body38.i

for.body38.i:                                     ; preds = %for.inc49.i, %for.body38.lr.ph.i
  %indvars.iv185.i = phi i64 [ 0, %for.body38.lr.ph.i ], [ %indvars.iv.next186.i, %for.inc49.i ]
  %arrayidx44.i = getelementptr inbounds [224 x %struct.color], ptr @logo_clut, i64 0, i64 %indvars.iv185.i
  %arrayidx44.coerce.0.copyload.i = load i24, ptr %arrayidx44.i, align 1
  %.not.i83 = icmp eq i24 %arrayidx42.coerce.0.copyload.i, %arrayidx44.coerce.0.copyload.i
  br i1 %.not.i83, label %for.end51.loopexit.split.loop.exit.i, label %for.inc49.i

for.inc49.i:                                      ; preds = %for.body38.i
  %indvars.iv.next186.i = add nuw nsw i64 %indvars.iv185.i, 1
  %exitcond189.not.i = icmp eq i64 %indvars.iv.next186.i, %wide.trip.count188.i
  br i1 %exitcond189.not.i, label %for.end51.i, label %for.body38.i

for.end51.loopexit.split.loop.exit.i:             ; preds = %for.body38.i
  %110 = trunc i64 %indvars.iv185.i to i32
  br label %for.end51.i

for.end51.i:                                      ; preds = %for.end51.loopexit.split.loop.exit.i, %for.inc49.i, %for.cond36.preheader.i
  %k.1.lcssa.i84 = phi i32 [ 0, %for.cond36.preheader.i ], [ %110, %for.end51.loopexit.split.loop.exit.i ], [ %107, %for.inc49.i ]
  %111 = trunc i32 %k.1.lcssa.i84 to i8
  %conv.i85 = add i8 %111, 32
  %112 = load i32, ptr @write_hex_cnt, align 4, !tbaa !9
  %rem.i.i86 = srem i32 %112, 12
  %tobool.not.i.i87 = icmp eq i32 %rem.i.i86, 0
  br i1 %tobool.not.i.i87, label %if.else.i.i93, label %if.then.i.i90

if.then.i.i90:                                    ; preds = %for.end51.i
  %113 = load ptr, ptr @out, align 8, !tbaa !5
  %conv.i.i88 = zext i8 %conv.i85 to i32
  %call.i.i89 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %113, ptr noundef nonnull @.str.24, i32 noundef %conv.i.i88) #13
  br label %write_hex.exit.i100

if.else.i.i93:                                    ; preds = %for.end51.i
  %tobool1.not.i.i91 = icmp eq i32 %112, 0
  %114 = load ptr, ptr @out, align 8, !tbaa !5
  %conv6.i.i92 = zext i8 %conv.i85 to i32
  br i1 %tobool1.not.i.i91, label %if.else5.i.i97, label %if.then2.i.i95

if.then2.i.i95:                                   ; preds = %if.else.i.i93
  %call4.i.i94 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %114, ptr noundef nonnull @.str.25, i32 noundef %conv6.i.i92) #13
  br label %write_hex.exit.i100

if.else5.i.i97:                                   ; preds = %if.else.i.i93
  %call7.i.i96 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %114, ptr noundef nonnull @.str.26, i32 noundef %conv6.i.i92) #13
  br label %write_hex.exit.i100

write_hex.exit.i100:                              ; preds = %if.else5.i.i97, %if.then2.i.i95, %if.then.i.i90
  %115 = load i32, ptr @write_hex_cnt, align 4, !tbaa !9
  %inc.i.i98 = add nsw i32 %115, 1
  store i32 %inc.i.i98, ptr @write_hex_cnt, align 4, !tbaa !9
  %indvars.iv.next191.i = add nuw nsw i64 %indvars.iv190.i, 1
  %116 = load i32, ptr @logo_width, align 4, !tbaa !9
  %117 = zext i32 %116 to i64
  %cmp34.i99 = icmp ult i64 %indvars.iv.next191.i, %117
  br i1 %cmp34.i99, label %for.cond36.preheader.i, label %for.inc55.loopexit.i101

for.inc55.loopexit.i101:                          ; preds = %write_hex.exit.i100
  %.pre199.i = load i32, ptr @logo_height, align 4, !tbaa !9
  br label %for.inc55.i102

for.inc55.i102:                                   ; preds = %for.inc55.loopexit.i101, %for.cond33.preheader.i82
  %118 = phi i32 [ %.pre199.i, %for.inc55.loopexit.i101 ], [ %105, %for.cond33.preheader.i82 ]
  %119 = phi i32 [ %116, %for.inc55.loopexit.i101 ], [ 0, %for.cond33.preheader.i82 ]
  %indvars.iv.next194.i = add nuw nsw i64 %indvars.iv193.i, 1
  %120 = zext i32 %118 to i64
  %cmp31.i = icmp ult i64 %indvars.iv.next194.i, %120
  br i1 %cmp31.i, label %for.cond33.preheader.i82, label %for.end57.i

for.end57.i:                                      ; preds = %for.inc55.i102, %for.end29.i
  %121 = load ptr, ptr @out, align 8, !tbaa !5
  %122 = tail call i64 @fwrite(ptr nonnull @.str.27, i64 5, i64 1, ptr %121) #13
  %123 = load ptr, ptr @out, align 8, !tbaa !5
  %124 = load ptr, ptr @logoname, align 8, !tbaa !5
  %call59.i103 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %123, ptr noundef nonnull @.str.42, ptr noundef %124) #13
  store i32 0, ptr @write_hex_cnt, align 4, !tbaa !9
  %125 = load i32, ptr @logo_clutsize, align 4, !tbaa !9
  %cmp61172.not.i = icmp eq i32 %125, 0
  br i1 %cmp61172.not.i, label %sw.epilog30.sink.split, label %for.body63.i

for.body63.i:                                     ; preds = %write_hex.exit138.i, %for.end57.i
  %126 = phi i32 [ %inc.i137.i, %write_hex.exit138.i ], [ 0, %for.end57.i ]
  %indvars.iv196.i = phi i64 [ %indvars.iv.next197.i, %write_hex.exit138.i ], [ 0, %for.end57.i ]
  %arrayidx65.i = getelementptr inbounds [224 x %struct.color], ptr @logo_clut, i64 0, i64 %indvars.iv196.i
  %127 = load i8, ptr %arrayidx65.i, align 1, !tbaa !14
  %rem.i97.i = srem i32 %126, 12
  %tobool.not.i98.i = icmp eq i32 %rem.i97.i, 0
  br i1 %tobool.not.i98.i, label %if.else.i104.i, label %if.then.i101.i

if.then.i101.i:                                   ; preds = %for.body63.i
  %128 = load ptr, ptr @out, align 8, !tbaa !5
  %conv.i99.i = zext i8 %127 to i32
  %call.i100.i = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %128, ptr noundef nonnull @.str.24, i32 noundef %conv.i99.i) #13
  br label %write_hex.exit110.i

if.else.i104.i:                                   ; preds = %for.body63.i
  %tobool1.not.i102.i = icmp eq i32 %126, 0
  %129 = load ptr, ptr @out, align 8, !tbaa !5
  %conv6.i103.i = zext i8 %127 to i32
  br i1 %tobool1.not.i102.i, label %if.else5.i108.i, label %if.then2.i106.i

if.then2.i106.i:                                  ; preds = %if.else.i104.i
  %call4.i105.i = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %129, ptr noundef nonnull @.str.25, i32 noundef %conv6.i103.i) #13
  br label %write_hex.exit110.i

if.else5.i108.i:                                  ; preds = %if.else.i104.i
  %call7.i107.i = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %129, ptr noundef nonnull @.str.26, i32 noundef %conv6.i103.i) #13
  br label %write_hex.exit110.i

write_hex.exit110.i:                              ; preds = %if.else5.i108.i, %if.then2.i106.i, %if.then.i101.i
  %130 = load i32, ptr @write_hex_cnt, align 4, !tbaa !9
  %inc.i109.i = add nsw i32 %130, 1
  store i32 %inc.i109.i, ptr @write_hex_cnt, align 4, !tbaa !9
  %green.i104 = getelementptr inbounds [224 x %struct.color], ptr @logo_clut, i64 0, i64 %indvars.iv196.i, i32 1
  %131 = load i8, ptr %green.i104, align 1, !tbaa !13
  %rem.i111.i = srem i32 %inc.i109.i, 12
  %tobool.not.i112.i = icmp eq i32 %rem.i111.i, 0
  br i1 %tobool.not.i112.i, label %if.else.i118.i, label %if.then.i115.i

if.then.i115.i:                                   ; preds = %write_hex.exit110.i
  %132 = load ptr, ptr @out, align 8, !tbaa !5
  %conv.i113.i = zext i8 %131 to i32
  %call.i114.i = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %132, ptr noundef nonnull @.str.24, i32 noundef %conv.i113.i) #13
  br label %write_hex.exit124.i

if.else.i118.i:                                   ; preds = %write_hex.exit110.i
  %tobool1.not.i116.i = icmp eq i32 %inc.i109.i, 0
  %133 = load ptr, ptr @out, align 8, !tbaa !5
  %conv6.i117.i = zext i8 %131 to i32
  br i1 %tobool1.not.i116.i, label %if.else5.i122.i, label %if.then2.i120.i

if.then2.i120.i:                                  ; preds = %if.else.i118.i
  %call4.i119.i = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %133, ptr noundef nonnull @.str.25, i32 noundef %conv6.i117.i) #13
  br label %write_hex.exit124.i

if.else5.i122.i:                                  ; preds = %if.else.i118.i
  %call7.i121.i = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %133, ptr noundef nonnull @.str.26, i32 noundef %conv6.i117.i) #13
  br label %write_hex.exit124.i

write_hex.exit124.i:                              ; preds = %if.else5.i122.i, %if.then2.i120.i, %if.then.i115.i
  %134 = load i32, ptr @write_hex_cnt, align 4, !tbaa !9
  %inc.i123.i = add nsw i32 %134, 1
  store i32 %inc.i123.i, ptr @write_hex_cnt, align 4, !tbaa !9
  %blue.i105 = getelementptr inbounds [224 x %struct.color], ptr @logo_clut, i64 0, i64 %indvars.iv196.i, i32 2
  %135 = load i8, ptr %blue.i105, align 1, !tbaa !11
  %rem.i125.i = srem i32 %inc.i123.i, 12
  %tobool.not.i126.i = icmp eq i32 %rem.i125.i, 0
  br i1 %tobool.not.i126.i, label %if.else.i132.i, label %if.then.i129.i

if.then.i129.i:                                   ; preds = %write_hex.exit124.i
  %136 = load ptr, ptr @out, align 8, !tbaa !5
  %conv.i127.i = zext i8 %135 to i32
  %call.i128.i = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %136, ptr noundef nonnull @.str.24, i32 noundef %conv.i127.i) #13
  br label %write_hex.exit138.i

if.else.i132.i:                                   ; preds = %write_hex.exit124.i
  %tobool1.not.i130.i = icmp eq i32 %inc.i123.i, 0
  %137 = load ptr, ptr @out, align 8, !tbaa !5
  %conv6.i131.i = zext i8 %135 to i32
  br i1 %tobool1.not.i130.i, label %if.else5.i136.i, label %if.then2.i134.i

if.then2.i134.i:                                  ; preds = %if.else.i132.i
  %call4.i133.i = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %137, ptr noundef nonnull @.str.25, i32 noundef %conv6.i131.i) #13
  br label %write_hex.exit138.i

if.else5.i136.i:                                  ; preds = %if.else.i132.i
  %call7.i135.i = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %137, ptr noundef nonnull @.str.26, i32 noundef %conv6.i131.i) #13
  br label %write_hex.exit138.i

write_hex.exit138.i:                              ; preds = %if.else5.i136.i, %if.then2.i134.i, %if.then.i129.i
  %138 = load i32, ptr @write_hex_cnt, align 4, !tbaa !9
  %inc.i137.i = add nsw i32 %138, 1
  store i32 %inc.i137.i, ptr @write_hex_cnt, align 4, !tbaa !9
  %indvars.iv.next197.i = add nuw nsw i64 %indvars.iv196.i, 1
  %139 = load i32, ptr @logo_clutsize, align 4, !tbaa !9
  %140 = zext i32 %139 to i64
  %cmp61.i106 = icmp ult i64 %indvars.iv.next197.i, %140
  br i1 %cmp61.i106, label %for.body63.i, label %sw.epilog30.sink.split

sw.bb29:                                          ; preds = %read_image.exit
  %141 = load i32, ptr @logo_height, align 4, !tbaa !9
  %cmp37.not.i = icmp eq i32 %141, 0
  br i1 %cmp37.not.i, label %for.end8.i, label %for.cond1.preheader.lr.ph.i108

for.cond1.preheader.lr.ph.i108:                   ; preds = %sw.bb29
  %142 = load i32, ptr @logo_width, align 4, !tbaa !9
  %cmp235.not.i = icmp eq i32 %142, 0
  %143 = load ptr, ptr @logo_data, align 8
  %wide.trip.count49.i = zext i32 %141 to i64
  %wide.trip.count.i107 = zext i32 %142 to i64
  br label %for.cond1.preheader.i109

for.cond1.preheader.i109:                         ; preds = %for.inc6.i, %for.cond1.preheader.lr.ph.i108
  %indvars.iv46.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i108 ], [ %indvars.iv.next47.i, %for.inc6.i ]
  br i1 %cmp235.not.i, label %for.inc6.i, label %for.body3.lr.ph.i111

for.body3.lr.ph.i111:                             ; preds = %for.cond1.preheader.i109
  %arrayidx.i110 = getelementptr inbounds ptr, ptr %143, i64 %indvars.iv46.i
  %144 = load ptr, ptr %arrayidx.i110, align 8, !tbaa !5
  br label %for.body3.i119

for.cond1.i:                                      ; preds = %for.body3.i119
  %indvars.iv.next.i112 = add nuw nsw i64 %indvars.iv.i114, 1
  %exitcond.not.i113 = icmp eq i64 %indvars.iv.next.i112, %wide.trip.count.i107
  br i1 %exitcond.not.i113, label %for.inc6.i, label %for.body3.i119

for.body3.i119:                                   ; preds = %for.cond1.i, %for.body3.lr.ph.i111
  %indvars.iv.i114 = phi i64 [ 0, %for.body3.lr.ph.i111 ], [ %indvars.iv.next.i112, %for.cond1.i ]
  %arrayidx5.i115 = getelementptr inbounds %struct.color, ptr %144, i64 %indvars.iv.i114
  %arrayidx5.coerce.0.copyload.i116 = load i24, ptr %arrayidx5.i115, align 1
  %c.sroa.3.0.extract.shift.i.i = lshr i24 %arrayidx5.coerce.0.copyload.i116, 8
  %c.sroa.4.0.extract.shift.i.i = lshr i24 %arrayidx5.coerce.0.copyload.i116, 16
  %145 = and i24 %arrayidx5.coerce.0.copyload.i116, 255
  %146 = and i24 %c.sroa.3.0.extract.shift.i.i, 255
  %cmp.i.i = icmp ne i24 %145, %146
  %cmp6.i.i117 = icmp ne i24 %145, %c.sroa.4.0.extract.shift.i.i
  %tobool.not.i118 = or i1 %cmp6.i.i117, %cmp.i.i
  br i1 %tobool.not.i118, label %if.then.i120, label %for.cond1.i

if.then.i120:                                     ; preds = %for.body3.i119
  tail call void (ptr, ...) @die(ptr noundef nonnull @.str.43) #17
  unreachable

for.inc6.i:                                       ; preds = %for.cond1.i, %for.cond1.preheader.i109
  %indvars.iv.next47.i = add nuw nsw i64 %indvars.iv46.i, 1
  %exitcond50.not.i = icmp eq i64 %indvars.iv.next47.i, %wide.trip.count49.i
  br i1 %exitcond50.not.i, label %for.end8.i, label %for.cond1.preheader.i109

for.end8.i:                                       ; preds = %for.inc6.i, %sw.bb29
  tail call fastcc void @write_header() #13
  %147 = load i32, ptr @logo_height, align 4, !tbaa !9
  %cmp1042.not.i = icmp eq i32 %147, 0
  br i1 %cmp1042.not.i, label %sw.epilog30.sink.split, label %for.cond12.preheader.preheader.i

for.cond12.preheader.preheader.i:                 ; preds = %for.end8.i
  %.pre.i121 = load i32, ptr @logo_width, align 4, !tbaa !9
  br label %for.cond12.preheader.i

for.cond12.preheader.i:                           ; preds = %for.inc22.i, %for.cond12.preheader.preheader.i
  %148 = phi i32 [ %147, %for.cond12.preheader.preheader.i ], [ %159, %for.inc22.i ]
  %149 = phi i32 [ %.pre.i121, %for.cond12.preheader.preheader.i ], [ %160, %for.inc22.i ]
  %indvars.iv54.i = phi i64 [ 0, %for.cond12.preheader.preheader.i ], [ %indvars.iv.next55.i, %for.inc22.i ]
  %cmp1340.not.i = icmp eq i32 %149, 0
  br i1 %cmp1340.not.i, label %for.inc22.i, label %for.body14.lr.ph.i

for.body14.lr.ph.i:                               ; preds = %for.cond12.preheader.i
  %.pre57.i = load i32, ptr @write_hex_cnt, align 4, !tbaa !9
  br label %for.body14.i

for.body14.i:                                     ; preds = %write_hex.exit.i137, %for.body14.lr.ph.i
  %150 = phi i32 [ %.pre57.i, %for.body14.lr.ph.i ], [ %inc.i.i135, %write_hex.exit.i137 ]
  %indvars.iv51.i = phi i64 [ 0, %for.body14.lr.ph.i ], [ %indvars.iv.next52.i, %write_hex.exit.i137 ]
  %151 = load ptr, ptr @logo_data, align 8, !tbaa !5
  %arrayidx16.i = getelementptr inbounds ptr, ptr %151, i64 %indvars.iv54.i
  %152 = load ptr, ptr %arrayidx16.i, align 8, !tbaa !5
  %arrayidx18.i122 = getelementptr inbounds %struct.color, ptr %152, i64 %indvars.iv51.i
  %153 = load i8, ptr %arrayidx18.i122, align 1, !tbaa !14
  %rem.i.i123 = srem i32 %150, 12
  %tobool.not.i.i124 = icmp eq i32 %rem.i.i123, 0
  br i1 %tobool.not.i.i124, label %if.else.i.i130, label %if.then.i.i127

if.then.i.i127:                                   ; preds = %for.body14.i
  %154 = load ptr, ptr @out, align 8, !tbaa !5
  %conv.i.i125 = zext i8 %153 to i32
  %call.i.i126 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %154, ptr noundef nonnull @.str.24, i32 noundef %conv.i.i125) #13
  br label %write_hex.exit.i137

if.else.i.i130:                                   ; preds = %for.body14.i
  %tobool1.not.i.i128 = icmp eq i32 %150, 0
  %155 = load ptr, ptr @out, align 8, !tbaa !5
  %conv6.i.i129 = zext i8 %153 to i32
  br i1 %tobool1.not.i.i128, label %if.else5.i.i134, label %if.then2.i.i132

if.then2.i.i132:                                  ; preds = %if.else.i.i130
  %call4.i.i131 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %155, ptr noundef nonnull @.str.25, i32 noundef %conv6.i.i129) #13
  br label %write_hex.exit.i137

if.else5.i.i134:                                  ; preds = %if.else.i.i130
  %call7.i.i133 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %155, ptr noundef nonnull @.str.26, i32 noundef %conv6.i.i129) #13
  br label %write_hex.exit.i137

write_hex.exit.i137:                              ; preds = %if.else5.i.i134, %if.then2.i.i132, %if.then.i.i127
  %156 = load i32, ptr @write_hex_cnt, align 4, !tbaa !9
  %inc.i.i135 = add nsw i32 %156, 1
  store i32 %inc.i.i135, ptr @write_hex_cnt, align 4, !tbaa !9
  %indvars.iv.next52.i = add nuw nsw i64 %indvars.iv51.i, 1
  %157 = load i32, ptr @logo_width, align 4, !tbaa !9
  %158 = zext i32 %157 to i64
  %cmp13.i136 = icmp ult i64 %indvars.iv.next52.i, %158
  br i1 %cmp13.i136, label %for.body14.i, label %for.inc22.loopexit.i

for.inc22.loopexit.i:                             ; preds = %write_hex.exit.i137
  %.pre58.i = load i32, ptr @logo_height, align 4, !tbaa !9
  br label %for.inc22.i

for.inc22.i:                                      ; preds = %for.inc22.loopexit.i, %for.cond12.preheader.i
  %159 = phi i32 [ %.pre58.i, %for.inc22.loopexit.i ], [ %148, %for.cond12.preheader.i ]
  %160 = phi i32 [ %157, %for.inc22.loopexit.i ], [ 0, %for.cond12.preheader.i ]
  %indvars.iv.next55.i = add nuw nsw i64 %indvars.iv54.i, 1
  %161 = zext i32 %159 to i64
  %cmp10.i = icmp ult i64 %indvars.iv.next55.i, %161
  br i1 %cmp10.i, label %for.cond12.preheader.i, label %sw.epilog30.sink.split

sw.epilog30.sink.split:                           ; preds = %for.inc22.i, %for.end8.i, %write_hex.exit138.i, %for.end57.i, %for.inc69.i, %for.end19.i, %for.inc42.i, %for.end14.i
  tail call fastcc void @write_footer() #13
  br label %sw.epilog30

sw.epilog30:                                      ; preds = %sw.epilog30.sink.split, %read_image.exit
  tail call void @exit(i32 noundef 0) #17
  unreachable
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind
declare i32 @getopt(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @usage() unnamed_addr #0 {
entry:
  %0 = load ptr, ptr @programname, align 8, !tbaa !5
  tail call void (ptr, ...) @die(ptr noundef nonnull @.str.5, ptr noundef %0) #14
  unreachable
}

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @exit(i32 noundef) local_unnamed_addr #4

; Function Attrs: noreturn nounwind uwtable
define internal void @die(ptr nocapture noundef readonly %fmt, ...) unnamed_addr #0 {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %ap) #13
  call void @llvm.va_start(ptr nonnull %ap)
  %0 = load ptr, ptr @stderr, align 8, !tbaa !5
  %call = call i32 @vfprintf(ptr noundef %0, ptr noundef %fmt, ptr noundef nonnull %ap) #19
  call void @llvm.va_end(ptr nonnull %ap)
  call void @exit(i32 noundef 1) #17
  unreachable
}

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_start(ptr) #5

; Function Attrs: nofree nounwind
declare noundef i32 @vfprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ptr noundef) local_unnamed_addr #6

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_end(ptr) #5

; Function Attrs: nofree nounwind
declare noalias noundef ptr @fopen(ptr nocapture noundef readonly, ptr nocapture noundef readonly) local_unnamed_addr #6

; Function Attrs: nounwind
declare ptr @strerror(i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nosync nounwind readnone willreturn
declare ptr @__errno_location() local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare noundef i32 @fgetc(ptr nocapture noundef) local_unnamed_addr #6

; Function Attrs: nounwind uwtable
define internal fastcc i32 @get_number(ptr nocapture noundef %fp) unnamed_addr #8 {
entry:
  br label %do.body

do.body:                                          ; preds = %do.cond10, %entry
  %call = tail call i32 @fgetc(ptr noundef %fp)
  switch i32 %call, label %do.cond10 [
    i32 -1, label %if.then
    i32 35, label %do.body3
  ]

if.then:                                          ; preds = %do.body
  %0 = load ptr, ptr @filename, align 8, !tbaa !5
  tail call void (ptr, ...) @die(ptr noundef nonnull @.str.12, ptr noundef %0) #14
  unreachable

do.body3:                                         ; preds = %do.body3, %do.body
  %call4 = tail call i32 @fgetc(ptr noundef %fp)
  switch i32 %call4, label %do.body3 [
    i32 -1, label %if.then6
    i32 10, label %do.cond10
  ]

if.then6:                                         ; preds = %do.body3
  %1 = load ptr, ptr @filename, align 8, !tbaa !5
  tail call void (ptr, ...) @die(ptr noundef nonnull @.str.12, ptr noundef %1) #14
  unreachable

do.cond10:                                        ; preds = %do.body3, %do.body
  %c.0 = phi i32 [ %call, %do.body ], [ %call4, %do.body3 ]
  %call11 = tail call ptr @__ctype_b_loc() #16
  %2 = load ptr, ptr %call11, align 8, !tbaa !5
  %idxprom = sext i32 %c.0 to i64
  %arrayidx = getelementptr inbounds i16, ptr %2, i64 %idxprom
  %3 = load i16, ptr %arrayidx, align 2, !tbaa !17
  %4 = and i16 %3, 8192
  %tobool.not = icmp eq i16 %4, 0
  br i1 %tobool.not, label %while.cond.preheader, label %do.body

while.cond.preheader:                             ; preds = %do.cond10
  %5 = and i16 %3, 2048
  %tobool18.not38 = icmp eq i16 %5, 0
  br i1 %tobool18.not38, label %while.end, label %while.body

while.body:                                       ; preds = %if.end21.while.cond_crit_edge, %while.cond.preheader
  %val.040 = phi i32 [ %sub, %if.end21.while.cond_crit_edge ], [ 0, %while.cond.preheader ]
  %c.139 = phi i32 [ %call22, %if.end21.while.cond_crit_edge ], [ %c.0, %while.cond.preheader ]
  %mul = mul nsw i32 %val.040, 10
  %add = add i32 %c.139, -48
  %sub = add i32 %add, %mul
  %.b = load i1, ptr @is_plain_pbm, align 4
  br i1 %.b, label %while.end, label %if.end21

if.end21:                                         ; preds = %while.body
  %call22 = tail call i32 @fgetc(ptr noundef %fp)
  %cmp23 = icmp eq i32 %call22, -1
  br i1 %cmp23, label %if.then25, label %if.end21.while.cond_crit_edge

if.end21.while.cond_crit_edge:                    ; preds = %if.end21
  %.pre = load ptr, ptr %call11, align 8, !tbaa !5
  %idxprom14.phi.trans.insert = sext i32 %call22 to i64
  %arrayidx15.phi.trans.insert = getelementptr inbounds i16, ptr %.pre, i64 %idxprom14.phi.trans.insert
  %.pre37 = load i16, ptr %arrayidx15.phi.trans.insert, align 2, !tbaa !17
  %6 = and i16 %.pre37, 2048
  %tobool18.not = icmp eq i16 %6, 0
  br i1 %tobool18.not, label %while.end, label %while.body

if.then25:                                        ; preds = %if.end21
  %7 = load ptr, ptr @filename, align 8, !tbaa !5
  tail call void (ptr, ...) @die(ptr noundef nonnull @.str.12, ptr noundef %7) #14
  unreachable

while.end:                                        ; preds = %if.end21.while.cond_crit_edge, %while.body, %while.cond.preheader
  %val.1 = phi i32 [ 0, %while.cond.preheader ], [ %sub, %while.body ], [ %sub, %if.end21.while.cond_crit_edge ]
  ret i32 %val.1
}

; Function Attrs: inaccessiblememonly mustprogress nofree nounwind willreturn allocsize(0)
declare noalias noundef ptr @malloc(i64 noundef) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare noundef i32 @fclose(ptr nocapture noundef) local_unnamed_addr #6

; Function Attrs: mustprogress nofree nosync nounwind readnone willreturn
declare ptr @__ctype_b_loc() local_unnamed_addr #7

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #10

; Function Attrs: nounwind uwtable
define internal fastcc void @write_header() unnamed_addr #8 {
entry:
  %0 = load ptr, ptr @outputname, align 8, !tbaa !5
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call ptr @fopen(ptr noundef nonnull %0, ptr noundef nonnull @.str.14)
  store ptr %call, ptr @out, align 8, !tbaa !5
  %tobool1.not = icmp eq ptr %call, null
  br i1 %tobool1.not, label %if.then2, label %if.end5

if.then2:                                         ; preds = %if.then
  %1 = load ptr, ptr @outputname, align 8, !tbaa !5
  %call3 = tail call ptr @__errno_location() #16
  %2 = load i32, ptr %call3, align 4, !tbaa !9
  %call4 = tail call ptr @strerror(i32 noundef %2) #13
  tail call void (ptr, ...) @die(ptr noundef nonnull @.str.15, ptr noundef %1, ptr noundef %call4) #14
  unreachable

if.else:                                          ; preds = %entry
  %3 = load ptr, ptr @stdout, align 8, !tbaa !5
  store ptr %3, ptr @out, align 8, !tbaa !5
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then
  %4 = phi ptr [ %call, %if.then ], [ %3, %if.else ]
  %5 = tail call i64 @fwrite(ptr nonnull @.str.16, i64 3, i64 1, ptr %4)
  %6 = load ptr, ptr @out, align 8, !tbaa !5
  %7 = tail call i64 @fwrite(ptr nonnull @.str.17, i64 27, i64 1, ptr %6)
  %8 = load ptr, ptr @out, align 8, !tbaa !5
  %9 = tail call i64 @fwrite(ptr nonnull @.str.18, i64 3, i64 1, ptr %8)
  %10 = load ptr, ptr @out, align 8, !tbaa !5
  %11 = load ptr, ptr @filename, align 8, !tbaa !5
  %call9 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %10, ptr noundef nonnull @.str.19, ptr noundef %11)
  %12 = load ptr, ptr @out, align 8, !tbaa !5
  %13 = tail call i64 @fwrite(ptr nonnull @.str.18, i64 3, i64 1, ptr %12)
  %14 = load ptr, ptr @out, align 8, !tbaa !5
  %15 = load ptr, ptr @logoname, align 8, !tbaa !5
  %call11 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %14, ptr noundef nonnull @.str.20, ptr noundef %15)
  %16 = load ptr, ptr @out, align 8, !tbaa !5
  %17 = tail call i64 @fwrite(ptr nonnull @.str.21, i64 5, i64 1, ptr %16)
  %18 = load ptr, ptr @out, align 8, !tbaa !5
  %19 = tail call i64 @fwrite(ptr nonnull @.str.22, i64 31, i64 1, ptr %18)
  %20 = load ptr, ptr @out, align 8, !tbaa !5
  %21 = load ptr, ptr @logoname, align 8, !tbaa !5
  %call14 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %20, ptr noundef nonnull @.str.23, ptr noundef %21)
  ret void
}

; Function Attrs: nofree nounwind uwtable
define internal fastcc void @write_footer() unnamed_addr #11 {
entry:
  %0 = load ptr, ptr @out, align 8, !tbaa !5
  %1 = tail call i64 @fwrite(ptr nonnull @.str.27, i64 5, i64 1, ptr %0)
  %2 = load ptr, ptr @out, align 8, !tbaa !5
  %3 = load ptr, ptr @logoname, align 8, !tbaa !5
  %call1 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %2, ptr noundef nonnull @.str.28, ptr noundef %3)
  %4 = load ptr, ptr @out, align 8, !tbaa !5
  %5 = load i32, ptr @logo_type, align 4, !tbaa !9
  %6 = zext i32 %5 to i64
  %arrayidx = getelementptr inbounds [5 x ptr], ptr @logo_types, i64 0, i64 %6
  %7 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %call2 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %4, ptr noundef nonnull @.str.29, ptr noundef %7)
  %8 = load ptr, ptr @out, align 8, !tbaa !5
  %9 = load i32, ptr @logo_width, align 4, !tbaa !9
  %call3 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %8, ptr noundef nonnull @.str.30, i32 noundef %9)
  %10 = load ptr, ptr @out, align 8, !tbaa !5
  %11 = load i32, ptr @logo_height, align 4, !tbaa !9
  %call4 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %10, ptr noundef nonnull @.str.31, i32 noundef %11)
  %12 = load i32, ptr @logo_type, align 4, !tbaa !9
  %cmp = icmp eq i32 %12, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %13 = load ptr, ptr @out, align 8, !tbaa !5
  %14 = load i32, ptr @logo_clutsize, align 4, !tbaa !9
  %call5 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %13, ptr noundef nonnull @.str.32, i32 noundef %14)
  %15 = load ptr, ptr @out, align 8, !tbaa !5
  %16 = load ptr, ptr @logoname, align 8, !tbaa !5
  %call6 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %15, ptr noundef nonnull @.str.33, ptr noundef %16)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %17 = load ptr, ptr @out, align 8, !tbaa !5
  %18 = load ptr, ptr @logoname, align 8, !tbaa !5
  %call7 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %17, ptr noundef nonnull @.str.34, ptr noundef %18)
  %19 = load ptr, ptr @out, align 8, !tbaa !5
  %20 = tail call i64 @fwrite(ptr nonnull @.str.35, i64 4, i64 1, ptr %19)
  %21 = load ptr, ptr @outputname, align 8, !tbaa !5
  %tobool.not = icmp eq ptr %21, null
  br i1 %tobool.not, label %if.end11, label %if.then9

if.then9:                                         ; preds = %if.end
  %22 = load ptr, ptr @out, align 8, !tbaa !5
  %call10 = tail call i32 @fclose(ptr noundef %22)
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %if.end
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @fprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare noundef i64 @fwrite(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #12

attributes #0 = { noreturn nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { noreturn nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nocallback nofree nosync nounwind willreturn }
attributes #6 = { nofree nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { mustprogress nofree nosync nounwind readnone willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { inaccessiblememonly mustprogress nofree nounwind willreturn allocsize(0) "alloc-family"="malloc" "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { argmemonly nofree nounwind willreturn }
attributes #11 = { nofree nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { nofree nounwind }
attributes #13 = { nounwind }
attributes #14 = { noreturn }
attributes #15 = { nounwind readonly willreturn }
attributes #16 = { nounwind readnone willreturn }
attributes #17 = { noreturn nounwind }
attributes #18 = { nounwind allocsize(0) }
attributes #19 = { cold }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!5 = !{!6, !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!10, !10, i64 0}
!10 = !{!"int", !7, i64 0}
!11 = !{!12, !7, i64 2}
!12 = !{!"color", !7, i64 0, !7, i64 1, !7, i64 2}
!13 = !{!12, !7, i64 1}
!14 = !{!12, !7, i64 0}
!15 = !{i64 0, i64 1, !16, i64 1, i64 1, !16, i64 2, i64 1, !16}
!16 = !{!7, !7, i64 0}
!17 = !{!18, !18, i64 0}
!18 = !{!"short", !7, i64 0}
