; ModuleID = '/llk/IR_all_yes/fs/btrfs/extent_io.c_pt.bc'
source_filename = "../fs/btrfs/extent_io.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.bio_set = type { ptr, i32, ptr, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, i32, %struct.spinlock, %struct.bio_list, %struct.work_struct, ptr, %struct.hlist_node }
%struct.mempool_s = type { %struct.spinlock, i32, i32, ptr, ptr, ptr, ptr, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.list_head = type { ptr, ptr }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.0 }
%union.anon.0 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.bio_list = type { ptr, ptr }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.atomic_t = type { i32 }
%struct.hlist_node = type { ptr, ptr }
%struct.lock_class_key = type { %union.anon.1 }
%union.anon.1 = type { %struct.hlist_node }
%struct.btrfs_bio_ctrl = type { ptr, i32, i32, i32 }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key = type { %struct.atomic_t, %union.anon.57 }
%union.anon.57 = type { i32 }
%struct.cpumask = type { [1 x i32] }
%struct.radix_tree_preload = type { %struct.local_lock_t, i32, ptr }
%struct.local_lock_t = type { %struct.lockdep_map, ptr }
%struct.btrfs_fs_info = type { [16 x i8], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.rwlock_t, %struct.rb_root, %struct.spinlock, %struct.xarray, %struct.spinlock, i64, %struct.rb_root, %struct.atomic64_t, %struct.extent_io_tree, %struct.extent_map_tree, %struct.btrfs_block_rsv, %struct.btrfs_block_rsv, %struct.btrfs_block_rsv, %struct.btrfs_block_rsv, %struct.btrfs_block_rsv, %struct.btrfs_block_rsv, i64, i64, i64, i64, i64, i32, i32, i8, i32, i32, i64, ptr, %struct.wait_queue_head, %struct.wait_queue_head, %struct.wait_queue_head, %struct.wait_queue_head, %struct.spinlock, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.mutex, %struct.mutex, %struct.mutex, ptr, %struct.mutex, %struct.rw_semaphore, %struct.rw_semaphore, %struct.rw_semaphore, %struct.spinlock, %struct.mutex, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.list_head, %struct.atomic_t, %struct.wait_queue_head, %struct.atomic64_t, %struct.rwlock_t, %struct.rb_root, %struct.list_head, %struct.atomic_t, %struct.spinlock, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, %struct.percpu_counter, %struct.percpu_counter, %struct.percpu_counter, i32, i32, %struct.list_head, ptr, %struct.list_head, ptr, ptr, %struct.btrfs_free_cluster, %struct.btrfs_free_cluster, %struct.spinlock, %struct.rb_root, %struct.atomic_t, %struct.seqlock_t, i64, i64, i64, %struct.spinlock, %struct.mutex, %struct.atomic_t, %struct.atomic_t, ptr, %struct.wait_queue_head, %struct.atomic_t, i32, i32, ptr, %struct.mutex, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.wait_queue_head, %struct.refcount_struct, ptr, ptr, ptr, ptr, %struct.btrfs_discard_ctl, i32, i64, %struct.rb_root, %struct.spinlock, ptr, %struct.mutex, %struct.list_head, i64, %struct.mutex, %struct.btrfs_key, ptr, %struct.completion, %struct.btrfs_work, i8, i32, ptr, %struct.spinlock, %struct.xarray, i32, %struct.btrfs_dev_replace, %struct.semaphore, %struct.work_struct, %struct.work_struct, %struct.work_struct, %struct.work_struct, %struct.list_head, i32, %struct.spinlock, %struct.list_head, %struct.mutex, %struct.mutex, i32, i32, i32, i32, i32, i32, %struct.spinlock, %struct.rb_root, ptr, i32, %union.anon.84, %struct.mutex, %struct.spinlock, i64, %struct.spinlock, i64, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.rb_root, ptr, ptr, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.extent_io_tree = type { %struct.rb_root, ptr, ptr, i64, i8, i8, %struct.spinlock }
%struct.extent_map_tree = type { %struct.rb_root_cached, %struct.list_head, %struct.rwlock_t }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.btrfs_block_rsv = type { i64, i64, ptr, %struct.spinlock, i16, i16, i16, i64, i64 }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.atomic64_t = type { i64 }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.btrfs_free_cluster = type { %struct.spinlock, %struct.spinlock, %struct.rb_root, i64, i64, i8, ptr, %struct.list_head }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.btrfs_discard_ctl = type { ptr, %struct.delayed_work, %struct.spinlock, ptr, [3 x %struct.list_head], i64, i64, %struct.atomic_t, %struct.atomic64_t, i64, i64, i32, i32, i64, i64, %struct.atomic64_t }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.btrfs_key = type <{ i64, i8, i64 }>
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.btrfs_work = type { ptr, ptr, ptr, %struct.work_struct, %struct.list_head, ptr, i32 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.btrfs_dev_replace = type { i64, i64, i64, %struct.atomic64_t, %struct.atomic64_t, i64, i64, i64, i64, i64, i32, i32, ptr, ptr, %struct.mutex, %struct.rw_semaphore, %struct.btrfs_scrub_progress, %struct.percpu_counter, %struct.wait_queue_head }
%struct.btrfs_scrub_progress = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.semaphore = type { %struct.raw_spinlock, i32, %struct.list_head }
%union.anon.84 = type { i64 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.rb_root = type { ptr }
%struct.btrfs_header = type <{ [32 x i8], [16 x i8], i64, i64, [16 x i8], i64, i64, i32, i8 }>
%struct.bio = type { ptr, ptr, i32, i16, i16, i16, i8, %struct.atomic_t, %struct.bvec_iter, i32, ptr, ptr, ptr, %struct.bio_issue, i64, ptr, %union.anon.30, i16, i16, %struct.atomic_t, ptr, ptr, [0 x %struct.bio_vec] }
%struct.bvec_iter = type <{ i64, i32, i32, i32 }>
%struct.bio_issue = type { i64 }
%union.anon.30 = type { ptr }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.extent_state = type { i64, i64, %struct.rb_node, %struct.wait_queue_head, %struct.refcount_struct, i32, ptr, %struct.list_head }
%struct.rb_node = type { i32, ptr, ptr }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.btrfs_root = type { %struct.rb_node, ptr, ptr, ptr, ptr, i32, %struct.btrfs_root_item, %struct.btrfs_key, ptr, %struct.extent_io_tree, %struct.mutex, %struct.spinlock, ptr, %struct.mutex, %struct.wait_queue_head, [2 x %struct.wait_queue_head], [2 x %struct.list_head], %struct.atomic_t, [2 x %struct.atomic_t], %struct.atomic_t, i32, i32, i32, i32, i64, i32, i64, %struct.btrfs_key, %struct.btrfs_key, %struct.list_head, %struct.list_head, [2 x %struct.spinlock], [2 x %struct.list_head], %struct.spinlock, %struct.rb_root, %struct.xarray, i32, %struct.spinlock, %struct.refcount_struct, %struct.mutex, %struct.spinlock, %struct.list_head, %struct.list_head, i64, %struct.mutex, %struct.spinlock, %struct.list_head, %struct.list_head, i64, %struct.list_head, i32, i32, %struct.btrfs_drew_lock, %struct.atomic_t, %struct.spinlock, i64, i64, %struct.wait_queue_head, %struct.atomic_t, %struct.btrfs_qgroup_swapped_blocks, %struct.extent_io_tree, i64, %struct.list_head }
%struct.btrfs_root_item = type <{ %struct.btrfs_inode_item, i64, i64, i64, i64, i64, i64, i64, i32, %struct.btrfs_disk_key, i8, i8, i64, [16 x i8], [16 x i8], [16 x i8], i64, i64, i64, i64, %struct.btrfs_timespec, %struct.btrfs_timespec, %struct.btrfs_timespec, %struct.btrfs_timespec, [8 x i64] }>
%struct.btrfs_inode_item = type { i64, i64, i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, [4 x i64], %struct.btrfs_timespec, %struct.btrfs_timespec, %struct.btrfs_timespec, %struct.btrfs_timespec }
%struct.btrfs_disk_key = type <{ i64, i8, i64 }>
%struct.btrfs_timespec = type <{ i64, i32 }>
%struct.btrfs_drew_lock = type { %struct.atomic_t, %struct.percpu_counter, %struct.wait_queue_head, %struct.wait_queue_head }
%struct.btrfs_qgroup_swapped_blocks = type { %struct.spinlock, i8, [8 x %struct.rb_root] }
%struct.extent_changeset = type { i32, %struct.ulist }
%struct.ulist = type { i32, %struct.list_head, %struct.rb_root }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.76, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.77, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.78, ptr, %struct.address_space, %struct.list_head, %union.anon.79, i32, i32, ptr, ptr, ptr, ptr }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%union.anon.76 = type { i32 }
%struct.timespec64 = type { i64, i32 }
%union.anon.77 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%union.anon.78 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%union.anon.79 = type { ptr }
%struct.page = type { i32, %union.anon.2, %union.anon.75, %struct.atomic_t, i32 }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.75 = type { %struct.atomic_t }
%struct.btrfs_inode = type { ptr, %struct.btrfs_key, %struct.spinlock, %struct.extent_map_tree, %struct.extent_io_tree, %struct.extent_io_tree, %struct.extent_io_tree, %struct.mutex, %struct.btrfs_ordered_inode_tree, %struct.list_head, %struct.rb_node, i32, %struct.atomic_t, i64, i64, i64, i32, i32, i64, %union.anon.89, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, %struct.btrfs_block_rsv, i32, i32, ptr, %struct.timespec64, %struct.list_head, %struct.rw_semaphore, %struct.inode }
%struct.btrfs_ordered_inode_tree = type { %struct.spinlock, %struct.rb_root, ptr }
%union.anon.89 = type { i64 }
%struct.super_block = type { %struct.list_head, i32, i8, i32, i64, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, %struct.rw_semaphore, i32, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, i16, %struct.hlist_bl_head, %struct.list_head, ptr, ptr, ptr, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, ptr, i32, i64, i64, i32, ptr, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, ptr, ptr, %struct.shrinker, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr, %struct.hlist_head, ptr, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [24 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [24 x i8] }
%struct.hlist_bl_head = type { ptr }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x ptr], [3 x %struct.mem_dqinfo], [3 x ptr] }
%struct.mem_dqinfo = type { ptr, i32, %struct.list_head, i32, i32, i32, i64, i64, ptr }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, ptr, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t, %struct.lockdep_map }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { ptr }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { ptr, ptr, i32, i32, i32, %struct.list_head, i32, ptr }
%struct.hlist_head = type { ptr }
%struct.list_lru = type { ptr, %struct.list_head, i32, i8 }
%struct.io_failure_record = type { ptr, i64, i64, i64, i32, i32, i32 }
%struct.extent_buffer = type { i64, i32, i32, ptr, %struct.spinlock, %struct.atomic_t, %struct.atomic_t, i32, %struct.callback_head, i32, i8, %struct.rw_semaphore, [16 x ptr], %struct.list_head, %struct.list_head }
%struct.btrfs_io_context = type { %struct.refcount_struct, %struct.atomic_t, ptr, i64, ptr, ptr, ptr, %struct.atomic_t, i32, i32, i32, i32, ptr, ptr, [0 x %struct.btrfs_io_stripe] }
%struct.btrfs_io_stripe = type { ptr, i64, i64 }
%struct.btrfs_device = type { %struct.list_head, %struct.list_head, %struct.list_head, ptr, ptr, ptr, i64, ptr, ptr, i32, i32, i8, %struct.seqcount, i64, i64, i64, i64, i32, i32, i64, i32, [16 x i8], i64, i64, ptr, %struct.completion, ptr, i32, %struct.atomic_t, [5 x %struct.atomic_t], %struct.extent_io_tree, %struct.completion, %struct.kobject, i64 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.rcu_string = type { %struct.callback_head, [0 x i8] }
%struct.extent_map = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, ptr, %struct.refcount_struct, i32, %struct.list_head }
%struct.anon.86 = type { i32, %struct.list_head, ptr, i32, ptr, %struct.atomic_t, %struct.atomic_t, i32 }
%struct.btrfs_io_geometry = type { i64, i64, i64, i64, i64, i64 }
%struct.writeback_control = type { i32, i32, i64, i64, i32, i16, ptr, ptr, i32, i32, i32, i32, i32, i32 }
%struct.btrfs_ordered_extent = type { i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, %struct.refcount_struct, ptr, %struct.list_head, %struct.list_head, %struct.wait_queue_head, %struct.rb_node, %struct.list_head, %struct.btrfs_work, %struct.completion, %struct.btrfs_work, %struct.list_head, i64, ptr }
%struct.btrfs_fs_devices = type { [16 x i8], [16 x i8], i8, %struct.list_head, i64, i64, i64, i64, i64, i64, i64, ptr, %struct.mutex, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32, i8, ptr, %struct.kobject, ptr, ptr, %struct.completion, i32, i32 }
%struct.bdi_writeback = type { ptr, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.atomic_t, [4 x %struct.percpu_counter], i32, i32, i32, i32, i32, i32, i32, i32, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, %struct.delayed_work, i32, %struct.list_head, %struct.percpu_ref, %struct.fprop_local_percpu, ptr, ptr, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.66 }
%struct.percpu_ref = type { i32, ptr }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%union.anon.66 = type { %struct.work_struct }
%struct.extent_page_data = type { %struct.btrfs_bio_ctrl, i8 }
%struct.pagevec = type { i8, i8, [15 x ptr] }
%struct.btrfs_subpage_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.btrfs_subpage = type { %struct.spinlock, %struct.atomic_t, %union.anon.91, [0 x i32] }
%union.anon.91 = type { %struct.atomic_t }
%struct.btrfs_block_group = type { ptr, ptr, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.rw_semaphore, i32, i32, i8, i32, i32, ptr, i64, ptr, ptr, %struct.rb_node, %struct.list_head, %struct.refcount_struct, %struct.list_head, %struct.list_head, %struct.list_head, %struct.atomic_t, %struct.list_head, i32, i64, i64, i32, %struct.list_head, %struct.list_head, %struct.btrfs_io_ctl, %struct.atomic_t, %struct.atomic_t, %struct.mutex, i32, i8, i32, %struct.btrfs_full_stripe_locks_tree, i64, i64, i64, i64, ptr, %struct.list_head }
%struct.btrfs_io_ctl = type { ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32 }
%struct.btrfs_full_stripe_locks_tree = type { %struct.rb_root, %struct.mutex }
%struct.address_space_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.xa_state = type { ptr, i32, i8, i8, i8, i8, ptr, ptr, ptr }
%struct.readahead_control = type { ptr, ptr, ptr, i32, i32, i32 }
%struct.xa_node = type { i8, i8, i8, i8, ptr, ptr, %union.anon.95, [64 x ptr], %union.anon.96 }
%union.anon.95 = type { %struct.list_head }
%union.anon.96 = type { [3 x [2 x i32]] }
%struct.anon = type { [16 x i8], %struct.lockdep_map }
%struct.btrfs_path = type { [8 x ptr], [8 x i32], [8 x i8], i8, i8, i8 }
%struct.fiemap_extent_info = type { i32, i32, i32, ptr }

@btrfs_extent_buffer_leak_debug_check._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str, ptr @.str.1, ptr @.str.2, i32 85, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str = internal constant { [71 x i8], [57 x i8] } { [71 x i8] c"\013BTRFS: buffer leak start %llu len %lu refs %d bflags %lu owner %llu\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"btrfs_extent_buffer_leak_debug_check\00", [59 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"fs/btrfs/extent_io.c\00", [43 x i8] zeroinitializer }, align 32
@btrfs_extent_buffer_leak_debug_check._entry_ptr = internal global ptr @btrfs_extent_buffer_leak_debug_check._entry, section ".printk_index", align 4
@extent_buffer_cache = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@.str.3 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"bio->bi_iter.bi_size\00", [43 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"btrfs_extent_state\00", [45 x i8] zeroinitializer }, align 32
@extent_state_cache = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@.str.5 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"btrfs_extent_buffer\00", [44 x i8] zeroinitializer }, align 32
@btrfs_bioset = internal global { %struct.bio_set, [132 x i8] } zeroinitializer, align 32
@extent_io_tree_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.6 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"&tree->lock\00", [20 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"&file_extent_tree_class\00", [40 x i8] zeroinitializer }, align 32
@file_extent_tree_class = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.8 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"!waitqueue_active(&state->wq)\00", [34 x i8] zeroinitializer }, align 32
@leak_lock = internal global { %struct.spinlock, [52 x i8] } { %struct.spinlock { %union.anon { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.46, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, [52 x i8] zeroinitializer }, align 32
@__func__.__clear_extent_bit = private unnamed_addr constant [19 x i8] c"__clear_extent_bit\00", align 1
@__func__.set_extent_bit = private unnamed_addr constant [15 x i8] c"set_extent_bit\00", align 1
@.str.9 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"failed_start\00", [19 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"failed_start == NULL\00", [43 x i8] zeroinitializer }, align 32
@__func__.convert_extent_bit = private unnamed_addr constant [19 x i8] c"convert_extent_bit\00", align 1
@.str.11 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"orig_end > orig_start\00", [42 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [94 x i8], [34 x i8] } { [94 x i8] c"!(orig_start >= page_offset(locked_page) + PAGE_SIZE || orig_end <= page_offset(locked_page))\00", [34 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"!ret || ret == -EAGAIN\00", [41 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"state->end <= end\00", [46 x i8] zeroinitializer }, align 32
@btrfs_repair_one_sector.__UNIQUE_ID_ddebug966 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.15, ptr @.str.16, ptr @.str.2, ptr @.str.17, i8 2, i8 -107, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.15 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"btrfs\00", [26 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"btrfs_repair_one_sector\00", [40 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"repair read error: read error at %llu\00", [58 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\017repair read error: read error at %llu\00", [56 x i8] zeroinitializer }, align 32
@btrfs_repair_one_sector.__UNIQUE_ID_ddebug967 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.15, ptr @.str.16, ptr @.str.2, ptr @.str.19, i8 2, i8 -99, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.19 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"repair read error: submitting new read to mirror %d\00", [44 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\017repair read error: submitting new read to mirror %d\00", [42 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"page && page->mapping\00", [42 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"end + 1 - start <= U32_MAX\00", [37 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"0 < nr_iovecs && nr_iovecs <= BIO_MAX_VECS\00", [53 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"offset <= UINT_MAX && size <= UINT_MAX\00", [57 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"bio\00", [28 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"page->mapping\00", [18 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"IS_ALIGNED(cur, fs_info->sectorsize)\00", [59 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"ret <= 0\00", [23 x i8] zeroinitializer }, align 32
@__const.extent_write_locked_range.epd = private unnamed_addr constant { %struct.btrfs_bio_ctrl, i8, [3 x i8] } { %struct.btrfs_bio_ctrl zeroinitializer, i8 -64, [3 x i8] zeroinitializer }, align 4
@.str.29 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"IS_ALIGNED(start, sectorsize) && IS_ALIGNED(end + 1, sectorsize)\00", [63 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"PageLocked(page)\00", [47 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"PageDirty(page)\00", [16 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"tree->owner == IO_TREE_BTREE_INODE_IO\00", [58 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"\013bad tree block start %llu\00", [36 x i8] zeroinitializer }, align 32
@alloc_extent_buffer._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.34, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"_rs.lock\00", [23 x i8] zeroinitializer }, align 32
@__func__.alloc_extent_buffer = private unnamed_addr constant [20 x i8] c"alloc_extent_buffer\00", align 1
@.str.35 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\013extent buffer %llu is beyond 32bit page cache limit\00", [42 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\013tree block crosses page boundary, start %llu nodesize %lu\00", [36 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"!ret\00", [27 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"PageDirty(eb->pages[i])\00", [40 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"dst->len == src->len\00", [43 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"src->fs_info->sectorsize < PAGE_SIZE\00", [59 x i8] zeroinitializer }, align 32
@assertfail._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.41, ptr @.str.42, ptr @.str.43, i32 3491, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\013assertion failed: %s, in %s:%d\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"assertfail\00", [21 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"fs/btrfs/ctree.h\00", [47 x i8] zeroinitializer }, align 32
@assertfail._entry_ptr = internal global ptr @assertfail._entry, section ".printk_index", align 4
@states = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @states, ptr @states }, [24 x i8] zeroinitializer }, align 32
@btrfs_extent_state_leak_debug_check._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.44, ptr @.str.45, ptr @.str.2, i32 101, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\013BTRFS: state leak: start %llu end %llu state %u in tree %d refs %d\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"btrfs_extent_state_leak_debug_check\00", [60 x i8] zeroinitializer }, align 32
@btrfs_extent_state_leak_debug_check._entry_ptr = internal global ptr @btrfs_extent_state_leak_debug_check._entry, section ".printk_index", align 4
@.str.46 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"leak_lock\00", [22 x i8] zeroinitializer }, align 32
@__tracepoint_free_extent_state = external dso_local global %struct.tracepoint, align 4
@.str.47 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"include/trace/events/btrfs.h\00", [35 x i8] zeroinitializer }, align 32
@trace_free_extent_state.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.48 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.49 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@__btrfs_debug_check_extent_io_range.__UNIQUE_ID_ddebug945 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.15, ptr @.str.50, ptr @.str.2, ptr @.str.51, i8 0, i8 30, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.50 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"__btrfs_debug_check_extent_io_range\00", [60 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"%s: ino %llu isize %llu odd range [%llu,%llu]\00", [50 x i8] zeroinitializer }, align 32
@__btrfs_debug_check_extent_io_range._rs = internal global %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.34, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, align 4
@.str.52 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\017%s: ino %llu isize %llu odd range [%llu,%llu]\00", [48 x i8] zeroinitializer }, align 32
@__tracepoint_btrfs_clear_extent_bit = external dso_local global %struct.tracepoint, align 4
@trace_btrfs_clear_extent_bit.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@alloc_extent_state.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.53 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"&state->wq\00", [21 x i8] zeroinitializer }, align 32
@__tracepoint_alloc_extent_state = external dso_local global %struct.tracepoint, align 4
@trace_alloc_extent_state.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__func__.extent_io_tree_panic = private unnamed_addr constant [21 x i8] c"extent_io_tree_panic\00", align 1
@.str.54 = internal constant { [71 x i8], [57 x i8] } { [71 x i8] c"locking error: extent tree was modified by another thread while locked\00", [57 x i8] zeroinitializer }, align 32
@__tracepoint_btrfs_set_extent_bit = external dso_local global %struct.tracepoint, align 4
@trace_btrfs_set_extent_bit.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.55 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"\013insert state: end < start %llu %llu\00", [58 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\013found node %llu %llu on insert of %llu %llu\00", [50 x i8] zeroinitializer }, align 32
@__tracepoint_btrfs_convert_extent_bit = external dso_local global %struct.tracepoint, align 4
@trace_btrfs_convert_extent_bit.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__func__.wait_extent_bit = private unnamed_addr constant [16 x i8] c"wait_extent_bit\00", align 1
@.str.57 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"VM_BUG_ON_PAGE(page_ref_count(page) == 0)\00", [54 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_mod_and_test = external dso_local global %struct.tracepoint, align 4
@.str.58 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"locked_page\00", [20 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"page_ops == PAGE_LOCK\00", [42 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"processed_end && *processed_end == start\00", [55 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"page_ops & PAGE_LOCK\00", [43 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"end + 1 - start != 0 && end + 1 - start < U32_MAX\00", [46 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"!(fs_info->sb->s_flags & SB_RDONLY)\00", [60 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"bioc->mirror_num == 1\00", [42 x i8] zeroinitializer }, align 32
@repair_io_failure._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.34, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@__func__.repair_io_failure = private unnamed_addr constant [18 x i8] c"repair_io_failure\00", align 1
@.str.65 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\016read error corrected: ino %llu off %llu (dev %s sector %llu)\00", [33 x i8] zeroinitializer }, align 32
@repair_io_failure.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.66 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.68 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@btrfs_get_io_failure_record.__UNIQUE_ID_ddebug962 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.15, ptr @.str.69, ptr @.str.2, ptr @.str.70, i8 2, i8 116, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.69 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"btrfs_get_io_failure_record\00", [36 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"Get IO Failure Record: (found) logical=%llu, start=%llu, len=%llu\00", [62 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\017Get IO Failure Record: (found) logical=%llu, start=%llu, len=%llu\00", [60 x i8] zeroinitializer }, align 32
@btrfs_get_io_failure_record.__UNIQUE_ID_ddebug963 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.15, ptr @.str.69, ptr @.str.2, ptr @.str.72, i8 2, i8 -128, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.72 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"Get IO Failure Record: (new) logical=%llu, start=%llu, len=%llu\00", [32 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\017Get IO Failure Record: (new) logical=%llu, start=%llu, len=%llu\00", [62 x i8] zeroinitializer }, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@btrfs_check_repairable.__UNIQUE_ID_ddebug964 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.15, ptr @.str.74, ptr @.str.2, ptr @.str.75, i8 2, i8 -119, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.74 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"btrfs_check_repairable\00", [41 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [81 x i8], [47 x i8] } { [81 x i8] c"Check Repairable: cannot repair, num_copies=%d, next_mirror %d, failed_mirror %d\00", [47 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [83 x i8], [45 x i8] } { [83 x i8] c"\017Check Repairable: cannot repair, num_copies=%d, next_mirror %d, failed_mirror %d\00", [45 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"failrec->len == fs_info->sectorsize\00", [60 x i8] zeroinitializer }, align 32
@btrfs_check_repairable.__UNIQUE_ID_ddebug965 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.15, ptr @.str.74, ptr @.str.2, ptr @.str.78, i8 2, i8 -113, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.78 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"Check Repairable: (fail) num_copies=%d, next_mirror %d, failed_mirror %d\00", [55 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"\017Check Repairable: (fail) num_copies=%d, next_mirror %d, failed_mirror %d\00", [53 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"VM_BUG_ON_PAGE(PagePoisoned(page))\00", [61 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"VM_BUG_ON_FOLIO(((unsigned int) folio_ref_count(folio) + 127u <= 127u))\00", [56 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_mod = external dso_local global %struct.tracepoint, align 4
@.str.82 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"VM_BUG_ON_PAGE(PageTail(page))\00", [33 x i8] zeroinitializer }, align 32
@pgprot_kernel = external dso_local local_unnamed_addr global i32, align 4
@.str.84 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"PagePrivate(page)\00", [46 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"page_offset(page) <= start && start + len <= page_offset(page) + PAGE_SIZE\00", [53 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"VM_BUG_ON_PAGE(PagePoisoned(((typeof(page))_compound_head(page))))\00", [61 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"bio_ctrl\00", [23 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [76 x i8], [52 x i8] } { [76 x i8] c"pg_offset < PAGE_SIZE && size <= PAGE_SIZE && pg_offset + size <= PAGE_SIZE\00", [52 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"added == 0 || added == size - offset\00", [59 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"bio_ctrl->bio->bi_iter.bi_size\00", [33 x i8] zeroinitializer }, align 32
@btrfs_op.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.91 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"fs/btrfs/volumes.h\00", [45 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"bio_ctrl->len_to_oe_boundary && bio_ctrl->len_to_stripe_boundary\00", [63 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"!bio_flagged(bio, BIO_CLONED)\00", [34 x i8] zeroinitializer }, align 32
@end_bio_extent_readpage.__UNIQUE_ID_ddebug968 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.15, ptr @.str.94, ptr @.str.2, ptr @.str.95, i8 2, i8 -13, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.94 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"end_bio_extent_readpage\00", [40 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"end_bio_extent_readpage: bi_sector=%llu, err=%d, mirror=%u\00", [37 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\017end_bio_extent_readpage: bi_sector=%llu, err=%d, mirror=%u\00", [35 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"\013partial page read in btrfs with offset %u and length %u\00", [38 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\016incomplete page read with offset %u and length %u\00", [44 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"bio_offset + len > bio_offset\00", [34 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"error_bitmap\00", [19 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"page->mapping && !bio_flagged(failed_bio, BIO_CLONED)\00", [42 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"PagePrivate(page) && page->private\00", [61 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"eb\00", [29 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/wait_bit.h\00", [39 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"fs_info->sectorsize < PAGE_SIZE\00", [32 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"IS_ALIGNED(bvec->bv_len, fs_info->nodesize)\00", [52 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"test_bit(EXTENT_BUFFER_WRITEBACK, &eb->bflags)\00", [49 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"done\00", [27 x i8] zeroinitializer }, align 32
@bio_first_bvec_all.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.109 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"include/linux/bio.h\00", [44 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"VM_BUG_ON_PAGE(1 && PageTail(page))\00", [60 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"wbc\00", [28 x i8] zeroinitializer }, align 32
@__tracepoint___extent_writepage = external dso_local global %struct.tracepoint, align 4
@trace___extent_writepage.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.112 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"cur <= em_end\00", [18 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"cur < end\00", [22 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"IS_ALIGNED(em->start, fs_info->sectorsize)\00", [53 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"IS_ALIGNED(em->len, fs_info->sectorsize)\00", [55 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\013page %lu not writeback, cur %llu end %llu\00", [52 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\013partial page write in btrfs with offset %u and length %u\00", [37 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\016incomplete page write with offset %u and length %u\00", [43 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"VM_BUG_ON_PAGE(!PageLocked(page))\00", [62 x i8] zeroinitializer }, align 32
@xa_entry.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.120 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"include/linux/xarray.h\00", [41 x i8] zeroinitializer }, align 32
@__alloc_extent_buffer.__key = internal global %struct.lock_class_key zeroinitializer, align 4
@.str.121 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"&eb->lock\00", [22 x i8] zeroinitializer }, align 32
@__alloc_extent_buffer.__key.122 = internal global %struct.lock_class_key zeroinitializer, align 4
@.str.123 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"&eb->refs_lock\00", [17 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"len <= BTRFS_MAX_METADATA_BLOCKSIZE\00", [60 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"!extent_buffer_under_io(eb)\00", [36 x i8] zeroinitializer }, align 32
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@radix_tree_preloads = external dso_local global %struct.radix_tree_preload, section ".data..percpu", align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@oops_in_progress = external dso_local local_unnamed_addr global i32, align 4
@debug_locks_silent = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@.str.127 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"include/linux/local_lock_internal.h\00", [60 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"DEBUG_LOCKS_WARN_ON(%s)\00", [40 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"l->owner != current\00", [44 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/pagemap.h\00", [40 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"!test_bit(EXTENT_BUFFER_UNMAPPED, &eb->bflags)\00", [49 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\014access to eb bytenr %llu len %lu out of range start %lu len %lu\00", [62 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"in_range(bytenr, page_start, PAGE_SIZE)\00", [56 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967285]
@__sancov_gen_cov_switch_values.134 = internal global [6 x i64] [i64 4, i64 8, i64 0, i64 1, i64 3, i64 13]
@__sancov_gen_cov_switch_values.135 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.136 = internal global [4 x i64] [i64 2, i64 32, i64 1026, i64 1030]
@__sancov_gen_cov_switch_values.137 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.138 = internal global [5 x i64] [i64 3, i64 64, i64 -4, i64 -2, i64 -1]
@__sancov_gen_cov_switch_values.139 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@___asan_gen_.151 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 82, i32 3 }
@___asan_gen_.152 = private unnamed_addr constant [20 x i8] c"extent_buffer_cache\00", align 1
@___asan_gen_.154 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 33, i32 27 }
@___asan_gen_.157 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 176, i32 2 }
@___asan_gen_.160 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 226, i32 41 }
@___asan_gen_.161 = private unnamed_addr constant [19 x i8] c"extent_state_cache\00", align 1
@___asan_gen_.163 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 32, i32 27 }
@___asan_gen_.166 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 236, i32 42 }
@___asan_gen_.167 = private unnamed_addr constant [13 x i8] c"btrfs_bioset\00", align 1
@___asan_gen_.169 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 34, i32 23 }
@___asan_gen_.175 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 294, i32 2 }
@___asan_gen_.178 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 298, i32 3 }
@___asan_gen_.179 = private unnamed_addr constant [23 x i8] c"file_extent_tree_class\00", align 1
@___asan_gen_.181 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 285, i32 30 }
@___asan_gen_.184 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 322, i32 3 }
@___asan_gen_.185 = private unnamed_addr constant [10 x i8] c"leak_lock\00", align 1
@___asan_gen_.190 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 989, i32 3 }
@___asan_gen_.193 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 991, i32 3 }
@___asan_gen_.196 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2007, i32 2 }
@___asan_gen_.199 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2010, i32 2 }
@___asan_gen_.202 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2044, i32 2 }
@___asan_gen_.205 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2483, i32 3 }
@___asan_gen_.217 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2644, i32 2 }
@___asan_gen_.223 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2677, i32 2 }
@___asan_gen_.226 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2800, i32 2 }
@___asan_gen_.229 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2808, i32 3 }
@___asan_gen_.232 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 3145, i32 2 }
@___asan_gen_.235 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 3169, i32 2 }
@___asan_gen_.238 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 3173, i32 2 }
@___asan_gen_.241 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 3488, i32 2 }
@___asan_gen_.244 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 3595, i32 3 }
@___asan_gen_.247 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 5089, i32 2 }
@___asan_gen_.250 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 5129, i32 2 }
@___asan_gen_.253 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 5144, i32 3 }
@___asan_gen_.256 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 5145, i32 3 }
@___asan_gen_.259 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 5234, i32 2 }
@___asan_gen_.262 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 6143, i32 3 }
@___asan_gen_.271 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 6149, i32 3 }
@___asan_gen_.274 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 6160, i32 3 }
@___asan_gen_.277 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 6218, i32 3 }
@___asan_gen_.280 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 6469, i32 3 }
@___asan_gen_.283 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 6953, i32 2 }
@___asan_gen_.286 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 6964, i32 3 }
@___asan_gen_.297 = private unnamed_addr constant [20 x i8] c"../fs/btrfs/ctree.h\00", align 1
@___asan_gen_.298 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.297, i32 3491, i32 2 }
@___asan_gen_.299 = private unnamed_addr constant [7 x i8] c"states\00", align 1
@___asan_gen_.301 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 42, i32 8 }
@___asan_gen_.302 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.310 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 98, i32 3 }
@___asan_gen_.313 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 43, i32 8 }
@___asan_gen_.318 = private unnamed_addr constant [32 x i8] c"../include/trace/events/btrfs.h\00", align 1
@___asan_gen_.319 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.318, i32 1360, i32 1 }
@___asan_gen_.321 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.322 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.321, i32 108, i32 2 }
@___asan_gen_.331 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 120, i32 3 }
@___asan_gen_.332 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.337 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 347, i32 2 }
@___asan_gen_.340 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 688, i32 2 }
@___asan_gen_.343 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 564, i32 3 }
@___asan_gen_.346 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 577, i32 3 }
@___asan_gen_.349 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.423, i32 717, i32 2 }
@___asan_gen_.352 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 1963, i32 2 }
@___asan_gen_.355 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 1877, i32 3 }
@___asan_gen_.358 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 1878, i32 3 }
@___asan_gen_.361 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 1895, i32 4 }
@___asan_gen_.364 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 1828, i32 2 }
@___asan_gen_.367 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2313, i32 2 }
@___asan_gen_.370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2343, i32 3 }
@___asan_gen_.371 = private unnamed_addr constant [4 x i8] c"_rs\00", align 1
@___asan_gen_.376 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2377, i32 2 }
@___asan_gen_.382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.384, i32 695, i32 2 }
@___asan_gen_.384 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.385 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.384, i32 723, i32 2 }
@___asan_gen_.394 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2511, i32 3 }
@___asan_gen_.400 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2558, i32 2 }
@___asan_gen_.409 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2595, i32 3 }
@___asan_gen_.412 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2602, i32 2 }
@___asan_gen_.418 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2619, i32 3 }
@___asan_gen_.421 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.507, i32 452, i32 1 }
@___asan_gen_.423 = private unnamed_addr constant [22 x i8] c"../include/linux/mm.h\00", align 1
@___asan_gen_.424 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.423, i32 1160, i32 2 }
@___asan_gen_.427 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.507, i32 260, i32 2 }
@___asan_gen_.430 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2948, i32 2 }
@___asan_gen_.433 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2694, i32 2 }
@___asan_gen_.436 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.507, i32 416, i32 1 }
@___asan_gen_.439 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 3384, i32 2 }
@___asan_gen_.442 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 3386, i32 2 }
@___asan_gen_.445 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 3423, i32 4 }
@___asan_gen_.448 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 3432, i32 4 }
@___asan_gen_.450 = private unnamed_addr constant [22 x i8] c"../fs/btrfs/volumes.h\00", align 1
@___asan_gen_.451 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.450, i32 479, i32 3 }
@___asan_gen_.454 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 3215, i32 2 }
@___asan_gen_.457 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 3007, i32 2 }
@___asan_gen_.466 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 3019, i32 3 }
@___asan_gen_.469 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 3034, i32 4 }
@___asan_gen_.472 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 3039, i32 4 }
@___asan_gen_.475 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 3079, i32 4 }
@___asan_gen_.478 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2734, i32 2 }
@___asan_gen_.481 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2740, i32 2 }
@___asan_gen_.484 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2968, i32 3 }
@___asan_gen_.487 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2977, i32 2 }
@___asan_gen_.489 = private unnamed_addr constant [28 x i8] c"../include/linux/wait_bit.h\00", align 1
@___asan_gen_.490 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.489, i32 98, i32 2 }
@___asan_gen_.493 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 4403, i32 2 }
@___asan_gen_.496 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 4412, i32 3 }
@___asan_gen_.499 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 4429, i32 4 }
@___asan_gen_.502 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 4431, i32 4 }
@___asan_gen_.504 = private unnamed_addr constant [23 x i8] c"../include/linux/bio.h\00", align 1
@___asan_gen_.505 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.504, i32 248, i32 2 }
@___asan_gen_.507 = private unnamed_addr constant [30 x i8] c"../include/linux/page-flags.h\00", align 1
@___asan_gen_.508 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.507, i32 678, i32 1 }
@___asan_gen_.511 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 4146, i32 3 }
@___asan_gen_.514 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 3962, i32 3 }
@___asan_gen_.517 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 3963, i32 3 }
@___asan_gen_.520 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 3964, i32 3 }
@___asan_gen_.523 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 3965, i32 3 }
@___asan_gen_.526 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 4000, i32 4 }
@___asan_gen_.529 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2845, i32 4 }
@___asan_gen_.532 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 2849, i32 4 }
@___asan_gen_.535 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.561, i32 1152, i32 3 }
@___asan_gen_.537 = private unnamed_addr constant [26 x i8] c"../include/linux/xarray.h\00", align 1
@___asan_gen_.538 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.537, i32 1182, i32 9 }
@___asan_gen_.541 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 5875, i32 2 }
@___asan_gen_.544 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 5881, i32 2 }
@___asan_gen_.547 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 5885, i32 2 }
@___asan_gen_.550 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 5838, i32 2 }
@___asan_gen_.558 = private unnamed_addr constant [39 x i8] c"../include/linux/local_lock_internal.h\00", align 1
@___asan_gen_.559 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.558, i32 36, i32 2 }
@___asan_gen_.561 = private unnamed_addr constant [27 x i8] c"../include/linux/pagemap.h\00", align 1
@___asan_gen_.562 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.561, i32 788, i32 2 }
@___asan_gen_.565 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 6516, i32 2 }
@___asan_gen_.568 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 6707, i32 2 }
@___asan_gen_.569 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.570 = private constant [24 x i8] c"../fs/btrfs/extent_io.c\00", align 1
@___asan_gen_.571 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 7254, i32 2 }
@llvm.compiler.used = appending global [147 x ptr] [ptr @assertfail._entry, ptr @assertfail._entry_ptr, ptr @btrfs_extent_buffer_leak_debug_check._entry, ptr @btrfs_extent_buffer_leak_debug_check._entry_ptr, ptr @btrfs_extent_state_leak_debug_check._entry, ptr @btrfs_extent_state_leak_debug_check._entry_ptr, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @extent_buffer_cache, ptr @.str.3, ptr @.str.4, ptr @extent_state_cache, ptr @.str.5, ptr @btrfs_bioset, ptr @extent_io_tree_init.__key, ptr @.str.6, ptr @.str.7, ptr @file_extent_tree_class, ptr @.str.8, ptr @leak_lock, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @alloc_extent_buffer._rs, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @states, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @alloc_extent_state.__key, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @repair_io_failure._rs, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.123, ptr @.str.124, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133], section "llvm.metadata"
@0 = internal global [144 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @btrfs_extent_buffer_leak_debug_check._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.302 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.151 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.151 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.151 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.151 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @extent_buffer_cache to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.152 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.154 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.160 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @extent_state_cache to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.161 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.166 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @btrfs_bioset to i32), i32 604, i32 736, i32 ptrtoint (ptr @___asan_gen_.167 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @extent_io_tree_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.332 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.178 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @file_extent_tree_class to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.179 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.181 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.184 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @leak_lock to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.193 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.196 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 94, i32 128, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.241 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.250 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.256 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.262 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alloc_extent_buffer._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.280 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @assertfail._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.302 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.298 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.298 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.298 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.298 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @states to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.299 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.301 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @btrfs_extent_state_leak_debug_check._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.302 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.310 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.310 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.310 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.319 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.319 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.322 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @alloc_extent_state.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.332 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.343 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @repair_io_failure._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.385 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 81, i32 128, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 83, i32 128, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.412 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.430 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.439 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.445 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.448 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.469 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.478 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.481 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.499 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.517 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.547 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.568 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_extent_buffer_leak_debug_check(ptr noundef %fs_info) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %allocated_ebs = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 190
  %0 = ptrtoint ptr %allocated_ebs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %allocated_ebs, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %do.body1

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.body1:                                         ; preds = %entry
  %eb_leak_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 189
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %eb_leak_lock) #14
  %2 = ptrtoint ptr %allocated_ebs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %allocated_ebs, align 4
  %cmp.i.not32 = icmp eq ptr %3, %allocated_ebs
  br i1 %cmp.i.not32, label %do.body1.while.end_crit_edge, label %do.body1.while.body_crit_edge

do.body1.while.body_crit_edge:                    ; preds = %do.body1
  br label %while.body

do.body1.while.end_crit_edge:                     ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body:                                       ; preds = %list_del.exit.while.body_crit_edge, %do.body1.while.body_crit_edge
  %4 = phi ptr [ %30, %list_del.exit.while.body_crit_edge ], [ %3, %do.body1.while.body_crit_edge ]
  %add.ptr = getelementptr i8, ptr %4, i32 -260
  %5 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %add.ptr, align 8
  %len = getelementptr i8, ptr %4, i32 -252
  %7 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %len, align 8
  %refs = getelementptr i8, ptr %4, i32 -196
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refs, i32 noundef 4) #14
  %9 = ptrtoint ptr %refs to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %refs, align 4
  %bflags = getelementptr i8, ptr %4, i32 -248
  %11 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %bflags, align 4
  %pages.i = getelementptr i8, ptr %4, i32 -72
  %13 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %pages.i, align 4
  %call.i = tail call ptr @page_address(ptr noundef %14) #14
  %15 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %add.ptr, align 8
  %conv.i30 = trunc i64 %16 to i32
  %and.i = and i32 %conv.i30, 4095
  %add.ptr.i = getelementptr i8, ptr %call.i, i32 %and.i
  %owner.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i, i32 0, i32 6
  %17 = ptrtoint ptr %owner.i to i32
  call void @__asan_loadN_noabort(i32 %17, i32 8)
  %18 = load i64, ptr %owner.i, align 1
  %19 = tail call i64 @llvm.bswap.i64(i64 %18) #14
  %call17 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str, i64 noundef %6, i32 noundef %8, i32 noundef %10, i32 noundef %12, i64 noundef %19) #17
  %call.i.i31 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %4) #14
  br i1 %call.i.i31, label %if.end.i.i, label %while.body.list_del.exit_crit_edge

while.body.list_del.exit_crit_edge:               ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %list_del.exit

if.end.i.i:                                       ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  %20 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %prev.i.i, align 4
  %22 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %4, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %21, ptr %prev1.i.i.i, align 4
  %25 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %23, ptr %21, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %while.body.list_del.exit_crit_edge
  %26 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr inttoptr (i32 256 to ptr), ptr %4, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  %27 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %28 = load ptr, ptr @extent_buffer_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %28, ptr noundef %add.ptr) #14
  %29 = ptrtoint ptr %allocated_ebs to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile ptr, ptr %allocated_ebs, align 4
  %cmp.i.not = icmp eq ptr %30, %allocated_ebs
  br i1 %cmp.i.not, label %list_del.exit.while.end_crit_edge, label %list_del.exit.while.body_crit_edge

list_del.exit.while.body_crit_edge:               ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

list_del.exit.while.end_crit_edge:                ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %list_del.exit.while.end_crit_edge, %do.body1.while.end_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %eb_leak_lock, i32 noundef %call2) #14
  br label %cleanup

cleanup:                                          ; preds = %while.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_free(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @submit_one_bio(ptr noundef %bio, i32 noundef %mirror_num, i32 noundef %bio_flags) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %bi_private = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 11
  %0 = ptrtoint ptr %bi_private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bi_private, align 4
  store ptr null, ptr %bi_private, align 4
  %bi_size = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 8, i32 1
  %2 = ptrtoint ptr %bi_size to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bi_size, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %cond.false, label %cond.end, !prof !319

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.3, i32 noundef 176) #18
  unreachable

cond.end:                                         ; preds = %entry
  %private_data = getelementptr inbounds %struct.extent_io_tree, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %private_data, align 8
  %location.i.i = getelementptr i8, ptr %5, i32 -860
  %6 = ptrtoint ptr %location.i.i to i32
  call void @__asan_loadN_noabort(i32 %6, i32 8)
  %7 = load i64, ptr %location.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %7)
  %tobool.not.i.i = icmp eq i64 %7, 0
  br i1 %tobool.not.i.i, label %cond.end.if.then.i.i_crit_edge, label %lor.lhs.false.i.i

cond.end.if.then.i.i_crit_edge:                   ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i

lor.lhs.false.i.i:                                ; preds = %cond.end
  %type.i.i = getelementptr i8, ptr %5, i32 -852
  %8 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %9)
  %cmp.i.i = icmp eq i8 %9, -124
  br i1 %cmp.i.i, label %lor.lhs.false.i.i.if.then.i.i_crit_edge, label %lor.lhs.false.i.i.is_data_inode.exit_crit_edge

lor.lhs.false.i.i.is_data_inode.exit_crit_edge:   ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %is_data_inode.exit

lor.lhs.false.i.i.if.then.i.i_crit_edge:          ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i

if.then.i.i:                                      ; preds = %lor.lhs.false.i.i.if.then.i.i_crit_edge, %cond.end.if.then.i.i_crit_edge
  %i_ino.i.i = getelementptr i8, ptr %5, i32 40
  %10 = ptrtoint ptr %i_ino.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %i_ino.i.i, align 8
  %conv3.i.i = zext i32 %11 to i64
  br label %is_data_inode.exit

is_data_inode.exit:                               ; preds = %if.then.i.i, %lor.lhs.false.i.i.is_data_inode.exit_crit_edge
  %ino.0.i.i = phi i64 [ %conv3.i.i, %if.then.i.i ], [ %7, %lor.lhs.false.i.i.is_data_inode.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %ino.0.i.i)
  %cmp.i.not = icmp eq i64 %ino.0.i.i, 1
  br i1 %cmp.i.not, label %if.else, label %if.then

if.then:                                          ; preds = %is_data_inode.exit
  call void @__sanitizer_cov_trace_pc() #16
  %call5 = tail call zeroext i8 @btrfs_submit_data_bio(ptr noundef %5, ptr noundef %bio, i32 noundef %mirror_num, i32 noundef %bio_flags) #14
  br label %if.end

if.else:                                          ; preds = %is_data_inode.exit
  call void @__sanitizer_cov_trace_pc() #16
  %call7 = tail call zeroext i8 @btrfs_submit_metadata_bio(ptr noundef %5, ptr noundef %bio, i32 noundef %mirror_num, i32 noundef %bio_flags) #14
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %ret.0 = phi i8 [ %call5, %if.then ], [ %call7, %if.else ]
  %call8 = tail call i32 @blk_status_to_errno(i8 noundef zeroext %ret.0) #14
  ret i32 %call8
}

; Function Attrs: cold inlinehint noreturn nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @assertfail(ptr noundef %expr, i32 noundef %line) unnamed_addr #4 align 64 {
entry:
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.41, ptr noundef %expr, ptr noundef nonnull @.str.2, i32 noundef %line) #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/ctree.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3492, 0\0A.popsection", ""() #14, !srcloc !320
  unreachable
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i8 @btrfs_submit_data_bio(ptr noundef, ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i8 @btrfs_submit_metadata_bio(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @blk_status_to_errno(i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local i32 @extent_state_cache_init() local_unnamed_addr #5 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.4, i32 noundef 104, i32 noundef 0, i32 noundef 1048576, ptr noundef null) #14
  store ptr %call, ptr @extent_state_cache, align 4
  %tobool.not = icmp eq ptr %call, null
  %. = select i1 %tobool.not, i32 -12, i32 0
  ret i32 %.
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmem_cache_create(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local i32 @extent_io_init() local_unnamed_addr #5 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str.5, i32 noundef 272, i32 noundef 0, i32 noundef 1048576, ptr noundef null) #14
  store ptr %call, ptr @extent_buffer_cache, align 4
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @bioset_init(ptr noundef nonnull @btrfs_bioset, i32 noundef 2, i32 noundef 96, i32 noundef 1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.end4, label %if.end.free_buffer_cache_crit_edge

if.end.free_buffer_cache_crit_edge:               ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %free_buffer_cache

if.end4:                                          ; preds = %if.end
  %call5 = tail call i32 @bioset_integrity_create(ptr noundef nonnull @btrfs_bioset, i32 noundef 2) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end4.return_crit_edge, label %free_bioset

if.end4.return_crit_edge:                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

free_bioset:                                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @bioset_exit(ptr noundef nonnull @btrfs_bioset) #14
  br label %free_buffer_cache

free_buffer_cache:                                ; preds = %free_bioset, %if.end.free_buffer_cache_crit_edge
  %0 = load ptr, ptr @extent_buffer_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %0) #14
  store ptr null, ptr @extent_buffer_cache, align 4
  br label %return

return:                                           ; preds = %free_buffer_cache, %if.end4.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ -12, %free_buffer_cache ], [ -12, %entry.return_crit_edge ], [ 0, %if.end4.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bioset_init(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bioset_integrity_create(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bioset_exit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @extent_state_cache_exit() local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr @states, align 4
  %cmp.i.not13.i = icmp eq ptr %0, @states
  br i1 %cmp.i.not13.i, label %entry.btrfs_extent_state_leak_debug_check.exit_crit_edge, label %entry.while.body.i_crit_edge

entry.while.body.i_crit_edge:                     ; preds = %entry
  br label %while.body.i

entry.btrfs_extent_state_leak_debug_check.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_extent_state_leak_debug_check.exit

while.body.i:                                     ; preds = %list_del.exit.i.while.body.i_crit_edge, %entry.while.body.i_crit_edge
  %1 = phi ptr [ %22, %list_del.exit.i.while.body.i_crit_edge ], [ %0, %entry.while.body.i_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %1, i32 -92
  %2 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %add.ptr.i, align 8
  %end.i = getelementptr i8, ptr %1, i32 -84
  %4 = ptrtoint ptr %end.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %end.i, align 8
  %state2.i = getelementptr i8, ptr %1, i32 -8
  %6 = ptrtoint ptr %state2.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %state2.i, align 4
  %rb_node.i.i = getelementptr i8, ptr %1, i32 -76
  %8 = ptrtoint ptr %rb_node.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %rb_node.i.i, align 8
  %10 = ptrtoint ptr %rb_node.i.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %10)
  %cmp.i12.i = icmp ne i32 %9, %10
  %conv.i = zext i1 %cmp.i12.i to i32
  %refs.i = getelementptr i8, ptr %1, i32 -12
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refs.i, i32 noundef 4) #14
  %11 = ptrtoint ptr %refs.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %refs.i, align 4
  %call5.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.44, i64 noundef %3, i64 noundef %5, i32 noundef %7, i32 noundef %conv.i, i32 noundef %12) #17
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %1) #14
  br i1 %call.i.i.i, label %if.end.i.i.i, label %while.body.i.list_del.exit.i_crit_edge

while.body.i.list_del.exit.i_crit_edge:           ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  %13 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %prev.i.i.i, align 4
  %15 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %1, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %14, ptr %prev1.i.i.i.i, align 4
  %18 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %16, ptr %14, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %while.body.i.list_del.exit.i_crit_edge
  %19 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr inttoptr (i32 256 to ptr), ptr %1, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  %20 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  %21 = load ptr, ptr @extent_state_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %21, ptr noundef %add.ptr.i) #14
  %22 = load volatile ptr, ptr @states, align 4
  %cmp.i.not.i = icmp eq ptr %22, @states
  br i1 %cmp.i.not.i, label %list_del.exit.i.btrfs_extent_state_leak_debug_check.exit_crit_edge, label %list_del.exit.i.while.body.i_crit_edge

list_del.exit.i.while.body.i_crit_edge:           ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i

list_del.exit.i.btrfs_extent_state_leak_debug_check.exit_crit_edge: ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_extent_state_leak_debug_check.exit

btrfs_extent_state_leak_debug_check.exit:         ; preds = %list_del.exit.i.btrfs_extent_state_leak_debug_check.exit_crit_edge, %entry.btrfs_extent_state_leak_debug_check.exit_crit_edge
  %23 = load ptr, ptr @extent_state_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %23) #14
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local void @extent_io_exit() local_unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @rcu_barrier() #14
  %0 = load ptr, ptr @extent_buffer_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %0) #14
  tail call void @bioset_exit(ptr noundef nonnull @btrfs_bioset) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_barrier() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @extent_io_tree_init(ptr noundef %fs_info, ptr noundef %tree, i32 noundef %owner, ptr noundef %private_data) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info1 = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 1
  %0 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %fs_info, ptr %fs_info1, align 4
  %1 = ptrtoint ptr %tree to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr null, ptr %tree, align 8
  %dirty_bytes = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 3
  %2 = ptrtoint ptr %dirty_bytes to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 0, ptr %dirty_bytes, align 8
  %lock = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 6
  tail call void @__raw_spin_lock_init(ptr noundef %lock, ptr noundef nonnull @.str.6, ptr noundef nonnull @extent_io_tree_init.__key, i16 noundef signext 3) #14
  %private_data2 = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 2
  %3 = ptrtoint ptr %private_data2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %private_data, ptr %private_data2, align 8
  %conv = trunc i32 %owner to i8
  %owner3 = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 5
  %4 = ptrtoint ptr %owner3 to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %conv, ptr %owner3, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %owner)
  %cmp = icmp eq i32 %owner, 8
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %dep_map = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 6, i32 0, i32 0, i32 4
  %wait_type_inner = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 6, i32 0, i32 0, i32 4, i32 4
  %5 = ptrtoint ptr %wait_type_inner to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %wait_type_inner, align 1
  tail call void @lockdep_init_map_type(ptr noundef %dep_map, ptr noundef nonnull @.str.7, ptr noundef nonnull @file_extent_tree_class, i32 noundef 0, i8 noundef zeroext %6, i8 noundef zeroext 0, i8 noundef zeroext 0) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @extent_io_tree_release(ptr noundef %tree) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %lock = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %lock) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !321
  %0 = ptrtoint ptr %tree to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %tree, align 8
  %cmp.not30 = icmp eq ptr %1, null
  br i1 %cmp.not30, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body:                                       ; preds = %cond.end.while.body_crit_edge, %entry.while.body_crit_edge
  %call = tail call ptr @rb_first(ptr noundef %tree) #14
  tail call void @rb_erase(ptr noundef %call, ptr noundef %tree) #14
  %2 = ptrtoint ptr %call to i32
  %3 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %2, ptr %call, align 8
  %head.i = getelementptr i8, ptr %call, i32 56
  %4 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %head.i, align 4
  %cmp.i.i.not = icmp eq ptr %5, %head.i
  br i1 %cmp.i.i.not, label %cond.end, label %cond.false, !prof !322

cond.false:                                       ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.8, i32 noundef 322) #18
  unreachable

cond.end:                                         ; preds = %while.body
  %add.ptr = getelementptr i8, ptr %call, i32 -16
  tail call void @free_extent_state(ptr noundef %add.ptr)
  tail call void @__might_resched(ptr noundef nonnull @.str.2, i32 noundef 325, i32 noundef 1) #14
  %call19 = tail call i32 @__cond_resched_lock(ptr noundef %lock) #14
  %6 = ptrtoint ptr %tree to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %tree, align 8
  %cmp.not = icmp eq ptr %7, null
  br i1 %cmp.not, label %cond.end.while.end_crit_edge, label %cond.end.while.body_crit_edge

cond.end.while.body_crit_edge:                    ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

cond.end.while.end_crit_edge:                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %cond.end.while.end_crit_edge, %entry.while.end_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %lock) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rb_first(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rb_erase(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @free_extent_state(ptr noundef %state) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %state, null
  br i1 %tobool.not, label %entry.if.end24_crit_edge, label %if.end

entry.if.end24_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end24

if.end:                                           ; preds = %entry
  %refs = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 4
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refs, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !323
  tail call void @llvm.prefetch.p0(ptr %refs, i32 1, i32 3, i32 1) #14
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs, ptr %refs, i32 1, ptr elementtype(i32) %refs) #14, !srcloc !324
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.then1, label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %.not.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i, label %if.end5.i.i.i.if.end24_crit_edge, label %if.then10.i.i.i, !prof !322

if.end5.i.i.i.if.end24_crit_edge:                 ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end24

if.then10.i.i.i:                                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @refcount_warn_saturate(ptr noundef %refs, i32 noundef 3) #14
  br label %if.end24

if.then1:                                         ; preds = %if.end
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !325
  %rb_node.i = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 2
  %1 = ptrtoint ptr %rb_node.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %rb_node.i, align 8
  %3 = ptrtoint ptr %rb_node.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %3)
  %cmp.i.not = icmp eq i32 %2, %3
  br i1 %cmp.i.not, label %if.then1.if.end17_crit_edge, label %do.end, !prof !322

if.then1.if.end17_crit_edge:                      ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end17

do.end:                                           ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 357, i32 noundef 9, ptr noundef null) #14
  br label %if.end17

if.end17:                                         ; preds = %do.end, %if.then1.if.end17_crit_edge
  %leak_list = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 7
  %call3.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @leak_lock) #14
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %leak_list) #14
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end17.btrfs_leak_debug_del.exit_crit_edge

if.end17.btrfs_leak_debug_del.exit_crit_edge:     ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_leak_debug_del.exit

if.end.i.i.i:                                     ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #16
  %prev.i.i.i = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 7, i32 1
  %4 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prev.i.i.i, align 4
  %6 = ptrtoint ptr %leak_list to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %leak_list, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %prev1.i.i.i.i, align 4
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %7, ptr %5, align 4
  br label %btrfs_leak_debug_del.exit

btrfs_leak_debug_del.exit:                        ; preds = %if.end.i.i.i, %if.end17.btrfs_leak_debug_del.exit_crit_edge
  %10 = ptrtoint ptr %leak_list to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 256 to ptr), ptr %leak_list, align 4
  %prev.i.i = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 7, i32 1
  %11 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @leak_lock, i32 noundef %call3.i) #14
  %12 = tail call ptr @llvm.returnaddress(i32 0)
  %13 = ptrtoint ptr %12 to i32
  tail call fastcc void @trace_free_extent_state(ptr noundef nonnull %state, i32 noundef %13)
  %14 = load ptr, ptr @extent_state_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %14, ptr noundef nonnull %state) #14
  br label %if.end24

if.end24:                                         ; preds = %btrfs_leak_debug_del.exit, %if.then10.i.i.i, %if.end5.i.i.i.if.end24_crit_edge, %entry.if.end24_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched_lock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_free_extent_state(ptr noundef %state, i32 noundef %IP) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_free_extent_state, i32 0, i32 1), ptr blockaddress(@trace_free_extent_state, %do.body)) #14
          to label %if.end48 [label %do.body], !srcloc !326

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !322

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.49, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  %9 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !327
  %call42 = tail call i32 @__traceiter_free_extent_state(ptr noundef null, ptr noundef %state, i32 noundef %IP) #14
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !328
  %13 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !322

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.49, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !329
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_free_extent_state, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_free_extent_state, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_free_extent_state.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @trace_free_extent_state.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.47, i32 noundef 1377, ptr noundef nonnull @.str.48) #14
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !330
  %31 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #7

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__clear_extent_bit(ptr noundef %tree, i64 noundef %start, i64 noundef %end, i32 noundef %bits, i32 noundef %wake, i32 noundef %delete, ptr noundef %cached_state, i32 noundef %mask, ptr noundef %changeset) local_unnamed_addr #0 align 64 {
entry:
  %bits.addr = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %bits.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %bits, ptr %bits.addr, align 4
  %private_data.i = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 2
  %1 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %private_data.i, align 8
  %tobool.not.i = icmp eq ptr %2, null
  br i1 %tobool.not.i, label %entry.__btrfs_debug_check_extent_io_range.exit_crit_edge, label %lor.lhs.false.i

entry.__btrfs_debug_check_extent_io_range.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %__btrfs_debug_check_extent_io_range.exit

lor.lhs.false.i:                                  ; preds = %entry
  %location.i.i.i = getelementptr i8, ptr %2, i32 -860
  %3 = ptrtoint ptr %location.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %3, i32 8)
  %4 = load i64, ptr %location.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %4)
  %tobool.not.i.i.i = icmp eq i64 %4, 0
  br i1 %tobool.not.i.i.i, label %lor.lhs.false.i.if.then.i.i.i_crit_edge, label %lor.lhs.false.i.i.i

lor.lhs.false.i.if.then.i.i.i_crit_edge:          ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i

lor.lhs.false.i.i.i:                              ; preds = %lor.lhs.false.i
  %type.i.i.i = getelementptr i8, ptr %2, i32 -852
  %5 = ptrtoint ptr %type.i.i.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %6)
  %cmp.i.i.i = icmp eq i8 %6, -124
  br i1 %cmp.i.i.i, label %lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge, label %lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge

lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge: ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %is_data_inode.exit.i

lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge:      ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge, %lor.lhs.false.i.if.then.i.i.i_crit_edge
  %i_ino.i.i.i = getelementptr i8, ptr %2, i32 40
  %7 = ptrtoint ptr %i_ino.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %i_ino.i.i.i, align 8
  %conv3.i.i.i = zext i32 %8 to i64
  br label %is_data_inode.exit.i

is_data_inode.exit.i:                             ; preds = %if.then.i.i.i, %lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge
  %ino.0.i.i.i = phi i64 [ %conv3.i.i.i, %if.then.i.i.i ], [ %4, %lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %ino.0.i.i.i)
  %cmp.i.not.i = icmp eq i64 %ino.0.i.i.i, 1
  br i1 %cmp.i.not.i, label %is_data_inode.exit.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, label %if.end.i

is_data_inode.exit.i.__btrfs_debug_check_extent_io_range.exit_crit_edge: ; preds = %is_data_inode.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__btrfs_debug_check_extent_io_range.exit

if.end.i:                                         ; preds = %is_data_inode.exit.i
  %call1.i = tail call fastcc i64 @i_size_read(ptr noundef nonnull %2) #14
  call void @__sanitizer_cov_trace_const_cmp8(i64 4096, i64 %end)
  %cmp.i = icmp ult i64 %end, 4096
  %rem.i = and i64 %end, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %rem.i)
  %cmp2.i = icmp ne i64 %rem.i, 0
  %or.cond.not.i = or i1 %cmp.i, %cmp2.i
  %sub.i = add i64 %call1.i, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %sub.i, i64 %end)
  %cmp4.not.i = icmp eq i64 %sub.i, %end
  %or.cond32.i = select i1 %or.cond.not.i, i1 true, i1 %cmp4.not.i
  br i1 %or.cond32.i, label %if.end.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, label %do.body.i

if.end.i.__btrfs_debug_check_extent_io_range.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__btrfs_debug_check_extent_io_range.exit

do.body.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__btrfs_debug_check_extent_io_range.__UNIQUE_ID_ddebug945, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@__clear_extent_bit, %do.body11.i)) #14
          to label %__btrfs_debug_check_extent_io_range.exit [label %do.body11.i], !srcloc !326

do.body11.i:                                      ; preds = %do.body.i
  %call12.i = tail call i32 @___ratelimit(ptr noundef nonnull @__btrfs_debug_check_extent_io_range._rs, ptr noundef nonnull @.str.50) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12.i)
  %tobool13.not.i = icmp eq i32 %call12.i, 0
  br i1 %tobool13.not.i, label %do.body11.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, label %if.then14.i

do.body11.i.__btrfs_debug_check_extent_io_range.exit_crit_edge: ; preds = %do.body11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__btrfs_debug_check_extent_io_range.exit

if.then14.i:                                      ; preds = %do.body11.i
  %add.ptr.i.i = getelementptr i8, ptr %2, i32 -864
  %9 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %add.ptr.i.i, align 8
  %fs_info.i = getelementptr inbounds %struct.btrfs_root, ptr %10, i32 0, i32 8
  %11 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %fs_info.i, align 8
  %13 = ptrtoint ptr %location.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %13, i32 8)
  %14 = load i64, ptr %location.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %14)
  %tobool.not.i.i = icmp eq i64 %14, 0
  br i1 %tobool.not.i.i, label %if.then14.i.if.then.i.i_crit_edge, label %lor.lhs.false.i.i

if.then14.i.if.then.i.i_crit_edge:                ; preds = %if.then14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i

lor.lhs.false.i.i:                                ; preds = %if.then14.i
  %type.i.i = getelementptr i8, ptr %2, i32 -852
  %15 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %16)
  %cmp.i34.i = icmp eq i8 %16, -124
  br i1 %cmp.i34.i, label %lor.lhs.false.i.i.if.then.i.i_crit_edge, label %lor.lhs.false.i.i.btrfs_ino.exit.i_crit_edge

lor.lhs.false.i.i.btrfs_ino.exit.i_crit_edge:     ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_ino.exit.i

lor.lhs.false.i.i.if.then.i.i_crit_edge:          ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i

if.then.i.i:                                      ; preds = %lor.lhs.false.i.i.if.then.i.i_crit_edge, %if.then14.i.if.then.i.i_crit_edge
  %i_ino.i.i = getelementptr i8, ptr %2, i32 40
  %17 = ptrtoint ptr %i_ino.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %i_ino.i.i, align 8
  %conv3.i.i = zext i32 %18 to i64
  br label %btrfs_ino.exit.i

btrfs_ino.exit.i:                                 ; preds = %if.then.i.i, %lor.lhs.false.i.i.btrfs_ino.exit.i_crit_edge
  %ino.0.i.i = phi i64 [ %conv3.i.i, %if.then.i.i ], [ %14, %lor.lhs.false.i.i.btrfs_ino.exit.i_crit_edge ]
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %12, ptr noundef nonnull @.str.52, ptr noundef nonnull @__func__.__clear_extent_bit, i64 noundef %ino.0.i.i, i64 noundef %call1.i, i64 noundef %start, i64 noundef %end) #17
  br label %__btrfs_debug_check_extent_io_range.exit

__btrfs_debug_check_extent_io_range.exit:         ; preds = %btrfs_ino.exit.i, %do.body11.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, %do.body.i, %if.end.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, %is_data_inode.exit.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, %entry.__btrfs_debug_check_extent_io_range.exit_crit_edge
  %sub = sub i64 1, %start
  %add = add i64 %sub, %end
  %19 = ptrtoint ptr %bits.addr to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %bits.addr, align 4
  tail call fastcc void @trace_btrfs_clear_extent_bit(ptr noundef %tree, i64 noundef %start, i64 noundef %add, i32 noundef %20)
  %and = and i32 %20, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %__btrfs_debug_check_extent_io_range.exit.if.end_crit_edge, label %if.then

__btrfs_debug_check_extent_io_range.exit.if.end_crit_edge: ; preds = %__btrfs_debug_check_extent_io_range.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %__btrfs_debug_check_extent_io_range.exit
  call void @__sanitizer_cov_trace_pc() #16
  %or = or i32 %20, 2048
  %21 = ptrtoint ptr %bits.addr to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %or, ptr %bits.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %__btrfs_debug_check_extent_io_range.exit.if.end_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %delete)
  %tobool1.not = icmp eq i32 %delete, 0
  br i1 %tobool1.not, label %if.end.if.end4_crit_edge, label %if.then2

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %22 = ptrtoint ptr %bits.addr to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %bits.addr, align 4
  %or3 = or i32 %23, -41217
  store i32 %or3, ptr %bits.addr, align 4
  br label %if.end4

if.end4:                                          ; preds = %if.then2, %if.end.if.end4_crit_edge
  %24 = ptrtoint ptr %bits.addr to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %bits.addr, align 4
  %and5 = and i32 %25, 68
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5)
  %tobool6.not = icmp eq i32 %and5, 0
  %and.i = and i32 %mask, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i253.not = icmp eq i32 %and.i, 0
  %lock = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 6
  br label %again

again:                                            ; preds = %again.backedge, %if.end4
  %prealloc.0 = phi ptr [ null, %if.end4 ], [ %prealloc.4, %again.backedge ]
  %cached_state.addr.0 = phi ptr [ %cached_state, %if.end4 ], [ %cached_state.addr.3.ph, %again.backedge ]
  %start.addr.0 = phi i64 [ %start, %if.end4 ], [ %start.addr.2, %again.backedge ]
  %tobool9.not = icmp ne ptr %prealloc.0, null
  %brmerge = or i1 %tobool9.not, %tobool.i253.not
  br i1 %brmerge, label %again.if.end12_crit_edge, label %if.then10

again.if.end12_crit_edge:                         ; preds = %again
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12

if.then10:                                        ; preds = %again
  call void @__sanitizer_cov_trace_pc() #16
  %call11 = call fastcc ptr @alloc_extent_state(i32 noundef %mask)
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %again.if.end12_crit_edge
  %prealloc.1 = phi ptr [ %prealloc.0, %again.if.end12_crit_edge ], [ %call11, %if.then10 ]
  call void @_raw_spin_lock(ptr noundef %lock) #14
  %tobool13.not = icmp eq ptr %cached_state.addr.0, null
  br i1 %tobool13.not, label %if.end12.if.end34_crit_edge, label %if.then14

if.end12.if.end34_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end34

if.then14:                                        ; preds = %if.end12
  %26 = ptrtoint ptr %cached_state.addr.0 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %cached_state.addr.0, align 4
  br i1 %tobool6.not, label %if.then14.if.end17_crit_edge, label %if.then16

if.then14.if.end17_crit_edge:                     ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end17

if.then16:                                        ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #16
  %28 = ptrtoint ptr %cached_state.addr.0 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr null, ptr %cached_state.addr.0, align 4
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %if.then14.if.end17_crit_edge
  %cached_state.addr.1 = phi ptr [ null, %if.then16 ], [ %cached_state.addr.0, %if.then14.if.end17_crit_edge ]
  %tobool18.not = icmp eq ptr %27, null
  br i1 %tobool18.not, label %if.end17.if.end30_crit_edge, label %land.lhs.true19

if.end17.if.end30_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30

land.lhs.true19:                                  ; preds = %if.end17
  %rb_node.i = getelementptr inbounds %struct.extent_state, ptr %27, i32 0, i32 2
  %29 = ptrtoint ptr %rb_node.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %rb_node.i, align 8
  %31 = ptrtoint ptr %rb_node.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %30, i32 %31)
  %cmp.i254.not = icmp eq i32 %30, %31
  br i1 %cmp.i254.not, label %land.lhs.true19.if.end30_crit_edge, label %land.lhs.true21

land.lhs.true19.if.end30_crit_edge:               ; preds = %land.lhs.true19
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30

land.lhs.true21:                                  ; preds = %land.lhs.true19
  %32 = ptrtoint ptr %27 to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %27, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %33, i64 %start.addr.0)
  %cmp.not = icmp ugt i64 %33, %start.addr.0
  br i1 %cmp.not, label %land.lhs.true21.if.end30_crit_edge, label %land.lhs.true23

land.lhs.true21.if.end30_crit_edge:               ; preds = %land.lhs.true21
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30

land.lhs.true23:                                  ; preds = %land.lhs.true21
  %end24 = getelementptr inbounds %struct.extent_state, ptr %27, i32 0, i32 1
  %34 = ptrtoint ptr %end24 to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %end24, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %35, i64 %start.addr.0)
  %cmp25 = icmp ugt i64 %35, %start.addr.0
  br i1 %cmp25, label %if.then26, label %land.lhs.true23.if.end30_crit_edge

land.lhs.true23.if.end30_crit_edge:               ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30

if.then26:                                        ; preds = %land.lhs.true23
  br i1 %tobool6.not, label %if.then26.hit_next.preheader_crit_edge, label %if.then28

if.then26.hit_next.preheader_crit_edge:           ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #16
  br label %hit_next.preheader

if.then28:                                        ; preds = %if.then26
  %refs = getelementptr inbounds %struct.extent_state, ptr %27, i32 0, i32 4
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refs, i32 noundef 4) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !323
  call void @llvm.prefetch.p0(ptr %refs, i32 1, i32 3, i32 1) #14
  %36 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs, ptr %refs, i32 1, ptr elementtype(i32) %refs) #14, !srcloc !324
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %36, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i = icmp slt i32 %asmresult.i.i.i.i.i, 2
  br i1 %cmp.i.i, label %if.then3.i.i, label %if.then28.hit_next.preheader_crit_edge, !prof !319

if.then28.hit_next.preheader_crit_edge:           ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #16
  br label %hit_next.preheader

if.then3.i.i:                                     ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #16
  call void @refcount_warn_saturate(ptr noundef %refs, i32 noundef 4) #14
  br label %hit_next.preheader

if.end30:                                         ; preds = %land.lhs.true23.if.end30_crit_edge, %land.lhs.true21.if.end30_crit_edge, %land.lhs.true19.if.end30_crit_edge, %if.end17.if.end30_crit_edge
  br i1 %tobool6.not, label %if.end30.if.end34_crit_edge, label %if.then32

if.end30.if.end34_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end34

if.then32:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  call void @free_extent_state(ptr noundef %27)
  br label %if.end34

if.end34:                                         ; preds = %if.then32, %if.end30.if.end34_crit_edge, %if.end12.if.end34_crit_edge
  %cached_state.addr.2 = phi ptr [ %cached_state.addr.1, %if.then32 ], [ %cached_state.addr.1, %if.end30.if.end34_crit_edge ], [ null, %if.end12.if.end34_crit_edge ]
  %37 = ptrtoint ptr %tree to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %tree, align 4
  %tobool.not78.i.i.i = icmp eq ptr %38, null
  br i1 %tobool.not78.i.i.i, label %if.end34.out_crit_edge, label %if.end34.while.body.i.i.i_crit_edge

if.end34.while.body.i.i.i_crit_edge:              ; preds = %if.end34
  br label %while.body.i.i.i

if.end34.out_crit_edge:                           ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

while.body.i.i.i:                                 ; preds = %if.end5.i.i.i.while.body.i.i.i_crit_edge, %if.end34.while.body.i.i.i_crit_edge
  %39 = phi ptr [ %45, %if.end5.i.i.i.while.body.i.i.i_crit_edge ], [ %38, %if.end34.while.body.i.i.i_crit_edge ]
  %add.ptr.i.i.i = getelementptr i8, ptr %39, i32 -16
  %40 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %add.ptr.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %41, i64 %start.addr.0)
  %cmp.i.i.i255 = icmp ugt i64 %41, %start.addr.0
  br i1 %cmp.i.i.i255, label %if.then.i.i.i256, label %if.else.i.i.i

if.then.i.i.i256:                                 ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_left.i.i.i = getelementptr inbounds %struct.rb_node, ptr %39, i32 0, i32 2
  br label %if.end5.i.i.i

if.else.i.i.i:                                    ; preds = %while.body.i.i.i
  %end.i.i.i = getelementptr i8, ptr %39, i32 -8
  %42 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %end.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %43, i64 %start.addr.0)
  %cmp2.i.i.i = icmp ult i64 %43, %start.addr.0
  br i1 %cmp2.i.i.i, label %if.then3.i.i.i, label %if.else.i.i.i.if.end38_crit_edge

if.else.i.i.i.if.end38_crit_edge:                 ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end38

if.then3.i.i.i:                                   ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_right.i.i.i = getelementptr inbounds %struct.rb_node, ptr %39, i32 0, i32 1
  br label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %if.then3.i.i.i, %if.then.i.i.i256
  %n.1.i.i.i = phi ptr [ %rb_left.i.i.i, %if.then.i.i.i256 ], [ %rb_right.i.i.i, %if.then3.i.i.i ]
  %44 = ptrtoint ptr %n.1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %n.1.i.i.i, align 4
  %tobool.not.i.i.i257 = icmp eq ptr %45, null
  br i1 %tobool.not.i.i.i257, label %if.end5.i.i.i.land.rhs.i.i.i_crit_edge, label %if.end5.i.i.i.while.body.i.i.i_crit_edge

if.end5.i.i.i.while.body.i.i.i_crit_edge:         ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.i

if.end5.i.i.i.land.rhs.i.i.i_crit_edge:           ; preds = %if.end5.i.i.i
  br label %land.rhs.i.i.i

land.rhs.i.i.i:                                   ; preds = %while.body18.i.i.i.land.rhs.i.i.i_crit_edge, %if.end5.i.i.i.land.rhs.i.i.i_crit_edge
  %prev.183.i.i.i = phi ptr [ %call.i.i.i, %while.body18.i.i.i.land.rhs.i.i.i_crit_edge ], [ %39, %if.end5.i.i.i.land.rhs.i.i.i_crit_edge ]
  %end16.i.i.i = getelementptr i8, ptr %prev.183.i.i.i, i32 -8
  %46 = ptrtoint ptr %end16.i.i.i to i32
  call void @__asan_load8_noabort(i32 %46)
  %47 = load i64, ptr %end16.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %47, i64 %start.addr.0)
  %cmp17.i.i.i = icmp ult i64 %47, %start.addr.0
  br i1 %cmp17.i.i.i, label %while.body18.i.i.i, label %land.rhs.i.i.i.if.end38_crit_edge

land.rhs.i.i.i.if.end38_crit_edge:                ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end38

while.body18.i.i.i:                               ; preds = %land.rhs.i.i.i
  %call.i.i.i = call ptr @rb_next(ptr noundef nonnull %prev.183.i.i.i) #14
  %tobool15.not.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool15.not.i.i.i, label %while.body18.i.i.i.out_crit_edge, label %while.body18.i.i.i.land.rhs.i.i.i_crit_edge

while.body18.i.i.i.land.rhs.i.i.i_crit_edge:      ; preds = %while.body18.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.i.i.i

while.body18.i.i.i.out_crit_edge:                 ; preds = %while.body18.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end38:                                         ; preds = %land.rhs.i.i.i.if.end38_crit_edge, %if.else.i.i.i.if.end38_crit_edge
  %retval.0.i.i = phi ptr [ %prev.183.i.i.i, %land.rhs.i.i.i.if.end38_crit_edge ], [ %39, %if.else.i.i.i.if.end38_crit_edge ]
  %add.ptr = getelementptr i8, ptr %retval.0.i.i, i32 -16
  br label %hit_next.preheader

hit_next.preheader:                               ; preds = %if.end38, %if.then3.i.i, %if.then28.hit_next.preheader_crit_edge, %if.then26.hit_next.preheader_crit_edge
  %state.0.ph = phi ptr [ %add.ptr, %if.end38 ], [ %27, %if.then3.i.i ], [ %27, %if.then28.hit_next.preheader_crit_edge ], [ %27, %if.then26.hit_next.preheader_crit_edge ]
  %cached_state.addr.3.ph = phi ptr [ %cached_state.addr.2, %if.end38 ], [ %cached_state.addr.1, %if.then3.i.i ], [ %cached_state.addr.1, %if.then28.hit_next.preheader_crit_edge ], [ %cached_state.addr.1, %if.then26.hit_next.preheader_crit_edge ]
  br label %hit_next

hit_next:                                         ; preds = %land.lhs.true156.hit_next_crit_edge, %hit_next.preheader
  %prealloc.2 = phi ptr [ %prealloc.3, %land.lhs.true156.hit_next_crit_edge ], [ %prealloc.1, %hit_next.preheader ]
  %state.0 = phi ptr [ %state.1, %land.lhs.true156.hit_next_crit_edge ], [ %state.0.ph, %hit_next.preheader ]
  %start.addr.1 = phi i64 [ %add152, %land.lhs.true156.hit_next_crit_edge ], [ %start.addr.0, %hit_next.preheader ]
  %48 = ptrtoint ptr %state.0 to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %state.0, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %49, i64 %end)
  %cmp40 = icmp ugt i64 %49, %end
  br i1 %cmp40, label %hit_next.out_crit_edge, label %if.end42

hit_next.out_crit_edge:                           ; preds = %hit_next
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end42:                                         ; preds = %hit_next
  %end43 = getelementptr inbounds %struct.extent_state, ptr %state.0, i32 0, i32 1
  %50 = ptrtoint ptr %end43 to i32
  call void @__asan_load8_noabort(i32 %50)
  %51 = load i64, ptr %end43, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %51, i64 %start.addr.1)
  %cmp44 = icmp ult i64 %51, %start.addr.1
  br i1 %cmp44, label %do.end, label %if.end42.if.end59_crit_edge, !prof !319

if.end42.if.end59_crit_edge:                      ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end59

do.end:                                           ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 770, i32 noundef 9, ptr noundef null) #14
  %52 = ptrtoint ptr %end43 to i32
  call void @__asan_load8_noabort(i32 %52)
  %.pr = load i64, ptr %end43, align 8
  br label %if.end59

if.end59:                                         ; preds = %do.end, %if.end42.if.end59_crit_edge
  %53 = phi i64 [ %.pr, %do.end ], [ %51, %if.end42.if.end59_crit_edge ]
  %state68 = getelementptr inbounds %struct.extent_state, ptr %state.0, i32 0, i32 5
  %54 = ptrtoint ptr %state68 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %state68, align 4
  %56 = ptrtoint ptr %bits.addr to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %bits.addr, align 4
  %and69 = and i32 %57, %55
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and69)
  %tobool70.not = icmp eq i32 %and69, 0
  br i1 %tobool70.not, label %if.then71, label %if.end73

if.then71:                                        ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #16
  %rb_node.i258 = getelementptr inbounds %struct.extent_state, ptr %state.0, i32 0, i32 2
  %call.i = call ptr @rb_next(ptr noundef %rb_node.i258) #14
  %tobool.not.i259 = icmp eq ptr %call.i, null
  %add.ptr.i = getelementptr i8, ptr %call.i, i32 -16
  %retval.0.i = select i1 %tobool.not.i259, ptr null, ptr %add.ptr.i
  br label %next

if.end73:                                         ; preds = %if.end59
  %58 = ptrtoint ptr %state.0 to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %state.0, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %59, i64 %start.addr.1)
  %cmp75 = icmp ult i64 %59, %start.addr.1
  br i1 %cmp75, label %if.then76, label %if.end110

if.then76:                                        ; preds = %if.end73
  %tobool.not.i260 = icmp eq ptr %prealloc.2, null
  br i1 %tobool.not.i260, label %alloc_extent_state_atomic.exit, label %if.then76.do.end97_crit_edge

if.then76.do.end97_crit_edge:                     ; preds = %if.then76
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end97

alloc_extent_state_atomic.exit:                   ; preds = %if.then76
  %call.i261 = call fastcc ptr @alloc_extent_state(i32 noundef 2592) #14
  %tobool79.not = icmp eq ptr %call.i261, null
  br i1 %tobool79.not, label %do.body89, label %alloc_extent_state_atomic.exit.do.end97_crit_edge, !prof !319

alloc_extent_state_atomic.exit.do.end97_crit_edge: ; preds = %alloc_extent_state_atomic.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end97

do.body89:                                        ; preds = %alloc_extent_state_atomic.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 797, 0\0A.popsection", ""() #14, !srcloc !331
  unreachable

do.end97:                                         ; preds = %alloc_extent_state_atomic.exit.do.end97_crit_edge, %if.then76.do.end97_crit_edge
  %prealloc.addr.0.i279 = phi ptr [ %call.i261, %alloc_extent_state_atomic.exit.do.end97_crit_edge ], [ %prealloc.2, %if.then76.do.end97_crit_edge ]
  %call98 = call fastcc i32 @split_state(ptr noundef %tree, ptr noundef %state.0, ptr noundef nonnull %prealloc.addr.0.i279, i64 noundef %start.addr.1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call98)
  %tobool99.not = icmp eq i32 %call98, 0
  br i1 %tobool99.not, label %if.end104.critedge, label %if.then100

if.then100:                                       ; preds = %do.end97
  call void @__sanitizer_cov_trace_pc() #16
  %fs_info.i263 = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 1
  %60 = ptrtoint ptr %fs_info.i263 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %fs_info.i263, align 4
  call void (ptr, ptr, i32, i32, ptr, ...) @__btrfs_panic(ptr noundef %61, ptr noundef nonnull @__func__.extent_io_tree_panic, i32 noundef 689, i32 noundef %call98, ptr noundef nonnull @.str.54) #17
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 689, 0\0A.popsection", ""() #14, !srcloc !332
  unreachable

if.end104.critedge:                               ; preds = %do.end97
  %62 = ptrtoint ptr %end43 to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %end43, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %63, i64 %end)
  %cmp106.not = icmp ugt i64 %63, %end
  br i1 %cmp106.not, label %if.end104.critedge.search_again_crit_edge, label %if.then107

if.end104.critedge.search_again_crit_edge:        ; preds = %if.end104.critedge
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again

if.then107:                                       ; preds = %if.end104.critedge
  call void @__sanitizer_cov_trace_pc() #16
  %call108 = call fastcc ptr @clear_state_bit(ptr noundef %tree, ptr noundef %state.0, ptr noundef nonnull %bits.addr, i32 noundef %wake, ptr noundef %changeset)
  br label %next

if.end110:                                        ; preds = %if.end73
  call void @__sanitizer_cov_trace_cmp8(i64 %59, i64 %end)
  %cmp112.not = icmp ule i64 %59, %end
  call void @__sanitizer_cov_trace_cmp8(i64 %53, i64 %end)
  %cmp115 = icmp ugt i64 %53, %end
  %or.cond = select i1 %cmp112.not, i1 %cmp115, i1 false
  br i1 %or.cond, label %if.then116, label %if.end147

if.then116:                                       ; preds = %if.end110
  %tobool.not.i264 = icmp eq ptr %prealloc.2, null
  br i1 %tobool.not.i264, label %alloc_extent_state_atomic.exit269, label %if.then116.do.end137_crit_edge

if.then116.do.end137_crit_edge:                   ; preds = %if.then116
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end137

alloc_extent_state_atomic.exit269:                ; preds = %if.then116
  %call.i265 = call fastcc ptr @alloc_extent_state(i32 noundef 2592) #14
  %tobool119.not = icmp eq ptr %call.i265, null
  br i1 %tobool119.not, label %do.body129, label %alloc_extent_state_atomic.exit269.do.end137_crit_edge, !prof !319

alloc_extent_state_atomic.exit269.do.end137_crit_edge: ; preds = %alloc_extent_state_atomic.exit269
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end137

do.body129:                                       ; preds = %alloc_extent_state_atomic.exit269
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 820, 0\0A.popsection", ""() #14, !srcloc !333
  unreachable

do.end137:                                        ; preds = %alloc_extent_state_atomic.exit269.do.end137_crit_edge, %if.then116.do.end137_crit_edge
  %prealloc.addr.0.i267283 = phi ptr [ %call.i265, %alloc_extent_state_atomic.exit269.do.end137_crit_edge ], [ %prealloc.2, %if.then116.do.end137_crit_edge ]
  %add138 = add nuw i64 %end, 1
  %call139 = call fastcc i32 @split_state(ptr noundef %tree, ptr noundef %state.0, ptr noundef nonnull %prealloc.addr.0.i267283, i64 noundef %add138)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call139)
  %tobool140.not = icmp eq i32 %call139, 0
  br i1 %tobool140.not, label %if.end142, label %if.then141

if.then141:                                       ; preds = %do.end137
  call void @__sanitizer_cov_trace_pc() #16
  %fs_info.i270 = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 1
  %64 = ptrtoint ptr %fs_info.i270 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %fs_info.i270, align 4
  call void (ptr, ptr, i32, i32, ptr, ...) @__btrfs_panic(ptr noundef %65, ptr noundef nonnull @__func__.extent_io_tree_panic, i32 noundef 689, i32 noundef %call139, ptr noundef nonnull @.str.54) #17
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 689, 0\0A.popsection", ""() #14, !srcloc !332
  unreachable

if.end142:                                        ; preds = %do.end137
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %wake)
  %tobool143.not = icmp eq i32 %wake, 0
  br i1 %tobool143.not, label %if.end142.if.end145_crit_edge, label %if.then144

if.end142.if.end145_crit_edge:                    ; preds = %if.end142
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end145

if.then144:                                       ; preds = %if.end142
  call void @__sanitizer_cov_trace_pc() #16
  %wq = getelementptr inbounds %struct.extent_state, ptr %state.0, i32 0, i32 3
  call void @__wake_up(ptr noundef %wq, i32 noundef 3, i32 noundef 1, ptr noundef null) #14
  br label %if.end145

if.end145:                                        ; preds = %if.then144, %if.end142.if.end145_crit_edge
  %call146 = call fastcc ptr @clear_state_bit(ptr noundef %tree, ptr noundef nonnull %prealloc.addr.0.i267283, ptr noundef nonnull %bits.addr, i32 noundef %wake, ptr noundef %changeset)
  call void @_raw_spin_unlock(ptr noundef %lock) #14
  br label %if.end172

if.end147:                                        ; preds = %if.end110
  call void @__sanitizer_cov_trace_pc() #16
  %call148 = call fastcc ptr @clear_state_bit(ptr noundef %tree, ptr noundef %state.0, ptr noundef nonnull %bits.addr, i32 noundef %wake, ptr noundef %changeset)
  br label %next

next:                                             ; preds = %if.end147, %if.then107, %if.then71
  %prealloc.3 = phi ptr [ null, %if.then107 ], [ %prealloc.2, %if.end147 ], [ %prealloc.2, %if.then71 ]
  %state.1 = phi ptr [ %call108, %if.then107 ], [ %call148, %if.end147 ], [ %retval.0.i, %if.then71 ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %53)
  %cmp149 = icmp eq i64 %53, -1
  br i1 %cmp149, label %next.out_crit_edge, label %if.end151

next.out_crit_edge:                               ; preds = %next
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end151:                                        ; preds = %next
  %add152 = add nuw i64 %53, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %53, i64 %end)
  %cmp153.not = icmp uge i64 %53, %end
  %tobool155.not = icmp eq ptr %state.1, null
  %or.cond252 = select i1 %cmp153.not, i1 true, i1 %tobool155.not
  br i1 %or.cond252, label %if.end151.search_again_crit_edge, label %land.lhs.true156

if.end151.search_again_crit_edge:                 ; preds = %if.end151
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again

land.lhs.true156:                                 ; preds = %if.end151
  %66 = call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i = and i32 %66, -16384
  %67 = inttoptr i32 %and.i.i to ptr
  %68 = ptrtoint ptr %67 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile i32, ptr %67, align 16384
  %70 = and i32 %69, 2
  %tobool.i.not = icmp eq i32 %70, 0
  br i1 %tobool.i.not, label %land.lhs.true156.hit_next_crit_edge, label %land.lhs.true156.search_again_crit_edge

land.lhs.true156.search_again_crit_edge:          ; preds = %land.lhs.true156
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again

land.lhs.true156.hit_next_crit_edge:              ; preds = %land.lhs.true156
  call void @__sanitizer_cov_trace_pc() #16
  br label %hit_next

search_again:                                     ; preds = %land.lhs.true156.search_again_crit_edge, %if.end151.search_again_crit_edge, %if.end104.critedge.search_again_crit_edge
  %prealloc.4 = phi ptr [ %prealloc.3, %land.lhs.true156.search_again_crit_edge ], [ %prealloc.3, %if.end151.search_again_crit_edge ], [ null, %if.end104.critedge.search_again_crit_edge ]
  %start.addr.2 = phi i64 [ %add152, %land.lhs.true156.search_again_crit_edge ], [ %add152, %if.end151.search_again_crit_edge ], [ %start.addr.1, %if.end104.critedge.search_again_crit_edge ]
  call void @__sanitizer_cov_trace_cmp8(i64 %start.addr.2, i64 %end)
  %cmp160 = icmp ugt i64 %start.addr.2, %end
  br i1 %cmp160, label %search_again.out_crit_edge, label %if.end162

search_again.out_crit_edge:                       ; preds = %search_again
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end162:                                        ; preds = %search_again
  call void @_raw_spin_unlock(ptr noundef %lock) #14
  br i1 %tobool.i253.not, label %if.end162.again.backedge_crit_edge, label %if.then165

if.end162.again.backedge_crit_edge:               ; preds = %if.end162
  call void @__sanitizer_cov_trace_pc() #16
  br label %again.backedge

if.then165:                                       ; preds = %if.end162
  call void @__sanitizer_cov_trace_pc() #16
  call void @__might_resched(ptr noundef nonnull @.str.2, i32 noundef 847, i32 noundef 0) #14
  %call.i274 = call i32 @__cond_resched() #14
  br label %again.backedge

again.backedge:                                   ; preds = %if.then165, %if.end162.again.backedge_crit_edge
  br label %again

out:                                              ; preds = %search_again.out_crit_edge, %next.out_crit_edge, %hit_next.out_crit_edge, %while.body18.i.i.i.out_crit_edge, %if.end34.out_crit_edge
  %prealloc.5 = phi ptr [ %prealloc.3, %next.out_crit_edge ], [ %prealloc.2, %hit_next.out_crit_edge ], [ %prealloc.1, %while.body18.i.i.i.out_crit_edge ], [ %prealloc.1, %if.end34.out_crit_edge ], [ %prealloc.4, %search_again.out_crit_edge ]
  call void @_raw_spin_unlock(ptr noundef %lock) #14
  %tobool170.not = icmp eq ptr %prealloc.5, null
  br i1 %tobool170.not, label %out.if.end172_crit_edge, label %if.then171

out.if.end172_crit_edge:                          ; preds = %out
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end172

if.then171:                                       ; preds = %out
  call void @__sanitizer_cov_trace_pc() #16
  call void @free_extent_state(ptr noundef nonnull %prealloc.5)
  br label %if.end172

if.end172:                                        ; preds = %if.then171, %out.if.end172_crit_edge, %if.end145
  ret i32 0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_btrfs_clear_extent_bit(ptr noundef %tree, i64 noundef %start, i64 noundef %len, i32 noundef %clear_bits) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_btrfs_clear_extent_bit, i32 0, i32 1), ptr blockaddress(@trace_btrfs_clear_extent_bit, %do.body)) #14
          to label %if.end48 [label %do.body], !srcloc !326

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !322

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.49, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  %9 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !334
  %call42 = tail call i32 @__traceiter_btrfs_clear_extent_bit(ptr noundef null, ptr noundef %tree, i64 noundef %start, i64 noundef %len, i32 noundef %clear_bits) #14
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !335
  %13 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !322

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.49, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !329
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_btrfs_clear_extent_bit, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_btrfs_clear_extent_bit, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_btrfs_clear_extent_bit.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @trace_btrfs_clear_extent_bit.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.47, i32 noundef 1996, ptr noundef nonnull @.str.48) #14
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !330
  %31 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @alloc_extent_state(i32 noundef %mask) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %mask, -7
  %0 = load ptr, ptr @extent_state_cache, align 4
  %call = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %0, i32 noundef %and) #14
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %state1 = getelementptr inbounds %struct.extent_state, ptr %call, i32 0, i32 5
  %1 = ptrtoint ptr %state1 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %state1, align 4
  %failrec = getelementptr inbounds %struct.extent_state, ptr %call, i32 0, i32 6
  %2 = ptrtoint ptr %failrec to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %failrec, align 8
  %rb_node = getelementptr inbounds %struct.extent_state, ptr %call, i32 0, i32 2
  %3 = ptrtoint ptr %rb_node to i32
  %4 = ptrtoint ptr %rb_node to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %rb_node, align 8
  %leak_list = getelementptr inbounds %struct.extent_state, ptr %call, i32 0, i32 7
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @leak_lock) #14
  %5 = load ptr, ptr @states, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %leak_list, ptr noundef nonnull @states, ptr noundef %5) #14
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end.btrfs_leak_debug_add.exit_crit_edge

if.end.btrfs_leak_debug_add.exit_crit_edge:       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_leak_debug_add.exit

if.end.i.i.i:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %leak_list, ptr %prev1.i.i.i, align 4
  %7 = ptrtoint ptr %leak_list to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %5, ptr %leak_list, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.extent_state, ptr %call, i32 0, i32 7, i32 1
  %8 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr @states, ptr %prev3.i.i.i, align 8
  store volatile ptr %leak_list, ptr @states, align 4
  br label %btrfs_leak_debug_add.exit

btrfs_leak_debug_add.exit:                        ; preds = %if.end.i.i.i, %if.end.btrfs_leak_debug_add.exit_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @leak_lock, i32 noundef %call2.i) #14
  %refs = getelementptr inbounds %struct.extent_state, ptr %call, i32 0, i32 4
  %call.i.i.i15 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refs, i32 noundef 4) #14
  %9 = ptrtoint ptr %refs to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile i32 1, ptr %refs, align 8
  %wq = getelementptr inbounds %struct.extent_state, ptr %call, i32 0, i32 3
  tail call void @__init_waitqueue_head(ptr noundef %wq, ptr noundef nonnull @.str.53, ptr noundef nonnull @alloc_extent_state.__key) #14
  %10 = tail call ptr @llvm.returnaddress(i32 0)
  %11 = ptrtoint ptr %10 to i32
  tail call fastcc void @trace_alloc_extent_state(ptr noundef nonnull %call, i32 noundef %and, i32 noundef %11)
  br label %cleanup

cleanup:                                          ; preds = %btrfs_leak_debug_add.exit, %entry.cleanup_crit_edge
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @split_state(ptr noundef %tree, ptr noundef %orig, ptr noundef %prealloc, i64 noundef %split) unnamed_addr #0 align 64 {
entry:
  %search_start.addr.i = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 2
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %location.i.i = getelementptr i8, ptr %1, i32 -860
  %2 = ptrtoint ptr %location.i.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %3 = load i64, ptr %location.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %3)
  %tobool.not.i.i = icmp eq i64 %3, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.if.then.i.i_crit_edge, label %lor.lhs.false.i.i

land.lhs.true.if.then.i.i_crit_edge:              ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i

lor.lhs.false.i.i:                                ; preds = %land.lhs.true
  %type.i.i = getelementptr i8, ptr %1, i32 -852
  %4 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %5)
  %cmp.i.i = icmp eq i8 %5, -124
  br i1 %cmp.i.i, label %lor.lhs.false.i.i.if.then.i.i_crit_edge, label %lor.lhs.false.i.i.is_data_inode.exit_crit_edge

lor.lhs.false.i.i.is_data_inode.exit_crit_edge:   ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %is_data_inode.exit

lor.lhs.false.i.i.if.then.i.i_crit_edge:          ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i

if.then.i.i:                                      ; preds = %lor.lhs.false.i.i.if.then.i.i_crit_edge, %land.lhs.true.if.then.i.i_crit_edge
  %i_ino.i.i = getelementptr i8, ptr %1, i32 40
  %6 = ptrtoint ptr %i_ino.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %i_ino.i.i, align 8
  %conv3.i.i = zext i32 %7 to i64
  br label %is_data_inode.exit

is_data_inode.exit:                               ; preds = %if.then.i.i, %lor.lhs.false.i.i.is_data_inode.exit_crit_edge
  %ino.0.i.i = phi i64 [ %conv3.i.i, %if.then.i.i ], [ %3, %lor.lhs.false.i.i.is_data_inode.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %ino.0.i.i)
  %cmp.i.not = icmp eq i64 %ino.0.i.i, 1
  br i1 %cmp.i.not, label %is_data_inode.exit.if.end_crit_edge, label %if.then

is_data_inode.exit.if.end_crit_edge:              ; preds = %is_data_inode.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %is_data_inode.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @btrfs_split_delalloc_extent(ptr noundef nonnull %1, ptr noundef %orig, i64 noundef %split) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %is_data_inode.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %8 = ptrtoint ptr %orig to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %orig, align 8
  %10 = ptrtoint ptr %prealloc to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %9, ptr %prealloc, align 8
  %sub = add i64 %split, -1
  %end = getelementptr inbounds %struct.extent_state, ptr %prealloc, i32 0, i32 1
  %11 = ptrtoint ptr %end to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %sub, ptr %end, align 8
  %state = getelementptr inbounds %struct.extent_state, ptr %orig, i32 0, i32 5
  %12 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %state, align 4
  %state4 = getelementptr inbounds %struct.extent_state, ptr %prealloc, i32 0, i32 5
  %14 = ptrtoint ptr %state4 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %state4, align 4
  store i64 %split, ptr %orig, align 8
  %rb_node = getelementptr inbounds %struct.extent_state, ptr %orig, i32 0, i32 2
  %15 = load i64, ptr %end, align 8
  %rb_node8 = getelementptr inbounds %struct.extent_state, ptr %prealloc, i32 0, i32 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %search_start.addr.i)
  %16 = ptrtoint ptr %search_start.addr.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %rb_node, ptr %search_start.addr.i, align 4
  %tobool3.not.i = icmp eq ptr %rb_node, null
  %spec.select.i = select i1 %tobool3.not.i, ptr %tree, ptr %search_start.addr.i
  %17 = ptrtoint ptr %spec.select.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %spec.select.i, align 4
  %tobool4.not28.i = icmp eq ptr %18, null
  br i1 %tobool4.not28.i, label %if.end.tree_insert.exit.thread_crit_edge, label %if.end.while.body.i_crit_edge

if.end.while.body.i_crit_edge:                    ; preds = %if.end
  br label %while.body.i

if.end.tree_insert.exit.thread_crit_edge:         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %tree_insert.exit.thread

while.body.i:                                     ; preds = %if.end10.i.while.body.i_crit_edge, %if.end.while.body.i_crit_edge
  %19 = phi ptr [ %25, %if.end10.i.while.body.i_crit_edge ], [ %18, %if.end.while.body.i_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %19, i32 -16
  %20 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %add.ptr.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %21, i64 %15)
  %cmp.i27 = icmp ugt i64 %21, %15
  br i1 %cmp.i27, label %if.then5.i, label %if.else.i

if.then5.i:                                       ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_left.i = getelementptr inbounds %struct.rb_node, ptr %19, i32 0, i32 2
  br label %if.end10.i

if.else.i:                                        ; preds = %while.body.i
  %end.i = getelementptr i8, ptr %19, i32 -8
  %22 = ptrtoint ptr %end.i to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %end.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %23, i64 %15)
  %cmp6.i = icmp ult i64 %23, %15
  br i1 %cmp6.i, label %if.then7.i, label %if.then11

if.then7.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_right.i = getelementptr inbounds %struct.rb_node, ptr %19, i32 0, i32 1
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.then7.i, %if.then5.i
  %p.1.i = phi ptr [ %rb_left.i, %if.then5.i ], [ %rb_right.i, %if.then7.i ]
  %24 = ptrtoint ptr %p.1.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %p.1.i, align 4
  %tobool4.not.i = icmp eq ptr %25, null
  br i1 %tobool4.not.i, label %if.end10.i.tree_insert.exit.thread_crit_edge, label %if.end10.i.while.body.i_crit_edge

if.end10.i.while.body.i_crit_edge:                ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i

if.end10.i.tree_insert.exit.thread_crit_edge:     ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %tree_insert.exit.thread

tree_insert.exit.thread:                          ; preds = %if.end10.i.tree_insert.exit.thread_crit_edge, %if.end.tree_insert.exit.thread_crit_edge
  %parent.1.i = phi ptr [ null, %if.end.tree_insert.exit.thread_crit_edge ], [ %19, %if.end10.i.tree_insert.exit.thread_crit_edge ]
  %p.2.i = phi ptr [ %spec.select.i, %if.end.tree_insert.exit.thread_crit_edge ], [ %p.1.i, %if.end10.i.tree_insert.exit.thread_crit_edge ]
  %26 = ptrtoint ptr %parent.1.i to i32
  %27 = ptrtoint ptr %rb_node8 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %rb_node8, align 4
  %rb_right.i.i = getelementptr inbounds %struct.extent_state, ptr %prealloc, i32 0, i32 2, i32 1
  %28 = ptrtoint ptr %rb_right.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr null, ptr %rb_right.i.i, align 4
  %rb_left.i.i = getelementptr inbounds %struct.extent_state, ptr %prealloc, i32 0, i32 2, i32 2
  %29 = ptrtoint ptr %rb_left.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr null, ptr %rb_left.i.i, align 4
  %30 = ptrtoint ptr %p.2.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %rb_node8, ptr %p.2.i, align 4
  tail call void @rb_insert_color(ptr noundef %rb_node8, ptr noundef %tree) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %search_start.addr.i)
  br label %cleanup

if.then11:                                        ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %search_start.addr.i)
  tail call void @free_extent_state(ptr noundef %prealloc)
  br label %cleanup

cleanup:                                          ; preds = %if.then11, %tree_insert.exit.thread
  %retval.0 = phi i32 [ -17, %if.then11 ], [ 0, %tree_insert.exit.thread ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @clear_state_bit(ptr noundef %tree, ptr noundef %state, ptr noundef %bits, i32 noundef %wake, ptr noundef %changeset) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %bits to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %bits, align 4
  %and = and i32 %1, -41217
  %and1 = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1)
  %tobool.not = icmp eq i32 %and1, 0
  br i1 %tobool.not, label %entry.if.end27_crit_edge, label %land.lhs.true

entry.if.end27_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end27

land.lhs.true:                                    ; preds = %entry
  %state2 = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 5
  %2 = ptrtoint ptr %state2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %state2, align 4
  %and3 = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool4.not = icmp eq i32 %and3, 0
  br i1 %tobool4.not, label %land.lhs.true.if.end27_crit_edge, label %if.then

land.lhs.true.if.end27_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end27

if.then:                                          ; preds = %land.lhs.true
  %end = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 1
  %4 = ptrtoint ptr %end to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %end, align 8
  %6 = ptrtoint ptr %state to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %state, align 8
  %sub = sub i64 %5, %7
  %add = add i64 %sub, 1
  %dirty_bytes = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 3
  %8 = ptrtoint ptr %dirty_bytes to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %dirty_bytes, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %add, i64 %9)
  %cmp = icmp ugt i64 %add, %9
  br i1 %cmp, label %do.end, label %if.then.if.end_crit_edge, !prof !319

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 649, i32 noundef 9, ptr noundef null) #14
  br label %if.end

if.end:                                           ; preds = %do.end, %if.then.if.end_crit_edge
  %10 = ptrtoint ptr %dirty_bytes to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %dirty_bytes, align 8
  %sub26 = sub i64 %11, %add
  store i64 %sub26, ptr %dirty_bytes, align 8
  br label %if.end27

if.end27:                                         ; preds = %if.end, %land.lhs.true.if.end27_crit_edge, %entry.if.end27_crit_edge
  %private_data = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 2
  %12 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %private_data, align 8
  %tobool28.not = icmp eq ptr %13, null
  br i1 %tobool28.not, label %if.end27.if.end33_crit_edge, label %land.lhs.true29

if.end27.if.end33_crit_edge:                      ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end33

land.lhs.true29:                                  ; preds = %if.end27
  %location.i.i = getelementptr i8, ptr %13, i32 -860
  %14 = ptrtoint ptr %location.i.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 8)
  %15 = load i64, ptr %location.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %15)
  %tobool.not.i.i = icmp eq i64 %15, 0
  br i1 %tobool.not.i.i, label %land.lhs.true29.if.then.i.i_crit_edge, label %lor.lhs.false.i.i

land.lhs.true29.if.then.i.i_crit_edge:            ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i

lor.lhs.false.i.i:                                ; preds = %land.lhs.true29
  %type.i.i = getelementptr i8, ptr %13, i32 -852
  %16 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %17)
  %cmp.i.i = icmp eq i8 %17, -124
  br i1 %cmp.i.i, label %lor.lhs.false.i.i.if.then.i.i_crit_edge, label %lor.lhs.false.i.i.is_data_inode.exit_crit_edge

lor.lhs.false.i.i.is_data_inode.exit_crit_edge:   ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %is_data_inode.exit

lor.lhs.false.i.i.if.then.i.i_crit_edge:          ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i

if.then.i.i:                                      ; preds = %lor.lhs.false.i.i.if.then.i.i_crit_edge, %land.lhs.true29.if.then.i.i_crit_edge
  %i_ino.i.i = getelementptr i8, ptr %13, i32 40
  %18 = ptrtoint ptr %i_ino.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %i_ino.i.i, align 8
  %conv3.i.i = zext i32 %19 to i64
  br label %is_data_inode.exit

is_data_inode.exit:                               ; preds = %if.then.i.i, %lor.lhs.false.i.i.is_data_inode.exit_crit_edge
  %ino.0.i.i = phi i64 [ %conv3.i.i, %if.then.i.i ], [ %15, %lor.lhs.false.i.i.is_data_inode.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %ino.0.i.i)
  %cmp.i.not = icmp eq i64 %ino.0.i.i, 1
  br i1 %cmp.i.not, label %is_data_inode.exit.if.end33_crit_edge, label %if.then31

is_data_inode.exit.if.end33_crit_edge:            ; preds = %is_data_inode.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end33

if.then31:                                        ; preds = %is_data_inode.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @btrfs_clear_delalloc_extent(ptr noundef nonnull %13, ptr noundef %state, ptr noundef %bits) #14
  br label %if.end33

if.end33:                                         ; preds = %if.then31, %is_data_inode.exit.if.end33_crit_edge, %if.end27.if.end33_crit_edge
  %tobool.not.i = icmp eq ptr %changeset, null
  br i1 %tobool.not.i, label %if.end33.do.end52_crit_edge, label %if.end.i

if.end33.do.end52_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end52

if.end.i:                                         ; preds = %if.end33
  %state7.i = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 5
  %20 = ptrtoint ptr %state7.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %state7.i, align 4
  %and8.i = and i32 %21, %and
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i)
  %cmp9.i = icmp eq i32 %and8.i, 0
  br i1 %cmp9.i, label %if.end.i.do.end52_crit_edge, label %add_extent_changeset.exit

if.end.i.do.end52_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end52

add_extent_changeset.exit:                        ; preds = %if.end.i
  %end.i = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 1
  %22 = ptrtoint ptr %end.i to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %end.i, align 8
  %24 = ptrtoint ptr %state to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %state, align 8
  %sub.i = sub i64 %23, %25
  %26 = ptrtoint ptr %changeset to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %changeset, align 4
  %28 = trunc i64 %sub.i to i32
  %29 = add i32 %27, 1
  %conv13.i = add i32 %29, %28
  store i32 %conv13.i, ptr %changeset, align 4
  %range_changed.i = getelementptr inbounds %struct.extent_changeset, ptr %changeset, i32 0, i32 1
  %30 = load i64, ptr %state, align 8
  %31 = load i64, ptr %end.i, align 8
  %call.i = tail call i32 @ulist_add(ptr noundef %range_changed.i, i64 noundef %30, i64 noundef %31, i32 noundef 2592) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp36 = icmp slt i32 %call.i, 0
  br i1 %cmp36, label %do.body44, label %add_extent_changeset.exit.do.end52_crit_edge, !prof !319

add_extent_changeset.exit.do.end52_crit_edge:     ; preds = %add_extent_changeset.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end52

do.body44:                                        ; preds = %add_extent_changeset.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 657, 0\0A.popsection", ""() #14, !srcloc !336
  unreachable

do.end52:                                         ; preds = %add_extent_changeset.exit.do.end52_crit_edge, %if.end.i.do.end52_crit_edge, %if.end33.do.end52_crit_edge
  %neg = xor i32 %and, -1
  %state53 = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 5
  %32 = ptrtoint ptr %state53 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %state53, align 4
  %and54 = and i32 %33, %neg
  store i32 %and54, ptr %state53, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %wake)
  %tobool55.not = icmp eq i32 %wake, 0
  br i1 %tobool55.not, label %do.end52.if.end57_crit_edge, label %if.then56

do.end52.if.end57_crit_edge:                      ; preds = %do.end52
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end57

if.then56:                                        ; preds = %do.end52
  call void @__sanitizer_cov_trace_pc() #16
  %wq = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 3
  tail call void @__wake_up(ptr noundef %wq, i32 noundef 3, i32 noundef 1, ptr noundef null) #14
  %34 = ptrtoint ptr %state53 to i32
  call void @__asan_load4_noabort(i32 %34)
  %.pr = load i32, ptr %state53, align 4
  br label %if.end57

if.end57:                                         ; preds = %if.then56, %do.end52.if.end57_crit_edge
  %35 = phi i32 [ %.pr, %if.then56 ], [ %and54, %do.end52.if.end57_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %cmp59 = icmp eq i32 %35, 0
  br i1 %cmp59, label %if.then60, label %if.else94

if.then60:                                        ; preds = %if.end57
  %rb_node.i = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 2
  %call.i124 = tail call ptr @rb_next(ptr noundef %rb_node.i) #14
  %tobool.not.i125 = icmp eq ptr %call.i124, null
  %add.ptr.i = getelementptr i8, ptr %call.i124, i32 -16
  %retval.0.i126 = select i1 %tobool.not.i125, ptr null, ptr %add.ptr.i
  %36 = ptrtoint ptr %rb_node.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rb_node.i, align 8
  %38 = ptrtoint ptr %rb_node.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %37, i32 %38)
  %cmp.i128.not = icmp eq i32 %37, %38
  br i1 %cmp.i128.not, label %do.end79, label %if.then63

if.then63:                                        ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @rb_erase(ptr noundef %rb_node.i, ptr noundef %tree) #14
  %39 = ptrtoint ptr %rb_node.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %rb_node.i, align 8
  tail call void @free_extent_state(ptr noundef %state)
  br label %if.end96

do.end79:                                         ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 668, i32 noundef 9, ptr noundef null) #14
  br label %if.end96

if.else94:                                        ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @merge_state(ptr noundef %tree, ptr noundef %state)
  %rb_node.i129 = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 2
  %call.i130 = tail call ptr @rb_next(ptr noundef %rb_node.i129) #14
  %tobool.not.i131 = icmp eq ptr %call.i130, null
  %add.ptr.i132 = getelementptr i8, ptr %call.i130, i32 -16
  %retval.0.i133 = select i1 %tobool.not.i131, ptr null, ptr %add.ptr.i132
  br label %if.end96

if.end96:                                         ; preds = %if.else94, %do.end79, %if.then63
  %next.0 = phi ptr [ %retval.0.i126, %if.then63 ], [ %retval.0.i126, %do.end79 ], [ %retval.0.i133, %if.else94 ]
  ret ptr %next.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @set_extent_bit(ptr noundef %tree, i64 noundef %start, i64 noundef %end, i32 noundef %bits, i32 noundef %exclusive_bits, ptr noundef writeonly %failed_start, ptr noundef %cached_state, i32 noundef %mask, ptr noundef %changeset) local_unnamed_addr #0 align 64 {
entry:
  %bits.addr = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %bits.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %bits, ptr %bits.addr, align 4
  %private_data.i = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 2
  %1 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %private_data.i, align 8
  %tobool.not.i = icmp eq ptr %2, null
  br i1 %tobool.not.i, label %entry.__btrfs_debug_check_extent_io_range.exit_crit_edge, label %lor.lhs.false.i

entry.__btrfs_debug_check_extent_io_range.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %__btrfs_debug_check_extent_io_range.exit

lor.lhs.false.i:                                  ; preds = %entry
  %location.i.i.i = getelementptr i8, ptr %2, i32 -860
  %3 = ptrtoint ptr %location.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %3, i32 8)
  %4 = load i64, ptr %location.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %4)
  %tobool.not.i.i.i = icmp eq i64 %4, 0
  br i1 %tobool.not.i.i.i, label %lor.lhs.false.i.if.then.i.i.i_crit_edge, label %lor.lhs.false.i.i.i

lor.lhs.false.i.if.then.i.i.i_crit_edge:          ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i

lor.lhs.false.i.i.i:                              ; preds = %lor.lhs.false.i
  %type.i.i.i = getelementptr i8, ptr %2, i32 -852
  %5 = ptrtoint ptr %type.i.i.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %6)
  %cmp.i.i.i = icmp eq i8 %6, -124
  br i1 %cmp.i.i.i, label %lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge, label %lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge

lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge: ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %is_data_inode.exit.i

lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge:      ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge, %lor.lhs.false.i.if.then.i.i.i_crit_edge
  %i_ino.i.i.i = getelementptr i8, ptr %2, i32 40
  %7 = ptrtoint ptr %i_ino.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %i_ino.i.i.i, align 8
  %conv3.i.i.i = zext i32 %8 to i64
  br label %is_data_inode.exit.i

is_data_inode.exit.i:                             ; preds = %if.then.i.i.i, %lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge
  %ino.0.i.i.i = phi i64 [ %conv3.i.i.i, %if.then.i.i.i ], [ %4, %lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %ino.0.i.i.i)
  %cmp.i.not.i = icmp eq i64 %ino.0.i.i.i, 1
  br i1 %cmp.i.not.i, label %is_data_inode.exit.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, label %if.end.i

is_data_inode.exit.i.__btrfs_debug_check_extent_io_range.exit_crit_edge: ; preds = %is_data_inode.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__btrfs_debug_check_extent_io_range.exit

if.end.i:                                         ; preds = %is_data_inode.exit.i
  %call1.i = tail call fastcc i64 @i_size_read(ptr noundef nonnull %2) #14
  call void @__sanitizer_cov_trace_const_cmp8(i64 4096, i64 %end)
  %cmp.i = icmp ult i64 %end, 4096
  %rem.i = and i64 %end, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %rem.i)
  %cmp2.i = icmp ne i64 %rem.i, 0
  %or.cond.not.i = or i1 %cmp.i, %cmp2.i
  %sub.i = add i64 %call1.i, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %sub.i, i64 %end)
  %cmp4.not.i = icmp eq i64 %sub.i, %end
  %or.cond32.i = select i1 %or.cond.not.i, i1 true, i1 %cmp4.not.i
  br i1 %or.cond32.i, label %if.end.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, label %do.body.i

if.end.i.__btrfs_debug_check_extent_io_range.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__btrfs_debug_check_extent_io_range.exit

do.body.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__btrfs_debug_check_extent_io_range.__UNIQUE_ID_ddebug945, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@set_extent_bit, %do.body11.i)) #14
          to label %__btrfs_debug_check_extent_io_range.exit [label %do.body11.i], !srcloc !326

do.body11.i:                                      ; preds = %do.body.i
  %call12.i = tail call i32 @___ratelimit(ptr noundef nonnull @__btrfs_debug_check_extent_io_range._rs, ptr noundef nonnull @.str.50) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12.i)
  %tobool13.not.i = icmp eq i32 %call12.i, 0
  br i1 %tobool13.not.i, label %do.body11.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, label %if.then14.i

do.body11.i.__btrfs_debug_check_extent_io_range.exit_crit_edge: ; preds = %do.body11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__btrfs_debug_check_extent_io_range.exit

if.then14.i:                                      ; preds = %do.body11.i
  %add.ptr.i.i = getelementptr i8, ptr %2, i32 -864
  %9 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %add.ptr.i.i, align 8
  %fs_info.i = getelementptr inbounds %struct.btrfs_root, ptr %10, i32 0, i32 8
  %11 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %fs_info.i, align 8
  %13 = ptrtoint ptr %location.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %13, i32 8)
  %14 = load i64, ptr %location.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %14)
  %tobool.not.i.i = icmp eq i64 %14, 0
  br i1 %tobool.not.i.i, label %if.then14.i.if.then.i.i_crit_edge, label %lor.lhs.false.i.i

if.then14.i.if.then.i.i_crit_edge:                ; preds = %if.then14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i

lor.lhs.false.i.i:                                ; preds = %if.then14.i
  %type.i.i = getelementptr i8, ptr %2, i32 -852
  %15 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %16)
  %cmp.i34.i = icmp eq i8 %16, -124
  br i1 %cmp.i34.i, label %lor.lhs.false.i.i.if.then.i.i_crit_edge, label %lor.lhs.false.i.i.btrfs_ino.exit.i_crit_edge

lor.lhs.false.i.i.btrfs_ino.exit.i_crit_edge:     ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_ino.exit.i

lor.lhs.false.i.i.if.then.i.i_crit_edge:          ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i

if.then.i.i:                                      ; preds = %lor.lhs.false.i.i.if.then.i.i_crit_edge, %if.then14.i.if.then.i.i_crit_edge
  %i_ino.i.i = getelementptr i8, ptr %2, i32 40
  %17 = ptrtoint ptr %i_ino.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %i_ino.i.i, align 8
  %conv3.i.i = zext i32 %18 to i64
  br label %btrfs_ino.exit.i

btrfs_ino.exit.i:                                 ; preds = %if.then.i.i, %lor.lhs.false.i.i.btrfs_ino.exit.i_crit_edge
  %ino.0.i.i = phi i64 [ %conv3.i.i, %if.then.i.i ], [ %14, %lor.lhs.false.i.i.btrfs_ino.exit.i_crit_edge ]
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %12, ptr noundef nonnull @.str.52, ptr noundef nonnull @__func__.set_extent_bit, i64 noundef %ino.0.i.i, i64 noundef %call1.i, i64 noundef %start, i64 noundef %end) #17
  br label %__btrfs_debug_check_extent_io_range.exit

__btrfs_debug_check_extent_io_range.exit:         ; preds = %btrfs_ino.exit.i, %do.body11.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, %do.body.i, %if.end.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, %is_data_inode.exit.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, %entry.__btrfs_debug_check_extent_io_range.exit_crit_edge
  %sub = sub i64 1, %start
  %add = add i64 %sub, %end
  %19 = ptrtoint ptr %bits.addr to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %bits.addr, align 4
  tail call fastcc void @trace_btrfs_set_extent_bit(ptr noundef %tree, i64 noundef %start, i64 noundef %add, i32 noundef %20)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %exclusive_bits)
  %tobool.not = icmp eq i32 %exclusive_bits, 0
  %cmp = icmp eq ptr %failed_start, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %__btrfs_debug_check_extent_io_range.exit
  br i1 %cmp, label %cond.false, label %if.then.if.end_crit_edge, !prof !319

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

cond.false:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.9, i32 noundef 989) #18
  unreachable

if.else:                                          ; preds = %__btrfs_debug_check_extent_io_range.exit
  br i1 %cmp, label %if.else.if.end_crit_edge, label %cond.false11, !prof !322

if.else.if.end_crit_edge:                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

cond.false11:                                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.10, i32 noundef 991) #18
  unreachable

if.end:                                           ; preds = %if.else.if.end_crit_edge, %if.then.if.end_crit_edge
  %and.i = and i32 %mask, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i386.not = icmp eq i32 %and.i, 0
  %lock = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 6
  %tobool17.not = icmp eq ptr %cached_state, null
  br label %again

again:                                            ; preds = %again.backedge, %if.end
  %prealloc.0 = phi ptr [ null, %if.end ], [ %prealloc.3, %again.backedge ]
  %start.addr.0 = phi i64 [ %start, %if.end ], [ %start.addr.2, %again.backedge ]
  %tobool13.not = icmp ne ptr %prealloc.0, null
  %brmerge673 = or i1 %tobool13.not, %tobool.i386.not
  br i1 %brmerge673, label %again.if.end16_crit_edge, label %if.then14

again.if.end16_crit_edge:                         ; preds = %again
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16

if.then14:                                        ; preds = %again
  call void @__sanitizer_cov_trace_pc() #16
  %call15 = call fastcc ptr @alloc_extent_state(i32 noundef %mask)
  br label %if.end16

if.end16:                                         ; preds = %if.then14, %again.if.end16_crit_edge
  %prealloc.1 = phi ptr [ %prealloc.0, %again.if.end16_crit_edge ], [ %call15, %if.then14 ]
  call void @_raw_spin_lock(ptr noundef %lock) #14
  br i1 %tobool17.not, label %if.end16.if.end30_crit_edge, label %land.lhs.true18

if.end16.if.end30_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30

land.lhs.true18:                                  ; preds = %if.end16
  %21 = ptrtoint ptr %cached_state to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %cached_state, align 4
  %tobool19.not = icmp eq ptr %22, null
  br i1 %tobool19.not, label %land.lhs.true18.if.end30_crit_edge, label %if.then20

land.lhs.true18.if.end30_crit_edge:               ; preds = %land.lhs.true18
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30

if.then20:                                        ; preds = %land.lhs.true18
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %22, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %24, i64 %start.addr.0)
  %cmp22.not = icmp ugt i64 %24, %start.addr.0
  br i1 %cmp22.not, label %if.then20.if.end30_crit_edge, label %land.lhs.true23

if.then20.if.end30_crit_edge:                     ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30

land.lhs.true23:                                  ; preds = %if.then20
  %end24 = getelementptr inbounds %struct.extent_state, ptr %22, i32 0, i32 1
  %25 = ptrtoint ptr %end24 to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %end24, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %26, i64 %start.addr.0)
  %cmp25 = icmp ugt i64 %26, %start.addr.0
  br i1 %cmp25, label %land.lhs.true26, label %land.lhs.true23.if.end30_crit_edge

land.lhs.true23.if.end30_crit_edge:               ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30

land.lhs.true26:                                  ; preds = %land.lhs.true23
  %rb_node.i = getelementptr inbounds %struct.extent_state, ptr %22, i32 0, i32 2
  %27 = ptrtoint ptr %rb_node.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %rb_node.i, align 8
  %29 = ptrtoint ptr %rb_node.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %29)
  %cmp.i387.not = icmp eq i32 %28, %29
  br i1 %cmp.i387.not, label %land.lhs.true26.if.end30_crit_edge, label %land.lhs.true26.hit_next.outer.preheader_crit_edge

land.lhs.true26.hit_next.outer.preheader_crit_edge: ; preds = %land.lhs.true26
  call void @__sanitizer_cov_trace_pc() #16
  br label %hit_next.outer.preheader

land.lhs.true26.if.end30_crit_edge:               ; preds = %land.lhs.true26
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30

if.end30:                                         ; preds = %land.lhs.true26.if.end30_crit_edge, %land.lhs.true23.if.end30_crit_edge, %if.then20.if.end30_crit_edge, %land.lhs.true18.if.end30_crit_edge, %if.end16.if.end30_crit_edge
  %30 = ptrtoint ptr %tree to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %tree, align 4
  %tobool.not78.i.i = icmp eq ptr %31, null
  br i1 %tobool.not78.i.i, label %if.end30.if.then33_crit_edge, label %if.end30.while.body.i.i_crit_edge

if.end30.while.body.i.i_crit_edge:                ; preds = %if.end30
  br label %while.body.i.i

if.end30.if.then33_crit_edge:                     ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then33

while.body.i.i:                                   ; preds = %if.end5.i.i.while.body.i.i_crit_edge, %if.end30.while.body.i.i_crit_edge
  %32 = phi ptr [ %38, %if.end5.i.i.while.body.i.i_crit_edge ], [ %31, %if.end30.while.body.i.i_crit_edge ]
  %add.ptr.i.i388 = getelementptr i8, ptr %32, i32 -16
  %33 = ptrtoint ptr %add.ptr.i.i388 to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %add.ptr.i.i388, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %34, i64 %start.addr.0)
  %cmp.i.i = icmp ugt i64 %34, %start.addr.0
  br i1 %cmp.i.i, label %if.then.i.i389, label %if.else.i.i

if.then.i.i389:                                   ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_left.i.i = getelementptr inbounds %struct.rb_node, ptr %32, i32 0, i32 2
  br label %if.end5.i.i

if.else.i.i:                                      ; preds = %while.body.i.i
  %end.i.i = getelementptr i8, ptr %32, i32 -8
  %35 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %end.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %36, i64 %start.addr.0)
  %cmp2.i.i = icmp ult i64 %36, %start.addr.0
  br i1 %cmp2.i.i, label %if.then3.i.i, label %if.else.i.i.if.end56_crit_edge

if.else.i.i.if.end56_crit_edge:                   ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end56

if.then3.i.i:                                     ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_right.i.i = getelementptr inbounds %struct.rb_node, ptr %32, i32 0, i32 1
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.then3.i.i, %if.then.i.i389
  %n.1.i.i = phi ptr [ %rb_left.i.i, %if.then.i.i389 ], [ %rb_right.i.i, %if.then3.i.i ]
  %37 = ptrtoint ptr %n.1.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %n.1.i.i, align 4
  %tobool.not.i.i390 = icmp eq ptr %38, null
  br i1 %tobool.not.i.i390, label %if.end5.i.i.land.rhs.i.i_crit_edge, label %if.end5.i.i.while.body.i.i_crit_edge

if.end5.i.i.while.body.i.i_crit_edge:             ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i

if.end5.i.i.land.rhs.i.i_crit_edge:               ; preds = %if.end5.i.i
  br label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %while.body18.i.i.land.rhs.i.i_crit_edge, %if.end5.i.i.land.rhs.i.i_crit_edge
  %prev.183.i.i = phi ptr [ %call.i.i, %while.body18.i.i.land.rhs.i.i_crit_edge ], [ %32, %if.end5.i.i.land.rhs.i.i_crit_edge ]
  %end16.i.i = getelementptr i8, ptr %prev.183.i.i, i32 -8
  %39 = ptrtoint ptr %end16.i.i to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %end16.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %40, i64 %start.addr.0)
  %cmp17.i.i = icmp ult i64 %40, %start.addr.0
  br i1 %cmp17.i.i, label %while.body18.i.i, label %land.rhs.i.i.if.end56_crit_edge

land.rhs.i.i.if.end56_crit_edge:                  ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end56

while.body18.i.i:                                 ; preds = %land.rhs.i.i
  %call.i.i = call ptr @rb_next(ptr noundef nonnull %prev.183.i.i) #14
  %tobool15.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool15.not.i.i, label %while.body18.i.i.if.then33_crit_edge, label %while.body18.i.i.land.rhs.i.i_crit_edge

while.body18.i.i.land.rhs.i.i_crit_edge:          ; preds = %while.body18.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.i.i

while.body18.i.i.if.then33_crit_edge:             ; preds = %while.body18.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then33

if.then33:                                        ; preds = %while.body18.i.i.if.then33_crit_edge, %if.end30.if.then33_crit_edge
  %p.1.ph = phi ptr [ %n.1.i.i, %while.body18.i.i.if.then33_crit_edge ], [ %tree, %if.end30.if.then33_crit_edge ]
  %parent.1.ph = phi ptr [ %32, %while.body18.i.i.if.then33_crit_edge ], [ null, %if.end30.if.then33_crit_edge ]
  %tobool.not.i391 = icmp eq ptr %prealloc.1, null
  br i1 %tobool.not.i391, label %alloc_extent_state_atomic.exit, label %if.then33.do.end51_crit_edge

if.then33.do.end51_crit_edge:                     ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end51

alloc_extent_state_atomic.exit:                   ; preds = %if.then33
  %call.i = call fastcc ptr @alloc_extent_state(i32 noundef 2592) #14
  %tobool35.not = icmp eq ptr %call.i, null
  br i1 %tobool35.not, label %do.body45, label %alloc_extent_state_atomic.exit.do.end51_crit_edge, !prof !319

alloc_extent_state_atomic.exit.do.end51_crit_edge: ; preds = %alloc_extent_state_atomic.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end51

do.body45:                                        ; preds = %alloc_extent_state_atomic.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1020, 0\0A.popsection", ""() #14, !srcloc !337
  unreachable

do.end51:                                         ; preds = %alloc_extent_state_atomic.exit.do.end51_crit_edge, %if.then33.do.end51_crit_edge
  %prealloc.addr.0.i523 = phi ptr [ %call.i, %alloc_extent_state_atomic.exit.do.end51_crit_edge ], [ %prealloc.1, %if.then33.do.end51_crit_edge ]
  call void @__sanitizer_cov_trace_cmp8(i64 %start.addr.0, i64 %end)
  %cmp.i393 = icmp ugt i64 %start.addr.0, %end
  br i1 %cmp.i393, label %if.then.i395, label %do.end51.insert_state.exit_crit_edge

do.end51.insert_state.exit_crit_edge:             ; preds = %do.end51
  call void @__sanitizer_cov_trace_pc() #16
  br label %insert_state.exit

if.then.i395:                                     ; preds = %do.end51
  call void @__sanitizer_cov_trace_pc() #16
  %fs_info.i394 = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 1
  %41 = ptrtoint ptr %fs_info.i394 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %fs_info.i394, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %42, ptr noundef nonnull @.str.55, i64 noundef %end, i64 noundef %start.addr.0) #17
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 566, i32 noundef 9, ptr noundef null) #14
  br label %insert_state.exit

insert_state.exit:                                ; preds = %if.then.i395, %do.end51.insert_state.exit_crit_edge
  %43 = ptrtoint ptr %prealloc.addr.0.i523 to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 %start.addr.0, ptr %prealloc.addr.0.i523, align 8
  %end18.i = getelementptr inbounds %struct.extent_state, ptr %prealloc.addr.0.i523, i32 0, i32 1
  %44 = ptrtoint ptr %end18.i to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %end, ptr %end18.i, align 8
  call fastcc void @set_state_bits(ptr noundef %tree, ptr noundef nonnull %prealloc.addr.0.i523, ptr noundef nonnull %bits.addr, ptr noundef %changeset) #14
  %rb_node.i396 = getelementptr inbounds %struct.extent_state, ptr %prealloc.addr.0.i523, i32 0, i32 2
  %45 = ptrtoint ptr %parent.1.ph to i32
  %46 = ptrtoint ptr %rb_node.i396 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %rb_node.i396, align 4
  %rb_right.i.i.i = getelementptr inbounds %struct.extent_state, ptr %prealloc.addr.0.i523, i32 0, i32 2, i32 1
  %47 = ptrtoint ptr %rb_right.i.i.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr null, ptr %rb_right.i.i.i, align 4
  %rb_left.i.i.i = getelementptr inbounds %struct.extent_state, ptr %prealloc.addr.0.i523, i32 0, i32 2, i32 2
  %48 = ptrtoint ptr %rb_left.i.i.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr null, ptr %rb_left.i.i.i, align 4
  %49 = ptrtoint ptr %p.1.ph to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %rb_node.i396, ptr %p.1.ph, align 4
  call void @rb_insert_color(ptr noundef %rb_node.i396, ptr noundef %tree) #14
  call fastcc void @merge_state(ptr noundef %tree, ptr noundef nonnull %prealloc.addr.0.i523) #14
  br i1 %tobool17.not, label %insert_state.exit.out.thread_crit_edge, label %land.lhs.true.i.i

insert_state.exit.out.thread_crit_edge:           ; preds = %insert_state.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.thread

land.lhs.true.i.i:                                ; preds = %insert_state.exit
  %50 = ptrtoint ptr %cached_state to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %cached_state, align 4
  %tobool1.not.i.i = icmp eq ptr %51, null
  br i1 %tobool1.not.i.i, label %if.then.i.i402, label %land.lhs.true.i.i.out.thread_crit_edge

land.lhs.true.i.i.out.thread_crit_edge:           ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.thread

if.then.i.i402:                                   ; preds = %land.lhs.true.i.i
  %state3.i.i = getelementptr inbounds %struct.extent_state, ptr %prealloc.addr.0.i523, i32 0, i32 5
  %52 = ptrtoint ptr %state3.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %state3.i.i, align 4
  %and.i.i401 = and i32 %53, 68
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i401)
  %tobool4.not.i.i = icmp eq i32 %and.i.i401, 0
  br i1 %tobool4.not.i.i, label %if.then.i.i402.out.thread_crit_edge, label %if.then5.i.i

if.then.i.i402.out.thread_crit_edge:              ; preds = %if.then.i.i402
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.thread

if.then5.i.i:                                     ; preds = %if.then.i.i402
  %54 = ptrtoint ptr %cached_state to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %prealloc.addr.0.i523, ptr %cached_state, align 4
  %refs.i.i = getelementptr inbounds %struct.extent_state, ptr %prealloc.addr.0.i523, i32 0, i32 4
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refs.i.i, i32 noundef 4) #14
  call void @llvm.prefetch.p0(ptr %refs.i.i, i32 1, i32 3, i32 1) #14
  %55 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs.i.i, ptr %refs.i.i, i32 1, ptr elementtype(i32) %refs.i.i) #14, !srcloc !338
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %55, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %if.then5.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !319

if.then5.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.then5.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %if.then5.i.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %56 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %56)
  %.not.i.i.i.i.i = icmp sgt i32 %56, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.out.thread_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !322

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.out.thread_crit_edge:           ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.thread

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %if.then5.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %if.then5.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refs.i.i, i32 noundef %.sink.i.i.i.i.i) #14
  br label %out.thread

if.end56:                                         ; preds = %land.rhs.i.i.if.end56_crit_edge, %if.else.i.i.if.end56_crit_edge
  %retval.0.i = phi ptr [ %prev.183.i.i, %land.rhs.i.i.if.end56_crit_edge ], [ %32, %if.else.i.i.if.end56_crit_edge ]
  %add.ptr = getelementptr i8, ptr %retval.0.i, i32 -16
  br label %hit_next.outer.preheader

hit_next.outer.preheader:                         ; preds = %if.end56, %land.lhs.true26.hit_next.outer.preheader_crit_edge
  %state.0.ph541.ph = phi ptr [ %22, %land.lhs.true26.hit_next.outer.preheader_crit_edge ], [ %add.ptr, %if.end56 ]
  br label %hit_next.outer

hit_next.outer:                                   ; preds = %land.lhs.true143.hit_next.outer_crit_edge, %hit_next.outer.preheader
  %prealloc.2.ph = phi ptr [ null, %land.lhs.true143.hit_next.outer_crit_edge ], [ %prealloc.1, %hit_next.outer.preheader ]
  %state.0.ph541 = phi ptr [ %add.ptr.i472, %land.lhs.true143.hit_next.outer_crit_edge ], [ %state.0.ph541.ph, %hit_next.outer.preheader ]
  %start.addr.1.ph = phi i64 [ %add135, %land.lhs.true143.hit_next.outer_crit_edge ], [ %start.addr.0, %hit_next.outer.preheader ]
  br label %hit_next

hit_next:                                         ; preds = %land.lhs.true81.hit_next_crit_edge, %hit_next.outer
  %state.0 = phi ptr [ %add.ptr.i, %land.lhs.true81.hit_next_crit_edge ], [ %state.0.ph541, %hit_next.outer ]
  %start.addr.1 = phi i64 [ %add73, %land.lhs.true81.hit_next_crit_edge ], [ %start.addr.1.ph, %hit_next.outer ]
  %57 = ptrtoint ptr %state.0 to i32
  call void @__asan_load8_noabort(i32 %57)
  %58 = load i64, ptr %state.0, align 8
  %end58 = getelementptr inbounds %struct.extent_state, ptr %state.0, i32 0, i32 1
  %59 = ptrtoint ptr %end58 to i32
  call void @__asan_load8_noabort(i32 %59)
  %60 = load i64, ptr %end58, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %58, i64 %start.addr.1)
  %cmp60 = icmp ne i64 %58, %start.addr.1
  call void @__sanitizer_cov_trace_cmp8(i64 %60, i64 %end)
  %cmp63.not = icmp ugt i64 %60, %end
  %or.cond = select i1 %cmp60, i1 true, i1 %cmp63.not
  br i1 %or.cond, label %if.end85, label %if.then64

if.then64:                                        ; preds = %hit_next
  %state65 = getelementptr inbounds %struct.extent_state, ptr %state.0, i32 0, i32 5
  %61 = ptrtoint ptr %state65 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %state65, align 4
  %and = and i32 %62, %exclusive_bits
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool66.not = icmp eq i32 %and, 0
  br i1 %tobool66.not, label %if.end69, label %if.then64.out.sink.split_crit_edge

if.then64.out.sink.split_crit_edge:               ; preds = %if.then64
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.sink.split

if.end69:                                         ; preds = %if.then64
  call fastcc void @set_state_bits(ptr noundef %tree, ptr noundef %state.0, ptr noundef nonnull %bits.addr, ptr noundef %changeset)
  br i1 %tobool17.not, label %if.end69.cache_state.exit420_crit_edge, label %land.lhs.true.i.i405

if.end69.cache_state.exit420_crit_edge:           ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state.exit420

land.lhs.true.i.i405:                             ; preds = %if.end69
  %63 = ptrtoint ptr %cached_state to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %cached_state, align 4
  %tobool1.not.i.i404 = icmp eq ptr %64, null
  br i1 %tobool1.not.i.i404, label %if.then.i.i409, label %land.lhs.true.i.i405.cache_state.exit420_crit_edge

land.lhs.true.i.i405.cache_state.exit420_crit_edge: ; preds = %land.lhs.true.i.i405
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state.exit420

if.then.i.i409:                                   ; preds = %land.lhs.true.i.i405
  %65 = ptrtoint ptr %state65 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %state65, align 4
  %and.i.i407 = and i32 %66, 68
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i407)
  %tobool4.not.i.i408 = icmp eq i32 %and.i.i407, 0
  br i1 %tobool4.not.i.i408, label %if.then.i.i409.cache_state.exit420_crit_edge, label %if.then5.i.i414

if.then.i.i409.cache_state.exit420_crit_edge:     ; preds = %if.then.i.i409
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state.exit420

if.then5.i.i414:                                  ; preds = %if.then.i.i409
  %67 = ptrtoint ptr %cached_state to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr %state.0, ptr %cached_state, align 4
  %refs.i.i410 = getelementptr inbounds %struct.extent_state, ptr %state.0, i32 0, i32 4
  %call.i.i.i.i.i.i.i411 = call zeroext i1 @__kasan_check_write(ptr noundef %refs.i.i410, i32 noundef 4) #14
  call void @llvm.prefetch.p0(ptr %refs.i.i410, i32 1, i32 3, i32 1) #14
  %68 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs.i.i410, ptr %refs.i.i410, i32 1, ptr elementtype(i32) %refs.i.i410) #14, !srcloc !338
  %asmresult.i.i.i.i.i.i.i412 = extractvalue { i32, i32, i32 } %68, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i412)
  %tobool1.not.i.i.i.i.i413 = icmp eq i32 %asmresult.i.i.i.i.i.i.i412, 0
  br i1 %tobool1.not.i.i.i.i.i413, label %if.then5.i.i414.if.end15.sink.split.i.i.i.i.i419_crit_edge, label %if.else.i.i.i.i.i417, !prof !319

if.then5.i.i414.if.end15.sink.split.i.i.i.i.i419_crit_edge: ; preds = %if.then5.i.i414
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i419

if.else.i.i.i.i.i417:                             ; preds = %if.then5.i.i414
  %add.i.i.i.i.i415 = add i32 %asmresult.i.i.i.i.i.i.i412, 1
  %69 = or i32 %add.i.i.i.i.i415, %asmresult.i.i.i.i.i.i.i412
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %69)
  %.not.i.i.i.i.i416 = icmp sgt i32 %69, -1
  br i1 %.not.i.i.i.i.i416, label %if.else.i.i.i.i.i417.cache_state.exit420_crit_edge, label %if.else.i.i.i.i.i417.if.end15.sink.split.i.i.i.i.i419_crit_edge, !prof !322

if.else.i.i.i.i.i417.if.end15.sink.split.i.i.i.i.i419_crit_edge: ; preds = %if.else.i.i.i.i.i417
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i419

if.else.i.i.i.i.i417.cache_state.exit420_crit_edge: ; preds = %if.else.i.i.i.i.i417
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state.exit420

if.end15.sink.split.i.i.i.i.i419:                 ; preds = %if.else.i.i.i.i.i417.if.end15.sink.split.i.i.i.i.i419_crit_edge, %if.then5.i.i414.if.end15.sink.split.i.i.i.i.i419_crit_edge
  %.sink.i.i.i.i.i418 = phi i32 [ 2, %if.then5.i.i414.if.end15.sink.split.i.i.i.i.i419_crit_edge ], [ 1, %if.else.i.i.i.i.i417.if.end15.sink.split.i.i.i.i.i419_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refs.i.i410, i32 noundef %.sink.i.i.i.i.i418) #14
  br label %cache_state.exit420

cache_state.exit420:                              ; preds = %if.end15.sink.split.i.i.i.i.i419, %if.else.i.i.i.i.i417.cache_state.exit420_crit_edge, %if.then.i.i409.cache_state.exit420_crit_edge, %land.lhs.true.i.i405.cache_state.exit420_crit_edge, %if.end69.cache_state.exit420_crit_edge
  call fastcc void @merge_state(ptr noundef %tree, ptr noundef %state.0)
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %60)
  %cmp70 = icmp eq i64 %60, -1
  br i1 %cmp70, label %cache_state.exit420.out_crit_edge, label %if.end72

cache_state.exit420.out_crit_edge:                ; preds = %cache_state.exit420
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end72:                                         ; preds = %cache_state.exit420
  %add73 = add nuw i64 %60, 1
  %rb_node.i421 = getelementptr inbounds %struct.extent_state, ptr %state.0, i32 0, i32 2
  %call.i422 = call ptr @rb_next(ptr noundef %rb_node.i421) #14
  %tobool.not.i423 = icmp eq ptr %call.i422, null
  %add.ptr.i = getelementptr i8, ptr %call.i422, i32 -16
  %retval.0.i424 = select i1 %tobool.not.i423, ptr null, ptr %add.ptr.i
  call void @__sanitizer_cov_trace_cmp8(i64 %add73, i64 %end)
  %cmp75 = icmp uge i64 %add73, %end
  %tobool77.not = icmp eq ptr %retval.0.i424, null
  %or.cond382 = select i1 %cmp75, i1 true, i1 %tobool77.not
  br i1 %or.cond382, label %if.end72.search_again_crit_edge, label %land.lhs.true78

if.end72.search_again_crit_edge:                  ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again

land.lhs.true78:                                  ; preds = %if.end72
  %70 = ptrtoint ptr %retval.0.i424 to i32
  call void @__asan_load8_noabort(i32 %70)
  %71 = load i64, ptr %retval.0.i424, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %71, i64 %add73)
  %cmp80 = icmp eq i64 %71, %add73
  br i1 %cmp80, label %land.lhs.true81, label %land.lhs.true78.search_again_crit_edge

land.lhs.true78.search_again_crit_edge:           ; preds = %land.lhs.true78
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again

land.lhs.true81:                                  ; preds = %land.lhs.true78
  %72 = call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i = and i32 %72, -16384
  %73 = inttoptr i32 %and.i.i to ptr
  %74 = ptrtoint ptr %73 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load volatile i32, ptr %73, align 16384
  %76 = and i32 %75, 2
  %tobool.i.not = icmp eq i32 %76, 0
  br i1 %tobool.i.not, label %land.lhs.true81.hit_next_crit_edge, label %land.lhs.true81.search_again_crit_edge

land.lhs.true81.search_again_crit_edge:           ; preds = %land.lhs.true81
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again

land.lhs.true81.hit_next_crit_edge:               ; preds = %land.lhs.true81
  call void @__sanitizer_cov_trace_pc() #16
  br label %hit_next

if.end85:                                         ; preds = %hit_next
  call void @__sanitizer_cov_trace_cmp8(i64 %58, i64 %start.addr.1)
  %cmp87 = icmp ult i64 %58, %start.addr.1
  br i1 %cmp87, label %if.then88, label %if.end148

if.then88:                                        ; preds = %if.end85
  %state89 = getelementptr inbounds %struct.extent_state, ptr %state.0, i32 0, i32 5
  %77 = ptrtoint ptr %state89 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %state89, align 4
  %and90 = and i32 %78, %exclusive_bits
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and90)
  %tobool91.not = icmp eq i32 %and90, 0
  br i1 %tobool91.not, label %if.end93, label %if.then88.out.sink.split_crit_edge

if.then88.out.sink.split_crit_edge:               ; preds = %if.then88
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.sink.split

if.end93:                                         ; preds = %if.then88
  %79 = ptrtoint ptr %bits.addr to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %bits.addr, align 4
  %and95 = and i32 %80, %78
  call void @__sanitizer_cov_trace_cmp4(i32 %and95, i32 %80)
  %cmp96 = icmp eq i32 %and95, %80
  br i1 %cmp96, label %if.then97, label %if.end100

if.then97:                                        ; preds = %if.end93
  %add99 = add i64 %60, 1
  br i1 %tobool17.not, label %if.then97.search_again_crit_edge, label %land.lhs.true.i.i427

if.then97.search_again_crit_edge:                 ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again

land.lhs.true.i.i427:                             ; preds = %if.then97
  %81 = ptrtoint ptr %cached_state to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %cached_state, align 4
  %tobool1.not.i.i426 = icmp ne ptr %82, null
  %and.i.i429 = and i32 %78, 68
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i429)
  %tobool4.not.i.i430 = icmp eq i32 %and.i.i429, 0
  %or.cond540 = select i1 %tobool1.not.i.i426, i1 true, i1 %tobool4.not.i.i430
  br i1 %or.cond540, label %land.lhs.true.i.i427.search_again_crit_edge, label %if.then5.i.i436

land.lhs.true.i.i427.search_again_crit_edge:      ; preds = %land.lhs.true.i.i427
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again

if.then5.i.i436:                                  ; preds = %land.lhs.true.i.i427
  %83 = ptrtoint ptr %cached_state to i32
  call void @__asan_store4_noabort(i32 %83)
  store ptr %state.0, ptr %cached_state, align 4
  %refs.i.i432 = getelementptr inbounds %struct.extent_state, ptr %state.0, i32 0, i32 4
  %call.i.i.i.i.i.i.i433 = call zeroext i1 @__kasan_check_write(ptr noundef %refs.i.i432, i32 noundef 4) #14
  call void @llvm.prefetch.p0(ptr %refs.i.i432, i32 1, i32 3, i32 1) #14
  %84 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs.i.i432, ptr %refs.i.i432, i32 1, ptr elementtype(i32) %refs.i.i432) #14, !srcloc !338
  %asmresult.i.i.i.i.i.i.i434 = extractvalue { i32, i32, i32 } %84, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i434)
  %tobool1.not.i.i.i.i.i435 = icmp eq i32 %asmresult.i.i.i.i.i.i.i434, 0
  br i1 %tobool1.not.i.i.i.i.i435, label %if.then5.i.i436.if.end15.sink.split.i.i.i.i.i441_crit_edge, label %if.else.i.i.i.i.i439, !prof !319

if.then5.i.i436.if.end15.sink.split.i.i.i.i.i441_crit_edge: ; preds = %if.then5.i.i436
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i441

if.else.i.i.i.i.i439:                             ; preds = %if.then5.i.i436
  %add.i.i.i.i.i437 = add i32 %asmresult.i.i.i.i.i.i.i434, 1
  %85 = or i32 %add.i.i.i.i.i437, %asmresult.i.i.i.i.i.i.i434
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %85)
  %.not.i.i.i.i.i438 = icmp sgt i32 %85, -1
  br i1 %.not.i.i.i.i.i438, label %if.else.i.i.i.i.i439.search_again_crit_edge, label %if.else.i.i.i.i.i439.if.end15.sink.split.i.i.i.i.i441_crit_edge, !prof !322

if.else.i.i.i.i.i439.if.end15.sink.split.i.i.i.i.i441_crit_edge: ; preds = %if.else.i.i.i.i.i439
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i441

if.else.i.i.i.i.i439.search_again_crit_edge:      ; preds = %if.else.i.i.i.i.i439
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again

if.end15.sink.split.i.i.i.i.i441:                 ; preds = %if.else.i.i.i.i.i439.if.end15.sink.split.i.i.i.i.i441_crit_edge, %if.then5.i.i436.if.end15.sink.split.i.i.i.i.i441_crit_edge
  %.sink.i.i.i.i.i440 = phi i32 [ 2, %if.then5.i.i436.if.end15.sink.split.i.i.i.i.i441_crit_edge ], [ 1, %if.else.i.i.i.i.i439.if.end15.sink.split.i.i.i.i.i441_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refs.i.i432, i32 noundef %.sink.i.i.i.i.i440) #14
  br label %search_again

if.end100:                                        ; preds = %if.end93
  %tobool.not.i443 = icmp eq ptr %prealloc.2.ph, null
  br i1 %tobool.not.i443, label %alloc_extent_state_atomic.exit448, label %if.end100.do.end121_crit_edge

if.end100.do.end121_crit_edge:                    ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end121

alloc_extent_state_atomic.exit448:                ; preds = %if.end100
  %call.i444 = call fastcc ptr @alloc_extent_state(i32 noundef 2592) #14
  %tobool103.not = icmp eq ptr %call.i444, null
  br i1 %tobool103.not, label %do.body113, label %alloc_extent_state_atomic.exit448.do.end121_crit_edge, !prof !319

alloc_extent_state_atomic.exit448.do.end121_crit_edge: ; preds = %alloc_extent_state_atomic.exit448
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end121

do.body113:                                       ; preds = %alloc_extent_state_atomic.exit448
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1095, 0\0A.popsection", ""() #14, !srcloc !339
  unreachable

do.end121:                                        ; preds = %alloc_extent_state_atomic.exit448.do.end121_crit_edge, %if.end100.do.end121_crit_edge
  %prealloc.addr.0.i446527 = phi ptr [ %call.i444, %alloc_extent_state_atomic.exit448.do.end121_crit_edge ], [ %prealloc.2.ph, %if.end100.do.end121_crit_edge ]
  %call122 = call fastcc i32 @split_state(ptr noundef %tree, ptr noundef %state.0, ptr noundef nonnull %prealloc.addr.0.i446527, i64 noundef %start.addr.1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call122)
  %tobool123.not = icmp eq i32 %call122, 0
  br i1 %tobool123.not, label %if.end128.critedge, label %if.then124

if.then124:                                       ; preds = %do.end121
  call void @__sanitizer_cov_trace_pc() #16
  %fs_info.i449 = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 1
  %86 = ptrtoint ptr %fs_info.i449 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %fs_info.i449, align 4
  call void (ptr, ptr, i32, i32, ptr, ...) @__btrfs_panic(ptr noundef %87, ptr noundef nonnull @__func__.extent_io_tree_panic, i32 noundef 689, i32 noundef %call122, ptr noundef nonnull @.str.54) #17
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 689, 0\0A.popsection", ""() #14, !srcloc !332
  unreachable

if.end128.critedge:                               ; preds = %do.end121
  %88 = ptrtoint ptr %end58 to i32
  call void @__asan_load8_noabort(i32 %88)
  %89 = load i64, ptr %end58, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %89, i64 %end)
  %cmp130.not = icmp ugt i64 %89, %end
  br i1 %cmp130.not, label %if.end128.critedge.search_again_crit_edge, label %if.then131

if.end128.critedge.search_again_crit_edge:        ; preds = %if.end128.critedge
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again

if.then131:                                       ; preds = %if.end128.critedge
  call fastcc void @set_state_bits(ptr noundef %tree, ptr noundef %state.0, ptr noundef nonnull %bits.addr, ptr noundef %changeset)
  br i1 %tobool17.not, label %if.then131.cache_state.exit468_crit_edge, label %land.lhs.true.i.i453

if.then131.cache_state.exit468_crit_edge:         ; preds = %if.then131
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state.exit468

land.lhs.true.i.i453:                             ; preds = %if.then131
  %90 = ptrtoint ptr %cached_state to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %cached_state, align 4
  %tobool1.not.i.i452 = icmp eq ptr %91, null
  br i1 %tobool1.not.i.i452, label %if.then.i.i457, label %land.lhs.true.i.i453.cache_state.exit468_crit_edge

land.lhs.true.i.i453.cache_state.exit468_crit_edge: ; preds = %land.lhs.true.i.i453
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state.exit468

if.then.i.i457:                                   ; preds = %land.lhs.true.i.i453
  %92 = ptrtoint ptr %state89 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %state89, align 4
  %and.i.i455 = and i32 %93, 68
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i455)
  %tobool4.not.i.i456 = icmp eq i32 %and.i.i455, 0
  br i1 %tobool4.not.i.i456, label %if.then.i.i457.cache_state.exit468_crit_edge, label %if.then5.i.i462

if.then.i.i457.cache_state.exit468_crit_edge:     ; preds = %if.then.i.i457
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state.exit468

if.then5.i.i462:                                  ; preds = %if.then.i.i457
  %94 = ptrtoint ptr %cached_state to i32
  call void @__asan_store4_noabort(i32 %94)
  store ptr %state.0, ptr %cached_state, align 4
  %refs.i.i458 = getelementptr inbounds %struct.extent_state, ptr %state.0, i32 0, i32 4
  %call.i.i.i.i.i.i.i459 = call zeroext i1 @__kasan_check_write(ptr noundef %refs.i.i458, i32 noundef 4) #14
  call void @llvm.prefetch.p0(ptr %refs.i.i458, i32 1, i32 3, i32 1) #14
  %95 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs.i.i458, ptr %refs.i.i458, i32 1, ptr elementtype(i32) %refs.i.i458) #14, !srcloc !338
  %asmresult.i.i.i.i.i.i.i460 = extractvalue { i32, i32, i32 } %95, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i460)
  %tobool1.not.i.i.i.i.i461 = icmp eq i32 %asmresult.i.i.i.i.i.i.i460, 0
  br i1 %tobool1.not.i.i.i.i.i461, label %if.then5.i.i462.if.end15.sink.split.i.i.i.i.i467_crit_edge, label %if.else.i.i.i.i.i465, !prof !319

if.then5.i.i462.if.end15.sink.split.i.i.i.i.i467_crit_edge: ; preds = %if.then5.i.i462
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i467

if.else.i.i.i.i.i465:                             ; preds = %if.then5.i.i462
  %add.i.i.i.i.i463 = add i32 %asmresult.i.i.i.i.i.i.i460, 1
  %96 = or i32 %add.i.i.i.i.i463, %asmresult.i.i.i.i.i.i.i460
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %96)
  %.not.i.i.i.i.i464 = icmp sgt i32 %96, -1
  br i1 %.not.i.i.i.i.i464, label %if.else.i.i.i.i.i465.cache_state.exit468_crit_edge, label %if.else.i.i.i.i.i465.if.end15.sink.split.i.i.i.i.i467_crit_edge, !prof !322

if.else.i.i.i.i.i465.if.end15.sink.split.i.i.i.i.i467_crit_edge: ; preds = %if.else.i.i.i.i.i465
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i467

if.else.i.i.i.i.i465.cache_state.exit468_crit_edge: ; preds = %if.else.i.i.i.i.i465
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state.exit468

if.end15.sink.split.i.i.i.i.i467:                 ; preds = %if.else.i.i.i.i.i465.if.end15.sink.split.i.i.i.i.i467_crit_edge, %if.then5.i.i462.if.end15.sink.split.i.i.i.i.i467_crit_edge
  %.sink.i.i.i.i.i466 = phi i32 [ 2, %if.then5.i.i462.if.end15.sink.split.i.i.i.i.i467_crit_edge ], [ 1, %if.else.i.i.i.i.i465.if.end15.sink.split.i.i.i.i.i467_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refs.i.i458, i32 noundef %.sink.i.i.i.i.i466) #14
  br label %cache_state.exit468

cache_state.exit468:                              ; preds = %if.end15.sink.split.i.i.i.i.i467, %if.else.i.i.i.i.i465.cache_state.exit468_crit_edge, %if.then.i.i457.cache_state.exit468_crit_edge, %land.lhs.true.i.i453.cache_state.exit468_crit_edge, %if.then131.cache_state.exit468_crit_edge
  call fastcc void @merge_state(ptr noundef %tree, ptr noundef %state.0)
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %60)
  %cmp132 = icmp eq i64 %60, -1
  br i1 %cmp132, label %cache_state.exit468.out.thread_crit_edge, label %if.end134

cache_state.exit468.out.thread_crit_edge:         ; preds = %cache_state.exit468
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.thread

if.end134:                                        ; preds = %cache_state.exit468
  %add135 = add nuw i64 %60, 1
  %rb_node.i469 = getelementptr inbounds %struct.extent_state, ptr %state.0, i32 0, i32 2
  %call.i470 = call ptr @rb_next(ptr noundef %rb_node.i469) #14
  %tobool.not.i471 = icmp eq ptr %call.i470, null
  %add.ptr.i472 = getelementptr i8, ptr %call.i470, i32 -16
  %retval.0.i473 = select i1 %tobool.not.i471, ptr null, ptr %add.ptr.i472
  call void @__sanitizer_cov_trace_cmp8(i64 %add135, i64 %end)
  %cmp137 = icmp uge i64 %add135, %end
  %tobool139.not = icmp eq ptr %retval.0.i473, null
  %or.cond383 = select i1 %cmp137, i1 true, i1 %tobool139.not
  br i1 %or.cond383, label %if.end134.search_again_crit_edge, label %land.lhs.true140

if.end134.search_again_crit_edge:                 ; preds = %if.end134
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again

land.lhs.true140:                                 ; preds = %if.end134
  %97 = ptrtoint ptr %retval.0.i473 to i32
  call void @__asan_load8_noabort(i32 %97)
  %98 = load i64, ptr %retval.0.i473, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %98, i64 %add135)
  %cmp142 = icmp eq i64 %98, %add135
  br i1 %cmp142, label %land.lhs.true143, label %land.lhs.true140.search_again_crit_edge

land.lhs.true140.search_again_crit_edge:          ; preds = %land.lhs.true140
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again

land.lhs.true143:                                 ; preds = %land.lhs.true140
  %99 = call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i384 = and i32 %99, -16384
  %100 = inttoptr i32 %and.i.i384 to ptr
  %101 = ptrtoint ptr %100 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load volatile i32, ptr %100, align 16384
  %103 = and i32 %102, 2
  %tobool.i385.not = icmp eq i32 %103, 0
  br i1 %tobool.i385.not, label %land.lhs.true143.hit_next.outer_crit_edge, label %land.lhs.true143.search_again_crit_edge

land.lhs.true143.search_again_crit_edge:          ; preds = %land.lhs.true143
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again

land.lhs.true143.hit_next.outer_crit_edge:        ; preds = %land.lhs.true143
  call void @__sanitizer_cov_trace_pc() #16
  br label %hit_next.outer

if.end148:                                        ; preds = %if.end85
  call void @__sanitizer_cov_trace_cmp8(i64 %58, i64 %start.addr.1)
  %cmp150 = icmp ugt i64 %58, %start.addr.1
  call void @__sanitizer_cov_trace_cmp8(i64 %58, i64 %end)
  %cmp152 = icmp ugt i64 %58, %end
  br i1 %cmp150, label %if.then151, label %if.end183

if.then151:                                       ; preds = %if.end148
  %sub155 = add i64 %58, -1
  %this_end.0 = select i1 %cmp152, i64 %end, i64 %sub155
  %tobool.not.i474 = icmp eq ptr %prealloc.2.ph, null
  br i1 %tobool.not.i474, label %alloc_extent_state_atomic.exit479, label %if.then151.do.end177_crit_edge

if.then151.do.end177_crit_edge:                   ; preds = %if.then151
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end177

alloc_extent_state_atomic.exit479:                ; preds = %if.then151
  %call.i475 = call fastcc ptr @alloc_extent_state(i32 noundef 2592) #14
  %tobool159.not = icmp eq ptr %call.i475, null
  br i1 %tobool159.not, label %do.body169, label %alloc_extent_state_atomic.exit479.do.end177_crit_edge, !prof !319

alloc_extent_state_atomic.exit479.do.end177_crit_edge: ; preds = %alloc_extent_state_atomic.exit479
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end177

do.body169:                                       ; preds = %alloc_extent_state_atomic.exit479
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1132, 0\0A.popsection", ""() #14, !srcloc !340
  unreachable

do.end177:                                        ; preds = %alloc_extent_state_atomic.exit479.do.end177_crit_edge, %if.then151.do.end177_crit_edge
  %prealloc.addr.0.i477530 = phi ptr [ %call.i475, %alloc_extent_state_atomic.exit479.do.end177_crit_edge ], [ %prealloc.2.ph, %if.then151.do.end177_crit_edge ]
  %call178 = call fastcc i32 @insert_state(ptr noundef %tree, ptr noundef nonnull %prealloc.addr.0.i477530, i64 noundef %start.addr.1, i64 noundef %this_end.0, ptr noundef null, ptr noundef null, ptr noundef nonnull %bits.addr, ptr noundef %changeset)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call178)
  %tobool179.not = icmp eq i32 %call178, 0
  br i1 %tobool179.not, label %if.end181, label %if.then180

if.then180:                                       ; preds = %do.end177
  call void @__sanitizer_cov_trace_pc() #16
  %fs_info.i480 = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 1
  %104 = ptrtoint ptr %fs_info.i480 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %fs_info.i480, align 4
  call void (ptr, ptr, i32, i32, ptr, ...) @__btrfs_panic(ptr noundef %105, ptr noundef nonnull @__func__.extent_io_tree_panic, i32 noundef 689, i32 noundef %call178, ptr noundef nonnull @.str.54) #17
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 689, 0\0A.popsection", ""() #14, !srcloc !332
  unreachable

if.end181:                                        ; preds = %do.end177
  br i1 %tobool17.not, label %if.end181.cache_state.exit499_crit_edge, label %land.lhs.true.i.i484

if.end181.cache_state.exit499_crit_edge:          ; preds = %if.end181
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state.exit499

land.lhs.true.i.i484:                             ; preds = %if.end181
  %106 = ptrtoint ptr %cached_state to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %cached_state, align 4
  %tobool1.not.i.i483 = icmp eq ptr %107, null
  br i1 %tobool1.not.i.i483, label %if.then.i.i488, label %land.lhs.true.i.i484.cache_state.exit499_crit_edge

land.lhs.true.i.i484.cache_state.exit499_crit_edge: ; preds = %land.lhs.true.i.i484
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state.exit499

if.then.i.i488:                                   ; preds = %land.lhs.true.i.i484
  %state3.i.i485 = getelementptr inbounds %struct.extent_state, ptr %prealloc.addr.0.i477530, i32 0, i32 5
  %108 = ptrtoint ptr %state3.i.i485 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %state3.i.i485, align 4
  %and.i.i486 = and i32 %109, 68
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i486)
  %tobool4.not.i.i487 = icmp eq i32 %and.i.i486, 0
  br i1 %tobool4.not.i.i487, label %if.then.i.i488.cache_state.exit499_crit_edge, label %if.then5.i.i493

if.then.i.i488.cache_state.exit499_crit_edge:     ; preds = %if.then.i.i488
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state.exit499

if.then5.i.i493:                                  ; preds = %if.then.i.i488
  %110 = ptrtoint ptr %cached_state to i32
  call void @__asan_store4_noabort(i32 %110)
  store ptr %prealloc.addr.0.i477530, ptr %cached_state, align 4
  %refs.i.i489 = getelementptr inbounds %struct.extent_state, ptr %prealloc.addr.0.i477530, i32 0, i32 4
  %call.i.i.i.i.i.i.i490 = call zeroext i1 @__kasan_check_write(ptr noundef %refs.i.i489, i32 noundef 4) #14
  call void @llvm.prefetch.p0(ptr %refs.i.i489, i32 1, i32 3, i32 1) #14
  %111 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs.i.i489, ptr %refs.i.i489, i32 1, ptr elementtype(i32) %refs.i.i489) #14, !srcloc !338
  %asmresult.i.i.i.i.i.i.i491 = extractvalue { i32, i32, i32 } %111, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i491)
  %tobool1.not.i.i.i.i.i492 = icmp eq i32 %asmresult.i.i.i.i.i.i.i491, 0
  br i1 %tobool1.not.i.i.i.i.i492, label %if.then5.i.i493.if.end15.sink.split.i.i.i.i.i498_crit_edge, label %if.else.i.i.i.i.i496, !prof !319

if.then5.i.i493.if.end15.sink.split.i.i.i.i.i498_crit_edge: ; preds = %if.then5.i.i493
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i498

if.else.i.i.i.i.i496:                             ; preds = %if.then5.i.i493
  %add.i.i.i.i.i494 = add i32 %asmresult.i.i.i.i.i.i.i491, 1
  %112 = or i32 %add.i.i.i.i.i494, %asmresult.i.i.i.i.i.i.i491
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %112)
  %.not.i.i.i.i.i495 = icmp sgt i32 %112, -1
  br i1 %.not.i.i.i.i.i495, label %if.else.i.i.i.i.i496.cache_state.exit499_crit_edge, label %if.else.i.i.i.i.i496.if.end15.sink.split.i.i.i.i.i498_crit_edge, !prof !322

if.else.i.i.i.i.i496.if.end15.sink.split.i.i.i.i.i498_crit_edge: ; preds = %if.else.i.i.i.i.i496
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i498

if.else.i.i.i.i.i496.cache_state.exit499_crit_edge: ; preds = %if.else.i.i.i.i.i496
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state.exit499

if.end15.sink.split.i.i.i.i.i498:                 ; preds = %if.else.i.i.i.i.i496.if.end15.sink.split.i.i.i.i.i498_crit_edge, %if.then5.i.i493.if.end15.sink.split.i.i.i.i.i498_crit_edge
  %.sink.i.i.i.i.i497 = phi i32 [ 2, %if.then5.i.i493.if.end15.sink.split.i.i.i.i.i498_crit_edge ], [ 1, %if.else.i.i.i.i.i496.if.end15.sink.split.i.i.i.i.i498_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refs.i.i489, i32 noundef %.sink.i.i.i.i.i497) #14
  br label %cache_state.exit499

cache_state.exit499:                              ; preds = %if.end15.sink.split.i.i.i.i.i498, %if.else.i.i.i.i.i496.cache_state.exit499_crit_edge, %if.then.i.i488.cache_state.exit499_crit_edge, %land.lhs.true.i.i484.cache_state.exit499_crit_edge, %if.end181.cache_state.exit499_crit_edge
  %add182 = add nuw i64 %this_end.0, 1
  br label %search_again

if.end183:                                        ; preds = %if.end148
  %cmp63.not.not = xor i1 %cmp63.not, true
  %brmerge = select i1 %cmp152, i1 true, i1 %cmp63.not.not
  br i1 %brmerge, label %if.end183.search_again_crit_edge, label %if.then189

if.end183.search_again_crit_edge:                 ; preds = %if.end183
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again

if.then189:                                       ; preds = %if.end183
  %state190 = getelementptr inbounds %struct.extent_state, ptr %state.0, i32 0, i32 5
  %113 = ptrtoint ptr %state190 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %state190, align 4
  %and191 = and i32 %114, %exclusive_bits
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and191)
  %tobool192.not = icmp eq i32 %and191, 0
  br i1 %tobool192.not, label %if.end194, label %if.then189.out.sink.split_crit_edge

if.then189.out.sink.split_crit_edge:              ; preds = %if.then189
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.sink.split

if.end194:                                        ; preds = %if.then189
  %tobool.not.i500 = icmp eq ptr %prealloc.2.ph, null
  br i1 %tobool.not.i500, label %alloc_extent_state_atomic.exit505, label %if.end194.do.end215_crit_edge

if.end194.do.end215_crit_edge:                    ; preds = %if.end194
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end215

alloc_extent_state_atomic.exit505:                ; preds = %if.end194
  %call.i501 = call fastcc ptr @alloc_extent_state(i32 noundef 2592) #14
  %tobool197.not = icmp eq ptr %call.i501, null
  br i1 %tobool197.not, label %do.body207, label %alloc_extent_state_atomic.exit505.do.end215_crit_edge, !prof !319

alloc_extent_state_atomic.exit505.do.end215_crit_edge: ; preds = %alloc_extent_state_atomic.exit505
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end215

do.body207:                                       ; preds = %alloc_extent_state_atomic.exit505
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1162, 0\0A.popsection", ""() #14, !srcloc !341
  unreachable

do.end215:                                        ; preds = %alloc_extent_state_atomic.exit505.do.end215_crit_edge, %if.end194.do.end215_crit_edge
  %prealloc.addr.0.i503535 = phi ptr [ %call.i501, %alloc_extent_state_atomic.exit505.do.end215_crit_edge ], [ %prealloc.2.ph, %if.end194.do.end215_crit_edge ]
  %add216 = add nuw i64 %end, 1
  %call217 = call fastcc i32 @split_state(ptr noundef %tree, ptr noundef %state.0, ptr noundef nonnull %prealloc.addr.0.i503535, i64 noundef %add216)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call217)
  %tobool218.not = icmp eq i32 %call217, 0
  br i1 %tobool218.not, label %if.end220, label %if.then219

if.then219:                                       ; preds = %do.end215
  call void @__sanitizer_cov_trace_pc() #16
  %fs_info.i506 = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 1
  %115 = ptrtoint ptr %fs_info.i506 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %fs_info.i506, align 4
  call void (ptr, ptr, i32, i32, ptr, ...) @__btrfs_panic(ptr noundef %116, ptr noundef nonnull @__func__.extent_io_tree_panic, i32 noundef 689, i32 noundef %call217, ptr noundef nonnull @.str.54) #17
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 689, 0\0A.popsection", ""() #14, !srcloc !332
  unreachable

if.end220:                                        ; preds = %do.end215
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @set_state_bits(ptr noundef %tree, ptr noundef nonnull %prealloc.addr.0.i503535, ptr noundef nonnull %bits.addr, ptr noundef %changeset)
  call fastcc void @cache_state(ptr noundef nonnull %prealloc.addr.0.i503535, ptr noundef %cached_state)
  call fastcc void @merge_state(ptr noundef %tree, ptr noundef nonnull %prealloc.addr.0.i503535)
  br label %out.thread

search_again:                                     ; preds = %if.end183.search_again_crit_edge, %cache_state.exit499, %land.lhs.true143.search_again_crit_edge, %land.lhs.true140.search_again_crit_edge, %if.end134.search_again_crit_edge, %if.end128.critedge.search_again_crit_edge, %if.end15.sink.split.i.i.i.i.i441, %if.else.i.i.i.i.i439.search_again_crit_edge, %land.lhs.true.i.i427.search_again_crit_edge, %if.then97.search_again_crit_edge, %land.lhs.true81.search_again_crit_edge, %land.lhs.true78.search_again_crit_edge, %if.end72.search_again_crit_edge
  %prealloc.3 = phi ptr [ null, %cache_state.exit499 ], [ %prealloc.2.ph, %if.end183.search_again_crit_edge ], [ %prealloc.2.ph, %if.then97.search_again_crit_edge ], [ %prealloc.2.ph, %land.lhs.true.i.i427.search_again_crit_edge ], [ %prealloc.2.ph, %if.else.i.i.i.i.i439.search_again_crit_edge ], [ %prealloc.2.ph, %if.end15.sink.split.i.i.i.i.i441 ], [ %prealloc.2.ph, %land.lhs.true81.search_again_crit_edge ], [ %prealloc.2.ph, %land.lhs.true78.search_again_crit_edge ], [ %prealloc.2.ph, %if.end72.search_again_crit_edge ], [ null, %if.end134.search_again_crit_edge ], [ null, %land.lhs.true140.search_again_crit_edge ], [ null, %land.lhs.true143.search_again_crit_edge ], [ null, %if.end128.critedge.search_again_crit_edge ]
  %start.addr.2 = phi i64 [ %add182, %cache_state.exit499 ], [ %start.addr.1, %if.end183.search_again_crit_edge ], [ %add99, %if.then97.search_again_crit_edge ], [ %add99, %land.lhs.true.i.i427.search_again_crit_edge ], [ %add99, %if.else.i.i.i.i.i439.search_again_crit_edge ], [ %add99, %if.end15.sink.split.i.i.i.i.i441 ], [ %add73, %land.lhs.true81.search_again_crit_edge ], [ %add73, %land.lhs.true78.search_again_crit_edge ], [ %add73, %if.end72.search_again_crit_edge ], [ %start.addr.1, %if.end128.critedge.search_again_crit_edge ], [ %add135, %land.lhs.true143.search_again_crit_edge ], [ %add135, %land.lhs.true140.search_again_crit_edge ], [ %add135, %if.end134.search_again_crit_edge ]
  call void @__sanitizer_cov_trace_cmp8(i64 %start.addr.2, i64 %end)
  %cmp222 = icmp ugt i64 %start.addr.2, %end
  br i1 %cmp222, label %search_again.out_crit_edge, label %if.end224

search_again.out_crit_edge:                       ; preds = %search_again
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end224:                                        ; preds = %search_again
  call void @_raw_spin_unlock(ptr noundef %lock) #14
  br i1 %tobool.i386.not, label %if.end224.again.backedge_crit_edge, label %if.then227

if.end224.again.backedge_crit_edge:               ; preds = %if.end224
  call void @__sanitizer_cov_trace_pc() #16
  br label %again.backedge

if.then227:                                       ; preds = %if.end224
  call void @__sanitizer_cov_trace_pc() #16
  call void @__might_resched(ptr noundef nonnull @.str.2, i32 noundef 1179, i32 noundef 0) #14
  %call.i510 = call i32 @__cond_resched() #14
  br label %again.backedge

again.backedge:                                   ; preds = %if.then227, %if.end224.again.backedge_crit_edge
  br label %again

out.thread:                                       ; preds = %if.end220, %cache_state.exit468.out.thread_crit_edge, %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.out.thread_crit_edge, %if.then.i.i402.out.thread_crit_edge, %land.lhs.true.i.i.out.thread_crit_edge, %insert_state.exit.out.thread_crit_edge
  call void @_raw_spin_unlock(ptr noundef %lock) #14
  br label %cleanup

out.sink.split:                                   ; preds = %if.then189.out.sink.split_crit_edge, %if.then88.out.sink.split_crit_edge, %if.then64.out.sink.split_crit_edge
  %117 = ptrtoint ptr %failed_start to i32
  call void @__asan_store8_noabort(i32 %117)
  store i64 %start.addr.1, ptr %failed_start, align 8
  br label %out

out:                                              ; preds = %out.sink.split, %search_again.out_crit_edge, %cache_state.exit420.out_crit_edge
  %prealloc.4 = phi ptr [ %prealloc.2.ph, %out.sink.split ], [ %prealloc.2.ph, %cache_state.exit420.out_crit_edge ], [ %prealloc.3, %search_again.out_crit_edge ]
  %err.3 = phi i32 [ -17, %out.sink.split ], [ 0, %cache_state.exit420.out_crit_edge ], [ 0, %search_again.out_crit_edge ]
  call void @_raw_spin_unlock(ptr noundef %lock) #14
  %tobool232.not = icmp eq ptr %prealloc.4, null
  br i1 %tobool232.not, label %out.cleanup_crit_edge, label %if.then233

out.cleanup_crit_edge:                            ; preds = %out
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then233:                                       ; preds = %out
  call void @__sanitizer_cov_trace_pc() #16
  call void @free_extent_state(ptr noundef nonnull %prealloc.4)
  br label %cleanup

cleanup:                                          ; preds = %if.then233, %out.cleanup_crit_edge, %out.thread
  %err.3539 = phi i32 [ 0, %out.thread ], [ %err.3, %out.cleanup_crit_edge ], [ %err.3, %if.then233 ]
  ret i32 %err.3539
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_btrfs_set_extent_bit(ptr noundef %tree, i64 noundef %start, i64 noundef %len, i32 noundef %set_bits) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_btrfs_set_extent_bit, i32 0, i32 1), ptr blockaddress(@trace_btrfs_set_extent_bit, %do.body)) #14
          to label %if.end48 [label %do.body], !srcloc !326

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !322

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.49, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  %9 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !342
  %call42 = tail call i32 @__traceiter_btrfs_set_extent_bit(ptr noundef null, ptr noundef %tree, i64 noundef %start, i64 noundef %len, i32 noundef %set_bits) #14
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !343
  %13 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !322

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.49, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !329
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_btrfs_set_extent_bit, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_btrfs_set_extent_bit, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_btrfs_set_extent_bit.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @trace_btrfs_set_extent_bit.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.47, i32 noundef 1957, ptr noundef nonnull @.str.48) #14
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !330
  %31 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @insert_state(ptr noundef %tree, ptr noundef %state, i64 noundef %start, i64 noundef %end, ptr noundef readonly %p, ptr noundef readonly %parent, ptr noundef %bits, ptr noundef %changeset) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_cmp8(i64 %end, i64 %start)
  %cmp = icmp ult i64 %end, %start
  br i1 %cmp, label %if.then, label %entry.if.end16_crit_edge

entry.if.end16_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %fs_info = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 1
  %0 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info, align 4
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %1, ptr noundef nonnull @.str.55, i64 noundef %end, i64 noundef %start) #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 566, i32 noundef 9, ptr noundef null) #14
  br label %if.end16

if.end16:                                         ; preds = %if.then, %entry.if.end16_crit_edge
  %2 = ptrtoint ptr %state to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 %start, ptr %state, align 8
  %end18 = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 1
  %3 = ptrtoint ptr %end18 to i32
  call void @__asan_store8_noabort(i32 %3)
  store i64 %end, ptr %end18, align 8
  tail call fastcc void @set_state_bits(ptr noundef %tree, ptr noundef %state, ptr noundef %bits, ptr noundef %changeset)
  %rb_node = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 2
  %tobool.not.i = icmp eq ptr %p, null
  %tobool2.not.i = icmp eq ptr %parent, null
  %or.cond.i = or i1 %tobool.not.i, %tobool2.not.i
  br i1 %or.cond.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #16
  %4 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %p, align 4
  %6 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %parent, align 4
  br label %if.end26

if.end.i:                                         ; preds = %if.end16
  %8 = ptrtoint ptr %tree to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %tree, align 4
  %tobool4.not28.i = icmp eq ptr %9, null
  br i1 %tobool4.not28.i, label %if.end.i.if.end26_crit_edge, label %if.end.i.while.body.i_crit_edge

if.end.i.while.body.i_crit_edge:                  ; preds = %if.end.i
  br label %while.body.i

if.end.i.if.end26_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end26

while.body.i:                                     ; preds = %if.end10.i.while.body.i_crit_edge, %if.end.i.while.body.i_crit_edge
  %10 = phi ptr [ %16, %if.end10.i.while.body.i_crit_edge ], [ %9, %if.end.i.while.body.i_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %10, i32 -16
  %11 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %add.ptr.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %12, i64 %end)
  %cmp.i = icmp ugt i64 %12, %end
  br i1 %cmp.i, label %if.then5.i, label %if.else.i

if.then5.i:                                       ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_left.i = getelementptr inbounds %struct.rb_node, ptr %10, i32 0, i32 2
  br label %if.end10.i

if.else.i:                                        ; preds = %while.body.i
  %end.i = getelementptr i8, ptr %10, i32 -8
  %13 = ptrtoint ptr %end.i to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %end.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %14, i64 %end)
  %cmp6.i = icmp ult i64 %14, %end
  br i1 %cmp6.i, label %if.then7.i, label %if.then21

if.then7.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_right.i = getelementptr inbounds %struct.rb_node, ptr %10, i32 0, i32 1
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.then7.i, %if.then5.i
  %p.1.i = phi ptr [ %rb_left.i, %if.then5.i ], [ %rb_right.i, %if.then7.i ]
  %15 = ptrtoint ptr %p.1.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %p.1.i, align 4
  %tobool4.not.i = icmp eq ptr %16, null
  br i1 %tobool4.not.i, label %if.end10.i.if.end26_crit_edge, label %if.end10.i.while.body.i_crit_edge

if.end10.i.while.body.i_crit_edge:                ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i

if.end10.i.if.end26_crit_edge:                    ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end26

if.then21:                                        ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  %add.ptr.i.le = getelementptr i8, ptr %10, i32 -16
  %end.i.le = getelementptr i8, ptr %10, i32 -8
  %fs_info23 = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 1
  %17 = ptrtoint ptr %fs_info23 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %fs_info23, align 4
  %19 = ptrtoint ptr %add.ptr.i.le to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %add.ptr.i.le, align 8
  %21 = ptrtoint ptr %end.i.le to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %end.i.le, align 8
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %18, ptr noundef nonnull @.str.56, i64 noundef %20, i64 noundef %22, i64 noundef %start, i64 noundef %end) #17
  br label %cleanup

if.end26:                                         ; preds = %if.end10.i.if.end26_crit_edge, %if.end.i.if.end26_crit_edge, %if.then.i
  %parent.1.i = phi ptr [ %7, %if.then.i ], [ null, %if.end.i.if.end26_crit_edge ], [ %10, %if.end10.i.if.end26_crit_edge ]
  %p.2.i = phi ptr [ %5, %if.then.i ], [ %tree, %if.end.i.if.end26_crit_edge ], [ %p.1.i, %if.end10.i.if.end26_crit_edge ]
  %23 = ptrtoint ptr %parent.1.i to i32
  %24 = ptrtoint ptr %rb_node to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %rb_node, align 4
  %rb_right.i.i = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 2, i32 1
  %25 = ptrtoint ptr %rb_right.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %rb_right.i.i, align 4
  %rb_left.i.i = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 2, i32 2
  %26 = ptrtoint ptr %rb_left.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr null, ptr %rb_left.i.i, align 4
  %27 = ptrtoint ptr %p.2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %rb_node, ptr %p.2.i, align 4
  tail call void @rb_insert_color(ptr noundef %rb_node, ptr noundef %tree) #14
  tail call fastcc void @merge_state(ptr noundef %tree, ptr noundef %state)
  br label %cleanup

cleanup:                                          ; preds = %if.end26, %if.then21
  %retval.0 = phi i32 [ -17, %if.then21 ], [ 0, %if.end26 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @cache_state(ptr noundef %state, ptr noundef %cached_ptr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %cached_ptr, null
  br i1 %tobool.not.i, label %entry.cache_state_if_flags.exit_crit_edge, label %land.lhs.true.i

entry.cache_state_if_flags.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state_if_flags.exit

land.lhs.true.i:                                  ; preds = %entry
  %0 = ptrtoint ptr %cached_ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cached_ptr, align 4
  %tobool1.not.i = icmp eq ptr %1, null
  br i1 %tobool1.not.i, label %if.then.i, label %land.lhs.true.i.cache_state_if_flags.exit_crit_edge

land.lhs.true.i.cache_state_if_flags.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state_if_flags.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  %state3.i = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 5
  %2 = ptrtoint ptr %state3.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %state3.i, align 4
  %and.i = and i32 %3, 68
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool4.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool4.not.i, label %if.then.i.cache_state_if_flags.exit_crit_edge, label %if.then5.i

if.then.i.cache_state_if_flags.exit_crit_edge:    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state_if_flags.exit

if.then5.i:                                       ; preds = %if.then.i
  %4 = ptrtoint ptr %cached_ptr to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %state, ptr %cached_ptr, align 4
  %refs.i = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 4
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refs.i, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %refs.i, i32 1, i32 3, i32 1) #14
  %5 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs.i, ptr %refs.i, i32 1, ptr elementtype(i32) %refs.i) #14, !srcloc !338
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %5, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then5.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !319

if.then5.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then5.i
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %6 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %6)
  %.not.i.i.i.i = icmp sgt i32 %6, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.cache_state_if_flags.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !322

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.cache_state_if_flags.exit_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state_if_flags.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then5.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then5.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refs.i, i32 noundef %.sink.i.i.i.i) #14
  br label %cache_state_if_flags.exit

cache_state_if_flags.exit:                        ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.cache_state_if_flags.exit_crit_edge, %if.then.i.cache_state_if_flags.exit_crit_edge, %land.lhs.true.i.cache_state_if_flags.exit_crit_edge, %entry.cache_state_if_flags.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @set_state_bits(ptr nocapture noundef %tree, ptr noundef %state, ptr noundef %bits, ptr noundef %changeset) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %bits to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %bits, align 4
  %and = and i32 %1, -41217
  %private_data = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 2
  %2 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %private_data, align 8
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %location.i.i = getelementptr i8, ptr %3, i32 -860
  %4 = ptrtoint ptr %location.i.i to i32
  call void @__asan_loadN_noabort(i32 %4, i32 8)
  %5 = load i64, ptr %location.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %5)
  %tobool.not.i.i = icmp eq i64 %5, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.if.then.i.i_crit_edge, label %lor.lhs.false.i.i

land.lhs.true.if.then.i.i_crit_edge:              ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i

lor.lhs.false.i.i:                                ; preds = %land.lhs.true
  %type.i.i = getelementptr i8, ptr %3, i32 -852
  %6 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %7)
  %cmp.i.i = icmp eq i8 %7, -124
  br i1 %cmp.i.i, label %lor.lhs.false.i.i.if.then.i.i_crit_edge, label %lor.lhs.false.i.i.is_data_inode.exit_crit_edge

lor.lhs.false.i.i.is_data_inode.exit_crit_edge:   ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %is_data_inode.exit

lor.lhs.false.i.i.if.then.i.i_crit_edge:          ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i

if.then.i.i:                                      ; preds = %lor.lhs.false.i.i.if.then.i.i_crit_edge, %land.lhs.true.if.then.i.i_crit_edge
  %i_ino.i.i = getelementptr i8, ptr %3, i32 40
  %8 = ptrtoint ptr %i_ino.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %i_ino.i.i, align 8
  %conv3.i.i = zext i32 %9 to i64
  br label %is_data_inode.exit

is_data_inode.exit:                               ; preds = %if.then.i.i, %lor.lhs.false.i.i.is_data_inode.exit_crit_edge
  %ino.0.i.i = phi i64 [ %conv3.i.i, %if.then.i.i ], [ %5, %lor.lhs.false.i.i.is_data_inode.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %ino.0.i.i)
  %cmp.i.not = icmp eq i64 %ino.0.i.i, 1
  br i1 %cmp.i.not, label %is_data_inode.exit.if.end_crit_edge, label %if.then

is_data_inode.exit.if.end_crit_edge:              ; preds = %is_data_inode.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %is_data_inode.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @btrfs_set_delalloc_extent(ptr noundef nonnull %3, ptr noundef %state, ptr noundef %bits) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %is_data_inode.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %and3 = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool4.not = icmp eq i32 %and3, 0
  br i1 %tobool4.not, label %if.end.if.end11_crit_edge, label %land.lhs.true5

if.end.if.end11_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end11

land.lhs.true5:                                   ; preds = %if.end
  %state6 = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 5
  %10 = ptrtoint ptr %state6 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %state6, align 4
  %and7 = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7)
  %tobool8.not = icmp eq i32 %and7, 0
  br i1 %tobool8.not, label %if.then9, label %land.lhs.true5.if.end11_crit_edge

land.lhs.true5.if.end11_crit_edge:                ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end11

if.then9:                                         ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #16
  %end = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 1
  %12 = ptrtoint ptr %end to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %end, align 8
  %14 = ptrtoint ptr %state to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %state, align 8
  %dirty_bytes = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 3
  %16 = ptrtoint ptr %dirty_bytes to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %dirty_bytes, align 8
  %sub = add i64 %13, 1
  %add = sub i64 %sub, %15
  %add10 = add i64 %add, %17
  store i64 %add10, ptr %dirty_bytes, align 8
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %land.lhs.true5.if.end11_crit_edge, %if.end.if.end11_crit_edge
  %tobool.not.i = icmp eq ptr %changeset, null
  br i1 %tobool.not.i, label %if.end11.do.end22_crit_edge, label %if.end.i

if.end11.do.end22_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end22

if.end.i:                                         ; preds = %if.end11
  %state7.i = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 5
  %18 = ptrtoint ptr %state7.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %state7.i, align 4
  %and8.i = and i32 %19, %and
  call void @__sanitizer_cov_trace_cmp4(i32 %and8.i, i32 %and)
  %cmp.i35 = icmp eq i32 %and8.i, %and
  br i1 %cmp.i35, label %if.end.i.do.end22_crit_edge, label %add_extent_changeset.exit

if.end.i.do.end22_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end22

add_extent_changeset.exit:                        ; preds = %if.end.i
  %end.i = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 1
  %20 = ptrtoint ptr %end.i to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %end.i, align 8
  %22 = ptrtoint ptr %state to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %state, align 8
  %sub.i = sub i64 %21, %23
  %24 = ptrtoint ptr %changeset to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %changeset, align 4
  %26 = trunc i64 %sub.i to i32
  %27 = add i32 %25, 1
  %conv13.i = add i32 %27, %26
  store i32 %conv13.i, ptr %changeset, align 4
  %range_changed.i = getelementptr inbounds %struct.extent_changeset, ptr %changeset, i32 0, i32 1
  %28 = load i64, ptr %state, align 8
  %29 = load i64, ptr %end.i, align 8
  %call.i = tail call i32 @ulist_add(ptr noundef %range_changed.i, i64 noundef %28, i64 noundef %29, i32 noundef 2592) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp slt i32 %call.i, 0
  br i1 %cmp, label %do.body16, label %add_extent_changeset.exit.do.end22_crit_edge, !prof !319

add_extent_changeset.exit.do.end22_crit_edge:     ; preds = %add_extent_changeset.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end22

do.body16:                                        ; preds = %add_extent_changeset.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 938, 0\0A.popsection", ""() #14, !srcloc !344
  unreachable

do.end22:                                         ; preds = %add_extent_changeset.exit.do.end22_crit_edge, %if.end.i.do.end22_crit_edge, %if.end11.do.end22_crit_edge
  %state23 = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 5
  %30 = ptrtoint ptr %state23 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %state23, align 4
  %or = or i32 %31, %and
  store i32 %or, ptr %state23, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @merge_state(ptr noundef %tree, ptr noundef %state) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %state1 = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 5
  %0 = ptrtoint ptr %state1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %state1, align 4
  %and = and i32 %1, 68
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %rb_node = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 2
  %call = tail call ptr @rb_prev(ptr noundef %rb_node) #14
  %tobool2.not = icmp eq ptr %call, null
  br i1 %tobool2.not, label %if.end.if.end22_crit_edge, label %if.then3

if.end.if.end22_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22

if.then3:                                         ; preds = %if.end
  %add.ptr = getelementptr i8, ptr %call, i32 -16
  %end = getelementptr i8, ptr %call, i32 -8
  %2 = ptrtoint ptr %end to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %end, align 8
  %4 = ptrtoint ptr %state to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %state, align 8
  %sub = add i64 %5, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %3, i64 %sub)
  %cmp = icmp eq i64 %3, %sub
  br i1 %cmp, label %land.lhs.true, label %if.then3.if.end22_crit_edge

if.then3.if.end22_crit_edge:                      ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22

land.lhs.true:                                    ; preds = %if.then3
  %state4 = getelementptr i8, ptr %call, i32 68
  %6 = ptrtoint ptr %state4 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %state4, align 4
  %8 = ptrtoint ptr %state1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %state1, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %9)
  %cmp6 = icmp eq i32 %7, %9
  br i1 %cmp6, label %if.then7, label %land.lhs.true.if.end22_crit_edge

land.lhs.true.if.end22_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22

if.then7:                                         ; preds = %land.lhs.true
  %private_data = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 2
  %10 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %private_data, align 8
  %tobool8.not = icmp eq ptr %11, null
  br i1 %tobool8.not, label %if.then7.if.end14_crit_edge, label %land.lhs.true9

if.then7.if.end14_crit_edge:                      ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14

land.lhs.true9:                                   ; preds = %if.then7
  %location.i.i = getelementptr i8, ptr %11, i32 -860
  %12 = ptrtoint ptr %location.i.i to i32
  call void @__asan_loadN_noabort(i32 %12, i32 8)
  %13 = load i64, ptr %location.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %13)
  %tobool.not.i.i = icmp eq i64 %13, 0
  br i1 %tobool.not.i.i, label %land.lhs.true9.if.then.i.i_crit_edge, label %lor.lhs.false.i.i

land.lhs.true9.if.then.i.i_crit_edge:             ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i

lor.lhs.false.i.i:                                ; preds = %land.lhs.true9
  %type.i.i = getelementptr i8, ptr %11, i32 -852
  %14 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %15)
  %cmp.i.i = icmp eq i8 %15, -124
  br i1 %cmp.i.i, label %lor.lhs.false.i.i.if.then.i.i_crit_edge, label %lor.lhs.false.i.i.is_data_inode.exit_crit_edge

lor.lhs.false.i.i.is_data_inode.exit_crit_edge:   ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %is_data_inode.exit

lor.lhs.false.i.i.if.then.i.i_crit_edge:          ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i

if.then.i.i:                                      ; preds = %lor.lhs.false.i.i.if.then.i.i_crit_edge, %land.lhs.true9.if.then.i.i_crit_edge
  %i_ino.i.i = getelementptr i8, ptr %11, i32 40
  %16 = ptrtoint ptr %i_ino.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %i_ino.i.i, align 8
  %conv3.i.i = zext i32 %17 to i64
  br label %is_data_inode.exit

is_data_inode.exit:                               ; preds = %if.then.i.i, %lor.lhs.false.i.i.is_data_inode.exit_crit_edge
  %ino.0.i.i = phi i64 [ %conv3.i.i, %if.then.i.i ], [ %13, %lor.lhs.false.i.i.is_data_inode.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %ino.0.i.i)
  %cmp.i.not = icmp eq i64 %ino.0.i.i, 1
  br i1 %cmp.i.not, label %is_data_inode.exit.if.end14_crit_edge, label %if.then12

is_data_inode.exit.if.end14_crit_edge:            ; preds = %is_data_inode.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14

if.then12:                                        ; preds = %is_data_inode.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @btrfs_merge_delalloc_extent(ptr noundef nonnull %11, ptr noundef %state, ptr noundef %add.ptr) #14
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %is_data_inode.exit.if.end14_crit_edge, %if.then7.if.end14_crit_edge
  %18 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %add.ptr, align 8
  %20 = ptrtoint ptr %state to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %19, ptr %state, align 8
  tail call void @rb_erase(ptr noundef nonnull %call, ptr noundef %tree) #14
  %21 = ptrtoint ptr %call to i32
  %22 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %call, align 8
  tail call void @free_extent_state(ptr noundef %add.ptr)
  br label %if.end22

if.end22:                                         ; preds = %if.end14, %land.lhs.true.if.end22_crit_edge, %if.then3.if.end22_crit_edge, %if.end.if.end22_crit_edge
  %call24 = tail call ptr @rb_next(ptr noundef %rb_node) #14
  %tobool25.not = icmp eq ptr %call24, null
  br i1 %tobool25.not, label %if.end22.cleanup_crit_edge, label %if.then26

if.end22.cleanup_crit_edge:                       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then26:                                        ; preds = %if.end22
  %add.ptr29 = getelementptr i8, ptr %call24, i32 -16
  %23 = ptrtoint ptr %add.ptr29 to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %add.ptr29, align 8
  %end31 = getelementptr inbounds %struct.extent_state, ptr %state, i32 0, i32 1
  %25 = ptrtoint ptr %end31 to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %end31, align 8
  %add = add i64 %26, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %24, i64 %add)
  %cmp32 = icmp eq i64 %24, %add
  br i1 %cmp32, label %land.lhs.true33, label %if.then26.cleanup_crit_edge

if.then26.cleanup_crit_edge:                      ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true33:                                  ; preds = %if.then26
  %state34 = getelementptr i8, ptr %call24, i32 68
  %27 = ptrtoint ptr %state34 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %state34, align 4
  %29 = ptrtoint ptr %state1 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %state1, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %30)
  %cmp36 = icmp eq i32 %28, %30
  br i1 %cmp36, label %if.then37, label %land.lhs.true33.cleanup_crit_edge

land.lhs.true33.cleanup_crit_edge:                ; preds = %land.lhs.true33
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then37:                                        ; preds = %land.lhs.true33
  %private_data38 = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 2
  %31 = ptrtoint ptr %private_data38 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %private_data38, align 8
  %tobool39.not = icmp eq ptr %32, null
  br i1 %tobool39.not, label %if.then37.if.end45_crit_edge, label %land.lhs.true40

if.then37.if.end45_crit_edge:                     ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end45

land.lhs.true40:                                  ; preds = %if.then37
  %location.i.i92 = getelementptr i8, ptr %32, i32 -860
  %33 = ptrtoint ptr %location.i.i92 to i32
  call void @__asan_loadN_noabort(i32 %33, i32 8)
  %34 = load i64, ptr %location.i.i92, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %34)
  %tobool.not.i.i93 = icmp eq i64 %34, 0
  br i1 %tobool.not.i.i93, label %land.lhs.true40.if.then.i.i99_crit_edge, label %lor.lhs.false.i.i96

land.lhs.true40.if.then.i.i99_crit_edge:          ; preds = %land.lhs.true40
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i99

lor.lhs.false.i.i96:                              ; preds = %land.lhs.true40
  %type.i.i94 = getelementptr i8, ptr %32, i32 -852
  %35 = ptrtoint ptr %type.i.i94 to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %type.i.i94, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %36)
  %cmp.i.i95 = icmp eq i8 %36, -124
  br i1 %cmp.i.i95, label %lor.lhs.false.i.i96.if.then.i.i99_crit_edge, label %lor.lhs.false.i.i96.is_data_inode.exit102_crit_edge

lor.lhs.false.i.i96.is_data_inode.exit102_crit_edge: ; preds = %lor.lhs.false.i.i96
  call void @__sanitizer_cov_trace_pc() #16
  br label %is_data_inode.exit102

lor.lhs.false.i.i96.if.then.i.i99_crit_edge:      ; preds = %lor.lhs.false.i.i96
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i99

if.then.i.i99:                                    ; preds = %lor.lhs.false.i.i96.if.then.i.i99_crit_edge, %land.lhs.true40.if.then.i.i99_crit_edge
  %i_ino.i.i97 = getelementptr i8, ptr %32, i32 40
  %37 = ptrtoint ptr %i_ino.i.i97 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %i_ino.i.i97, align 8
  %conv3.i.i98 = zext i32 %38 to i64
  br label %is_data_inode.exit102

is_data_inode.exit102:                            ; preds = %if.then.i.i99, %lor.lhs.false.i.i96.is_data_inode.exit102_crit_edge
  %ino.0.i.i100 = phi i64 [ %conv3.i.i98, %if.then.i.i99 ], [ %34, %lor.lhs.false.i.i96.is_data_inode.exit102_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %ino.0.i.i100)
  %cmp.i101.not = icmp eq i64 %ino.0.i.i100, 1
  br i1 %cmp.i101.not, label %is_data_inode.exit102.if.end45_crit_edge, label %if.then43

is_data_inode.exit102.if.end45_crit_edge:         ; preds = %is_data_inode.exit102
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end45

if.then43:                                        ; preds = %is_data_inode.exit102
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @btrfs_merge_delalloc_extent(ptr noundef nonnull %32, ptr noundef %state, ptr noundef %add.ptr29) #14
  br label %if.end45

if.end45:                                         ; preds = %if.then43, %is_data_inode.exit102.if.end45_crit_edge, %if.then37.if.end45_crit_edge
  %end46 = getelementptr i8, ptr %call24, i32 -8
  %39 = ptrtoint ptr %end46 to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %end46, align 8
  %41 = ptrtoint ptr %end31 to i32
  call void @__asan_store8_noabort(i32 %41)
  store i64 %40, ptr %end31, align 8
  tail call void @rb_erase(ptr noundef nonnull %call24, ptr noundef %tree) #14
  %42 = ptrtoint ptr %call24 to i32
  %43 = ptrtoint ptr %call24 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %call24, align 8
  tail call void @free_extent_state(ptr noundef %add.ptr29)
  br label %cleanup

cleanup:                                          ; preds = %if.end45, %land.lhs.true33.cleanup_crit_edge, %if.then26.cleanup_crit_edge, %if.end22.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @convert_extent_bit(ptr noundef %tree, i64 noundef %start, i64 noundef %end, i32 noundef %bits, i32 noundef %clear_bits, ptr noundef %cached_state) local_unnamed_addr #0 align 64 {
entry:
  %bits.addr = alloca i32, align 4
  %clear_bits.addr = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %bits.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %bits, ptr %bits.addr, align 4
  %1 = ptrtoint ptr %clear_bits.addr to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %clear_bits, ptr %clear_bits.addr, align 4
  %private_data.i = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 2
  %2 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %private_data.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %entry.__btrfs_debug_check_extent_io_range.exit_crit_edge, label %lor.lhs.false.i

entry.__btrfs_debug_check_extent_io_range.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %__btrfs_debug_check_extent_io_range.exit

lor.lhs.false.i:                                  ; preds = %entry
  %location.i.i.i = getelementptr i8, ptr %3, i32 -860
  %4 = ptrtoint ptr %location.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %4, i32 8)
  %5 = load i64, ptr %location.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %5)
  %tobool.not.i.i.i = icmp eq i64 %5, 0
  br i1 %tobool.not.i.i.i, label %lor.lhs.false.i.if.then.i.i.i_crit_edge, label %lor.lhs.false.i.i.i

lor.lhs.false.i.if.then.i.i.i_crit_edge:          ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i

lor.lhs.false.i.i.i:                              ; preds = %lor.lhs.false.i
  %type.i.i.i = getelementptr i8, ptr %3, i32 -852
  %6 = ptrtoint ptr %type.i.i.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %7)
  %cmp.i.i.i = icmp eq i8 %7, -124
  br i1 %cmp.i.i.i, label %lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge, label %lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge

lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge: ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %is_data_inode.exit.i

lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge:      ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge, %lor.lhs.false.i.if.then.i.i.i_crit_edge
  %i_ino.i.i.i = getelementptr i8, ptr %3, i32 40
  %8 = ptrtoint ptr %i_ino.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %i_ino.i.i.i, align 8
  %conv3.i.i.i = zext i32 %9 to i64
  br label %is_data_inode.exit.i

is_data_inode.exit.i:                             ; preds = %if.then.i.i.i, %lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge
  %ino.0.i.i.i = phi i64 [ %conv3.i.i.i, %if.then.i.i.i ], [ %5, %lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %ino.0.i.i.i)
  %cmp.i.not.i = icmp eq i64 %ino.0.i.i.i, 1
  br i1 %cmp.i.not.i, label %is_data_inode.exit.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, label %if.end.i

is_data_inode.exit.i.__btrfs_debug_check_extent_io_range.exit_crit_edge: ; preds = %is_data_inode.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__btrfs_debug_check_extent_io_range.exit

if.end.i:                                         ; preds = %is_data_inode.exit.i
  %call1.i = tail call fastcc i64 @i_size_read(ptr noundef nonnull %3) #14
  call void @__sanitizer_cov_trace_const_cmp8(i64 4096, i64 %end)
  %cmp.i = icmp ult i64 %end, 4096
  %rem.i = and i64 %end, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %rem.i)
  %cmp2.i = icmp ne i64 %rem.i, 0
  %or.cond.not.i = or i1 %cmp.i, %cmp2.i
  %sub.i = add i64 %call1.i, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %sub.i, i64 %end)
  %cmp4.not.i = icmp eq i64 %sub.i, %end
  %or.cond32.i = select i1 %or.cond.not.i, i1 true, i1 %cmp4.not.i
  br i1 %or.cond32.i, label %if.end.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, label %do.body.i

if.end.i.__btrfs_debug_check_extent_io_range.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__btrfs_debug_check_extent_io_range.exit

do.body.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__btrfs_debug_check_extent_io_range.__UNIQUE_ID_ddebug945, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@convert_extent_bit, %do.body11.i)) #14
          to label %__btrfs_debug_check_extent_io_range.exit [label %do.body11.i], !srcloc !326

do.body11.i:                                      ; preds = %do.body.i
  %call12.i = tail call i32 @___ratelimit(ptr noundef nonnull @__btrfs_debug_check_extent_io_range._rs, ptr noundef nonnull @.str.50) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12.i)
  %tobool13.not.i = icmp eq i32 %call12.i, 0
  br i1 %tobool13.not.i, label %do.body11.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, label %if.then14.i

do.body11.i.__btrfs_debug_check_extent_io_range.exit_crit_edge: ; preds = %do.body11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__btrfs_debug_check_extent_io_range.exit

if.then14.i:                                      ; preds = %do.body11.i
  %add.ptr.i.i = getelementptr i8, ptr %3, i32 -864
  %10 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %add.ptr.i.i, align 8
  %fs_info.i = getelementptr inbounds %struct.btrfs_root, ptr %11, i32 0, i32 8
  %12 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %fs_info.i, align 8
  %14 = ptrtoint ptr %location.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 8)
  %15 = load i64, ptr %location.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %15)
  %tobool.not.i.i = icmp eq i64 %15, 0
  br i1 %tobool.not.i.i, label %if.then14.i.if.then.i.i_crit_edge, label %lor.lhs.false.i.i

if.then14.i.if.then.i.i_crit_edge:                ; preds = %if.then14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i

lor.lhs.false.i.i:                                ; preds = %if.then14.i
  %type.i.i = getelementptr i8, ptr %3, i32 -852
  %16 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %17)
  %cmp.i34.i = icmp eq i8 %17, -124
  br i1 %cmp.i34.i, label %lor.lhs.false.i.i.if.then.i.i_crit_edge, label %lor.lhs.false.i.i.btrfs_ino.exit.i_crit_edge

lor.lhs.false.i.i.btrfs_ino.exit.i_crit_edge:     ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_ino.exit.i

lor.lhs.false.i.i.if.then.i.i_crit_edge:          ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i

if.then.i.i:                                      ; preds = %lor.lhs.false.i.i.if.then.i.i_crit_edge, %if.then14.i.if.then.i.i_crit_edge
  %i_ino.i.i = getelementptr i8, ptr %3, i32 40
  %18 = ptrtoint ptr %i_ino.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %i_ino.i.i, align 8
  %conv3.i.i = zext i32 %19 to i64
  br label %btrfs_ino.exit.i

btrfs_ino.exit.i:                                 ; preds = %if.then.i.i, %lor.lhs.false.i.i.btrfs_ino.exit.i_crit_edge
  %ino.0.i.i = phi i64 [ %conv3.i.i, %if.then.i.i ], [ %15, %lor.lhs.false.i.i.btrfs_ino.exit.i_crit_edge ]
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %13, ptr noundef nonnull @.str.52, ptr noundef nonnull @__func__.convert_extent_bit, i64 noundef %ino.0.i.i, i64 noundef %call1.i, i64 noundef %start, i64 noundef %end) #17
  br label %__btrfs_debug_check_extent_io_range.exit

__btrfs_debug_check_extent_io_range.exit:         ; preds = %btrfs_ino.exit.i, %do.body11.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, %do.body.i, %if.end.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, %is_data_inode.exit.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, %entry.__btrfs_debug_check_extent_io_range.exit_crit_edge
  %sub = sub i64 1, %start
  %add = add i64 %sub, %end
  %20 = ptrtoint ptr %bits.addr to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %bits.addr, align 4
  %22 = ptrtoint ptr %clear_bits.addr to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %clear_bits.addr, align 4
  tail call fastcc void @trace_btrfs_convert_extent_bit(ptr noundef %tree, i64 noundef %start, i64 noundef %add, i32 noundef %21, i32 noundef %23)
  %lock = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 6
  %tobool5.not = icmp eq ptr %cached_state, null
  %dirty_bytes.i = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 3
  br label %again

again:                                            ; preds = %if.end124, %__btrfs_debug_check_extent_io_range.exit
  %prealloc.0 = phi ptr [ null, %__btrfs_debug_check_extent_io_range.exit ], [ %prealloc.4, %if.end124 ]
  %first_iteration.0.off0 = phi i1 [ true, %__btrfs_debug_check_extent_io_range.exit ], [ false, %if.end124 ]
  %start.addr.0 = phi i64 [ %start, %__btrfs_debug_check_extent_io_range.exit ], [ %start.addr.3, %if.end124 ]
  %tobool.not = icmp eq ptr %prealloc.0, null
  br i1 %tobool.not, label %if.then, label %again.if.end4_crit_edge

again.if.end4_crit_edge:                          ; preds = %again
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

if.then:                                          ; preds = %again
  %call = call fastcc ptr @alloc_extent_state(i32 noundef 3136)
  %tobool1.not = icmp ne ptr %call, null
  %brmerge = or i1 %first_iteration.0.off0, %tobool1.not
  br i1 %brmerge, label %if.then.if.end4_crit_edge, label %if.then.cleanup132_crit_edge

if.then.cleanup132_crit_edge:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup132

if.then.if.end4_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

if.end4:                                          ; preds = %if.then.if.end4_crit_edge, %again.if.end4_crit_edge
  %prealloc.1 = phi ptr [ %prealloc.0, %again.if.end4_crit_edge ], [ %call, %if.then.if.end4_crit_edge ]
  call void @_raw_spin_lock(ptr noundef %lock) #14
  br i1 %tobool5.not, label %if.end4.if.end17_crit_edge, label %land.lhs.true6

if.end4.if.end17_crit_edge:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end17

land.lhs.true6:                                   ; preds = %if.end4
  %24 = ptrtoint ptr %cached_state to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %cached_state, align 4
  %tobool7.not = icmp eq ptr %25, null
  br i1 %tobool7.not, label %land.lhs.true6.if.end17_crit_edge, label %if.then8

land.lhs.true6.if.end17_crit_edge:                ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end17

if.then8:                                         ; preds = %land.lhs.true6
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %25, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %27, i64 %start.addr.0)
  %cmp.not = icmp ugt i64 %27, %start.addr.0
  br i1 %cmp.not, label %if.then8.if.end17_crit_edge, label %land.lhs.true10

if.then8.if.end17_crit_edge:                      ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end17

land.lhs.true10:                                  ; preds = %if.then8
  %end11 = getelementptr inbounds %struct.extent_state, ptr %25, i32 0, i32 1
  %28 = ptrtoint ptr %end11 to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %end11, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %29, i64 %start.addr.0)
  %cmp12 = icmp ugt i64 %29, %start.addr.0
  br i1 %cmp12, label %land.lhs.true13, label %land.lhs.true10.if.end17_crit_edge

land.lhs.true10.if.end17_crit_edge:               ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end17

land.lhs.true13:                                  ; preds = %land.lhs.true10
  %rb_node.i = getelementptr inbounds %struct.extent_state, ptr %25, i32 0, i32 2
  %30 = ptrtoint ptr %rb_node.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rb_node.i, align 8
  %32 = ptrtoint ptr %rb_node.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %31, i32 %32)
  %cmp.i262.not = icmp eq i32 %31, %32
  br i1 %cmp.i262.not, label %land.lhs.true13.if.end17_crit_edge, label %land.lhs.true13.hit_next.outer.preheader_crit_edge

land.lhs.true13.hit_next.outer.preheader_crit_edge: ; preds = %land.lhs.true13
  call void @__sanitizer_cov_trace_pc() #16
  br label %hit_next.outer.preheader

land.lhs.true13.if.end17_crit_edge:               ; preds = %land.lhs.true13
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end17

if.end17:                                         ; preds = %land.lhs.true13.if.end17_crit_edge, %land.lhs.true10.if.end17_crit_edge, %if.then8.if.end17_crit_edge, %land.lhs.true6.if.end17_crit_edge, %if.end4.if.end17_crit_edge
  %33 = ptrtoint ptr %tree to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %tree, align 4
  %tobool.not78.i.i = icmp eq ptr %34, null
  br i1 %tobool.not78.i.i, label %if.end17.if.then20_crit_edge, label %if.end17.while.body.i.i_crit_edge

if.end17.while.body.i.i_crit_edge:                ; preds = %if.end17
  br label %while.body.i.i

if.end17.if.then20_crit_edge:                     ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then20

while.body.i.i:                                   ; preds = %if.end5.i.i.while.body.i.i_crit_edge, %if.end17.while.body.i.i_crit_edge
  %35 = phi ptr [ %41, %if.end5.i.i.while.body.i.i_crit_edge ], [ %34, %if.end17.while.body.i.i_crit_edge ]
  %add.ptr.i.i263 = getelementptr i8, ptr %35, i32 -16
  %36 = ptrtoint ptr %add.ptr.i.i263 to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %add.ptr.i.i263, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %37, i64 %start.addr.0)
  %cmp.i.i = icmp ugt i64 %37, %start.addr.0
  br i1 %cmp.i.i, label %if.then.i.i264, label %if.else.i.i

if.then.i.i264:                                   ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_left.i.i = getelementptr inbounds %struct.rb_node, ptr %35, i32 0, i32 2
  br label %if.end5.i.i

if.else.i.i:                                      ; preds = %while.body.i.i
  %end.i.i = getelementptr i8, ptr %35, i32 -8
  %38 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %end.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %39, i64 %start.addr.0)
  %cmp2.i.i = icmp ult i64 %39, %start.addr.0
  br i1 %cmp2.i.i, label %if.then3.i.i, label %if.else.i.i.if.end29_crit_edge

if.else.i.i.if.end29_crit_edge:                   ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

if.then3.i.i:                                     ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_right.i.i = getelementptr inbounds %struct.rb_node, ptr %35, i32 0, i32 1
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.then3.i.i, %if.then.i.i264
  %n.1.i.i = phi ptr [ %rb_left.i.i, %if.then.i.i264 ], [ %rb_right.i.i, %if.then3.i.i ]
  %40 = ptrtoint ptr %n.1.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %n.1.i.i, align 4
  %tobool.not.i.i265 = icmp eq ptr %41, null
  br i1 %tobool.not.i.i265, label %if.end5.i.i.land.rhs.i.i_crit_edge, label %if.end5.i.i.while.body.i.i_crit_edge

if.end5.i.i.while.body.i.i_crit_edge:             ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i

if.end5.i.i.land.rhs.i.i_crit_edge:               ; preds = %if.end5.i.i
  br label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %while.body18.i.i.land.rhs.i.i_crit_edge, %if.end5.i.i.land.rhs.i.i_crit_edge
  %prev.183.i.i = phi ptr [ %call.i.i, %while.body18.i.i.land.rhs.i.i_crit_edge ], [ %35, %if.end5.i.i.land.rhs.i.i_crit_edge ]
  %end16.i.i = getelementptr i8, ptr %prev.183.i.i, i32 -8
  %42 = ptrtoint ptr %end16.i.i to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %end16.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %43, i64 %start.addr.0)
  %cmp17.i.i = icmp ult i64 %43, %start.addr.0
  br i1 %cmp17.i.i, label %while.body18.i.i, label %land.rhs.i.i.if.end29_crit_edge

land.rhs.i.i.if.end29_crit_edge:                  ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

while.body18.i.i:                                 ; preds = %land.rhs.i.i
  %call.i.i = call ptr @rb_next(ptr noundef nonnull %prev.183.i.i) #14
  %tobool15.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool15.not.i.i, label %while.body18.i.i.if.then20_crit_edge, label %while.body18.i.i.land.rhs.i.i_crit_edge

while.body18.i.i.land.rhs.i.i_crit_edge:          ; preds = %while.body18.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.i.i

while.body18.i.i.if.then20_crit_edge:             ; preds = %while.body18.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then20

if.then20:                                        ; preds = %while.body18.i.i.if.then20_crit_edge, %if.end17.if.then20_crit_edge
  %p.1.ph = phi ptr [ %n.1.i.i, %while.body18.i.i.if.then20_crit_edge ], [ %tree, %if.end17.if.then20_crit_edge ]
  %parent.1.ph = phi ptr [ %35, %while.body18.i.i.if.then20_crit_edge ], [ null, %if.end17.if.then20_crit_edge ]
  %tobool.not.i266 = icmp eq ptr %prealloc.1, null
  br i1 %tobool.not.i266, label %alloc_extent_state_atomic.exit, label %if.then20.if.end24_crit_edge

if.then20.if.end24_crit_edge:                     ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end24

alloc_extent_state_atomic.exit:                   ; preds = %if.then20
  %call.i = call fastcc ptr @alloc_extent_state(i32 noundef 2592) #14
  %tobool22.not = icmp eq ptr %call.i, null
  br i1 %tobool22.not, label %alloc_extent_state_atomic.exit.out.thread_crit_edge, label %alloc_extent_state_atomic.exit.if.end24_crit_edge

alloc_extent_state_atomic.exit.if.end24_crit_edge: ; preds = %alloc_extent_state_atomic.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end24

alloc_extent_state_atomic.exit.out.thread_crit_edge: ; preds = %alloc_extent_state_atomic.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.thread

if.end24:                                         ; preds = %alloc_extent_state_atomic.exit.if.end24_crit_edge, %if.then20.if.end24_crit_edge
  %prealloc.addr.0.i449 = phi ptr [ %call.i, %alloc_extent_state_atomic.exit.if.end24_crit_edge ], [ %prealloc.1, %if.then20.if.end24_crit_edge ]
  call void @__sanitizer_cov_trace_cmp8(i64 %start.addr.0, i64 %end)
  %cmp.i268 = icmp ugt i64 %start.addr.0, %end
  br i1 %cmp.i268, label %if.then.i270, label %if.end24.insert_state.exit_crit_edge

if.end24.insert_state.exit_crit_edge:             ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #16
  br label %insert_state.exit

if.then.i270:                                     ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #16
  %fs_info.i269 = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 1
  %44 = ptrtoint ptr %fs_info.i269 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %fs_info.i269, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %45, ptr noundef nonnull @.str.55, i64 noundef %end, i64 noundef %start.addr.0) #17
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 566, i32 noundef 9, ptr noundef null) #14
  br label %insert_state.exit

insert_state.exit:                                ; preds = %if.then.i270, %if.end24.insert_state.exit_crit_edge
  %46 = ptrtoint ptr %prealloc.addr.0.i449 to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 %start.addr.0, ptr %prealloc.addr.0.i449, align 8
  %end18.i = getelementptr inbounds %struct.extent_state, ptr %prealloc.addr.0.i449, i32 0, i32 1
  %47 = ptrtoint ptr %end18.i to i32
  call void @__asan_store8_noabort(i32 %47)
  store i64 %end, ptr %end18.i, align 8
  %48 = ptrtoint ptr %bits.addr to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %bits.addr, align 4
  %and.i405 = and i32 %49, -41217
  %50 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %private_data.i, align 8
  %tobool.not.i407 = icmp eq ptr %51, null
  br i1 %tobool.not.i407, label %insert_state.exit.if.end.i423_crit_edge, label %land.lhs.true.i410

insert_state.exit.if.end.i423_crit_edge:          ; preds = %insert_state.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i423

land.lhs.true.i410:                               ; preds = %insert_state.exit
  %location.i.i.i408 = getelementptr i8, ptr %51, i32 -860
  %52 = ptrtoint ptr %location.i.i.i408 to i32
  call void @__asan_loadN_noabort(i32 %52, i32 8)
  %53 = load i64, ptr %location.i.i.i408, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %53)
  %tobool.not.i.i.i409 = icmp eq i64 %53, 0
  br i1 %tobool.not.i.i.i409, label %land.lhs.true.i410.if.then.i.i.i416_crit_edge, label %lor.lhs.false.i.i.i413

land.lhs.true.i410.if.then.i.i.i416_crit_edge:    ; preds = %land.lhs.true.i410
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i416

lor.lhs.false.i.i.i413:                           ; preds = %land.lhs.true.i410
  %type.i.i.i411 = getelementptr i8, ptr %51, i32 -852
  %54 = ptrtoint ptr %type.i.i.i411 to i32
  call void @__asan_load1_noabort(i32 %54)
  %55 = load i8, ptr %type.i.i.i411, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %55)
  %cmp.i.i.i412 = icmp eq i8 %55, -124
  br i1 %cmp.i.i.i412, label %lor.lhs.false.i.i.i413.if.then.i.i.i416_crit_edge, label %lor.lhs.false.i.i.i413.is_data_inode.exit.i419_crit_edge

lor.lhs.false.i.i.i413.is_data_inode.exit.i419_crit_edge: ; preds = %lor.lhs.false.i.i.i413
  call void @__sanitizer_cov_trace_pc() #16
  br label %is_data_inode.exit.i419

lor.lhs.false.i.i.i413.if.then.i.i.i416_crit_edge: ; preds = %lor.lhs.false.i.i.i413
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i416

if.then.i.i.i416:                                 ; preds = %lor.lhs.false.i.i.i413.if.then.i.i.i416_crit_edge, %land.lhs.true.i410.if.then.i.i.i416_crit_edge
  %i_ino.i.i.i414 = getelementptr i8, ptr %51, i32 40
  %56 = ptrtoint ptr %i_ino.i.i.i414 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %i_ino.i.i.i414, align 8
  %conv3.i.i.i415 = zext i32 %57 to i64
  br label %is_data_inode.exit.i419

is_data_inode.exit.i419:                          ; preds = %if.then.i.i.i416, %lor.lhs.false.i.i.i413.is_data_inode.exit.i419_crit_edge
  %ino.0.i.i.i417 = phi i64 [ %conv3.i.i.i415, %if.then.i.i.i416 ], [ %53, %lor.lhs.false.i.i.i413.is_data_inode.exit.i419_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %ino.0.i.i.i417)
  %cmp.i.not.i418 = icmp eq i64 %ino.0.i.i.i417, 1
  br i1 %cmp.i.not.i418, label %is_data_inode.exit.i419.if.end.i423_crit_edge, label %if.then.i420

is_data_inode.exit.i419.if.end.i423_crit_edge:    ; preds = %is_data_inode.exit.i419
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i423

if.then.i420:                                     ; preds = %is_data_inode.exit.i419
  call void @__sanitizer_cov_trace_pc() #16
  call void @btrfs_set_delalloc_extent(ptr noundef nonnull %51, ptr noundef nonnull %prealloc.addr.0.i449, ptr noundef nonnull %bits.addr) #14
  br label %if.end.i423

if.end.i423:                                      ; preds = %if.then.i420, %is_data_inode.exit.i419.if.end.i423_crit_edge, %insert_state.exit.if.end.i423_crit_edge
  %and3.i421 = and i32 %49, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i421)
  %tobool4.not.i422 = icmp eq i32 %and3.i421, 0
  br i1 %tobool4.not.i422, label %if.end.i423.set_state_bits.exit436_crit_edge, label %land.lhs.true5.i427

if.end.i423.set_state_bits.exit436_crit_edge:     ; preds = %if.end.i423
  call void @__sanitizer_cov_trace_pc() #16
  br label %set_state_bits.exit436

land.lhs.true5.i427:                              ; preds = %if.end.i423
  %state6.i424 = getelementptr inbounds %struct.extent_state, ptr %prealloc.addr.0.i449, i32 0, i32 5
  %58 = ptrtoint ptr %state6.i424 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %state6.i424, align 4
  %and7.i425 = and i32 %59, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7.i425)
  %tobool8.not.i426 = icmp eq i32 %and7.i425, 0
  br i1 %tobool8.not.i426, label %if.then9.i433, label %land.lhs.true5.i427.set_state_bits.exit436_crit_edge

land.lhs.true5.i427.set_state_bits.exit436_crit_edge: ; preds = %land.lhs.true5.i427
  call void @__sanitizer_cov_trace_pc() #16
  br label %set_state_bits.exit436

if.then9.i433:                                    ; preds = %land.lhs.true5.i427
  call void @__sanitizer_cov_trace_pc() #16
  %60 = ptrtoint ptr %end18.i to i32
  call void @__asan_load8_noabort(i32 %60)
  %61 = load i64, ptr %end18.i, align 8
  %62 = ptrtoint ptr %prealloc.addr.0.i449 to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %prealloc.addr.0.i449, align 8
  %64 = ptrtoint ptr %dirty_bytes.i to i32
  call void @__asan_load8_noabort(i32 %64)
  %65 = load i64, ptr %dirty_bytes.i, align 8
  %sub.i430 = add i64 %61, 1
  %add.i431 = sub i64 %sub.i430, %63
  %add10.i432 = add i64 %add.i431, %65
  store i64 %add10.i432, ptr %dirty_bytes.i, align 8
  br label %set_state_bits.exit436

set_state_bits.exit436:                           ; preds = %if.then9.i433, %land.lhs.true5.i427.set_state_bits.exit436_crit_edge, %if.end.i423.set_state_bits.exit436_crit_edge
  %state23.i434 = getelementptr inbounds %struct.extent_state, ptr %prealloc.addr.0.i449, i32 0, i32 5
  %66 = ptrtoint ptr %state23.i434 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %state23.i434, align 4
  %or.i435 = or i32 %67, %and.i405
  store i32 %or.i435, ptr %state23.i434, align 4
  %rb_node.i271 = getelementptr inbounds %struct.extent_state, ptr %prealloc.addr.0.i449, i32 0, i32 2
  %68 = ptrtoint ptr %parent.1.ph to i32
  %69 = ptrtoint ptr %rb_node.i271 to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %68, ptr %rb_node.i271, align 4
  %rb_right.i.i.i = getelementptr inbounds %struct.extent_state, ptr %prealloc.addr.0.i449, i32 0, i32 2, i32 1
  %70 = ptrtoint ptr %rb_right.i.i.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store ptr null, ptr %rb_right.i.i.i, align 4
  %rb_left.i.i.i = getelementptr inbounds %struct.extent_state, ptr %prealloc.addr.0.i449, i32 0, i32 2, i32 2
  %71 = ptrtoint ptr %rb_left.i.i.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr null, ptr %rb_left.i.i.i, align 4
  %72 = ptrtoint ptr %p.1.ph to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr %rb_node.i271, ptr %p.1.ph, align 4
  call void @rb_insert_color(ptr noundef %rb_node.i271, ptr noundef %tree) #14
  call fastcc void @merge_state(ptr noundef %tree, ptr noundef nonnull %prealloc.addr.0.i449) #14
  br i1 %tobool5.not, label %set_state_bits.exit436.out.thread_crit_edge, label %land.lhs.true.i.i

set_state_bits.exit436.out.thread_crit_edge:      ; preds = %set_state_bits.exit436
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.thread

land.lhs.true.i.i:                                ; preds = %set_state_bits.exit436
  %73 = ptrtoint ptr %cached_state to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %cached_state, align 4
  %tobool1.not.i.i = icmp eq ptr %74, null
  br i1 %tobool1.not.i.i, label %if.then.i.i277, label %land.lhs.true.i.i.out.thread_crit_edge

land.lhs.true.i.i.out.thread_crit_edge:           ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.thread

if.then.i.i277:                                   ; preds = %land.lhs.true.i.i
  %75 = ptrtoint ptr %state23.i434 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %state23.i434, align 4
  %and.i.i276 = and i32 %76, 68
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i276)
  %tobool4.not.i.i = icmp eq i32 %and.i.i276, 0
  br i1 %tobool4.not.i.i, label %if.then.i.i277.out.thread_crit_edge, label %if.then5.i.i

if.then.i.i277.out.thread_crit_edge:              ; preds = %if.then.i.i277
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.thread

if.then5.i.i:                                     ; preds = %if.then.i.i277
  %77 = ptrtoint ptr %cached_state to i32
  call void @__asan_store4_noabort(i32 %77)
  store ptr %prealloc.addr.0.i449, ptr %cached_state, align 4
  %refs.i.i = getelementptr inbounds %struct.extent_state, ptr %prealloc.addr.0.i449, i32 0, i32 4
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refs.i.i, i32 noundef 4) #14
  call void @llvm.prefetch.p0(ptr %refs.i.i, i32 1, i32 3, i32 1) #14
  %78 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs.i.i, ptr %refs.i.i, i32 1, ptr elementtype(i32) %refs.i.i) #14, !srcloc !338
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %78, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %if.then5.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !319

if.then5.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.then5.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %if.then5.i.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %79 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %79)
  %.not.i.i.i.i.i = icmp sgt i32 %79, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.out.thread_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !322

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.out.thread_crit_edge:           ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.thread

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %if.then5.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %if.then5.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refs.i.i, i32 noundef %.sink.i.i.i.i.i) #14
  br label %out.thread

if.end29:                                         ; preds = %land.rhs.i.i.if.end29_crit_edge, %if.else.i.i.if.end29_crit_edge
  %retval.0.i = phi ptr [ %prev.183.i.i, %land.rhs.i.i.if.end29_crit_edge ], [ %35, %if.else.i.i.if.end29_crit_edge ]
  %add.ptr = getelementptr i8, ptr %retval.0.i, i32 -16
  br label %hit_next.outer.preheader

hit_next.outer.preheader:                         ; preds = %if.end29, %land.lhs.true13.hit_next.outer.preheader_crit_edge
  %state.0.ph475.ph = phi ptr [ %25, %land.lhs.true13.hit_next.outer.preheader_crit_edge ], [ %add.ptr, %if.end29 ]
  br label %hit_next.outer

hit_next.outer:                                   ; preds = %land.lhs.true82.hit_next.outer_crit_edge, %hit_next.outer.preheader
  %prealloc.2.ph = phi ptr [ null, %land.lhs.true82.hit_next.outer_crit_edge ], [ %prealloc.1, %hit_next.outer.preheader ]
  %state.0.ph475 = phi ptr [ %call71, %land.lhs.true82.hit_next.outer_crit_edge ], [ %state.0.ph475.ph, %hit_next.outer.preheader ]
  %start.addr.1.ph = phi i64 [ %add75, %land.lhs.true82.hit_next.outer_crit_edge ], [ %start.addr.0, %hit_next.outer.preheader ]
  br label %hit_next

hit_next:                                         ; preds = %land.lhs.true49.hit_next_crit_edge, %hit_next.outer
  %state.0 = phi ptr [ %call38, %land.lhs.true49.hit_next_crit_edge ], [ %state.0.ph475, %hit_next.outer ]
  %start.addr.1 = phi i64 [ %add42, %land.lhs.true49.hit_next_crit_edge ], [ %start.addr.1.ph, %hit_next.outer ]
  %80 = ptrtoint ptr %state.0 to i32
  call void @__asan_load8_noabort(i32 %80)
  %81 = load i64, ptr %state.0, align 8
  %end31 = getelementptr inbounds %struct.extent_state, ptr %state.0, i32 0, i32 1
  %82 = ptrtoint ptr %end31 to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load i64, ptr %end31, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %81, i64 %start.addr.1)
  %cmp33 = icmp ne i64 %81, %start.addr.1
  call void @__sanitizer_cov_trace_cmp8(i64 %83, i64 %end)
  %cmp36.not = icmp ugt i64 %83, %end
  %or.cond = select i1 %cmp33, i1 true, i1 %cmp36.not
  br i1 %or.cond, label %if.end53, label %if.then37

if.then37:                                        ; preds = %hit_next
  %84 = ptrtoint ptr %bits.addr to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %bits.addr, align 4
  %and.i = and i32 %85, -41217
  %86 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %private_data.i, align 8
  %tobool.not.i279 = icmp eq ptr %87, null
  br i1 %tobool.not.i279, label %if.then37.if.end.i292_crit_edge, label %land.lhs.true.i

if.then37.if.end.i292_crit_edge:                  ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i292

land.lhs.true.i:                                  ; preds = %if.then37
  %location.i.i.i280 = getelementptr i8, ptr %87, i32 -860
  %88 = ptrtoint ptr %location.i.i.i280 to i32
  call void @__asan_loadN_noabort(i32 %88, i32 8)
  %89 = load i64, ptr %location.i.i.i280, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %89)
  %tobool.not.i.i.i281 = icmp eq i64 %89, 0
  br i1 %tobool.not.i.i.i281, label %land.lhs.true.i.if.then.i.i.i287_crit_edge, label %lor.lhs.false.i.i.i284

land.lhs.true.i.if.then.i.i.i287_crit_edge:       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i287

lor.lhs.false.i.i.i284:                           ; preds = %land.lhs.true.i
  %type.i.i.i282 = getelementptr i8, ptr %87, i32 -852
  %90 = ptrtoint ptr %type.i.i.i282 to i32
  call void @__asan_load1_noabort(i32 %90)
  %91 = load i8, ptr %type.i.i.i282, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %91)
  %cmp.i.i.i283 = icmp eq i8 %91, -124
  br i1 %cmp.i.i.i283, label %lor.lhs.false.i.i.i284.if.then.i.i.i287_crit_edge, label %lor.lhs.false.i.i.i284.is_data_inode.exit.i290_crit_edge

lor.lhs.false.i.i.i284.is_data_inode.exit.i290_crit_edge: ; preds = %lor.lhs.false.i.i.i284
  call void @__sanitizer_cov_trace_pc() #16
  br label %is_data_inode.exit.i290

lor.lhs.false.i.i.i284.if.then.i.i.i287_crit_edge: ; preds = %lor.lhs.false.i.i.i284
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i287

if.then.i.i.i287:                                 ; preds = %lor.lhs.false.i.i.i284.if.then.i.i.i287_crit_edge, %land.lhs.true.i.if.then.i.i.i287_crit_edge
  %i_ino.i.i.i285 = getelementptr i8, ptr %87, i32 40
  %92 = ptrtoint ptr %i_ino.i.i.i285 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %i_ino.i.i.i285, align 8
  %conv3.i.i.i286 = zext i32 %93 to i64
  br label %is_data_inode.exit.i290

is_data_inode.exit.i290:                          ; preds = %if.then.i.i.i287, %lor.lhs.false.i.i.i284.is_data_inode.exit.i290_crit_edge
  %ino.0.i.i.i288 = phi i64 [ %conv3.i.i.i286, %if.then.i.i.i287 ], [ %89, %lor.lhs.false.i.i.i284.is_data_inode.exit.i290_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %ino.0.i.i.i288)
  %cmp.i.not.i289 = icmp eq i64 %ino.0.i.i.i288, 1
  br i1 %cmp.i.not.i289, label %is_data_inode.exit.i290.if.end.i292_crit_edge, label %if.then.i291

is_data_inode.exit.i290.if.end.i292_crit_edge:    ; preds = %is_data_inode.exit.i290
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i292

if.then.i291:                                     ; preds = %is_data_inode.exit.i290
  call void @__sanitizer_cov_trace_pc() #16
  call void @btrfs_set_delalloc_extent(ptr noundef nonnull %87, ptr noundef %state.0, ptr noundef nonnull %bits.addr) #14
  br label %if.end.i292

if.end.i292:                                      ; preds = %if.then.i291, %is_data_inode.exit.i290.if.end.i292_crit_edge, %if.then37.if.end.i292_crit_edge
  %and3.i = and i32 %85, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i)
  %tobool4.not.i = icmp eq i32 %and3.i, 0
  br i1 %tobool4.not.i, label %if.end.i292.set_state_bits.exit_crit_edge, label %land.lhs.true5.i

if.end.i292.set_state_bits.exit_crit_edge:        ; preds = %if.end.i292
  call void @__sanitizer_cov_trace_pc() #16
  br label %set_state_bits.exit

land.lhs.true5.i:                                 ; preds = %if.end.i292
  %state6.i = getelementptr inbounds %struct.extent_state, ptr %state.0, i32 0, i32 5
  %94 = ptrtoint ptr %state6.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %state6.i, align 4
  %and7.i = and i32 %95, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7.i)
  %tobool8.not.i = icmp eq i32 %and7.i, 0
  br i1 %tobool8.not.i, label %if.then9.i, label %land.lhs.true5.i.set_state_bits.exit_crit_edge

land.lhs.true5.i.set_state_bits.exit_crit_edge:   ; preds = %land.lhs.true5.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %set_state_bits.exit

if.then9.i:                                       ; preds = %land.lhs.true5.i
  call void @__sanitizer_cov_trace_pc() #16
  %96 = ptrtoint ptr %end31 to i32
  call void @__asan_load8_noabort(i32 %96)
  %97 = load i64, ptr %end31, align 8
  %98 = ptrtoint ptr %state.0 to i32
  call void @__asan_load8_noabort(i32 %98)
  %99 = load i64, ptr %state.0, align 8
  %100 = ptrtoint ptr %dirty_bytes.i to i32
  call void @__asan_load8_noabort(i32 %100)
  %101 = load i64, ptr %dirty_bytes.i, align 8
  %sub.i293 = add i64 %97, 1
  %add.i = sub i64 %sub.i293, %99
  %add10.i = add i64 %add.i, %101
  store i64 %add10.i, ptr %dirty_bytes.i, align 8
  br label %set_state_bits.exit

set_state_bits.exit:                              ; preds = %if.then9.i, %land.lhs.true5.i.set_state_bits.exit_crit_edge, %if.end.i292.set_state_bits.exit_crit_edge
  %state23.i = getelementptr inbounds %struct.extent_state, ptr %state.0, i32 0, i32 5
  %102 = ptrtoint ptr %state23.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %state23.i, align 4
  %or.i = or i32 %103, %and.i
  store i32 %or.i, ptr %state23.i, align 4
  br i1 %tobool5.not, label %set_state_bits.exit.cache_state.exit311_crit_edge, label %land.lhs.true.i.i296

set_state_bits.exit.cache_state.exit311_crit_edge: ; preds = %set_state_bits.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state.exit311

land.lhs.true.i.i296:                             ; preds = %set_state_bits.exit
  %104 = ptrtoint ptr %cached_state to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %cached_state, align 4
  %tobool1.not.i.i295 = icmp ne ptr %105, null
  %and.i.i298 = and i32 %or.i, 68
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i298)
  %tobool4.not.i.i299 = icmp eq i32 %and.i.i298, 0
  %or.cond470 = select i1 %tobool1.not.i.i295, i1 true, i1 %tobool4.not.i.i299
  br i1 %or.cond470, label %land.lhs.true.i.i296.cache_state.exit311_crit_edge, label %if.then5.i.i305

land.lhs.true.i.i296.cache_state.exit311_crit_edge: ; preds = %land.lhs.true.i.i296
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state.exit311

if.then5.i.i305:                                  ; preds = %land.lhs.true.i.i296
  %106 = ptrtoint ptr %cached_state to i32
  call void @__asan_store4_noabort(i32 %106)
  store ptr %state.0, ptr %cached_state, align 4
  %refs.i.i301 = getelementptr inbounds %struct.extent_state, ptr %state.0, i32 0, i32 4
  %call.i.i.i.i.i.i.i302 = call zeroext i1 @__kasan_check_write(ptr noundef %refs.i.i301, i32 noundef 4) #14
  call void @llvm.prefetch.p0(ptr %refs.i.i301, i32 1, i32 3, i32 1) #14
  %107 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs.i.i301, ptr %refs.i.i301, i32 1, ptr elementtype(i32) %refs.i.i301) #14, !srcloc !338
  %asmresult.i.i.i.i.i.i.i303 = extractvalue { i32, i32, i32 } %107, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i303)
  %tobool1.not.i.i.i.i.i304 = icmp eq i32 %asmresult.i.i.i.i.i.i.i303, 0
  br i1 %tobool1.not.i.i.i.i.i304, label %if.then5.i.i305.if.end15.sink.split.i.i.i.i.i310_crit_edge, label %if.else.i.i.i.i.i308, !prof !319

if.then5.i.i305.if.end15.sink.split.i.i.i.i.i310_crit_edge: ; preds = %if.then5.i.i305
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i310

if.else.i.i.i.i.i308:                             ; preds = %if.then5.i.i305
  %add.i.i.i.i.i306 = add i32 %asmresult.i.i.i.i.i.i.i303, 1
  %108 = or i32 %add.i.i.i.i.i306, %asmresult.i.i.i.i.i.i.i303
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %108)
  %.not.i.i.i.i.i307 = icmp sgt i32 %108, -1
  br i1 %.not.i.i.i.i.i307, label %if.else.i.i.i.i.i308.cache_state.exit311_crit_edge, label %if.else.i.i.i.i.i308.if.end15.sink.split.i.i.i.i.i310_crit_edge, !prof !322

if.else.i.i.i.i.i308.if.end15.sink.split.i.i.i.i.i310_crit_edge: ; preds = %if.else.i.i.i.i.i308
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i310

if.else.i.i.i.i.i308.cache_state.exit311_crit_edge: ; preds = %if.else.i.i.i.i.i308
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state.exit311

if.end15.sink.split.i.i.i.i.i310:                 ; preds = %if.else.i.i.i.i.i308.if.end15.sink.split.i.i.i.i.i310_crit_edge, %if.then5.i.i305.if.end15.sink.split.i.i.i.i.i310_crit_edge
  %.sink.i.i.i.i.i309 = phi i32 [ 2, %if.then5.i.i305.if.end15.sink.split.i.i.i.i.i310_crit_edge ], [ 1, %if.else.i.i.i.i.i308.if.end15.sink.split.i.i.i.i.i310_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refs.i.i301, i32 noundef %.sink.i.i.i.i.i309) #14
  br label %cache_state.exit311

cache_state.exit311:                              ; preds = %if.end15.sink.split.i.i.i.i.i310, %if.else.i.i.i.i.i308.cache_state.exit311_crit_edge, %land.lhs.true.i.i296.cache_state.exit311_crit_edge, %set_state_bits.exit.cache_state.exit311_crit_edge
  %call38 = call fastcc ptr @clear_state_bit(ptr noundef %tree, ptr noundef %state.0, ptr noundef nonnull %clear_bits.addr, i32 noundef 0, ptr noundef null)
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %83)
  %cmp39 = icmp eq i64 %83, -1
  br i1 %cmp39, label %cache_state.exit311.out_crit_edge, label %if.end41

cache_state.exit311.out_crit_edge:                ; preds = %cache_state.exit311
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end41:                                         ; preds = %cache_state.exit311
  %add42 = add nuw i64 %83, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %add42, i64 %end)
  %cmp43 = icmp uge i64 %add42, %end
  %tobool45.not = icmp eq ptr %call38, null
  %or.cond257 = select i1 %cmp43, i1 true, i1 %tobool45.not
  br i1 %or.cond257, label %if.end41.search_again_crit_edge, label %land.lhs.true46

if.end41.search_again_crit_edge:                  ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again

land.lhs.true46:                                  ; preds = %if.end41
  %109 = ptrtoint ptr %call38 to i32
  call void @__asan_load8_noabort(i32 %109)
  %110 = load i64, ptr %call38, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %110, i64 %add42)
  %cmp48 = icmp eq i64 %110, %add42
  br i1 %cmp48, label %land.lhs.true49, label %land.lhs.true46.search_again_crit_edge

land.lhs.true46.search_again_crit_edge:           ; preds = %land.lhs.true46
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again

land.lhs.true49:                                  ; preds = %land.lhs.true46
  %111 = call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i = and i32 %111, -16384
  %112 = inttoptr i32 %and.i.i to ptr
  %113 = ptrtoint ptr %112 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load volatile i32, ptr %112, align 16384
  %115 = and i32 %114, 2
  %tobool.i.not = icmp eq i32 %115, 0
  br i1 %tobool.i.not, label %land.lhs.true49.hit_next_crit_edge, label %land.lhs.true49.search_again_crit_edge

land.lhs.true49.search_again_crit_edge:           ; preds = %land.lhs.true49
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again

land.lhs.true49.hit_next_crit_edge:               ; preds = %land.lhs.true49
  call void @__sanitizer_cov_trace_pc() #16
  br label %hit_next

if.end53:                                         ; preds = %hit_next
  call void @__sanitizer_cov_trace_cmp8(i64 %81, i64 %start.addr.1)
  %cmp55 = icmp ult i64 %81, %start.addr.1
  br i1 %cmp55, label %if.then56, label %if.end87

if.then56:                                        ; preds = %if.end53
  %tobool.not.i312 = icmp eq ptr %prealloc.2.ph, null
  br i1 %tobool.not.i312, label %alloc_extent_state_atomic.exit317, label %if.then56.if.end60_crit_edge

if.then56.if.end60_crit_edge:                     ; preds = %if.then56
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end60

alloc_extent_state_atomic.exit317:                ; preds = %if.then56
  %call.i313 = call fastcc ptr @alloc_extent_state(i32 noundef 2592) #14
  %tobool58.not = icmp eq ptr %call.i313, null
  br i1 %tobool58.not, label %alloc_extent_state_atomic.exit317.out.thread_crit_edge, label %alloc_extent_state_atomic.exit317.if.end60_crit_edge

alloc_extent_state_atomic.exit317.if.end60_crit_edge: ; preds = %alloc_extent_state_atomic.exit317
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end60

alloc_extent_state_atomic.exit317.out.thread_crit_edge: ; preds = %alloc_extent_state_atomic.exit317
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.thread

if.end60:                                         ; preds = %alloc_extent_state_atomic.exit317.if.end60_crit_edge, %if.then56.if.end60_crit_edge
  %prealloc.addr.0.i315453 = phi ptr [ %call.i313, %alloc_extent_state_atomic.exit317.if.end60_crit_edge ], [ %prealloc.2.ph, %if.then56.if.end60_crit_edge ]
  %call61 = call fastcc i32 @split_state(ptr noundef %tree, ptr noundef %state.0, ptr noundef nonnull %prealloc.addr.0.i315453, i64 noundef %start.addr.1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call61)
  %tobool62.not = icmp eq i32 %call61, 0
  br i1 %tobool62.not, label %if.end67.critedge, label %if.then63

if.then63:                                        ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #16
  %fs_info.i318 = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 1
  %116 = ptrtoint ptr %fs_info.i318 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %fs_info.i318, align 4
  call void (ptr, ptr, i32, i32, ptr, ...) @__btrfs_panic(ptr noundef %117, ptr noundef nonnull @__func__.extent_io_tree_panic, i32 noundef 689, i32 noundef %call61, ptr noundef nonnull @.str.54) #17
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 689, 0\0A.popsection", ""() #14, !srcloc !332
  unreachable

if.end67.critedge:                                ; preds = %if.end60
  %118 = ptrtoint ptr %end31 to i32
  call void @__asan_load8_noabort(i32 %118)
  %119 = load i64, ptr %end31, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %119, i64 %end)
  %cmp69.not = icmp ugt i64 %119, %end
  br i1 %cmp69.not, label %if.end67.critedge.search_again_crit_edge, label %if.then70

if.end67.critedge.search_again_crit_edge:         ; preds = %if.end67.critedge
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again

if.then70:                                        ; preds = %if.end67.critedge
  %120 = ptrtoint ptr %bits.addr to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %bits.addr, align 4
  %and.i320 = and i32 %121, -41217
  %122 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %private_data.i, align 8
  %tobool.not.i322 = icmp eq ptr %123, null
  br i1 %tobool.not.i322, label %if.then70.if.end.i338_crit_edge, label %land.lhs.true.i325

if.then70.if.end.i338_crit_edge:                  ; preds = %if.then70
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i338

land.lhs.true.i325:                               ; preds = %if.then70
  %location.i.i.i323 = getelementptr i8, ptr %123, i32 -860
  %124 = ptrtoint ptr %location.i.i.i323 to i32
  call void @__asan_loadN_noabort(i32 %124, i32 8)
  %125 = load i64, ptr %location.i.i.i323, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %125)
  %tobool.not.i.i.i324 = icmp eq i64 %125, 0
  br i1 %tobool.not.i.i.i324, label %land.lhs.true.i325.if.then.i.i.i331_crit_edge, label %lor.lhs.false.i.i.i328

land.lhs.true.i325.if.then.i.i.i331_crit_edge:    ; preds = %land.lhs.true.i325
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i331

lor.lhs.false.i.i.i328:                           ; preds = %land.lhs.true.i325
  %type.i.i.i326 = getelementptr i8, ptr %123, i32 -852
  %126 = ptrtoint ptr %type.i.i.i326 to i32
  call void @__asan_load1_noabort(i32 %126)
  %127 = load i8, ptr %type.i.i.i326, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %127)
  %cmp.i.i.i327 = icmp eq i8 %127, -124
  br i1 %cmp.i.i.i327, label %lor.lhs.false.i.i.i328.if.then.i.i.i331_crit_edge, label %lor.lhs.false.i.i.i328.is_data_inode.exit.i334_crit_edge

lor.lhs.false.i.i.i328.is_data_inode.exit.i334_crit_edge: ; preds = %lor.lhs.false.i.i.i328
  call void @__sanitizer_cov_trace_pc() #16
  br label %is_data_inode.exit.i334

lor.lhs.false.i.i.i328.if.then.i.i.i331_crit_edge: ; preds = %lor.lhs.false.i.i.i328
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i331

if.then.i.i.i331:                                 ; preds = %lor.lhs.false.i.i.i328.if.then.i.i.i331_crit_edge, %land.lhs.true.i325.if.then.i.i.i331_crit_edge
  %i_ino.i.i.i329 = getelementptr i8, ptr %123, i32 40
  %128 = ptrtoint ptr %i_ino.i.i.i329 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %i_ino.i.i.i329, align 8
  %conv3.i.i.i330 = zext i32 %129 to i64
  br label %is_data_inode.exit.i334

is_data_inode.exit.i334:                          ; preds = %if.then.i.i.i331, %lor.lhs.false.i.i.i328.is_data_inode.exit.i334_crit_edge
  %ino.0.i.i.i332 = phi i64 [ %conv3.i.i.i330, %if.then.i.i.i331 ], [ %125, %lor.lhs.false.i.i.i328.is_data_inode.exit.i334_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %ino.0.i.i.i332)
  %cmp.i.not.i333 = icmp eq i64 %ino.0.i.i.i332, 1
  br i1 %cmp.i.not.i333, label %is_data_inode.exit.i334.if.end.i338_crit_edge, label %if.then.i335

is_data_inode.exit.i334.if.end.i338_crit_edge:    ; preds = %is_data_inode.exit.i334
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i338

if.then.i335:                                     ; preds = %is_data_inode.exit.i334
  call void @__sanitizer_cov_trace_pc() #16
  call void @btrfs_set_delalloc_extent(ptr noundef nonnull %123, ptr noundef %state.0, ptr noundef nonnull %bits.addr) #14
  br label %if.end.i338

if.end.i338:                                      ; preds = %if.then.i335, %is_data_inode.exit.i334.if.end.i338_crit_edge, %if.then70.if.end.i338_crit_edge
  %and3.i336 = and i32 %121, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3.i336)
  %tobool4.not.i337 = icmp eq i32 %and3.i336, 0
  br i1 %tobool4.not.i337, label %if.end.i338.set_state_bits.exit351_crit_edge, label %land.lhs.true5.i342

if.end.i338.set_state_bits.exit351_crit_edge:     ; preds = %if.end.i338
  call void @__sanitizer_cov_trace_pc() #16
  br label %set_state_bits.exit351

land.lhs.true5.i342:                              ; preds = %if.end.i338
  %state6.i339 = getelementptr inbounds %struct.extent_state, ptr %state.0, i32 0, i32 5
  %130 = ptrtoint ptr %state6.i339 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %state6.i339, align 4
  %and7.i340 = and i32 %131, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7.i340)
  %tobool8.not.i341 = icmp eq i32 %and7.i340, 0
  br i1 %tobool8.not.i341, label %if.then9.i348, label %land.lhs.true5.i342.set_state_bits.exit351_crit_edge

land.lhs.true5.i342.set_state_bits.exit351_crit_edge: ; preds = %land.lhs.true5.i342
  call void @__sanitizer_cov_trace_pc() #16
  br label %set_state_bits.exit351

if.then9.i348:                                    ; preds = %land.lhs.true5.i342
  call void @__sanitizer_cov_trace_pc() #16
  %132 = ptrtoint ptr %end31 to i32
  call void @__asan_load8_noabort(i32 %132)
  %133 = load i64, ptr %end31, align 8
  %134 = ptrtoint ptr %state.0 to i32
  call void @__asan_load8_noabort(i32 %134)
  %135 = load i64, ptr %state.0, align 8
  %136 = ptrtoint ptr %dirty_bytes.i to i32
  call void @__asan_load8_noabort(i32 %136)
  %137 = load i64, ptr %dirty_bytes.i, align 8
  %sub.i345 = add i64 %133, 1
  %add.i346 = sub i64 %sub.i345, %135
  %add10.i347 = add i64 %add.i346, %137
  store i64 %add10.i347, ptr %dirty_bytes.i, align 8
  br label %set_state_bits.exit351

set_state_bits.exit351:                           ; preds = %if.then9.i348, %land.lhs.true5.i342.set_state_bits.exit351_crit_edge, %if.end.i338.set_state_bits.exit351_crit_edge
  %state23.i349 = getelementptr inbounds %struct.extent_state, ptr %state.0, i32 0, i32 5
  %138 = ptrtoint ptr %state23.i349 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %state23.i349, align 4
  %or.i350 = or i32 %139, %and.i320
  store i32 %or.i350, ptr %state23.i349, align 4
  br i1 %tobool5.not, label %set_state_bits.exit351.cache_state.exit369_crit_edge, label %land.lhs.true.i.i354

set_state_bits.exit351.cache_state.exit369_crit_edge: ; preds = %set_state_bits.exit351
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state.exit369

land.lhs.true.i.i354:                             ; preds = %set_state_bits.exit351
  %140 = ptrtoint ptr %cached_state to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %cached_state, align 4
  %tobool1.not.i.i353 = icmp ne ptr %141, null
  %and.i.i356 = and i32 %or.i350, 68
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i356)
  %tobool4.not.i.i357 = icmp eq i32 %and.i.i356, 0
  %or.cond471 = select i1 %tobool1.not.i.i353, i1 true, i1 %tobool4.not.i.i357
  br i1 %or.cond471, label %land.lhs.true.i.i354.cache_state.exit369_crit_edge, label %if.then5.i.i363

land.lhs.true.i.i354.cache_state.exit369_crit_edge: ; preds = %land.lhs.true.i.i354
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state.exit369

if.then5.i.i363:                                  ; preds = %land.lhs.true.i.i354
  %142 = ptrtoint ptr %cached_state to i32
  call void @__asan_store4_noabort(i32 %142)
  store ptr %state.0, ptr %cached_state, align 4
  %refs.i.i359 = getelementptr inbounds %struct.extent_state, ptr %state.0, i32 0, i32 4
  %call.i.i.i.i.i.i.i360 = call zeroext i1 @__kasan_check_write(ptr noundef %refs.i.i359, i32 noundef 4) #14
  call void @llvm.prefetch.p0(ptr %refs.i.i359, i32 1, i32 3, i32 1) #14
  %143 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs.i.i359, ptr %refs.i.i359, i32 1, ptr elementtype(i32) %refs.i.i359) #14, !srcloc !338
  %asmresult.i.i.i.i.i.i.i361 = extractvalue { i32, i32, i32 } %143, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i361)
  %tobool1.not.i.i.i.i.i362 = icmp eq i32 %asmresult.i.i.i.i.i.i.i361, 0
  br i1 %tobool1.not.i.i.i.i.i362, label %if.then5.i.i363.if.end15.sink.split.i.i.i.i.i368_crit_edge, label %if.else.i.i.i.i.i366, !prof !319

if.then5.i.i363.if.end15.sink.split.i.i.i.i.i368_crit_edge: ; preds = %if.then5.i.i363
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i368

if.else.i.i.i.i.i366:                             ; preds = %if.then5.i.i363
  %add.i.i.i.i.i364 = add i32 %asmresult.i.i.i.i.i.i.i361, 1
  %144 = or i32 %add.i.i.i.i.i364, %asmresult.i.i.i.i.i.i.i361
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %144)
  %.not.i.i.i.i.i365 = icmp sgt i32 %144, -1
  br i1 %.not.i.i.i.i.i365, label %if.else.i.i.i.i.i366.cache_state.exit369_crit_edge, label %if.else.i.i.i.i.i366.if.end15.sink.split.i.i.i.i.i368_crit_edge, !prof !322

if.else.i.i.i.i.i366.if.end15.sink.split.i.i.i.i.i368_crit_edge: ; preds = %if.else.i.i.i.i.i366
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i368

if.else.i.i.i.i.i366.cache_state.exit369_crit_edge: ; preds = %if.else.i.i.i.i.i366
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state.exit369

if.end15.sink.split.i.i.i.i.i368:                 ; preds = %if.else.i.i.i.i.i366.if.end15.sink.split.i.i.i.i.i368_crit_edge, %if.then5.i.i363.if.end15.sink.split.i.i.i.i.i368_crit_edge
  %.sink.i.i.i.i.i367 = phi i32 [ 2, %if.then5.i.i363.if.end15.sink.split.i.i.i.i.i368_crit_edge ], [ 1, %if.else.i.i.i.i.i366.if.end15.sink.split.i.i.i.i.i368_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refs.i.i359, i32 noundef %.sink.i.i.i.i.i367) #14
  br label %cache_state.exit369

cache_state.exit369:                              ; preds = %if.end15.sink.split.i.i.i.i.i368, %if.else.i.i.i.i.i366.cache_state.exit369_crit_edge, %land.lhs.true.i.i354.cache_state.exit369_crit_edge, %set_state_bits.exit351.cache_state.exit369_crit_edge
  %call71 = call fastcc ptr @clear_state_bit(ptr noundef %tree, ptr noundef %state.0, ptr noundef nonnull %clear_bits.addr, i32 noundef 0, ptr noundef null)
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %83)
  %cmp72 = icmp eq i64 %83, -1
  br i1 %cmp72, label %cache_state.exit369.out.thread_crit_edge, label %if.end74

cache_state.exit369.out.thread_crit_edge:         ; preds = %cache_state.exit369
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.thread

if.end74:                                         ; preds = %cache_state.exit369
  %add75 = add nuw i64 %83, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %add75, i64 %end)
  %cmp76 = icmp uge i64 %add75, %end
  %tobool78.not = icmp eq ptr %call71, null
  %or.cond258 = select i1 %cmp76, i1 true, i1 %tobool78.not
  br i1 %or.cond258, label %if.end74.search_again_crit_edge, label %land.lhs.true79

if.end74.search_again_crit_edge:                  ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again

land.lhs.true79:                                  ; preds = %if.end74
  %145 = ptrtoint ptr %call71 to i32
  call void @__asan_load8_noabort(i32 %145)
  %146 = load i64, ptr %call71, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %146, i64 %add75)
  %cmp81 = icmp eq i64 %146, %add75
  br i1 %cmp81, label %land.lhs.true82, label %land.lhs.true79.search_again_crit_edge

land.lhs.true79.search_again_crit_edge:           ; preds = %land.lhs.true79
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again

land.lhs.true82:                                  ; preds = %land.lhs.true79
  %147 = call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i260 = and i32 %147, -16384
  %148 = inttoptr i32 %and.i.i260 to ptr
  %149 = ptrtoint ptr %148 to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load volatile i32, ptr %148, align 16384
  %151 = and i32 %150, 2
  %tobool.i261.not = icmp eq i32 %151, 0
  br i1 %tobool.i261.not, label %land.lhs.true82.hit_next.outer_crit_edge, label %land.lhs.true82.search_again_crit_edge

land.lhs.true82.search_again_crit_edge:           ; preds = %land.lhs.true82
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again

land.lhs.true82.hit_next.outer_crit_edge:         ; preds = %land.lhs.true82
  call void @__sanitizer_cov_trace_pc() #16
  br label %hit_next.outer

if.end87:                                         ; preds = %if.end53
  call void @__sanitizer_cov_trace_cmp8(i64 %81, i64 %start.addr.1)
  %cmp89 = icmp ugt i64 %81, %start.addr.1
  call void @__sanitizer_cov_trace_cmp8(i64 %81, i64 %end)
  %cmp91 = icmp ugt i64 %81, %end
  br i1 %cmp89, label %if.then90, label %if.end104

if.then90:                                        ; preds = %if.end87
  %sub93 = add i64 %81, -1
  %this_end.0 = select i1 %cmp91, i64 %end, i64 %sub93
  %tobool.not.i370 = icmp eq ptr %prealloc.2.ph, null
  br i1 %tobool.not.i370, label %alloc_extent_state_atomic.exit375, label %if.then90.if.end98_crit_edge

if.then90.if.end98_crit_edge:                     ; preds = %if.then90
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end98

alloc_extent_state_atomic.exit375:                ; preds = %if.then90
  %call.i371 = call fastcc ptr @alloc_extent_state(i32 noundef 2592) #14
  %tobool96.not = icmp eq ptr %call.i371, null
  br i1 %tobool96.not, label %alloc_extent_state_atomic.exit375.out.thread_crit_edge, label %alloc_extent_state_atomic.exit375.if.end98_crit_edge

alloc_extent_state_atomic.exit375.if.end98_crit_edge: ; preds = %alloc_extent_state_atomic.exit375
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end98

alloc_extent_state_atomic.exit375.out.thread_crit_edge: ; preds = %alloc_extent_state_atomic.exit375
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.thread

if.end98:                                         ; preds = %alloc_extent_state_atomic.exit375.if.end98_crit_edge, %if.then90.if.end98_crit_edge
  %prealloc.addr.0.i373456 = phi ptr [ %call.i371, %alloc_extent_state_atomic.exit375.if.end98_crit_edge ], [ %prealloc.2.ph, %if.then90.if.end98_crit_edge ]
  %call99 = call fastcc i32 @insert_state(ptr noundef %tree, ptr noundef nonnull %prealloc.addr.0.i373456, i64 noundef %start.addr.1, i64 noundef %this_end.0, ptr noundef null, ptr noundef null, ptr noundef nonnull %bits.addr, ptr noundef null)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call99)
  %tobool100.not = icmp eq i32 %call99, 0
  br i1 %tobool100.not, label %if.end102, label %if.then101

if.then101:                                       ; preds = %if.end98
  call void @__sanitizer_cov_trace_pc() #16
  %fs_info.i376 = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 1
  %152 = ptrtoint ptr %fs_info.i376 to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %fs_info.i376, align 4
  call void (ptr, ptr, i32, i32, ptr, ...) @__btrfs_panic(ptr noundef %153, ptr noundef nonnull @__func__.extent_io_tree_panic, i32 noundef 689, i32 noundef %call99, ptr noundef nonnull @.str.54) #17
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 689, 0\0A.popsection", ""() #14, !srcloc !332
  unreachable

if.end102:                                        ; preds = %if.end98
  br i1 %tobool5.not, label %if.end102.cleanup.thread_crit_edge, label %land.lhs.true.i.i380

if.end102.cleanup.thread_crit_edge:               ; preds = %if.end102
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread

land.lhs.true.i.i380:                             ; preds = %if.end102
  %154 = ptrtoint ptr %cached_state to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %cached_state, align 4
  %tobool1.not.i.i379 = icmp eq ptr %155, null
  br i1 %tobool1.not.i.i379, label %if.then.i.i384, label %land.lhs.true.i.i380.cleanup.thread_crit_edge

land.lhs.true.i.i380.cleanup.thread_crit_edge:    ; preds = %land.lhs.true.i.i380
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread

if.then.i.i384:                                   ; preds = %land.lhs.true.i.i380
  %state3.i.i381 = getelementptr inbounds %struct.extent_state, ptr %prealloc.addr.0.i373456, i32 0, i32 5
  %156 = ptrtoint ptr %state3.i.i381 to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %state3.i.i381, align 4
  %and.i.i382 = and i32 %157, 68
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i382)
  %tobool4.not.i.i383 = icmp eq i32 %and.i.i382, 0
  br i1 %tobool4.not.i.i383, label %if.then.i.i384.cleanup.thread_crit_edge, label %if.then5.i.i389

if.then.i.i384.cleanup.thread_crit_edge:          ; preds = %if.then.i.i384
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread

if.then5.i.i389:                                  ; preds = %if.then.i.i384
  %158 = ptrtoint ptr %cached_state to i32
  call void @__asan_store4_noabort(i32 %158)
  store ptr %prealloc.addr.0.i373456, ptr %cached_state, align 4
  %refs.i.i385 = getelementptr inbounds %struct.extent_state, ptr %prealloc.addr.0.i373456, i32 0, i32 4
  %call.i.i.i.i.i.i.i386 = call zeroext i1 @__kasan_check_write(ptr noundef %refs.i.i385, i32 noundef 4) #14
  call void @llvm.prefetch.p0(ptr %refs.i.i385, i32 1, i32 3, i32 1) #14
  %159 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs.i.i385, ptr %refs.i.i385, i32 1, ptr elementtype(i32) %refs.i.i385) #14, !srcloc !338
  %asmresult.i.i.i.i.i.i.i387 = extractvalue { i32, i32, i32 } %159, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i387)
  %tobool1.not.i.i.i.i.i388 = icmp eq i32 %asmresult.i.i.i.i.i.i.i387, 0
  br i1 %tobool1.not.i.i.i.i.i388, label %if.then5.i.i389.if.end15.sink.split.i.i.i.i.i394_crit_edge, label %if.else.i.i.i.i.i392, !prof !319

if.then5.i.i389.if.end15.sink.split.i.i.i.i.i394_crit_edge: ; preds = %if.then5.i.i389
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i394

if.else.i.i.i.i.i392:                             ; preds = %if.then5.i.i389
  %add.i.i.i.i.i390 = add i32 %asmresult.i.i.i.i.i.i.i387, 1
  %160 = or i32 %add.i.i.i.i.i390, %asmresult.i.i.i.i.i.i.i387
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %160)
  %.not.i.i.i.i.i391 = icmp sgt i32 %160, -1
  br i1 %.not.i.i.i.i.i391, label %if.else.i.i.i.i.i392.cleanup.thread_crit_edge, label %if.else.i.i.i.i.i392.if.end15.sink.split.i.i.i.i.i394_crit_edge, !prof !322

if.else.i.i.i.i.i392.if.end15.sink.split.i.i.i.i.i394_crit_edge: ; preds = %if.else.i.i.i.i.i392
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i.i394

if.else.i.i.i.i.i392.cleanup.thread_crit_edge:    ; preds = %if.else.i.i.i.i.i392
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread

if.end15.sink.split.i.i.i.i.i394:                 ; preds = %if.else.i.i.i.i.i392.if.end15.sink.split.i.i.i.i.i394_crit_edge, %if.then5.i.i389.if.end15.sink.split.i.i.i.i.i394_crit_edge
  %.sink.i.i.i.i.i393 = phi i32 [ 2, %if.then5.i.i389.if.end15.sink.split.i.i.i.i.i394_crit_edge ], [ 1, %if.else.i.i.i.i.i392.if.end15.sink.split.i.i.i.i.i394_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refs.i.i385, i32 noundef %.sink.i.i.i.i.i393) #14
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %if.end15.sink.split.i.i.i.i.i394, %if.else.i.i.i.i.i392.cleanup.thread_crit_edge, %if.then.i.i384.cleanup.thread_crit_edge, %land.lhs.true.i.i380.cleanup.thread_crit_edge, %if.end102.cleanup.thread_crit_edge
  %add103 = add nuw i64 %this_end.0, 1
  br label %search_again

if.end104:                                        ; preds = %if.end87
  %cmp36.not.not = xor i1 %cmp36.not, true
  %brmerge472 = select i1 %cmp91, i1 true, i1 %cmp36.not.not
  br i1 %brmerge472, label %if.end104.search_again_crit_edge, label %if.then110

if.end104.search_again_crit_edge:                 ; preds = %if.end104
  call void @__sanitizer_cov_trace_pc() #16
  br label %search_again

if.then110:                                       ; preds = %if.end104
  %tobool.not.i396 = icmp eq ptr %prealloc.2.ph, null
  br i1 %tobool.not.i396, label %alloc_extent_state_atomic.exit401, label %if.then110.if.end114_crit_edge

if.then110.if.end114_crit_edge:                   ; preds = %if.then110
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end114

alloc_extent_state_atomic.exit401:                ; preds = %if.then110
  %call.i397 = call fastcc ptr @alloc_extent_state(i32 noundef 2592) #14
  %tobool112.not = icmp eq ptr %call.i397, null
  br i1 %tobool112.not, label %alloc_extent_state_atomic.exit401.out.thread_crit_edge, label %alloc_extent_state_atomic.exit401.if.end114_crit_edge

alloc_extent_state_atomic.exit401.if.end114_crit_edge: ; preds = %alloc_extent_state_atomic.exit401
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end114

alloc_extent_state_atomic.exit401.out.thread_crit_edge: ; preds = %alloc_extent_state_atomic.exit401
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.thread

if.end114:                                        ; preds = %alloc_extent_state_atomic.exit401.if.end114_crit_edge, %if.then110.if.end114_crit_edge
  %prealloc.addr.0.i399465 = phi ptr [ %call.i397, %alloc_extent_state_atomic.exit401.if.end114_crit_edge ], [ %prealloc.2.ph, %if.then110.if.end114_crit_edge ]
  %add115 = add nuw i64 %end, 1
  %call116 = call fastcc i32 @split_state(ptr noundef %tree, ptr noundef %state.0, ptr noundef nonnull %prealloc.addr.0.i399465, i64 noundef %add115)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call116)
  %tobool117.not = icmp eq i32 %call116, 0
  br i1 %tobool117.not, label %if.end119, label %if.then118

if.then118:                                       ; preds = %if.end114
  call void @__sanitizer_cov_trace_pc() #16
  %fs_info.i402 = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 1
  %161 = ptrtoint ptr %fs_info.i402 to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load ptr, ptr %fs_info.i402, align 4
  call void (ptr, ptr, i32, i32, ptr, ...) @__btrfs_panic(ptr noundef %162, ptr noundef nonnull @__func__.extent_io_tree_panic, i32 noundef 689, i32 noundef %call116, ptr noundef nonnull @.str.54) #17
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 689, 0\0A.popsection", ""() #14, !srcloc !332
  unreachable

if.end119:                                        ; preds = %if.end114
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @set_state_bits(ptr noundef %tree, ptr noundef nonnull %prealloc.addr.0.i399465, ptr noundef nonnull %bits.addr, ptr noundef null)
  call fastcc void @cache_state(ptr noundef nonnull %prealloc.addr.0.i399465, ptr noundef %cached_state)
  %call120 = call fastcc ptr @clear_state_bit(ptr noundef %tree, ptr noundef nonnull %prealloc.addr.0.i399465, ptr noundef nonnull %clear_bits.addr, i32 noundef 0, ptr noundef null)
  br label %out.thread

search_again:                                     ; preds = %if.end104.search_again_crit_edge, %cleanup.thread, %land.lhs.true82.search_again_crit_edge, %land.lhs.true79.search_again_crit_edge, %if.end74.search_again_crit_edge, %if.end67.critedge.search_again_crit_edge, %land.lhs.true49.search_again_crit_edge, %land.lhs.true46.search_again_crit_edge, %if.end41.search_again_crit_edge
  %prealloc.4 = phi ptr [ %prealloc.2.ph, %if.end104.search_again_crit_edge ], [ null, %cleanup.thread ], [ %prealloc.2.ph, %land.lhs.true49.search_again_crit_edge ], [ %prealloc.2.ph, %land.lhs.true46.search_again_crit_edge ], [ %prealloc.2.ph, %if.end41.search_again_crit_edge ], [ null, %if.end74.search_again_crit_edge ], [ null, %land.lhs.true79.search_again_crit_edge ], [ null, %land.lhs.true82.search_again_crit_edge ], [ null, %if.end67.critedge.search_again_crit_edge ]
  %start.addr.3 = phi i64 [ %start.addr.1, %if.end104.search_again_crit_edge ], [ %add103, %cleanup.thread ], [ %add42, %land.lhs.true49.search_again_crit_edge ], [ %add42, %land.lhs.true46.search_again_crit_edge ], [ %add42, %if.end41.search_again_crit_edge ], [ %start.addr.1, %if.end67.critedge.search_again_crit_edge ], [ %add75, %land.lhs.true82.search_again_crit_edge ], [ %add75, %land.lhs.true79.search_again_crit_edge ], [ %add75, %if.end74.search_again_crit_edge ]
  %cmp122 = icmp ugt i64 %start.addr.3, %end
  br i1 %cmp122, label %search_again.out_crit_edge, label %if.end124

search_again.out_crit_edge:                       ; preds = %search_again
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end124:                                        ; preds = %search_again
  call void @__sanitizer_cov_trace_pc() #16
  call void @_raw_spin_unlock(ptr noundef %lock) #14
  call void @__might_resched(ptr noundef nonnull @.str.2, i32 noundef 1397, i32 noundef 0) #14
  %call.i404 = call i32 @__cond_resched() #14
  br label %again

out.thread:                                       ; preds = %if.end119, %alloc_extent_state_atomic.exit401.out.thread_crit_edge, %alloc_extent_state_atomic.exit375.out.thread_crit_edge, %cache_state.exit369.out.thread_crit_edge, %alloc_extent_state_atomic.exit317.out.thread_crit_edge, %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.out.thread_crit_edge, %if.then.i.i277.out.thread_crit_edge, %land.lhs.true.i.i.out.thread_crit_edge, %set_state_bits.exit436.out.thread_crit_edge, %alloc_extent_state_atomic.exit.out.thread_crit_edge
  %err.4.ph = phi i32 [ 0, %if.end15.sink.split.i.i.i.i.i ], [ 0, %if.else.i.i.i.i.i.out.thread_crit_edge ], [ 0, %if.then.i.i277.out.thread_crit_edge ], [ 0, %land.lhs.true.i.i.out.thread_crit_edge ], [ 0, %set_state_bits.exit436.out.thread_crit_edge ], [ -12, %alloc_extent_state_atomic.exit401.out.thread_crit_edge ], [ -12, %alloc_extent_state_atomic.exit.out.thread_crit_edge ], [ 0, %if.end119 ], [ 0, %cache_state.exit369.out.thread_crit_edge ], [ -12, %alloc_extent_state_atomic.exit317.out.thread_crit_edge ], [ -12, %alloc_extent_state_atomic.exit375.out.thread_crit_edge ]
  call void @_raw_spin_unlock(ptr noundef %lock) #14
  br label %cleanup132

out:                                              ; preds = %search_again.out_crit_edge, %cache_state.exit311.out_crit_edge
  %prealloc.5 = phi ptr [ %prealloc.2.ph, %cache_state.exit311.out_crit_edge ], [ %prealloc.4, %search_again.out_crit_edge ]
  call void @_raw_spin_unlock(ptr noundef %lock) #14
  %tobool129.not = icmp eq ptr %prealloc.5, null
  br i1 %tobool129.not, label %out.cleanup132_crit_edge, label %if.then130

out.cleanup132_crit_edge:                         ; preds = %out
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup132

if.then130:                                       ; preds = %out
  call void @__sanitizer_cov_trace_pc() #16
  call void @free_extent_state(ptr noundef nonnull %prealloc.5)
  br label %cleanup132

cleanup132:                                       ; preds = %if.then130, %out.cleanup132_crit_edge, %out.thread, %if.then.cleanup132_crit_edge
  %retval.0 = phi i32 [ 0, %if.then130 ], [ 0, %out.cleanup132_crit_edge ], [ %err.4.ph, %out.thread ], [ -12, %if.then.cleanup132_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_btrfs_convert_extent_bit(ptr noundef %tree, i64 noundef %start, i64 noundef %len, i32 noundef %set_bits, i32 noundef %clear_bits) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_btrfs_convert_extent_bit, i32 0, i32 1), ptr blockaddress(@trace_btrfs_convert_extent_bit, %do.body)) #14
          to label %if.end48 [label %do.body], !srcloc !326

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !322

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.49, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  %9 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !345
  %call42 = tail call i32 @__traceiter_btrfs_convert_extent_bit(ptr noundef null, ptr noundef %tree, i64 noundef %start, i64 noundef %len, i32 noundef %set_bits, i32 noundef %clear_bits) #14
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !346
  %13 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !322

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.49, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !329
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_btrfs_convert_extent_bit, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_btrfs_convert_extent_bit, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_btrfs_convert_extent_bit.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @trace_btrfs_convert_extent_bit.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.47, i32 noundef 2038, ptr noundef nonnull @.str.48) #14
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !330
  %31 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @set_record_extent_bits(ptr noundef %tree, i64 noundef %start, i64 noundef %end, i32 noundef %bits, ptr noundef %changeset) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %bits, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.end6, label %do.body3, !prof !322

do.body3:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1419, 0\0A.popsection", ""() #14, !srcloc !347
  unreachable

do.end6:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call = tail call i32 @set_extent_bit(ptr noundef %tree, i64 noundef %start, i64 noundef %end, i32 noundef %bits, i32 noundef 0, ptr noundef null, ptr noundef null, i32 noundef 3136, ptr noundef %changeset)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @set_extent_bits_nowait(ptr noundef %tree, i64 noundef %start, i64 noundef %end, i32 noundef %bits) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @set_extent_bit(ptr noundef %tree, i64 noundef %start, i64 noundef %end, i32 noundef %bits, i32 noundef 0, ptr noundef null, ptr noundef null, i32 noundef 2048, ptr noundef null)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clear_extent_bit(ptr noundef %tree, i64 noundef %start, i64 noundef %end, i32 noundef %bits, i32 noundef %wake, i32 noundef %delete, ptr noundef %cached) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @__clear_extent_bit(ptr noundef %tree, i64 noundef %start, i64 noundef %end, i32 noundef %bits, i32 noundef %wake, i32 noundef %delete, ptr noundef %cached, i32 noundef 3136, ptr noundef null)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clear_record_extent_bits(ptr noundef %tree, i64 noundef %start, i64 noundef %end, i32 noundef %bits, ptr noundef %changeset) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %bits, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.end6, label %do.body3, !prof !322

do.body3:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1447, 0\0A.popsection", ""() #14, !srcloc !348
  unreachable

do.end6:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call = tail call i32 @__clear_extent_bit(ptr noundef %tree, i64 noundef %start, i64 noundef %end, i32 noundef %bits, i32 noundef 0, i32 noundef 0, ptr noundef null, i32 noundef 3136, ptr noundef %changeset)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @lock_extent_bits(ptr noundef %tree, i64 noundef %start, i64 noundef %end, ptr noundef %cached_state) local_unnamed_addr #0 align 64 {
entry:
  %failed_start = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %failed_start) #14
  %0 = ptrtoint ptr %failed_start to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 -1, ptr %failed_start, align 8, !annotation !349
  %call28 = call i32 @set_extent_bit(ptr noundef %tree, i64 noundef %start, i64 noundef %end, i32 noundef 4, i32 noundef 4, ptr noundef nonnull %failed_start, ptr noundef %cached_state, i32 noundef 3136, ptr noundef null)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -17, i32 %call28)
  %cmp29 = icmp eq i32 %call28, -17
  br i1 %cmp29, label %entry.if.then_crit_edge, label %entry.while.end_crit_edge

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

entry.if.then_crit_edge:                          ; preds = %entry
  br label %if.then

if.then:                                          ; preds = %if.end15.if.then_crit_edge, %entry.if.then_crit_edge
  %1 = ptrtoint ptr %failed_start to i32
  call void @__asan_load8_noabort(i32 %1)
  %2 = load i64, ptr %failed_start, align 8
  call fastcc void @wait_extent_bit(ptr noundef %tree, i64 noundef %2, i64 noundef %end)
  %3 = ptrtoint ptr %failed_start to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %failed_start, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %4, i64 %end)
  %cmp1 = icmp ugt i64 %4, %end
  br i1 %cmp1, label %do.end, label %if.then.if.end15_crit_edge, !prof !319

if.then.if.end15_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 1472, i32 noundef 9, ptr noundef null) #14
  br label %if.end15

if.end15:                                         ; preds = %do.end, %if.then.if.end15_crit_edge
  %call = call i32 @set_extent_bit(ptr noundef %tree, i64 noundef %4, i64 noundef %end, i32 noundef 4, i32 noundef 4, ptr noundef nonnull %failed_start, ptr noundef %cached_state, i32 noundef 3136, ptr noundef null)
  %cmp = icmp eq i32 %call, -17
  br i1 %cmp, label %if.end15.if.then_crit_edge, label %if.end15.while.end_crit_edge

if.end15.while.end_crit_edge:                     ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.end15.if.then_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

while.end:                                        ; preds = %if.end15.while.end_crit_edge, %entry.while.end_crit_edge
  %call.lcssa = phi i32 [ %call28, %entry.while.end_crit_edge ], [ %call, %if.end15.while.end_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %failed_start) #14
  ret i32 %call.lcssa
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @wait_extent_bit(ptr noundef %tree, i64 noundef %start, i64 noundef %end) unnamed_addr #0 align 64 {
entry:
  %wait.i = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data.i = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 2
  %0 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.__btrfs_debug_check_extent_io_range.exit_crit_edge, label %lor.lhs.false.i

entry.__btrfs_debug_check_extent_io_range.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %__btrfs_debug_check_extent_io_range.exit

lor.lhs.false.i:                                  ; preds = %entry
  %location.i.i.i = getelementptr i8, ptr %1, i32 -860
  %2 = ptrtoint ptr %location.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %3 = load i64, ptr %location.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %3)
  %tobool.not.i.i.i = icmp eq i64 %3, 0
  br i1 %tobool.not.i.i.i, label %lor.lhs.false.i.if.then.i.i.i_crit_edge, label %lor.lhs.false.i.i.i

lor.lhs.false.i.if.then.i.i.i_crit_edge:          ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i

lor.lhs.false.i.i.i:                              ; preds = %lor.lhs.false.i
  %type.i.i.i = getelementptr i8, ptr %1, i32 -852
  %4 = ptrtoint ptr %type.i.i.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %5)
  %cmp.i.i.i = icmp eq i8 %5, -124
  br i1 %cmp.i.i.i, label %lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge, label %lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge

lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge: ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %is_data_inode.exit.i

lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge:      ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge, %lor.lhs.false.i.if.then.i.i.i_crit_edge
  %i_ino.i.i.i = getelementptr i8, ptr %1, i32 40
  %6 = ptrtoint ptr %i_ino.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %i_ino.i.i.i, align 8
  %conv3.i.i.i = zext i32 %7 to i64
  br label %is_data_inode.exit.i

is_data_inode.exit.i:                             ; preds = %if.then.i.i.i, %lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge
  %ino.0.i.i.i = phi i64 [ %conv3.i.i.i, %if.then.i.i.i ], [ %3, %lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %ino.0.i.i.i)
  %cmp.i.not.i = icmp eq i64 %ino.0.i.i.i, 1
  br i1 %cmp.i.not.i, label %is_data_inode.exit.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, label %if.end.i

is_data_inode.exit.i.__btrfs_debug_check_extent_io_range.exit_crit_edge: ; preds = %is_data_inode.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__btrfs_debug_check_extent_io_range.exit

if.end.i:                                         ; preds = %is_data_inode.exit.i
  %call1.i = tail call fastcc i64 @i_size_read(ptr noundef nonnull %1) #14
  call void @__sanitizer_cov_trace_const_cmp8(i64 4096, i64 %end)
  %cmp.i = icmp ult i64 %end, 4096
  %rem.i = and i64 %end, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %rem.i)
  %cmp2.i = icmp ne i64 %rem.i, 0
  %or.cond.not.i = or i1 %cmp.i, %cmp2.i
  %sub.i = add i64 %call1.i, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %sub.i, i64 %end)
  %cmp4.not.i = icmp eq i64 %sub.i, %end
  %or.cond32.i = select i1 %or.cond.not.i, i1 true, i1 %cmp4.not.i
  br i1 %or.cond32.i, label %if.end.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, label %do.body.i

if.end.i.__btrfs_debug_check_extent_io_range.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__btrfs_debug_check_extent_io_range.exit

do.body.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @__btrfs_debug_check_extent_io_range.__UNIQUE_ID_ddebug945, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@wait_extent_bit, %do.body11.i)) #14
          to label %__btrfs_debug_check_extent_io_range.exit [label %do.body11.i], !srcloc !326

do.body11.i:                                      ; preds = %do.body.i
  %call12.i = tail call i32 @___ratelimit(ptr noundef nonnull @__btrfs_debug_check_extent_io_range._rs, ptr noundef nonnull @.str.50) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12.i)
  %tobool13.not.i = icmp eq i32 %call12.i, 0
  br i1 %tobool13.not.i, label %do.body11.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, label %if.then14.i

do.body11.i.__btrfs_debug_check_extent_io_range.exit_crit_edge: ; preds = %do.body11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__btrfs_debug_check_extent_io_range.exit

if.then14.i:                                      ; preds = %do.body11.i
  %add.ptr.i.i = getelementptr i8, ptr %1, i32 -864
  %8 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %add.ptr.i.i, align 8
  %fs_info.i = getelementptr inbounds %struct.btrfs_root, ptr %9, i32 0, i32 8
  %10 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %fs_info.i, align 8
  %12 = ptrtoint ptr %location.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %12, i32 8)
  %13 = load i64, ptr %location.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %13)
  %tobool.not.i.i = icmp eq i64 %13, 0
  br i1 %tobool.not.i.i, label %if.then14.i.if.then.i.i_crit_edge, label %lor.lhs.false.i.i

if.then14.i.if.then.i.i_crit_edge:                ; preds = %if.then14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i

lor.lhs.false.i.i:                                ; preds = %if.then14.i
  %type.i.i = getelementptr i8, ptr %1, i32 -852
  %14 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %15)
  %cmp.i34.i = icmp eq i8 %15, -124
  br i1 %cmp.i34.i, label %lor.lhs.false.i.i.if.then.i.i_crit_edge, label %lor.lhs.false.i.i.btrfs_ino.exit.i_crit_edge

lor.lhs.false.i.i.btrfs_ino.exit.i_crit_edge:     ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_ino.exit.i

lor.lhs.false.i.i.if.then.i.i_crit_edge:          ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i

if.then.i.i:                                      ; preds = %lor.lhs.false.i.i.if.then.i.i_crit_edge, %if.then14.i.if.then.i.i_crit_edge
  %i_ino.i.i = getelementptr i8, ptr %1, i32 40
  %16 = ptrtoint ptr %i_ino.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %i_ino.i.i, align 8
  %conv3.i.i = zext i32 %17 to i64
  br label %btrfs_ino.exit.i

btrfs_ino.exit.i:                                 ; preds = %if.then.i.i, %lor.lhs.false.i.i.btrfs_ino.exit.i_crit_edge
  %ino.0.i.i = phi i64 [ %conv3.i.i, %if.then.i.i ], [ %13, %lor.lhs.false.i.i.btrfs_ino.exit.i_crit_edge ]
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %11, ptr noundef nonnull @.str.52, ptr noundef nonnull @__func__.wait_extent_bit, i64 noundef %ino.0.i.i, i64 noundef %call1.i, i64 noundef %start, i64 noundef %end) #17
  br label %__btrfs_debug_check_extent_io_range.exit

__btrfs_debug_check_extent_io_range.exit:         ; preds = %btrfs_ino.exit.i, %do.body11.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, %do.body.i, %if.end.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, %is_data_inode.exit.i.__btrfs_debug_check_extent_io_range.exit_crit_edge, %entry.__btrfs_debug_check_extent_io_range.exit_crit_edge
  %lock = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %lock) #14
  %18 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 1
  %19 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 2
  %20 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 3
  %21 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait.i, i32 0, i32 3, i32 1
  %22 = ptrtoint ptr %tree to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %tree, align 4
  %tobool.not78.i.i.i4648 = icmp eq ptr %23, null
  br i1 %tobool.not78.i.i.i4648, label %__btrfs_debug_check_extent_io_range.exit.out_crit_edge, label %__btrfs_debug_check_extent_io_range.exit.while.body.i.i.i.preheader_crit_edge

__btrfs_debug_check_extent_io_range.exit.while.body.i.i.i.preheader_crit_edge: ; preds = %__btrfs_debug_check_extent_io_range.exit
  br label %while.body.i.i.i.preheader

__btrfs_debug_check_extent_io_range.exit.out_crit_edge: ; preds = %__btrfs_debug_check_extent_io_range.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

while.cond.loopexit:                              ; preds = %if.end12
  %24 = ptrtoint ptr %tree to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %tree, align 4
  %tobool.not78.i.i.i = icmp eq ptr %25, null
  br i1 %tobool.not78.i.i.i, label %while.cond.loopexit.out_crit_edge, label %while.cond.loopexit.while.body.i.i.i.preheader.backedge_crit_edge

while.cond.loopexit.while.body.i.i.i.preheader.backedge_crit_edge: ; preds = %while.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.i.preheader.backedge

while.cond.loopexit.out_crit_edge:                ; preds = %while.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

while.body.i.i.i.preheader.backedge:              ; preds = %refcount_inc.exit.while.body.i.i.i.preheader.backedge_crit_edge, %while.cond.loopexit.while.body.i.i.i.preheader.backedge_crit_edge
  %.be = phi ptr [ %25, %while.cond.loopexit.while.body.i.i.i.preheader.backedge_crit_edge ], [ %52, %refcount_inc.exit.while.body.i.i.i.preheader.backedge_crit_edge ]
  %start.addr.147.be = phi i64 [ %add, %while.cond.loopexit.while.body.i.i.i.preheader.backedge_crit_edge ], [ %37, %refcount_inc.exit.while.body.i.i.i.preheader.backedge_crit_edge ]
  br label %while.body.i.i.i.preheader

while.body.i.i.i.preheader:                       ; preds = %while.body.i.i.i.preheader.backedge, %__btrfs_debug_check_extent_io_range.exit.while.body.i.i.i.preheader_crit_edge
  %26 = phi ptr [ %.be, %while.body.i.i.i.preheader.backedge ], [ %23, %__btrfs_debug_check_extent_io_range.exit.while.body.i.i.i.preheader_crit_edge ]
  %start.addr.147 = phi i64 [ %start.addr.147.be, %while.body.i.i.i.preheader.backedge ], [ %start, %__btrfs_debug_check_extent_io_range.exit.while.body.i.i.i.preheader_crit_edge ]
  br label %while.body.i.i.i

while.body.i.i.i:                                 ; preds = %if.end5.i.i.i.while.body.i.i.i_crit_edge, %while.body.i.i.i.preheader
  %27 = phi ptr [ %33, %if.end5.i.i.i.while.body.i.i.i_crit_edge ], [ %26, %while.body.i.i.i.preheader ]
  %add.ptr.i.i.i = getelementptr i8, ptr %27, i32 -16
  %28 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %add.ptr.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %29, i64 %start.addr.147)
  %cmp.i.i.i1 = icmp ugt i64 %29, %start.addr.147
  br i1 %cmp.i.i.i1, label %if.then.i.i.i2, label %if.else.i.i.i

if.then.i.i.i2:                                   ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_left.i.i.i = getelementptr inbounds %struct.rb_node, ptr %27, i32 0, i32 2
  br label %if.end5.i.i.i

if.else.i.i.i:                                    ; preds = %while.body.i.i.i
  %end.i.i.i = getelementptr i8, ptr %27, i32 -8
  %30 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %end.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %31, i64 %start.addr.147)
  %cmp2.i.i.i = icmp ult i64 %31, %start.addr.147
  br i1 %cmp2.i.i.i, label %if.then3.i.i.i, label %if.else.i.i.i.if.end.preheader_crit_edge

if.else.i.i.i.if.end.preheader_crit_edge:         ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.preheader

if.then3.i.i.i:                                   ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_right.i.i.i = getelementptr inbounds %struct.rb_node, ptr %27, i32 0, i32 1
  br label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %if.then3.i.i.i, %if.then.i.i.i2
  %n.1.i.i.i = phi ptr [ %rb_left.i.i.i, %if.then.i.i.i2 ], [ %rb_right.i.i.i, %if.then3.i.i.i ]
  %32 = ptrtoint ptr %n.1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %n.1.i.i.i, align 4
  %tobool.not.i.i.i3 = icmp eq ptr %33, null
  br i1 %tobool.not.i.i.i3, label %if.end5.i.i.i.land.rhs.i.i.i_crit_edge, label %if.end5.i.i.i.while.body.i.i.i_crit_edge

if.end5.i.i.i.while.body.i.i.i_crit_edge:         ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.i

if.end5.i.i.i.land.rhs.i.i.i_crit_edge:           ; preds = %if.end5.i.i.i
  br label %land.rhs.i.i.i

land.rhs.i.i.i:                                   ; preds = %while.body18.i.i.i.land.rhs.i.i.i_crit_edge, %if.end5.i.i.i.land.rhs.i.i.i_crit_edge
  %prev.183.i.i.i = phi ptr [ %call.i.i.i, %while.body18.i.i.i.land.rhs.i.i.i_crit_edge ], [ %27, %if.end5.i.i.i.land.rhs.i.i.i_crit_edge ]
  %end16.i.i.i = getelementptr i8, ptr %prev.183.i.i.i, i32 -8
  %34 = ptrtoint ptr %end16.i.i.i to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %end16.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %35, i64 %start.addr.147)
  %cmp17.i.i.i = icmp ult i64 %35, %start.addr.147
  br i1 %cmp17.i.i.i, label %while.body18.i.i.i, label %land.rhs.i.i.i.if.end.preheader_crit_edge

land.rhs.i.i.i.if.end.preheader_crit_edge:        ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.preheader

if.end.preheader:                                 ; preds = %land.rhs.i.i.i.if.end.preheader_crit_edge, %if.else.i.i.i.if.end.preheader_crit_edge
  %node.013.ph = phi ptr [ %prev.183.i.i.i, %land.rhs.i.i.i.if.end.preheader_crit_edge ], [ %27, %if.else.i.i.i.if.end.preheader_crit_edge ]
  br label %if.end

while.body18.i.i.i:                               ; preds = %land.rhs.i.i.i
  %call.i.i.i = call ptr @rb_next(ptr noundef nonnull %prev.183.i.i.i) #14
  %tobool15.not.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool15.not.i.i.i, label %while.body18.i.i.i.out_crit_edge, label %while.body18.i.i.i.land.rhs.i.i.i_crit_edge

while.body18.i.i.i.land.rhs.i.i.i_crit_edge:      ; preds = %while.body18.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.i.i.i

while.body18.i.i.i.out_crit_edge:                 ; preds = %while.body18.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end:                                           ; preds = %if.then17.if.end_crit_edge, %if.end.preheader
  %node.013 = phi ptr [ %call18, %if.then17.if.end_crit_edge ], [ %node.013.ph, %if.end.preheader ]
  %add.ptr = getelementptr i8, ptr %node.013, i32 -16
  %36 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %add.ptr, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %37, i64 %end)
  %cmp = icmp ugt i64 %37, %end
  br i1 %cmp, label %if.end.out_crit_edge, label %if.end3

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end3:                                          ; preds = %if.end
  %state4 = getelementptr i8, ptr %node.013, i32 68
  %38 = ptrtoint ptr %state4 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %state4, align 4
  %and = and i32 %39, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool5.not = icmp eq i32 %and, 0
  br i1 %tobool5.not, label %if.end8, label %if.then6

if.then6:                                         ; preds = %if.end3
  %add.ptr.le = getelementptr i8, ptr %node.013, i32 -16
  %refs = getelementptr i8, ptr %node.013, i32 64
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refs, i32 noundef 4) #14
  call void @llvm.prefetch.p0(ptr %refs, i32 1, i32 3, i32 1) #14
  %40 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs, ptr %refs, i32 1, ptr elementtype(i32) %refs) #14, !srcloc !338
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %40, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %tobool1.not.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i, label %if.then6.if.end15.sink.split.i.i.i_crit_edge, label %if.else.i.i.i4, !prof !319

if.then6.if.end15.sink.split.i.i.i_crit_edge:     ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i4:                                   ; preds = %if.then6
  %add.i.i.i = add i32 %asmresult.i.i.i.i.i, 1
  %41 = or i32 %add.i.i.i, %asmresult.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %41)
  %.not.i.i.i = icmp sgt i32 %41, -1
  br i1 %.not.i.i.i, label %if.else.i.i.i4.refcount_inc.exit_crit_edge, label %if.else.i.i.i4.if.end15.sink.split.i.i.i_crit_edge, !prof !322

if.else.i.i.i4.if.end15.sink.split.i.i.i_crit_edge: ; preds = %if.else.i.i.i4
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i4.refcount_inc.exit_crit_edge:       ; preds = %if.else.i.i.i4
  call void @__sanitizer_cov_trace_pc() #16
  br label %refcount_inc.exit

if.end15.sink.split.i.i.i:                        ; preds = %if.else.i.i.i4.if.end15.sink.split.i.i.i_crit_edge, %if.then6.if.end15.sink.split.i.i.i_crit_edge
  %.sink.i.i.i = phi i32 [ 2, %if.then6.if.end15.sink.split.i.i.i_crit_edge ], [ 1, %if.else.i.i.i4.if.end15.sink.split.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refs, i32 noundef %.sink.i.i.i) #14
  br label %refcount_inc.exit

refcount_inc.exit:                                ; preds = %if.end15.sink.split.i.i.i, %if.else.i.i.i4.refcount_inc.exit_crit_edge
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %wait.i) #14
  %42 = ptrtoint ptr %wait.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 0, ptr %wait.i, align 4
  %43 = call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i = and i32 %43, -16384
  %44 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %44, i32 0, i32 2
  %45 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %task.i, align 8
  %47 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %46, ptr %18, align 4
  %48 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr @autoremove_wake_function, ptr %19, align 4
  %49 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %20, ptr %20, align 4
  %50 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %20, ptr %21, align 4
  %wq.i = getelementptr i8, ptr %node.013, i32 12
  call void @prepare_to_wait(ptr noundef %wq.i, ptr noundef nonnull %wait.i, i32 noundef 2) #14
  call void @_raw_spin_unlock(ptr noundef %lock) #14
  call void @schedule() #14
  call void @_raw_spin_lock(ptr noundef %lock) #14
  call void @finish_wait(ptr noundef %wq.i, ptr noundef nonnull %wait.i) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %wait.i) #14
  call void @free_extent_state(ptr noundef %add.ptr.le)
  %51 = ptrtoint ptr %tree to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %tree, align 4
  %tobool.not78.i.i.i46 = icmp eq ptr %52, null
  br i1 %tobool.not78.i.i.i46, label %refcount_inc.exit.out_crit_edge, label %refcount_inc.exit.while.body.i.i.i.preheader.backedge_crit_edge

refcount_inc.exit.while.body.i.i.i.preheader.backedge_crit_edge: ; preds = %refcount_inc.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.i.preheader.backedge

refcount_inc.exit.out_crit_edge:                  ; preds = %refcount_inc.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end8:                                          ; preds = %if.end3
  %end9 = getelementptr i8, ptr %node.013, i32 -8
  %53 = ptrtoint ptr %end9 to i32
  call void @__asan_load8_noabort(i32 %53)
  %54 = load i64, ptr %end9, align 8
  %add = add i64 %54, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %add, i64 %end)
  %cmp10 = icmp ugt i64 %add, %end
  br i1 %cmp10, label %if.end8.out_crit_edge, label %if.end12

if.end8.out_crit_edge:                            ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end12:                                         ; preds = %if.end8
  call void @__might_resched(ptr noundef nonnull @.str.2, i32 noundef 914, i32 noundef 1) #14
  %call15 = call i32 @__cond_resched_lock(ptr noundef %lock) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %if.then17, label %while.cond.loopexit

if.then17:                                        ; preds = %if.end12
  %call18 = call ptr @rb_next(ptr noundef nonnull %node.013) #14
  %tobool.not = icmp eq ptr %call18, null
  br i1 %tobool.not, label %if.then17.out_crit_edge, label %if.then17.if.end_crit_edge

if.then17.if.end_crit_edge:                       ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then17.out_crit_edge:                          ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

out:                                              ; preds = %if.then17.out_crit_edge, %if.end8.out_crit_edge, %refcount_inc.exit.out_crit_edge, %if.end.out_crit_edge, %while.body18.i.i.i.out_crit_edge, %while.cond.loopexit.out_crit_edge, %__btrfs_debug_check_extent_io_range.exit.out_crit_edge
  call void @_raw_spin_unlock(ptr noundef %lock) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @try_lock_extent(ptr noundef %tree, i64 noundef %start, i64 noundef %end) local_unnamed_addr #0 align 64 {
entry:
  %failed_start = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %failed_start) #14
  %0 = ptrtoint ptr %failed_start to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 -1, ptr %failed_start, align 8, !annotation !349
  %call = call i32 @set_extent_bit(ptr noundef %tree, i64 noundef %start, i64 noundef %end, i32 noundef 4, i32 noundef 4, ptr noundef nonnull %failed_start, ptr noundef null, i32 noundef 3136, ptr noundef null)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -17, i32 %call)
  %cmp = icmp eq i32 %call, -17
  br i1 %cmp, label %if.then, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then:                                          ; preds = %entry
  %1 = ptrtoint ptr %failed_start to i32
  call void @__asan_load8_noabort(i32 %1)
  %2 = load i64, ptr %failed_start, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %2, i64 %start)
  %cmp1 = icmp ugt i64 %2, %start
  br i1 %cmp1, label %if.then2, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %sub = add i64 %2, -1
  %call.i = call i32 @__clear_extent_bit(ptr noundef %tree, i64 noundef %start, i64 noundef %sub, i32 noundef 4, i32 noundef 1, i32 noundef 0, ptr noundef null, i32 noundef 3136, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then2, %if.then.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.then2 ], [ 0, %if.then.cleanup_crit_edge ], [ 1, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %failed_start) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @extent_range_clear_dirty_for_io(ptr nocapture noundef readonly %inode, i64 noundef %start, i64 noundef %end) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %shr = lshr i64 %start, 12
  %conv = trunc i64 %shr to i32
  %shr1 = lshr i64 %end, 12
  %conv2 = trunc i64 %shr1 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv, i32 %conv2)
  %cmp.not18 = icmp ugt i32 %conv, %conv2
  br i1 %cmp.not18, label %entry.while.end_crit_edge, label %while.body.lr.ph

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %i_mapping = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  br label %while.body

while.body:                                       ; preds = %put_page.exit.while.body_crit_edge, %while.body.lr.ph
  %index.019 = phi i32 [ %conv, %while.body.lr.ph ], [ %inc, %put_page.exit.while.body_crit_edge ]
  %0 = ptrtoint ptr %i_mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_mapping, align 8
  %call.i = tail call ptr @pagecache_get_page(ptr noundef %1, i32 noundef %index.019, i32 noundef 0, i32 noundef 0) #14
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %do.body7, label %do.end12, !prof !319

do.body7:                                         ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1501, 0\0A.popsection", ""() #14, !srcloc !350
  unreachable

do.end12:                                         ; preds = %while.body
  %call13 = tail call zeroext i1 @clear_page_dirty_for_io(ptr noundef nonnull %call.i) #14
  %2 = getelementptr inbounds %struct.page, ptr %call.i, i32 0, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %2, align 4
  %and.i.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !322

if.then.i.i:                                      ; preds = %do.end12
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %4, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %do.end12
  call void @__sanitizer_cov_trace_pc() #16
  %5 = ptrtoint ptr %call.i to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %5, %if.end.i.i ]
  %6 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %6, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #14
  %7 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp.i.i.i.i = icmp eq i32 %8, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !319

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %9 = inttoptr i32 %retval.0.i.i to ptr
  tail call void @dump_page(ptr noundef %9, ptr noundef nonnull @.str.57) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #14, !srcloc !351
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !352
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #14
  %10 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #14, !srcloc !353
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %10, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !354
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@extent_range_clear_dirty_for_io, %if.then.i.i.i.i.i)) #14
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !326

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %6, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #14
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.put_page.exit_crit_edge

folio_put_testzero.exit.i.i.put_page.exit_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %put_page.exit

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__put_page(ptr noundef %6) #14
  br label %put_page.exit

put_page.exit:                                    ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.put_page.exit_crit_edge
  %inc = add i32 %index.019, 1
  %cmp.not = icmp ugt i32 %inc, %conv2
  br i1 %cmp.not, label %put_page.exit.while.end_crit_edge, label %put_page.exit.while.body_crit_edge

put_page.exit.while.body_crit_edge:               ; preds = %put_page.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

put_page.exit.while.end_crit_edge:                ; preds = %put_page.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %put_page.exit.while.end_crit_edge, %entry.while.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @clear_page_dirty_for_io(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @extent_range_redirty_for_io(ptr nocapture noundef readonly %inode, i64 noundef %start, i64 noundef %end) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %shr = lshr i64 %start, 12
  %conv = trunc i64 %shr to i32
  %shr1 = lshr i64 %end, 12
  %conv2 = trunc i64 %shr1 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv, i32 %conv2)
  %cmp.not25 = icmp ugt i32 %conv, %conv2
  br i1 %cmp.not25, label %entry.while.end_crit_edge, label %while.body.lr.ph

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %i_mapping = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  br label %while.body

while.body:                                       ; preds = %put_page.exit.while.body_crit_edge, %while.body.lr.ph
  %index.026 = phi i32 [ %conv, %while.body.lr.ph ], [ %inc, %put_page.exit.while.body_crit_edge ]
  %0 = ptrtoint ptr %i_mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_mapping, align 8
  %call.i = tail call ptr @pagecache_get_page(ptr noundef %1, i32 noundef %index.026, i32 noundef 0, i32 noundef 0) #14
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %do.body7, label %do.end12, !prof !319

do.body7:                                         ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1516, 0\0A.popsection", ""() #14, !srcloc !355
  unreachable

do.end12:                                         ; preds = %while.body
  %call13 = tail call i32 @__set_page_dirty_nobuffers(ptr noundef nonnull %call.i) #14
  %2 = getelementptr inbounds %struct.page, ptr %call.i, i32 0, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %2, align 4
  %and.i.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !322

if.then.i.i:                                      ; preds = %do.end12
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %4, -1
  br label %account_page_redirty.exit

if.end.i.i:                                       ; preds = %do.end12
  call void @__sanitizer_cov_trace_pc() #16
  %5 = ptrtoint ptr %call.i to i32
  br label %account_page_redirty.exit

account_page_redirty.exit:                        ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %5, %if.end.i.i ]
  %6 = inttoptr i32 %retval.0.i.i to ptr
  tail call void @folio_account_redirty(ptr noundef %6) #14
  %7 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %2, align 4
  %and.i.i19 = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i19)
  %tobool.not.i.i20 = icmp eq i32 %and.i.i19, 0
  br i1 %tobool.not.i.i20, label %if.end.i.i23, label %if.then.i.i22, !prof !322

if.then.i.i22:                                    ; preds = %account_page_redirty.exit
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i21 = add i32 %8, -1
  br label %_compound_head.exit.i

if.end.i.i23:                                     ; preds = %account_page_redirty.exit
  call void @__sanitizer_cov_trace_pc() #16
  %9 = ptrtoint ptr %call.i to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i23, %if.then.i.i22
  %retval.0.i.i24 = phi i32 [ %sub.i.i21, %if.then.i.i22 ], [ %9, %if.end.i.i23 ]
  %10 = inttoptr i32 %retval.0.i.i24 to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %10, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #14
  %11 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp.i.i.i.i = icmp eq i32 %12, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !319

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %13 = inttoptr i32 %retval.0.i.i24 to ptr
  tail call void @dump_page(ptr noundef %13, ptr noundef nonnull @.str.57) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #14, !srcloc !351
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !352
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #14
  %14 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #14, !srcloc !353
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %14, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !354
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@extent_range_redirty_for_io, %if.then.i.i.i.i.i)) #14
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !326

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %10, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #14
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.put_page.exit_crit_edge

folio_put_testzero.exit.i.i.put_page.exit_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %put_page.exit

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__put_page(ptr noundef %10) #14
  br label %put_page.exit

put_page.exit:                                    ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.put_page.exit_crit_edge
  %inc = add i32 %index.026, 1
  %cmp.not = icmp ugt i32 %inc, %conv2
  br i1 %cmp.not, label %put_page.exit.while.end_crit_edge, label %put_page.exit.while.body_crit_edge

put_page.exit.while.body_crit_edge:               ; preds = %put_page.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

put_page.exit.while.end_crit_edge:                ; preds = %put_page.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %put_page.exit.while.end_crit_edge, %entry.while.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__set_page_dirty_nobuffers(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @find_first_extent_bit(ptr noundef %tree, i64 noundef %start, ptr nocapture noundef writeonly %start_ret, ptr nocapture noundef writeonly %end_ret, i32 noundef %bits, ptr noundef %cached_state) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %lock = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %lock) #14
  %tobool.not = icmp eq ptr %cached_state, null
  br i1 %tobool.not, label %entry.if.end10_crit_edge, label %land.lhs.true

entry.if.end10_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10

land.lhs.true:                                    ; preds = %entry
  %0 = ptrtoint ptr %cached_state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cached_state, align 4
  %tobool1.not = icmp eq ptr %1, null
  br i1 %tobool1.not, label %land.lhs.true.if.end10_crit_edge, label %if.then

land.lhs.true.if.end10_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10

if.then:                                          ; preds = %land.lhs.true
  %end = getelementptr inbounds %struct.extent_state, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %end to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %end, align 8
  %sub = add i64 %start, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %3, i64 %sub)
  %cmp = icmp eq i64 %3, %sub
  br i1 %cmp, label %land.lhs.true2, label %if.then.if.end9_crit_edge

if.then.if.end9_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

land.lhs.true2:                                   ; preds = %if.then
  %rb_node.i = getelementptr inbounds %struct.extent_state, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %rb_node.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rb_node.i, align 8
  %6 = ptrtoint ptr %rb_node.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %6)
  %cmp.i.not = icmp eq i32 %5, %6
  br i1 %cmp.i.not, label %land.lhs.true2.if.end9_crit_edge, label %land.lhs.true2.while.cond_crit_edge

land.lhs.true2.while.cond_crit_edge:              ; preds = %land.lhs.true2
  br label %while.cond

land.lhs.true2.if.end9_crit_edge:                 ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

while.cond:                                       ; preds = %while.body.while.cond_crit_edge, %land.lhs.true2.while.cond_crit_edge
  %state.0 = phi ptr [ %add.ptr.i, %while.body.while.cond_crit_edge ], [ %1, %land.lhs.true2.while.cond_crit_edge ]
  %rb_node.i36 = getelementptr inbounds %struct.extent_state, ptr %state.0, i32 0, i32 2
  %call.i = tail call ptr @rb_next(ptr noundef %rb_node.i36) #14
  %tobool.not.i = icmp eq ptr %call.i, null
  %add.ptr.i = getelementptr i8, ptr %call.i, i32 -16
  %cmp5.not47 = icmp eq ptr %add.ptr.i, null
  %cmp5.not = or i1 %tobool.not.i, %cmp5.not47
  br i1 %cmp5.not, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond
  %state6 = getelementptr i8, ptr %call.i, i32 68
  %7 = ptrtoint ptr %state6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %state6, align 4
  %and = and i32 %8, %bits
  %tobool7.not = icmp eq i32 %and, 0
  br i1 %tobool7.not, label %while.body.while.cond_crit_edge, label %while.body.if.then13_crit_edge

while.body.if.then13_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13

while.body.while.cond_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond

while.end:                                        ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #16
  %9 = ptrtoint ptr %cached_state to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %cached_state, align 4
  tail call void @free_extent_state(ptr noundef %10)
  %11 = ptrtoint ptr %cached_state to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %cached_state, align 4
  br label %out

if.end9:                                          ; preds = %land.lhs.true2.if.end9_crit_edge, %if.then.if.end9_crit_edge
  tail call void @free_extent_state(ptr noundef nonnull %1)
  %12 = ptrtoint ptr %cached_state to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %cached_state, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %land.lhs.true.if.end10_crit_edge, %entry.if.end10_crit_edge
  %13 = ptrtoint ptr %tree to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %tree, align 4
  %tobool.not78.i.i.i.i = icmp eq ptr %14, null
  br i1 %tobool.not78.i.i.i.i, label %if.end10.out_crit_edge, label %if.end10.while.body.i.i.i.i_crit_edge

if.end10.while.body.i.i.i.i_crit_edge:            ; preds = %if.end10
  br label %while.body.i.i.i.i

if.end10.out_crit_edge:                           ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

while.body.i.i.i.i:                               ; preds = %if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge, %if.end10.while.body.i.i.i.i_crit_edge
  %15 = phi ptr [ %21, %if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge ], [ %14, %if.end10.while.body.i.i.i.i_crit_edge ]
  %add.ptr.i.i.i.i = getelementptr i8, ptr %15, i32 -16
  %16 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %add.ptr.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %17, i64 %start)
  %cmp.i.i.i.i = icmp ugt i64 %17, %start
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %if.else.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %while.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_left.i.i.i.i = getelementptr inbounds %struct.rb_node, ptr %15, i32 0, i32 2
  br label %if.end5.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %while.body.i.i.i.i
  %end.i.i.i.i = getelementptr i8, ptr %15, i32 -8
  %18 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %end.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %19, i64 %start)
  %cmp2.i.i.i.i = icmp ult i64 %19, %start
  br i1 %cmp2.i.i.i.i, label %if.then3.i.i.i.i, label %if.else.i.i.i.i.while.cond.i.preheader_crit_edge

if.else.i.i.i.i.while.cond.i.preheader_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond.i.preheader

if.then3.i.i.i.i:                                 ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_right.i.i.i.i = getelementptr inbounds %struct.rb_node, ptr %15, i32 0, i32 1
  br label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.then3.i.i.i.i, %if.then.i.i.i.i
  %n.1.i.i.i.i = phi ptr [ %rb_left.i.i.i.i, %if.then.i.i.i.i ], [ %rb_right.i.i.i.i, %if.then3.i.i.i.i ]
  %20 = ptrtoint ptr %n.1.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %n.1.i.i.i.i, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %21, null
  br i1 %tobool.not.i.i.i.i, label %if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge, label %if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge

if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge:     ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.i.i

if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge:       ; preds = %if.end5.i.i.i.i
  br label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge, %if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge
  %prev.183.i.i.i.i = phi ptr [ %call.i.i.i.i, %while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge ], [ %15, %if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge ]
  %end16.i.i.i.i = getelementptr i8, ptr %prev.183.i.i.i.i, i32 -8
  %22 = ptrtoint ptr %end16.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %end16.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %23, i64 %start)
  %cmp17.i.i.i.i = icmp ult i64 %23, %start
  br i1 %cmp17.i.i.i.i, label %while.body18.i.i.i.i, label %land.rhs.i.i.i.i.while.cond.i.preheader_crit_edge

land.rhs.i.i.i.i.while.cond.i.preheader_crit_edge: ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond.i.preheader

while.cond.i.preheader:                           ; preds = %land.rhs.i.i.i.i.while.cond.i.preheader_crit_edge, %if.else.i.i.i.i.while.cond.i.preheader_crit_edge
  %node.0.i.ph = phi ptr [ %prev.183.i.i.i.i, %land.rhs.i.i.i.i.while.cond.i.preheader_crit_edge ], [ %15, %if.else.i.i.i.i.while.cond.i.preheader_crit_edge ]
  br label %while.cond.i

while.body18.i.i.i.i:                             ; preds = %land.rhs.i.i.i.i
  %call.i.i.i.i = tail call ptr @rb_next(ptr noundef nonnull %prev.183.i.i.i.i) #14
  %tobool15.not.i.i.i.i = icmp eq ptr %call.i.i.i.i, null
  br i1 %tobool15.not.i.i.i.i, label %while.body18.i.i.i.i.out_crit_edge, label %while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge

while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge:  ; preds = %while.body18.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.i.i.i.i

while.body18.i.i.i.i.out_crit_edge:               ; preds = %while.body18.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

while.cond.i:                                     ; preds = %if.end4.i.while.cond.i_crit_edge, %while.cond.i.preheader
  %node.0.i = phi ptr [ %call5.i, %if.end4.i.while.cond.i_crit_edge ], [ %node.0.i.ph, %while.cond.i.preheader ]
  %end.i = getelementptr i8, ptr %node.0.i, i32 -8
  %24 = ptrtoint ptr %end.i to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %end.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %25, i64 %start)
  %cmp.not.i = icmp ult i64 %25, %start
  br i1 %cmp.not.i, label %while.cond.i.if.end4.i_crit_edge, label %land.lhs.true.i

while.cond.i.if.end4.i_crit_edge:                 ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4.i

land.lhs.true.i:                                  ; preds = %while.cond.i
  %state1.i = getelementptr i8, ptr %node.0.i, i32 68
  %26 = ptrtoint ptr %state1.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %state1.i, align 4
  %and.i = and i32 %27, %bits
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool2.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.end4.i_crit_edge, label %got_it

land.lhs.true.i.if.end4.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4.i

if.end4.i:                                        ; preds = %land.lhs.true.i.if.end4.i_crit_edge, %while.cond.i.if.end4.i_crit_edge
  %call5.i = tail call ptr @rb_next(ptr noundef nonnull %node.0.i) #14
  %tobool6.not.i = icmp eq ptr %call5.i, null
  br i1 %tobool6.not.i, label %if.end4.i.out_crit_edge, label %if.end4.i.while.cond.i_crit_edge

if.end4.i.while.cond.i_crit_edge:                 ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond.i

if.end4.i.out_crit_edge:                          ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

got_it:                                           ; preds = %land.lhs.true.i
  %add.ptr.le.i = getelementptr i8, ptr %node.0.i, i32 -16
  %tobool12.not = icmp eq ptr %add.ptr.le.i, null
  br i1 %tobool12.not, label %got_it.out_crit_edge, label %got_it.if.then13_crit_edge

got_it.if.then13_crit_edge:                       ; preds = %got_it
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13

got_it.out_crit_edge:                             ; preds = %got_it
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.then13:                                        ; preds = %got_it.if.then13_crit_edge, %while.body.if.then13_crit_edge
  %state.146 = phi ptr [ %add.ptr.le.i, %got_it.if.then13_crit_edge ], [ %add.ptr.i, %while.body.if.then13_crit_edge ]
  br i1 %tobool.not, label %if.then13.cache_state_if_flags.exit_crit_edge, label %land.lhs.true.i39

if.then13.cache_state_if_flags.exit_crit_edge:    ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state_if_flags.exit

land.lhs.true.i39:                                ; preds = %if.then13
  %28 = ptrtoint ptr %cached_state to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %cached_state, align 4
  %tobool1.not.i = icmp eq ptr %29, null
  br i1 %tobool1.not.i, label %if.then.i, label %land.lhs.true.i39.cache_state_if_flags.exit_crit_edge

land.lhs.true.i39.cache_state_if_flags.exit_crit_edge: ; preds = %land.lhs.true.i39
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state_if_flags.exit

if.then.i:                                        ; preds = %land.lhs.true.i39
  %30 = ptrtoint ptr %cached_state to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %state.146, ptr %cached_state, align 4
  %refs.i = getelementptr inbounds %struct.extent_state, ptr %state.146, i32 0, i32 4
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refs.i, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %refs.i, i32 1, i32 3, i32 1) #14
  %31 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs.i, ptr %refs.i, i32 1, ptr elementtype(i32) %refs.i) #14, !srcloc !338
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %31, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i40, !prof !319

if.then.i.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i40:                                ; preds = %if.then.i
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %32 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %32)
  %.not.i.i.i.i = icmp sgt i32 %32, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i40.cache_state_if_flags.exit_crit_edge, label %if.else.i.i.i.i40.if.end15.sink.split.i.i.i.i_crit_edge, !prof !322

if.else.i.i.i.i40.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i40
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i40.cache_state_if_flags.exit_crit_edge: ; preds = %if.else.i.i.i.i40
  call void @__sanitizer_cov_trace_pc() #16
  br label %cache_state_if_flags.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i40.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i40.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refs.i, i32 noundef %.sink.i.i.i.i) #14
  br label %cache_state_if_flags.exit

cache_state_if_flags.exit:                        ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i40.cache_state_if_flags.exit_crit_edge, %land.lhs.true.i39.cache_state_if_flags.exit_crit_edge, %if.then13.cache_state_if_flags.exit_crit_edge
  %33 = ptrtoint ptr %state.146 to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %state.146, align 8
  %35 = ptrtoint ptr %start_ret to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %start_ret, align 8
  %end15 = getelementptr inbounds %struct.extent_state, ptr %state.146, i32 0, i32 1
  %36 = ptrtoint ptr %end15 to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %end15, align 8
  %38 = ptrtoint ptr %end_ret to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %37, ptr %end_ret, align 8
  br label %out

out:                                              ; preds = %cache_state_if_flags.exit, %got_it.out_crit_edge, %if.end4.i.out_crit_edge, %while.body18.i.i.i.i.out_crit_edge, %if.end10.out_crit_edge, %while.end
  %ret.0 = phi i32 [ 0, %cache_state_if_flags.exit ], [ 1, %got_it.out_crit_edge ], [ 1, %while.end ], [ 1, %if.end10.out_crit_edge ], [ 1, %if.end4.i.out_crit_edge ], [ 1, %while.body18.i.i.i.i.out_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %lock) #14
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @find_contiguous_extent_bit(ptr noundef %tree, i64 noundef %start, ptr nocapture noundef writeonly %start_ret, ptr nocapture noundef %end_ret, i32 noundef %bits) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %lock = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %lock) #14
  %0 = ptrtoint ptr %tree to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tree, align 4
  %tobool.not78.i.i.i.i = icmp eq ptr %1, null
  br i1 %tobool.not78.i.i.i.i, label %entry.if.end7_crit_edge, label %entry.while.body.i.i.i.i_crit_edge

entry.while.body.i.i.i.i_crit_edge:               ; preds = %entry
  br label %while.body.i.i.i.i

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

while.body.i.i.i.i:                               ; preds = %if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge, %entry.while.body.i.i.i.i_crit_edge
  %2 = phi ptr [ %8, %if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge ], [ %1, %entry.while.body.i.i.i.i_crit_edge ]
  %add.ptr.i.i.i.i = getelementptr i8, ptr %2, i32 -16
  %3 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %add.ptr.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %4, i64 %start)
  %cmp.i.i.i.i = icmp ugt i64 %4, %start
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %if.else.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %while.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_left.i.i.i.i = getelementptr inbounds %struct.rb_node, ptr %2, i32 0, i32 2
  br label %if.end5.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %while.body.i.i.i.i
  %end.i.i.i.i = getelementptr i8, ptr %2, i32 -8
  %5 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %end.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %6, i64 %start)
  %cmp2.i.i.i.i = icmp ult i64 %6, %start
  br i1 %cmp2.i.i.i.i, label %if.then3.i.i.i.i, label %if.else.i.i.i.i.while.cond.i.preheader_crit_edge

if.else.i.i.i.i.while.cond.i.preheader_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond.i.preheader

if.then3.i.i.i.i:                                 ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_right.i.i.i.i = getelementptr inbounds %struct.rb_node, ptr %2, i32 0, i32 1
  br label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.then3.i.i.i.i, %if.then.i.i.i.i
  %n.1.i.i.i.i = phi ptr [ %rb_left.i.i.i.i, %if.then.i.i.i.i ], [ %rb_right.i.i.i.i, %if.then3.i.i.i.i ]
  %7 = ptrtoint ptr %n.1.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %n.1.i.i.i.i, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %8, null
  br i1 %tobool.not.i.i.i.i, label %if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge, label %if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge

if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge:     ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.i.i

if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge:       ; preds = %if.end5.i.i.i.i
  br label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge, %if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge
  %prev.183.i.i.i.i = phi ptr [ %call.i.i.i.i, %while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge ], [ %2, %if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge ]
  %end16.i.i.i.i = getelementptr i8, ptr %prev.183.i.i.i.i, i32 -8
  %9 = ptrtoint ptr %end16.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %end16.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %10, i64 %start)
  %cmp17.i.i.i.i = icmp ult i64 %10, %start
  br i1 %cmp17.i.i.i.i, label %while.body18.i.i.i.i, label %land.rhs.i.i.i.i.while.cond.i.preheader_crit_edge

land.rhs.i.i.i.i.while.cond.i.preheader_crit_edge: ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond.i.preheader

while.cond.i.preheader:                           ; preds = %land.rhs.i.i.i.i.while.cond.i.preheader_crit_edge, %if.else.i.i.i.i.while.cond.i.preheader_crit_edge
  %node.0.i.ph = phi ptr [ %prev.183.i.i.i.i, %land.rhs.i.i.i.i.while.cond.i.preheader_crit_edge ], [ %2, %if.else.i.i.i.i.while.cond.i.preheader_crit_edge ]
  br label %while.cond.i

while.body18.i.i.i.i:                             ; preds = %land.rhs.i.i.i.i
  %call.i.i.i.i = tail call ptr @rb_next(ptr noundef nonnull %prev.183.i.i.i.i) #14
  %tobool15.not.i.i.i.i = icmp eq ptr %call.i.i.i.i, null
  br i1 %tobool15.not.i.i.i.i, label %while.body18.i.i.i.i.if.end7_crit_edge, label %while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge

while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge:  ; preds = %while.body18.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.i.i.i.i

while.body18.i.i.i.i.if.end7_crit_edge:           ; preds = %while.body18.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

while.cond.i:                                     ; preds = %if.end4.i.while.cond.i_crit_edge, %while.cond.i.preheader
  %node.0.i = phi ptr [ %call5.i, %if.end4.i.while.cond.i_crit_edge ], [ %node.0.i.ph, %while.cond.i.preheader ]
  %end.i = getelementptr i8, ptr %node.0.i, i32 -8
  %11 = ptrtoint ptr %end.i to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %end.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %12, i64 %start)
  %cmp.not.i = icmp ult i64 %12, %start
  br i1 %cmp.not.i, label %while.cond.i.if.end4.i_crit_edge, label %land.lhs.true.i

while.cond.i.if.end4.i_crit_edge:                 ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4.i

land.lhs.true.i:                                  ; preds = %while.cond.i
  %state1.i = getelementptr i8, ptr %node.0.i, i32 68
  %13 = ptrtoint ptr %state1.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %state1.i, align 4
  %and.i = and i32 %14, %bits
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool2.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.end4.i_crit_edge, label %find_first_extent_bit_state.exit

land.lhs.true.i.if.end4.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4.i

if.end4.i:                                        ; preds = %land.lhs.true.i.if.end4.i_crit_edge, %while.cond.i.if.end4.i_crit_edge
  %call5.i = tail call ptr @rb_next(ptr noundef nonnull %node.0.i) #14
  %tobool6.not.i = icmp eq ptr %call5.i, null
  br i1 %tobool6.not.i, label %if.end4.i.if.end7_crit_edge, label %if.end4.i.while.cond.i_crit_edge

if.end4.i.while.cond.i_crit_edge:                 ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond.i

if.end4.i.if.end7_crit_edge:                      ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

find_first_extent_bit_state.exit:                 ; preds = %land.lhs.true.i
  %add.ptr.le.i = getelementptr i8, ptr %node.0.i, i32 -16
  %tobool.not = icmp eq ptr %add.ptr.le.i, null
  br i1 %tobool.not, label %find_first_extent_bit_state.exit.if.end7_crit_edge, label %if.then

find_first_extent_bit_state.exit.if.end7_crit_edge: ; preds = %find_first_extent_bit_state.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

if.then:                                          ; preds = %find_first_extent_bit_state.exit
  %15 = ptrtoint ptr %add.ptr.le.i to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %add.ptr.le.i, align 8
  %17 = ptrtoint ptr %start_ret to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %16, ptr %start_ret, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body.while.cond_crit_edge, %if.then
  %state.0 = phi ptr [ %add.ptr.le.i, %if.then ], [ %add.ptr.i, %while.body.while.cond_crit_edge ]
  %storemerge.in = getelementptr inbounds %struct.extent_state, ptr %state.0, i32 0, i32 1
  %18 = ptrtoint ptr %storemerge.in to i32
  call void @__asan_load8_noabort(i32 %18)
  %storemerge = load i64, ptr %storemerge.in, align 8
  %19 = ptrtoint ptr %end_ret to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %storemerge, ptr %end_ret, align 8
  %rb_node.i = getelementptr inbounds %struct.extent_state, ptr %state.0, i32 0, i32 2
  %call.i = tail call ptr @rb_next(ptr noundef %rb_node.i) #14
  %tobool.not.i = icmp eq ptr %call.i, null
  %add.ptr.i = getelementptr i8, ptr %call.i, i32 -16
  %cmp.not21 = icmp eq ptr %add.ptr.i, null
  %cmp.not = or i1 %tobool.not.i, %cmp.not21
  br i1 %cmp.not, label %while.cond.if.end7_crit_edge, label %while.body

while.cond.if.end7_crit_edge:                     ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

while.body:                                       ; preds = %while.cond
  %20 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %add.ptr.i, align 8
  %22 = ptrtoint ptr %end_ret to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %end_ret, align 8
  %add = add i64 %23, 1
  %cmp4 = icmp ugt i64 %21, %add
  br i1 %cmp4, label %while.body.if.end7_crit_edge, label %while.body.while.cond_crit_edge

while.body.while.cond_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond

while.body.if.end7_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

if.end7:                                          ; preds = %while.body.if.end7_crit_edge, %while.cond.if.end7_crit_edge, %find_first_extent_bit_state.exit.if.end7_crit_edge, %if.end4.i.if.end7_crit_edge, %while.body18.i.i.i.i.if.end7_crit_edge, %entry.if.end7_crit_edge
  %ret.0 = phi i32 [ 1, %find_first_extent_bit_state.exit.if.end7_crit_edge ], [ 1, %entry.if.end7_crit_edge ], [ 0, %while.body.if.end7_crit_edge ], [ 0, %while.cond.if.end7_crit_edge ], [ 1, %if.end4.i.if.end7_crit_edge ], [ 1, %while.body18.i.i.i.i.if.end7_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %lock) #14
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @find_first_clear_extent_bit(ptr noundef %tree, i64 noundef %start, ptr nocapture noundef writeonly %start_ret, ptr nocapture noundef writeonly %end_ret, i32 noundef %bits) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %lock = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %lock) #14
  br label %while.cond

while.cond:                                       ; preds = %if.then24.while.cond_crit_edge, %entry
  %prev.0 = phi ptr [ null, %entry ], [ %prev.1120, %if.then24.while.cond_crit_edge ]
  %start.addr.0 = phi i64 [ %start, %entry ], [ %add22, %if.then24.while.cond_crit_edge ]
  %0 = ptrtoint ptr %tree to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tree, align 4
  %tobool.not78.i = icmp eq ptr %1, null
  br i1 %tobool.not78.i, label %while.cond.if.then_crit_edge, label %while.cond.while.body.i_crit_edge

while.cond.while.body.i_crit_edge:                ; preds = %while.cond
  br label %while.body.i

while.cond.if.then_crit_edge:                     ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

while.body.i:                                     ; preds = %if.end5.i.while.body.i_crit_edge, %while.cond.while.body.i_crit_edge
  %2 = phi ptr [ %8, %if.end5.i.while.body.i_crit_edge ], [ %1, %while.cond.while.body.i_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %2, i32 -16
  %3 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %add.ptr.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %4, i64 %start.addr.0)
  %cmp.i = icmp ugt i64 %4, %start.addr.0
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_left.i = getelementptr inbounds %struct.rb_node, ptr %2, i32 0, i32 2
  br label %if.end5.i

if.else.i:                                        ; preds = %while.body.i
  %end.i = getelementptr i8, ptr %2, i32 -8
  %5 = ptrtoint ptr %end.i to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %end.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %6, i64 %start.addr.0)
  %cmp2.i = icmp ult i64 %6, %start.addr.0
  br i1 %cmp2.i, label %if.then3.i, label %if.else.i.if.end12_crit_edge

if.else.i.if.end12_crit_edge:                     ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12

if.then3.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_right.i = getelementptr inbounds %struct.rb_node, ptr %2, i32 0, i32 1
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then3.i, %if.then.i
  %n.1.i = phi ptr [ %rb_left.i, %if.then.i ], [ %rb_right.i, %if.then3.i ]
  %7 = ptrtoint ptr %n.1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %n.1.i, align 4
  %tobool.not.i = icmp eq ptr %8, null
  br i1 %tobool.not.i, label %if.end5.i.land.rhs.i_crit_edge, label %if.end5.i.while.body.i_crit_edge

if.end5.i.while.body.i_crit_edge:                 ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i

if.end5.i.land.rhs.i_crit_edge:                   ; preds = %if.end5.i
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %while.body18.i.land.rhs.i_crit_edge, %if.end5.i.land.rhs.i_crit_edge
  %prev.183.i = phi ptr [ %call.i, %while.body18.i.land.rhs.i_crit_edge ], [ %2, %if.end5.i.land.rhs.i_crit_edge ]
  %end16.i = getelementptr i8, ptr %prev.183.i, i32 -8
  %9 = ptrtoint ptr %end16.i to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %end16.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %10, i64 %start.addr.0)
  %cmp17.i = icmp ult i64 %10, %start.addr.0
  br i1 %cmp17.i, label %while.body18.i, label %land.rhs.i.while.end22.i_crit_edge

land.rhs.i.while.end22.i_crit_edge:               ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end22.i

while.body18.i:                                   ; preds = %land.rhs.i
  %call.i = tail call ptr @rb_next(ptr noundef nonnull %prev.183.i) #14
  %tobool15.not.i = icmp eq ptr %call.i, null
  br i1 %tobool15.not.i, label %while.body18.i.while.end22.i_crit_edge, label %while.body18.i.land.rhs.i_crit_edge

while.body18.i.land.rhs.i_crit_edge:              ; preds = %while.body18.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.i

while.body18.i.while.end22.i_crit_edge:           ; preds = %while.body18.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end22.i

while.end22.i:                                    ; preds = %while.body18.i.while.end22.i_crit_edge, %land.rhs.i.while.end22.i_crit_edge
  %prev.1.lcssa.i = phi ptr [ null, %while.body18.i.while.end22.i_crit_edge ], [ %prev.183.i, %land.rhs.i.while.end22.i_crit_edge ]
  br label %land.rhs31.i

land.rhs31.i:                                     ; preds = %while.body35.i.land.rhs31.i_crit_edge, %while.end22.i
  %prev.386.i = phi ptr [ %call36.i, %while.body35.i.land.rhs31.i_crit_edge ], [ %2, %while.end22.i ]
  %prev_entry.2.i = getelementptr i8, ptr %prev.386.i, i32 -16
  %11 = ptrtoint ptr %prev_entry.2.i to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %prev_entry.2.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %12, i64 %start.addr.0)
  %cmp33.i = icmp ugt i64 %12, %start.addr.0
  br i1 %cmp33.i, label %while.body35.i, label %land.lhs.true

while.body35.i:                                   ; preds = %land.rhs31.i
  %call36.i = tail call ptr @rb_prev(ptr noundef nonnull %prev.386.i) #14
  %tobool30.not.i = icmp eq ptr %call36.i, null
  br i1 %tobool30.not.i, label %land.lhs.true.thread, label %while.body35.i.land.rhs31.i_crit_edge

while.body35.i.land.rhs31.i_crit_edge:            ; preds = %while.body35.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs31.i

land.lhs.true:                                    ; preds = %land.rhs31.i
  %tobool1.not = icmp eq ptr %prev.1.lcssa.i, null
  br i1 %tobool1.not, label %land.lhs.true2, label %land.lhs.true.if.end12_crit_edge

land.lhs.true.if.end12_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12

land.lhs.true.thread:                             ; preds = %while.body35.i
  %tobool1.not162 = icmp eq ptr %prev.1.lcssa.i, null
  br i1 %tobool1.not162, label %land.lhs.true.thread.if.then_crit_edge, label %land.lhs.true.thread.if.end12_crit_edge

land.lhs.true.thread.if.end12_crit_edge:          ; preds = %land.lhs.true.thread
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12

land.lhs.true.thread.if.then_crit_edge:           ; preds = %land.lhs.true.thread
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

land.lhs.true2:                                   ; preds = %land.lhs.true
  %tobool3.not = icmp eq ptr %prev.386.i, null
  br i1 %tobool3.not, label %land.lhs.true2.if.then_crit_edge, label %if.then7

land.lhs.true2.if.then_crit_edge:                 ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

if.then:                                          ; preds = %land.lhs.true2.if.then_crit_edge, %land.lhs.true.thread.if.then_crit_edge, %while.cond.if.then_crit_edge
  %13 = ptrtoint ptr %start_ret to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 0, ptr %start_ret, align 8
  br label %out.sink.split

if.then7:                                         ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #16
  %end = getelementptr i8, ptr %prev.386.i, i32 -8
  %14 = ptrtoint ptr %end to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %end, align 8
  %add = add i64 %15, 1
  %16 = ptrtoint ptr %start_ret to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %add, ptr %start_ret, align 8
  br label %out.sink.split

if.end12:                                         ; preds = %land.lhs.true.thread.if.end12_crit_edge, %land.lhs.true.if.end12_crit_edge, %if.else.i.if.end12_crit_edge
  %prev.1120 = phi ptr [ %prev.386.i, %land.lhs.true.if.end12_crit_edge ], [ null, %land.lhs.true.thread.if.end12_crit_edge ], [ %prev.0, %if.else.i.if.end12_crit_edge ]
  %node.0 = phi ptr [ %prev.1.lcssa.i, %land.lhs.true.if.end12_crit_edge ], [ %prev.1.lcssa.i, %land.lhs.true.thread.if.end12_crit_edge ], [ %2, %if.else.i.if.end12_crit_edge ]
  %add.ptr15 = getelementptr i8, ptr %node.0, i32 -16
  %17 = ptrtoint ptr %add.ptr15 to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %add.ptr15, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %start.addr.0, i64 %18)
  %cmp.not = icmp ult i64 %start.addr.0, %18
  br i1 %cmp.not, label %if.end12.if.else33_crit_edge, label %land.lhs.true17

if.end12.if.else33_crit_edge:                     ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else33

land.lhs.true17:                                  ; preds = %if.end12
  %end19 = getelementptr i8, ptr %node.0, i32 -8
  %19 = ptrtoint ptr %end19 to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %end19, align 8
  %add22 = add i64 %20, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %start.addr.0, i64 %add22)
  %cmp23 = icmp ult i64 %start.addr.0, %add22
  br i1 %cmp23, label %if.then24, label %land.lhs.true17.if.else33_crit_edge

land.lhs.true17.if.else33_crit_edge:              ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else33

if.then24:                                        ; preds = %land.lhs.true17
  %state25 = getelementptr i8, ptr %node.0, i32 68
  %21 = ptrtoint ptr %state25 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %state25, align 4
  %and = and i32 %22, %bits
  %tobool26.not = icmp eq i32 %and, 0
  br i1 %tobool26.not, label %if.then24.while.end_crit_edge, label %if.then24.while.cond_crit_edge

if.then24.while.cond_crit_edge:                   ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond

if.then24.while.end_crit_edge:                    ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.else33:                                        ; preds = %land.lhs.true17.if.else33_crit_edge, %if.end12.if.else33_crit_edge
  %tobool34.not = icmp eq ptr %prev.1120, null
  br i1 %tobool34.not, label %if.else33.while.end_crit_edge, label %if.then35

if.else33.while.end_crit_edge:                    ; preds = %if.else33
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.then35:                                        ; preds = %if.else33
  call void @__sanitizer_cov_trace_pc() #16
  %end39 = getelementptr i8, ptr %prev.1120, i32 -8
  %23 = ptrtoint ptr %end39 to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %end39, align 8
  %add40 = add i64 %24, 1
  br label %while.end

while.end:                                        ; preds = %if.then35, %if.else33.while.end_crit_edge, %if.then24.while.end_crit_edge
  %add40.sink = phi i64 [ %add40, %if.then35 ], [ 0, %if.else33.while.end_crit_edge ], [ %18, %if.then24.while.end_crit_edge ]
  %25 = ptrtoint ptr %start_ret to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %add40.sink, ptr %start_ret, align 8
  br label %while.cond44

while.cond44:                                     ; preds = %if.then55.while.cond44_crit_edge, %while.end
  %node.1 = phi ptr [ %node.0, %while.end ], [ %call61, %if.then55.while.cond44_crit_edge ]
  %end49 = getelementptr i8, ptr %node.1, i32 -8
  %26 = ptrtoint ptr %end49 to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %end49, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %27, i64 %start.addr.0)
  %cmp50.not = icmp ult i64 %27, %start.addr.0
  br i1 %cmp50.not, label %while.cond44.if.else57_crit_edge, label %land.lhs.true51

while.cond44.if.else57_crit_edge:                 ; preds = %while.cond44
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else57

land.lhs.true51:                                  ; preds = %while.cond44
  %state52 = getelementptr i8, ptr %node.1, i32 68
  %28 = ptrtoint ptr %state52 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %state52, align 4
  %and53 = and i32 %29, %bits
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and53)
  %tobool54.not = icmp eq i32 %and53, 0
  br i1 %tobool54.not, label %if.then55, label %land.lhs.true51.if.else57_crit_edge

land.lhs.true51.if.else57_crit_edge:              ; preds = %land.lhs.true51
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else57

if.then55:                                        ; preds = %land.lhs.true51
  %30 = ptrtoint ptr %end_ret to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %27, ptr %end_ret, align 8
  %call61 = tail call ptr @rb_next(ptr noundef nonnull %node.1) #14
  %tobool62.not = icmp eq ptr %call61, null
  br i1 %tobool62.not, label %if.then55.out_crit_edge, label %if.then55.while.cond44_crit_edge

if.then55.while.cond44_crit_edge:                 ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond44

if.then55.out_crit_edge:                          ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.else57:                                        ; preds = %land.lhs.true51.if.else57_crit_edge, %while.cond44.if.else57_crit_edge
  %add.ptr48.le = getelementptr i8, ptr %node.1, i32 -16
  %31 = ptrtoint ptr %add.ptr48.le to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %add.ptr48.le, align 8
  %sub59 = add i64 %32, -1
  br label %out.sink.split

out.sink.split:                                   ; preds = %if.else57, %if.then7, %if.then
  %sub59.sink = phi i64 [ %sub59, %if.else57 ], [ -1, %if.then7 ], [ -1, %if.then ]
  %33 = ptrtoint ptr %end_ret to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %sub59.sink, ptr %end_ret, align 8
  br label %out

out:                                              ; preds = %out.sink.split, %if.then55.out_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %lock) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rb_next(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @btrfs_find_delalloc_range(ptr noundef %tree, ptr nocapture noundef %start, ptr nocapture noundef writeonly %end, i64 noundef %max_bytes, ptr nocapture noundef writeonly %cached_state) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %start, align 8
  %lock = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %lock) #14
  %2 = ptrtoint ptr %tree to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tree, align 4
  %tobool.not78.i.i.i = icmp eq ptr %3, null
  br i1 %tobool.not78.i.i.i, label %entry.out.sink.split_crit_edge, label %entry.while.body.i.i.i_crit_edge

entry.while.body.i.i.i_crit_edge:                 ; preds = %entry
  br label %while.body.i.i.i

entry.out.sink.split_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.sink.split

while.body.i.i.i:                                 ; preds = %if.end5.i.i.i.while.body.i.i.i_crit_edge, %entry.while.body.i.i.i_crit_edge
  %4 = phi ptr [ %10, %if.end5.i.i.i.while.body.i.i.i_crit_edge ], [ %3, %entry.while.body.i.i.i_crit_edge ]
  %add.ptr.i.i.i = getelementptr i8, ptr %4, i32 -16
  %5 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %add.ptr.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %6, i64 %1)
  %cmp.i.i.i = icmp ugt i64 %6, %1
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_left.i.i.i = getelementptr inbounds %struct.rb_node, ptr %4, i32 0, i32 2
  br label %if.end5.i.i.i

if.else.i.i.i:                                    ; preds = %while.body.i.i.i
  %end.i.i.i = getelementptr i8, ptr %4, i32 -8
  %7 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %end.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %8, i64 %1)
  %cmp2.i.i.i = icmp ult i64 %8, %1
  br i1 %cmp2.i.i.i, label %if.then3.i.i.i, label %if.else.i.i.i.while.cond.preheader_crit_edge

if.else.i.i.i.while.cond.preheader_crit_edge:     ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond.preheader

if.then3.i.i.i:                                   ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_right.i.i.i = getelementptr inbounds %struct.rb_node, ptr %4, i32 0, i32 1
  br label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %if.then3.i.i.i, %if.then.i.i.i
  %n.1.i.i.i = phi ptr [ %rb_left.i.i.i, %if.then.i.i.i ], [ %rb_right.i.i.i, %if.then3.i.i.i ]
  %9 = ptrtoint ptr %n.1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %n.1.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %10, null
  br i1 %tobool.not.i.i.i, label %if.end5.i.i.i.land.rhs.i.i.i_crit_edge, label %if.end5.i.i.i.while.body.i.i.i_crit_edge

if.end5.i.i.i.while.body.i.i.i_crit_edge:         ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.i

if.end5.i.i.i.land.rhs.i.i.i_crit_edge:           ; preds = %if.end5.i.i.i
  br label %land.rhs.i.i.i

land.rhs.i.i.i:                                   ; preds = %while.body18.i.i.i.land.rhs.i.i.i_crit_edge, %if.end5.i.i.i.land.rhs.i.i.i_crit_edge
  %prev.183.i.i.i = phi ptr [ %call.i.i.i, %while.body18.i.i.i.land.rhs.i.i.i_crit_edge ], [ %4, %if.end5.i.i.i.land.rhs.i.i.i_crit_edge ]
  %end16.i.i.i = getelementptr i8, ptr %prev.183.i.i.i, i32 -8
  %11 = ptrtoint ptr %end16.i.i.i to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %end16.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %12, i64 %1)
  %cmp17.i.i.i = icmp ult i64 %12, %1
  br i1 %cmp17.i.i.i, label %while.body18.i.i.i, label %land.rhs.i.i.i.while.cond.preheader_crit_edge

land.rhs.i.i.i.while.cond.preheader_crit_edge:    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond.preheader

while.cond.preheader:                             ; preds = %land.rhs.i.i.i.while.cond.preheader_crit_edge, %if.else.i.i.i.while.cond.preheader_crit_edge
  %node.0.ph = phi ptr [ %prev.183.i.i.i, %land.rhs.i.i.i.while.cond.preheader_crit_edge ], [ %4, %if.else.i.i.i.while.cond.preheader_crit_edge ]
  br label %while.cond

while.body18.i.i.i:                               ; preds = %land.rhs.i.i.i
  %call.i.i.i = tail call ptr @rb_next(ptr noundef nonnull %prev.183.i.i.i) #14
  %tobool15.not.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool15.not.i.i.i, label %while.body18.i.i.i.out.sink.split_crit_edge, label %while.body18.i.i.i.land.rhs.i.i.i_crit_edge

while.body18.i.i.i.land.rhs.i.i.i_crit_edge:      ; preds = %while.body18.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.i.i.i

while.body18.i.i.i.out.sink.split_crit_edge:      ; preds = %while.body18.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out.sink.split

while.cond:                                       ; preds = %if.end19.while.cond_crit_edge, %while.cond.preheader
  %cur_start.0 = phi i64 [ %add, %if.end19.while.cond_crit_edge ], [ %1, %while.cond.preheader ]
  %found.0 = phi i1 [ true, %if.end19.while.cond_crit_edge ], [ false, %while.cond.preheader ]
  %total_bytes.0 = phi i64 [ %add26, %if.end19.while.cond_crit_edge ], [ 0, %while.cond.preheader ]
  %node.0 = phi ptr [ %call22, %if.end19.while.cond_crit_edge ], [ %node.0.ph, %while.cond.preheader ]
  %add.ptr = getelementptr i8, ptr %node.0, i32 -16
  br i1 %found.0, label %land.lhs.true, label %if.end6.thread

land.lhs.true:                                    ; preds = %while.cond
  %13 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %add.ptr, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %14, i64 %cur_start.0)
  %cmp.not = icmp eq i64 %14, %cur_start.0
  br i1 %cmp.not, label %lor.lhs.false, label %land.lhs.true.out_crit_edge

land.lhs.true.out_crit_edge:                      ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

lor.lhs.false:                                    ; preds = %land.lhs.true
  %state3 = getelementptr i8, ptr %node.0, i32 68
  %15 = ptrtoint ptr %state3 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %state3, align 4
  %and = and i32 %16, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool4.not = icmp eq i32 %and, 0
  br i1 %tobool4.not, label %if.end6, label %lor.lhs.false.out_crit_edge

lor.lhs.false.out_crit_edge:                      ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end6:                                          ; preds = %lor.lhs.false
  %17 = ptrtoint ptr %state3 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %state3, align 4
  %and8 = and i32 %18, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  br i1 %tobool9.not, label %if.end6.out_crit_edge, label %if.end6.if.end19_crit_edge

if.end6.if.end19_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19

if.end6.out_crit_edge:                            ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end6.thread:                                   ; preds = %while.cond
  %state764 = getelementptr i8, ptr %node.0, i32 68
  %19 = ptrtoint ptr %state764 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %state764, align 4
  %and865 = and i32 %20, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and865)
  %tobool9.not66 = icmp eq i32 %and865, 0
  br i1 %tobool9.not66, label %if.then12, label %if.then17

if.then12:                                        ; preds = %if.end6.thread
  call void @__sanitizer_cov_trace_pc() #16
  %end13 = getelementptr i8, ptr %node.0, i32 -8
  %21 = ptrtoint ptr %end13 to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %end13, align 8
  br label %out.sink.split

if.then17:                                        ; preds = %if.end6.thread
  %23 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %add.ptr, align 8
  %25 = ptrtoint ptr %start to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %24, ptr %start, align 8
  %26 = ptrtoint ptr %cached_state to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %add.ptr, ptr %cached_state, align 4
  %refs = getelementptr i8, ptr %node.0, i32 64
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refs, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %refs, i32 1, i32 3, i32 1) #14
  %27 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs, ptr %refs, i32 1, ptr elementtype(i32) %refs) #14, !srcloc !338
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %27, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %tobool1.not.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i, label %if.then17.if.end15.sink.split.i.i.i_crit_edge, label %if.else.i.i.i61, !prof !319

if.then17.if.end15.sink.split.i.i.i_crit_edge:    ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i61:                                  ; preds = %if.then17
  %add.i.i.i = add i32 %asmresult.i.i.i.i.i, 1
  %28 = or i32 %add.i.i.i, %asmresult.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %28)
  %.not.i.i.i = icmp sgt i32 %28, -1
  br i1 %.not.i.i.i, label %if.else.i.i.i61.if.end19_crit_edge, label %if.else.i.i.i61.if.end15.sink.split.i.i.i_crit_edge, !prof !322

if.else.i.i.i61.if.end15.sink.split.i.i.i_crit_edge: ; preds = %if.else.i.i.i61
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i61.if.end19_crit_edge:               ; preds = %if.else.i.i.i61
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19

if.end15.sink.split.i.i.i:                        ; preds = %if.else.i.i.i61.if.end15.sink.split.i.i.i_crit_edge, %if.then17.if.end15.sink.split.i.i.i_crit_edge
  %.sink.i.i.i = phi i32 [ 2, %if.then17.if.end15.sink.split.i.i.i_crit_edge ], [ 1, %if.else.i.i.i61.if.end15.sink.split.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refs, i32 noundef %.sink.i.i.i) #14
  br label %if.end19

if.end19:                                         ; preds = %if.end15.sink.split.i.i.i, %if.else.i.i.i61.if.end19_crit_edge, %if.end6.if.end19_crit_edge
  %end20 = getelementptr i8, ptr %node.0, i32 -8
  %29 = ptrtoint ptr %end20 to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %end20, align 8
  %31 = ptrtoint ptr %end to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %30, ptr %end, align 8
  %32 = load i64, ptr %end20, align 8
  %call22 = tail call ptr @rb_next(ptr noundef nonnull %node.0) #14
  %33 = ptrtoint ptr %end20 to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %end20, align 8
  %35 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %add.ptr, align 8
  %sub = add nuw i64 %total_bytes.0, 1
  %add25 = add i64 %sub, %34
  %add26 = sub i64 %add25, %36
  call void @__sanitizer_cov_trace_cmp8(i64 %add26, i64 %max_bytes)
  %cmp27.not = icmp uge i64 %add26, %max_bytes
  %add = add i64 %32, 1
  %tobool30.not = icmp eq ptr %call22, null
  %or.cond = select i1 %cmp27.not, i1 true, i1 %tobool30.not
  br i1 %or.cond, label %if.end19.out_crit_edge, label %if.end19.while.cond_crit_edge

if.end19.while.cond_crit_edge:                    ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond

if.end19.out_crit_edge:                           ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

out.sink.split:                                   ; preds = %if.then12, %while.body18.i.i.i.out.sink.split_crit_edge, %entry.out.sink.split_crit_edge
  %.sink = phi i64 [ %22, %if.then12 ], [ -1, %entry.out.sink.split_crit_edge ], [ -1, %while.body18.i.i.i.out.sink.split_crit_edge ]
  %37 = ptrtoint ptr %end to i32
  call void @__asan_store8_noabort(i32 %37)
  store i64 %.sink, ptr %end, align 8
  br label %out

out:                                              ; preds = %out.sink.split, %if.end19.out_crit_edge, %if.end6.out_crit_edge, %lor.lhs.false.out_crit_edge, %land.lhs.true.out_crit_edge
  %found.1.off0 = phi i1 [ false, %out.sink.split ], [ true, %lor.lhs.false.out_crit_edge ], [ true, %land.lhs.true.out_crit_edge ], [ true, %if.end19.out_crit_edge ], [ true, %if.end6.out_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %lock) #14
  ret i1 %found.1.off0
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @find_lock_delalloc_range(ptr noundef %inode, ptr noundef %locked_page, ptr nocapture noundef %start, ptr nocapture noundef %end) local_unnamed_addr #8 align 64 {
entry:
  %delalloc_start = alloca i64, align 8
  %delalloc_end = alloca i64, align 8
  %cached_state = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %io_tree = getelementptr i8, ptr %inode, i32 -736
  %0 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %start, align 8
  %2 = ptrtoint ptr %end to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %end, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %delalloc_start) #14
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %delalloc_end) #14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cached_state) #14
  %4 = ptrtoint ptr %cached_state to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %cached_state, align 4
  call void @__sanitizer_cov_trace_cmp8(i64 %3, i64 %1)
  %cmp = icmp ugt i64 %3, %1
  br i1 %cmp, label %cond.end, label %cond.false, !prof !322

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.11, i32 noundef 2007) #18
  unreachable

cond.end:                                         ; preds = %entry
  %index.i = getelementptr inbounds %struct.page, ptr %locked_page, i32 0, i32 1, i32 0, i32 2
  %5 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %index.i, align 4
  %conv.i = zext i32 %6 to i64
  %shl.i = shl nuw nsw i64 %conv.i, 12
  %add = add nuw nsw i64 %shl.i, 4096
  call void @__sanitizer_cov_trace_cmp8(i64 %1, i64 %add)
  %cmp3.not = icmp ult i64 %1, %add
  call void @__sanitizer_cov_trace_cmp8(i64 %3, i64 %shl.i)
  %cmp5 = icmp ugt i64 %3, %shl.i
  %or.cond = select i1 %cmp3.not, i1 %cmp5, i1 false
  br i1 %or.cond, label %cond.end.again.outer_crit_edge, label %cond.false15, !prof !356

cond.end.again.outer_crit_edge:                   ; preds = %cond.end
  br label %again.outer

cond.false15:                                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.12, i32 noundef 2011) #18
  unreachable

lor.lhs.false:                                    ; preds = %if.then57.lor.lhs.false_crit_edge, %lor.lhs.false.lr.ph
  %7 = ptrtoint ptr %delalloc_end to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %delalloc_end, align 8
  %9 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %start, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %8, i64 %10)
  %cmp19.not = icmp ugt i64 %8, %10
  br i1 %cmp19.not, label %lor.lhs.false20, label %lor.lhs.false.if.then_crit_edge

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

lor.lhs.false20:                                  ; preds = %lor.lhs.false
  %11 = ptrtoint ptr %delalloc_start to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %delalloc_start, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %12, i64 %3)
  %cmp21 = icmp ugt i64 %12, %3
  br i1 %cmp21, label %lor.lhs.false20.if.then_crit_edge, label %if.end

lor.lhs.false20.if.then_crit_edge:                ; preds = %lor.lhs.false20
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

if.then:                                          ; preds = %if.then57.if.then_crit_edge, %again.outer.if.then_crit_edge, %lor.lhs.false20.if.then_crit_edge, %lor.lhs.false.if.then_crit_edge
  %13 = ptrtoint ptr %delalloc_start to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %delalloc_start, align 8
  %15 = ptrtoint ptr %start to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %14, ptr %start, align 8
  %16 = ptrtoint ptr %delalloc_end to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %delalloc_end, align 8
  %18 = call i64 @llvm.umin.i64(i64 %17, i64 %3)
  %19 = ptrtoint ptr %end to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %18, ptr %end, align 8
  %20 = ptrtoint ptr %cached_state to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %cached_state, align 4
  call void @free_extent_state(ptr noundef %21)
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false20
  call void @__sanitizer_cov_trace_cmp8(i64 %12, i64 %10)
  %cmp26 = icmp ult i64 %12, %10
  br i1 %cmp26, label %if.then27, label %if.end.if.end28_crit_edge

if.end.if.end28_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end28

if.then27:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %22 = ptrtoint ptr %delalloc_start to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %10, ptr %delalloc_start, align 8
  br label %if.end28

if.end28:                                         ; preds = %if.then27, %if.end.if.end28_crit_edge
  %add29 = add i64 %8, 1
  %23 = ptrtoint ptr %delalloc_start to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %delalloc_start, align 8
  %sub = sub i64 %add29, %24
  call void @__sanitizer_cov_trace_cmp8(i64 %sub, i64 %max_bytes.0.ph)
  %cmp30 = icmp ugt i64 %sub, %max_bytes.0.ph
  br i1 %cmp30, label %if.then31, label %if.end28.if.end34_crit_edge

if.end28.if.end34_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end34

if.then31:                                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  %sub33 = add i64 %add32, %24
  %25 = ptrtoint ptr %delalloc_end to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %sub33, ptr %delalloc_end, align 8
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.end28.if.end34_crit_edge
  %26 = ptrtoint ptr %delalloc_end to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %delalloc_end, align 8
  %call35 = call fastcc i32 @lock_delalloc_pages(ptr noundef %inode, ptr noundef %locked_page, i64 noundef %24, i64 noundef %27)
  %28 = zext i32 %call35 to i64
  call void @__sanitizer_cov_trace_switch(i64 %28, ptr @__sancov_gen_cov_switch_values)
  switch i32 %call35, label %cond.false47 [
    i32 -11, label %if.then50
    i32 0, label %if.end53
  ]

cond.false47:                                     ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.13, i32 noundef 2044) #18
  unreachable

if.then50:                                        ; preds = %if.end34
  %29 = ptrtoint ptr %cached_state to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %cached_state, align 4
  call void @free_extent_state(ptr noundef %30)
  %31 = ptrtoint ptr %cached_state to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr null, ptr %cached_state, align 4
  br i1 %tobool51.not, label %if.then50.again.outer_crit_edge, label %if.then50.cleanup_crit_edge

if.then50.cleanup_crit_edge:                      ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then50.again.outer_crit_edge:                  ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #16
  br label %again.outer

again.outer:                                      ; preds = %if.then50.again.outer_crit_edge, %cond.end.again.outer_crit_edge
  %max_bytes.0.ph = phi i64 [ 4096, %if.then50.again.outer_crit_edge ], [ 134217728, %cond.end.again.outer_crit_edge ]
  %tobool51.not = phi i1 [ false, %if.then50.again.outer_crit_edge ], [ true, %cond.end.again.outer_crit_edge ]
  %32 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %start, align 8
  %34 = ptrtoint ptr %delalloc_start to i32
  call void @__asan_store8_noabort(i32 %34)
  store i64 %33, ptr %delalloc_start, align 8
  %35 = ptrtoint ptr %delalloc_end to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 0, ptr %delalloc_end, align 8
  %call17113 = call zeroext i1 @btrfs_find_delalloc_range(ptr noundef %io_tree, ptr noundef nonnull %delalloc_start, ptr noundef nonnull %delalloc_end, i64 noundef %max_bytes.0.ph, ptr noundef nonnull %cached_state)
  br i1 %call17113, label %lor.lhs.false.lr.ph, label %again.outer.if.then_crit_edge

again.outer.if.then_crit_edge:                    ; preds = %again.outer
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

lor.lhs.false.lr.ph:                              ; preds = %again.outer
  %add32 = add nsw i64 %max_bytes.0.ph, -1
  br label %lor.lhs.false

if.end53:                                         ; preds = %if.end34
  %call54 = call i32 @lock_extent_bits(ptr noundef %io_tree, i64 noundef %24, i64 noundef %27, ptr noundef nonnull %cached_state)
  %36 = ptrtoint ptr %cached_state to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %cached_state, align 4
  %call55 = call i32 @test_range_bit(ptr noundef %io_tree, i64 noundef %24, i64 noundef %27, i32 noundef 16, i32 noundef 1, ptr noundef %37)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call55)
  %tobool56.not = icmp eq i32 %call55, 0
  br i1 %tobool56.not, label %if.then57, label %if.end61

if.then57:                                        ; preds = %if.end53
  %call.i = call i32 @__clear_extent_bit(ptr noundef %io_tree, i64 noundef %24, i64 noundef %27, i32 noundef 4, i32 noundef 1, i32 noundef 0, ptr noundef nonnull %cached_state, i32 noundef 3136, ptr noundef null) #14
  call fastcc void @__unlock_for_delalloc(ptr noundef %inode, ptr noundef %locked_page, i64 noundef %24, i64 noundef %27)
  call void @__might_resched(ptr noundef nonnull @.str.2, i32 noundef 2072, i32 noundef 0) #14
  %call.i107 = call i32 @__cond_resched() #14
  %38 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %start, align 8
  %40 = ptrtoint ptr %delalloc_start to i32
  call void @__asan_store8_noabort(i32 %40)
  store i64 %39, ptr %delalloc_start, align 8
  %41 = ptrtoint ptr %delalloc_end to i32
  call void @__asan_store8_noabort(i32 %41)
  store i64 0, ptr %delalloc_end, align 8
  %call17 = call zeroext i1 @btrfs_find_delalloc_range(ptr noundef %io_tree, ptr noundef nonnull %delalloc_start, ptr noundef nonnull %delalloc_end, i64 noundef %max_bytes.0.ph, ptr noundef nonnull %cached_state)
  br i1 %call17, label %if.then57.lor.lhs.false_crit_edge, label %if.then57.if.then_crit_edge

if.then57.if.then_crit_edge:                      ; preds = %if.then57
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

if.then57.lor.lhs.false_crit_edge:                ; preds = %if.then57
  call void @__sanitizer_cov_trace_pc() #16
  br label %lor.lhs.false

if.end61:                                         ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #16
  %42 = ptrtoint ptr %cached_state to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %cached_state, align 4
  call void @free_extent_state(ptr noundef %43)
  %44 = ptrtoint ptr %start to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %24, ptr %start, align 8
  %45 = ptrtoint ptr %end to i32
  call void @__asan_store8_noabort(i32 %45)
  store i64 %27, ptr %end, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end61, %if.then50.cleanup_crit_edge, %if.then
  %retval.0 = phi i1 [ false, %if.then ], [ true, %if.end61 ], [ false, %if.then50.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cached_state) #14
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %delalloc_end) #14
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %delalloc_start) #14
  ret i1 %retval.0
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @lock_delalloc_pages(ptr nocapture noundef readonly %inode, ptr noundef %locked_page, i64 noundef %delalloc_start, i64 noundef %delalloc_end) unnamed_addr #8 align 64 {
entry:
  %processed_end = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %processed_end) #14
  %0 = ptrtoint ptr %processed_end to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 %delalloc_start, ptr %processed_end, align 8
  %tobool.not = icmp eq ptr %locked_page, null
  br i1 %tobool.not, label %cond.false, label %cond.end, !prof !319

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.58, i32 noundef 1963) #18
  unreachable

cond.end:                                         ; preds = %entry
  %shr1 = lshr i64 %delalloc_end, 12
  %conv2 = trunc i64 %shr1 to i32
  %shr = lshr i64 %delalloc_start, 12
  %conv = trunc i64 %shr to i32
  %index5 = getelementptr inbounds %struct.page, ptr %locked_page, i32 0, i32 1, i32 0, i32 2
  %1 = ptrtoint ptr %index5 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %index5, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %conv)
  %cmp = icmp eq i32 %2, %conv
  call void @__sanitizer_cov_trace_cmp4(i32 %conv, i32 %conv2)
  %cmp7 = icmp eq i32 %conv, %conv2
  %or.cond = and i1 %cmp7, %cmp
  br i1 %or.cond, label %cond.end.cleanup_crit_edge, label %if.end

cond.end.cleanup_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %cond.end
  %i_mapping = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  %3 = ptrtoint ptr %i_mapping to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %i_mapping, align 8
  %call = call fastcc i32 @__process_pages_contig(ptr noundef %4, ptr noundef nonnull %locked_page, i64 noundef %delalloc_start, i64 noundef %delalloc_end, i32 noundef 32, ptr noundef nonnull %processed_end)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -11, i32 %call)
  %cmp9 = icmp eq i32 %call, -11
  br i1 %cmp9, label %land.lhs.true11, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true11:                                  ; preds = %if.end
  %5 = ptrtoint ptr %processed_end to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %processed_end, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %6, i64 %delalloc_start)
  %cmp12 = icmp ugt i64 %6, %delalloc_start
  br i1 %cmp12, label %if.then14, label %land.lhs.true11.cleanup_crit_edge

land.lhs.true11.cleanup_crit_edge:                ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then14:                                        ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @__unlock_for_delalloc(ptr noundef %inode, ptr noundef nonnull %locked_page, i64 noundef %delalloc_start, i64 noundef %6)
  br label %cleanup

cleanup:                                          ; preds = %if.then14, %land.lhs.true11.cleanup_crit_edge, %if.end.cleanup_crit_edge, %cond.end.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %cond.end.cleanup_crit_edge ], [ -11, %if.then14 ], [ -11, %land.lhs.true11.cleanup_crit_edge ], [ %call, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %processed_end) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @test_range_bit(ptr noundef %tree, i64 noundef %start, i64 noundef %end, i32 noundef %bits, i32 noundef %filled, ptr noundef %cached) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %lock = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %lock) #14
  %tobool.not = icmp eq ptr %cached, null
  br i1 %tobool.not, label %entry.if.else_crit_edge, label %land.lhs.true

entry.if.else_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

land.lhs.true:                                    ; preds = %entry
  %rb_node.i = getelementptr inbounds %struct.extent_state, ptr %cached, i32 0, i32 2
  %0 = ptrtoint ptr %rb_node.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %rb_node.i, align 8
  %2 = ptrtoint ptr %rb_node.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %2)
  %cmp.i.not = icmp eq i32 %1, %2
  br i1 %cmp.i.not, label %land.lhs.true.if.else_crit_edge, label %land.lhs.true1

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

land.lhs.true1:                                   ; preds = %land.lhs.true
  %3 = ptrtoint ptr %cached to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %cached, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %4, i64 %start)
  %cmp.not = icmp ugt i64 %4, %start
  br i1 %cmp.not, label %land.lhs.true1.if.else_crit_edge, label %land.lhs.true3

land.lhs.true1.if.else_crit_edge:                 ; preds = %land.lhs.true1
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

land.lhs.true3:                                   ; preds = %land.lhs.true1
  %end4 = getelementptr inbounds %struct.extent_state, ptr %cached, i32 0, i32 1
  %5 = ptrtoint ptr %end4 to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %end4, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %6, i64 %start)
  %cmp5 = icmp ugt i64 %6, %start
  br i1 %cmp5, label %land.lhs.true3.if.end_crit_edge, label %land.lhs.true3.if.else_crit_edge

land.lhs.true3.if.else_crit_edge:                 ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

land.lhs.true3.if.end_crit_edge:                  ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.else:                                          ; preds = %land.lhs.true3.if.else_crit_edge, %land.lhs.true1.if.else_crit_edge, %land.lhs.true.if.else_crit_edge, %entry.if.else_crit_edge
  %7 = ptrtoint ptr %tree to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %tree, align 4
  %tobool.not78.i.i.i = icmp eq ptr %8, null
  br i1 %tobool.not78.i.i.i, label %if.else.if.end_crit_edge, label %if.else.while.body.i.i.i_crit_edge

if.else.while.body.i.i.i_crit_edge:               ; preds = %if.else
  br label %while.body.i.i.i

if.else.if.end_crit_edge:                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

while.body.i.i.i:                                 ; preds = %if.end5.i.i.i.while.body.i.i.i_crit_edge, %if.else.while.body.i.i.i_crit_edge
  %9 = phi ptr [ %15, %if.end5.i.i.i.while.body.i.i.i_crit_edge ], [ %8, %if.else.while.body.i.i.i_crit_edge ]
  %add.ptr.i.i.i = getelementptr i8, ptr %9, i32 -16
  %10 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %add.ptr.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %11, i64 %start)
  %cmp.i.i.i = icmp ugt i64 %11, %start
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_left.i.i.i = getelementptr inbounds %struct.rb_node, ptr %9, i32 0, i32 2
  br label %if.end5.i.i.i

if.else.i.i.i:                                    ; preds = %while.body.i.i.i
  %end.i.i.i = getelementptr i8, ptr %9, i32 -8
  %12 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %end.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %13, i64 %start)
  %cmp2.i.i.i = icmp ult i64 %13, %start
  br i1 %cmp2.i.i.i, label %if.then3.i.i.i, label %if.else.i.i.i.if.end_crit_edge

if.else.i.i.i.if.end_crit_edge:                   ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then3.i.i.i:                                   ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_right.i.i.i = getelementptr inbounds %struct.rb_node, ptr %9, i32 0, i32 1
  br label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %if.then3.i.i.i, %if.then.i.i.i
  %n.1.i.i.i = phi ptr [ %rb_left.i.i.i, %if.then.i.i.i ], [ %rb_right.i.i.i, %if.then3.i.i.i ]
  %14 = ptrtoint ptr %n.1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %n.1.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %15, null
  br i1 %tobool.not.i.i.i, label %if.end5.i.i.i.land.rhs.i.i.i_crit_edge, label %if.end5.i.i.i.while.body.i.i.i_crit_edge

if.end5.i.i.i.while.body.i.i.i_crit_edge:         ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.i

if.end5.i.i.i.land.rhs.i.i.i_crit_edge:           ; preds = %if.end5.i.i.i
  br label %land.rhs.i.i.i

land.rhs.i.i.i:                                   ; preds = %while.body18.i.i.i.land.rhs.i.i.i_crit_edge, %if.end5.i.i.i.land.rhs.i.i.i_crit_edge
  %prev.183.i.i.i = phi ptr [ %call.i.i.i, %while.body18.i.i.i.land.rhs.i.i.i_crit_edge ], [ %9, %if.end5.i.i.i.land.rhs.i.i.i_crit_edge ]
  %end16.i.i.i = getelementptr i8, ptr %prev.183.i.i.i, i32 -8
  %16 = ptrtoint ptr %end16.i.i.i to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %end16.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %17, i64 %start)
  %cmp17.i.i.i = icmp ult i64 %17, %start
  br i1 %cmp17.i.i.i, label %while.body18.i.i.i, label %land.rhs.i.i.i.if.end_crit_edge

land.rhs.i.i.i.if.end_crit_edge:                  ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

while.body18.i.i.i:                               ; preds = %land.rhs.i.i.i
  %call.i.i.i = tail call ptr @rb_next(ptr noundef nonnull %prev.183.i.i.i) #14
  %tobool15.not.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool15.not.i.i.i, label %while.body18.i.i.i.if.end_crit_edge, label %while.body18.i.i.i.land.rhs.i.i.i_crit_edge

while.body18.i.i.i.land.rhs.i.i.i_crit_edge:      ; preds = %while.body18.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.i.i.i

while.body18.i.i.i.if.end_crit_edge:              ; preds = %while.body18.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %while.body18.i.i.i.if.end_crit_edge, %land.rhs.i.i.i.if.end_crit_edge, %if.else.i.i.i.if.end_crit_edge, %if.else.if.end_crit_edge, %land.lhs.true3.if.end_crit_edge
  %node.0 = phi ptr [ %rb_node.i, %land.lhs.true3.if.end_crit_edge ], [ null, %if.else.if.end_crit_edge ], [ null, %while.body18.i.i.i.if.end_crit_edge ], [ %prev.183.i.i.i, %land.rhs.i.i.i.if.end_crit_edge ], [ %9, %if.else.i.i.i.if.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %filled)
  %tobool9.not = icmp eq i32 %filled, 0
  br label %while.cond

while.cond:                                       ; preds = %if.end37.while.cond_crit_edge, %if.end
  %node.1 = phi ptr [ %node.0, %if.end ], [ %call38, %if.end37.while.cond_crit_edge ]
  %bitset.0 = phi i32 [ 0, %if.end ], [ %bitset.1, %if.end37.while.cond_crit_edge ]
  %start.addr.0 = phi i64 [ %start, %if.end ], [ %add, %if.end37.while.cond_crit_edge ]
  %tobool7.not = icmp eq ptr %node.1, null
  call void @__sanitizer_cov_trace_cmp8(i64 %start.addr.0, i64 %end)
  %cmp8.not = icmp ugt i64 %start.addr.0, %end
  %or.cond = select i1 %tobool7.not, i1 true, i1 %cmp8.not
  br i1 %or.cond, label %while.cond.while.end_crit_edge, label %while.body

while.cond.while.end_crit_edge:                   ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body:                                       ; preds = %while.cond
  %add.ptr = getelementptr i8, ptr %node.1, i32 -16
  br i1 %tobool9.not, label %while.body.if.end14_crit_edge, label %land.lhs.true10

while.body.if.end14_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14

land.lhs.true10:                                  ; preds = %while.body
  %18 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %add.ptr, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %19, i64 %start.addr.0)
  %cmp12 = icmp ugt i64 %19, %start.addr.0
  br i1 %cmp12, label %land.lhs.true10.while.end_crit_edge, label %land.lhs.true10.if.end14_crit_edge

land.lhs.true10.if.end14_crit_edge:               ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14

land.lhs.true10.while.end_crit_edge:              ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.end14:                                         ; preds = %land.lhs.true10.if.end14_crit_edge, %while.body.if.end14_crit_edge
  %20 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %add.ptr, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %21, i64 %end)
  %cmp16 = icmp ugt i64 %21, %end
  br i1 %cmp16, label %if.end14.while.end_crit_edge, label %if.end18

if.end14.while.end_crit_edge:                     ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.end18:                                         ; preds = %if.end14
  %state19 = getelementptr i8, ptr %node.1, i32 68
  %22 = ptrtoint ptr %state19 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %state19, align 4
  %and = and i32 %23, %bits
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool20.not = icmp eq i32 %and, 0
  br i1 %tobool20.not, label %if.else25, label %if.then21

if.then21:                                        ; preds = %if.end18
  br i1 %tobool9.not, label %if.then21.while.end_crit_edge, label %if.then21.if.end29_crit_edge

if.then21.if.end29_crit_edge:                     ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

if.then21.while.end_crit_edge:                    ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.else25:                                        ; preds = %if.end18
  br i1 %tobool9.not, label %if.else25.if.end29_crit_edge, label %if.else25.while.end_crit_edge

if.else25.while.end_crit_edge:                    ; preds = %if.else25
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.else25.if.end29_crit_edge:                     ; preds = %if.else25
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

if.end29:                                         ; preds = %if.else25.if.end29_crit_edge, %if.then21.if.end29_crit_edge
  %bitset.1 = phi i32 [ 1, %if.then21.if.end29_crit_edge ], [ %bitset.0, %if.else25.if.end29_crit_edge ]
  %end30 = getelementptr i8, ptr %node.1, i32 -8
  %24 = ptrtoint ptr %end30 to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %end30, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %25, i64 %end)
  %cmp35.not = icmp ult i64 %25, %end
  br i1 %cmp35.not, label %if.end37, label %if.end29.while.end_crit_edge

if.end29.while.end_crit_edge:                     ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.end37:                                         ; preds = %if.end29
  %add = add nuw i64 %25, 1
  %call38 = tail call ptr @rb_next(ptr noundef nonnull %node.1) #14
  %tobool39.not = icmp eq ptr %call38, null
  br i1 %tobool39.not, label %if.then40, label %if.end37.while.cond_crit_edge

if.end37.while.cond_crit_edge:                    ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond

if.then40:                                        ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #16
  %spec.select = select i1 %tobool9.not, i32 %bitset.1, i32 0
  br label %while.end

while.end:                                        ; preds = %if.then40, %if.end29.while.end_crit_edge, %if.else25.while.end_crit_edge, %if.then21.while.end_crit_edge, %if.end14.while.end_crit_edge, %land.lhs.true10.while.end_crit_edge, %while.cond.while.end_crit_edge
  %bitset.2 = phi i32 [ %spec.select, %if.then40 ], [ 0, %if.else25.while.end_crit_edge ], [ 0, %land.lhs.true10.while.end_crit_edge ], [ %bitset.0, %while.cond.while.end_crit_edge ], [ 1, %if.then21.while.end_crit_edge ], [ %bitset.1, %if.end29.while.end_crit_edge ], [ %bitset.0, %if.end14.while.end_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %lock) #14
  ret i32 %bitset.2
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__unlock_for_delalloc(ptr nocapture noundef readonly %inode, ptr noundef %locked_page, i64 noundef %start, i64 noundef %end) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %locked_page, null
  br i1 %tobool.not, label %cond.false, label %cond.end, !prof !319

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.58, i32 noundef 1945) #18
  unreachable

cond.end:                                         ; preds = %entry
  %shr1 = lshr i64 %end, 12
  %conv2 = trunc i64 %shr1 to i32
  %shr = lshr i64 %start, 12
  %conv = trunc i64 %shr to i32
  %index5 = getelementptr inbounds %struct.page, ptr %locked_page, i32 0, i32 1, i32 0, i32 2
  %0 = ptrtoint ptr %index5 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %index5, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %conv)
  %cmp = icmp eq i32 %1, %conv
  call void @__sanitizer_cov_trace_cmp4(i32 %conv2, i32 %conv)
  %cmp7 = icmp eq i32 %conv2, %conv
  %or.cond = and i1 %cmp7, %cmp
  br i1 %or.cond, label %cond.end.cleanup_crit_edge, label %if.end

cond.end.cleanup_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  %i_mapping = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  %2 = ptrtoint ptr %i_mapping to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_mapping, align 8
  %call = tail call fastcc i32 @__process_pages_contig(ptr noundef %3, ptr noundef nonnull %locked_page, i64 noundef %start, i64 noundef %end, i32 noundef 1, ptr noundef null)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %cond.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @extent_clear_unlock_delalloc(ptr noundef %inode, i64 noundef %start, i64 noundef %end, ptr noundef %locked_page, i32 noundef %clear_bits, i32 noundef %page_ops) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %io_tree = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 4
  %call.i = tail call i32 @__clear_extent_bit(ptr noundef %io_tree, i64 noundef %start, i64 noundef %end, i32 noundef %clear_bits, i32 noundef 1, i32 noundef 0, ptr noundef null, i32 noundef 3136, ptr noundef null) #14
  %i_mapping = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 37, i32 9
  %0 = ptrtoint ptr %i_mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_mapping, align 8
  %call1 = tail call fastcc i32 @__process_pages_contig(ptr noundef %1, ptr noundef %locked_page, i64 noundef %start, i64 noundef %end, i32 noundef %page_ops, ptr noundef null)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__process_pages_contig(ptr noundef %mapping, ptr noundef readnone %locked_page, i64 noundef %start, i64 noundef %end, i32 noundef %page_ops, ptr noundef %processed_end) unnamed_addr #0 align 64 {
entry:
  %pages = alloca [16 x ptr], align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mapping, align 4
  %i_sb = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 33
  %4 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %s_fs_info.i, align 16
  %shr = lshr i64 %start, 12
  %conv = trunc i64 %shr to i32
  %shr1 = lshr i64 %end, 12
  %conv2 = trunc i64 %shr1 to i32
  %sub = sub i32 %conv2, %conv
  %add = add i32 %sub, 1
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %pages) #14
  %6 = call ptr @memset(ptr %pages, i32 255, i32 64)
  %and = and i32 %page_ops, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %page_ops)
  %cmp = icmp eq i32 %page_ops, 32
  br i1 %cmp, label %cond.end, label %cond.false, !prof !322

cond.false:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.59, i32 noundef 1877) #18
  unreachable

cond.end:                                         ; preds = %if.then
  %tobool6.not = icmp eq ptr %processed_end, null
  br i1 %tobool6.not, label %cond.end.cond.false16_crit_edge, label %land.rhs, !prof !319

cond.end.cond.false16_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.false16

land.rhs:                                         ; preds = %cond.end
  %7 = ptrtoint ptr %processed_end to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %processed_end, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %8, i64 %start)
  %cmp7 = icmp eq i64 %8, %start
  br i1 %cmp7, label %land.rhs.if.end23_crit_edge, label %land.rhs.cond.false16_crit_edge, !prof !322

land.rhs.cond.false16_crit_edge:                  ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.false16

land.rhs.if.end23_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end23

cond.false16:                                     ; preds = %land.rhs.cond.false16_crit_edge, %cond.end.cond.false16_crit_edge
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.60, i32 noundef 1878) #18
  unreachable

if.end:                                           ; preds = %entry
  %and18 = and i32 %page_ops, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18)
  %tobool19.not = icmp eq i32 %and18, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add)
  %cmp20.not = icmp eq i32 %add, 0
  %or.cond = or i1 %tobool19.not, %cmp20.not
  br i1 %or.cond, label %if.end.if.end23_crit_edge, label %if.then22

if.end.if.end23_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end23

if.then22:                                        ; preds = %if.end
  tail call void @__filemap_set_wb_err(ptr noundef %mapping, i32 noundef -5) #14
  %9 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %mapping, align 4
  %tobool4.not.i = icmp eq ptr %10, null
  br i1 %tobool4.not.i, label %if.then22.if.end23.thread_crit_edge, label %if.then5.i

if.then22.if.end23.thread_crit_edge:              ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end23.thread

if.then5.i:                                       ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #16
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %10, i32 0, i32 8
  %11 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %i_sb.i, align 4
  %s_wb_err.i = getelementptr inbounds %struct.super_block, ptr %12, i32 0, i32 50
  %call.i = tail call i32 @errseq_set(ptr noundef %s_wb_err.i, i32 noundef -5) #14
  br label %if.end23.thread

if.end23.thread:                                  ; preds = %if.then5.i, %if.then22.if.end23.thread_crit_edge
  %flags.i = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 10
  tail call void @_set_bit(i32 noundef 0, ptr noundef %flags.i) #14
  br label %while.body.lr.ph

if.end23:                                         ; preds = %if.end.if.end23_crit_edge, %land.rhs.if.end23_crit_edge
  %tobool19.not167 = phi i1 [ %tobool19.not, %if.end.if.end23_crit_edge ], [ true, %land.rhs.if.end23_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add)
  %cmp24.not226 = icmp eq i32 %add, 0
  br i1 %cmp24.not226, label %if.end23.cleanup89_crit_edge, label %if.end23.while.body.lr.ph_crit_edge

if.end23.while.body.lr.ph_crit_edge:              ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.lr.ph

if.end23.cleanup89_crit_edge:                     ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup89

while.body.lr.ph:                                 ; preds = %if.end23.while.body.lr.ph_crit_edge, %if.end23.thread
  %tobool19.not167252 = phi i1 [ false, %if.end23.thread ], [ %tobool19.not167, %if.end23.while.body.lr.ph_crit_edge ]
  %add.i = add i64 %end, 1
  %sub.i = sub i64 %add.i, %start
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i, i64 %start)
  %cmp.not.i = icmp ne i64 %add.i, %start
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967295, i64 %sub.i)
  %cmp3.i = icmp ult i64 %sub.i, 4294967295
  %spec.select.i = and i1 %cmp.not.i, %cmp3.i
  %conv.i = trunc i64 %sub.i to i32
  %and.i = and i32 %page_ops, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool7.not.i = icmp eq i32 %and.i, 0
  %and12.i = and i32 %page_ops, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12.i)
  %tobool13.not.i = icmp eq i32 %and12.i, 0
  %and16.i = and i32 %page_ops, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and16.i)
  %tobool17.not.i = icmp eq i32 %and16.i, 0
  %and38.i = and i32 %page_ops, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and38.i)
  %tobool39.not.i = icmp eq i32 %and38.i, 0
  %tobool39.not.i.not = xor i1 %tobool39.not.i, true
  br label %while.body

while.body:                                       ; preds = %cleanup68.while.body_crit_edge, %while.body.lr.ph
  %index.0230 = phi i32 [ %conv, %while.body.lr.ph ], [ %add65, %cleanup68.while.body_crit_edge ]
  %pages_processed.0228 = phi i32 [ 0, %while.body.lr.ph ], [ %pages_processed.1.lcssa, %cleanup68.while.body_crit_edge ]
  %nr_pages.0227 = phi i32 [ %add, %while.body.lr.ph ], [ %sub64, %cleanup68.while.body_crit_edge ]
  %13 = call i32 @llvm.umin.i32(i32 %nr_pages.0227, i32 16)
  %call31 = call i32 @find_get_pages_contig(ptr noundef %mapping, i32 noundef %index.0230, i32 noundef %13, ptr noundef nonnull %pages) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %cmp32 = icmp eq i32 %call31, 0
  br i1 %cmp32, label %if.then34, label %for.cond.preheader

for.cond.preheader:                               ; preds = %while.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %cmp47218 = icmp sgt i32 %call31, 0
  br i1 %cmp47218, label %for.body.lr.ph, label %for.cond.preheader.cleanup68_crit_edge

for.cond.preheader.cleanup68_crit_edge:           ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup68

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  br i1 %spec.select.i, label %for.body.lr.ph.for.body_crit_edge, label %cond.false.i, !prof !322

for.body.lr.ph.for.body_crit_edge:                ; preds = %for.body.lr.ph
  br label %for.body

if.then34:                                        ; preds = %while.body
  br i1 %tobool.not, label %cond.false44, label %if.then34.out_crit_edge, !prof !319

if.then34.out_crit_edge:                          ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

cond.false44:                                     ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.61, i32 noundef 1895) #18
  unreachable

for.body:                                         ; preds = %for.inc61.for.body_crit_edge, %for.body.lr.ph.for.body_crit_edge
  %i.0222 = phi i32 [ %inc62, %for.inc61.for.body_crit_edge ], [ 0, %for.body.lr.ph.for.body_crit_edge ]
  %pages_processed.1219 = phi i32 [ %inc60, %for.inc61.for.body_crit_edge ], [ %pages_processed.0228, %for.body.lr.ph.for.body_crit_edge ]
  %arrayidx = getelementptr [16 x ptr], ptr %pages, i32 0, i32 %i.0222
  %14 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx, align 4
  br i1 %tobool7.not.i, label %for.body.if.end.i_crit_edge, label %if.then.i

for.body.if.end.i_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

cond.false.i:                                     ; preds = %for.body.lr.ph
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.62, i32 noundef 1828) #19
  unreachable

if.then.i:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  call void @btrfs_page_clamp_set_ordered(ptr noundef %5, ptr noundef %15, i64 noundef %start, i32 noundef %conv.i) #14
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %for.body.if.end.i_crit_edge
  br i1 %tobool19.not167252, label %if.end.i.if.end11.i_crit_edge, label %if.then10.i

if.end.i.if.end11.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end11.i

if.then10.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @btrfs_page_clamp_set_error(ptr noundef %5, ptr noundef %15, i64 noundef %start, i32 noundef %conv.i) #14
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then10.i, %if.end.i.if.end11.i_crit_edge
  br i1 %tobool13.not.i, label %if.end11.i.if.end15.i_crit_edge, label %if.then14.i

if.end11.i.if.end15.i_crit_edge:                  ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.i

if.then14.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @btrfs_page_clamp_clear_dirty(ptr noundef %5, ptr noundef %15, i64 noundef %start, i32 noundef %conv.i) #14
  call void @btrfs_page_clamp_set_writeback(ptr noundef %5, ptr noundef %15, i64 noundef %start, i32 noundef %conv.i) #14
  br label %if.end15.i

if.end15.i:                                       ; preds = %if.then14.i, %if.end11.i.if.end15.i_crit_edge
  br i1 %tobool17.not.i, label %if.end15.i.if.end19.i_crit_edge, label %if.then18.i

if.end15.i.if.end19.i_crit_edge:                  ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19.i

if.then18.i:                                      ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @btrfs_page_clamp_clear_writeback(ptr noundef %5, ptr noundef %15, i64 noundef %start, i32 noundef %conv.i) #14
  br label %if.end19.i

if.end19.i:                                       ; preds = %if.then18.i, %if.end15.i.if.end19.i_crit_edge
  %cmp20.i = icmp eq ptr %15, %locked_page
  br i1 %cmp20.i, label %if.end19.i.if.end58_crit_edge, label %if.end23.i

if.end19.i.if.end58_crit_edge:                    ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

if.end23.i:                                       ; preds = %if.end19.i
  br i1 %tobool.not, label %if.end37.i, label %if.then26.i

if.then26.i:                                      ; preds = %if.end23.i
  %call.i140 = call i32 @btrfs_page_start_writer_lock(ptr noundef %5, ptr noundef %15, i64 noundef %start, i32 noundef %conv.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i140)
  %tobool27.not.i = icmp eq i32 %call.i140, 0
  br i1 %tobool27.not.i, label %if.end29.i, label %if.then26.i.process_one_page.exit_crit_edge

if.then26.i.process_one_page.exit_crit_edge:      ; preds = %if.then26.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %process_one_page.exit

if.end29.i:                                       ; preds = %if.then26.i
  %16 = getelementptr inbounds %struct.page, ptr %15, i32 0, i32 1
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %16, align 4
  %and.i.i.i = and i32 %18, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !322

if.then.i.i.i:                                    ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i.i = add i32 %18, -1
  br label %_compound_head.exit.i.i

if.end.i.i.i:                                     ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #16
  %19 = ptrtoint ptr %15 to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %19, %if.end.i.i.i ]
  %20 = inttoptr i32 %retval.0.i.i.i to ptr
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %20, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %22)
  %cmp.i.not.i.i = icmp eq i32 %22, -1
  %23 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %16, align 4
  %and.i13.i.i = and i32 %24, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i.i)
  %tobool.not.i14.i.i = icmp eq i32 %and.i13.i.i, 0
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %do.end8.i.i, !prof !319

if.then.i.i:                                      ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i14.i.i, label %if.end.i17.i.i, label %if.then.i16.i.i, !prof !322

if.then.i16.i.i:                                  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i15.i.i = add i32 %24, -1
  br label %_compound_head.exit19.i.i

if.end.i17.i.i:                                   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %25 = ptrtoint ptr %15 to i32
  br label %_compound_head.exit19.i.i

_compound_head.exit19.i.i:                        ; preds = %if.end.i17.i.i, %if.then.i16.i.i
  %retval.0.i18.i.i = phi i32 [ %sub.i15.i.i, %if.then.i16.i.i ], [ %25, %if.end.i17.i.i ]
  %26 = inttoptr i32 %retval.0.i18.i.i to ptr
  call void @dump_page(ptr noundef %26, ptr noundef nonnull @.str.86) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 420, 0\0A.popsection", ""() #14, !srcloc !357
  unreachable

do.end8.i.i:                                      ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i14.i.i, label %if.end.i24.i.i, label %if.then.i23.i.i, !prof !322

if.then.i23.i.i:                                  ; preds = %do.end8.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i22.i.i = add i32 %24, -1
  br label %PageDirty.exit.i

if.end.i24.i.i:                                   ; preds = %do.end8.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %27 = ptrtoint ptr %15 to i32
  br label %PageDirty.exit.i

PageDirty.exit.i:                                 ; preds = %if.end.i24.i.i, %if.then.i23.i.i
  %retval.0.i25.i.i = phi i32 [ %sub.i22.i.i, %if.then.i23.i.i ], [ %27, %if.end.i24.i.i ]
  %28 = inttoptr i32 %retval.0.i25.i.i to ptr
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %28, align 4
  %31 = and i32 %30, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool31.not.i = icmp eq i32 %31, 0
  br i1 %tobool31.not.i, label %PageDirty.exit.i.cleanup42.sink.split.i_crit_edge, label %lor.lhs.false.i

PageDirty.exit.i.cleanup42.sink.split.i_crit_edge: ; preds = %PageDirty.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup42.sink.split.i

lor.lhs.false.i:                                  ; preds = %PageDirty.exit.i
  %mapping32.i = getelementptr inbounds %struct.page, ptr %15, i32 0, i32 1, i32 0, i32 1
  %32 = ptrtoint ptr %mapping32.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %mapping32.i, align 4
  %cmp33.not.i = icmp ne ptr %33, %mapping
  %brmerge = or i1 %cmp33.not.i, %tobool39.not.i.not
  %.mux = select i1 %cmp33.not.i, i32 -11, i32 0
  br i1 %brmerge, label %lor.lhs.false.i.cleanup42.sink.split.i_crit_edge, label %lor.lhs.false.i.if.end58_crit_edge

lor.lhs.false.i.if.end58_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

lor.lhs.false.i.cleanup42.sink.split.i_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup42.sink.split.i

if.end37.i:                                       ; preds = %if.end23.i
  br i1 %tobool39.not.i, label %if.end37.i.if.end58_crit_edge, label %if.end37.i.cleanup42.sink.split.i_crit_edge

if.end37.i.cleanup42.sink.split.i_crit_edge:      ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup42.sink.split.i

if.end37.i.if.end58_crit_edge:                    ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

cleanup42.sink.split.i:                           ; preds = %if.end37.i.cleanup42.sink.split.i_crit_edge, %lor.lhs.false.i.cleanup42.sink.split.i_crit_edge, %PageDirty.exit.i.cleanup42.sink.split.i_crit_edge
  %retval.1.ph.i = phi i32 [ %.mux, %lor.lhs.false.i.cleanup42.sink.split.i_crit_edge ], [ -11, %PageDirty.exit.i.cleanup42.sink.split.i_crit_edge ], [ 0, %if.end37.i.cleanup42.sink.split.i_crit_edge ]
  call void @btrfs_page_end_writer_lock(ptr noundef %5, ptr noundef %15, i64 noundef %start, i32 noundef %conv.i) #14
  br label %process_one_page.exit

process_one_page.exit:                            ; preds = %cleanup42.sink.split.i, %if.then26.i.process_one_page.exit_crit_edge
  %retval.1.i = phi i32 [ %call.i140, %if.then26.i.process_one_page.exit_crit_edge ], [ %retval.1.ph.i, %cleanup42.sink.split.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.1.i)
  %cmp50 = icmp slt i32 %retval.1.i, 0
  br i1 %cmp50, label %for.cond53.preheader, label %process_one_page.exit.if.end58_crit_edge

process_one_page.exit.if.end58_crit_edge:         ; preds = %process_one_page.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

for.cond53.preheader:                             ; preds = %process_one_page.exit
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0222, i32 %call31)
  %cmp54216 = icmp slt i32 %i.0222, %call31
  br i1 %cmp54216, label %for.cond53.preheader.for.body56_crit_edge, label %for.cond53.preheader.out_crit_edge

for.cond53.preheader.out_crit_edge:               ; preds = %for.cond53.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

for.cond53.preheader.for.body56_crit_edge:        ; preds = %for.cond53.preheader
  br label %for.body56

for.body56:                                       ; preds = %put_page.exit.for.body56_crit_edge, %for.cond53.preheader.for.body56_crit_edge
  %i.1217 = phi i32 [ %inc, %put_page.exit.for.body56_crit_edge ], [ %i.0222, %for.cond53.preheader.for.body56_crit_edge ]
  %arrayidx57 = getelementptr [16 x ptr], ptr %pages, i32 0, i32 %i.1217
  %34 = ptrtoint ptr %arrayidx57 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %arrayidx57, align 4
  %36 = getelementptr inbounds %struct.page, ptr %35, i32 0, i32 1
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %36, align 4
  %and.i.i = and i32 %38, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i141, !prof !322

if.then.i.i141:                                   ; preds = %for.body56
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %38, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %for.body56
  call void @__sanitizer_cov_trace_pc() #16
  %39 = ptrtoint ptr %35 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i141
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i141 ], [ %39, %if.end.i.i ]
  %40 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %40, i32 0, i32 3
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #14
  %41 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %cmp.i.i.i.i = icmp eq i32 %42, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !319

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %43 = inttoptr i32 %retval.0.i.i to ptr
  call void @dump_page(ptr noundef %43, ptr noundef nonnull @.str.57) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #14, !srcloc !351
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !352
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #14
  %44 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #14, !srcloc !353
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %44, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !354
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@__process_pages_contig, %if.then.i.i.i.i.i)) #14
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !326

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  call void @__page_ref_mod_and_test(ptr noundef %40, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #14
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.put_page.exit_crit_edge

folio_put_testzero.exit.i.i.put_page.exit_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %put_page.exit

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__put_page(ptr noundef %40) #14
  br label %put_page.exit

put_page.exit:                                    ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.put_page.exit_crit_edge
  %inc = add i32 %i.1217, 1
  %exitcond.not = icmp eq i32 %inc, %call31
  br i1 %exitcond.not, label %put_page.exit.out_crit_edge, label %put_page.exit.for.body56_crit_edge

put_page.exit.for.body56_crit_edge:               ; preds = %put_page.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body56

put_page.exit.out_crit_edge:                      ; preds = %put_page.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end58:                                         ; preds = %process_one_page.exit.if.end58_crit_edge, %if.end37.i.if.end58_crit_edge, %lor.lhs.false.i.if.end58_crit_edge, %if.end19.i.if.end58_crit_edge
  %45 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %arrayidx, align 4
  %47 = getelementptr inbounds %struct.page, ptr %46, i32 0, i32 1
  %48 = ptrtoint ptr %47 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %47, align 4
  %and.i.i142 = and i32 %49, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i142)
  %tobool.not.i.i143 = icmp eq i32 %and.i.i142, 0
  br i1 %tobool.not.i.i143, label %if.end.i.i146, label %if.then.i.i145, !prof !322

if.then.i.i145:                                   ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i144 = add i32 %49, -1
  br label %_compound_head.exit.i151

if.end.i.i146:                                    ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #16
  %50 = ptrtoint ptr %46 to i32
  br label %_compound_head.exit.i151

_compound_head.exit.i151:                         ; preds = %if.end.i.i146, %if.then.i.i145
  %retval.0.i.i147 = phi i32 [ %sub.i.i144, %if.then.i.i145 ], [ %50, %if.end.i.i146 ]
  %51 = inttoptr i32 %retval.0.i.i147 to ptr
  %_refcount.i.i.i.i.i148 = getelementptr inbounds %struct.page, ptr %51, i32 0, i32 3
  %call.i.i.i.i.i.i.i149 = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i148, i32 noundef 4) #14
  %52 = ptrtoint ptr %_refcount.i.i.i.i.i148 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %_refcount.i.i.i.i.i148, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %53)
  %cmp.i.i.i.i150 = icmp eq i32 %53, 0
  br i1 %cmp.i.i.i.i150, label %if.then.i.i.i.i152, label %do.end5.i.i.i.i156, !prof !319

if.then.i.i.i.i152:                               ; preds = %_compound_head.exit.i151
  call void @__sanitizer_cov_trace_pc() #16
  %54 = inttoptr i32 %retval.0.i.i147 to ptr
  call void @dump_page(ptr noundef %54, ptr noundef nonnull @.str.57) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #14, !srcloc !351
  unreachable

do.end5.i.i.i.i156:                               ; preds = %_compound_head.exit.i151
  %call.i.i.i10.i.i.i.i153 = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i148, i32 noundef 4) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !352
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i148, i32 1, i32 3, i32 1) #14
  %55 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i148, ptr %_refcount.i.i.i.i.i148, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i148) #14, !srcloc !353
  %asmresult.i.i.i.i.i.i.i.i.i.i154 = extractvalue { i32, i32 } %55, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !354
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i154)
  %cmp.i.i.i.i.i.i.i155 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i154, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@__process_pages_contig, %if.then.i.i.i.i.i158)) #14
          to label %folio_put_testzero.exit.i.i159 [label %if.then.i.i.i.i.i158], !srcloc !326

if.then.i.i.i.i.i158:                             ; preds = %do.end5.i.i.i.i156
  call void @__sanitizer_cov_trace_pc() #16
  %conv.i.i.i.i.i157 = zext i1 %cmp.i.i.i.i.i.i.i155 to i32
  call void @__page_ref_mod_and_test(ptr noundef %51, i32 noundef -1, i32 noundef %conv.i.i.i.i.i157) #14
  br label %folio_put_testzero.exit.i.i159

folio_put_testzero.exit.i.i159:                   ; preds = %if.then.i.i.i.i.i158, %do.end5.i.i.i.i156
  br i1 %cmp.i.i.i.i.i.i.i155, label %if.then.i4.i160, label %folio_put_testzero.exit.i.i159.for.inc61_crit_edge

folio_put_testzero.exit.i.i159.for.inc61_crit_edge: ; preds = %folio_put_testzero.exit.i.i159
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc61

if.then.i4.i160:                                  ; preds = %folio_put_testzero.exit.i.i159
  call void @__sanitizer_cov_trace_pc() #16
  call void @__put_page(ptr noundef %51) #14
  br label %for.inc61

for.inc61:                                        ; preds = %if.then.i4.i160, %folio_put_testzero.exit.i.i159.for.inc61_crit_edge
  %inc60 = add i32 %pages_processed.1219, 1
  %inc62 = add i32 %i.0222, 1
  %cmp47 = icmp slt i32 %inc62, %call31
  br i1 %cmp47, label %for.inc61.for.body_crit_edge, label %for.inc61.cleanup68_crit_edge

for.inc61.cleanup68_crit_edge:                    ; preds = %for.inc61
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup68

for.inc61.for.body_crit_edge:                     ; preds = %for.inc61
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

cleanup68:                                        ; preds = %for.inc61.cleanup68_crit_edge, %for.cond.preheader.cleanup68_crit_edge
  %pages_processed.1.lcssa = phi i32 [ %pages_processed.0228, %for.cond.preheader.cleanup68_crit_edge ], [ %inc60, %for.inc61.cleanup68_crit_edge ]
  %sub64 = sub i32 %nr_pages.0227, %call31
  %add65 = add i32 %call31, %index.0230
  call void @__might_resched(ptr noundef nonnull @.str.2, i32 noundef 1917, i32 noundef 0) #14
  %call.i162 = call i32 @__cond_resched() #14
  %cmp24.not = icmp eq i32 %sub64, 0
  br i1 %cmp24.not, label %cleanup68.cleanup89_crit_edge, label %cleanup68.while.body_crit_edge

cleanup68.while.body_crit_edge:                   ; preds = %cleanup68
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

cleanup68.cleanup89_crit_edge:                    ; preds = %cleanup68
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup89

out:                                              ; preds = %put_page.exit.out_crit_edge, %for.cond53.preheader.out_crit_edge, %if.then34.out_crit_edge
  %pages_processed.4 = phi i32 [ %pages_processed.0228, %if.then34.out_crit_edge ], [ %pages_processed.1219, %for.cond53.preheader.out_crit_edge ], [ %pages_processed.1219, %put_page.exit.out_crit_edge ]
  %tobool73.not = icmp eq ptr %processed_end, null
  br i1 %tobool73.not, label %out.cleanup89_crit_edge, label %if.then74

out.cleanup89_crit_edge:                          ; preds = %out
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup89

if.then74:                                        ; preds = %out
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %pages_processed.4)
  %tobool75.not = icmp eq i32 %pages_processed.4, 0
  br i1 %tobool75.not, label %if.then74.cleanup89.sink.split_crit_edge, label %if.then76

if.then74.cleanup89.sink.split_crit_edge:         ; preds = %if.then74
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup89.sink.split

if.then76:                                        ; preds = %if.then74
  call void @__sanitizer_cov_trace_pc() #16
  %add77 = add i32 %pages_processed.4, %conv
  %conv78 = zext i32 %add77 to i64
  %shl = shl nuw nsw i64 %conv78, 12
  %sub79 = add nsw i64 %shl, -1
  %56 = call i64 @llvm.umin.i64(i64 %sub79, i64 %end)
  br label %cleanup89.sink.split

cleanup89.sink.split:                             ; preds = %if.then76, %if.then74.cleanup89.sink.split_crit_edge
  %start.sink = phi i64 [ %56, %if.then76 ], [ %start, %if.then74.cleanup89.sink.split_crit_edge ]
  %57 = ptrtoint ptr %processed_end to i32
  call void @__asan_store8_noabort(i32 %57)
  store i64 %start.sink, ptr %processed_end, align 8
  br label %cleanup89

cleanup89:                                        ; preds = %cleanup89.sink.split, %out.cleanup89_crit_edge, %cleanup68.cleanup89_crit_edge, %if.end23.cleanup89_crit_edge
  %err.4258 = phi i32 [ -11, %out.cleanup89_crit_edge ], [ 0, %if.end23.cleanup89_crit_edge ], [ -11, %cleanup89.sink.split ], [ 0, %cleanup68.cleanup89_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %pages) #14
  ret i32 %err.4258
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i64 @count_range_bits(ptr noundef %tree, ptr nocapture noundef %start, i64 noundef %search_end, i64 noundef %max_bytes, i32 noundef %bits, i32 noundef %contig) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %start, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %1, i64 %search_end)
  %cmp.not = icmp ult i64 %1, %search_end
  br i1 %cmp.not, label %if.end21, label %do.end, !prof !322

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 2108, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end21:                                         ; preds = %entry
  %lock = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %lock) #14
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %1)
  %cmp22 = icmp eq i64 %1, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %bits)
  %cmp23 = icmp eq i32 %bits, 1
  %or.cond = and i1 %cmp23, %cmp22
  br i1 %or.cond, label %if.then24, label %if.end25

if.then24:                                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #16
  %dirty_bytes = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 3
  %2 = ptrtoint ptr %dirty_bytes to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %dirty_bytes, align 8
  br label %out

if.end25:                                         ; preds = %if.end21
  %4 = ptrtoint ptr %tree to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %tree, align 4
  %tobool.not78.i.i.i = icmp eq ptr %5, null
  br i1 %tobool.not78.i.i.i, label %if.end25.out_crit_edge, label %if.end25.while.body.i.i.i_crit_edge

if.end25.while.body.i.i.i_crit_edge:              ; preds = %if.end25
  br label %while.body.i.i.i

if.end25.out_crit_edge:                           ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

while.body.i.i.i:                                 ; preds = %if.end5.i.i.i.while.body.i.i.i_crit_edge, %if.end25.while.body.i.i.i_crit_edge
  %6 = phi ptr [ %12, %if.end5.i.i.i.while.body.i.i.i_crit_edge ], [ %5, %if.end25.while.body.i.i.i_crit_edge ]
  %add.ptr.i.i.i = getelementptr i8, ptr %6, i32 -16
  %7 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %add.ptr.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %8, i64 %1)
  %cmp.i.i.i = icmp ugt i64 %8, %1
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_left.i.i.i = getelementptr inbounds %struct.rb_node, ptr %6, i32 0, i32 2
  br label %if.end5.i.i.i

if.else.i.i.i:                                    ; preds = %while.body.i.i.i
  %end.i.i.i = getelementptr i8, ptr %6, i32 -8
  %9 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %end.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %10, i64 %1)
  %cmp2.i.i.i = icmp ult i64 %10, %1
  br i1 %cmp2.i.i.i, label %if.then3.i.i.i, label %if.else.i.i.i.tree_search.exit_crit_edge

if.else.i.i.i.tree_search.exit_crit_edge:         ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %tree_search.exit

if.then3.i.i.i:                                   ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_right.i.i.i = getelementptr inbounds %struct.rb_node, ptr %6, i32 0, i32 1
  br label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %if.then3.i.i.i, %if.then.i.i.i
  %n.1.i.i.i = phi ptr [ %rb_left.i.i.i, %if.then.i.i.i ], [ %rb_right.i.i.i, %if.then3.i.i.i ]
  %11 = ptrtoint ptr %n.1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %n.1.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %12, null
  br i1 %tobool.not.i.i.i, label %if.end5.i.i.i.land.rhs.i.i.i_crit_edge, label %if.end5.i.i.i.while.body.i.i.i_crit_edge

if.end5.i.i.i.while.body.i.i.i_crit_edge:         ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.i

if.end5.i.i.i.land.rhs.i.i.i_crit_edge:           ; preds = %if.end5.i.i.i
  br label %land.rhs.i.i.i

land.rhs.i.i.i:                                   ; preds = %while.body18.i.i.i.land.rhs.i.i.i_crit_edge, %if.end5.i.i.i.land.rhs.i.i.i_crit_edge
  %prev.183.i.i.i = phi ptr [ %call.i.i.i, %while.body18.i.i.i.land.rhs.i.i.i_crit_edge ], [ %6, %if.end5.i.i.i.land.rhs.i.i.i_crit_edge ]
  %end16.i.i.i = getelementptr i8, ptr %prev.183.i.i.i, i32 -8
  %13 = ptrtoint ptr %end16.i.i.i to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %end16.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %14, i64 %1)
  %cmp17.i.i.i = icmp ult i64 %14, %1
  br i1 %cmp17.i.i.i, label %while.body18.i.i.i, label %land.rhs.i.i.i.tree_search.exit_crit_edge

land.rhs.i.i.i.tree_search.exit_crit_edge:        ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %tree_search.exit

while.body18.i.i.i:                               ; preds = %land.rhs.i.i.i
  %call.i.i.i = tail call ptr @rb_next(ptr noundef nonnull %prev.183.i.i.i) #14
  %tobool15.not.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool15.not.i.i.i, label %while.body18.i.i.i.out_crit_edge, label %while.body18.i.i.i.land.rhs.i.i.i_crit_edge

while.body18.i.i.i.land.rhs.i.i.i_crit_edge:      ; preds = %while.body18.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.i.i.i

while.body18.i.i.i.out_crit_edge:                 ; preds = %while.body18.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

tree_search.exit:                                 ; preds = %land.rhs.i.i.i.tree_search.exit_crit_edge, %if.else.i.i.i.tree_search.exit_crit_edge
  %retval.0.i.i = phi ptr [ %prev.183.i.i.i, %land.rhs.i.i.i.tree_search.exit_crit_edge ], [ %6, %if.else.i.i.i.tree_search.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %contig)
  %tobool34.not = icmp eq i32 %contig, 0
  br label %while.cond

while.cond:                                       ; preds = %if.end78.while.cond_crit_edge, %tree_search.exit
  %found.0 = phi i32 [ 0, %tree_search.exit ], [ %found.2, %if.end78.while.cond_crit_edge ]
  %last.0 = phi i64 [ 0, %tree_search.exit ], [ %last.1, %if.end78.while.cond_crit_edge ]
  %total_bytes.0 = phi i64 [ 0, %tree_search.exit ], [ %total_bytes.1, %if.end78.while.cond_crit_edge ]
  %node.0 = phi ptr [ %retval.0.i.i, %tree_search.exit ], [ %call79, %if.end78.while.cond_crit_edge ]
  %add.ptr = getelementptr i8, ptr %node.0, i32 -16
  %15 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %add.ptr, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %16, i64 %search_end)
  %cmp31 = icmp ugt i64 %16, %search_end
  br i1 %cmp31, label %while.cond.out_crit_edge, label %if.end33

while.cond.out_crit_edge:                         ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end33:                                         ; preds = %while.cond
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %found.0)
  %tobool36.not = icmp eq i32 %found.0, 0
  %or.cond128 = select i1 %tobool34.not, i1 true, i1 %tobool36.not
  %or.cond128.not = xor i1 %or.cond128, true
  %add = add i64 %last.0, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %16, i64 %add)
  %cmp39 = icmp ugt i64 %16, %add
  %or.cond129 = select i1 %or.cond128.not, i1 %cmp39, i1 false
  br i1 %or.cond129, label %if.end33.out_crit_edge, label %if.end41

if.end33.out_crit_edge:                           ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end41:                                         ; preds = %if.end33
  %end = getelementptr i8, ptr %node.0, i32 -8
  %17 = ptrtoint ptr %end to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %end, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %18, i64 %1)
  %cmp42.not = icmp ult i64 %18, %1
  br i1 %cmp42.not, label %if.end41.if.else_crit_edge, label %land.lhs.true43

if.end41.if.else_crit_edge:                       ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

land.lhs.true43:                                  ; preds = %if.end41
  %state44 = getelementptr i8, ptr %node.0, i32 68
  %19 = ptrtoint ptr %state44 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %state44, align 4
  %and = and i32 %20, %bits
  call void @__sanitizer_cov_trace_cmp4(i32 %and, i32 %bits)
  %cmp45 = icmp eq i32 %and, %bits
  br i1 %cmp45, label %if.then46, label %land.lhs.true43.if.else_crit_edge

land.lhs.true43.if.else_crit_edge:                ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

if.then46:                                        ; preds = %land.lhs.true43
  %21 = tail call i64 @llvm.umin.i64(i64 %18, i64 %search_end)
  %22 = tail call i64 @llvm.umax.i64(i64 %1, i64 %16)
  %add50 = add i64 %total_bytes.0, 1
  %sub = sub i64 %add50, %22
  %add58 = add i64 %sub, %21
  call void @__sanitizer_cov_trace_cmp8(i64 %add58, i64 %max_bytes)
  %cmp59.not = icmp ult i64 %add58, %max_bytes
  br i1 %cmp59.not, label %if.end61, label %if.then46.out_crit_edge

if.then46.out_crit_edge:                          ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end61:                                         ; preds = %if.then46
  br i1 %tobool36.not, label %if.then63, label %if.end61.if.end71_crit_edge

if.end61.if.end71_crit_edge:                      ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end71

if.then63:                                        ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #16
  %23 = ptrtoint ptr %start to i32
  call void @__asan_store8_noabort(i32 %23)
  store i64 %22, ptr %start, align 8
  br label %if.end71

if.end71:                                         ; preds = %if.then63, %if.end61.if.end71_crit_edge
  %24 = ptrtoint ptr %end to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %end, align 8
  br label %if.end78

if.else:                                          ; preds = %land.lhs.true43.if.else_crit_edge, %if.end41.if.else_crit_edge
  %found.0.mux = select i1 %tobool34.not, i32 %found.0, i32 0
  br i1 %or.cond128, label %if.else.if.end78_crit_edge, label %if.else.out_crit_edge

if.else.out_crit_edge:                            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.else.if.end78_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end78

if.end78:                                         ; preds = %if.else.if.end78_crit_edge, %if.end71
  %found.2 = phi i32 [ 1, %if.end71 ], [ %found.0.mux, %if.else.if.end78_crit_edge ]
  %last.1 = phi i64 [ %25, %if.end71 ], [ %last.0, %if.else.if.end78_crit_edge ]
  %total_bytes.1 = phi i64 [ %add58, %if.end71 ], [ %total_bytes.0, %if.else.if.end78_crit_edge ]
  %call79 = tail call ptr @rb_next(ptr noundef nonnull %node.0) #14
  %tobool80.not = icmp eq ptr %call79, null
  br i1 %tobool80.not, label %if.end78.out_crit_edge, label %if.end78.while.cond_crit_edge

if.end78.while.cond_crit_edge:                    ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond

if.end78.out_crit_edge:                           ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

out:                                              ; preds = %if.end78.out_crit_edge, %if.else.out_crit_edge, %if.then46.out_crit_edge, %if.end33.out_crit_edge, %while.cond.out_crit_edge, %while.body18.i.i.i.out_crit_edge, %if.end25.out_crit_edge, %if.then24
  %total_bytes.2 = phi i64 [ %3, %if.then24 ], [ 0, %if.end25.out_crit_edge ], [ %total_bytes.0, %if.else.out_crit_edge ], [ %total_bytes.0, %if.end33.out_crit_edge ], [ %total_bytes.1, %if.end78.out_crit_edge ], [ %add58, %if.then46.out_crit_edge ], [ %total_bytes.0, %while.cond.out_crit_edge ], [ 0, %while.body18.i.i.i.out_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %lock) #14
  br label %cleanup

cleanup:                                          ; preds = %out, %do.end
  %retval.0 = phi i64 [ 0, %do.end ], [ %total_bytes.2, %out ]
  ret i64 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @set_state_failrec(ptr noundef %tree, i64 noundef %start, ptr noundef %failrec) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %lock = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %lock) #14
  %0 = ptrtoint ptr %tree to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tree, align 4
  %tobool.not78.i.i.i = icmp eq ptr %1, null
  br i1 %tobool.not78.i.i.i, label %entry.out_crit_edge, label %entry.while.body.i.i.i_crit_edge

entry.while.body.i.i.i_crit_edge:                 ; preds = %entry
  br label %while.body.i.i.i

entry.out_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

while.body.i.i.i:                                 ; preds = %if.end5.i.i.i.while.body.i.i.i_crit_edge, %entry.while.body.i.i.i_crit_edge
  %2 = phi ptr [ %8, %if.end5.i.i.i.while.body.i.i.i_crit_edge ], [ %1, %entry.while.body.i.i.i_crit_edge ]
  %add.ptr.i.i.i = getelementptr i8, ptr %2, i32 -16
  %3 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %add.ptr.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %4, i64 %start)
  %cmp.i.i.i = icmp ugt i64 %4, %start
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_left.i.i.i = getelementptr inbounds %struct.rb_node, ptr %2, i32 0, i32 2
  br label %if.end5.i.i.i

if.else.i.i.i:                                    ; preds = %while.body.i.i.i
  %end.i.i.i = getelementptr i8, ptr %2, i32 -8
  %5 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %end.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %6, i64 %start)
  %cmp2.i.i.i = icmp ult i64 %6, %start
  br i1 %cmp2.i.i.i, label %if.then3.i.i.i, label %if.else.i.i.i.if.end_crit_edge

if.else.i.i.i.if.end_crit_edge:                   ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then3.i.i.i:                                   ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_right.i.i.i = getelementptr inbounds %struct.rb_node, ptr %2, i32 0, i32 1
  br label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %if.then3.i.i.i, %if.then.i.i.i
  %n.1.i.i.i = phi ptr [ %rb_left.i.i.i, %if.then.i.i.i ], [ %rb_right.i.i.i, %if.then3.i.i.i ]
  %7 = ptrtoint ptr %n.1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %n.1.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %8, null
  br i1 %tobool.not.i.i.i, label %if.end5.i.i.i.land.rhs.i.i.i_crit_edge, label %if.end5.i.i.i.while.body.i.i.i_crit_edge

if.end5.i.i.i.while.body.i.i.i_crit_edge:         ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.i

if.end5.i.i.i.land.rhs.i.i.i_crit_edge:           ; preds = %if.end5.i.i.i
  br label %land.rhs.i.i.i

land.rhs.i.i.i:                                   ; preds = %while.body18.i.i.i.land.rhs.i.i.i_crit_edge, %if.end5.i.i.i.land.rhs.i.i.i_crit_edge
  %prev.183.i.i.i = phi ptr [ %call.i.i.i, %while.body18.i.i.i.land.rhs.i.i.i_crit_edge ], [ %2, %if.end5.i.i.i.land.rhs.i.i.i_crit_edge ]
  %end16.i.i.i = getelementptr i8, ptr %prev.183.i.i.i, i32 -8
  %9 = ptrtoint ptr %end16.i.i.i to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %end16.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %10, i64 %start)
  %cmp17.i.i.i = icmp ult i64 %10, %start
  br i1 %cmp17.i.i.i, label %while.body18.i.i.i, label %land.rhs.i.i.i.if.end_crit_edge

land.rhs.i.i.i.if.end_crit_edge:                  ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

while.body18.i.i.i:                               ; preds = %land.rhs.i.i.i
  %call.i.i.i = tail call ptr @rb_next(ptr noundef nonnull %prev.183.i.i.i) #14
  %tobool15.not.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool15.not.i.i.i, label %while.body18.i.i.i.out_crit_edge, label %while.body18.i.i.i.land.rhs.i.i.i_crit_edge

while.body18.i.i.i.land.rhs.i.i.i_crit_edge:      ; preds = %while.body18.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.i.i.i

while.body18.i.i.i.out_crit_edge:                 ; preds = %while.body18.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end:                                           ; preds = %land.rhs.i.i.i.if.end_crit_edge, %if.else.i.i.i.if.end_crit_edge
  %retval.0.i.i = phi ptr [ %prev.183.i.i.i, %land.rhs.i.i.i.if.end_crit_edge ], [ %2, %if.else.i.i.i.if.end_crit_edge ]
  %add.ptr = getelementptr i8, ptr %retval.0.i.i, i32 -16
  %11 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %add.ptr, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %12, i64 %start)
  %cmp.not = icmp eq i64 %12, %start
  br i1 %cmp.not, label %if.end3, label %if.end.out_crit_edge

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end3:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %failrec4 = getelementptr i8, ptr %retval.0.i.i, i32 72
  %13 = ptrtoint ptr %failrec4 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %failrec, ptr %failrec4, align 8
  br label %out

out:                                              ; preds = %if.end3, %if.end.out_crit_edge, %while.body18.i.i.i.out_crit_edge, %entry.out_crit_edge
  %ret.0 = phi i32 [ 0, %if.end3 ], [ -2, %if.end.out_crit_edge ], [ -2, %entry.out_crit_edge ], [ -2, %while.body18.i.i.i.out_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %lock) #14
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @get_state_failrec(ptr noundef %tree, i64 noundef %start) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %lock = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %lock) #14
  %0 = ptrtoint ptr %tree to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tree, align 4
  %tobool.not78.i.i.i = icmp eq ptr %1, null
  br i1 %tobool.not78.i.i.i, label %entry.out_crit_edge, label %entry.while.body.i.i.i_crit_edge

entry.while.body.i.i.i_crit_edge:                 ; preds = %entry
  br label %while.body.i.i.i

entry.out_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

while.body.i.i.i:                                 ; preds = %if.end5.i.i.i.while.body.i.i.i_crit_edge, %entry.while.body.i.i.i_crit_edge
  %2 = phi ptr [ %8, %if.end5.i.i.i.while.body.i.i.i_crit_edge ], [ %1, %entry.while.body.i.i.i_crit_edge ]
  %add.ptr.i.i.i = getelementptr i8, ptr %2, i32 -16
  %3 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %add.ptr.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %4, i64 %start)
  %cmp.i.i.i = icmp ugt i64 %4, %start
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %while.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_left.i.i.i = getelementptr inbounds %struct.rb_node, ptr %2, i32 0, i32 2
  br label %if.end5.i.i.i

if.else.i.i.i:                                    ; preds = %while.body.i.i.i
  %end.i.i.i = getelementptr i8, ptr %2, i32 -8
  %5 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %end.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %6, i64 %start)
  %cmp2.i.i.i = icmp ult i64 %6, %start
  br i1 %cmp2.i.i.i, label %if.then3.i.i.i, label %if.else.i.i.i.if.end_crit_edge

if.else.i.i.i.if.end_crit_edge:                   ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then3.i.i.i:                                   ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_right.i.i.i = getelementptr inbounds %struct.rb_node, ptr %2, i32 0, i32 1
  br label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %if.then3.i.i.i, %if.then.i.i.i
  %n.1.i.i.i = phi ptr [ %rb_left.i.i.i, %if.then.i.i.i ], [ %rb_right.i.i.i, %if.then3.i.i.i ]
  %7 = ptrtoint ptr %n.1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %n.1.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %8, null
  br i1 %tobool.not.i.i.i, label %if.end5.i.i.i.land.rhs.i.i.i_crit_edge, label %if.end5.i.i.i.while.body.i.i.i_crit_edge

if.end5.i.i.i.while.body.i.i.i_crit_edge:         ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.i

if.end5.i.i.i.land.rhs.i.i.i_crit_edge:           ; preds = %if.end5.i.i.i
  br label %land.rhs.i.i.i

land.rhs.i.i.i:                                   ; preds = %while.body18.i.i.i.land.rhs.i.i.i_crit_edge, %if.end5.i.i.i.land.rhs.i.i.i_crit_edge
  %prev.183.i.i.i = phi ptr [ %call.i.i.i, %while.body18.i.i.i.land.rhs.i.i.i_crit_edge ], [ %2, %if.end5.i.i.i.land.rhs.i.i.i_crit_edge ]
  %end16.i.i.i = getelementptr i8, ptr %prev.183.i.i.i, i32 -8
  %9 = ptrtoint ptr %end16.i.i.i to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %end16.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %10, i64 %start)
  %cmp17.i.i.i = icmp ult i64 %10, %start
  br i1 %cmp17.i.i.i, label %while.body18.i.i.i, label %land.rhs.i.i.i.if.end_crit_edge

land.rhs.i.i.i.if.end_crit_edge:                  ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

while.body18.i.i.i:                               ; preds = %land.rhs.i.i.i
  %call.i.i.i = tail call ptr @rb_next(ptr noundef nonnull %prev.183.i.i.i) #14
  %tobool15.not.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool15.not.i.i.i, label %while.body18.i.i.i.out_crit_edge, label %while.body18.i.i.i.land.rhs.i.i.i_crit_edge

while.body18.i.i.i.land.rhs.i.i.i_crit_edge:      ; preds = %while.body18.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.i.i.i

while.body18.i.i.i.out_crit_edge:                 ; preds = %while.body18.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end:                                           ; preds = %land.rhs.i.i.i.if.end_crit_edge, %if.else.i.i.i.if.end_crit_edge
  %retval.0.i.i = phi ptr [ %prev.183.i.i.i, %land.rhs.i.i.i.if.end_crit_edge ], [ %2, %if.else.i.i.i.if.end_crit_edge ]
  %add.ptr = getelementptr i8, ptr %retval.0.i.i, i32 -16
  %11 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %add.ptr, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %12, i64 %start)
  %cmp.not = icmp eq i64 %12, %start
  br i1 %cmp.not, label %if.end5, label %if.end.out_crit_edge

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %failrec6 = getelementptr i8, ptr %retval.0.i.i, i32 72
  %13 = ptrtoint ptr %failrec6 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %failrec6, align 8
  br label %out

out:                                              ; preds = %if.end5, %if.end.out_crit_edge, %while.body18.i.i.i.out_crit_edge, %entry.out_crit_edge
  %failrec.0 = phi ptr [ %14, %if.end5 ], [ inttoptr (i32 -2 to ptr), %entry.out_crit_edge ], [ inttoptr (i32 -2 to ptr), %if.end.out_crit_edge ], [ inttoptr (i32 -2 to ptr), %while.body18.i.i.i.out_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %lock) #14
  ret ptr %failrec.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @free_io_failure(ptr noundef %failure_tree, ptr noundef %io_tree, ptr noundef %rec) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %start = getelementptr inbounds %struct.io_failure_record, ptr %rec, i32 0, i32 1
  %0 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %start, align 8
  %lock.i = getelementptr inbounds %struct.extent_io_tree, ptr %failure_tree, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %lock.i) #14
  %2 = ptrtoint ptr %failure_tree to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %failure_tree, align 4
  %tobool.not78.i.i.i.i = icmp eq ptr %3, null
  br i1 %tobool.not78.i.i.i.i, label %entry.set_state_failrec.exit_crit_edge, label %entry.while.body.i.i.i.i_crit_edge

entry.while.body.i.i.i.i_crit_edge:               ; preds = %entry
  br label %while.body.i.i.i.i

entry.set_state_failrec.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %set_state_failrec.exit

while.body.i.i.i.i:                               ; preds = %if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge, %entry.while.body.i.i.i.i_crit_edge
  %4 = phi ptr [ %10, %if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge ], [ %3, %entry.while.body.i.i.i.i_crit_edge ]
  %add.ptr.i.i.i.i = getelementptr i8, ptr %4, i32 -16
  %5 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %add.ptr.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %6, i64 %1)
  %cmp.i.i.i.i = icmp ugt i64 %6, %1
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %if.else.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %while.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_left.i.i.i.i = getelementptr inbounds %struct.rb_node, ptr %4, i32 0, i32 2
  br label %if.end5.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %while.body.i.i.i.i
  %end.i.i.i.i = getelementptr i8, ptr %4, i32 -8
  %7 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %end.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %8, i64 %1)
  %cmp2.i.i.i.i = icmp ult i64 %8, %1
  br i1 %cmp2.i.i.i.i, label %if.then3.i.i.i.i, label %if.else.i.i.i.i.if.end.i_crit_edge

if.else.i.i.i.i.if.end.i_crit_edge:               ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

if.then3.i.i.i.i:                                 ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_right.i.i.i.i = getelementptr inbounds %struct.rb_node, ptr %4, i32 0, i32 1
  br label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.then3.i.i.i.i, %if.then.i.i.i.i
  %n.1.i.i.i.i = phi ptr [ %rb_left.i.i.i.i, %if.then.i.i.i.i ], [ %rb_right.i.i.i.i, %if.then3.i.i.i.i ]
  %9 = ptrtoint ptr %n.1.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %n.1.i.i.i.i, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %10, null
  br i1 %tobool.not.i.i.i.i, label %if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge, label %if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge

if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge:     ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.i.i

if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge:       ; preds = %if.end5.i.i.i.i
  br label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge, %if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge
  %prev.183.i.i.i.i = phi ptr [ %call.i.i.i.i, %while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge ], [ %4, %if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge ]
  %end16.i.i.i.i = getelementptr i8, ptr %prev.183.i.i.i.i, i32 -8
  %11 = ptrtoint ptr %end16.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %end16.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %12, i64 %1)
  %cmp17.i.i.i.i = icmp ult i64 %12, %1
  br i1 %cmp17.i.i.i.i, label %while.body18.i.i.i.i, label %land.rhs.i.i.i.i.if.end.i_crit_edge

land.rhs.i.i.i.i.if.end.i_crit_edge:              ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

while.body18.i.i.i.i:                             ; preds = %land.rhs.i.i.i.i
  %call.i.i.i.i = tail call ptr @rb_next(ptr noundef nonnull %prev.183.i.i.i.i) #14
  %tobool15.not.i.i.i.i = icmp eq ptr %call.i.i.i.i, null
  br i1 %tobool15.not.i.i.i.i, label %while.body18.i.i.i.i.set_state_failrec.exit_crit_edge, label %while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge

while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge:  ; preds = %while.body18.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.i.i.i.i

while.body18.i.i.i.i.set_state_failrec.exit_crit_edge: ; preds = %while.body18.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %set_state_failrec.exit

if.end.i:                                         ; preds = %land.rhs.i.i.i.i.if.end.i_crit_edge, %if.else.i.i.i.i.if.end.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %prev.183.i.i.i.i, %land.rhs.i.i.i.i.if.end.i_crit_edge ], [ %4, %if.else.i.i.i.i.if.end.i_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %retval.0.i.i.i, i32 -16
  %13 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %add.ptr.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %14, i64 %1)
  %cmp.not.i = icmp eq i64 %14, %1
  br i1 %cmp.not.i, label %if.end3.i, label %if.end.i.set_state_failrec.exit_crit_edge

if.end.i.set_state_failrec.exit_crit_edge:        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %set_state_failrec.exit

if.end3.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %failrec4.i = getelementptr i8, ptr %retval.0.i.i.i, i32 72
  %15 = ptrtoint ptr %failrec4.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %failrec4.i, align 8
  br label %set_state_failrec.exit

set_state_failrec.exit:                           ; preds = %if.end3.i, %if.end.i.set_state_failrec.exit_crit_edge, %while.body18.i.i.i.i.set_state_failrec.exit_crit_edge, %entry.set_state_failrec.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %lock.i) #14
  %16 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %start, align 8
  %len = getelementptr inbounds %struct.io_failure_record, ptr %rec, i32 0, i32 2
  %18 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %len, align 8
  %add = add i64 %17, -1
  %sub = add i64 %add, %19
  %call.i.i = tail call i32 @__clear_extent_bit(ptr noundef %failure_tree, i64 noundef %17, i64 noundef %sub, i32 noundef 5, i32 noundef 1, i32 noundef 0, ptr noundef null, i32 noundef 3136, ptr noundef null) #14
  %20 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %start, align 8
  %22 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %len, align 8
  %add7 = add i64 %21, -1
  %sub8 = add i64 %add7, %23
  %call.i.i26 = tail call i32 @__clear_extent_bit(ptr noundef %io_tree, i64 noundef %21, i64 noundef %sub8, i32 noundef 1024, i32 noundef 0, i32 noundef 0, ptr noundef null, i32 noundef 3136, ptr noundef null) #14
  tail call void @kfree(ptr noundef %rec) #14
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_repair_eb_io_failure(ptr nocapture noundef readonly %eb, i32 noundef %mirror_num) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info1 = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 3
  %0 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info1, align 8
  %len.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %2 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %len.i, align 8
  %shr.i = lshr i32 %3, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %3)
  %tobool.not.i = icmp ult i32 %3, 4096
  %shr..i = select i1 %tobool.not.i, i32 1, i32 %shr.i
  %sb = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 45
  %4 = ptrtoint ptr %sb to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %sb, align 8
  %s_flags.i = getelementptr inbounds %struct.super_block, ptr %5, i32 0, i32 10
  %6 = ptrtoint ptr %s_flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %s_flags.i, align 4
  %and.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %for.cond.preheader, label %entry.cleanup8_crit_edge

entry.cleanup8_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup8

for.cond.preheader:                               ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr..i)
  %cmp24.not = icmp eq i32 %shr..i, 0
  br i1 %cmp24.not, label %for.cond.preheader.cleanup8_crit_edge, label %for.body.preheader

for.cond.preheader.cleanup8_crit_edge:            ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup8

for.body.preheader:                               ; preds = %for.cond.preheader
  %8 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %eb, align 8
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.preheader
  %i.026 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %start.025 = phi i64 [ %add, %for.inc.for.body_crit_edge ], [ %9, %for.body.preheader ]
  %arrayidx = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %i.026
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx, align 4
  %index.i = getelementptr inbounds %struct.page, ptr %11, i32 0, i32 1, i32 0, i32 2
  %12 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %index.i, align 4
  %conv.i = zext i32 %13 to i64
  %shl.i.neg = mul nuw i64 %conv.i, 4294963200
  %sub = add i64 %shl.i.neg, %start.025
  %conv = trunc i64 %sub to i32
  %call5 = tail call fastcc i32 @repair_io_failure(ptr noundef %1, i64 noundef 0, i64 noundef %start.025, i64 noundef 4096, i64 noundef %start.025, ptr noundef %11, i32 noundef %conv, i32 noundef %mirror_num)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool.not = icmp eq i32 %call5, 0
  br i1 %tobool.not, label %for.inc, label %for.body.cleanup8_crit_edge

for.body.cleanup8_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup8

for.inc:                                          ; preds = %for.body
  %add = add i64 %start.025, 4096
  %inc = add nuw nsw i32 %i.026, 1
  %exitcond.not = icmp eq i32 %inc, %shr..i
  br i1 %exitcond.not, label %for.inc.cleanup8_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.cleanup8_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup8

cleanup8:                                         ; preds = %for.inc.cleanup8_crit_edge, %for.body.cleanup8_crit_edge, %for.cond.preheader.cleanup8_crit_edge, %entry.cleanup8_crit_edge
  %retval.0 = phi i32 [ -30, %entry.cleanup8_crit_edge ], [ 0, %for.cond.preheader.cleanup8_crit_edge ], [ 0, %for.inc.cleanup8_crit_edge ], [ %call5, %for.body.cleanup8_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @repair_io_failure(ptr noundef %fs_info, i64 noundef %ino, i64 noundef %start, i64 noundef %length, i64 noundef %logical, ptr noundef %page, i32 noundef %pg_offset, i32 noundef %mirror_num) unnamed_addr #0 align 64 {
entry:
  %map_length = alloca i64, align 8
  %bioc = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %map_length) #14
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %bioc) #14
  %0 = ptrtoint ptr %bioc to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %bioc, align 4
  %sb = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 45
  %1 = ptrtoint ptr %sb to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %sb, align 8
  %s_flags = getelementptr inbounds %struct.super_block, ptr %2, i32 0, i32 10
  %3 = ptrtoint ptr %s_flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %s_flags, align 4
  %and = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.body, label %cond.false, !prof !322

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.63, i32 noundef 2313) #18
  unreachable

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mirror_num)
  %tobool4.not = icmp eq i32 %mirror_num, 0
  br i1 %tobool4.not, label %do.body13, label %do.end18, !prof !319

do.body13:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2314, 0\0A.popsection", ""() #14, !srcloc !358
  unreachable

do.end18:                                         ; preds = %do.body
  %call = tail call zeroext i1 @btrfs_repair_one_zone(ptr noundef %fs_info, i64 noundef %logical) #14
  br i1 %call, label %do.end18.cleanup_crit_edge, label %if.end20

do.end18.cleanup_crit_edge:                       ; preds = %do.end18
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end20:                                         ; preds = %do.end18
  %call.i150 = tail call ptr @bio_alloc_bioset(i32 noundef 3136, i16 noundef zeroext 1, ptr noundef nonnull @btrfs_bioset) #14
  %add.ptr.i.i = getelementptr i8, ptr %call.i150, i32 -96
  %5 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 96)
  %bi_iter = getelementptr inbounds %struct.bio, ptr %call.i150, i32 0, i32 8
  %bi_size = getelementptr inbounds %struct.bio, ptr %call.i150, i32 0, i32 8, i32 1
  %6 = ptrtoint ptr %bi_size to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %bi_size, align 8
  %7 = ptrtoint ptr %map_length to i32
  call void @__asan_store8_noabort(i32 %7)
  store i64 %length, ptr %map_length, align 8
  tail call void @btrfs_bio_counter_inc_blocked(ptr noundef %fs_info) #14
  %call22 = tail call i32 @btrfs_is_parity_mirror(ptr noundef %fs_info, i64 noundef %logical, i64 noundef %length) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %if.else, label %if.then24

if.then24:                                        ; preds = %if.end20
  %call25 = call i32 @btrfs_map_block(ptr noundef %fs_info, i32 noundef 0, i64 noundef %logical, ptr noundef nonnull %map_length, ptr noundef nonnull %bioc, i32 noundef 0) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %if.end28, label %if.then27

if.then27:                                        ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #16
  call void @btrfs_bio_counter_sub(ptr noundef %fs_info, i64 noundef 1) #14
  call void @bio_put(ptr noundef %call.i150) #14
  br label %cleanup

if.end28:                                         ; preds = %if.then24
  %8 = ptrtoint ptr %bioc to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %bioc, align 4
  %mirror_num29 = getelementptr inbounds %struct.btrfs_io_context, ptr %9, i32 0, i32 10
  %10 = ptrtoint ptr %mirror_num29 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %mirror_num29, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %11)
  %cmp = icmp eq i32 %11, 1
  br i1 %cmp, label %if.end28.if.end62_crit_edge, label %cond.false37, !prof !322

if.end28.if.end62_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end62

cond.false37:                                     ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.64, i32 noundef 2343) #18
  unreachable

if.else:                                          ; preds = %if.end20
  %call39 = call i32 @btrfs_map_block(ptr noundef %fs_info, i32 noundef 1, i64 noundef %logical, ptr noundef nonnull %map_length, ptr noundef nonnull %bioc, i32 noundef %mirror_num) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call39)
  %tobool40.not = icmp eq i32 %call39, 0
  br i1 %tobool40.not, label %do.body43, label %if.then41

if.then41:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  call void @btrfs_bio_counter_sub(ptr noundef %fs_info, i64 noundef 1) #14
  call void @bio_put(ptr noundef %call.i150) #14
  br label %cleanup

do.body43:                                        ; preds = %if.else
  %12 = ptrtoint ptr %bioc to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %bioc, align 4
  %mirror_num44 = getelementptr inbounds %struct.btrfs_io_context, ptr %13, i32 0, i32 10
  %14 = ptrtoint ptr %mirror_num44 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %mirror_num44, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %mirror_num)
  %cmp45.not = icmp eq i32 %15, %mirror_num
  br i1 %cmp45.not, label %do.body43.if.end62_crit_edge, label %do.body53, !prof !322

do.body43.if.end62_crit_edge:                     ; preds = %do.body43
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end62

do.body53:                                        ; preds = %do.body43
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2352, 0\0A.popsection", ""() #14, !srcloc !359
  unreachable

if.end62:                                         ; preds = %do.body43.if.end62_crit_edge, %if.end28.if.end62_crit_edge
  %16 = ptrtoint ptr %bioc to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %bioc, align 4
  %mirror_num63 = getelementptr inbounds %struct.btrfs_io_context, ptr %17, i32 0, i32 10
  %18 = ptrtoint ptr %mirror_num63 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %mirror_num63, align 8
  %sub = add i32 %19, -1
  %physical = getelementptr %struct.btrfs_io_context, ptr %17, i32 0, i32 14, i32 %sub, i32 1
  %20 = ptrtoint ptr %physical to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %physical, align 8
  %shr = lshr i64 %21, 9
  %22 = ptrtoint ptr %bi_iter to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %shr, ptr %bi_iter, align 8
  %23 = load i32, ptr %mirror_num63, align 8
  %sub67 = add i32 %23, -1
  %arrayidx68 = getelementptr %struct.btrfs_io_context, ptr %17, i32 0, i32 14, i32 %sub67
  %24 = ptrtoint ptr %arrayidx68 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx68, align 8
  call void @btrfs_put_bioc(ptr noundef %17) #14
  %tobool70.not = icmp eq ptr %25, null
  br i1 %tobool70.not, label %if.end62.if.then75_crit_edge, label %lor.lhs.false

if.end62.if.then75_crit_edge:                     ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then75

lor.lhs.false:                                    ; preds = %if.end62
  %bdev = getelementptr inbounds %struct.btrfs_device, ptr %25, i32 0, i32 7
  %26 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %bdev, align 8
  %tobool71.not = icmp eq ptr %27, null
  br i1 %tobool71.not, label %lor.lhs.false.if.then75_crit_edge, label %lor.lhs.false72

lor.lhs.false.if.then75_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then75

lor.lhs.false72:                                  ; preds = %lor.lhs.false
  %dev_state = getelementptr inbounds %struct.btrfs_device, ptr %25, i32 0, i32 10
  %28 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %dev_state, align 4
  %and1.i = and i32 %29, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool74.not = icmp eq i32 %and1.i, 0
  br i1 %tobool74.not, label %lor.lhs.false72.if.then75_crit_edge, label %if.end76

lor.lhs.false72.if.then75_crit_edge:              ; preds = %lor.lhs.false72
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then75

if.then75:                                        ; preds = %lor.lhs.false72.if.then75_crit_edge, %lor.lhs.false.if.then75_crit_edge, %if.end62.if.then75_crit_edge
  call void @btrfs_bio_counter_sub(ptr noundef %fs_info, i64 noundef 1) #14
  call void @bio_put(ptr noundef %call.i150) #14
  br label %cleanup

if.end76:                                         ; preds = %lor.lhs.false72
  %bi_flags.i.i = getelementptr inbounds %struct.bio, ptr %call.i150, i32 0, i32 3
  %30 = ptrtoint ptr %bi_flags.i.i to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %bi_flags.i.i, align 4
  %conv1.i.i = and i16 %31, -2049
  store i16 %conv1.i.i, ptr %bi_flags.i.i, align 4
  %bi_bdev.i = getelementptr inbounds %struct.bio, ptr %call.i150, i32 0, i32 1
  %32 = ptrtoint ptr %bi_bdev.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %bi_bdev.i, align 4
  %cmp.not.i = icmp eq ptr %33, %27
  br i1 %cmp.not.i, label %if.end76.bio_set_dev.exit_crit_edge, label %if.then.i151

if.end76.bio_set_dev.exit_crit_edge:              ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #16
  br label %bio_set_dev.exit

if.then.i151:                                     ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #16
  %conv1.i8.i = and i16 %31, -2177
  %34 = ptrtoint ptr %bi_flags.i.i to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 %conv1.i8.i, ptr %bi_flags.i.i, align 4
  br label %bio_set_dev.exit

bio_set_dev.exit:                                 ; preds = %if.then.i151, %if.end76.bio_set_dev.exit_crit_edge
  %35 = ptrtoint ptr %bi_bdev.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %27, ptr %bi_bdev.i, align 4
  call void @bio_associate_blkg(ptr noundef %call.i150) #14
  %bi_opf = getelementptr inbounds %struct.bio, ptr %call.i150, i32 0, i32 2
  %36 = ptrtoint ptr %bi_opf to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 2049, ptr %bi_opf, align 8
  %conv = trunc i64 %length to i32
  %call78 = call i32 @bio_add_page(ptr noundef %call.i150, ptr noundef %page, i32 noundef %conv, i32 noundef %pg_offset) #14
  %call79 = call i32 @btrfsic_submit_bio_wait(ptr noundef %call.i150) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call79)
  %tobool80.not = icmp eq i32 %call79, 0
  br i1 %tobool80.not, label %do.body83, label %if.then81

if.then81:                                        ; preds = %bio_set_dev.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void @btrfs_bio_counter_sub(ptr noundef %fs_info, i64 noundef 1) #14
  call void @bio_put(ptr noundef %call.i150) #14
  call void @btrfs_dev_stat_inc_and_print(ptr noundef nonnull %25, i32 noundef 0) #14
  br label %cleanup

do.body83:                                        ; preds = %bio_set_dev.exit
  %37 = call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i.i.i = and i32 %37, -16384
  %38 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %40, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #14, !srcloc !360
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #14
  %call.i = call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i, label %do.body83.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

do.body83.rcu_read_lock.exit_crit_edge:           ; preds = %do.body83
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %do.body83
  %call1.i = call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.66, i32 noundef 696, ptr noundef nonnull @.str.67) #14
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %do.body83.rcu_read_lock.exit_crit_edge
  %call85 = call i32 @___ratelimit(ptr noundef nonnull @repair_io_failure._rs, ptr noundef nonnull @__func__.repair_io_failure) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call85)
  %tobool86.not = icmp eq i32 %call85, 0
  br i1 %tobool86.not, label %rcu_read_lock.exit.do.end106_crit_edge, label %if.then87

rcu_read_lock.exit.do.end106_crit_edge:           ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end106

if.then87:                                        ; preds = %rcu_read_lock.exit
  %name = getelementptr inbounds %struct.btrfs_device, ptr %25, i32 0, i32 5
  %41 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile ptr, ptr %name, align 8
  %call92 = call i32 @rcu_read_lock_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call92)
  %tobool93.not = icmp eq i32 %call92, 0
  br i1 %tobool93.not, label %land.lhs.true, label %if.then87.do.end101_crit_edge

if.then87.do.end101_crit_edge:                    ; preds = %if.then87
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end101

land.lhs.true:                                    ; preds = %if.then87
  %call94 = call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call94)
  %tobool95.not = icmp eq i32 %call94, 0
  br i1 %tobool95.not, label %land.lhs.true.do.end101_crit_edge, label %land.lhs.true96

land.lhs.true.do.end101_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end101

land.lhs.true96:                                  ; preds = %land.lhs.true
  %.b149 = load i1, ptr @repair_io_failure.__warned, align 1
  br i1 %.b149, label %land.lhs.true96.do.end101_crit_edge, label %if.then98

land.lhs.true96.do.end101_crit_edge:              ; preds = %land.lhs.true96
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end101

if.then98:                                        ; preds = %land.lhs.true96
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @repair_io_failure.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 2380, ptr noundef nonnull @.str.48) #14
  br label %do.end101

do.end101:                                        ; preds = %if.then98, %land.lhs.true96.do.end101_crit_edge, %land.lhs.true.do.end101_crit_edge, %if.then87.do.end101_crit_edge
  %str = getelementptr inbounds %struct.rcu_string, ptr %42, i32 0, i32 1
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.65, i64 noundef %ino, i64 noundef %start, ptr noundef %str, i64 noundef %shr) #17
  br label %do.end106

do.end106:                                        ; preds = %do.end101, %rcu_read_lock.exit.do.end106_crit_edge
  call fastcc void @rcu_read_unlock()
  call void @btrfs_bio_counter_sub(ptr noundef %fs_info, i64 noundef 1) #14
  call void @bio_put(ptr noundef %call.i150) #14
  br label %cleanup

cleanup:                                          ; preds = %do.end106, %if.then81, %if.then75, %if.then41, %if.then27, %do.end18.cleanup_crit_edge
  %retval.0 = phi i32 [ -5, %if.then27 ], [ -5, %if.then81 ], [ 0, %do.end106 ], [ -5, %if.then75 ], [ -5, %if.then41 ], [ 0, %do.end18.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %bioc) #14
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %map_length) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @clean_io_failure(ptr noundef %fs_info, ptr noundef %failure_tree, ptr noundef %io_tree, i64 noundef %start, ptr noundef %page, i64 noundef %ino, i32 noundef %pg_offset) local_unnamed_addr #0 align 64 {
entry:
  %private = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %private) #14
  %0 = ptrtoint ptr %private to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 0, ptr %private, align 8
  %call = call i64 @count_range_bits(ptr noundef %failure_tree, ptr noundef nonnull %private, i64 noundef -1, i64 noundef 1, i32 noundef 1, i32 noundef 0)
  %conv = trunc i64 %call to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv)
  %tobool.not = icmp eq i32 %conv, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %lock.i = getelementptr inbounds %struct.extent_io_tree, ptr %failure_tree, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %lock.i) #14
  %1 = ptrtoint ptr %failure_tree to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %failure_tree, align 4
  %tobool.not78.i.i.i.i = icmp eq ptr %2, null
  br i1 %tobool.not78.i.i.i.i, label %if.end.get_state_failrec.exit.thread_crit_edge, label %if.end.while.body.i.i.i.i_crit_edge

if.end.while.body.i.i.i.i_crit_edge:              ; preds = %if.end
  br label %while.body.i.i.i.i

if.end.get_state_failrec.exit.thread_crit_edge:   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_state_failrec.exit.thread

while.body.i.i.i.i:                               ; preds = %if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge, %if.end.while.body.i.i.i.i_crit_edge
  %3 = phi ptr [ %9, %if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge ], [ %2, %if.end.while.body.i.i.i.i_crit_edge ]
  %add.ptr.i.i.i.i = getelementptr i8, ptr %3, i32 -16
  %4 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %add.ptr.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %5, i64 %start)
  %cmp.i.i.i.i = icmp ugt i64 %5, %start
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %if.else.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %while.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_left.i.i.i.i = getelementptr inbounds %struct.rb_node, ptr %3, i32 0, i32 2
  br label %if.end5.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %while.body.i.i.i.i
  %end.i.i.i.i = getelementptr i8, ptr %3, i32 -8
  %6 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %end.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %7, i64 %start)
  %cmp2.i.i.i.i = icmp ult i64 %7, %start
  br i1 %cmp2.i.i.i.i, label %if.then3.i.i.i.i, label %if.else.i.i.i.i.if.end.i_crit_edge

if.else.i.i.i.i.if.end.i_crit_edge:               ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

if.then3.i.i.i.i:                                 ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_right.i.i.i.i = getelementptr inbounds %struct.rb_node, ptr %3, i32 0, i32 1
  br label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.then3.i.i.i.i, %if.then.i.i.i.i
  %n.1.i.i.i.i = phi ptr [ %rb_left.i.i.i.i, %if.then.i.i.i.i ], [ %rb_right.i.i.i.i, %if.then3.i.i.i.i ]
  %8 = ptrtoint ptr %n.1.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %n.1.i.i.i.i, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %9, null
  br i1 %tobool.not.i.i.i.i, label %if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge, label %if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge

if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge:     ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.i.i

if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge:       ; preds = %if.end5.i.i.i.i
  br label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge, %if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge
  %prev.183.i.i.i.i = phi ptr [ %call.i.i.i.i, %while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge ], [ %3, %if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge ]
  %end16.i.i.i.i = getelementptr i8, ptr %prev.183.i.i.i.i, i32 -8
  %10 = ptrtoint ptr %end16.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %end16.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %11, i64 %start)
  %cmp17.i.i.i.i = icmp ult i64 %11, %start
  br i1 %cmp17.i.i.i.i, label %while.body18.i.i.i.i, label %land.rhs.i.i.i.i.if.end.i_crit_edge

land.rhs.i.i.i.i.if.end.i_crit_edge:              ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

while.body18.i.i.i.i:                             ; preds = %land.rhs.i.i.i.i
  %call.i.i.i.i = tail call ptr @rb_next(ptr noundef nonnull %prev.183.i.i.i.i) #14
  %tobool15.not.i.i.i.i = icmp eq ptr %call.i.i.i.i, null
  br i1 %tobool15.not.i.i.i.i, label %while.body18.i.i.i.i.get_state_failrec.exit.thread_crit_edge, label %while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge

while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge:  ; preds = %while.body18.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.i.i.i.i

while.body18.i.i.i.i.get_state_failrec.exit.thread_crit_edge: ; preds = %while.body18.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_state_failrec.exit.thread

if.end.i:                                         ; preds = %land.rhs.i.i.i.i.if.end.i_crit_edge, %if.else.i.i.i.i.if.end.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %prev.183.i.i.i.i, %land.rhs.i.i.i.i.if.end.i_crit_edge ], [ %3, %if.else.i.i.i.i.if.end.i_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %retval.0.i.i.i, i32 -16
  %12 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %add.ptr.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %13, i64 %start)
  %cmp.not.i = icmp eq i64 %13, %start
  br i1 %cmp.not.i, label %get_state_failrec.exit, label %if.end.i.get_state_failrec.exit.thread_crit_edge

if.end.i.get_state_failrec.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_state_failrec.exit.thread

get_state_failrec.exit.thread:                    ; preds = %if.end.i.get_state_failrec.exit.thread_crit_edge, %while.body18.i.i.i.i.get_state_failrec.exit.thread_crit_edge, %if.end.get_state_failrec.exit.thread_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %lock.i) #14
  br label %cleanup

get_state_failrec.exit:                           ; preds = %if.end.i
  %failrec6.i = getelementptr i8, ptr %retval.0.i.i.i, i32 72
  %14 = ptrtoint ptr %failrec6.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %failrec6.i, align 8
  tail call void @_raw_spin_unlock(ptr noundef %lock.i) #14
  %cmp.i = icmp ugt ptr %15, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %get_state_failrec.exit.cleanup_crit_edge, label %do.body

get_state_failrec.exit.cleanup_crit_edge:         ; preds = %get_state_failrec.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.body:                                          ; preds = %get_state_failrec.exit
  %this_mirror = getelementptr inbounds %struct.io_failure_record, ptr %15, i32 0, i32 5
  %16 = ptrtoint ptr %this_mirror to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %this_mirror, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool5.not = icmp eq i32 %17, 0
  br i1 %tobool5.not, label %do.body10, label %do.end16, !prof !319

do.body10:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2434, 0\0A.popsection", ""() #14, !srcloc !361
  unreachable

do.end16:                                         ; preds = %do.body
  %sb = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 45
  %18 = ptrtoint ptr %sb to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %sb, align 8
  %s_flags.i = getelementptr inbounds %struct.super_block, ptr %19, i32 0, i32 10
  %20 = ptrtoint ptr %s_flags.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %s_flags.i, align 4
  %and.i = and i32 %21, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.end19, label %do.end16.out_crit_edge

do.end16.out_crit_edge:                           ; preds = %do.end16
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end19:                                         ; preds = %do.end16
  %lock = getelementptr inbounds %struct.extent_io_tree, ptr %io_tree, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %lock) #14
  %start20 = getelementptr inbounds %struct.io_failure_record, ptr %15, i32 0, i32 1
  %22 = ptrtoint ptr %start20 to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %start20, align 8
  %24 = ptrtoint ptr %io_tree to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %io_tree, align 4
  %tobool.not78.i.i.i.i68 = icmp eq ptr %25, null
  br i1 %tobool.not78.i.i.i.i68, label %if.end19.find_first_extent_bit_state.exit.thread_crit_edge, label %if.end19.while.body.i.i.i.i71_crit_edge

if.end19.while.body.i.i.i.i71_crit_edge:          ; preds = %if.end19
  br label %while.body.i.i.i.i71

if.end19.find_first_extent_bit_state.exit.thread_crit_edge: ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #16
  br label %find_first_extent_bit_state.exit.thread

while.body.i.i.i.i71:                             ; preds = %if.end5.i.i.i.i81.while.body.i.i.i.i71_crit_edge, %if.end19.while.body.i.i.i.i71_crit_edge
  %26 = phi ptr [ %32, %if.end5.i.i.i.i81.while.body.i.i.i.i71_crit_edge ], [ %25, %if.end19.while.body.i.i.i.i71_crit_edge ]
  %add.ptr.i.i.i.i69 = getelementptr i8, ptr %26, i32 -16
  %27 = ptrtoint ptr %add.ptr.i.i.i.i69 to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %add.ptr.i.i.i.i69, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %28, i64 %23)
  %cmp.i.i.i.i70 = icmp ugt i64 %28, %23
  br i1 %cmp.i.i.i.i70, label %if.then.i.i.i.i73, label %if.else.i.i.i.i76

if.then.i.i.i.i73:                                ; preds = %while.body.i.i.i.i71
  call void @__sanitizer_cov_trace_pc() #16
  %rb_left.i.i.i.i72 = getelementptr inbounds %struct.rb_node, ptr %26, i32 0, i32 2
  br label %if.end5.i.i.i.i81

if.else.i.i.i.i76:                                ; preds = %while.body.i.i.i.i71
  %end.i.i.i.i74 = getelementptr i8, ptr %26, i32 -8
  %29 = ptrtoint ptr %end.i.i.i.i74 to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %end.i.i.i.i74, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %30, i64 %23)
  %cmp2.i.i.i.i75 = icmp ult i64 %30, %23
  br i1 %cmp2.i.i.i.i75, label %if.then3.i.i.i.i78, label %if.else.i.i.i.i76.while.cond.i.preheader_crit_edge

if.else.i.i.i.i76.while.cond.i.preheader_crit_edge: ; preds = %if.else.i.i.i.i76
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond.i.preheader

if.then3.i.i.i.i78:                               ; preds = %if.else.i.i.i.i76
  call void @__sanitizer_cov_trace_pc() #16
  %rb_right.i.i.i.i77 = getelementptr inbounds %struct.rb_node, ptr %26, i32 0, i32 1
  br label %if.end5.i.i.i.i81

if.end5.i.i.i.i81:                                ; preds = %if.then3.i.i.i.i78, %if.then.i.i.i.i73
  %n.1.i.i.i.i79 = phi ptr [ %rb_left.i.i.i.i72, %if.then.i.i.i.i73 ], [ %rb_right.i.i.i.i77, %if.then3.i.i.i.i78 ]
  %31 = ptrtoint ptr %n.1.i.i.i.i79 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %n.1.i.i.i.i79, align 4
  %tobool.not.i.i.i.i80 = icmp eq ptr %32, null
  br i1 %tobool.not.i.i.i.i80, label %if.end5.i.i.i.i81.land.rhs.i.i.i.i85_crit_edge, label %if.end5.i.i.i.i81.while.body.i.i.i.i71_crit_edge

if.end5.i.i.i.i81.while.body.i.i.i.i71_crit_edge: ; preds = %if.end5.i.i.i.i81
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.i.i71

if.end5.i.i.i.i81.land.rhs.i.i.i.i85_crit_edge:   ; preds = %if.end5.i.i.i.i81
  br label %land.rhs.i.i.i.i85

land.rhs.i.i.i.i85:                               ; preds = %while.body18.i.i.i.i88.land.rhs.i.i.i.i85_crit_edge, %if.end5.i.i.i.i81.land.rhs.i.i.i.i85_crit_edge
  %prev.183.i.i.i.i82 = phi ptr [ %call.i.i.i.i86, %while.body18.i.i.i.i88.land.rhs.i.i.i.i85_crit_edge ], [ %26, %if.end5.i.i.i.i81.land.rhs.i.i.i.i85_crit_edge ]
  %end16.i.i.i.i83 = getelementptr i8, ptr %prev.183.i.i.i.i82, i32 -8
  %33 = ptrtoint ptr %end16.i.i.i.i83 to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %end16.i.i.i.i83, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %34, i64 %23)
  %cmp17.i.i.i.i84 = icmp ult i64 %34, %23
  br i1 %cmp17.i.i.i.i84, label %while.body18.i.i.i.i88, label %land.rhs.i.i.i.i85.while.cond.i.preheader_crit_edge

land.rhs.i.i.i.i85.while.cond.i.preheader_crit_edge: ; preds = %land.rhs.i.i.i.i85
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond.i.preheader

while.cond.i.preheader:                           ; preds = %land.rhs.i.i.i.i85.while.cond.i.preheader_crit_edge, %if.else.i.i.i.i76.while.cond.i.preheader_crit_edge
  %node.0.i.ph = phi ptr [ %prev.183.i.i.i.i82, %land.rhs.i.i.i.i85.while.cond.i.preheader_crit_edge ], [ %26, %if.else.i.i.i.i76.while.cond.i.preheader_crit_edge ]
  br label %while.cond.i

while.body18.i.i.i.i88:                           ; preds = %land.rhs.i.i.i.i85
  %call.i.i.i.i86 = tail call ptr @rb_next(ptr noundef nonnull %prev.183.i.i.i.i82) #14
  %tobool15.not.i.i.i.i87 = icmp eq ptr %call.i.i.i.i86, null
  br i1 %tobool15.not.i.i.i.i87, label %while.body18.i.i.i.i88.find_first_extent_bit_state.exit.thread_crit_edge, label %while.body18.i.i.i.i88.land.rhs.i.i.i.i85_crit_edge

while.body18.i.i.i.i88.land.rhs.i.i.i.i85_crit_edge: ; preds = %while.body18.i.i.i.i88
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.i.i.i.i85

while.body18.i.i.i.i88.find_first_extent_bit_state.exit.thread_crit_edge: ; preds = %while.body18.i.i.i.i88
  call void @__sanitizer_cov_trace_pc() #16
  br label %find_first_extent_bit_state.exit.thread

while.cond.i:                                     ; preds = %if.end4.i.while.cond.i_crit_edge, %while.cond.i.preheader
  %node.0.i = phi ptr [ %call5.i, %if.end4.i.while.cond.i_crit_edge ], [ %node.0.i.ph, %while.cond.i.preheader ]
  %end.i = getelementptr i8, ptr %node.0.i, i32 -8
  %35 = ptrtoint ptr %end.i to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %end.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %36, i64 %23)
  %cmp.not.i90 = icmp ult i64 %36, %23
  br i1 %cmp.not.i90, label %while.cond.i.if.end4.i_crit_edge, label %land.lhs.true.i

while.cond.i.if.end4.i_crit_edge:                 ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4.i

land.lhs.true.i:                                  ; preds = %while.cond.i
  %state1.i = getelementptr i8, ptr %node.0.i, i32 68
  %37 = ptrtoint ptr %state1.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %state1.i, align 4
  %and.i91 = and i32 %38, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i91)
  %tobool2.not.i = icmp eq i32 %and.i91, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.end4.i_crit_edge, label %find_first_extent_bit_state.exit

land.lhs.true.i.if.end4.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4.i

if.end4.i:                                        ; preds = %land.lhs.true.i.if.end4.i_crit_edge, %while.cond.i.if.end4.i_crit_edge
  %call5.i = tail call ptr @rb_next(ptr noundef nonnull %node.0.i) #14
  %tobool6.not.i = icmp eq ptr %call5.i, null
  br i1 %tobool6.not.i, label %if.end4.i.find_first_extent_bit_state.exit.thread_crit_edge, label %if.end4.i.while.cond.i_crit_edge

if.end4.i.while.cond.i_crit_edge:                 ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond.i

if.end4.i.find_first_extent_bit_state.exit.thread_crit_edge: ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %find_first_extent_bit_state.exit.thread

find_first_extent_bit_state.exit.thread:          ; preds = %if.end4.i.find_first_extent_bit_state.exit.thread_crit_edge, %while.body18.i.i.i.i88.find_first_extent_bit_state.exit.thread_crit_edge, %if.end19.find_first_extent_bit_state.exit.thread_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %lock) #14
  br label %out

find_first_extent_bit_state.exit:                 ; preds = %land.lhs.true.i
  %end.i.le = getelementptr i8, ptr %node.0.i, i32 -8
  %add.ptr.le.i = getelementptr i8, ptr %node.0.i, i32 -16
  tail call void @_raw_spin_unlock(ptr noundef %lock) #14
  %tobool23.not = icmp eq ptr %add.ptr.le.i, null
  br i1 %tobool23.not, label %find_first_extent_bit_state.exit.out_crit_edge, label %land.lhs.true

find_first_extent_bit_state.exit.out_crit_edge:   ; preds = %find_first_extent_bit_state.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

land.lhs.true:                                    ; preds = %find_first_extent_bit_state.exit
  %39 = ptrtoint ptr %add.ptr.le.i to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %add.ptr.le.i, align 8
  %41 = ptrtoint ptr %start20 to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %start20, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %40, i64 %42)
  %cmp.not = icmp ugt i64 %40, %42
  br i1 %cmp.not, label %land.lhs.true.out_crit_edge, label %land.lhs.true27

land.lhs.true.out_crit_edge:                      ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

land.lhs.true27:                                  ; preds = %land.lhs.true
  %43 = ptrtoint ptr %end.i.le to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %end.i.le, align 8
  %len = getelementptr inbounds %struct.io_failure_record, ptr %15, i32 0, i32 2
  %45 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %len, align 8
  %add = add i64 %42, -1
  %sub = add i64 %add, %46
  call void @__sanitizer_cov_trace_cmp8(i64 %44, i64 %sub)
  %cmp29.not = icmp ult i64 %44, %sub
  br i1 %cmp29.not, label %land.lhs.true27.out_crit_edge, label %if.then31

land.lhs.true27.out_crit_edge:                    ; preds = %land.lhs.true27
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.then31:                                        ; preds = %land.lhs.true27
  %logical = getelementptr inbounds %struct.io_failure_record, ptr %15, i32 0, i32 3
  %47 = ptrtoint ptr %logical to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %logical, align 8
  %call33 = tail call i32 @btrfs_num_copies(ptr noundef %fs_info, i64 noundef %48, i64 noundef %46) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call33)
  %cmp34 = icmp sgt i32 %call33, 1
  br i1 %cmp34, label %if.then36, label %if.then31.out_crit_edge

if.then31.out_crit_edge:                          ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.then36:                                        ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #16
  %49 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %len, align 8
  %51 = ptrtoint ptr %logical to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %logical, align 8
  %failed_mirror = getelementptr inbounds %struct.io_failure_record, ptr %15, i32 0, i32 6
  %53 = ptrtoint ptr %failed_mirror to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %failed_mirror, align 8
  %call39 = tail call fastcc i32 @repair_io_failure(ptr noundef %fs_info, i64 noundef %ino, i64 noundef %start, i64 noundef %50, i64 noundef %52, ptr noundef %page, i32 noundef %pg_offset, i32 noundef %54)
  br label %out

out:                                              ; preds = %if.then36, %if.then31.out_crit_edge, %land.lhs.true27.out_crit_edge, %land.lhs.true.out_crit_edge, %find_first_extent_bit_state.exit.out_crit_edge, %find_first_extent_bit_state.exit.thread, %do.end16.out_crit_edge
  %call42 = tail call i32 @free_io_failure(ptr noundef %failure_tree, ptr noundef %io_tree, ptr noundef %15)
  br label %cleanup

cleanup:                                          ; preds = %out, %get_state_failrec.exit.cleanup_crit_edge, %get_state_failrec.exit.thread, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %private) #14
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_num_copies(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_free_io_failure_record(ptr noundef %inode, i64 noundef %start, i64 noundef %end) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %io_failure_tree = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 5
  %0 = ptrtoint ptr %io_failure_tree to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %io_failure_tree, align 8
  %cmp = icmp eq ptr %1, null
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %lock = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 5, i32 6
  tail call void @_raw_spin_lock(ptr noundef %lock) #14
  %2 = ptrtoint ptr %io_failure_tree to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %io_failure_tree, align 4
  %tobool.not78.i.i.i.i = icmp eq ptr %3, null
  br i1 %tobool.not78.i.i.i.i, label %if.end.while.end_crit_edge, label %if.end.while.body.i.i.i.i_crit_edge

if.end.while.body.i.i.i.i_crit_edge:              ; preds = %if.end
  br label %while.body.i.i.i.i

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body.i.i.i.i:                               ; preds = %if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge, %if.end.while.body.i.i.i.i_crit_edge
  %4 = phi ptr [ %10, %if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge ], [ %3, %if.end.while.body.i.i.i.i_crit_edge ]
  %add.ptr.i.i.i.i = getelementptr i8, ptr %4, i32 -16
  %5 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %add.ptr.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %6, i64 %start)
  %cmp.i.i.i.i = icmp ugt i64 %6, %start
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %if.else.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %while.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_left.i.i.i.i = getelementptr inbounds %struct.rb_node, ptr %4, i32 0, i32 2
  br label %if.end5.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %while.body.i.i.i.i
  %end.i.i.i.i = getelementptr i8, ptr %4, i32 -8
  %7 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %end.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %8, i64 %start)
  %cmp2.i.i.i.i = icmp ult i64 %8, %start
  br i1 %cmp2.i.i.i.i, label %if.then3.i.i.i.i, label %if.else.i.i.i.i.while.cond.i.preheader_crit_edge

if.else.i.i.i.i.while.cond.i.preheader_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond.i.preheader

if.then3.i.i.i.i:                                 ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_right.i.i.i.i = getelementptr inbounds %struct.rb_node, ptr %4, i32 0, i32 1
  br label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.then3.i.i.i.i, %if.then.i.i.i.i
  %n.1.i.i.i.i = phi ptr [ %rb_left.i.i.i.i, %if.then.i.i.i.i ], [ %rb_right.i.i.i.i, %if.then3.i.i.i.i ]
  %9 = ptrtoint ptr %n.1.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %n.1.i.i.i.i, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %10, null
  br i1 %tobool.not.i.i.i.i, label %if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge, label %if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge

if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge:     ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.i.i

if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge:       ; preds = %if.end5.i.i.i.i
  br label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge, %if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge
  %prev.183.i.i.i.i = phi ptr [ %call.i.i.i.i, %while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge ], [ %4, %if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge ]
  %end16.i.i.i.i = getelementptr i8, ptr %prev.183.i.i.i.i, i32 -8
  %11 = ptrtoint ptr %end16.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %end16.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %12, i64 %start)
  %cmp17.i.i.i.i = icmp ult i64 %12, %start
  br i1 %cmp17.i.i.i.i, label %while.body18.i.i.i.i, label %land.rhs.i.i.i.i.while.cond.i.preheader_crit_edge

land.rhs.i.i.i.i.while.cond.i.preheader_crit_edge: ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond.i.preheader

while.cond.i.preheader:                           ; preds = %land.rhs.i.i.i.i.while.cond.i.preheader_crit_edge, %if.else.i.i.i.i.while.cond.i.preheader_crit_edge
  %node.0.i.ph = phi ptr [ %prev.183.i.i.i.i, %land.rhs.i.i.i.i.while.cond.i.preheader_crit_edge ], [ %4, %if.else.i.i.i.i.while.cond.i.preheader_crit_edge ]
  br label %while.cond.i

while.body18.i.i.i.i:                             ; preds = %land.rhs.i.i.i.i
  %call.i.i.i.i = tail call ptr @rb_next(ptr noundef nonnull %prev.183.i.i.i.i) #14
  %tobool15.not.i.i.i.i = icmp eq ptr %call.i.i.i.i, null
  br i1 %tobool15.not.i.i.i.i, label %while.body18.i.i.i.i.while.end_crit_edge, label %while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge

while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge:  ; preds = %while.body18.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.i.i.i.i

while.body18.i.i.i.i.while.end_crit_edge:         ; preds = %while.body18.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.cond.i:                                     ; preds = %if.end4.i.while.cond.i_crit_edge, %while.cond.i.preheader
  %node.0.i = phi ptr [ %call5.i, %if.end4.i.while.cond.i_crit_edge ], [ %node.0.i.ph, %while.cond.i.preheader ]
  %end.i = getelementptr i8, ptr %node.0.i, i32 -8
  %13 = ptrtoint ptr %end.i to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %end.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %14, i64 %start)
  %cmp.not.i = icmp ult i64 %14, %start
  br i1 %cmp.not.i, label %while.cond.i.if.end4.i_crit_edge, label %land.lhs.true.i

while.cond.i.if.end4.i_crit_edge:                 ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4.i

land.lhs.true.i:                                  ; preds = %while.cond.i
  %state1.i = getelementptr i8, ptr %node.0.i, i32 68
  %15 = ptrtoint ptr %state1.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %state1.i, align 4
  %and.i = and i32 %16, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool2.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool2.not.i, label %land.lhs.true.i.if.end4.i_crit_edge, label %find_first_extent_bit_state.exit

land.lhs.true.i.if.end4.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4.i

if.end4.i:                                        ; preds = %land.lhs.true.i.if.end4.i_crit_edge, %while.cond.i.if.end4.i_crit_edge
  %call5.i = tail call ptr @rb_next(ptr noundef nonnull %node.0.i) #14
  %tobool6.not.i = icmp eq ptr %call5.i, null
  br i1 %tobool6.not.i, label %if.end4.i.while.end_crit_edge, label %if.end4.i.while.cond.i_crit_edge

if.end4.i.while.cond.i_crit_edge:                 ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond.i

if.end4.i.while.end_crit_edge:                    ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

find_first_extent_bit_state.exit:                 ; preds = %land.lhs.true.i
  %add.ptr.le.i = getelementptr i8, ptr %node.0.i, i32 -16
  %tobool.not31 = icmp eq ptr %add.ptr.le.i, null
  br i1 %tobool.not31, label %find_first_extent_bit_state.exit.while.end_crit_edge, label %find_first_extent_bit_state.exit.while.body_crit_edge

find_first_extent_bit_state.exit.while.body_crit_edge: ; preds = %find_first_extent_bit_state.exit
  br label %while.body

find_first_extent_bit_state.exit.while.end_crit_edge: ; preds = %find_first_extent_bit_state.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body:                                       ; preds = %cond.end.while.body_crit_edge, %find_first_extent_bit_state.exit.while.body_crit_edge
  %state.032 = phi ptr [ %add.ptr.i, %cond.end.while.body_crit_edge ], [ %add.ptr.le.i, %find_first_extent_bit_state.exit.while.body_crit_edge ]
  %17 = ptrtoint ptr %state.032 to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %state.032, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %18, i64 %end)
  %cmp3 = icmp ugt i64 %18, %end
  br i1 %cmp3, label %while.body.while.end_crit_edge, label %if.end5

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.end5:                                          ; preds = %while.body
  %end6 = getelementptr inbounds %struct.extent_state, ptr %state.032, i32 0, i32 1
  %19 = ptrtoint ptr %end6 to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %end6, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %20, i64 %end)
  %cmp7.not = icmp ugt i64 %20, %end
  br i1 %cmp7.not, label %cond.false, label %cond.end, !prof !319

cond.false:                                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.14, i32 noundef 2483) #18
  unreachable

cond.end:                                         ; preds = %if.end5
  %rb_node.i = getelementptr inbounds %struct.extent_state, ptr %state.032, i32 0, i32 2
  %call.i = tail call ptr @rb_next(ptr noundef %rb_node.i) #14
  %tobool.not.i = icmp eq ptr %call.i, null
  %add.ptr.i = getelementptr i8, ptr %call.i, i32 -16
  %failrec11 = getelementptr inbounds %struct.extent_state, ptr %state.032, i32 0, i32 6
  %21 = ptrtoint ptr %failrec11 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %failrec11, align 8
  tail call void @free_extent_state(ptr noundef nonnull %state.032)
  tail call void @kfree(ptr noundef %22) #14
  %tobool.not46 = icmp eq ptr %add.ptr.i, null
  %tobool.not = or i1 %tobool.not.i, %tobool.not46
  br i1 %tobool.not, label %cond.end.while.end_crit_edge, label %cond.end.while.body_crit_edge

cond.end.while.body_crit_edge:                    ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

cond.end.while.end_crit_edge:                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %cond.end.while.end_crit_edge, %while.body.while.end_crit_edge, %find_first_extent_bit_state.exit.while.end_crit_edge, %if.end4.i.while.end_crit_edge, %while.body18.i.i.i.i.while.end_crit_edge, %if.end.while.end_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %lock) #14
  br label %cleanup

cleanup:                                          ; preds = %while.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_repair_one_sector(ptr noundef %inode, ptr nocapture noundef readonly %failed_bio, i32 noundef %bio_offset, ptr noundef %page, i32 noundef %pgoff, i64 noundef %start, i32 noundef %failed_mirror, ptr nocapture noundef readonly %submit_bio_hook) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 33
  %2 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s_fs_info.i, align 16
  %io_tree = getelementptr i8, ptr %inode, i32 -736
  %io_failure_tree = getelementptr i8, ptr %inode, i32 -664
  %sectorsize_bits = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 168
  %4 = ptrtoint ptr %sectorsize_bits to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sectorsize_bits, align 8
  %shr = lshr i32 %bio_offset, %5
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_repair_one_sector.__UNIQUE_ID_ddebug966, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_repair_one_sector, %if.then)) #14
          to label %do.body7 [label %if.then], !srcloc !326

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %3, ptr noundef nonnull @.str.18, i64 noundef %start) #17
  br label %do.body7

do.body7:                                         ; preds = %if.then, %entry
  %bi_opf = getelementptr inbounds %struct.bio, ptr %failed_bio, i32 0, i32 2
  %6 = ptrtoint ptr %bi_opf to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %bi_opf, align 8
  %and = and i32 %7, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and)
  %cmp = icmp eq i32 %and, 1
  br i1 %cmp, label %do.body15, label %do.end23, !prof !319

do.body15:                                        ; preds = %do.body7
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2647, 0\0A.popsection", ""() #14, !srcloc !362
  unreachable

do.end23:                                         ; preds = %do.body7
  %call24 = tail call fastcc ptr @btrfs_get_io_failure_record(ptr noundef %inode, i64 noundef %start)
  %cmp.i = icmp ugt ptr %call24, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then26, label %if.end28

if.then26:                                        ; preds = %do.end23
  call void @__sanitizer_cov_trace_pc() #16
  %8 = ptrtoint ptr %call24 to i32
  br label %cleanup

if.end28:                                         ; preds = %do.end23
  %call29 = tail call fastcc zeroext i1 @btrfs_check_repairable(ptr noundef %inode, ptr noundef %call24, i32 noundef %failed_mirror)
  br i1 %call29, label %if.end32, label %if.then30

if.then30:                                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  %call31 = tail call i32 @free_io_failure(ptr noundef %io_failure_tree, ptr noundef %io_tree, ptr noundef %call24)
  br label %cleanup

if.end32:                                         ; preds = %if.end28
  %call.i = tail call ptr @bio_alloc_bioset(i32 noundef 3136, i16 noundef zeroext 1, ptr noundef nonnull @btrfs_bioset) #14
  %add.ptr.i.i = getelementptr i8, ptr %call.i, i32 -96
  %9 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 96)
  %bi_opf35 = getelementptr inbounds %struct.bio, ptr %call.i, i32 0, i32 2
  %10 = ptrtoint ptr %bi_opf35 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %bi_opf35, align 8
  %bi_end_io = getelementptr inbounds %struct.bio, ptr %failed_bio, i32 0, i32 10
  %11 = ptrtoint ptr %bi_end_io to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %bi_end_io, align 8
  %bi_end_io36 = getelementptr inbounds %struct.bio, ptr %call.i, i32 0, i32 10
  %13 = ptrtoint ptr %bi_end_io36 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %12, ptr %bi_end_io36, align 8
  %logical = getelementptr inbounds %struct.io_failure_record, ptr %call24, i32 0, i32 3
  %14 = ptrtoint ptr %logical to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %logical, align 8
  %shr37 = lshr i64 %15, 9
  %bi_iter = getelementptr inbounds %struct.bio, ptr %call.i, i32 0, i32 8
  %16 = ptrtoint ptr %bi_iter to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %shr37, ptr %bi_iter, align 8
  %bi_private = getelementptr inbounds %struct.bio, ptr %failed_bio, i32 0, i32 11
  %17 = ptrtoint ptr %bi_private to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %bi_private, align 4
  %bi_private38 = getelementptr inbounds %struct.bio, ptr %call.i, i32 0, i32 11
  %19 = ptrtoint ptr %bi_private38 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %18, ptr %bi_private38, align 4
  %csum = getelementptr i8, ptr %failed_bio, i32 -88
  %20 = ptrtoint ptr %csum to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %csum, align 8
  %tobool39.not = icmp eq ptr %21, null
  br i1 %tobool39.not, label %if.end32.if.end45_crit_edge, label %if.then40

if.end32.if.end45_crit_edge:                      ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end45

if.then40:                                        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #16
  %csum_size41 = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 169
  %22 = ptrtoint ptr %csum_size41 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %csum_size41, align 4
  %csum_inline = getelementptr i8, ptr %call.i, i32 -84
  %csum42 = getelementptr i8, ptr %call.i, i32 -88
  %24 = ptrtoint ptr %csum42 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %csum_inline, ptr %csum42, align 8
  %25 = ptrtoint ptr %csum to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %csum, align 8
  %mul = mul i32 %23, %shr
  %add.ptr = getelementptr i8, ptr %26, i32 %mul
  %27 = call ptr @memcpy(ptr %csum_inline, ptr %add.ptr, i32 %23)
  br label %if.end45

if.end45:                                         ; preds = %if.then40, %if.end32.if.end45_crit_edge
  %len = getelementptr inbounds %struct.io_failure_record, ptr %call24, i32 0, i32 2
  %28 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %len, align 8
  %conv = trunc i64 %29 to i32
  %call46 = tail call i32 @bio_add_page(ptr noundef %call.i, ptr noundef %page, i32 noundef %conv, i32 noundef %pgoff) #14
  %iter = getelementptr i8, ptr %call.i, i32 -20
  %30 = call ptr @memcpy(ptr %iter, ptr %bi_iter, i32 20)
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_repair_one_sector.__UNIQUE_ID_ddebug967, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_repair_one_sector, %if.then60)) #14
          to label %do.end65 [label %if.then60], !srcloc !326

if.then60:                                        ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #16
  %31 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i124 = getelementptr inbounds %struct.super_block, ptr %32, i32 0, i32 33
  %33 = ptrtoint ptr %s_fs_info.i124 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %s_fs_info.i124, align 16
  %this_mirror = getelementptr inbounds %struct.io_failure_record, ptr %call24, i32 0, i32 5
  %35 = ptrtoint ptr %this_mirror to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %this_mirror, align 4
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %34, ptr noundef nonnull @.str.20, i32 noundef %36) #17
  br label %do.end65

do.end65:                                         ; preds = %if.then60, %if.end45
  %this_mirror66 = getelementptr inbounds %struct.io_failure_record, ptr %call24, i32 0, i32 5
  %37 = ptrtoint ptr %this_mirror66 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %this_mirror66, align 4
  %bio_flags = getelementptr inbounds %struct.io_failure_record, ptr %call24, i32 0, i32 4
  %39 = ptrtoint ptr %bio_flags to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %bio_flags, align 8
  %call67 = tail call zeroext i8 %submit_bio_hook(ptr noundef %inode, ptr noundef %call.i, i32 noundef %38, i32 noundef %40) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %call67)
  %tobool68.not = icmp eq i8 %call67, 0
  br i1 %tobool68.not, label %do.end65.if.end71_crit_edge, label %if.then69

do.end65.if.end71_crit_edge:                      ; preds = %do.end65
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end71

if.then69:                                        ; preds = %do.end65
  call void @__sanitizer_cov_trace_pc() #16
  %call70 = tail call i32 @free_io_failure(ptr noundef %io_failure_tree, ptr noundef %io_tree, ptr noundef %call24)
  tail call void @bio_put(ptr noundef %call.i) #14
  br label %if.end71

if.end71:                                         ; preds = %if.then69, %do.end65.if.end71_crit_edge
  %call72 = tail call i32 @blk_status_to_errno(i8 noundef zeroext %call67) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end71, %if.then30, %if.then26
  %retval.0 = phi i32 [ %8, %if.then26 ], [ %call72, %if.end71 ], [ -5, %if.then30 ]
  ret i32 %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @btrfs_printk(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @btrfs_get_io_failure_record(ptr noundef %inode, i64 noundef %start) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 33
  %2 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s_fs_info.i, align 16
  %io_failure_tree = getelementptr i8, ptr %inode, i32 -664
  %io_tree = getelementptr i8, ptr %inode, i32 -736
  %extent_tree = getelementptr i8, ptr %inode, i32 -796
  %sectorsize4 = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 167
  %4 = ptrtoint ptr %sectorsize4 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sectorsize4, align 4
  %lock.i = getelementptr i8, ptr %inode, i32 -636
  tail call void @_raw_spin_lock(ptr noundef %lock.i) #14
  %6 = ptrtoint ptr %io_failure_tree to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %io_failure_tree, align 4
  %tobool.not78.i.i.i.i = icmp eq ptr %7, null
  br i1 %tobool.not78.i.i.i.i, label %entry.get_state_failrec.exit.thread_crit_edge, label %entry.while.body.i.i.i.i_crit_edge

entry.while.body.i.i.i.i_crit_edge:               ; preds = %entry
  br label %while.body.i.i.i.i

entry.get_state_failrec.exit.thread_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_state_failrec.exit.thread

while.body.i.i.i.i:                               ; preds = %if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge, %entry.while.body.i.i.i.i_crit_edge
  %8 = phi ptr [ %14, %if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge ], [ %7, %entry.while.body.i.i.i.i_crit_edge ]
  %add.ptr.i.i.i.i = getelementptr i8, ptr %8, i32 -16
  %9 = ptrtoint ptr %add.ptr.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %add.ptr.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %10, i64 %start)
  %cmp.i.i.i.i = icmp ugt i64 %10, %start
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %if.else.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %while.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_left.i.i.i.i = getelementptr inbounds %struct.rb_node, ptr %8, i32 0, i32 2
  br label %if.end5.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %while.body.i.i.i.i
  %end.i.i.i.i = getelementptr i8, ptr %8, i32 -8
  %11 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %end.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %12, i64 %start)
  %cmp2.i.i.i.i = icmp ult i64 %12, %start
  br i1 %cmp2.i.i.i.i, label %if.then3.i.i.i.i, label %if.else.i.i.i.i.if.end.i_crit_edge

if.else.i.i.i.i.if.end.i_crit_edge:               ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

if.then3.i.i.i.i:                                 ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %rb_right.i.i.i.i = getelementptr inbounds %struct.rb_node, ptr %8, i32 0, i32 1
  br label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.then3.i.i.i.i, %if.then.i.i.i.i
  %n.1.i.i.i.i = phi ptr [ %rb_left.i.i.i.i, %if.then.i.i.i.i ], [ %rb_right.i.i.i.i, %if.then3.i.i.i.i ]
  %13 = ptrtoint ptr %n.1.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %n.1.i.i.i.i, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %14, null
  br i1 %tobool.not.i.i.i.i, label %if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge, label %if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge

if.end5.i.i.i.i.while.body.i.i.i.i_crit_edge:     ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.i.i

if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge:       ; preds = %if.end5.i.i.i.i
  br label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge, %if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge
  %prev.183.i.i.i.i = phi ptr [ %call.i.i.i.i, %while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge ], [ %8, %if.end5.i.i.i.i.land.rhs.i.i.i.i_crit_edge ]
  %end16.i.i.i.i = getelementptr i8, ptr %prev.183.i.i.i.i, i32 -8
  %15 = ptrtoint ptr %end16.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %end16.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %16, i64 %start)
  %cmp17.i.i.i.i = icmp ult i64 %16, %start
  br i1 %cmp17.i.i.i.i, label %while.body18.i.i.i.i, label %land.rhs.i.i.i.i.if.end.i_crit_edge

land.rhs.i.i.i.i.if.end.i_crit_edge:              ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

while.body18.i.i.i.i:                             ; preds = %land.rhs.i.i.i.i
  %call.i.i.i.i = tail call ptr @rb_next(ptr noundef nonnull %prev.183.i.i.i.i) #14
  %tobool15.not.i.i.i.i = icmp eq ptr %call.i.i.i.i, null
  br i1 %tobool15.not.i.i.i.i, label %while.body18.i.i.i.i.get_state_failrec.exit.thread_crit_edge, label %while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge

while.body18.i.i.i.i.land.rhs.i.i.i.i_crit_edge:  ; preds = %while.body18.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.i.i.i.i

while.body18.i.i.i.i.get_state_failrec.exit.thread_crit_edge: ; preds = %while.body18.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_state_failrec.exit.thread

if.end.i:                                         ; preds = %land.rhs.i.i.i.i.if.end.i_crit_edge, %if.else.i.i.i.i.if.end.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %prev.183.i.i.i.i, %land.rhs.i.i.i.i.if.end.i_crit_edge ], [ %8, %if.else.i.i.i.i.if.end.i_crit_edge ]
  %add.ptr.i156 = getelementptr i8, ptr %retval.0.i.i.i, i32 -16
  %17 = ptrtoint ptr %add.ptr.i156 to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %add.ptr.i156, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %18, i64 %start)
  %cmp.not.i = icmp eq i64 %18, %start
  br i1 %cmp.not.i, label %get_state_failrec.exit, label %if.end.i.get_state_failrec.exit.thread_crit_edge

if.end.i.get_state_failrec.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_state_failrec.exit.thread

get_state_failrec.exit.thread:                    ; preds = %if.end.i.get_state_failrec.exit.thread_crit_edge, %while.body18.i.i.i.i.get_state_failrec.exit.thread_crit_edge, %entry.get_state_failrec.exit.thread_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %lock.i) #14
  br label %if.end13

get_state_failrec.exit:                           ; preds = %if.end.i
  %failrec6.i = getelementptr i8, ptr %retval.0.i.i.i, i32 72
  %19 = ptrtoint ptr %failrec6.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %failrec6.i, align 8
  tail call void @_raw_spin_unlock(ptr noundef %lock.i) #14
  %cmp.i = icmp ugt ptr %20, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %get_state_failrec.exit.if.end13_crit_edge, label %do.body

get_state_failrec.exit.if.end13_crit_edge:        ; preds = %get_state_failrec.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end13

do.body:                                          ; preds = %get_state_failrec.exit
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_get_io_failure_record.__UNIQUE_ID_ddebug962, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_get_io_failure_record, %if.then10)) #14
          to label %cleanup [label %if.then10], !srcloc !326

if.then10:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  %logical11 = getelementptr inbounds %struct.io_failure_record, ptr %20, i32 0, i32 3
  %21 = ptrtoint ptr %logical11 to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %logical11, align 8
  %start12 = getelementptr inbounds %struct.io_failure_record, ptr %20, i32 0, i32 1
  %23 = ptrtoint ptr %start12 to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %start12, align 8
  %len = getelementptr inbounds %struct.io_failure_record, ptr %20, i32 0, i32 2
  %25 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %len, align 8
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %3, ptr noundef nonnull @.str.71, i64 noundef %22, i64 noundef %24, i64 noundef %26) #17
  br label %cleanup

if.end13:                                         ; preds = %get_state_failrec.exit.if.end13_crit_edge, %get_state_failrec.exit.thread
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %27 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %27, i32 noundef 3392, i32 noundef 48) #20
  %tobool15.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool15.not, label %if.end13.cleanup_crit_edge, label %if.end18

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end18:                                         ; preds = %if.end13
  %start19 = getelementptr inbounds %struct.io_failure_record, ptr %call7.i.i, i32 0, i32 1
  %28 = ptrtoint ptr %start19 to i32
  call void @__asan_store8_noabort(i32 %28)
  store i64 %start, ptr %start19, align 8
  %conv = zext i32 %5 to i64
  %len20 = getelementptr inbounds %struct.io_failure_record, ptr %call7.i.i, i32 0, i32 2
  %29 = ptrtoint ptr %len20 to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %conv, ptr %len20, align 8
  %this_mirror = getelementptr inbounds %struct.io_failure_record, ptr %call7.i.i, i32 0, i32 5
  %30 = ptrtoint ptr %this_mirror to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 0, ptr %this_mirror, align 4
  %bio_flags = getelementptr inbounds %struct.io_failure_record, ptr %call7.i.i, i32 0, i32 4
  %31 = ptrtoint ptr %bio_flags to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 0, ptr %bio_flags, align 8
  %lock = getelementptr i8, ptr %inode, i32 -780
  tail call void @_raw_read_lock(ptr noundef %lock) #14
  %call22 = tail call ptr @lookup_extent_mapping(ptr noundef %extent_tree, i64 noundef %start, i64 noundef %conv) #14
  %tobool23.not = icmp eq ptr %call22, null
  br i1 %tobool23.not, label %if.then24, label %if.end27

if.then24:                                        ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @_raw_read_unlock(ptr noundef %lock) #14
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #14
  br label %cleanup

if.end27:                                         ; preds = %if.end18
  %start28 = getelementptr inbounds %struct.extent_map, ptr %call22, i32 0, i32 1
  %32 = ptrtoint ptr %start28 to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %start28, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %33, i64 %start)
  %cmp = icmp ugt i64 %33, %start
  br i1 %cmp, label %if.end27.if.then38_crit_edge, label %lor.lhs.false

if.end27.if.then38_crit_edge:                     ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then38

lor.lhs.false:                                    ; preds = %if.end27
  %len31 = getelementptr inbounds %struct.extent_map, ptr %call22, i32 0, i32 2
  %34 = ptrtoint ptr %len31 to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %len31, align 8
  %add = add i64 %35, %33
  call void @__sanitizer_cov_trace_cmp8(i64 %add, i64 %start)
  %cmp32.not = icmp ugt i64 %add, %start
  br i1 %cmp32.not, label %if.end40, label %lor.lhs.false.if.then38_crit_edge

lor.lhs.false.if.then38_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then38

if.then38:                                        ; preds = %lor.lhs.false.if.then38_crit_edge, %if.end27.if.then38_crit_edge
  tail call void @free_extent_map(ptr noundef nonnull %call22) #14
  tail call void @_raw_read_unlock(ptr noundef %lock) #14
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #14
  br label %cleanup

if.end40:                                         ; preds = %lor.lhs.false
  tail call void @_raw_read_unlock(ptr noundef %lock) #14
  %36 = ptrtoint ptr %start28 to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %start28, align 8
  %sub = sub i64 %start, %37
  %block_start = getelementptr inbounds %struct.extent_map, ptr %call22, i32 0, i32 8
  %38 = ptrtoint ptr %block_start to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %block_start, align 8
  %add42 = add i64 %sub, %39
  %flags = getelementptr inbounds %struct.extent_map, ptr %call22, i32 0, i32 11
  %40 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %flags, align 4
  %42 = and i32 %41, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool44.not = icmp eq i32 %42, 0
  br i1 %tobool44.not, label %if.end40.do.body50_crit_edge, label %if.then45

if.end40.do.body50_crit_edge:                     ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body50

if.then45:                                        ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #16
  %compress_type = getelementptr inbounds %struct.extent_map, ptr %call22, i32 0, i32 14
  %43 = ptrtoint ptr %compress_type to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %compress_type, align 4
  %shl.i = shl i32 %44, 16
  %or.i = or i32 %shl.i, 1
  %45 = ptrtoint ptr %bio_flags to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %or.i, ptr %bio_flags, align 8
  br label %do.body50

do.body50:                                        ; preds = %if.then45, %if.end40.do.body50_crit_edge
  %logical.0 = phi i64 [ %39, %if.then45 ], [ %add42, %if.end40.do.body50_crit_edge ]
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_get_io_failure_record.__UNIQUE_ID_ddebug963, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_get_io_failure_record, %if.then62)) #14
          to label %do.end66 [label %if.then62], !srcloc !326

if.then62:                                        ; preds = %do.body50
  call void @__sanitizer_cov_trace_pc() #16
  %46 = ptrtoint ptr %len20 to i32
  call void @__asan_load8_noabort(i32 %46)
  %47 = load i64, ptr %len20, align 8
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %3, ptr noundef nonnull @.str.73, i64 noundef %logical.0, i64 noundef %start, i64 noundef %47) #17
  br label %do.end66

do.end66:                                         ; preds = %if.then62, %do.body50
  %logical67 = getelementptr inbounds %struct.io_failure_record, ptr %call7.i.i, i32 0, i32 3
  %48 = ptrtoint ptr %logical67 to i32
  call void @__asan_store8_noabort(i32 %48)
  store i64 %logical.0, ptr %logical67, align 8
  tail call void @free_extent_map(ptr noundef nonnull %call22) #14
  %add69 = add i64 %start, -1
  %sub70 = add i64 %add69, %conv
  %call.i = tail call i32 @set_extent_bit(ptr noundef %io_failure_tree, i64 noundef %start, i64 noundef %sub70, i32 noundef 5, i32 noundef 0, ptr noundef null, ptr noundef null, i32 noundef 3136, ptr noundef null) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i)
  %cmp72 = icmp sgt i32 %call.i, -1
  br i1 %cmp72, label %if.then74, label %if.then82

if.then74:                                        ; preds = %do.end66
  tail call void @_raw_spin_lock(ptr noundef %lock.i) #14
  %49 = ptrtoint ptr %io_failure_tree to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %io_failure_tree, align 4
  %tobool.not78.i.i.i.i158 = icmp eq ptr %50, null
  br i1 %tobool.not78.i.i.i.i158, label %if.then74.set_state_failrec.exit_crit_edge, label %if.then74.while.body.i.i.i.i161_crit_edge

if.then74.while.body.i.i.i.i161_crit_edge:        ; preds = %if.then74
  br label %while.body.i.i.i.i161

if.then74.set_state_failrec.exit_crit_edge:       ; preds = %if.then74
  call void @__sanitizer_cov_trace_pc() #16
  br label %set_state_failrec.exit

while.body.i.i.i.i161:                            ; preds = %if.end5.i.i.i.i171.while.body.i.i.i.i161_crit_edge, %if.then74.while.body.i.i.i.i161_crit_edge
  %51 = phi ptr [ %57, %if.end5.i.i.i.i171.while.body.i.i.i.i161_crit_edge ], [ %50, %if.then74.while.body.i.i.i.i161_crit_edge ]
  %add.ptr.i.i.i.i159 = getelementptr i8, ptr %51, i32 -16
  %52 = ptrtoint ptr %add.ptr.i.i.i.i159 to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %add.ptr.i.i.i.i159, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %53, i64 %start)
  %cmp.i.i.i.i160 = icmp ugt i64 %53, %start
  br i1 %cmp.i.i.i.i160, label %if.then.i.i.i.i163, label %if.else.i.i.i.i166

if.then.i.i.i.i163:                               ; preds = %while.body.i.i.i.i161
  call void @__sanitizer_cov_trace_pc() #16
  %rb_left.i.i.i.i162 = getelementptr inbounds %struct.rb_node, ptr %51, i32 0, i32 2
  br label %if.end5.i.i.i.i171

if.else.i.i.i.i166:                               ; preds = %while.body.i.i.i.i161
  %end.i.i.i.i164 = getelementptr i8, ptr %51, i32 -8
  %54 = ptrtoint ptr %end.i.i.i.i164 to i32
  call void @__asan_load8_noabort(i32 %54)
  %55 = load i64, ptr %end.i.i.i.i164, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %55, i64 %start)
  %cmp2.i.i.i.i165 = icmp ult i64 %55, %start
  br i1 %cmp2.i.i.i.i165, label %if.then3.i.i.i.i168, label %if.else.i.i.i.i166.if.end.i182_crit_edge

if.else.i.i.i.i166.if.end.i182_crit_edge:         ; preds = %if.else.i.i.i.i166
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i182

if.then3.i.i.i.i168:                              ; preds = %if.else.i.i.i.i166
  call void @__sanitizer_cov_trace_pc() #16
  %rb_right.i.i.i.i167 = getelementptr inbounds %struct.rb_node, ptr %51, i32 0, i32 1
  br label %if.end5.i.i.i.i171

if.end5.i.i.i.i171:                               ; preds = %if.then3.i.i.i.i168, %if.then.i.i.i.i163
  %n.1.i.i.i.i169 = phi ptr [ %rb_left.i.i.i.i162, %if.then.i.i.i.i163 ], [ %rb_right.i.i.i.i167, %if.then3.i.i.i.i168 ]
  %56 = ptrtoint ptr %n.1.i.i.i.i169 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %n.1.i.i.i.i169, align 4
  %tobool.not.i.i.i.i170 = icmp eq ptr %57, null
  br i1 %tobool.not.i.i.i.i170, label %if.end5.i.i.i.i171.land.rhs.i.i.i.i175_crit_edge, label %if.end5.i.i.i.i171.while.body.i.i.i.i161_crit_edge

if.end5.i.i.i.i171.while.body.i.i.i.i161_crit_edge: ; preds = %if.end5.i.i.i.i171
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.i.i161

if.end5.i.i.i.i171.land.rhs.i.i.i.i175_crit_edge: ; preds = %if.end5.i.i.i.i171
  br label %land.rhs.i.i.i.i175

land.rhs.i.i.i.i175:                              ; preds = %while.body18.i.i.i.i178.land.rhs.i.i.i.i175_crit_edge, %if.end5.i.i.i.i171.land.rhs.i.i.i.i175_crit_edge
  %prev.183.i.i.i.i172 = phi ptr [ %call.i.i.i.i176, %while.body18.i.i.i.i178.land.rhs.i.i.i.i175_crit_edge ], [ %51, %if.end5.i.i.i.i171.land.rhs.i.i.i.i175_crit_edge ]
  %end16.i.i.i.i173 = getelementptr i8, ptr %prev.183.i.i.i.i172, i32 -8
  %58 = ptrtoint ptr %end16.i.i.i.i173 to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %end16.i.i.i.i173, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %59, i64 %start)
  %cmp17.i.i.i.i174 = icmp ult i64 %59, %start
  br i1 %cmp17.i.i.i.i174, label %while.body18.i.i.i.i178, label %land.rhs.i.i.i.i175.if.end.i182_crit_edge

land.rhs.i.i.i.i175.if.end.i182_crit_edge:        ; preds = %land.rhs.i.i.i.i175
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i182

while.body18.i.i.i.i178:                          ; preds = %land.rhs.i.i.i.i175
  %call.i.i.i.i176 = tail call ptr @rb_next(ptr noundef nonnull %prev.183.i.i.i.i172) #14
  %tobool15.not.i.i.i.i177 = icmp eq ptr %call.i.i.i.i176, null
  br i1 %tobool15.not.i.i.i.i177, label %while.body18.i.i.i.i178.set_state_failrec.exit_crit_edge, label %while.body18.i.i.i.i178.land.rhs.i.i.i.i175_crit_edge

while.body18.i.i.i.i178.land.rhs.i.i.i.i175_crit_edge: ; preds = %while.body18.i.i.i.i178
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.i.i.i.i175

while.body18.i.i.i.i178.set_state_failrec.exit_crit_edge: ; preds = %while.body18.i.i.i.i178
  call void @__sanitizer_cov_trace_pc() #16
  br label %set_state_failrec.exit

if.end.i182:                                      ; preds = %land.rhs.i.i.i.i175.if.end.i182_crit_edge, %if.else.i.i.i.i166.if.end.i182_crit_edge
  %retval.0.i.i.i179 = phi ptr [ %prev.183.i.i.i.i172, %land.rhs.i.i.i.i175.if.end.i182_crit_edge ], [ %51, %if.else.i.i.i.i166.if.end.i182_crit_edge ]
  %add.ptr.i180 = getelementptr i8, ptr %retval.0.i.i.i179, i32 -16
  %60 = ptrtoint ptr %add.ptr.i180 to i32
  call void @__asan_load8_noabort(i32 %60)
  %61 = load i64, ptr %add.ptr.i180, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %61, i64 %start)
  %cmp.not.i181 = icmp eq i64 %61, %start
  br i1 %cmp.not.i181, label %if.end3.i, label %if.end.i182.set_state_failrec.exit_crit_edge

if.end.i182.set_state_failrec.exit_crit_edge:     ; preds = %if.end.i182
  call void @__sanitizer_cov_trace_pc() #16
  br label %set_state_failrec.exit

if.end3.i:                                        ; preds = %if.end.i182
  call void @__sanitizer_cov_trace_pc() #16
  %failrec4.i = getelementptr i8, ptr %retval.0.i.i.i179, i32 72
  %62 = ptrtoint ptr %failrec4.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %call7.i.i, ptr %failrec4.i, align 8
  br label %set_state_failrec.exit

set_state_failrec.exit:                           ; preds = %if.end3.i, %if.end.i182.set_state_failrec.exit_crit_edge, %while.body18.i.i.i.i178.set_state_failrec.exit_crit_edge, %if.then74.set_state_failrec.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %lock.i) #14
  %call.i183 = tail call i32 @set_extent_bit(ptr noundef %io_tree, i64 noundef %start, i64 noundef %sub70, i32 noundef 1024, i32 noundef 0, ptr noundef null, ptr noundef null, i32 noundef 3136, ptr noundef null) #14
  br label %cleanup

if.then82:                                        ; preds = %do.end66
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #14
  %63 = inttoptr i32 %call.i to ptr
  br label %cleanup

cleanup:                                          ; preds = %if.then82, %set_state_failrec.exit, %if.then38, %if.then24, %if.end13.cleanup_crit_edge, %if.then10, %do.body
  %retval.0 = phi ptr [ %call7.i.i, %set_state_failrec.exit ], [ %63, %if.then82 ], [ inttoptr (i32 -5 to ptr), %if.then38 ], [ inttoptr (i32 -5 to ptr), %if.then24 ], [ %20, %if.then10 ], [ %20, %do.body ], [ inttoptr (i32 -12 to ptr), %if.end13.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @btrfs_check_repairable(ptr nocapture noundef readonly %inode, ptr nocapture noundef %failrec, i32 noundef %failed_mirror) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 33
  %2 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s_fs_info.i, align 16
  %logical = getelementptr inbounds %struct.io_failure_record, ptr %failrec, i32 0, i32 3
  %4 = ptrtoint ptr %logical to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %logical, align 8
  %len = getelementptr inbounds %struct.io_failure_record, ptr %failrec, i32 0, i32 2
  %6 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %len, align 8
  %call1 = tail call i32 @btrfs_num_copies(ptr noundef %3, i64 noundef %5, i64 noundef %7) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call1)
  %cmp = icmp eq i32 %call1, 1
  br i1 %cmp, label %do.body, label %if.end6

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_check_repairable.__UNIQUE_ID_ddebug964, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_check_repairable, %if.then5)) #14
          to label %cleanup [label %if.then5], !srcloc !326

if.then5:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  %this_mirror = getelementptr inbounds %struct.io_failure_record, ptr %failrec, i32 0, i32 5
  %8 = ptrtoint ptr %this_mirror to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %this_mirror, align 4
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %3, ptr noundef nonnull @.str.76, i32 noundef 1, i32 noundef %9, i32 noundef %failed_mirror) #17
  br label %cleanup

if.end6:                                          ; preds = %entry
  %10 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %len, align 8
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 167
  %12 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %sectorsize, align 4
  %conv = zext i32 %13 to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %11, i64 %conv)
  %cmp8 = icmp eq i64 %11, %conv
  br i1 %cmp8, label %cond.end, label %cond.false, !prof !322

cond.false:                                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.77, i32 noundef 2602) #18
  unreachable

cond.end:                                         ; preds = %if.end6
  %failed_mirror16 = getelementptr inbounds %struct.io_failure_record, ptr %failrec, i32 0, i32 6
  %14 = ptrtoint ptr %failed_mirror16 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %failed_mirror, ptr %failed_mirror16, align 8
  %this_mirror17 = getelementptr inbounds %struct.io_failure_record, ptr %failrec, i32 0, i32 5
  %15 = ptrtoint ptr %this_mirror17 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %this_mirror17, align 4
  %inc = add i32 %16, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %inc, i32 %failed_mirror)
  %cmp19 = icmp eq i32 %inc, %failed_mirror
  %inc23 = add i32 %16, 2
  %spec.select = select i1 %cmp19, i32 %inc23, i32 %inc
  %17 = ptrtoint ptr %this_mirror17 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %spec.select, ptr %this_mirror17, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %spec.select, i32 %call1)
  %cmp26 = icmp sgt i32 %spec.select, %call1
  br i1 %cmp26, label %do.body29, label %cond.end.cleanup_crit_edge

cond.end.cleanup_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.body29:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_check_repairable.__UNIQUE_ID_ddebug965, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_check_repairable, %if.then41)) #14
          to label %cleanup [label %if.then41], !srcloc !326

if.then41:                                        ; preds = %do.body29
  call void @__sanitizer_cov_trace_pc() #16
  %18 = ptrtoint ptr %this_mirror17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %this_mirror17, align 4
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %3, ptr noundef nonnull @.str.79, i32 noundef %call1, i32 noundef %19, i32 noundef %failed_mirror) #17
  br label %cleanup

cleanup:                                          ; preds = %if.then41, %do.body29, %cond.end.cleanup_crit_edge, %if.then5, %do.body
  %retval.0 = phi i1 [ false, %if.then5 ], [ false, %if.then41 ], [ true, %cond.end.cleanup_crit_edge ], [ false, %do.body ], [ false, %do.body29 ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @btrfs_bio_alloc(i32 noundef %nr_iovecs) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = add i32 %nr_iovecs, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %0)
  %1 = icmp ult i32 %0, 256
  br i1 %1, label %cond.end, label %cond.false, !prof !322

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.23, i32 noundef 3145) #18
  unreachable

cond.end:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %conv = trunc i32 %nr_iovecs to i16
  %call = tail call ptr @bio_alloc_bioset(i32 noundef 3136, i16 noundef zeroext %conv, ptr noundef nonnull @btrfs_bioset) #14
  %add.ptr.i = getelementptr i8, ptr %call, i32 -96
  %2 = call ptr @memset(ptr %add.ptr.i, i32 0, i32 96)
  ret ptr %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bio_add_page(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bio_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @end_extent_writepage(ptr noundef %page, i32 noundef %err, i64 noundef %start, i64 noundef %end) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err)
  %cmp = icmp eq i32 %err, 0
  %tobool.not = icmp eq ptr %page, null
  br i1 %tobool.not, label %entry.cond.false_crit_edge, label %land.rhs, !prof !319

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.false

land.rhs:                                         ; preds = %entry
  %mapping = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %0 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mapping, align 4
  %tobool1.not = icmp eq ptr %1, null
  br i1 %tobool1.not, label %land.rhs.cond.false_crit_edge, label %cond.end, !prof !319

land.rhs.cond.false_crit_edge:                    ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.false

cond.false:                                       ; preds = %land.rhs.cond.false_crit_edge, %entry.cond.false_crit_edge
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.21, i32 noundef 2800) #18
  unreachable

cond.end:                                         ; preds = %land.rhs
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %add.ptr.i = getelementptr i8, ptr %3, i32 -864
  tail call void @btrfs_writepage_endio_finish_ordered(ptr noundef %add.ptr.i, ptr noundef nonnull %page, i64 noundef %start, i64 noundef %end, i1 noundef zeroext %cmp) #14
  br i1 %cmp, label %cond.end.if.end_crit_edge, label %if.then

cond.end.if.end_crit_edge:                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %cond.end
  %add = sub i64 1, %start
  %sub = add i64 %add, %end
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %sub)
  %cmp8 = icmp ult i64 %sub, 4294967296
  br i1 %cmp8, label %cond.end17, label %cond.false16, !prof !322

cond.false16:                                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.22, i32 noundef 2808) #18
  unreachable

cond.end17:                                       ; preds = %if.then
  %4 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %add.ptr.i, align 8
  %fs_info7 = getelementptr inbounds %struct.btrfs_root, ptr %5, i32 0, i32 8
  %6 = ptrtoint ptr %fs_info7 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %fs_info7, align 8
  %conv = trunc i64 %sub to i32
  tail call void @btrfs_page_clear_uptodate(ptr noundef %7, ptr noundef nonnull %page, i64 noundef %start, i32 noundef %conv) #14
  tail call void @btrfs_page_set_error(ptr noundef %7, ptr noundef nonnull %page, i64 noundef %start, i32 noundef %conv) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err)
  %cmp20 = icmp slt i32 %err, 0
  %spec.select = select i1 %cmp20, i32 %err, i32 -5
  %8 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %mapping, align 4
  tail call void @__filemap_set_wb_err(ptr noundef %9, i32 noundef %spec.select) #14
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %9, align 4
  %tobool4.not.i = icmp eq ptr %11, null
  br i1 %tobool4.not.i, label %cond.end17.mapping_set_error.exit_crit_edge, label %if.then5.i

cond.end17.mapping_set_error.exit_crit_edge:      ; preds = %cond.end17
  call void @__sanitizer_cov_trace_pc() #16
  br label %mapping_set_error.exit

if.then5.i:                                       ; preds = %cond.end17
  call void @__sanitizer_cov_trace_pc() #16
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %11, i32 0, i32 8
  %12 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %i_sb.i, align 4
  %s_wb_err.i = getelementptr inbounds %struct.super_block, ptr %13, i32 0, i32 50
  %call.i = tail call i32 @errseq_set(ptr noundef %s_wb_err.i, i32 noundef %spec.select) #14
  br label %mapping_set_error.exit

mapping_set_error.exit:                           ; preds = %if.then5.i, %cond.end17.mapping_set_error.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 -28, i32 %spec.select)
  %cmp.i = icmp eq i32 %spec.select, -28
  %flags.i = getelementptr inbounds %struct.address_space, ptr %9, i32 0, i32 10
  %..i = zext i1 %cmp.i to i32
  tail call void @_set_bit(i32 noundef %..i, ptr noundef %flags.i) #14
  br label %if.end

if.end:                                           ; preds = %mapping_set_error.exit, %cond.end.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_writepage_endio_finish_ordered(ptr noundef, ptr noundef, i64 noundef, i64 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_page_clear_uptodate(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_page_set_error(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bio_alloc_bioset(i32 noundef, i16 noundef zeroext, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @btrfs_bio_clone(ptr noundef %bio) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @bio_clone_fast(ptr noundef %bio, i32 noundef 3136, ptr noundef nonnull @btrfs_bioset) #14
  %add.ptr.i = getelementptr i8, ptr %call, i32 -96
  %0 = call ptr @memset(ptr %add.ptr.i, i32 0, i32 96)
  %iter = getelementptr i8, ptr %call, i32 -20
  %bi_iter = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 8
  %1 = call ptr @memcpy(ptr %iter, ptr %bi_iter, i32 20)
  ret ptr %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bio_clone_fast(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @btrfs_bio_clone_partial(ptr noundef %orig, i64 noundef %offset, i64 noundef %size) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = or i64 %size, %offset
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %0)
  %1 = icmp ult i64 %0, 4294967296
  br i1 %1, label %cond.end, label %cond.false, !prof !322

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.24, i32 noundef 3169) #18
  unreachable

cond.end:                                         ; preds = %entry
  %call = tail call ptr @bio_clone_fast(ptr noundef %orig, i32 noundef 3136, ptr noundef nonnull @btrfs_bioset) #14
  %tobool3.not = icmp eq ptr %call, null
  br i1 %tobool3.not, label %cond.false11, label %cond.end12, !prof !319

cond.false11:                                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.25, i32 noundef 3173) #18
  unreachable

cond.end12:                                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  %add.ptr.i = getelementptr i8, ptr %call, i32 -96
  %2 = call ptr @memset(ptr %add.ptr.i, i32 0, i32 96)
  %shr = lshr i64 %offset, 9
  %shr14 = lshr i64 %size, 9
  tail call void @bio_trim(ptr noundef nonnull %call, i64 noundef %shr, i64 noundef %shr14) #14
  %iter = getelementptr i8, ptr %call, i32 -20
  %bi_iter = getelementptr inbounds %struct.bio, ptr %call, i32 0, i32 8
  %3 = call ptr @memcpy(ptr %iter, ptr %bi_iter, i32 20)
  ret ptr %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @bio_trim(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @set_page_extent_mapped(ptr noundef %page) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %mapping = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %0 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mapping, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %cond.false, label %cond.end, !prof !319

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.26, i32 noundef 3488) #18
  unreachable

cond.end:                                         ; preds = %entry
  %2 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %page, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %3)
  %cmp.i.not.i = icmp eq i32 %3, -1
  br i1 %cmp.i.not.i, label %if.then.i, label %PagePrivate.exit, !prof !319

if.then.i:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.80) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 452, 0\0A.popsection", ""() #14, !srcloc !363
  unreachable

PagePrivate.exit:                                 ; preds = %cond.end
  %4 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %page, align 4
  %6 = and i32 %5, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool3.not = icmp eq i32 %6, 0
  br i1 %tobool3.not, label %if.end, label %PagePrivate.exit.cleanup_crit_edge

PagePrivate.exit.cleanup_crit_edge:               ; preds = %PagePrivate.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %PagePrivate.exit
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %1, align 4
  %i_sb = getelementptr inbounds %struct.inode, ptr %8, i32 0, i32 8
  %9 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %10, i32 0, i32 33
  %11 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %s_fs_info.i, align 16
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %12, i32 0, i32 167
  %13 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sectorsize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %14)
  %cmp = icmp ult i32 %14, 4096
  br i1 %cmp, label %if.then6, label %if.end8

if.then6:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call7 = tail call i32 @btrfs_attach_subpage(ptr noundef %12, ptr noundef %page, i32 noundef 1) #14
  br label %cleanup

if.end8:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @attach_page_private(ptr noundef %page, ptr noundef nonnull inttoptr (i32 1 to ptr))
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.then6, %PagePrivate.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call7, %if.then6 ], [ 0, %if.end8 ], [ 0, %PagePrivate.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_attach_subpage(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @attach_page_private(ptr noundef %page, ptr noundef %data) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i, !prof !322

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i = add i32 %2, -1
  br label %_compound_head.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %3 = ptrtoint ptr %page to i32
  br label %_compound_head.exit

_compound_head.exit:                              ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi i32 [ %sub.i, %if.then.i ], [ %3, %if.end.i ]
  %4 = inttoptr i32 %retval.0.i to ptr
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %4, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #14
  %5 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  %add.i.i = add i32 %6, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %add.i.i)
  %cmp.i.i = icmp ult i32 %add.i.i, 128
  br i1 %cmp.i.i, label %if.then.i.i, label %do.end5.i.i, !prof !319

if.then.i.i:                                      ; preds = %_compound_head.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %4, ptr noundef nonnull @.str.81) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1160, 0\0A.popsection", ""() #14, !srcloc !364
  unreachable

do.end5.i.i:                                      ; preds = %_compound_head.exit
  %call.i.i.i.i9.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #14
  %7 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #14, !srcloc !365
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod, i32 0, i32 1), ptr blockaddress(@attach_page_private, %if.then.i.i.i.i)) #14
          to label %folio_get.exit.i [label %if.then.i.i.i.i], !srcloc !326

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__page_ref_mod(ptr noundef %4, i32 noundef 1) #14
  br label %folio_get.exit.i

folio_get.exit.i:                                 ; preds = %if.then.i.i.i.i, %do.end5.i.i
  %private.i = getelementptr inbounds %struct.anon.86, ptr %4, i32 0, i32 4
  %8 = ptrtoint ptr %private.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %data, ptr %private.i, align 4
  %9 = getelementptr inbounds %struct.page, ptr %4, i32 0, i32 1
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %9, align 4
  %and.i.i.i.i = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %folio_attach_private.exit, label %if.then.i.i.i, !prof !322

if.then.i.i.i:                                    ; preds = %folio_get.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %4, ptr noundef nonnull @.str.82) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

folio_attach_private.exit:                        ; preds = %folio_get.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @_set_bit(i32 noundef 13, ptr noundef %4) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @clear_page_extent_mapped(ptr noundef %page) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %mapping = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %0 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mapping, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %cond.false, label %cond.end, !prof !319

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.26, i32 noundef 3506) #18
  unreachable

cond.end:                                         ; preds = %entry
  %2 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %page, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %3)
  %cmp.i.not.i = icmp eq i32 %3, -1
  br i1 %cmp.i.not.i, label %if.then.i, label %PagePrivate.exit, !prof !319

if.then.i:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.80) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 452, 0\0A.popsection", ""() #14, !srcloc !363
  unreachable

PagePrivate.exit:                                 ; preds = %cond.end
  %4 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %page, align 4
  %6 = and i32 %5, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool3.not = icmp eq i32 %6, 0
  br i1 %tobool3.not, label %PagePrivate.exit.cleanup_crit_edge, label %if.end

PagePrivate.exit.cleanup_crit_edge:               ; preds = %PagePrivate.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %PagePrivate.exit
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %1, align 4
  %i_sb = getelementptr inbounds %struct.inode, ptr %8, i32 0, i32 8
  %9 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %10, i32 0, i32 33
  %11 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %s_fs_info.i, align 16
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %12, i32 0, i32 167
  %13 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sectorsize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %14)
  %cmp = icmp ult i32 %14, 4096
  br i1 %cmp, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @btrfs_detach_subpage(ptr noundef %12, ptr noundef %page) #14
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %15 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %15, align 4
  %and.i.i = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !322

if.then.i.i:                                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %17, -1
  br label %detach_page_private.exit

if.end.i.i:                                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  %18 = ptrtoint ptr %page to i32
  br label %detach_page_private.exit

detach_page_private.exit:                         ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %18, %if.end.i.i ]
  %19 = inttoptr i32 %retval.0.i.i to ptr
  tail call fastcc void @folio_detach_private(ptr noundef %19) #14
  br label %cleanup

cleanup:                                          ; preds = %detach_page_private.exit, %if.then6, %PagePrivate.exit.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_detach_subpage(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_do_readpage(ptr noundef %page, ptr noundef %em_cached, ptr noundef %bio_ctrl, i32 noundef %read_flags, ptr noundef %prev_em_start) local_unnamed_addr #0 align 64 {
entry:
  %cached = alloca ptr, align 4
  %cached145 = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %mapping = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %0 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mapping, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %i_sb = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %5, i32 0, i32 33
  %6 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %s_fs_info.i, align 16
  %index.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 2
  %8 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %index.i, align 4
  %conv.i = zext i32 %9 to i64
  %shl.i = shl nuw nsw i64 %conv.i, 12
  %add = add nuw nsw i64 %shl.i, 4096
  %sub = or i64 %shl.i, 4095
  %call2 = tail call fastcc i64 @i_size_read(ptr noundef %3)
  %10 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %i_sb, align 4
  %s_blocksize = getelementptr inbounds %struct.super_block, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %s_blocksize to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %s_blocksize, align 16
  %add.ptr.i = getelementptr i8, ptr %3, i32 -864
  %io_tree = getelementptr i8, ptr %3, i32 -736
  %14 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %mapping, align 4
  %tobool.not.i = icmp eq ptr %15, null
  br i1 %tobool.not.i, label %cond.false.i, label %cond.end.i, !prof !319

cond.false.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.26, i32 noundef 3488) #19
  unreachable

cond.end.i:                                       ; preds = %entry
  %16 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %page, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %17)
  %cmp.i.not.i.i = icmp eq i32 %17, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %PagePrivate.exit.i, !prof !319

if.then.i.i:                                      ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.80) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 452, 0\0A.popsection", ""() #14, !srcloc !363
  unreachable

PagePrivate.exit.i:                               ; preds = %cond.end.i
  %18 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %page, align 4
  %20 = and i32 %19, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool3.not.i = icmp eq i32 %20, 0
  br i1 %tobool3.not.i, label %if.end.i, label %PagePrivate.exit.i.if.end_crit_edge

PagePrivate.exit.i.if.end_crit_edge:              ; preds = %PagePrivate.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %PagePrivate.exit.i
  %21 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %15, align 4
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %22, i32 0, i32 8
  %23 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %i_sb.i, align 4
  %s_fs_info.i.i = getelementptr inbounds %struct.super_block, ptr %24, i32 0, i32 33
  %25 = ptrtoint ptr %s_fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %s_fs_info.i.i, align 16
  %sectorsize.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %26, i32 0, i32 167
  %27 = ptrtoint ptr %sectorsize.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %sectorsize.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %28)
  %cmp.i = icmp ult i32 %28, 4096
  br i1 %cmp.i, label %set_page_extent_mapped.exit, label %if.end8.i

if.end8.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @attach_page_private(ptr noundef %page, ptr noundef nonnull inttoptr (i32 1 to ptr)) #14
  br label %if.end

set_page_extent_mapped.exit:                      ; preds = %if.end.i
  %call7.i = tail call i32 @btrfs_attach_subpage(ptr noundef %26, ptr noundef %page, i32 noundef 1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %cmp = icmp slt i32 %call7.i, 0
  br i1 %cmp, label %if.then, label %set_page_extent_mapped.exit.if.end_crit_edge

set_page_extent_mapped.exit.if.end_crit_edge:     ; preds = %set_page_extent_mapped.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %set_page_extent_mapped.exit
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i = tail call i32 @__clear_extent_bit(ptr noundef %io_tree, i64 noundef %shl.i, i64 noundef %sub, i32 noundef 4, i32 noundef 1, i32 noundef 0, ptr noundef null, i32 noundef 3136, ptr noundef null) #14
  tail call void @btrfs_page_set_error(ptr noundef %7, ptr noundef %page, i64 noundef %shl.i, i32 noundef 4096) #14
  tail call void @unlock_page(ptr noundef %page) #14
  br label %cleanup196

if.end:                                           ; preds = %set_page_extent_mapped.exit.if.end_crit_edge, %if.end8.i, %PagePrivate.exit.i.if.end_crit_edge
  %retval.0.i400 = phi i32 [ %call7.i, %set_page_extent_mapped.exit.if.end_crit_edge ], [ 0, %if.end8.i ], [ 0, %PagePrivate.exit.i.if.end_crit_edge ]
  %29 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %index.i, align 4
  %conv = zext i32 %30 to i64
  %shr = lshr i64 %call2, 12
  call void @__sanitizer_cov_trace_cmp8(i64 %shr, i64 %conv)
  %cmp7 = icmp eq i64 %shr, %conv
  br i1 %cmp7, label %if.then9, label %if.end.if.end14_crit_edge

if.end.if.end14_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14

if.then9:                                         ; preds = %if.end
  %conv10 = trunc i64 %call2 to i32
  %and = and i32 %conv10, 4095
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then9.if.end14_crit_edge, label %if.then11

if.then9.if.end14_crit_edge:                      ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14

if.then11:                                        ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #16
  %sub12 = sub nuw nsw i32 4096, %and
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %31 = load i32, ptr @pgprot_kernel, align 4
  %or.i.i = or i32 %31, 512
  %call.i.i361 = tail call ptr @__kmap_local_page_prot(ptr noundef %page, i32 noundef %or.i.i) #14
  %add.ptr.i362 = getelementptr i8, ptr %call.i.i361, i32 %and
  %32 = call ptr @memset(ptr %add.ptr.i362, i32 0, i32 %sub12)
  tail call void @flush_dcache_page(ptr noundef %page) #14
  tail call void @kunmap_local_indexed(ptr noundef %call.i.i361) #14
  tail call void @flush_dcache_page(ptr noundef %page) #14
  br label %if.end14

if.end14:                                         ; preds = %if.then11, %if.then9.if.end14_crit_edge, %if.end.if.end14_crit_edge
  %33 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %33, align 4
  %and.i.i.i = and i32 %35, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !322

if.then.i.i.i:                                    ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i.i = add i32 %35, -1
  br label %_compound_head.exit.i.i

if.end.i.i.i:                                     ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #16
  %36 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %36, %if.end.i.i.i ]
  %37 = inttoptr i32 %retval.0.i.i.i to ptr
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %37, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %39)
  %cmp.i.not.i.i363 = icmp eq i32 %39, -1
  %40 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %33, align 4
  %and.i16.i.i = and i32 %41, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i.i)
  %tobool.not.i17.i.i = icmp eq i32 %and.i16.i.i, 0
  br i1 %cmp.i.not.i.i363, label %if.then.i.i364, label %do.end10.i.i, !prof !319

if.then.i.i364:                                   ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i17.i.i, label %if.end.i20.i.i, label %if.then.i19.i.i, !prof !322

if.then.i19.i.i:                                  ; preds = %if.then.i.i364
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i18.i.i = add i32 %41, -1
  br label %_compound_head.exit22.i.i

if.end.i20.i.i:                                   ; preds = %if.then.i.i364
  call void @__sanitizer_cov_trace_pc() #16
  %42 = ptrtoint ptr %page to i32
  br label %_compound_head.exit22.i.i

_compound_head.exit22.i.i:                        ; preds = %if.end.i20.i.i, %if.then.i19.i.i
  %retval.0.i21.i.i = phi i32 [ %sub.i18.i.i, %if.then.i19.i.i ], [ %42, %if.end.i20.i.i ]
  %43 = inttoptr i32 %retval.0.i21.i.i to ptr
  tail call void @dump_page(ptr noundef %43, ptr noundef nonnull @.str.86) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 414, 0\0A.popsection", ""() #14, !srcloc !367
  unreachable

do.end10.i.i:                                     ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i17.i.i, label %if.end.i27.i.i, label %if.then.i26.i.i, !prof !322

if.then.i26.i.i:                                  ; preds = %do.end10.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i25.i.i = add i32 %41, -1
  br label %PageLocked.exit.i

if.end.i27.i.i:                                   ; preds = %do.end10.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %44 = ptrtoint ptr %page to i32
  br label %PageLocked.exit.i

PageLocked.exit.i:                                ; preds = %if.end.i27.i.i, %if.then.i26.i.i
  %retval.0.i28.i.i = phi i32 [ %sub.i25.i.i, %if.then.i26.i.i ], [ %44, %if.end.i27.i.i ]
  %45 = inttoptr i32 %retval.0.i28.i.i to ptr
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %45, align 4
  %and1.i.i.i = and i32 %47, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.not.i365 = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.not.i365, label %cond.false.i366, label %cond.end.i369, !prof !319

cond.false.i366:                                  ; preds = %PageLocked.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.30, i32 noundef 2944) #19
  unreachable

cond.end.i369:                                    ; preds = %PageLocked.exit.i
  %sectorsize.i367 = getelementptr inbounds %struct.btrfs_fs_info, ptr %7, i32 0, i32 167
  %48 = ptrtoint ptr %sectorsize.i367 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %sectorsize.i367, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %49)
  %cmp.i368 = icmp eq i32 %49, 4096
  br i1 %cmp.i368, label %cond.end.i369.begin_page_read.exit_crit_edge, label %if.end.i370

cond.end.i369.begin_page_read.exit_crit_edge:     ; preds = %cond.end.i369
  call void @__sanitizer_cov_trace_pc() #16
  br label %begin_page_read.exit

if.end.i370:                                      ; preds = %cond.end.i369
  %50 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %page, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %51)
  %cmp.i.not.i19.i = icmp eq i32 %51, -1
  br i1 %cmp.i.not.i19.i, label %if.then.i20.i, label %PagePrivate.exit.i371, !prof !319

if.then.i20.i:                                    ; preds = %if.end.i370
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.80) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 452, 0\0A.popsection", ""() #14, !srcloc !363
  unreachable

PagePrivate.exit.i371:                            ; preds = %if.end.i370
  %52 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %page, align 4
  %54 = and i32 %53, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool4.not.i = icmp eq i32 %54, 0
  br i1 %tobool4.not.i, label %cond.false12.i, label %cond.end13.i, !prof !319

cond.false12.i:                                   ; preds = %PagePrivate.exit.i371
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.84, i32 noundef 2948) #19
  unreachable

cond.end13.i:                                     ; preds = %PagePrivate.exit.i371
  call void @__sanitizer_cov_trace_pc() #16
  %55 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %index.i, align 4
  %conv.i.i = zext i32 %56 to i64
  %shl.i.i = shl nuw nsw i64 %conv.i.i, 12
  tail call void @btrfs_subpage_start_reader(ptr noundef %7, ptr noundef %page, i64 noundef %shl.i.i, i32 noundef 4096) #14
  br label %begin_page_read.exit

begin_page_read.exit:                             ; preds = %cond.end13.i, %cond.end.i369.begin_page_read.exit_crit_edge
  %tobool.not.i376 = icmp eq ptr %em_cached, null
  %sub108 = add i32 %13, -1
  %neg = sub i32 0, %13
  %tobool128.not = icmp eq ptr %prev_em_start, null
  br label %while.body

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %begin_page_read.exit
  %pg_offset.0428 = phi i32 [ 0, %begin_page_read.exit ], [ %pg_offset.1, %cleanup.while.body_crit_edge ]
  %ret.0426 = phi i32 [ %retval.0.i400, %begin_page_read.exit ], [ %ret.1, %cleanup.while.body_crit_edge ]
  %cur.0425 = phi i64 [ %shl.i, %begin_page_read.exit ], [ %cur.1, %cleanup.while.body_crit_edge ]
  %57 = ptrtoint ptr %sectorsize.i367 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %sectorsize.i367, align 4
  %conv17 = zext i32 %58 to i64
  %sub18 = add nsw i64 %conv17, -1
  %and19 = and i64 %sub18, %cur.0425
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and19)
  %cmp20 = icmp eq i64 %and19, 0
  br i1 %cmp20, label %cond.end, label %cond.false, !prof !322

cond.false:                                       ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.27, i32 noundef 3595) #18
  unreachable

cond.end:                                         ; preds = %while.body
  call void @__sanitizer_cov_trace_cmp8(i64 %cur.0425, i64 %call2)
  %cmp24.not = icmp ult i64 %cur.0425, %call2
  br i1 %cmp24.not, label %if.end36, label %if.then26

if.then26:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cached) #14
  %59 = ptrtoint ptr %cached to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr null, ptr %cached, align 4
  %sub27 = sub i32 4096, %pg_offset.0428
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %60 = load i32, ptr @pgprot_kernel, align 4
  %or.i.i372 = or i32 %60, 512
  %call.i.i373 = call ptr @__kmap_local_page_prot(ptr noundef %page, i32 noundef %or.i.i372) #14
  %add.ptr.i374 = getelementptr i8, ptr %call.i.i373, i32 %pg_offset.0428
  %61 = call ptr @memset(ptr %add.ptr.i374, i32 0, i32 %sub27)
  call void @flush_dcache_page(ptr noundef %page) #14
  call void @kunmap_local_indexed(ptr noundef %call.i.i373) #14
  call void @flush_dcache_page(ptr noundef %page) #14
  %conv28 = zext i32 %sub27 to i64
  %add29 = add i64 %cur.0425, -1
  %sub30 = add i64 %add29, %conv28
  %call.i = call i32 @set_extent_bit(ptr noundef %io_tree, i64 noundef %cur.0425, i64 noundef %sub30, i32 noundef 2, i32 noundef 0, ptr noundef null, ptr noundef nonnull %cached, i32 noundef 3136, ptr noundef null) #14
  %call.i375 = call i32 @__clear_extent_bit(ptr noundef %io_tree, i64 noundef %cur.0425, i64 noundef %sub30, i32 noundef 4, i32 noundef 1, i32 noundef 0, ptr noundef nonnull %cached, i32 noundef 3136, ptr noundef null) #14
  call fastcc void @end_page_read(ptr noundef %page, i1 noundef zeroext true, i64 noundef %cur.0425, i32 noundef %sub27)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cached) #14
  br label %cleanup196

if.end36:                                         ; preds = %cond.end
  %sub37 = sub i64 %sub, %cur.0425
  %add38 = add i64 %sub37, 1
  br i1 %tobool.not.i376, label %if.end9.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end36
  %62 = ptrtoint ptr %em_cached to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %em_cached, align 4
  %tobool1.not.i = icmp eq ptr %63, null
  br i1 %tobool1.not.i, label %land.lhs.true.i.land.lhs.true13.i_crit_edge, label %if.then.i

land.lhs.true.i.land.lhs.true13.i_crit_edge:      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true13.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %64 = ptrtoint ptr %63 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %63, align 8
  %66 = ptrtoint ptr %63 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %65, i32 %66)
  %cmp.i.not.i = icmp eq i32 %65, %66
  br i1 %cmp.i.not.i, label %if.then.i.if.end.i377_crit_edge, label %land.lhs.true3.i

if.then.i.if.end.i377_crit_edge:                  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i377

land.lhs.true3.i:                                 ; preds = %if.then.i
  %start4.i = getelementptr inbounds %struct.extent_map, ptr %63, i32 0, i32 1
  %67 = ptrtoint ptr %start4.i to i32
  call void @__asan_load8_noabort(i32 %67)
  %68 = load i64, ptr %start4.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %68, i64 %cur.0425)
  %cmp.not.i = icmp ugt i64 %68, %cur.0425
  br i1 %cmp.not.i, label %land.lhs.true3.i.if.end.i377_crit_edge, label %land.lhs.true5.i

land.lhs.true3.i.if.end.i377_crit_edge:           ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i377

land.lhs.true5.i:                                 ; preds = %land.lhs.true3.i
  %len.i.i = getelementptr inbounds %struct.extent_map, ptr %63, i32 0, i32 2
  %69 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load8_noabort(i32 %69)
  %70 = load i64, ptr %len.i.i, align 8
  %71 = call i64 @llvm.uadd.sat.i64(i64 %68, i64 %70) #14
  call void @__sanitizer_cov_trace_cmp8(i64 %71, i64 %cur.0425)
  %cmp7.i = icmp ugt i64 %71, %cur.0425
  br i1 %cmp7.i, label %if.then8.i, label %land.lhs.true5.i.if.end.i377_crit_edge

land.lhs.true5.i.if.end.i377_crit_edge:           ; preds = %land.lhs.true5.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i377

if.then8.i:                                       ; preds = %land.lhs.true5.i
  %refs.i = getelementptr inbounds %struct.extent_map, ptr %63, i32 0, i32 13
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refs.i, i32 noundef 4) #14
  call void @llvm.prefetch.p0(ptr %refs.i, i32 1, i32 3, i32 1) #14
  %72 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs.i, ptr %refs.i, i32 1, ptr elementtype(i32) %refs.i) #14, !srcloc !338
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %72, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then8.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !319

if.then8.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then8.i
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %73 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %73)
  %.not.i.i.i.i = icmp sgt i32 %73, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.__get_extent_map.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !322

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.__get_extent_map.exit_crit_edge:  ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__get_extent_map.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then8.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then8.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refs.i, i32 noundef %.sink.i.i.i.i) #14
  br label %__get_extent_map.exit

if.end.i377:                                      ; preds = %land.lhs.true5.i.if.end.i377_crit_edge, %land.lhs.true3.i.if.end.i377_crit_edge, %if.then.i.if.end.i377_crit_edge
  call void @free_extent_map(ptr noundef nonnull %63) #14
  %74 = ptrtoint ptr %em_cached to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr null, ptr %em_cached, align 4
  br label %land.lhs.true13.i

if.end9.i:                                        ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #16
  %call11.i = call ptr @btrfs_get_extent(ptr noundef %add.ptr.i, ptr noundef %page, i32 noundef %pg_offset.0428, i64 noundef %cur.0425, i64 noundef %add38) #14
  br label %__get_extent_map.exit

land.lhs.true13.i:                                ; preds = %if.end.i377, %land.lhs.true.i.land.lhs.true13.i_crit_edge
  %call1157.i = call ptr @btrfs_get_extent(ptr noundef %add.ptr.i, ptr noundef %page, i32 noundef %pg_offset.0428, i64 noundef %cur.0425, i64 noundef %add38) #14
  %tobool.not.i.i = icmp eq ptr %call1157.i, null
  %cmp.i46.i = icmp ugt ptr %call1157.i, inttoptr (i32 -4096 to ptr)
  %spec.select.i.i = or i1 %tobool.not.i.i, %cmp.i46.i
  br i1 %spec.select.i.i, label %land.lhs.true13.i.__get_extent_map.exit_crit_edge, label %do.body.i

land.lhs.true13.i.__get_extent_map.exit_crit_edge: ; preds = %land.lhs.true13.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__get_extent_map.exit

do.body.i:                                        ; preds = %land.lhs.true13.i
  %75 = ptrtoint ptr %em_cached to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %em_cached, align 4
  %tobool16.not.i = icmp eq ptr %76, null
  br i1 %tobool16.not.i, label %do.end26.i, label %do.body20.i, !prof !322

do.body20.i:                                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3538, 0\0A.popsection", ""() #14, !srcloc !368
  unreachable

do.end26.i:                                       ; preds = %do.body.i
  %refs27.i = getelementptr inbounds %struct.extent_map, ptr %call1157.i, i32 0, i32 13
  %call.i.i.i.i.i47.i = call zeroext i1 @__kasan_check_write(ptr noundef %refs27.i, i32 noundef 4) #14
  call void @llvm.prefetch.p0(ptr %refs27.i, i32 1, i32 3, i32 1) #14
  %77 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs27.i, ptr %refs27.i, i32 1, ptr elementtype(i32) %refs27.i) #14, !srcloc !338
  %asmresult.i.i.i.i.i48.i = extractvalue { i32, i32, i32 } %77, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i48.i)
  %tobool1.not.i.i.i49.i = icmp eq i32 %asmresult.i.i.i.i.i48.i, 0
  br i1 %tobool1.not.i.i.i49.i, label %do.end26.i.if.end15.sink.split.i.i.i54.i_crit_edge, label %if.else.i.i.i52.i, !prof !319

do.end26.i.if.end15.sink.split.i.i.i54.i_crit_edge: ; preds = %do.end26.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i54.i

if.else.i.i.i52.i:                                ; preds = %do.end26.i
  %add.i.i.i50.i = add i32 %asmresult.i.i.i.i.i48.i, 1
  %78 = or i32 %add.i.i.i50.i, %asmresult.i.i.i.i.i48.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %78)
  %.not.i.i.i51.i = icmp sgt i32 %78, -1
  br i1 %.not.i.i.i51.i, label %if.else.i.i.i52.i.refcount_inc.exit55.i_crit_edge, label %if.else.i.i.i52.i.if.end15.sink.split.i.i.i54.i_crit_edge, !prof !322

if.else.i.i.i52.i.if.end15.sink.split.i.i.i54.i_crit_edge: ; preds = %if.else.i.i.i52.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.sink.split.i.i.i54.i

if.else.i.i.i52.i.refcount_inc.exit55.i_crit_edge: ; preds = %if.else.i.i.i52.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %refcount_inc.exit55.i

if.end15.sink.split.i.i.i54.i:                    ; preds = %if.else.i.i.i52.i.if.end15.sink.split.i.i.i54.i_crit_edge, %do.end26.i.if.end15.sink.split.i.i.i54.i_crit_edge
  %.sink.i.i.i53.i = phi i32 [ 2, %do.end26.i.if.end15.sink.split.i.i.i54.i_crit_edge ], [ 1, %if.else.i.i.i52.i.if.end15.sink.split.i.i.i54.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refs27.i, i32 noundef %.sink.i.i.i53.i) #14
  br label %refcount_inc.exit55.i

refcount_inc.exit55.i:                            ; preds = %if.end15.sink.split.i.i.i54.i, %if.else.i.i.i52.i.refcount_inc.exit55.i_crit_edge
  %79 = ptrtoint ptr %em_cached to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr %call1157.i, ptr %em_cached, align 4
  br label %__get_extent_map.exit

__get_extent_map.exit:                            ; preds = %refcount_inc.exit55.i, %land.lhs.true13.i.__get_extent_map.exit_crit_edge, %if.end9.i, %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.__get_extent_map.exit_crit_edge
  %retval.0.i378 = phi ptr [ %call1157.i, %refcount_inc.exit55.i ], [ %call1157.i, %land.lhs.true13.i.__get_extent_map.exit_crit_edge ], [ %call11.i, %if.end9.i ], [ %63, %if.else.i.i.i.i.__get_extent_map.exit_crit_edge ], [ %63, %if.end15.sink.split.i.i.i.i ]
  %tobool.not.i379 = icmp eq ptr %retval.0.i378, null
  %cmp.i380 = icmp ugt ptr %retval.0.i378, inttoptr (i32 -4096 to ptr)
  %spec.select.i = or i1 %tobool.not.i379, %cmp.i380
  br i1 %spec.select.i, label %if.then41, label %if.end46

if.then41:                                        ; preds = %__get_extent_map.exit
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i381 = call i32 @__clear_extent_bit(ptr noundef %io_tree, i64 noundef %cur.0425, i64 noundef %sub, i32 noundef 4, i32 noundef 1, i32 noundef 0, ptr noundef null, i32 noundef 3136, ptr noundef null) #14
  %sub44 = sub i64 %add, %cur.0425
  %conv45 = trunc i64 %sub44 to i32
  call fastcc void @end_page_read(ptr noundef %page, i1 noundef zeroext false, i64 noundef %cur.0425, i32 noundef %conv45)
  br label %cleanup196

if.end46:                                         ; preds = %__get_extent_map.exit
  %start47 = getelementptr inbounds %struct.extent_map, ptr %retval.0.i378, i32 0, i32 1
  %80 = ptrtoint ptr %start47 to i32
  call void @__asan_load8_noabort(i32 %80)
  %81 = load i64, ptr %start47, align 8
  %sub48 = sub i64 %cur.0425, %81
  %len.i = getelementptr inbounds %struct.extent_map, ptr %retval.0.i378, i32 0, i32 2
  %82 = ptrtoint ptr %len.i to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load i64, ptr %len.i, align 8
  %84 = call i64 @llvm.uadd.sat.i64(i64 %81, i64 %83) #14
  call void @__sanitizer_cov_trace_cmp8(i64 %84, i64 %cur.0425)
  %cmp50.not = icmp ugt i64 %84, %cur.0425
  br i1 %cmp50.not, label %do.end84, label %do.body59, !prof !322

do.body59:                                        ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3617, 0\0A.popsection", ""() #14, !srcloc !369
  unreachable

do.end84:                                         ; preds = %if.end46
  %flags = getelementptr inbounds %struct.extent_map, ptr %retval.0.i378, i32 0, i32 11
  %85 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load volatile i32, ptr %flags, align 4
  %87 = and i32 %86, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %87)
  %tobool86.not = icmp eq i32 %87, 0
  br i1 %tobool86.not, label %do.end84.if.end88_crit_edge, label %if.then87

do.end84.if.end88_crit_edge:                      ; preds = %do.end84
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end88

if.then87:                                        ; preds = %do.end84
  call void @__sanitizer_cov_trace_pc() #16
  %compress_type = getelementptr inbounds %struct.extent_map, ptr %retval.0.i378, i32 0, i32 14
  %88 = ptrtoint ptr %compress_type to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %compress_type, align 4
  %shl.i382 = shl i32 %89, 16
  %or.i = or i32 %shl.i382, 1
  br label %if.end88

if.end88:                                         ; preds = %if.then87, %do.end84.if.end88_crit_edge
  %this_bio_flag.0 = phi i32 [ 0, %do.end84.if.end88_crit_edge ], [ %or.i, %if.then87 ]
  %sub90 = sub i64 %84, %cur.0425
  %90 = call i64 @llvm.umin.i64(i64 %sub90, i64 %add38)
  %cond.off0 = trunc i64 %90 to i32
  %sub100 = add i64 %84, -1
  %91 = call i64 @llvm.umin.i64(i64 %sub100, i64 %sub)
  %add109 = add i32 %sub108, %cond.off0
  %and111 = and i32 %add109, %neg
  %and112 = and i32 %this_bio_flag.0, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and112)
  %tobool113.not = icmp eq i32 %and112, 0
  %block_start116 = getelementptr inbounds %struct.extent_map, ptr %retval.0.i378, i32 0, i32 8
  %92 = ptrtoint ptr %block_start116 to i32
  call void @__asan_load8_noabort(i32 %92)
  %93 = load i64, ptr %block_start116, align 8
  %add117 = select i1 %tobool113.not, i64 %sub48, i64 0
  %disk_bytenr.0 = add i64 %93, %add117
  %94 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load volatile i32, ptr %flags, align 4
  %96 = and i32 %95, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %96)
  %tobool122.not = icmp eq i32 %96, 0
  %spec.select = select i1 %tobool122.not, i64 %93, i64 -3
  %97 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load volatile i32, ptr %flags, align 4
  %99 = and i32 %98, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %99)
  %tobool127.not = icmp eq i32 %99, 0
  %or.cond = or i1 %tobool128.not, %tobool127.not
  br i1 %or.cond, label %if.end88.if.end137_crit_edge, label %land.lhs.true129

if.end88.if.end137_crit_edge:                     ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end137

land.lhs.true129:                                 ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #16
  %100 = ptrtoint ptr %prev_em_start to i32
  call void @__asan_load8_noabort(i32 %100)
  %101 = load i64, ptr %prev_em_start, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %101)
  %cmp130.not = icmp ne i64 %101, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %101, i64 %81)
  %cmp134.not = icmp ne i64 %101, %81
  %spec.select406 = select i1 %cmp130.not, i1 %cmp134.not, i1 false
  br label %if.end137

if.end137:                                        ; preds = %land.lhs.true129, %if.end88.if.end137_crit_edge
  %force_bio_submit.0.off0 = phi i1 [ false, %if.end88.if.end137_crit_edge ], [ %spec.select406, %land.lhs.true129 ]
  br i1 %tobool128.not, label %if.end137.if.end141_crit_edge, label %if.then139

if.end137.if.end141_crit_edge:                    ; preds = %if.end137
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end141

if.then139:                                       ; preds = %if.end137
  call void @__sanitizer_cov_trace_pc() #16
  %102 = ptrtoint ptr %prev_em_start to i32
  call void @__asan_store8_noabort(i32 %102)
  store i64 %81, ptr %prev_em_start, align 8
  br label %if.end141

if.end141:                                        ; preds = %if.then139, %if.end137.if.end141_crit_edge
  call void @free_extent_map(ptr noundef nonnull %retval.0.i378) #14
  call void @__sanitizer_cov_trace_const_cmp8(i64 -3, i64 %spec.select)
  %cmp142 = icmp eq i64 %spec.select, -3
  br i1 %cmp142, label %if.then144, label %if.end157

if.then144:                                       ; preds = %if.end141
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cached145) #14
  %103 = ptrtoint ptr %cached145 to i32
  call void @__asan_store4_noabort(i32 %103)
  store ptr null, ptr %cached145, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %104 = load i32, ptr @pgprot_kernel, align 4
  %or.i.i387 = or i32 %104, 512
  %call.i.i388 = call ptr @__kmap_local_page_prot(ptr noundef %page, i32 noundef %or.i.i387) #14
  %add.ptr.i389 = getelementptr i8, ptr %call.i.i388, i32 %pg_offset.0428
  %105 = call ptr @memset(ptr %add.ptr.i389, i32 0, i32 %and111)
  call void @flush_dcache_page(ptr noundef %page) #14
  call void @kunmap_local_indexed(ptr noundef %call.i.i388) #14
  call void @flush_dcache_page(ptr noundef %page) #14
  %conv146 = zext i32 %and111 to i64
  %add147 = add i64 %cur.0425, %conv146
  %sub148 = add i64 %add147, -1
  %call.i390 = call i32 @set_extent_bit(ptr noundef %io_tree, i64 noundef %cur.0425, i64 noundef %sub148, i32 noundef 2, i32 noundef 0, ptr noundef null, ptr noundef nonnull %cached145, i32 noundef 3136, ptr noundef null) #14
  %call.i391 = call i32 @__clear_extent_bit(ptr noundef %io_tree, i64 noundef %cur.0425, i64 noundef %sub148, i32 noundef 4, i32 noundef 1, i32 noundef 0, ptr noundef nonnull %cached145, i32 noundef 3136, ptr noundef null) #14
  call fastcc void @end_page_read(ptr noundef %page, i1 noundef zeroext true, i64 noundef %cur.0425, i32 noundef %and111)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cached145) #14
  br label %cleanup

if.end157:                                        ; preds = %if.end141
  %call158 = call i32 @test_range_bit(ptr noundef %io_tree, i64 noundef %cur.0425, i64 noundef %91, i32 noundef 2, i32 noundef 1, ptr noundef null)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call158)
  %tobool159.not = icmp eq i32 %call158, 0
  br i1 %tobool159.not, label %if.end168, label %if.then160

if.then160:                                       ; preds = %if.end157
  call void @__sanitizer_cov_trace_pc() #16
  %conv161 = zext i32 %and111 to i64
  %add162 = add i64 %cur.0425, %conv161
  %sub163 = add i64 %add162, -1
  %call.i.i392 = call i32 @__clear_extent_bit(ptr noundef %io_tree, i64 noundef %cur.0425, i64 noundef %sub163, i32 noundef 4, i32 noundef 1, i32 noundef 0, ptr noundef null, i32 noundef 3136, ptr noundef null) #14
  call fastcc void @end_page_read(ptr noundef %page, i1 noundef zeroext true, i64 noundef %cur.0425, i32 noundef %and111)
  br label %cleanup

if.end168:                                        ; preds = %if.end157
  call void @__sanitizer_cov_trace_const_cmp8(i64 -2, i64 %spec.select)
  %cmp169 = icmp eq i64 %spec.select, -2
  br i1 %cmp169, label %if.then171, label %if.end179

if.then171:                                       ; preds = %if.end168
  call void @__sanitizer_cov_trace_pc() #16
  %conv172 = zext i32 %and111 to i64
  %add173 = add i64 %cur.0425, %conv172
  %sub174 = add i64 %add173, -1
  %call.i.i393 = call i32 @__clear_extent_bit(ptr noundef %io_tree, i64 noundef %cur.0425, i64 noundef %sub174, i32 noundef 4, i32 noundef 1, i32 noundef 0, ptr noundef null, i32 noundef 3136, ptr noundef null) #14
  call fastcc void @end_page_read(ptr noundef %page, i1 noundef zeroext false, i64 noundef %cur.0425, i32 noundef %and111)
  br label %cleanup

if.end179:                                        ; preds = %if.end168
  %call182 = call fastcc i32 @submit_extent_page(i32 noundef %read_flags, ptr noundef null, ptr noundef %bio_ctrl, ptr noundef %page, i64 noundef %disk_bytenr.0, i32 noundef %and111, i32 noundef %pg_offset.0428, ptr noundef nonnull @end_bio_extent_readpage, i32 noundef 0, i32 noundef %this_bio_flag.0, i1 noundef zeroext %force_bio_submit.0.off0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call182)
  %tobool183.not = icmp eq i32 %call182, 0
  %conv191 = zext i32 %and111 to i64
  br i1 %tobool183.not, label %if.then184, label %if.else185

if.then184:                                       ; preds = %if.end179
  call void @__sanitizer_cov_trace_pc() #16
  %add192 = add i64 %cur.0425, %conv191
  br label %cleanup

if.else185:                                       ; preds = %if.end179
  call void @__sanitizer_cov_trace_pc() #16
  %add187 = add i64 %cur.0425, -1
  %sub188 = add i64 %add187, %conv191
  %call.i.i394 = call i32 @__clear_extent_bit(ptr noundef %io_tree, i64 noundef %cur.0425, i64 noundef %sub188, i32 noundef 4, i32 noundef 1, i32 noundef 0, ptr noundef null, i32 noundef 3136, ptr noundef null) #14
  call fastcc void @end_page_read(ptr noundef %page, i1 noundef zeroext false, i64 noundef %cur.0425, i32 noundef %and111)
  br label %cleanup196

cleanup:                                          ; preds = %if.then184, %if.then171, %if.then160, %if.then144
  %cur.1 = phi i64 [ %add147, %if.then144 ], [ %add162, %if.then160 ], [ %add173, %if.then171 ], [ %add192, %if.then184 ]
  %ret.1 = phi i32 [ %ret.0426, %if.then144 ], [ %ret.0426, %if.then160 ], [ %ret.0426, %if.then171 ], [ 0, %if.then184 ]
  %pg_offset.1 = add i32 %and111, %pg_offset.0428
  %cmp15.not = icmp ult i64 %sub, %cur.1
  br i1 %cmp15.not, label %cleanup.cleanup196_crit_edge, label %cleanup.while.body_crit_edge

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

cleanup.cleanup196_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup196

cleanup196:                                       ; preds = %cleanup.cleanup196_crit_edge, %if.else185, %if.then41, %if.then26, %if.then
  %retval.0 = phi i32 [ %call7.i, %if.then ], [ %call182, %if.else185 ], [ %ret.0426, %if.then41 ], [ %ret.0426, %if.then26 ], [ %ret.1, %cleanup.cleanup196_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i64 @i_size_read(ptr noundef %inode) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %i_size_seqcount = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 23
  %dep_map.c48.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 23, i32 1
  %i_size18 = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 14
  br label %do.body

do.body:                                          ; preds = %while.end.do.body_crit_edge, %entry
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #14, !srcloc !370
  %and.i.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %do.body24.critedge.i

if.then.i:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @trace_hardirqs_off() #14
  %1 = tail call ptr @llvm.returnaddress(i32 0) #14
  %2 = ptrtoint ptr %1 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c48.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %2) #14
  tail call void @lock_release(ptr noundef %dep_map.c48.i, i32 noundef %2) #14
  tail call void @trace_hardirqs_on() #14
  br label %do.body24.i

do.body24.critedge.i:                             ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  %3 = tail call ptr @llvm.returnaddress(i32 0) #14
  %4 = ptrtoint ptr %3 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c48.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %4) #14
  tail call void @lock_release(ptr noundef %dep_map.c48.i, i32 noundef %4) #14
  br label %do.body24.i

do.body24.i:                                      ; preds = %do.body24.critedge.i, %if.then.i
  %5 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #14, !srcloc !371
  %and.i.i.i = and i32 %5, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool32.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool32.not.i, label %if.then36.i, label %do.body24.i.seqcount_lockdep_reader_access.exit_crit_edge, !prof !319

do.body24.i.seqcount_lockdep_reader_access.exit_crit_edge: ; preds = %do.body24.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %seqcount_lockdep_reader_access.exit

if.then36.i:                                      ; preds = %do.body24.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @warn_bogus_irq_restore() #14
  br label %seqcount_lockdep_reader_access.exit

seqcount_lockdep_reader_access.exit:              ; preds = %if.then36.i, %do.body24.i.seqcount_lockdep_reader_access.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #14, !srcloc !372
  %6 = ptrtoint ptr %i_size_seqcount to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %i_size_seqcount, align 4
  %and29 = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29)
  %tobool.not30 = icmp eq i32 %and29, 0
  br i1 %tobool.not30, label %seqcount_lockdep_reader_access.exit.while.end_crit_edge, label %seqcount_lockdep_reader_access.exit.do.end_crit_edge

seqcount_lockdep_reader_access.exit.do.end_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit
  br label %do.end

seqcount_lockdep_reader_access.exit.while.end_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

do.end:                                           ; preds = %do.end.do.end_crit_edge, %seqcount_lockdep_reader_access.exit.do.end_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !373
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #14, !srcloc !374
  %8 = ptrtoint ptr %i_size_seqcount to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %i_size_seqcount, align 4
  %and = and i32 %9, 1
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.end.while.end_crit_edge, label %do.end.do.end_crit_edge

do.end.do.end_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

do.end.while.end_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %do.end.while.end_crit_edge, %seqcount_lockdep_reader_access.exit.while.end_crit_edge
  %.lcssa = phi i32 [ %7, %seqcount_lockdep_reader_access.exit.while.end_crit_edge ], [ %9, %do.end.while.end_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !375
  %10 = ptrtoint ptr %i_size18 to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %i_size18, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !376
  %12 = ptrtoint ptr %i_size_seqcount to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %i_size_seqcount, align 4
  %cmp.i.i.not = icmp eq i32 %13, %.lcssa
  br i1 %cmp.i.i.not, label %do.end24, label %while.end.do.body_crit_edge

while.end.do.body_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

do.end24:                                         ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  ret i64 %11
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @unlock_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @flush_dcache_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @end_page_read(ptr noundef %page, i1 noundef zeroext %uptodate, i64 noundef %start, i32 noundef %len) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %mapping = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %0 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mapping, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %i_sb = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %5, i32 0, i32 33
  %6 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %s_fs_info.i, align 16
  %index.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 2
  %8 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %index.i, align 4
  %conv.i = zext i32 %9 to i64
  %shl.i = shl nuw nsw i64 %conv.i, 12
  call void @__sanitizer_cov_trace_cmp8(i64 %shl.i, i64 %start)
  %cmp.not = icmp ugt i64 %shl.i, %start
  br i1 %cmp.not, label %entry.cond.false_crit_edge, label %land.rhs, !prof !319

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.false

land.rhs:                                         ; preds = %entry
  %conv = zext i32 %len to i64
  %add = add i64 %conv, %start
  %add3 = add nuw nsw i64 %shl.i, 4096
  call void @__sanitizer_cov_trace_cmp8(i64 %add, i64 %add3)
  %cmp4.not = icmp ugt i64 %add, %add3
  br i1 %cmp4.not, label %land.rhs.cond.false_crit_edge, label %cond.end, !prof !319

land.rhs.cond.false_crit_edge:                    ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.false

cond.false:                                       ; preds = %land.rhs.cond.false_crit_edge, %entry.cond.false_crit_edge
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.85, i32 noundef 2695) #18
  unreachable

cond.end:                                         ; preds = %land.rhs
  br i1 %uptodate, label %if.then, label %if.else26

if.then:                                          ; preds = %cond.end
  %i_verity_info.i.i = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 53
  %10 = ptrtoint ptr %i_verity_info.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %i_verity_info.i.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !377
  %cmp.i.not = icmp eq ptr %11, null
  br i1 %cmp.i.not, label %if.then.if.else_crit_edge, label %land.lhs.true

if.then.if.else_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

land.lhs.true:                                    ; preds = %if.then
  %12 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %12, align 4
  %and.i.i = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !322

if.then.i.i:                                      ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %14, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  %15 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %15, %if.end.i.i ]
  %16 = inttoptr i32 %retval.0.i.i to ptr
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %16, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %18)
  %cmp.i.not.i = icmp eq i32 %18, -1
  %19 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %12, align 4
  %and.i16.i = and i32 %20, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i)
  %tobool.not.i17.i = icmp eq i32 %and.i16.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end10.i, !prof !319

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i20.i, label %if.then.i19.i, !prof !322

if.then.i19.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i18.i = add i32 %20, -1
  br label %_compound_head.exit22.i

if.end.i20.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %21 = ptrtoint ptr %page to i32
  br label %_compound_head.exit22.i

_compound_head.exit22.i:                          ; preds = %if.end.i20.i, %if.then.i19.i
  %retval.0.i21.i = phi i32 [ %sub.i18.i, %if.then.i19.i ], [ %21, %if.end.i20.i ]
  %22 = inttoptr i32 %retval.0.i21.i to ptr
  tail call void @dump_page(ptr noundef %22, ptr noundef nonnull @.str.86) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 416, 0\0A.popsection", ""() #14, !srcloc !378
  unreachable

do.end10.i:                                       ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i27.i, label %if.then.i26.i, !prof !322

if.then.i26.i:                                    ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i25.i = add i32 %20, -1
  br label %PageError.exit

if.end.i27.i:                                     ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  %23 = ptrtoint ptr %page to i32
  br label %PageError.exit

PageError.exit:                                   ; preds = %if.end.i27.i, %if.then.i26.i
  %retval.0.i28.i = phi i32 [ %sub.i25.i, %if.then.i26.i ], [ %23, %if.end.i27.i ]
  %24 = inttoptr i32 %retval.0.i28.i to ptr
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %24, align 4
  %27 = and i32 %26, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool13.not = icmp eq i32 %27, 0
  br i1 %tobool13.not, label %land.lhs.true14, label %PageError.exit.if.else_crit_edge

PageError.exit.if.else_crit_edge:                 ; preds = %PageError.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

land.lhs.true14:                                  ; preds = %PageError.exit
  %28 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %12, align 4
  %and.i.i66 = and i32 %29, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i66)
  %tobool.not.i.i67 = icmp eq i32 %and.i.i66, 0
  br i1 %tobool.not.i.i67, label %if.end.i.i70, label %if.then.i.i69, !prof !322

if.then.i.i69:                                    ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i68 = add i32 %29, -1
  br label %_compound_head.exit.i72

if.end.i.i70:                                     ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #16
  %30 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i72

_compound_head.exit.i72:                          ; preds = %if.end.i.i70, %if.then.i.i69
  %retval.0.i.i71 = phi i32 [ %sub.i.i68, %if.then.i.i69 ], [ %30, %if.end.i.i70 ]
  %31 = inttoptr i32 %retval.0.i.i71 to ptr
  %32 = getelementptr inbounds %struct.page, ptr %31, i32 0, i32 1
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %32, align 4
  %and.i.i.i.i = and i32 %34, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %folio_flags.exit.i.i, label %if.then.i.i.i, !prof !322

if.then.i.i.i:                                    ; preds = %_compound_head.exit.i72
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %31, ptr noundef nonnull @.str.82) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

folio_flags.exit.i.i:                             ; preds = %_compound_head.exit.i72
  %35 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %31, align 4
  %37 = and i32 %36, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %tobool.i.not.i = icmp eq i32 %37, 0
  br i1 %tobool.i.not.i, label %land.lhs.true17, label %PageUptodate.exit

PageUptodate.exit:                                ; preds = %folio_flags.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !379
  br label %if.else

land.lhs.true17:                                  ; preds = %folio_flags.exit.i.i
  %38 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %mapping, align 4
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %39, align 4
  %call20 = tail call fastcc i64 @i_size_read(ptr noundef %41)
  call void @__sanitizer_cov_trace_cmp8(i64 %call20, i64 %start)
  %cmp21 = icmp ugt i64 %call20, %start
  br i1 %cmp21, label %land.lhs.true23, label %land.lhs.true17.if.else_crit_edge

land.lhs.true17.if.else_crit_edge:                ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

land.lhs.true23:                                  ; preds = %land.lhs.true17
  %call24 = tail call zeroext i1 @fsverity_verify_page(ptr noundef %page) #14
  br i1 %call24, label %land.lhs.true23.if.else_crit_edge, label %if.then25

land.lhs.true23.if.else_crit_edge:                ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

if.then25:                                        ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @btrfs_page_set_error(ptr noundef %7, ptr noundef %page, i64 noundef %start, i32 noundef %len) #14
  br label %if.end27

if.else:                                          ; preds = %land.lhs.true23.if.else_crit_edge, %land.lhs.true17.if.else_crit_edge, %PageUptodate.exit, %PageError.exit.if.else_crit_edge, %if.then.if.else_crit_edge
  tail call void @btrfs_page_set_uptodate(ptr noundef %7, ptr noundef %page, i64 noundef %start, i32 noundef %len) #14
  br label %if.end27

if.else26:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @btrfs_page_clear_uptodate(ptr noundef %7, ptr noundef %page, i64 noundef %start, i32 noundef %len) #14
  tail call void @btrfs_page_set_error(ptr noundef %7, ptr noundef %page, i64 noundef %start, i32 noundef %len) #14
  br label %if.end27

if.end27:                                         ; preds = %if.else26, %if.else, %if.then25
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %7, i32 0, i32 167
  %42 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %sectorsize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %43)
  %cmp28 = icmp eq i32 %43, 4096
  br i1 %cmp28, label %if.then30, label %if.else31

if.then30:                                        ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @unlock_page(ptr noundef %page) #14
  br label %if.end32

if.else31:                                        ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @btrfs_subpage_end_reader(ptr noundef %7, ptr noundef %page, i64 noundef %start, i32 noundef %len) #14
  br label %if.end32

if.end32:                                         ; preds = %if.else31, %if.then30
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_extent_map(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @submit_extent_page(i32 noundef %opf, ptr noundef %wbc, ptr noundef %bio_ctrl, ptr noundef %page, i64 noundef %disk_bytenr, i32 noundef %size, i32 noundef %pg_offset, ptr noundef %end_io_func, i32 noundef %mirror_num, i32 noundef %bio_flags, i1 noundef zeroext %force_bio_submit) unnamed_addr #0 align 64 {
entry:
  %geom.i.i = alloca %struct.btrfs_io_geometry, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %mapping = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %0 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mapping, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %add.ptr.i = getelementptr i8, ptr %3, i32 -864
  %tobool.not = icmp eq ptr %bio_ctrl, null
  br i1 %tobool.not, label %cond.false, label %cond.end, !prof !319

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.87, i32 noundef 3384) #18
  unreachable

cond.end:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %pg_offset)
  %cmp = icmp ult i32 %pg_offset, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 4097, i32 %size)
  %cmp3 = icmp ult i32 %size, 4097
  %or.cond = and i1 %cmp3, %cmp
  %add = add i32 %pg_offset, %size
  call void @__sanitizer_cov_trace_const_cmp4(i32 4097, i32 %add)
  %cmp4 = icmp ult i32 %add, 4097
  %or.cond157 = and i1 %or.cond, %cmp4
  br i1 %or.cond157, label %cond.end13, label %cond.false12, !prof !380

cond.false12:                                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.88, i32 noundef 3387) #18
  unreachable

cond.end13:                                       ; preds = %cond.end
  br i1 %force_bio_submit, label %land.lhs.true15, label %cond.end13.if.end23_crit_edge

cond.end13.if.end23_crit_edge:                    ; preds = %cond.end13
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end23

land.lhs.true15:                                  ; preds = %cond.end13
  %4 = ptrtoint ptr %bio_ctrl to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %bio_ctrl, align 4
  %tobool16.not = icmp eq ptr %5, null
  br i1 %tobool16.not, label %land.lhs.true15.if.end23_crit_edge, label %if.then

land.lhs.true15.if.end23_crit_edge:               ; preds = %land.lhs.true15
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end23

if.then:                                          ; preds = %land.lhs.true15
  %bio_flags18 = getelementptr inbounds %struct.btrfs_bio_ctrl, ptr %bio_ctrl, i32 0, i32 1
  %6 = ptrtoint ptr %bio_flags18 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %bio_flags18, align 4
  %bi_private.i = getelementptr inbounds %struct.bio, ptr %5, i32 0, i32 11
  %8 = ptrtoint ptr %bi_private.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %bi_private.i, align 4
  store ptr null, ptr %bi_private.i, align 4
  %bi_size.i = getelementptr inbounds %struct.bio, ptr %5, i32 0, i32 8, i32 1
  %10 = ptrtoint ptr %bi_size.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %bi_size.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool.not.i = icmp eq i32 %11, 0
  br i1 %tobool.not.i, label %cond.false.i, label %cond.end.i, !prof !319

cond.false.i:                                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.3, i32 noundef 176) #19
  unreachable

cond.end.i:                                       ; preds = %if.then
  %private_data.i = getelementptr inbounds %struct.extent_io_tree, ptr %9, i32 0, i32 2
  %12 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %private_data.i, align 8
  %location.i.i.i = getelementptr i8, ptr %13, i32 -860
  %14 = ptrtoint ptr %location.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %14, i32 8)
  %15 = load i64, ptr %location.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %15)
  %tobool.not.i.i.i = icmp eq i64 %15, 0
  br i1 %tobool.not.i.i.i, label %cond.end.i.if.then.i.i.i_crit_edge, label %lor.lhs.false.i.i.i

cond.end.i.if.then.i.i.i_crit_edge:               ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i

lor.lhs.false.i.i.i:                              ; preds = %cond.end.i
  %type.i.i.i = getelementptr i8, ptr %13, i32 -852
  %16 = ptrtoint ptr %type.i.i.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %17)
  %cmp.i.i.i = icmp eq i8 %17, -124
  br i1 %cmp.i.i.i, label %lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge, label %lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge

lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge: ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %is_data_inode.exit.i

lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge:      ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge, %cond.end.i.if.then.i.i.i_crit_edge
  %i_ino.i.i.i = getelementptr i8, ptr %13, i32 40
  %18 = ptrtoint ptr %i_ino.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %i_ino.i.i.i, align 8
  %conv3.i.i.i = zext i32 %19 to i64
  br label %is_data_inode.exit.i

is_data_inode.exit.i:                             ; preds = %if.then.i.i.i, %lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge
  %ino.0.i.i.i = phi i64 [ %conv3.i.i.i, %if.then.i.i.i ], [ %15, %lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %ino.0.i.i.i)
  %cmp.i.not.i = icmp eq i64 %ino.0.i.i.i, 1
  br i1 %cmp.i.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %is_data_inode.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %call5.i = tail call zeroext i8 @btrfs_submit_data_bio(ptr noundef %13, ptr noundef nonnull %5, i32 noundef %mirror_num, i32 noundef %7) #14
  br label %submit_one_bio.exit

if.else.i:                                        ; preds = %is_data_inode.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %call7.i = tail call zeroext i8 @btrfs_submit_metadata_bio(ptr noundef %13, ptr noundef nonnull %5, i32 noundef %mirror_num, i32 noundef %7) #14
  br label %submit_one_bio.exit

submit_one_bio.exit:                              ; preds = %if.else.i, %if.then.i
  %ret.0.i = phi i8 [ %call5.i, %if.then.i ], [ %call7.i, %if.else.i ]
  %call8.i = tail call i32 @blk_status_to_errno(i8 noundef zeroext %ret.0.i) #14
  %20 = ptrtoint ptr %bio_ctrl to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %bio_ctrl, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %cmp21 = icmp slt i32 %call8.i, 0
  br i1 %cmp21, label %submit_one_bio.exit.cleanup96_crit_edge, label %submit_one_bio.exit.if.end23_crit_edge

submit_one_bio.exit.if.end23_crit_edge:           ; preds = %submit_one_bio.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end23

submit_one_bio.exit.cleanup96_crit_edge:          ; preds = %submit_one_bio.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup96

if.end23:                                         ; preds = %submit_one_bio.exit.if.end23_crit_edge, %land.lhs.true15.if.end23_crit_edge, %cond.end13.if.end23_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %pg_offset)
  %cmp25195 = icmp ugt i32 %add, %pg_offset
  br i1 %cmp25195, label %while.body.lr.ph, label %if.end23.cleanup96_crit_edge

if.end23.cleanup96_crit_edge:                     ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup96

while.body.lr.ph:                                 ; preds = %if.end23
  %index.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 2
  %and.i = and i32 %bio_flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i158 = icmp eq i32 %and.i, 0
  %bio_flags6.i = getelementptr inbounds %struct.btrfs_bio_ctrl, ptr %bio_ctrl, i32 0, i32 1
  %io_tree.i = getelementptr i8, ptr %3, i32 -736
  %i_write_hint.i = getelementptr i8, ptr %3, i32 159
  %len_to_oe_boundary.i.i = getelementptr inbounds %struct.btrfs_bio_ctrl, ptr %bio_ctrl, i32 0, i32 3
  %len_to_stripe_boundary.i.i = getelementptr inbounds %struct.btrfs_bio_ctrl, ptr %bio_ctrl, i32 0, i32 2
  %tobool12.not.i = icmp eq ptr %wbc, null
  %wb.i.i = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 6
  %location.i.i = getelementptr i8, ptr %3, i32 -860
  %type.i.i = getelementptr i8, ptr %3, i32 -852
  %i_ino.i.i = getelementptr i8, ptr %3, i32 40
  br label %while.body

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %while.body.lr.ph
  %cur.0196 = phi i32 [ %pg_offset, %while.body.lr.ph ], [ %add94, %cleanup.while.body_crit_edge ]
  %sub = sub i32 %cur.0196, %pg_offset
  %21 = ptrtoint ptr %bio_ctrl to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %bio_ctrl, align 4
  %tobool27.not = icmp eq ptr %22, null
  br i1 %tobool27.not, label %if.then28, label %while.body.if.end36_crit_edge

while.body.if.end36_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end36

if.then28:                                        ; preds = %while.body
  %23 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %index.i, align 4
  %conv.i = zext i32 %24 to i64
  %shl.i = shl nuw nsw i64 %conv.i, 12
  %conv = zext i32 %cur.0196 to i64
  %add30 = add nuw nsw i64 %shl.i, %conv
  %25 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %add.ptr.i, align 8
  %fs_info1.i = getelementptr inbounds %struct.btrfs_root, ptr %26, i32 0, i32 8
  %27 = ptrtoint ptr %fs_info1.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fs_info1.i, align 8
  %call.i.i = call ptr @bio_alloc_bioset(i32 noundef 3136, i16 noundef zeroext 256, ptr noundef nonnull @btrfs_bioset) #14
  %add.ptr.i.i.i = getelementptr i8, ptr %call.i.i, i32 -96
  %29 = call ptr @memset(ptr %add.ptr.i.i.i, i32 0, i32 96)
  %narrow.i = select i1 %tobool.not.i158, i32 %sub, i32 0
  %add.i = zext i32 %narrow.i to i64
  %shr.sink.in.i = add i64 %add.i, %disk_bytenr
  %shr.sink.i = lshr i64 %shr.sink.in.i, 9
  %30 = getelementptr inbounds %struct.bio, ptr %call.i.i, i32 0, i32 8
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %shr.sink.i, ptr %30, align 8
  %32 = ptrtoint ptr %bio_ctrl to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %call.i.i, ptr %bio_ctrl, align 4
  %33 = ptrtoint ptr %bio_flags6.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %bio_flags, ptr %bio_flags6.i, align 4
  %bi_end_io.i = getelementptr inbounds %struct.bio, ptr %call.i.i, i32 0, i32 10
  %34 = ptrtoint ptr %bi_end_io.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %end_io_func, ptr %bi_end_io.i, align 8
  %bi_private.i159 = getelementptr inbounds %struct.bio, ptr %call.i.i, i32 0, i32 11
  %35 = ptrtoint ptr %bi_private.i159 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %io_tree.i, ptr %bi_private.i159, align 4
  %36 = ptrtoint ptr %i_write_hint.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %i_write_hint.i, align 1
  %conv7.i = zext i8 %37 to i16
  %bi_write_hint.i = getelementptr inbounds %struct.bio, ptr %call.i.i, i32 0, i32 5
  %38 = ptrtoint ptr %bi_write_hint.i to i32
  call void @__asan_store2_noabort(i32 %38)
  store i16 %conv7.i, ptr %bi_write_hint.i, align 8
  %bi_opf.i = getelementptr inbounds %struct.bio, ptr %call.i.i, i32 0, i32 2
  %39 = ptrtoint ptr %bi_opf.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %opf, ptr %bi_opf.i, align 8
  %40 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %add.ptr.i, align 8
  %fs_info1.i.i = getelementptr inbounds %struct.btrfs_root, ptr %41, i32 0, i32 8
  %42 = ptrtoint ptr %fs_info1.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %fs_info1.i.i, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %geom.i.i) #14
  %44 = call ptr @memset(ptr %geom.i.i, i32 255, i32 48)
  %45 = ptrtoint ptr %bio_ctrl to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %bio_ctrl, align 4
  %bi_iter.i.i = getelementptr inbounds %struct.bio, ptr %46, i32 0, i32 8
  %47 = ptrtoint ptr %bi_iter.i.i to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %bi_iter.i.i, align 8
  %shl.i.i = shl i64 %48, 9
  %49 = ptrtoint ptr %bio_flags6.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %bio_flags6.i, align 4
  %and.i.i = and i32 %50, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #16
  %51 = ptrtoint ptr %len_to_oe_boundary.i.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 -1, ptr %len_to_oe_boundary.i.i, align 4
  %52 = ptrtoint ptr %len_to_stripe_boundary.i.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 -1, ptr %len_to_stripe_boundary.i.i, align 4
  br label %calc_bio_boundaries.exit.thread.i

if.end.i.i:                                       ; preds = %if.then28
  %sectorsize.i.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %43, i32 0, i32 167
  %53 = ptrtoint ptr %sectorsize.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %sectorsize.i.i, align 4
  %conv.i.i = zext i32 %54 to i64
  %call.i64.i = call ptr @btrfs_get_chunk_map(ptr noundef %43, i64 noundef %shl.i.i, i64 noundef %conv.i.i) #14
  %cmp.i.i.i160 = icmp ugt ptr %call.i64.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i160, label %calc_bio_boundaries.exit.i, label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.end.i.i
  %55 = ptrtoint ptr %bio_ctrl to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %bio_ctrl, align 4
  %bi_opf.i.i.i = getelementptr inbounds %struct.bio, ptr %56, i32 0, i32 2
  %57 = ptrtoint ptr %bi_opf.i.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %bi_opf.i.i.i, align 8
  %trunc.i.i.i = trunc i32 %58 to i8
  %59 = zext i8 %trunc.i.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %59, ptr @__sancov_gen_cov_switch_values.134)
  switch i8 %trunc.i.i.i, label %land.end.i.i.i [
    i8 3, label %if.end5.i.i.btrfs_op.exit.i.i_crit_edge
    i8 1, label %if.end5.i.i.sw.bb1.i.i.i_crit_edge
    i8 13, label %if.end5.i.i.sw.bb1.i.i.i_crit_edge200
    i8 0, label %if.end5.i.i.sw.bb34.i.i.i_crit_edge
  ]

if.end5.i.i.sw.bb34.i.i.i_crit_edge:              ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb34.i.i.i

if.end5.i.i.sw.bb1.i.i.i_crit_edge200:            ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb1.i.i.i

if.end5.i.i.sw.bb1.i.i.i_crit_edge:               ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb1.i.i.i

if.end5.i.i.btrfs_op.exit.i.i_crit_edge:          ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_op.exit.i.i

sw.bb1.i.i.i:                                     ; preds = %if.end5.i.i.sw.bb1.i.i.i_crit_edge, %if.end5.i.i.sw.bb1.i.i.i_crit_edge200
  br label %btrfs_op.exit.i.i

land.end.i.i.i:                                   ; preds = %if.end5.i.i
  %.b37.i.i.i = load i1, ptr @btrfs_op.__already_done, align 1
  br i1 %.b37.i.i.i, label %land.end.i.i.i.sw.bb34.i.i.i_crit_edge, label %if.then.i.i.i161, !prof !322

land.end.i.i.i.sw.bb34.i.i.i_crit_edge:           ; preds = %land.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb34.i.i.i

if.then.i.i.i161:                                 ; preds = %land.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @btrfs_op.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 479, i32 noundef 9, ptr noundef null) #14
  br label %sw.bb34.i.i.i

sw.bb34.i.i.i:                                    ; preds = %if.then.i.i.i161, %land.end.i.i.i.sw.bb34.i.i.i_crit_edge, %if.end5.i.i.sw.bb34.i.i.i_crit_edge
  br label %btrfs_op.exit.i.i

btrfs_op.exit.i.i:                                ; preds = %sw.bb34.i.i.i, %sw.bb1.i.i.i, %if.end5.i.i.btrfs_op.exit.i.i_crit_edge
  %retval.0.i.i.i = phi i32 [ 0, %sw.bb34.i.i.i ], [ 1, %sw.bb1.i.i.i ], [ 2, %if.end5.i.i.btrfs_op.exit.i.i_crit_edge ]
  %call8.i.i = call i32 @btrfs_get_io_geometry(ptr noundef %43, ptr noundef %call.i64.i, i32 noundef %retval.0.i.i.i, i64 noundef %shl.i.i, ptr noundef nonnull %geom.i.i) #14
  call void @free_extent_map(ptr noundef %call.i64.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i.i)
  %cmp.i.i = icmp slt i32 %call8.i.i, 0
  br i1 %cmp.i.i, label %calc_bio_boundaries.exit.thread74.i, label %if.end11.i.i

calc_bio_boundaries.exit.thread74.i:              ; preds = %btrfs_op.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %geom.i.i) #14
  br label %alloc_new_bio.exit

if.end11.i.i:                                     ; preds = %btrfs_op.exit.i.i
  %60 = ptrtoint ptr %geom.i.i to i32
  call void @__asan_load8_noabort(i32 %60)
  %61 = load i64, ptr %geom.i.i, align 8
  %62 = call i64 @llvm.umin.i64(i64 %61, i64 4294967295) #14
  %63 = trunc i64 %62 to i32
  %64 = ptrtoint ptr %len_to_stripe_boundary.i.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %63, ptr %len_to_stripe_boundary.i.i, align 4
  %65 = ptrtoint ptr %bio_ctrl to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %bio_ctrl, align 4
  %bi_opf.i.i = getelementptr inbounds %struct.bio, ptr %66, i32 0, i32 2
  %67 = ptrtoint ptr %bi_opf.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %bi_opf.i.i, align 8
  %and21.i.i = and i32 %68, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 13, i32 %and21.i.i)
  %cmp22.not.i.i = icmp eq i32 %and21.i.i, 13
  br i1 %cmp22.not.i.i, label %if.end26.i.i, label %if.then24.i.i

if.then24.i.i:                                    ; preds = %if.end11.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %69 = ptrtoint ptr %len_to_oe_boundary.i.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 -1, ptr %len_to_oe_boundary.i.i, align 4
  br label %calc_bio_boundaries.exit.thread.i

if.end26.i.i:                                     ; preds = %if.end11.i.i
  %call27.i.i = call ptr @btrfs_lookup_ordered_extent(ptr noundef %add.ptr.i, i64 noundef %add30) #14
  %tobool28.not.i.i = icmp eq ptr %call27.i.i, null
  br i1 %tobool28.not.i.i, label %if.then29.i.i, label %if.end31.i.i

if.then29.i.i:                                    ; preds = %if.end26.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %70 = ptrtoint ptr %len_to_oe_boundary.i.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 -1, ptr %len_to_oe_boundary.i.i, align 4
  br label %calc_bio_boundaries.exit.thread.i

if.end31.i.i:                                     ; preds = %if.end26.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %disk_bytenr.i.i = getelementptr inbounds %struct.btrfs_ordered_extent, ptr %call27.i.i, i32 0, i32 1
  %71 = ptrtoint ptr %disk_bytenr.i.i to i32
  call void @__asan_load8_noabort(i32 %71)
  %72 = load i64, ptr %disk_bytenr.i.i, align 8
  %disk_num_bytes.i.i = getelementptr inbounds %struct.btrfs_ordered_extent, ptr %call27.i.i, i32 0, i32 3
  %73 = ptrtoint ptr %disk_num_bytes.i.i to i32
  call void @__asan_load8_noabort(i32 %73)
  %74 = load i64, ptr %disk_num_bytes.i.i, align 8
  %add.i.i = sub i64 %72, %shl.i.i
  %sub.i.i = add i64 %add.i.i, %74
  %conv32.i.i = trunc i64 %sub.i.i to i32
  %75 = ptrtoint ptr %len_to_oe_boundary.i.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 %conv32.i.i, ptr %len_to_oe_boundary.i.i, align 4
  call void @btrfs_put_ordered_extent(ptr noundef nonnull %call27.i.i) #14
  br label %calc_bio_boundaries.exit.thread.i

calc_bio_boundaries.exit.thread.i:                ; preds = %if.end31.i.i, %if.then29.i.i, %if.then24.i.i, %if.then.i.i
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %geom.i.i) #14
  br label %if.end11.i

calc_bio_boundaries.exit.i:                       ; preds = %if.end.i.i
  %76 = ptrtoint ptr %call.i64.i to i32
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %geom.i.i) #14
  %cmp.i = icmp slt ptr %call.i64.i, null
  br i1 %cmp.i, label %calc_bio_boundaries.exit.i.alloc_new_bio.exit_crit_edge, label %calc_bio_boundaries.exit.i.if.end11.i_crit_edge

calc_bio_boundaries.exit.i.if.end11.i_crit_edge:  ; preds = %calc_bio_boundaries.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end11.i

calc_bio_boundaries.exit.i.alloc_new_bio.exit_crit_edge: ; preds = %calc_bio_boundaries.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %alloc_new_bio.exit

if.end11.i:                                       ; preds = %calc_bio_boundaries.exit.i.if.end11.i_crit_edge, %calc_bio_boundaries.exit.thread.i
  br i1 %tobool12.not.i, label %if.end11.i.if.end15.i_crit_edge, label %if.then13.i

if.end11.i.if.end15.i_crit_edge:                  ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.i

if.then13.i:                                      ; preds = %if.end11.i
  %fs_devices.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %28, i32 0, i32 100
  %77 = ptrtoint ptr %fs_devices.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %fs_devices.i, align 8
  %latest_dev.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %78, i32 0, i32 11
  %79 = ptrtoint ptr %latest_dev.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %latest_dev.i, align 8
  %bdev14.i = getelementptr inbounds %struct.btrfs_device, ptr %80, i32 0, i32 7
  %81 = ptrtoint ptr %bdev14.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %bdev14.i, align 8
  %bi_flags.i.i.i = getelementptr inbounds %struct.bio, ptr %call.i.i, i32 0, i32 3
  %83 = ptrtoint ptr %bi_flags.i.i.i to i32
  call void @__asan_load2_noabort(i32 %83)
  %84 = load i16, ptr %bi_flags.i.i.i, align 4
  %conv1.i.i.i = and i16 %84, -2049
  store i16 %conv1.i.i.i, ptr %bi_flags.i.i.i, align 4
  %bi_bdev.i.i = getelementptr inbounds %struct.bio, ptr %call.i.i, i32 0, i32 1
  %85 = ptrtoint ptr %bi_bdev.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %bi_bdev.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %86, %82
  br i1 %cmp.not.i.i, label %if.then13.i.bio_set_dev.exit.i_crit_edge, label %if.then.i65.i

if.then13.i.bio_set_dev.exit.i_crit_edge:         ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %bio_set_dev.exit.i

if.then.i65.i:                                    ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv1.i8.i.i = and i16 %84, -2177
  %87 = ptrtoint ptr %bi_flags.i.i.i to i32
  call void @__asan_store2_noabort(i32 %87)
  store i16 %conv1.i8.i.i, ptr %bi_flags.i.i.i, align 4
  br label %bio_set_dev.exit.i

bio_set_dev.exit.i:                               ; preds = %if.then.i65.i, %if.then13.i.bio_set_dev.exit.i_crit_edge
  %88 = ptrtoint ptr %bi_bdev.i.i to i32
  call void @__asan_store4_noabort(i32 %88)
  store ptr %82, ptr %bi_bdev.i.i, align 4
  call void @bio_associate_blkg(ptr noundef %call.i.i) #14
  %89 = ptrtoint ptr %wb.i.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %wb.i.i, align 8
  %tobool.not.i67.i = icmp eq ptr %90, null
  br i1 %tobool.not.i67.i, label %bio_set_dev.exit.i.if.end15.i_crit_edge, label %if.then.i68.i

bio_set_dev.exit.i.if.end15.i_crit_edge:          ; preds = %bio_set_dev.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.i

if.then.i68.i:                                    ; preds = %bio_set_dev.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %blkcg_css.i.i = getelementptr inbounds %struct.bdi_writeback, ptr %90, i32 0, i32 30
  %91 = ptrtoint ptr %blkcg_css.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %blkcg_css.i.i, align 4
  call void @bio_associate_blkg_from_css(ptr noundef %call.i.i, ptr noundef %92) #14
  br label %if.end15.i

if.end15.i:                                       ; preds = %if.then.i68.i, %bio_set_dev.exit.i.if.end15.i_crit_edge, %if.end11.i.if.end15.i_crit_edge
  %93 = ptrtoint ptr %bi_opf.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %bi_opf.i, align 8
  %and17.i = and i32 %94, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 13, i32 %and17.i)
  %cmp18.i = icmp eq i32 %and17.i, 13
  br i1 %cmp18.i, label %if.then20.i, label %if.end15.i.if.end36_crit_edge

if.end15.i.if.end36_crit_edge:                    ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end36

if.then20.i:                                      ; preds = %if.end15.i
  %sectorsize.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %28, i32 0, i32 167
  %95 = ptrtoint ptr %sectorsize.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %sectorsize.i, align 4
  %conv21.i = zext i32 %96 to i64
  %call22.i = call ptr @btrfs_zoned_get_device(ptr noundef %28, i64 noundef %disk_bytenr, i64 noundef %conv21.i) #14
  %cmp.i70.i = icmp ugt ptr %call22.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i70.i, label %cleanup.i, label %cleanup.thread.i

cleanup.thread.i:                                 ; preds = %if.then20.i
  call void @__sanitizer_cov_trace_pc() #16
  %device28.i = getelementptr i8, ptr %call.i.i, i32 -92
  %97 = ptrtoint ptr %device28.i to i32
  call void @__asan_store4_noabort(i32 %97)
  store ptr %call22.i, ptr %device28.i, align 4
  br label %if.end36

cleanup.i:                                        ; preds = %if.then20.i
  call void @__sanitizer_cov_trace_pc() #16
  %98 = ptrtoint ptr %call22.i to i32
  br label %alloc_new_bio.exit

alloc_new_bio.exit:                               ; preds = %cleanup.i, %calc_bio_boundaries.exit.i.alloc_new_bio.exit_crit_edge, %calc_bio_boundaries.exit.thread74.i
  %ret.1.i = phi i32 [ %76, %calc_bio_boundaries.exit.i.alloc_new_bio.exit_crit_edge ], [ %98, %cleanup.i ], [ %call8.i.i, %calc_bio_boundaries.exit.thread74.i ]
  %99 = ptrtoint ptr %bio_ctrl to i32
  call void @__asan_store4_noabort(i32 %99)
  store ptr null, ptr %bio_ctrl, align 4
  %call31.i = call zeroext i8 @errno_to_blk_status(i32 noundef %ret.1.i) #14
  %bi_status.i = getelementptr inbounds %struct.bio, ptr %call.i.i, i32 0, i32 6
  %100 = ptrtoint ptr %bi_status.i to i32
  call void @__asan_store1_noabort(i32 %100)
  store i8 %call31.i, ptr %bi_status.i, align 2
  call void @bio_endio(ptr noundef %call.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.1.i)
  %cmp32 = icmp slt i32 %ret.1.i, 0
  br i1 %cmp32, label %alloc_new_bio.exit.cleanup96_crit_edge, label %alloc_new_bio.exit.if.end36_crit_edge

alloc_new_bio.exit.if.end36_crit_edge:            ; preds = %alloc_new_bio.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end36

alloc_new_bio.exit.cleanup96_crit_edge:           ; preds = %alloc_new_bio.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup96

if.end36:                                         ; preds = %alloc_new_bio.exit.if.end36_crit_edge, %cleanup.thread.i, %if.end15.i.if.end36_crit_edge, %while.body.if.end36_crit_edge
  %narrow = select i1 %tobool.not.i158, i32 %sub, i32 0
  %add43 = zext i32 %narrow to i64
  %add43.sink = add i64 %add43, %disk_bytenr
  %sub44 = sub i32 %size, %sub
  %call46 = call fastcc i32 @btrfs_bio_add_page(ptr noundef nonnull %bio_ctrl, ptr noundef %page, i64 noundef %add43.sink, i32 noundef %sub44, i32 noundef %cur.0196, i32 noundef %bio_flags)
  %101 = ptrtoint ptr %location.i.i to i32
  call void @__asan_loadN_noabort(i32 %101, i32 8)
  %102 = load i64, ptr %location.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %102)
  %tobool.not.i.i162 = icmp eq i64 %102, 0
  br i1 %tobool.not.i.i162, label %if.end36.if.then.i.i164_crit_edge, label %lor.lhs.false.i.i

if.end36.if.then.i.i164_crit_edge:                ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i164

lor.lhs.false.i.i:                                ; preds = %if.end36
  %103 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load1_noabort(i32 %103)
  %104 = load i8, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %104)
  %cmp.i.i163 = icmp eq i8 %104, -124
  br i1 %cmp.i.i163, label %lor.lhs.false.i.i.if.then.i.i164_crit_edge, label %lor.lhs.false.i.i.is_data_inode.exit_crit_edge

lor.lhs.false.i.i.is_data_inode.exit_crit_edge:   ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %is_data_inode.exit

lor.lhs.false.i.i.if.then.i.i164_crit_edge:       ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i164

if.then.i.i164:                                   ; preds = %lor.lhs.false.i.i.if.then.i.i164_crit_edge, %if.end36.if.then.i.i164_crit_edge
  %105 = ptrtoint ptr %i_ino.i.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %i_ino.i.i, align 8
  %conv3.i.i = zext i32 %106 to i64
  br label %is_data_inode.exit

is_data_inode.exit:                               ; preds = %if.then.i.i164, %lor.lhs.false.i.i.is_data_inode.exit_crit_edge
  %ino.0.i.i = phi i64 [ %conv3.i.i, %if.then.i.i164 ], [ %102, %lor.lhs.false.i.i.is_data_inode.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %ino.0.i.i)
  %cmp.i165.not = icmp eq i64 %ino.0.i.i, 1
  br i1 %cmp.i165.not, label %if.then49, label %is_data_inode.exit.if.end64_crit_edge

is_data_inode.exit.if.end64_crit_edge:            ; preds = %is_data_inode.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end64

if.then49:                                        ; preds = %is_data_inode.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call46)
  %cmp50 = icmp eq i32 %call46, 0
  %sub52 = sub i32 %size, %sub
  call void @__sanitizer_cov_trace_cmp4(i32 %call46, i32 %sub52)
  %cmp53 = icmp eq i32 %call46, %sub52
  %107 = select i1 %cmp50, i1 true, i1 %cmp53
  br i1 %107, label %if.then49.if.end64_crit_edge, label %cond.false62, !prof !322

if.then49.if.end64_crit_edge:                     ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end64

cond.false62:                                     ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.89, i32 noundef 3423) #18
  unreachable

if.end64:                                         ; preds = %if.then49.if.end64_crit_edge, %is_data_inode.exit.if.end64_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call46)
  %tobool67.not = icmp eq i32 %call46, 0
  %or.cond156 = select i1 %tobool12.not.i, i1 true, i1 %tobool67.not
  br i1 %or.cond156, label %if.end64.if.end69_crit_edge, label %if.then68

if.end64.if.end69_crit_edge:                      ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

if.then68:                                        ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #16
  call void @wbc_account_cgroup_owner(ptr noundef nonnull %wbc, ptr noundef %page, i32 noundef %call46) #14
  br label %if.end69

if.end69:                                         ; preds = %if.then68, %if.end64.if.end69_crit_edge
  %sub70 = sub i32 %size, %sub
  call void @__sanitizer_cov_trace_cmp4(i32 %call46, i32 %sub70)
  %cmp71 = icmp ult i32 %call46, %sub70
  br i1 %cmp71, label %if.then73, label %if.end69.cleanup_crit_edge

if.end69.cleanup_crit_edge:                       ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then73:                                        ; preds = %if.end69
  %108 = ptrtoint ptr %bio_ctrl to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %bio_ctrl, align 4
  %bi_size = getelementptr inbounds %struct.bio, ptr %109, i32 0, i32 8, i32 1
  %110 = ptrtoint ptr %bi_size to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %bi_size, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %111)
  %tobool75.not = icmp eq i32 %111, 0
  br i1 %tobool75.not, label %cond.false83, label %cond.end.i173, !prof !319

cond.false83:                                     ; preds = %if.then73
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.90, i32 noundef 3432) #18
  unreachable

cond.end.i173:                                    ; preds = %if.then73
  %112 = ptrtoint ptr %bio_flags6.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %bio_flags6.i, align 4
  %bi_private.i166 = getelementptr inbounds %struct.bio, ptr %109, i32 0, i32 11
  %114 = ptrtoint ptr %bi_private.i166 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %bi_private.i166, align 4
  store ptr null, ptr %bi_private.i166, align 4
  %private_data.i170 = getelementptr inbounds %struct.extent_io_tree, ptr %115, i32 0, i32 2
  %116 = ptrtoint ptr %private_data.i170 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %private_data.i170, align 8
  %location.i.i.i171 = getelementptr i8, ptr %117, i32 -860
  %118 = ptrtoint ptr %location.i.i.i171 to i32
  call void @__asan_loadN_noabort(i32 %118, i32 8)
  %119 = load i64, ptr %location.i.i.i171, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %119)
  %tobool.not.i.i.i172 = icmp eq i64 %119, 0
  br i1 %tobool.not.i.i.i172, label %cond.end.i173.if.then.i.i.i179_crit_edge, label %lor.lhs.false.i.i.i176

cond.end.i173.if.then.i.i.i179_crit_edge:         ; preds = %cond.end.i173
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i179

lor.lhs.false.i.i.i176:                           ; preds = %cond.end.i173
  %type.i.i.i174 = getelementptr i8, ptr %117, i32 -852
  %120 = ptrtoint ptr %type.i.i.i174 to i32
  call void @__asan_load1_noabort(i32 %120)
  %121 = load i8, ptr %type.i.i.i174, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %121)
  %cmp.i.i.i175 = icmp eq i8 %121, -124
  br i1 %cmp.i.i.i175, label %lor.lhs.false.i.i.i176.if.then.i.i.i179_crit_edge, label %lor.lhs.false.i.i.i176.is_data_inode.exit.i182_crit_edge

lor.lhs.false.i.i.i176.is_data_inode.exit.i182_crit_edge: ; preds = %lor.lhs.false.i.i.i176
  call void @__sanitizer_cov_trace_pc() #16
  br label %is_data_inode.exit.i182

lor.lhs.false.i.i.i176.if.then.i.i.i179_crit_edge: ; preds = %lor.lhs.false.i.i.i176
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i179

if.then.i.i.i179:                                 ; preds = %lor.lhs.false.i.i.i176.if.then.i.i.i179_crit_edge, %cond.end.i173.if.then.i.i.i179_crit_edge
  %i_ino.i.i.i177 = getelementptr i8, ptr %117, i32 40
  %122 = ptrtoint ptr %i_ino.i.i.i177 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %i_ino.i.i.i177, align 8
  %conv3.i.i.i178 = zext i32 %123 to i64
  br label %is_data_inode.exit.i182

is_data_inode.exit.i182:                          ; preds = %if.then.i.i.i179, %lor.lhs.false.i.i.i176.is_data_inode.exit.i182_crit_edge
  %ino.0.i.i.i180 = phi i64 [ %conv3.i.i.i178, %if.then.i.i.i179 ], [ %119, %lor.lhs.false.i.i.i176.is_data_inode.exit.i182_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %ino.0.i.i.i180)
  %cmp.i.not.i181 = icmp eq i64 %ino.0.i.i.i180, 1
  br i1 %cmp.i.not.i181, label %if.else.i186, label %if.then.i184

if.then.i184:                                     ; preds = %is_data_inode.exit.i182
  call void @__sanitizer_cov_trace_pc() #16
  %call5.i183 = call zeroext i8 @btrfs_submit_data_bio(ptr noundef %117, ptr noundef %109, i32 noundef %mirror_num, i32 noundef %113) #14
  br label %submit_one_bio.exit189

if.else.i186:                                     ; preds = %is_data_inode.exit.i182
  call void @__sanitizer_cov_trace_pc() #16
  %call7.i185 = call zeroext i8 @btrfs_submit_metadata_bio(ptr noundef %117, ptr noundef %109, i32 noundef %mirror_num, i32 noundef %113) #14
  br label %submit_one_bio.exit189

submit_one_bio.exit189:                           ; preds = %if.else.i186, %if.then.i184
  %ret.0.i187 = phi i8 [ %call5.i183, %if.then.i184 ], [ %call7.i185, %if.else.i186 ]
  %call8.i188 = call i32 @blk_status_to_errno(i8 noundef zeroext %ret.0.i187) #14
  %124 = ptrtoint ptr %bio_ctrl to i32
  call void @__asan_store4_noabort(i32 %124)
  store ptr null, ptr %bio_ctrl, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i188)
  %cmp89 = icmp slt i32 %call8.i188, 0
  br i1 %cmp89, label %submit_one_bio.exit189.cleanup96_crit_edge, label %submit_one_bio.exit189.cleanup_crit_edge

submit_one_bio.exit189.cleanup_crit_edge:         ; preds = %submit_one_bio.exit189
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

submit_one_bio.exit189.cleanup96_crit_edge:       ; preds = %submit_one_bio.exit189
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup96

cleanup:                                          ; preds = %submit_one_bio.exit189.cleanup_crit_edge, %if.end69.cleanup_crit_edge
  %add94 = add i32 %call46, %cur.0196
  %cmp25 = icmp ult i32 %add94, %add
  br i1 %cmp25, label %cleanup.while.body_crit_edge, label %cleanup.cleanup96_crit_edge

cleanup.cleanup96_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup96

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

cleanup96:                                        ; preds = %cleanup.cleanup96_crit_edge, %submit_one_bio.exit189.cleanup96_crit_edge, %alloc_new_bio.exit.cleanup96_crit_edge, %if.end23.cleanup96_crit_edge, %submit_one_bio.exit.cleanup96_crit_edge
  %retval.2 = phi i32 [ %call8.i, %submit_one_bio.exit.cleanup96_crit_edge ], [ 0, %if.end23.cleanup96_crit_edge ], [ 0, %cleanup.cleanup96_crit_edge ], [ %ret.1.i, %alloc_new_bio.exit.cleanup96_crit_edge ], [ %call8.i188, %submit_one_bio.exit189.cleanup96_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @end_bio_extent_readpage(ptr noundef %bio) #0 align 64 {
entry:
  %cached.i275 = alloca ptr, align 4
  %cached.i = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %bio, i32 -96
  %bi_flags.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 3
  %0 = ptrtoint ptr %bi_flags.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %bi_flags.i, align 4
  %2 = and i16 %1, 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %2)
  %cmp.i.not = icmp eq i16 %2, 0
  br i1 %cmp.i.not, label %for.cond.preheader, label %cond.false, !prof !322

for.cond.preheader:                               ; preds = %entry
  %bi_vcnt.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 17
  %3 = ptrtoint ptr %bi_vcnt.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %bi_vcnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %4)
  %cmp.not.i382.not = icmp eq i16 %4, 0
  br i1 %cmp.not.i382.not, label %for.end.thread, label %if.end.i.lr.ph

for.end.thread:                                   ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cached.i275) #14
  br label %endio_readpage_release_extent.exit306

if.end.i.lr.ph:                                   ; preds = %for.cond.preheader
  %bi_io_vec.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 20
  %bi_status = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 6
  %bi_iter = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 8
  br label %if.end.i

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.93, i32 noundef 3007) #18
  unreachable

if.end.i:                                         ; preds = %cleanup.if.end.i_crit_edge, %if.end.i.lr.ph
  %bio_offset.0396 = phi i32 [ 0, %if.end.i.lr.ph ], [ %bio_offset.1, %cleanup.if.end.i_crit_edge ]
  %iter_all.sroa.0.0395 = phi ptr [ inttoptr (i32 -1 to ptr), %if.end.i.lr.ph ], [ %iter_all.sroa.0.1, %cleanup.if.end.i_crit_edge ]
  %iter_all.sroa.16.0394 = phi i32 [ 0, %if.end.i.lr.ph ], [ %spec.select365, %cleanup.if.end.i_crit_edge ]
  %iter_all.sroa.20.0393 = phi i32 [ 0, %if.end.i.lr.ph ], [ %spec.select, %cleanup.if.end.i_crit_edge ]
  %processed.sroa.23.0391 = phi i8 [ 0, %if.end.i.lr.ph ], [ %processed.sroa.23.2, %cleanup.if.end.i_crit_edge ]
  %processed.sroa.13.0388 = phi i64 [ 0, %if.end.i.lr.ph ], [ %processed.sroa.13.2, %cleanup.if.end.i_crit_edge ]
  %processed.sroa.7315.0385 = phi i64 [ 0, %if.end.i.lr.ph ], [ %processed.sroa.7315.2, %cleanup.if.end.i_crit_edge ]
  %processed.sroa.0.0383 = phi ptr [ null, %if.end.i.lr.ph ], [ %processed.sroa.0.2, %cleanup.if.end.i_crit_edge ]
  %5 = ptrtoint ptr %bi_io_vec.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %bi_io_vec.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %iter_all.sroa.20.0393)
  %tobool.not.i.i = icmp eq i32 %iter_all.sroa.20.0393, 0
  br i1 %tobool.not.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %incdec.ptr.i.i = getelementptr %struct.page, ptr %iter_all.sroa.0.0395, i32 1
  br label %if.end.i.i

if.else.i.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i = getelementptr %struct.bio_vec, ptr %6, i32 %iter_all.sroa.16.0394
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx.i, align 4
  %bv_offset3.i.i = getelementptr %struct.bio_vec, ptr %6, i32 %iter_all.sroa.16.0394, i32 2
  %9 = ptrtoint ptr %bv_offset3.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %bv_offset3.i.i, align 4
  %shr.i.i = lshr i32 %10, 12
  %add.ptr.i.i = getelementptr %struct.page, ptr %8, i32 %shr.i.i
  %and.i.i = and i32 %10, 4095
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else.i.i, %if.then.i.i
  %iter_all.sroa.0.1 = phi ptr [ %add.ptr.i.i, %if.else.i.i ], [ %incdec.ptr.i.i, %if.then.i.i ]
  %.sink.i.i = phi i32 [ %and.i.i, %if.else.i.i ], [ 0, %if.then.i.i ]
  %sub.i.i = sub nuw nsw i32 4096, %.sink.i.i
  %bv_len.i.i = getelementptr %struct.bio_vec, ptr %6, i32 %iter_all.sroa.16.0394, i32 1
  %11 = ptrtoint ptr %bv_len.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %bv_len.i.i, align 4
  %sub9.i.i = sub i32 %12, %iter_all.sroa.20.0393
  %13 = call i32 @llvm.umin.i32(i32 %sub.i.i, i32 %sub9.i.i) #14
  %add.i.i = add i32 %13, %iter_all.sroa.20.0393
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %12)
  %cmp15.i.i = icmp eq i32 %add.i.i, %12
  %spec.select = select i1 %cmp15.i.i, i32 0, i32 %add.i.i
  %inc.i.i = zext i1 %cmp15.i.i to i32
  %spec.select365 = add nuw nsw i32 %iter_all.sroa.16.0394, %inc.i.i
  %14 = ptrtoint ptr %bi_status to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %bi_status, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool6.not = icmp eq i8 %15, 0
  %mapping = getelementptr inbounds %struct.page, ptr %iter_all.sroa.0.1, i32 0, i32 1, i32 0, i32 1
  %16 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %mapping, align 4
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %17, align 4
  %i_sb = getelementptr inbounds %struct.inode, ptr %19, i32 0, i32 8
  %20 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %21, i32 0, i32 33
  %22 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %s_fs_info.i, align 16
  %sectorsize10 = getelementptr inbounds %struct.btrfs_fs_info, ptr %23, i32 0, i32 167
  %24 = ptrtoint ptr %sectorsize10 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %sectorsize10, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @end_bio_extent_readpage.__UNIQUE_ID_ddebug968, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@end_bio_extent_readpage, %if.then)) #14
          to label %do.end [label %if.then], !srcloc !326

if.then:                                          ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %26 = ptrtoint ptr %bi_iter to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %bi_iter, align 8
  %28 = ptrtoint ptr %bi_status to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %bi_status, align 2
  %conv = zext i8 %29 to i32
  %30 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %add.ptr.i, align 8
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %23, ptr noundef nonnull @.str.96, i64 noundef %27, i32 noundef %conv, i32 noundef %31) #17
  br label %do.end

do.end:                                           ; preds = %if.then, %if.end.i.i
  %add.ptr.i241 = getelementptr i8, ptr %19, i32 -864
  %io_tree = getelementptr i8, ptr %19, i32 -736
  %io_failure_tree = getelementptr i8, ptr %19, i32 -664
  %sub = add i32 %25, -1
  %and = and i32 %sub, %.sink.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %if.else, label %do.end.if.end36.sink.split_crit_edge

do.end.if.end36.sink.split_crit_edge:             ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end36.sink.split

if.else:                                          ; preds = %do.end
  %add = add nuw nsw i32 %13, %.sink.i.i
  %and29 = and i32 %sub, %add
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29)
  %cmp30 = icmp eq i32 %and29, 0
  br i1 %cmp30, label %if.else.if.end36_crit_edge, label %if.else.if.end36.sink.split_crit_edge

if.else.if.end36.sink.split_crit_edge:            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end36.sink.split

if.else.if.end36_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end36

if.end36.sink.split:                              ; preds = %if.else.if.end36.sink.split_crit_edge, %do.end.if.end36.sink.split_crit_edge
  %.str.98.sink = phi ptr [ @.str.97, %do.end.if.end36.sink.split_crit_edge ], [ @.str.98, %if.else.if.end36.sink.split_crit_edge ]
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %23, ptr noundef nonnull %.str.98.sink, i32 noundef %.sink.i.i, i32 noundef %13) #17
  br label %if.end36

if.end36:                                         ; preds = %if.end36.sink.split, %if.else.if.end36_crit_edge
  %index.i = getelementptr inbounds %struct.page, ptr %iter_all.sroa.0.1, i32 0, i32 1, i32 0, i32 2
  %32 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %index.i, align 4
  %conv.i243 = zext i32 %33 to i64
  %shl.i = shl nuw nsw i64 %conv.i243, 12
  %conv39 = zext i32 %.sink.i.i to i64
  %add40 = or i64 %shl.i, %conv39
  %conv42 = zext i32 %13 to i64
  %add43 = add nsw i64 %conv42, -1
  %sub44 = add nsw i64 %add43, %add40
  %34 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %add.ptr.i, align 8
  br i1 %tobool6.not, label %if.then54, label %if.end36.if.end79_crit_edge, !prof !322

if.end36.if.end79_crit_edge:                      ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end79

if.then54:                                        ; preds = %if.end36
  %location.i.i = getelementptr i8, ptr %19, i32 -860
  %36 = ptrtoint ptr %location.i.i to i32
  call void @__asan_loadN_noabort(i32 %36, i32 8)
  %37 = load i64, ptr %location.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %37)
  %tobool.not.i.i244 = icmp eq i64 %37, 0
  br i1 %tobool.not.i.i244, label %if.then54.if.then.i.i245_crit_edge, label %lor.lhs.false.i.i

if.then54.if.then.i.i245_crit_edge:               ; preds = %if.then54
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i245

lor.lhs.false.i.i:                                ; preds = %if.then54
  %type.i.i = getelementptr i8, ptr %19, i32 -852
  %38 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %39)
  %cmp.i.i = icmp eq i8 %39, -124
  br i1 %cmp.i.i, label %lor.lhs.false.i.i.if.then.i.i245_crit_edge, label %lor.lhs.false.i.i.is_data_inode.exit_crit_edge

lor.lhs.false.i.i.is_data_inode.exit_crit_edge:   ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %is_data_inode.exit

lor.lhs.false.i.i.if.then.i.i245_crit_edge:       ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i245

if.then.i.i245:                                   ; preds = %lor.lhs.false.i.i.if.then.i.i245_crit_edge, %if.then54.if.then.i.i245_crit_edge
  %i_ino.i.i = getelementptr i8, ptr %19, i32 40
  %40 = ptrtoint ptr %i_ino.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %i_ino.i.i, align 8
  %conv3.i.i = zext i32 %41 to i64
  br label %is_data_inode.exit

is_data_inode.exit:                               ; preds = %if.then.i.i245, %lor.lhs.false.i.i.is_data_inode.exit_crit_edge
  %ino.0.i.i = phi i64 [ %conv3.i.i, %if.then.i.i245 ], [ %37, %lor.lhs.false.i.i.is_data_inode.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %ino.0.i.i)
  %cmp.i246.not = icmp eq i64 %ino.0.i.i, 1
  br i1 %cmp.i246.not, label %if.else58, label %if.then56

if.then56:                                        ; preds = %is_data_inode.exit
  call void @__sanitizer_cov_trace_pc() #16
  %call57 = call i32 @btrfs_verify_data_csum(ptr noundef %add.ptr.i, i32 noundef %bio_offset.0396, ptr noundef %iter_all.sroa.0.1, i64 noundef %add40, i64 noundef %sub44) #14
  br label %if.end60

if.else58:                                        ; preds = %is_data_inode.exit
  call void @__sanitizer_cov_trace_pc() #16
  %call59 = call i32 @btrfs_validate_metadata_buffer(ptr noundef %add.ptr.i, ptr noundef %iter_all.sroa.0.1, i64 noundef %add40, i64 noundef %sub44, i32 noundef %35) #14
  br label %if.end60

if.end60:                                         ; preds = %if.else58, %if.then56
  %ret.0 = phi i32 [ %call57, %if.then56 ], [ %call59, %if.else58 ]
  %error_bitmap.0 = phi i32 [ %call57, %if.then56 ], [ -1, %if.else58 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool61.not = icmp eq i32 %ret.0, 0
  br i1 %tobool61.not, label %if.else63, label %if.end60.if.end79_crit_edge

if.end60.if.end79_crit_edge:                      ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end79

if.else63:                                        ; preds = %if.end60
  %42 = ptrtoint ptr %add.ptr.i241 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %add.ptr.i241, align 8
  %fs_info65 = getelementptr inbounds %struct.btrfs_root, ptr %43, i32 0, i32 8
  %44 = ptrtoint ptr %fs_info65 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %fs_info65, align 8
  %46 = ptrtoint ptr %location.i.i to i32
  call void @__asan_loadN_noabort(i32 %46, i32 8)
  %47 = load i64, ptr %location.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %47)
  %tobool.not.i = icmp eq i64 %47, 0
  br i1 %tobool.not.i, label %if.else63.if.then.i_crit_edge, label %lor.lhs.false.i

if.else63.if.then.i_crit_edge:                    ; preds = %if.else63
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.else63
  %type.i = getelementptr i8, ptr %19, i32 -852
  %48 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %49)
  %cmp.i249 = icmp eq i8 %49, -124
  br i1 %cmp.i249, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.if.then109.critedge_crit_edge

lor.lhs.false.i.if.then109.critedge_crit_edge:    ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then109.critedge

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.else63.if.then.i_crit_edge
  %i_ino.i = getelementptr i8, ptr %19, i32 40
  %50 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %51 to i64
  br label %if.then109.critedge

if.end79:                                         ; preds = %if.end60.if.end79_crit_edge, %if.end36.if.end79_crit_edge
  %error_bitmap.1.ph = phi i32 [ %error_bitmap.0, %if.end60.if.end79_crit_edge ], [ -1, %if.end36.if.end79_crit_edge ]
  %location.i.i251 = getelementptr i8, ptr %19, i32 -860
  %52 = ptrtoint ptr %location.i.i251 to i32
  call void @__asan_loadN_noabort(i32 %52, i32 8)
  %53 = load i64, ptr %location.i.i251, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %53)
  %tobool.not.i.i252 = icmp eq i64 %53, 0
  br i1 %tobool.not.i.i252, label %if.end79.if.then.i.i258_crit_edge, label %lor.lhs.false.i.i255

if.end79.if.then.i.i258_crit_edge:                ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i258

lor.lhs.false.i.i255:                             ; preds = %if.end79
  %type.i.i253 = getelementptr i8, ptr %19, i32 -852
  %54 = ptrtoint ptr %type.i.i253 to i32
  call void @__asan_load1_noabort(i32 %54)
  %55 = load i8, ptr %type.i.i253, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %55)
  %cmp.i.i254 = icmp eq i8 %55, -124
  br i1 %cmp.i.i254, label %lor.lhs.false.i.i255.if.then.i.i258_crit_edge, label %lor.lhs.false.i.i255.is_data_inode.exit261_crit_edge

lor.lhs.false.i.i255.is_data_inode.exit261_crit_edge: ; preds = %lor.lhs.false.i.i255
  call void @__sanitizer_cov_trace_pc() #16
  br label %is_data_inode.exit261

lor.lhs.false.i.i255.if.then.i.i258_crit_edge:    ; preds = %lor.lhs.false.i.i255
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i258

if.then.i.i258:                                   ; preds = %lor.lhs.false.i.i255.if.then.i.i258_crit_edge, %if.end79.if.then.i.i258_crit_edge
  %i_ino.i.i256 = getelementptr i8, ptr %19, i32 40
  %56 = ptrtoint ptr %i_ino.i.i256 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %i_ino.i.i256, align 8
  %conv3.i.i257 = zext i32 %57 to i64
  br label %is_data_inode.exit261

is_data_inode.exit261:                            ; preds = %if.then.i.i258, %lor.lhs.false.i.i255.is_data_inode.exit261_crit_edge
  %ino.0.i.i259 = phi i64 [ %conv3.i.i257, %if.then.i.i258 ], [ %53, %lor.lhs.false.i.i255.is_data_inode.exit261_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %ino.0.i.i259)
  %cmp.i260.not = icmp eq i64 %ino.0.i.i259, 1
  br i1 %cmp.i260.not, label %if.else99, label %if.then81

if.then81:                                        ; preds = %is_data_inode.exit261
  %58 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %index.i, align 4
  %conv.i263 = zext i32 %59 to i64
  %shl.i264.neg = mul nuw i64 %conv.i263, 4294963200
  %sub83 = add i64 %shl.i264.neg, %add40
  %conv84 = trunc i64 %sub83 to i32
  call fastcc void @submit_read_repair(ptr noundef %19, ptr noundef %bio, i32 noundef %bio_offset.0396, ptr noundef %iter_all.sroa.0.1, i32 noundef %conv84, i64 noundef %add40, i64 noundef %sub44, i32 noundef %35, i32 noundef %error_bitmap.1.ph)
  %add86 = add i32 %13, %bio_offset.0396
  call void @__sanitizer_cov_trace_cmp4(i32 %add86, i32 %bio_offset.0396)
  %cmp87 = icmp ugt i32 %add86, %bio_offset.0396
  br i1 %cmp87, label %if.then81.cleanup_crit_edge, label %cond.false96, !prof !322

if.then81.cleanup_crit_edge:                      ; preds = %if.then81
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cond.false96:                                     ; preds = %if.then81
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.99, i32 noundef 3079) #18
  unreachable

if.else99:                                        ; preds = %is_data_inode.exit261
  call void @__sanitizer_cov_trace_pc() #16
  %call100 = call fastcc ptr @find_extent_buffer_readpage(ptr noundef %23, ptr noundef %iter_all.sroa.0.1, i64 noundef %add40)
  %bflags = getelementptr inbounds %struct.extent_buffer, ptr %call100, i32 0, i32 2
  call void @_set_bit(i32 noundef 7, ptr noundef %bflags) #14
  %read_mirror = getelementptr inbounds %struct.extent_buffer, ptr %call100, i32 0, i32 7
  %60 = ptrtoint ptr %read_mirror to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %35, ptr %read_mirror, align 8
  %io_pages = getelementptr inbounds %struct.extent_buffer, ptr %call100, i32 0, i32 6
  %call.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %io_pages, i32 noundef 4) #14
  call void @llvm.prefetch.p0(ptr %io_pages, i32 1, i32 3, i32 1) #14
  %61 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %io_pages, ptr %io_pages, i32 1, ptr elementtype(i32) %io_pages) #14, !srcloc !381
  br label %if.end131

if.then109.critedge:                              ; preds = %if.then.i, %lor.lhs.false.i.if.then109.critedge_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %47, %lor.lhs.false.i.if.then109.critedge_crit_edge ]
  %call68 = call i32 @clean_io_failure(ptr noundef %45, ptr noundef %io_failure_tree, ptr noundef %io_tree, i64 noundef %add40, ptr noundef %iter_all.sroa.0.1, i64 noundef %ino.0.i, i32 noundef 0)
  %call110 = call fastcc i64 @i_size_read(ptr noundef %19)
  %62 = lshr i64 %call110, 12
  %conv111 = trunc i64 %62 to i32
  %63 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %index.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %64, i32 %conv111)
  %cmp112 = icmp ne i32 %64, %conv111
  call void @__sanitizer_cov_trace_cmp8(i64 %call110, i64 %sub44)
  %cmp114.not = icmp ugt i64 %call110, %sub44
  %or.cond = select i1 %cmp112, i1 true, i1 %cmp114.not
  br i1 %or.cond, label %if.then109.critedge.if.end131_crit_edge, label %if.then116

if.then109.critedge.if.end131_crit_edge:          ; preds = %if.then109.critedge
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end131

if.then116:                                       ; preds = %if.then109.critedge
  call void @__sanitizer_cov_trace_pc() #16
  %conv117 = trunc i64 %call110 to i32
  %and118 = and i32 %conv117, 4095
  %65 = call i32 @llvm.umax.i32(i32 %and118, i32 %.sink.i.i)
  %conv127 = trunc i64 %sub44 to i32
  %and128 = and i32 %conv127, 4095
  %add129 = add nuw nsw i32 %and128, 1
  call void @zero_user_segments(ptr noundef %iter_all.sroa.0.1, i32 noundef %65, i32 noundef %add129, i32 noundef 0, i32 noundef 0) #14
  br label %if.end131

if.end131:                                        ; preds = %if.then116, %if.then109.critedge.if.end131_crit_edge, %if.else99
  %uptodate.0.shrunk362 = phi i1 [ true, %if.then109.critedge.if.end131_crit_edge ], [ true, %if.then116 ], [ false, %if.else99 ]
  %add132 = add i32 %13, %bio_offset.0396
  call void @__sanitizer_cov_trace_cmp4(i32 %add132, i32 %bio_offset.0396)
  %cmp133 = icmp ugt i32 %add132, %bio_offset.0396
  br i1 %cmp133, label %cond.end143, label %cond.false142, !prof !322

cond.false142:                                    ; preds = %if.end131
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.99, i32 noundef 3112) #18
  unreachable

cond.end143:                                      ; preds = %if.end131
  call fastcc void @end_page_read(ptr noundef %iter_all.sroa.0.1, i1 noundef zeroext %uptodate.0.shrunk362, i64 noundef %add40, i32 noundef %13)
  %66 = getelementptr inbounds %struct.page, ptr %iter_all.sroa.0.1, i32 0, i32 1
  %67 = ptrtoint ptr %66 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %66, align 4
  %and.i.i266 = and i32 %68, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i266)
  %tobool.not.i.i267 = icmp eq i32 %and.i.i266, 0
  br i1 %tobool.not.i.i267, label %if.end.i.i270, label %if.then.i.i269, !prof !322

if.then.i.i269:                                   ; preds = %cond.end143
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i268 = add i32 %68, -1
  br label %_compound_head.exit.i

if.end.i.i270:                                    ; preds = %cond.end143
  call void @__sanitizer_cov_trace_pc() #16
  %69 = ptrtoint ptr %iter_all.sroa.0.1 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i270, %if.then.i.i269
  %retval.0.i.i = phi i32 [ %sub.i.i268, %if.then.i.i269 ], [ %69, %if.end.i.i270 ]
  %70 = inttoptr i32 %retval.0.i.i to ptr
  %71 = getelementptr inbounds %struct.page, ptr %70, i32 0, i32 1
  %72 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %71, align 4
  %and.i.i.i.i = and i32 %73, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %folio_flags.exit.i.i, label %if.then.i.i.i, !prof !322

if.then.i.i.i:                                    ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %74 = inttoptr i32 %retval.0.i.i to ptr
  call void @dump_page(ptr noundef %74, ptr noundef nonnull @.str.82) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

folio_flags.exit.i.i:                             ; preds = %_compound_head.exit.i
  %75 = ptrtoint ptr %70 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load volatile i32, ptr %70, align 4
  %77 = and i32 %76, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %77)
  %tobool.i.not.i = icmp eq i32 %77, 0
  br i1 %tobool.i.not.i, label %folio_flags.exit.i.i.PageUptodate.exit_crit_edge, label %do.end.i.i

folio_flags.exit.i.i.PageUptodate.exit_crit_edge: ; preds = %folio_flags.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %PageUptodate.exit

do.end.i.i:                                       ; preds = %folio_flags.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !379
  br label %PageUptodate.exit

PageUptodate.exit:                                ; preds = %do.end.i.i, %folio_flags.exit.i.i.PageUptodate.exit_crit_edge
  %.lobit = lshr exact i32 %77, 2
  %78 = trunc i32 %.lobit to i8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cached.i) #14
  %79 = ptrtoint ptr %cached.i to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr null, ptr %cached.i, align 4
  %tobool.not.i271 = icmp eq ptr %processed.sroa.0.0383, null
  br i1 %tobool.not.i271, label %PageUptodate.exit.endio_readpage_release_extent.exit_crit_edge, label %if.end.i273

PageUptodate.exit.endio_readpage_release_extent.exit_crit_edge: ; preds = %PageUptodate.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %endio_readpage_release_extent.exit

if.end.i273:                                      ; preds = %PageUptodate.exit
  %cmp.i272 = icmp eq ptr %processed.sroa.0.0383, %add.ptr.i241
  call void @__sanitizer_cov_trace_cmp1(i8 %processed.sroa.23.0391, i8 %78)
  %cmp7.i = icmp eq i8 %processed.sroa.23.0391, %78
  %or.cond366 = select i1 %cmp.i272, i1 %cmp7.i, i1 false
  br i1 %or.cond366, label %land.lhs.true9.i, label %if.end.i273.if.end19.i_crit_edge

if.end.i273.if.end19.i_crit_edge:                 ; preds = %if.end.i273
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19.i

land.lhs.true9.i:                                 ; preds = %if.end.i273
  %add.i = add i64 %processed.sroa.13.0388, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i, i64 %add40)
  %cmp11.not.i = icmp ult i64 %add.i, %add40
  call void @__sanitizer_cov_trace_cmp8(i64 %processed.sroa.13.0388, i64 %sub44)
  %cmp15.not.i = icmp ugt i64 %processed.sroa.13.0388, %sub44
  %or.cond.i = or i1 %cmp11.not.i, %cmp15.not.i
  br i1 %or.cond.i, label %land.lhs.true9.i.if.end19.i_crit_edge, label %land.lhs.true9.i.endio_readpage_release_extent.exit_crit_edge

land.lhs.true9.i.endio_readpage_release_extent.exit_crit_edge: ; preds = %land.lhs.true9.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %endio_readpage_release_extent.exit

land.lhs.true9.i.if.end19.i_crit_edge:            ; preds = %land.lhs.true9.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19.i

if.end19.i:                                       ; preds = %land.lhs.true9.i.if.end19.i_crit_edge, %if.end.i273.if.end19.i_crit_edge
  %io_tree.i = getelementptr inbounds %struct.btrfs_inode, ptr %processed.sroa.0.0383, i32 0, i32 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %processed.sroa.23.0391)
  %tobool22.not.i = icmp eq i8 %processed.sroa.23.0391, 0
  br i1 %tobool22.not.i, label %if.end19.i.if.end30.i_crit_edge, label %land.lhs.true24.i

if.end19.i.if.end30.i_crit_edge:                  ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30.i

land.lhs.true24.i:                                ; preds = %if.end19.i
  %track_uptodate.i = getelementptr inbounds %struct.btrfs_inode, ptr %processed.sroa.0.0383, i32 0, i32 4, i32 4
  %80 = ptrtoint ptr %track_uptodate.i to i32
  call void @__asan_load1_noabort(i32 %80)
  %81 = load i8, ptr %track_uptodate.i, align 8, !range !382
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %81)
  %tobool25.not.i = icmp eq i8 %81, 0
  br i1 %tobool25.not.i, label %land.lhs.true24.i.if.end30.i_crit_edge, label %if.then27.i

land.lhs.true24.i.if.end30.i_crit_edge:           ; preds = %land.lhs.true24.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30.i

if.then27.i:                                      ; preds = %land.lhs.true24.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i274 = call i32 @set_extent_bit(ptr noundef %io_tree.i, i64 noundef %processed.sroa.7315.0385, i64 noundef %processed.sroa.13.0388, i32 noundef 2, i32 noundef 0, ptr noundef null, ptr noundef nonnull %cached.i, i32 noundef 2592, ptr noundef null) #14
  br label %if.end30.i

if.end30.i:                                       ; preds = %if.then27.i, %land.lhs.true24.i.if.end30.i_crit_edge, %if.end19.i.if.end30.i_crit_edge
  %call.i63.i = call i32 @__clear_extent_bit(ptr noundef %io_tree.i, i64 noundef %processed.sroa.7315.0385, i64 noundef %processed.sroa.13.0388, i32 noundef 4, i32 noundef 1, i32 noundef 0, ptr noundef nonnull %cached.i, i32 noundef 2592, ptr noundef null) #14
  br label %endio_readpage_release_extent.exit

endio_readpage_release_extent.exit:               ; preds = %if.end30.i, %land.lhs.true9.i.endio_readpage_release_extent.exit_crit_edge, %PageUptodate.exit.endio_readpage_release_extent.exit_crit_edge
  %processed.sroa.0.1 = phi ptr [ %processed.sroa.0.0383, %land.lhs.true9.i.endio_readpage_release_extent.exit_crit_edge ], [ %add.ptr.i241, %if.end30.i ], [ %add.ptr.i241, %PageUptodate.exit.endio_readpage_release_extent.exit_crit_edge ]
  %processed.sroa.7315.1 = phi i64 [ %processed.sroa.7315.0385, %land.lhs.true9.i.endio_readpage_release_extent.exit_crit_edge ], [ %add40, %if.end30.i ], [ %add40, %PageUptodate.exit.endio_readpage_release_extent.exit_crit_edge ]
  %processed.sroa.23.1 = phi i8 [ %processed.sroa.23.0391, %land.lhs.true9.i.endio_readpage_release_extent.exit_crit_edge ], [ %78, %if.end30.i ], [ %78, %PageUptodate.exit.endio_readpage_release_extent.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cached.i) #14
  br label %cleanup

cleanup:                                          ; preds = %endio_readpage_release_extent.exit, %if.then81.cleanup_crit_edge
  %processed.sroa.0.2 = phi ptr [ %processed.sroa.0.1, %endio_readpage_release_extent.exit ], [ %processed.sroa.0.0383, %if.then81.cleanup_crit_edge ]
  %processed.sroa.7315.2 = phi i64 [ %processed.sroa.7315.1, %endio_readpage_release_extent.exit ], [ %processed.sroa.7315.0385, %if.then81.cleanup_crit_edge ]
  %processed.sroa.13.2 = phi i64 [ %sub44, %endio_readpage_release_extent.exit ], [ %processed.sroa.13.0388, %if.then81.cleanup_crit_edge ]
  %processed.sroa.23.2 = phi i8 [ %processed.sroa.23.1, %endio_readpage_release_extent.exit ], [ %processed.sroa.23.0391, %if.then81.cleanup_crit_edge ]
  %bio_offset.1 = phi i32 [ %add132, %endio_readpage_release_extent.exit ], [ %add86, %if.then81.cleanup_crit_edge ]
  %82 = ptrtoint ptr %bi_vcnt.i to i32
  call void @__asan_load2_noabort(i32 %82)
  %83 = load i16, ptr %bi_vcnt.i, align 8
  %conv.i = zext i16 %83 to i32
  %cmp.not.i = icmp ult i32 %spec.select365, %conv.i
  br i1 %cmp.not.i, label %cleanup.if.end.i_crit_edge, label %for.end

cleanup.if.end.i_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

for.end:                                          ; preds = %cleanup
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cached.i275) #14
  %84 = ptrtoint ptr %cached.i275 to i32
  call void @__asan_store4_noabort(i32 %84)
  store ptr null, ptr %cached.i275, align 4
  %tobool.not.i276 = icmp eq ptr %processed.sroa.0.2, null
  br i1 %tobool.not.i276, label %for.end.endio_readpage_release_extent.exit306_crit_edge, label %if.end19.i290

for.end.endio_readpage_release_extent.exit306_crit_edge: ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %endio_readpage_release_extent.exit306

if.end19.i290:                                    ; preds = %for.end
  %io_tree.i287 = getelementptr inbounds %struct.btrfs_inode, ptr %processed.sroa.0.2, i32 0, i32 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %processed.sroa.23.2)
  %tobool22.not.i289 = icmp eq i8 %processed.sroa.23.2, 0
  br i1 %tobool22.not.i289, label %if.end19.i290.if.end30.i301_crit_edge, label %land.lhs.true24.i293

if.end19.i290.if.end30.i301_crit_edge:            ; preds = %if.end19.i290
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30.i301

land.lhs.true24.i293:                             ; preds = %if.end19.i290
  %track_uptodate.i291 = getelementptr inbounds %struct.btrfs_inode, ptr %processed.sroa.0.2, i32 0, i32 4, i32 4
  %85 = ptrtoint ptr %track_uptodate.i291 to i32
  call void @__asan_load1_noabort(i32 %85)
  %86 = load i8, ptr %track_uptodate.i291, align 8, !range !382
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %86)
  %tobool25.not.i292 = icmp eq i8 %86, 0
  br i1 %tobool25.not.i292, label %land.lhs.true24.i293.if.end30.i301_crit_edge, label %if.then27.i297

land.lhs.true24.i293.if.end30.i301_crit_edge:     ; preds = %land.lhs.true24.i293
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30.i301

if.then27.i297:                                   ; preds = %land.lhs.true24.i293
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i296 = call i32 @set_extent_bit(ptr noundef %io_tree.i287, i64 noundef %processed.sroa.7315.2, i64 noundef %processed.sroa.13.2, i32 noundef 2, i32 noundef 0, ptr noundef null, ptr noundef nonnull %cached.i275, i32 noundef 2592, ptr noundef null) #14
  br label %if.end30.i301

if.end30.i301:                                    ; preds = %if.then27.i297, %land.lhs.true24.i293.if.end30.i301_crit_edge, %if.end19.i290.if.end30.i301_crit_edge
  %call.i63.i300 = call i32 @__clear_extent_bit(ptr noundef %io_tree.i287, i64 noundef %processed.sroa.7315.2, i64 noundef %processed.sroa.13.2, i32 noundef 4, i32 noundef 1, i32 noundef 0, ptr noundef nonnull %cached.i275, i32 noundef 2592, ptr noundef null) #14
  br label %endio_readpage_release_extent.exit306

endio_readpage_release_extent.exit306:            ; preds = %if.end30.i301, %for.end.endio_readpage_release_extent.exit306_crit_edge, %for.end.thread
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cached.i275) #14
  %csum.i = getelementptr i8, ptr %bio, i32 -88
  %87 = ptrtoint ptr %csum.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %csum.i, align 8
  %csum_inline.i = getelementptr i8, ptr %bio, i32 -84
  %cmp.not.i307 = icmp eq ptr %88, %csum_inline.i
  br i1 %cmp.not.i307, label %endio_readpage_release_extent.exit306.btrfs_bio_free_csum.exit_crit_edge, label %if.then.i308

endio_readpage_release_extent.exit306.btrfs_bio_free_csum.exit_crit_edge: ; preds = %endio_readpage_release_extent.exit306
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_bio_free_csum.exit

if.then.i308:                                     ; preds = %endio_readpage_release_extent.exit306
  call void @__sanitizer_cov_trace_pc() #16
  call void @kfree(ptr noundef %88) #14
  %89 = ptrtoint ptr %csum.i to i32
  call void @__asan_store4_noabort(i32 %89)
  store ptr null, ptr %csum.i, align 8
  br label %btrfs_bio_free_csum.exit

btrfs_bio_free_csum.exit:                         ; preds = %if.then.i308, %endio_readpage_release_extent.exit306.btrfs_bio_free_csum.exit_crit_edge
  call void @bio_put(ptr noundef %bio) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @wait_on_extent_buffer_writeback(ptr noundef %eb) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %bflags = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 2
  tail call void @__might_sleep(ptr noundef nonnull @.str.104, i32 noundef 98) #14
  %0 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %bflags, align 4
  %2 = and i32 %1, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %entry.wait_on_bit_io.exit_crit_edge, label %if.end.i

entry.wait_on_bit_io.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %wait_on_bit_io.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call3.i = tail call i32 @out_of_line_wait_on_bit(ptr noundef %bflags, i32 noundef 6, ptr noundef nonnull @bit_wait_io, i32 noundef 2) #14
  br label %wait_on_bit_io.exit

wait_on_bit_io.exit:                              ; preds = %if.end.i, %entry.wait_on_bit_io.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btree_write_cache_pages(ptr noundef %mapping, ptr noundef %wbc) local_unnamed_addr #0 align 64 {
entry:
  %cache.i = alloca ptr, align 4
  %epd = alloca %struct.extent_page_data, align 4
  %pvec = alloca %struct.pagevec, align 4
  %index = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %epd) #14
  %0 = call ptr @memset(ptr %epd, i32 0, i32 20)
  %sync_io = getelementptr inbounds %struct.extent_page_data, ptr %epd, i32 0, i32 1
  %sync_mode = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 4
  %1 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %sync_mode, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %2)
  %cmp = icmp eq i32 %2, 1
  %bf.shl = select i1 %cmp, i8 64, i8 0
  %3 = ptrtoint ptr %sync_io to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 %bf.shl, ptr %sync_io, align 4
  %4 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %mapping, align 4
  %add.ptr.i = getelementptr i8, ptr %5, i32 -864
  %6 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %add.ptr.i, align 8
  %fs_info1 = getelementptr inbounds %struct.btrfs_root, ptr %7, i32 0, i32 8
  %8 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %fs_info1, align 8
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %pvec) #14
  %10 = call ptr @memset(ptr %pvec, i32 255, i32 64)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %index) #14
  %11 = ptrtoint ptr %pvec to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 0, ptr %pvec, align 4
  %percpu_pvec_drained.i = getelementptr inbounds %struct.pagevec, ptr %pvec, i32 0, i32 1
  %12 = ptrtoint ptr %percpu_pvec_drained.i to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 0, ptr %percpu_pvec_drained.i, align 1
  %range_cyclic = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 5
  %13 = ptrtoint ptr %range_cyclic to i32
  call void @__asan_load2_noabort(i32 %13)
  %bf.load2 = load i16, ptr %range_cyclic, align 4
  %14 = and i16 %bf.load2, 2048
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %14)
  %tobool.not = icmp eq i16 %14, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %writeback_index = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 8
  %15 = ptrtoint ptr %writeback_index to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %writeback_index, align 4
  %17 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %index, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp4 = icmp eq i32 %16, 0
  %conv5 = zext i1 %cmp4 to i32
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %range_start = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 2
  %18 = ptrtoint ptr %range_start to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %range_start, align 8
  %20 = lshr i64 %19, 12
  %conv6 = trunc i64 %20 to i32
  %21 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %conv6, ptr %index, align 4
  %range_end = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 3
  %22 = ptrtoint ptr %range_end to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %range_end, align 8
  %24 = lshr i64 %23, 12
  %conv8 = trunc i64 %24 to i32
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %end.0 = phi i32 [ -1, %if.then ], [ %conv8, %if.else ]
  %scanned.0 = phi i32 [ %conv5, %if.then ], [ 1, %if.else ]
  %. = select i1 %cmp, i32 2, i32 0
  %25 = getelementptr inbounds %struct.btrfs_fs_info, ptr %9, i32 0, i32 176
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %25, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %27)
  %cmp.i.not.i = icmp eq i64 %27, 0
  br i1 %cmp.i.not.i, label %if.end.retry.preheader_crit_edge, label %if.end.i

if.end.retry.preheader_crit_edge:                 ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %retry.preheader

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %zoned_meta_io_lock.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %9, i32 0, i32 177
  tail call void @mutex_lock_nested(ptr noundef %zoned_meta_io_lock.i, i32 noundef 0) #14
  br label %retry.preheader

retry.preheader:                                  ; preds = %if.end.i, %if.end.retry.preheader_crit_edge
  br label %retry

retry:                                            ; preds = %if.then44, %retry.preheader
  %eb_context.0 = phi ptr [ %eb_context.1.lcssa, %if.then44 ], [ null, %retry.preheader ]
  %nr_to_write_done.0 = phi i32 [ %nr_to_write_done.1.lcssa, %if.then44 ], [ 0, %retry.preheader ]
  %scanned.1 = phi i32 [ 1, %if.then44 ], [ %scanned.0, %retry.preheader ]
  %ret.0 = phi i32 [ %ret.1.lcssa, %if.then44 ], [ 0, %retry.preheader ]
  %28 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %sync_mode, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %29)
  %cmp16 = icmp eq i32 %29, 1
  br i1 %cmp16, label %if.then18, label %retry.if.end19_crit_edge

retry.if.end19_crit_edge:                         ; preds = %retry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19

if.then18:                                        ; preds = %retry
  call void @__sanitizer_cov_trace_pc() #16
  %30 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %index, align 4
  call void @tag_pages_for_writeback(ptr noundef %mapping, i32 noundef %31, i32 noundef %end.0) #14
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %retry.if.end19_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_to_write_done.0)
  %tobool21.not182 = icmp eq i32 %nr_to_write_done.0, 0
  br i1 %tobool21.not182, label %land.lhs.true22.preheader, label %if.end19.while.end_crit_edge

if.end19.while.end_crit_edge:                     ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

land.lhs.true22.preheader:                        ; preds = %if.end19
  %32 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %33, i32 %end.0)
  %cmp23.not257 = icmp ugt i32 %33, %end.0
  br i1 %cmp23.not257, label %land.lhs.true22.preheader.while.end_crit_edge, label %land.lhs.true22.preheader.land.rhs_crit_edge

land.lhs.true22.preheader.land.rhs_crit_edge:     ; preds = %land.lhs.true22.preheader
  br label %land.rhs

land.lhs.true22.preheader.while.end_crit_edge:    ; preds = %land.lhs.true22.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

land.lhs.true22:                                  ; preds = %pagevec_release.exit
  %34 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %index, align 4
  %cmp23.not = icmp ugt i32 %35, %end.0
  br i1 %cmp23.not, label %land.lhs.true22.while.end_crit_edge, label %land.lhs.true22.land.rhs_crit_edge

land.lhs.true22.land.rhs_crit_edge:               ; preds = %land.lhs.true22
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs

land.lhs.true22.while.end_crit_edge:              ; preds = %land.lhs.true22
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

land.rhs:                                         ; preds = %land.lhs.true22.land.rhs_crit_edge, %land.lhs.true22.preheader.land.rhs_crit_edge
  %eb_context.1184260 = phi ptr [ %eb_context.4, %land.lhs.true22.land.rhs_crit_edge ], [ %eb_context.0, %land.lhs.true22.preheader.land.rhs_crit_edge ]
  %done.1185259 = phi i32 [ %done.4, %land.lhs.true22.land.rhs_crit_edge ], [ 0, %land.lhs.true22.preheader.land.rhs_crit_edge ]
  %ret.1187258 = phi i32 [ %ret.3, %land.lhs.true22.land.rhs_crit_edge ], [ %ret.0, %land.lhs.true22.preheader.land.rhs_crit_edge ]
  %call25 = call i32 @pagevec_lookup_range_tag(ptr noundef nonnull %pvec, ptr noundef %mapping, ptr noundef nonnull %index, i32 noundef %end.0, i32 noundef %.) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %land.rhs.while.end_crit_edge, label %land.rhs.for.body_crit_edge

land.rhs.for.body_crit_edge:                      ; preds = %land.rhs
  br label %for.body

land.rhs.while.end_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %land.rhs.for.body_crit_edge
  %i.0174 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %land.rhs.for.body_crit_edge ]
  %nr_to_write_done.2172 = phi i32 [ %nr_to_write_done.3.ph, %for.inc.for.body_crit_edge ], [ 0, %land.rhs.for.body_crit_edge ]
  %eb_context.2169 = phi ptr [ %eb_context.3107.ph, %for.inc.for.body_crit_edge ], [ %eb_context.1184260, %land.rhs.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.pagevec, ptr %pvec, i32 0, i32 2, i32 %i.0174
  %36 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %arrayidx, align 4
  %mapping1.i = getelementptr inbounds %struct.page, ptr %37, i32 0, i32 1, i32 0, i32 1
  %38 = ptrtoint ptr %mapping1.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %mapping1.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cache.i) #14
  %40 = ptrtoint ptr %cache.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr null, ptr %cache.i, align 4
  %41 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %37, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %42)
  %cmp.i.not.i.i = icmp eq i32 %42, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %PagePrivate.exit.i, !prof !319

if.then.i.i:                                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  call void @dump_page(ptr noundef %37, ptr noundef nonnull @.str.80) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 452, 0\0A.popsection", ""() #14, !srcloc !363
  unreachable

PagePrivate.exit.i:                               ; preds = %for.body
  %43 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %37, align 4
  %45 = and i32 %44, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool.not.i = icmp eq i32 %45, 0
  br i1 %tobool.not.i, label %PagePrivate.exit.i.submit_eb_page.exit.thread_crit_edge, label %if.end.i94

PagePrivate.exit.i.submit_eb_page.exit.thread_crit_edge: ; preds = %PagePrivate.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %submit_eb_page.exit.thread

if.end.i94:                                       ; preds = %PagePrivate.exit.i
  %46 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %39, align 4
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %47, i32 0, i32 8
  %48 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %i_sb.i, align 4
  %s_fs_info.i.i = getelementptr inbounds %struct.super_block, ptr %49, i32 0, i32 33
  %50 = ptrtoint ptr %s_fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %s_fs_info.i.i, align 16
  %sectorsize.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %51, i32 0, i32 167
  %52 = ptrtoint ptr %sectorsize.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %sectorsize.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %53)
  %cmp.i = icmp ult i32 %53, 4096
  br i1 %cmp.i, label %if.then4.i, label %if.end6.i

if.then4.i:                                       ; preds = %if.end.i94
  %index.i.i.i = getelementptr inbounds %struct.page, ptr %37, i32 0, i32 1, i32 0, i32 2
  %54 = ptrtoint ptr %index.i.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %index.i.i.i, align 4
  %conv.i.i.i = zext i32 %55 to i64
  %shl.i.i.i = shl nuw nsw i64 %conv.i.i.i, 12
  %nodesize.i.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %51, i32 0, i32 166
  %56 = ptrtoint ptr %nodesize.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %nodesize.i.i, align 8
  %sectorsize_bits.i.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %51, i32 0, i32 168
  %58 = ptrtoint ptr %sectorsize_bits.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %sectorsize_bits.i.i, align 8
  %shr.i.i = lshr i32 %57, %59
  %subpage_info.i.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %51, i32 0, i32 133
  %60 = ptrtoint ptr %subpage_info.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %subpage_info.i.i, align 8
  %62 = ptrtoint ptr %61 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %61, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %63)
  %cmp111.not.i.i = icmp eq i32 %63, 0
  br i1 %cmp111.not.i.i, label %if.then4.i.submit_eb_page.exit.thread_crit_edge, label %while.body.lr.ph.i.i

if.then4.i.submit_eb_page.exit.thread_crit_edge:  ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %submit_eb_page.exit.thread

while.body.lr.ph.i.i:                             ; preds = %if.then4.i
  %private.i.i = getelementptr inbounds %struct.page, ptr %37, i32 0, i32 1, i32 0, i32 3
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %cleanup.i.i.while.body.i.i_crit_edge, %while.body.lr.ph.i.i
  %bit_start.0113.i.i = phi i32 [ 0, %while.body.lr.ph.i.i ], [ %bit_start.1.i.i, %cleanup.i.i.while.body.i.i_crit_edge ]
  %submitted.0112.i.i = phi i32 [ 0, %while.body.lr.ph.i.i ], [ %submitted.1.i.i, %cleanup.i.i.while.body.i.i_crit_edge ]
  %64 = ptrtoint ptr %private.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %private.i.i, align 4
  %66 = inttoptr i32 %65 to ptr
  %67 = ptrtoint ptr %mapping1.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %mapping1.i, align 4
  %private_lock.i.i = getelementptr inbounds %struct.address_space, ptr %68, i32 0, i32 12
  call void @_raw_spin_lock(ptr noundef %private_lock.i.i) #14
  %69 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %37, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %70)
  %cmp.i.not.i.i.i = icmp eq i32 %70, -1
  br i1 %cmp.i.not.i.i.i, label %if.then.i.i.i, label %PagePrivate.exit.i.i, !prof !319

if.then.i.i.i:                                    ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @dump_page(ptr noundef %37, ptr noundef nonnull @.str.80) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 452, 0\0A.popsection", ""() #14, !srcloc !363
  unreachable

PagePrivate.exit.i.i:                             ; preds = %while.body.i.i
  %71 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load volatile i32, ptr %37, align 4
  %73 = and i32 %72, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %73)
  %tobool.not.i.i = icmp eq i32 %73, 0
  br i1 %tobool.not.i.i, label %cleanup.thread96.i.i, label %do.body6.i.i

cleanup.thread96.i.i:                             ; preds = %PagePrivate.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %74 = ptrtoint ptr %mapping1.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %mapping1.i, align 4
  %private_lock5.i.i = getelementptr inbounds %struct.address_space, ptr %75, i32 0, i32 12
  call void @_raw_spin_unlock(ptr noundef %private_lock5.i.i) #14
  br label %submit_eb_page.exit

do.body6.i.i:                                     ; preds = %PagePrivate.exit.i.i
  %call9.i.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %66) #14
  %76 = ptrtoint ptr %subpage_info.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %subpage_info.i.i, align 8
  %dirty_offset.i.i = getelementptr inbounds %struct.btrfs_subpage_info, ptr %77, i32 0, i32 4
  %78 = ptrtoint ptr %dirty_offset.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %dirty_offset.i.i, align 4
  %add.i.i = add i32 %79, %bit_start.0113.i.i
  %bitmaps.i.i = getelementptr inbounds %struct.btrfs_subpage, ptr %66, i32 0, i32 3
  %div3.i.i.i = lshr i32 %add.i.i, 5
  %arrayidx.i.i.i = getelementptr i32, ptr %bitmaps.i.i, i32 %div3.i.i.i
  %80 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i = and i32 %add.i.i, 31
  %82 = shl nuw i32 1, %and.i.i.i
  %83 = and i32 %82, %81
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %83)
  %tobool14.not.i.i = icmp eq i32 %83, 0
  br i1 %tobool14.not.i.i, label %if.then15.i.i, label %if.end19.i.i

if.then15.i.i:                                    ; preds = %do.body6.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @_raw_spin_unlock_irqrestore(ptr noundef %66, i32 noundef %call9.i.i) #14
  %84 = ptrtoint ptr %mapping1.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %mapping1.i, align 4
  %private_lock18.i.i = getelementptr inbounds %struct.address_space, ptr %85, i32 0, i32 12
  call void @_raw_spin_unlock(ptr noundef %private_lock18.i.i) #14
  br label %cleanup.i.i

if.end19.i.i:                                     ; preds = %do.body6.i.i
  %86 = ptrtoint ptr %sectorsize.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %sectorsize.i, align 4
  %mul.i.i = mul i32 %87, %bit_start.0113.i.i
  %conv20.i.i = zext i32 %mul.i.i to i64
  %add21.i.i = add nuw nsw i64 %shl.i.i.i, %conv20.i.i
  %call23.i.i = call fastcc ptr @find_extent_buffer_nolock(ptr noundef %51, i64 noundef %add21.i.i) #14
  call void @_raw_spin_unlock_irqrestore(ptr noundef %66, i32 noundef %call9.i.i) #14
  %88 = ptrtoint ptr %mapping1.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %mapping1.i, align 4
  %private_lock26.i.i = getelementptr inbounds %struct.address_space, ptr %89, i32 0, i32 12
  call void @_raw_spin_unlock(ptr noundef %private_lock26.i.i) #14
  %tobool27.not.i.i = icmp eq ptr %call23.i.i, null
  br i1 %tobool27.not.i.i, label %if.end19.i.i.cleanup.i.i_crit_edge, label %if.end29.i.i

if.end19.i.i.cleanup.i.i_crit_edge:               ; preds = %if.end19.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.i.i

if.end29.i.i:                                     ; preds = %if.end19.i.i
  %call30.i.i = call fastcc i32 @lock_extent_buffer_for_io(ptr noundef nonnull %call23.i.i, ptr noundef nonnull %epd) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30.i.i)
  %cmp31.i.i = icmp eq i32 %call30.i.i, 0
  br i1 %cmp31.i.i, label %if.then33.i.i, label %if.end34.i.i

if.then33.i.i:                                    ; preds = %if.end29.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @free_extent_buffer(ptr noundef nonnull %call23.i.i) #14
  br label %cleanup.i.i

if.end34.i.i:                                     ; preds = %if.end29.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30.i.i)
  %cmp35.i.i = icmp slt i32 %call30.i.i, 0
  br i1 %cmp35.i.i, label %if.end34.i.i.cleanup48.i.i_crit_edge, label %if.end38.i.i

if.end34.i.i.cleanup48.i.i_crit_edge:             ; preds = %if.end34.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup48.i.i

if.end38.i.i:                                     ; preds = %if.end34.i.i
  %fs_info1.i.i.i = getelementptr inbounds %struct.extent_buffer, ptr %call23.i.i, i32 0, i32 3
  %90 = ptrtoint ptr %fs_info1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %fs_info1.i.i.i, align 8
  %pages.i.i.i = getelementptr inbounds %struct.extent_buffer, ptr %call23.i.i, i32 0, i32 12
  %92 = ptrtoint ptr %pages.i.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %pages.i.i.i, align 4
  %94 = ptrtoint ptr %range_cyclic to i32
  call void @__asan_load2_noabort(i32 %94)
  %bf.load.i.i.i.i = load i16, ptr %range_cyclic, align 4
  %95 = and i16 %bf.load.i.i.i.i, 128
  %96 = zext i16 %95 to i32
  %97 = shl nuw nsw i32 %96, 15
  %98 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %sync_mode, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %99)
  %cmp.i.i.i125.i = icmp eq i32 %99, 1
  %100 = or i32 %97, 2048
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %bf.load.i.i.i.i)
  %101 = icmp ult i16 %bf.load.i.i.i.i, 16384
  %102 = or i32 %97, 1048576
  %spec.select.i.i.i.i = select i1 %101, i32 %97, i32 %102
  %flags.0.i.i.i.i = select i1 %cmp.i.i.i125.i, i32 %100, i32 %spec.select.i.i.i.i
  call fastcc void @prepare_eb_write(ptr noundef nonnull %call23.i.i) #14
  call void @__might_sleep(ptr noundef nonnull @.str.130, i32 noundef 788) #14
  %103 = getelementptr inbounds %struct.page, ptr %93, i32 0, i32 1
  %104 = ptrtoint ptr %103 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load volatile i32, ptr %103, align 4
  %and.i.i.i.i.i = and i32 %105, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool.not.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %if.end.i.i.i.i.i, label %if.then.i.i.i.i.i, !prof !322

if.then.i.i.i.i.i:                                ; preds = %if.end38.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i.i.i.i = add i32 %105, -1
  br label %_compound_head.exit.i.i.i.i

if.end.i.i.i.i.i:                                 ; preds = %if.end38.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %106 = ptrtoint ptr %93 to i32
  br label %_compound_head.exit.i.i.i.i

_compound_head.exit.i.i.i.i:                      ; preds = %if.end.i.i.i.i.i, %if.then.i.i.i.i.i
  %retval.0.i.i.i.i.i = phi i32 [ %sub.i.i.i.i.i, %if.then.i.i.i.i.i ], [ %106, %if.end.i.i.i.i.i ]
  %107 = inttoptr i32 %retval.0.i.i.i.i.i to ptr
  %108 = getelementptr inbounds %struct.page, ptr %107, i32 0, i32 1
  %109 = ptrtoint ptr %108 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load volatile i32, ptr %108, align 4
  %and.i.i.i.i.i.i.i = and i32 %110, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i.i)
  %tobool.not.i.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i, label %folio_flags.exit.i.i.i.i.i, label %if.then.i.i.i.i.i.i, !prof !322

if.then.i.i.i.i.i.i:                              ; preds = %_compound_head.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %111 = inttoptr i32 %retval.0.i.i.i.i.i to ptr
  call void @dump_page(ptr noundef %111, ptr noundef nonnull @.str.82) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

folio_flags.exit.i.i.i.i.i:                       ; preds = %_compound_head.exit.i.i.i.i
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %107, i32 noundef 4) #14
  %112 = ptrtoint ptr %107 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load volatile i32, ptr %107, align 4
  %and.i.i4.i.i.i.i.i = and i32 %113, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i.i.i.i)
  %tobool.not.i.i.i.i.i.i.i = icmp eq i32 %and.i.i4.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i.i, label %folio_trylock.exit.i.i.i.i, label %folio_flags.exit.i.i.i.i.i.if.then.i.i.i.i_crit_edge

folio_flags.exit.i.i.i.i.i.if.then.i.i.i.i_crit_edge: ; preds = %folio_flags.exit.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i.i

folio_trylock.exit.i.i.i.i:                       ; preds = %folio_flags.exit.i.i.i.i.i
  call void @llvm.prefetch.p0(ptr %107, i32 1, i32 3, i32 1) #14
  %114 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %107, ptr %107, i32 1, ptr elementtype(i32) %107) #14, !srcloc !383
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %114, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !384
  %and1.i.i.i.i.i.i.i = and i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i.i.i)
  %phi.cmp.i.i.i.i.i.i = icmp eq i32 %and1.i.i.i.i.i.i.i, 0
  br i1 %phi.cmp.i.i.i.i.i.i, label %folio_trylock.exit.i.i.i.i.lock_page.exit.i.i.i_crit_edge, label %folio_trylock.exit.i.i.i.i.if.then.i.i.i.i_crit_edge

folio_trylock.exit.i.i.i.i.if.then.i.i.i.i_crit_edge: ; preds = %folio_trylock.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i.i

folio_trylock.exit.i.i.i.i.lock_page.exit.i.i.i_crit_edge: ; preds = %folio_trylock.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %lock_page.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %folio_trylock.exit.i.i.i.i.if.then.i.i.i.i_crit_edge, %folio_flags.exit.i.i.i.i.i.if.then.i.i.i.i_crit_edge
  call void @__folio_lock(ptr noundef %107) #14
  br label %lock_page.exit.i.i.i

lock_page.exit.i.i.i:                             ; preds = %if.then.i.i.i.i, %folio_trylock.exit.i.i.i.i.lock_page.exit.i.i.i_crit_edge
  %115 = ptrtoint ptr %call23.i.i to i32
  call void @__asan_load8_noabort(i32 %115)
  %116 = load i64, ptr %call23.i.i, align 8
  %len.i.i.i = getelementptr inbounds %struct.extent_buffer, ptr %call23.i.i, i32 0, i32 1
  %117 = ptrtoint ptr %len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %len.i.i.i, align 8
  call void @btrfs_subpage_set_writeback(ptr noundef %91, ptr noundef %93, i64 noundef %116, i32 noundef %118) #14
  %119 = ptrtoint ptr %call23.i.i to i32
  call void @__asan_load8_noabort(i32 %119)
  %120 = load i64, ptr %call23.i.i, align 8
  %121 = ptrtoint ptr %len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %len.i.i.i, align 8
  %call5.i.i.i = call zeroext i1 @btrfs_subpage_clear_and_test_dirty(ptr noundef %91, ptr noundef %93, i64 noundef %120, i32 noundef %122) #14
  br i1 %call5.i.i.i, label %if.then.i88.i.i, label %lock_page.exit.i.i.i.if.end.i.i.i_crit_edge

lock_page.exit.i.i.i.if.end.i.i.i_crit_edge:      ; preds = %lock_page.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i.i.i

if.then.i88.i.i:                                  ; preds = %lock_page.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call6.i.i.i = call zeroext i1 @clear_page_dirty_for_io(ptr noundef %93) #14
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then.i88.i.i, %lock_page.exit.i.i.i.if.end.i.i.i_crit_edge
  %or7.i.i.i = or i32 %flags.0.i.i.i.i, 4097
  %123 = ptrtoint ptr %call23.i.i to i32
  call void @__asan_load8_noabort(i32 %123)
  %124 = load i64, ptr %call23.i.i, align 8
  %125 = ptrtoint ptr %len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %len.i.i.i, align 8
  %index.i.i.i.i = getelementptr inbounds %struct.page, ptr %93, i32 0, i32 1, i32 0, i32 2
  %127 = ptrtoint ptr %index.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %index.i.i.i.i, align 4
  %conv.i.i.i.i = zext i32 %128 to i64
  %shl.i.neg.i.i.i = mul nuw i64 %conv.i.i.i.i, 4294963200
  %sub.i.i.i = add i64 %shl.i.neg.i.i.i, %124
  %conv12.i.i.i = trunc i64 %sub.i.i.i to i32
  %call13.i.i.i = call fastcc i32 @submit_extent_page(i32 noundef %or7.i.i.i, ptr noundef %wbc, ptr noundef nonnull %epd, ptr noundef %93, i64 noundef %124, i32 noundef %126, i32 noundef %conv12.i.i.i, ptr noundef nonnull @end_bio_subpage_eb_writepage, i32 noundef 0, i32 noundef 0, i1 noundef zeroext false) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i.i.i)
  %tobool14.not.i.i.i = icmp eq i32 %call13.i.i.i, 0
  br i1 %tobool14.not.i.i.i, label %if.end21.i.i.i, label %if.then15.i.i.i

if.then15.i.i.i:                                  ; preds = %if.end.i.i.i
  %fs_info1.i.i.i.le = getelementptr inbounds %struct.extent_buffer, ptr %call23.i.i, i32 0, i32 3
  %129 = ptrtoint ptr %call23.i.i to i32
  call void @__asan_load8_noabort(i32 %129)
  %130 = load i64, ptr %call23.i.i, align 8
  %131 = ptrtoint ptr %len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %len.i.i.i, align 8
  call void @btrfs_subpage_clear_writeback(ptr noundef %91, ptr noundef %93, i64 noundef %130, i32 noundef %132) #14
  call fastcc void @set_btree_ioerr(ptr noundef %93, ptr noundef nonnull %call23.i.i) #14
  call void @unlock_page(ptr noundef %93) #14
  %io_pages.i.i.i = getelementptr inbounds %struct.extent_buffer, ptr %call23.i.i, i32 0, i32 6
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %io_pages.i.i.i, i32 noundef 4) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !352
  call void @llvm.prefetch.p0(ptr %io_pages.i.i.i, i32 1, i32 3, i32 1) #14
  %133 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %io_pages.i.i.i, ptr %io_pages.i.i.i, i32 1, ptr elementtype(i32) %io_pages.i.i.i) #14, !srcloc !353
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %133, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !354
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i.i.i, label %if.then19.i.i.i, label %if.then15.i.i.i.cleanup48.i.i_crit_edge

if.then15.i.i.i.cleanup48.i.i_crit_edge:          ; preds = %if.then15.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup48.i.i

if.then19.i.i.i:                                  ; preds = %if.then15.i.i.i
  %bflags.i.i.i.i = getelementptr inbounds %struct.extent_buffer, ptr %call23.i.i, i32 0, i32 2
  %134 = ptrtoint ptr %bflags.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load volatile i32, ptr %bflags.i.i.i.i, align 4
  %136 = and i32 %135, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %136)
  %tobool.not.i.i.i.i = icmp eq i32 %136, 0
  br i1 %tobool.not.i.i.i.i, label %if.then19.i.i.i.end_extent_buffer_writeback.exit.i.i.i_crit_edge, label %if.then.i59.i.i.i

if.then19.i.i.i.end_extent_buffer_writeback.exit.i.i.i_crit_edge: ; preds = %if.then19.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %end_extent_buffer_writeback.exit.i.i.i

if.then.i59.i.i.i:                                ; preds = %if.then19.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %137 = ptrtoint ptr %fs_info1.i.i.i.le to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %fs_info1.i.i.i.le, align 8
  %139 = ptrtoint ptr %call23.i.i to i32
  call void @__asan_load8_noabort(i32 %139)
  %140 = load i64, ptr %call23.i.i, align 8
  %141 = ptrtoint ptr %len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %len.i.i.i, align 8
  %conv.i58.i.i.i = zext i32 %142 to i64
  call void @btrfs_zone_finish_endio(ptr noundef %138, i64 noundef %140, i64 noundef %conv.i58.i.i.i) #14
  br label %end_extent_buffer_writeback.exit.i.i.i

end_extent_buffer_writeback.exit.i.i.i:           ; preds = %if.then.i59.i.i.i, %if.then19.i.i.i.end_extent_buffer_writeback.exit.i.i.i_crit_edge
  call void @_clear_bit(i32 noundef 6, ptr noundef %bflags.i.i.i.i) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !385
  call void @wake_up_bit(ptr noundef %bflags.i.i.i.i, i32 noundef 6) #14
  br label %cleanup48.i.i

if.end21.i.i.i:                                   ; preds = %if.end.i.i.i
  call void @unlock_page(ptr noundef %93) #14
  br i1 %call5.i.i.i, label %if.then23.i.i.i, label %if.end21.i.i.i.write_one_subpage_eb.exit.thread.i.i_crit_edge

if.end21.i.i.i.write_one_subpage_eb.exit.thread.i.i_crit_edge: ; preds = %if.end21.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %write_one_subpage_eb.exit.thread.i.i

if.then23.i.i.i:                                  ; preds = %if.end21.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %143 = ptrtoint ptr %wbc to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %wbc, align 8
  %sub.i.i.i.i = add i32 %144, -1
  store i32 %sub.i.i.i.i, ptr %wbc, align 8
  br label %write_one_subpage_eb.exit.thread.i.i

write_one_subpage_eb.exit.thread.i.i:             ; preds = %if.then23.i.i.i, %if.end21.i.i.i.write_one_subpage_eb.exit.thread.i.i_crit_edge
  call void @free_extent_buffer(ptr noundef nonnull %call23.i.i) #14
  %inc44126.i.i = add i32 %submitted.0112.i.i, 1
  br label %cleanup.i.i

cleanup.i.i:                                      ; preds = %write_one_subpage_eb.exit.thread.i.i, %if.then33.i.i, %if.end19.i.i.cleanup.i.i_crit_edge, %if.then15.i.i
  %submitted.1.i.i = phi i32 [ %submitted.0112.i.i, %if.then33.i.i ], [ %submitted.0112.i.i, %if.then15.i.i ], [ %submitted.0112.i.i, %if.end19.i.i.cleanup.i.i_crit_edge ], [ %inc44126.i.i, %write_one_subpage_eb.exit.thread.i.i ]
  %shr.pn.i.i = phi i32 [ %shr.i.i, %if.then33.i.i ], [ 1, %if.then15.i.i ], [ %shr.i.i, %if.end19.i.i.cleanup.i.i_crit_edge ], [ %shr.i.i, %write_one_subpage_eb.exit.thread.i.i ]
  %bit_start.1.i.i = add i32 %shr.pn.i.i, %bit_start.0113.i.i
  %145 = ptrtoint ptr %subpage_info.i.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load ptr, ptr %subpage_info.i.i, align 8
  %147 = ptrtoint ptr %146 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %146, align 4
  %cmp.i.i = icmp ult i32 %bit_start.1.i.i, %148
  br i1 %cmp.i.i, label %cleanup.i.i.while.body.i.i_crit_edge, label %cleanup.i.i.submit_eb_page.exit_crit_edge

cleanup.i.i.submit_eb_page.exit_crit_edge:        ; preds = %cleanup.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %submit_eb_page.exit

cleanup.i.i.while.body.i.i_crit_edge:             ; preds = %cleanup.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i

cleanup48.i.i:                                    ; preds = %end_extent_buffer_writeback.exit.i.i.i, %if.then15.i.i.i.cleanup48.i.i_crit_edge, %if.end34.i.i.cleanup48.i.i_crit_edge
  %ret.1.ph.i.i = phi i32 [ -5, %end_extent_buffer_writeback.exit.i.i.i ], [ -5, %if.then15.i.i.i.cleanup48.i.i_crit_edge ], [ %call30.i.i, %if.end34.i.i.cleanup48.i.i_crit_edge ]
  call void @free_extent_buffer(ptr noundef nonnull %call23.i.i) #14
  %149 = ptrtoint ptr %epd to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %epd, align 4
  %tobool.not.i.i.i = icmp eq ptr %150, null
  br i1 %tobool.not.i.i.i, label %cleanup48.i.i.submit_eb_page.exit.thread110_crit_edge, label %if.then.i89.i.i

cleanup48.i.i.submit_eb_page.exit.thread110_crit_edge: ; preds = %cleanup48.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %submit_eb_page.exit.thread110

if.then.i89.i.i:                                  ; preds = %cleanup48.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i126.i = call zeroext i8 @errno_to_blk_status(i32 noundef %ret.1.ph.i.i) #14
  %bi_status.i.i.i = getelementptr inbounds %struct.bio, ptr %150, i32 0, i32 6
  %151 = ptrtoint ptr %bi_status.i.i.i to i32
  call void @__asan_store1_noabort(i32 %151)
  store i8 %call.i.i126.i, ptr %bi_status.i.i.i, align 2
  call void @bio_endio(ptr noundef nonnull %150) #14
  %152 = ptrtoint ptr %epd to i32
  call void @__asan_store4_noabort(i32 %152)
  store ptr null, ptr %epd, align 4
  br label %submit_eb_page.exit.thread110

if.end6.i:                                        ; preds = %if.end.i94
  %private_lock.i = getelementptr inbounds %struct.address_space, ptr %39, i32 0, i32 12
  call void @_raw_spin_lock(ptr noundef %private_lock.i) #14
  %153 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load volatile i32, ptr %37, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %154)
  %cmp.i.not.i120.i = icmp eq i32 %154, -1
  br i1 %cmp.i.not.i120.i, label %if.then.i121.i, label %PagePrivate.exit124.i, !prof !319

if.then.i121.i:                                   ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @dump_page(ptr noundef %37, ptr noundef nonnull @.str.80) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 452, 0\0A.popsection", ""() #14, !srcloc !363
  unreachable

PagePrivate.exit124.i:                            ; preds = %if.end6.i
  %155 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load volatile i32, ptr %37, align 4
  %157 = and i32 %156, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %157)
  %tobool8.not.i = icmp eq i32 %157, 0
  br i1 %tobool8.not.i, label %PagePrivate.exit124.i.submit_eb_page.exit.thread.sink.split_crit_edge, label %if.end11.i

PagePrivate.exit124.i.submit_eb_page.exit.thread.sink.split_crit_edge: ; preds = %PagePrivate.exit124.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %submit_eb_page.exit.thread.sink.split

if.end11.i:                                       ; preds = %PagePrivate.exit124.i
  %private.i = getelementptr inbounds %struct.page, ptr %37, i32 0, i32 1, i32 0, i32 3
  %158 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %private.i, align 4
  %160 = inttoptr i32 %159 to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %159)
  %tobool12.not.i = icmp eq i32 %159, 0
  br i1 %tobool12.not.i, label %do.end.i, label %if.end38.i, !prof !319

do.end.i:                                         ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 4745, i32 noundef 9, ptr noundef null) #14
  br label %submit_eb_page.exit.thread.sink.split

if.end38.i:                                       ; preds = %if.end11.i
  %cmp39.i = icmp eq ptr %eb_context.2169, %160
  br i1 %cmp39.i, label %if.end38.i.submit_eb_page.exit.thread.sink.split_crit_edge, label %if.end42.i

if.end38.i.submit_eb_page.exit.thread.sink.split_crit_edge: ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %submit_eb_page.exit.thread.sink.split

if.end42.i:                                       ; preds = %if.end38.i
  %refs.i = getelementptr inbounds %struct.extent_buffer, ptr %160, i32 0, i32 5
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refs.i, i32 noundef 4) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !386
  call void @llvm.prefetch.p0(ptr %refs.i, i32 1, i32 3, i32 1) #14
  %161 = call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %refs.i, ptr %refs.i, i32 0, i32 1, ptr elementtype(i32) %refs.i) #14, !srcloc !387
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %161, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i, label %if.end42.i.submit_eb_page.exit.thread.sink.split_crit_edge, label %if.end47.i

if.end42.i.submit_eb_page.exit.thread.sink.split_crit_edge: ; preds = %if.end42.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %submit_eb_page.exit.thread.sink.split

if.end47.i:                                       ; preds = %if.end42.i
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !388
  call void @_raw_spin_unlock(ptr noundef %private_lock.i) #14
  %fs_info.i = getelementptr inbounds %struct.extent_buffer, ptr %160, i32 0, i32 3
  %162 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %fs_info.i, align 8
  %call48.i = call zeroext i1 @btrfs_check_meta_write_pointer(ptr noundef %163, ptr noundef nonnull %160, ptr noundef nonnull %cache.i) #14
  br i1 %call48.i, label %if.end55.i, label %if.then49.i

if.then49.i:                                      ; preds = %if.end47.i
  %164 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %sync_mode, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %165)
  %cmp50.i = icmp eq i32 %165, 1
  br i1 %cmp50.i, label %land.lhs.true.i, label %if.then49.i.if.else.i_crit_edge

if.then49.i.if.else.i_crit_edge:                  ; preds = %if.then49.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %if.then49.i
  %166 = ptrtoint ptr %range_cyclic to i32
  call void @__asan_load2_noabort(i32 %166)
  %bf.load.i = load i16, ptr %range_cyclic, align 4
  %167 = and i16 %bf.load.i, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %167)
  %tobool52.not.i = icmp eq i16 %167, 0
  br i1 %tobool52.not.i, label %land.lhs.true.i.if.end54.i_crit_edge, label %land.lhs.true.i.if.else.i_crit_edge

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else.i

land.lhs.true.i.if.end54.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end54.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %if.then49.i.if.else.i_crit_edge
  br label %if.end54.i

if.end54.i:                                       ; preds = %if.else.i, %land.lhs.true.i.if.end54.i_crit_edge
  %ret.0.i = phi i32 [ 0, %if.else.i ], [ -11, %land.lhs.true.i.if.end54.i_crit_edge ]
  call void @free_extent_buffer(ptr noundef nonnull %160) #14
  br label %submit_eb_page.exit

if.end55.i:                                       ; preds = %if.end47.i
  %call56.i = call fastcc i32 @lock_extent_buffer_for_io(ptr noundef nonnull %160, ptr noundef nonnull %epd) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call56.i)
  %cmp57.i = icmp slt i32 %call56.i, 1
  %168 = ptrtoint ptr %cache.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %cache.i, align 4
  br i1 %cmp57.i, label %if.then59.i, label %if.end63.i

if.then59.i:                                      ; preds = %if.end55.i
  call void @btrfs_revert_meta_write_pointer(ptr noundef %169, ptr noundef nonnull %160) #14
  %170 = ptrtoint ptr %cache.i to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load ptr, ptr %cache.i, align 4
  %tobool60.not.i = icmp eq ptr %171, null
  br i1 %tobool60.not.i, label %if.then59.i.if.end62.i_crit_edge, label %if.then61.i

if.then59.i.if.end62.i_crit_edge:                 ; preds = %if.then59.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end62.i

if.then61.i:                                      ; preds = %if.then59.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @btrfs_put_block_group(ptr noundef nonnull %171) #14
  br label %if.end62.i

if.end62.i:                                       ; preds = %if.then61.i, %if.then59.i.if.end62.i_crit_edge
  call void @free_extent_buffer(ptr noundef nonnull %160) #14
  br label %submit_eb_page.exit

if.end63.i:                                       ; preds = %if.end55.i
  %tobool64.not.i = icmp eq ptr %169, null
  br i1 %tobool64.not.i, label %if.end63.i.if.end74.i_crit_edge, label %if.then65.i

if.end63.i.if.end74.i_crit_edge:                  ; preds = %if.end63.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end74.i

if.then65.i:                                      ; preds = %if.end63.i
  call void @btrfs_put_block_group(ptr noundef nonnull %169) #14
  %172 = ptrtoint ptr %cache.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %cache.i, align 4
  %seq_zone.i = getelementptr inbounds %struct.btrfs_block_group, ptr %173, i32 0, i32 43
  %174 = ptrtoint ptr %seq_zone.i to i32
  call void @__asan_load1_noabort(i32 %174)
  %175 = load i8, ptr %seq_zone.i, align 8, !range !382
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %175)
  %tobool66.not.i = icmp eq i8 %175, 0
  br i1 %tobool66.not.i, label %if.then65.i.if.end74.i_crit_edge, label %land.lhs.true68.i

if.then65.i.if.end74.i_crit_edge:                 ; preds = %if.then65.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end74.i

land.lhs.true68.i:                                ; preds = %if.then65.i
  %176 = ptrtoint ptr %160 to i32
  call void @__asan_load8_noabort(i32 %176)
  %177 = load i64, ptr %160, align 8
  %len.i = getelementptr inbounds %struct.extent_buffer, ptr %160, i32 0, i32 1
  %178 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load i32, ptr %len.i, align 8
  %conv69.i = zext i32 %179 to i64
  %add.i = add i64 %177, %conv69.i
  %zone_capacity.i = getelementptr inbounds %struct.btrfs_block_group, ptr %173, i32 0, i32 48
  %180 = ptrtoint ptr %zone_capacity.i to i32
  call void @__asan_load8_noabort(i32 %180)
  %181 = load i64, ptr %zone_capacity.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i, i64 %181)
  %cmp70.i = icmp eq i64 %add.i, %181
  br i1 %cmp70.i, label %if.then72.i, label %land.lhs.true68.i.if.end74.i_crit_edge

land.lhs.true68.i.if.end74.i_crit_edge:           ; preds = %land.lhs.true68.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end74.i

if.then72.i:                                      ; preds = %land.lhs.true68.i
  call void @__sanitizer_cov_trace_pc() #16
  %bflags.i = getelementptr inbounds %struct.extent_buffer, ptr %160, i32 0, i32 2
  call void @_set_bit(i32 noundef 12, ptr noundef %bflags.i) #14
  br label %if.end74.i

if.end74.i:                                       ; preds = %if.then72.i, %land.lhs.true68.i.if.end74.i_crit_edge, %if.then65.i.if.end74.i_crit_edge, %if.end63.i.if.end74.i_crit_edge
  %call75.i = call fastcc i32 @write_one_eb(ptr noundef nonnull %160, ptr noundef %wbc, ptr noundef nonnull %epd) #14
  call void @free_extent_buffer(ptr noundef nonnull %160) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call75.i)
  %cmp76.i = icmp slt i32 %call75.i, 0
  %spec.select = select i1 %cmp76.i, i32 %call75.i, i32 1
  br label %submit_eb_page.exit.thread110

submit_eb_page.exit.thread.sink.split:            ; preds = %if.end42.i.submit_eb_page.exit.thread.sink.split_crit_edge, %if.end38.i.submit_eb_page.exit.thread.sink.split_crit_edge, %do.end.i, %PagePrivate.exit124.i.submit_eb_page.exit.thread.sink.split_crit_edge
  call void @_raw_spin_unlock(ptr noundef %private_lock.i) #14
  br label %submit_eb_page.exit.thread

submit_eb_page.exit.thread:                       ; preds = %submit_eb_page.exit.thread.sink.split, %if.then4.i.submit_eb_page.exit.thread_crit_edge, %PagePrivate.exit.i.submit_eb_page.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cache.i) #14
  br label %for.inc

submit_eb_page.exit.thread110:                    ; preds = %if.end74.i, %if.then.i89.i.i, %cleanup48.i.i.submit_eb_page.exit.thread110_crit_edge
  %eb_context.3.ph = phi ptr [ %eb_context.2169, %if.then.i89.i.i ], [ %eb_context.2169, %cleanup48.i.i.submit_eb_page.exit.thread110_crit_edge ], [ %160, %if.end74.i ]
  %retval.0.i.ph = phi i32 [ %ret.1.ph.i.i, %if.then.i89.i.i ], [ %ret.1.ph.i.i, %cleanup48.i.i.submit_eb_page.exit.thread110_crit_edge ], [ %spec.select, %if.end74.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cache.i) #14
  br label %if.end33

submit_eb_page.exit:                              ; preds = %if.end62.i, %if.end54.i, %cleanup.i.i.submit_eb_page.exit_crit_edge, %cleanup.thread96.i.i
  %eb_context.3 = phi ptr [ %eb_context.2169, %cleanup.thread96.i.i ], [ %160, %if.end62.i ], [ %eb_context.2169, %if.end54.i ], [ %eb_context.2169, %cleanup.i.i.submit_eb_page.exit_crit_edge ]
  %retval.0.i = phi i32 [ %submitted.0112.i.i, %cleanup.thread96.i.i ], [ %call56.i, %if.end62.i ], [ %ret.0.i, %if.end54.i ], [ %submitted.1.i.i, %cleanup.i.i.submit_eb_page.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cache.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %cmp30 = icmp eq i32 %retval.0.i, 0
  br i1 %cmp30, label %submit_eb_page.exit.for.inc_crit_edge, label %submit_eb_page.exit.if.end33_crit_edge

submit_eb_page.exit.if.end33_crit_edge:           ; preds = %submit_eb_page.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end33

submit_eb_page.exit.for.inc_crit_edge:            ; preds = %submit_eb_page.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.end33:                                         ; preds = %submit_eb_page.exit.if.end33_crit_edge, %submit_eb_page.exit.thread110
  %retval.0.i115 = phi i32 [ %retval.0.i.ph, %submit_eb_page.exit.thread110 ], [ %retval.0.i, %submit_eb_page.exit.if.end33_crit_edge ]
  %eb_context.3114 = phi ptr [ %eb_context.3.ph, %submit_eb_page.exit.thread110 ], [ %eb_context.3, %submit_eb_page.exit.if.end33_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i115)
  %cmp34 = icmp slt i32 %retval.0.i115, 0
  br i1 %cmp34, label %if.end33.for.end_crit_edge, label %if.end37

if.end33.for.end_crit_edge:                       ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

if.end37:                                         ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #16
  %182 = ptrtoint ptr %wbc to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load i32, ptr %wbc, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %183)
  %cmp38 = icmp slt i32 %183, 1
  %conv39 = zext i1 %cmp38 to i32
  br label %for.inc

for.inc:                                          ; preds = %if.end37, %submit_eb_page.exit.for.inc_crit_edge, %submit_eb_page.exit.thread
  %retval.0.i108.ph = phi i32 [ 0, %submit_eb_page.exit.thread ], [ 0, %submit_eb_page.exit.for.inc_crit_edge ], [ %retval.0.i115, %if.end37 ]
  %eb_context.3107.ph = phi ptr [ %eb_context.2169, %submit_eb_page.exit.thread ], [ %eb_context.3, %submit_eb_page.exit.for.inc_crit_edge ], [ %eb_context.3114, %if.end37 ]
  %nr_to_write_done.3.ph = phi i32 [ %nr_to_write_done.2172, %submit_eb_page.exit.thread ], [ %nr_to_write_done.2172, %submit_eb_page.exit.for.inc_crit_edge ], [ %conv39, %if.end37 ]
  %inc = add nuw i32 %i.0174, 1
  %exitcond.not = icmp eq i32 %inc, %call25
  br i1 %exitcond.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end33.for.end_crit_edge
  %nr_to_write_done.2.lcssa = phi i32 [ %nr_to_write_done.2172, %if.end33.for.end_crit_edge ], [ %nr_to_write_done.3.ph, %for.inc.for.end_crit_edge ]
  %eb_context.4 = phi ptr [ %eb_context.3114, %if.end33.for.end_crit_edge ], [ %eb_context.3107.ph, %for.inc.for.end_crit_edge ]
  %tobool20.not = phi i1 [ false, %if.end33.for.end_crit_edge ], [ true, %for.inc.for.end_crit_edge ]
  %done.4 = phi i32 [ 1, %if.end33.for.end_crit_edge ], [ 0, %for.inc.for.end_crit_edge ]
  %ret.3 = phi i32 [ %retval.0.i115, %if.end33.for.end_crit_edge ], [ %retval.0.i108.ph, %for.inc.for.end_crit_edge ]
  %184 = ptrtoint ptr %pvec to i32
  call void @__asan_load1_noabort(i32 %184)
  %185 = load i8, ptr %pvec, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %185)
  %tobool.not.i95 = icmp eq i8 %185, 0
  br i1 %tobool.not.i95, label %for.end.pagevec_release.exit_crit_edge, label %if.then.i

for.end.pagevec_release.exit_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %pagevec_release.exit

if.then.i:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  call void @__pagevec_release(ptr noundef nonnull %pvec) #14
  br label %pagevec_release.exit

pagevec_release.exit:                             ; preds = %if.then.i, %for.end.pagevec_release.exit_crit_edge
  call void @__might_resched(ptr noundef nonnull @.str.2, i32 noundef 4862, i32 noundef 0) #14
  %call.i = call i32 @__cond_resched() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_to_write_done.2.lcssa)
  %tobool21.not = icmp eq i32 %nr_to_write_done.2.lcssa, 0
  %or.cond = select i1 %tobool20.not, i1 %tobool21.not, i1 false
  br i1 %or.cond, label %land.lhs.true22, label %pagevec_release.exit.while.end_crit_edge

pagevec_release.exit.while.end_crit_edge:         ; preds = %pagevec_release.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %pagevec_release.exit.while.end_crit_edge, %land.rhs.while.end_crit_edge, %land.lhs.true22.while.end_crit_edge, %land.lhs.true22.preheader.while.end_crit_edge, %if.end19.while.end_crit_edge
  %eb_context.1.lcssa = phi ptr [ %eb_context.0, %if.end19.while.end_crit_edge ], [ %eb_context.0, %land.lhs.true22.preheader.while.end_crit_edge ], [ %eb_context.1184260, %land.rhs.while.end_crit_edge ], [ %eb_context.4, %land.lhs.true22.while.end_crit_edge ], [ %eb_context.4, %pagevec_release.exit.while.end_crit_edge ]
  %done.1.lcssa = phi i32 [ 0, %if.end19.while.end_crit_edge ], [ 0, %land.lhs.true22.preheader.while.end_crit_edge ], [ %done.1185259, %land.rhs.while.end_crit_edge ], [ %done.4, %land.lhs.true22.while.end_crit_edge ], [ %done.4, %pagevec_release.exit.while.end_crit_edge ]
  %nr_to_write_done.1.lcssa = phi i32 [ %nr_to_write_done.0, %if.end19.while.end_crit_edge ], [ 0, %land.lhs.true22.preheader.while.end_crit_edge ], [ 0, %land.rhs.while.end_crit_edge ], [ 0, %land.lhs.true22.while.end_crit_edge ], [ %nr_to_write_done.2.lcssa, %pagevec_release.exit.while.end_crit_edge ]
  %ret.1.lcssa = phi i32 [ %ret.0, %if.end19.while.end_crit_edge ], [ %ret.0, %land.lhs.true22.preheader.while.end_crit_edge ], [ %ret.1187258, %land.rhs.while.end_crit_edge ], [ %ret.3, %land.lhs.true22.while.end_crit_edge ], [ %ret.3, %pagevec_release.exit.while.end_crit_edge ]
  %186 = or i32 %done.1.lcssa, %scanned.1
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %if.then44, label %if.end45

if.then44:                                        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  %188 = ptrtoint ptr %index to i32
  call void @__asan_store4_noabort(i32 %188)
  store i32 0, ptr %index, align 4
  br label %retry

if.end45:                                         ; preds = %while.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.1.lcssa)
  %cmp46 = icmp slt i32 %ret.1.lcssa, 0
  br i1 %cmp46, label %if.then48, label %if.end49

if.then48:                                        ; preds = %if.end45
  %189 = ptrtoint ptr %epd to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load ptr, ptr %epd, align 4
  %tobool.not.i97 = icmp eq ptr %190, null
  br i1 %tobool.not.i97, label %if.then48.out_crit_edge, label %if.then.i99

if.then48.out_crit_edge:                          ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.then.i99:                                      ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #16
  %call.i98 = call zeroext i8 @errno_to_blk_status(i32 noundef %ret.1.lcssa) #14
  %bi_status.i = getelementptr inbounds %struct.bio, ptr %190, i32 0, i32 6
  %191 = ptrtoint ptr %bi_status.i to i32
  call void @__asan_store1_noabort(i32 %191)
  store i8 %call.i98, ptr %bi_status.i, align 2
  call void @bio_endio(ptr noundef nonnull %190) #14
  %192 = ptrtoint ptr %epd to i32
  call void @__asan_store4_noabort(i32 %192)
  store ptr null, ptr %epd, align 4
  br label %out

if.end49:                                         ; preds = %if.end45
  %fs_state = getelementptr inbounds %struct.btrfs_fs_info, ptr %9, i32 0, i32 149
  %193 = ptrtoint ptr %fs_state to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load volatile i32, ptr %fs_state, align 4
  %and1.i = and i32 %194, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool51.not = icmp eq i32 %and1.i, 0
  br i1 %tobool51.not, label %if.then54, label %if.else56, !prof !322

if.then54:                                        ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #16
  %call55 = call fastcc i32 @flush_write_bio(ptr noundef nonnull %epd)
  br label %out

if.else56:                                        ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @end_write_bio(ptr noundef nonnull %epd, i32 noundef -30)
  br label %out

out:                                              ; preds = %if.else56, %if.then54, %if.then.i99, %if.then48.out_crit_edge
  %ret.4 = phi i32 [ -30, %if.else56 ], [ %call55, %if.then54 ], [ %ret.1.lcssa, %if.then48.out_crit_edge ], [ %ret.1.lcssa, %if.then.i99 ]
  %195 = ptrtoint ptr %25 to i32
  call void @__asan_load8_noabort(i32 %195)
  %196 = load i64, ptr %25, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %196)
  %cmp.i.not.i101 = icmp eq i64 %196, 0
  br i1 %cmp.i.not.i101, label %out.btrfs_zoned_meta_io_unlock.exit_crit_edge, label %if.end.i103

out.btrfs_zoned_meta_io_unlock.exit_crit_edge:    ; preds = %out
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_zoned_meta_io_unlock.exit

if.end.i103:                                      ; preds = %out
  call void @__sanitizer_cov_trace_pc() #16
  %zoned_meta_io_lock.i102 = getelementptr inbounds %struct.btrfs_fs_info, ptr %9, i32 0, i32 177
  call void @mutex_unlock(ptr noundef %zoned_meta_io_lock.i102) #14
  br label %btrfs_zoned_meta_io_unlock.exit

btrfs_zoned_meta_io_unlock.exit:                  ; preds = %if.end.i103, %out.btrfs_zoned_meta_io_unlock.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %index) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %pvec) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %epd) #14
  ret i32 %ret.4
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @tag_pages_for_writeback(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pagevec_lookup_range_tag(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @end_write_bio(ptr nocapture noundef %epd, i32 noundef %ret) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %epd to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %epd, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call = tail call zeroext i8 @errno_to_blk_status(i32 noundef %ret) #14
  %bi_status = getelementptr inbounds %struct.bio, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %bi_status to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 %call, ptr %bi_status, align 2
  tail call void @bio_endio(ptr noundef nonnull %1) #14
  %3 = ptrtoint ptr %epd to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %epd, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @flush_write_bio(ptr nocapture noundef %epd) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %epd to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %epd, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  %bi_private.i = getelementptr inbounds %struct.bio, ptr %1, i32 0, i32 11
  %2 = ptrtoint ptr %bi_private.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %bi_private.i, align 4
  store ptr null, ptr %bi_private.i, align 4
  %bi_size.i = getelementptr inbounds %struct.bio, ptr %1, i32 0, i32 8, i32 1
  %4 = ptrtoint ptr %bi_size.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %bi_size.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not.i = icmp eq i32 %5, 0
  br i1 %tobool.not.i, label %cond.false.i, label %cond.end.i, !prof !319

cond.false.i:                                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.3, i32 noundef 176) #19
  unreachable

cond.end.i:                                       ; preds = %if.then
  %private_data.i = getelementptr inbounds %struct.extent_io_tree, ptr %3, i32 0, i32 2
  %6 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %private_data.i, align 8
  %location.i.i.i = getelementptr i8, ptr %7, i32 -860
  %8 = ptrtoint ptr %location.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %8, i32 8)
  %9 = load i64, ptr %location.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %9)
  %tobool.not.i.i.i = icmp eq i64 %9, 0
  br i1 %tobool.not.i.i.i, label %cond.end.i.if.then.i.i.i_crit_edge, label %lor.lhs.false.i.i.i

cond.end.i.if.then.i.i.i_crit_edge:               ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i

lor.lhs.false.i.i.i:                              ; preds = %cond.end.i
  %type.i.i.i = getelementptr i8, ptr %7, i32 -852
  %10 = ptrtoint ptr %type.i.i.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %11)
  %cmp.i.i.i = icmp eq i8 %11, -124
  br i1 %cmp.i.i.i, label %lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge, label %lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge

lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge: ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %is_data_inode.exit.i

lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge:      ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %lor.lhs.false.i.i.i.if.then.i.i.i_crit_edge, %cond.end.i.if.then.i.i.i_crit_edge
  %i_ino.i.i.i = getelementptr i8, ptr %7, i32 40
  %12 = ptrtoint ptr %i_ino.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %i_ino.i.i.i, align 8
  %conv3.i.i.i = zext i32 %13 to i64
  br label %is_data_inode.exit.i

is_data_inode.exit.i:                             ; preds = %if.then.i.i.i, %lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge
  %ino.0.i.i.i = phi i64 [ %conv3.i.i.i, %if.then.i.i.i ], [ %9, %lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %ino.0.i.i.i)
  %cmp.i.not.i = icmp eq i64 %ino.0.i.i.i, 1
  br i1 %cmp.i.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %is_data_inode.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %call5.i = tail call zeroext i8 @btrfs_submit_data_bio(ptr noundef %7, ptr noundef nonnull %1, i32 noundef 0, i32 noundef 0) #14
  br label %submit_one_bio.exit

if.else.i:                                        ; preds = %is_data_inode.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %call7.i = tail call zeroext i8 @btrfs_submit_metadata_bio(ptr noundef %7, ptr noundef nonnull %1, i32 noundef 0, i32 noundef 0) #14
  br label %submit_one_bio.exit

submit_one_bio.exit:                              ; preds = %if.else.i, %if.then.i
  %ret.0.i = phi i8 [ %call5.i, %if.then.i ], [ %call7.i, %if.else.i ]
  %call8.i = tail call i32 @blk_status_to_errno(i8 noundef zeroext %ret.0.i) #14
  %14 = ptrtoint ptr %epd to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %epd, align 4
  br label %if.end

if.end:                                           ; preds = %submit_one_bio.exit, %entry.if.end_crit_edge
  %ret.0 = phi i32 [ %call8.i, %submit_one_bio.exit ], [ 0, %entry.if.end_crit_edge ]
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @extent_write_full_page(ptr noundef %page, ptr noundef %wbc) local_unnamed_addr #0 align 64 {
entry:
  %epd = alloca %struct.extent_page_data, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %epd) #14
  %0 = call ptr @memset(ptr %epd, i32 0, i32 20)
  %sync_io = getelementptr inbounds %struct.extent_page_data, ptr %epd, i32 0, i32 1
  %sync_mode = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 4
  %1 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %sync_mode, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %2)
  %cmp = icmp eq i32 %2, 1
  %bf.shl = select i1 %cmp, i8 64, i8 0
  %3 = ptrtoint ptr %sync_io to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 %bf.shl, ptr %sync_io, align 4
  %call = call fastcc i32 @__extent_writepage(ptr noundef %page, ptr noundef %wbc, ptr noundef nonnull %epd)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp4 = icmp slt i32 %call, 0
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = ptrtoint ptr %epd to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %epd, align 4
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %if.then.cleanup_crit_edge, label %if.then.i

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %call.i = call zeroext i8 @errno_to_blk_status(i32 noundef %call) #14
  %bi_status.i = getelementptr inbounds %struct.bio, ptr %5, i32 0, i32 6
  %6 = ptrtoint ptr %bi_status.i to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %call.i, ptr %bi_status.i, align 2
  call void @bio_endio(ptr noundef nonnull %5) #14
  br label %cleanup

if.end:                                           ; preds = %entry
  %call6 = call fastcc i32 @flush_write_bio(ptr noundef nonnull %epd)
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call6)
  %cmp7 = icmp slt i32 %call6, 1
  br i1 %cmp7, label %if.end.cleanup_crit_edge, label %cond.false16, !prof !322

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cond.false16:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.28, i32 noundef 5096) #18
  unreachable

cleanup:                                          ; preds = %if.end.cleanup_crit_edge, %if.then.i, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call6, %if.end.cleanup_crit_edge ], [ %call, %if.then.cleanup_crit_edge ], [ %call, %if.then.i ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %epd) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__extent_writepage(ptr noundef %page, ptr noundef %wbc, ptr noundef %epd) unnamed_addr #0 align 64 {
entry:
  %nr = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %mapping = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %0 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mapping, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %i_sb = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %5, i32 0, i32 33
  %6 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %s_fs_info.i, align 16
  %index.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 2
  %8 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %index.i, align 4
  %conv.i = zext i32 %9 to i64
  %shl.i = shl nuw nsw i64 %conv.i, 12
  %sub = or i64 %shl.i, 4095
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nr) #14
  %10 = ptrtoint ptr %nr to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %nr, align 4
  %call2 = tail call fastcc i64 @i_size_read(ptr noundef %3)
  %11 = lshr i64 %call2, 12
  %conv = trunc i64 %11 to i32
  tail call fastcc void @trace___extent_writepage(ptr noundef %page, ptr noundef %3, ptr noundef %wbc)
  %12 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %12, align 4
  %and.i.i = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !322

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %14, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %15 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %15, %if.end.i.i ]
  %16 = inttoptr i32 %retval.0.i.i to ptr
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %16, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %18)
  %cmp.i.not.i = icmp eq i32 %18, -1
  %19 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %12, align 4
  %and.i16.i = and i32 %20, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i)
  %tobool.not.i17.i = icmp eq i32 %and.i16.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end10.i, !prof !319

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i20.i, label %if.then.i19.i, !prof !322

if.then.i19.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i18.i = add i32 %20, -1
  br label %_compound_head.exit22.i

if.end.i20.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %21 = ptrtoint ptr %page to i32
  br label %_compound_head.exit22.i

_compound_head.exit22.i:                          ; preds = %if.end.i20.i, %if.then.i19.i
  %retval.0.i21.i = phi i32 [ %sub.i18.i, %if.then.i19.i ], [ %21, %if.end.i20.i ]
  %22 = inttoptr i32 %retval.0.i21.i to ptr
  tail call void @dump_page(ptr noundef %22, ptr noundef nonnull @.str.86) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 414, 0\0A.popsection", ""() #14, !srcloc !367
  unreachable

do.end10.i:                                       ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i27.i, label %if.then.i26.i, !prof !322

if.then.i26.i:                                    ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i25.i = add i32 %20, -1
  br label %PageLocked.exit

if.end.i27.i:                                     ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  %23 = ptrtoint ptr %page to i32
  br label %PageLocked.exit

PageLocked.exit:                                  ; preds = %if.end.i27.i, %if.then.i26.i
  %retval.0.i28.i = phi i32 [ %sub.i25.i, %if.then.i26.i ], [ %23, %if.end.i27.i ]
  %24 = inttoptr i32 %retval.0.i28.i to ptr
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %24, align 4
  %and1.i.i = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not, label %do.end, label %PageLocked.exit.if.end_crit_edge, !prof !319

PageLocked.exit.if.end_crit_edge:                 ; preds = %PageLocked.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %PageLocked.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 4063, i32 noundef 9, ptr noundef null) #14
  br label %if.end

if.end:                                           ; preds = %do.end, %PageLocked.exit.if.end_crit_edge
  %27 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i192 = getelementptr inbounds %struct.super_block, ptr %28, i32 0, i32 33
  %29 = ptrtoint ptr %s_fs_info.i192 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %s_fs_info.i192, align 16
  %31 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %index.i, align 4
  %conv.i194 = zext i32 %32 to i64
  %shl.i195 = shl nuw nsw i64 %conv.i194, 12
  tail call void @btrfs_page_clear_error(ptr noundef %30, ptr noundef %page, i64 noundef %shl.i195, i32 noundef 4096) #14
  %conv27 = trunc i64 %call2 to i32
  %and = and i32 %conv27, 4095
  %33 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %index.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %34, i32 %conv)
  %cmp = icmp ugt i32 %34, %conv
  br i1 %cmp, label %if.end.if.then33_crit_edge, label %lor.lhs.false

if.end.if.then33_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then33

lor.lhs.false:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_cmp4(i32 %34, i32 %conv)
  %cmp30 = icmp eq i32 %34, %conv
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool32.not = icmp eq i32 %and, 0
  %or.cond = select i1 %cmp30, i1 %tobool32.not, i1 false
  br i1 %or.cond, label %lor.lhs.false.if.then33_crit_edge, label %if.end35

lor.lhs.false.if.then33_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then33

if.then33:                                        ; preds = %lor.lhs.false.if.then33_crit_edge, %if.end.if.then33_crit_edge
  %35 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %mapping, align 4
  %a_ops = getelementptr inbounds %struct.address_space, ptr %36, i32 0, i32 9
  %37 = ptrtoint ptr %a_ops to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %a_ops, align 4
  %invalidatepage = getelementptr inbounds %struct.address_space_operations, ptr %38, i32 0, i32 9
  %39 = ptrtoint ptr %invalidatepage to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %invalidatepage, align 4
  tail call void %40(ptr noundef %page, i32 noundef 0, i32 noundef 4096) #14
  tail call void @unlock_page(ptr noundef %page) #14
  br label %cleanup

if.end35:                                         ; preds = %lor.lhs.false
  br i1 %cmp30, label %if.then39, label %if.end35.if.end41_crit_edge

if.end35.if.end41_crit_edge:                      ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end41

if.then39:                                        ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  %sub40 = sub nuw nsw i32 4096, %and
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %41 = load i32, ptr @pgprot_kernel, align 4
  %or.i.i = or i32 %41, 512
  %call.i.i = tail call ptr @__kmap_local_page_prot(ptr noundef %page, i32 noundef %or.i.i) #14
  %add.ptr.i = getelementptr i8, ptr %call.i.i, i32 %and
  %42 = call ptr @memset(ptr %add.ptr.i, i32 0, i32 %sub40)
  tail call void @flush_dcache_page(ptr noundef %page) #14
  tail call void @kunmap_local_indexed(ptr noundef %call.i.i) #14
  tail call void @flush_dcache_page(ptr noundef %page) #14
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.end35.if.end41_crit_edge
  %43 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %mapping, align 4
  %tobool.not.i196 = icmp eq ptr %44, null
  br i1 %tobool.not.i196, label %cond.false.i, label %cond.end.i, !prof !319

cond.false.i:                                     ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.26, i32 noundef 3488) #19
  unreachable

cond.end.i:                                       ; preds = %if.end41
  %45 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %page, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %46)
  %cmp.i.not.i.i = icmp eq i32 %46, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i197, label %PagePrivate.exit.i, !prof !319

if.then.i.i197:                                   ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.80) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 452, 0\0A.popsection", ""() #14, !srcloc !363
  unreachable

PagePrivate.exit.i:                               ; preds = %cond.end.i
  %47 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %page, align 4
  %49 = and i32 %48, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %tobool3.not.i = icmp eq i32 %49, 0
  br i1 %tobool3.not.i, label %if.end.i, label %PagePrivate.exit.i.if.end46_crit_edge

PagePrivate.exit.i.if.end46_crit_edge:            ; preds = %PagePrivate.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end46

if.end.i:                                         ; preds = %PagePrivate.exit.i
  %50 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %44, align 4
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %51, i32 0, i32 8
  %52 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %i_sb.i, align 4
  %s_fs_info.i.i = getelementptr inbounds %struct.super_block, ptr %53, i32 0, i32 33
  %54 = ptrtoint ptr %s_fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %s_fs_info.i.i, align 16
  %sectorsize.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %55, i32 0, i32 167
  %56 = ptrtoint ptr %sectorsize.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %sectorsize.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %57)
  %cmp.i = icmp ult i32 %57, 4096
  br i1 %cmp.i, label %set_page_extent_mapped.exit, label %if.end8.i

if.end8.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @attach_page_private(ptr noundef %page, ptr noundef nonnull inttoptr (i32 1 to ptr)) #14
  br label %if.end46

set_page_extent_mapped.exit:                      ; preds = %if.end.i
  %call7.i = tail call i32 @btrfs_attach_subpage(ptr noundef %55, ptr noundef %page, i32 noundef 1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %cmp43 = icmp slt i32 %call7.i, 0
  br i1 %cmp43, label %if.then45, label %set_page_extent_mapped.exit.if.end46_crit_edge

set_page_extent_mapped.exit.if.end46_crit_edge:   ; preds = %set_page_extent_mapped.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end46

if.then45:                                        ; preds = %set_page_extent_mapped.exit
  %58 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %12, align 4
  %and.i.i161 = and i32 %59, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i161)
  %tobool.not.i = icmp eq i32 %and.i.i161, 0
  br i1 %tobool.not.i, label %do.body7.i, label %if.then.i162, !prof !322

if.then.i162:                                     ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.110) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 416, 0\0A.popsection", ""() #14, !srcloc !389
  unreachable

do.body7.i:                                       ; preds = %if.then45
  %60 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %12, align 4
  %and.i31.i = and i32 %61, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i31.i)
  %tobool.not.i.i163 = icmp eq i32 %and.i31.i, 0
  br i1 %tobool.not.i.i163, label %if.end.i.i166, label %if.then.i.i165, !prof !322

if.then.i.i165:                                   ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i164 = add i32 %61, -1
  br label %_compound_head.exit.i169

if.end.i.i166:                                    ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #16
  %62 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i169

_compound_head.exit.i169:                         ; preds = %if.end.i.i166, %if.then.i.i165
  %retval.0.i.i167 = phi i32 [ %sub.i.i164, %if.then.i.i165 ], [ %62, %if.end.i.i166 ]
  %63 = inttoptr i32 %retval.0.i.i167 to ptr
  %64 = ptrtoint ptr %63 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile i32, ptr %63, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %65)
  %cmp.i.not.i168 = icmp eq i32 %65, -1
  %66 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile i32, ptr %12, align 4
  %and.i32.i = and i32 %67, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i32.i)
  %tobool.not.i33.i = icmp eq i32 %and.i32.i, 0
  br i1 %cmp.i.not.i168, label %if.then17.i, label %do.end24.i, !prof !319

if.then17.i:                                      ; preds = %_compound_head.exit.i169
  br i1 %tobool.not.i33.i, label %if.end.i36.i, label %if.then.i35.i, !prof !322

if.then.i35.i:                                    ; preds = %if.then17.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i34.i = add i32 %67, -1
  br label %_compound_head.exit38.i

if.end.i36.i:                                     ; preds = %if.then17.i
  call void @__sanitizer_cov_trace_pc() #16
  %68 = ptrtoint ptr %page to i32
  br label %_compound_head.exit38.i

_compound_head.exit38.i:                          ; preds = %if.end.i36.i, %if.then.i35.i
  %retval.0.i37.i = phi i32 [ %sub.i34.i, %if.then.i35.i ], [ %68, %if.end.i36.i ]
  %69 = inttoptr i32 %retval.0.i37.i to ptr
  tail call void @dump_page(ptr noundef %69, ptr noundef nonnull @.str.86) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 416, 0\0A.popsection", ""() #14, !srcloc !390
  unreachable

do.end24.i:                                       ; preds = %_compound_head.exit.i169
  br i1 %tobool.not.i33.i, label %if.end.i43.i, label %if.then.i42.i, !prof !322

if.then.i42.i:                                    ; preds = %do.end24.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i41.i = add i32 %67, -1
  br label %SetPageError.exit

if.end.i43.i:                                     ; preds = %do.end24.i
  call void @__sanitizer_cov_trace_pc() #16
  %70 = ptrtoint ptr %page to i32
  br label %SetPageError.exit

SetPageError.exit:                                ; preds = %if.end.i43.i, %if.then.i42.i
  %retval.0.i44.i = phi i32 [ %sub.i41.i, %if.then.i42.i ], [ %70, %if.end.i43.i ]
  %71 = inttoptr i32 %retval.0.i44.i to ptr
  tail call void @_set_bit(i32 noundef 8, ptr noundef %71) #14
  br label %done

if.end46:                                         ; preds = %set_page_extent_mapped.exit.if.end46_crit_edge, %if.end8.i, %PagePrivate.exit.i.if.end46_crit_edge
  %extent_locked = getelementptr inbounds %struct.extent_page_data, ptr %epd, i32 0, i32 1
  %72 = ptrtoint ptr %extent_locked to i32
  call void @__asan_load1_noabort(i32 %72)
  %bf.load = load i8, ptr %extent_locked, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool47.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool47.not, label %if.then48, label %if.end46.if.end58_crit_edge

if.end46.if.end58_crit_edge:                      ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

if.then48:                                        ; preds = %if.end46
  %add.ptr.i198 = getelementptr i8, ptr %3, i32 -864
  %call50 = tail call fastcc i32 @writepage_delalloc(ptr noundef %add.ptr.i198, ptr noundef %page, ptr noundef %wbc)
  %73 = zext i32 %call50 to i64
  call void @__sanitizer_cov_trace_switch(i64 %73, ptr @__sancov_gen_cov_switch_values.135)
  switch i32 %call50, label %if.then48.done_crit_edge [
    i32 1, label %if.then48.cleanup_crit_edge
    i32 0, label %if.then48.if.end58_crit_edge
  ]

if.then48.if.end58_crit_edge:                     ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

if.then48.cleanup_crit_edge:                      ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then48.done_crit_edge:                         ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #16
  br label %done

if.end58:                                         ; preds = %if.then48.if.end58_crit_edge, %if.end46.if.end58_crit_edge
  %add.ptr.i199 = getelementptr i8, ptr %3, i32 -864
  %call60 = call fastcc i32 @__extent_writepage_io(ptr noundef %add.ptr.i199, ptr noundef %page, ptr noundef %wbc, ptr noundef %epd, i64 noundef %call2, ptr noundef nonnull %nr)
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call60)
  %cmp61 = icmp eq i32 %call60, 1
  br i1 %cmp61, label %if.end58.cleanup_crit_edge, label %if.end58.done_crit_edge

if.end58.done_crit_edge:                          ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #16
  br label %done

if.end58.cleanup_crit_edge:                       ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

done:                                             ; preds = %if.end58.done_crit_edge, %if.then48.done_crit_edge, %SetPageError.exit
  %ret.0 = phi i32 [ %call7.i, %SetPageError.exit ], [ %call60, %if.end58.done_crit_edge ], [ %call50, %if.then48.done_crit_edge ]
  %74 = ptrtoint ptr %nr to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %nr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %75)
  %cmp65 = icmp eq i32 %75, 0
  br i1 %cmp65, label %if.then67, label %done.if.end69_crit_edge

done.if.end69_crit_edge:                          ; preds = %done
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

if.then67:                                        ; preds = %done
  call void @__sanitizer_cov_trace_pc() #16
  %call68 = tail call zeroext i1 @set_page_writeback(ptr noundef %page) #14
  tail call void @end_page_writeback(ptr noundef %page) #14
  br label %if.end69

if.end69:                                         ; preds = %if.then67, %done.if.end69_crit_edge
  %76 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile i32, ptr %12, align 4
  %and.i.i170 = and i32 %77, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i170)
  %tobool.not.i.i171 = icmp eq i32 %and.i.i170, 0
  br i1 %tobool.not.i.i171, label %if.end.i.i174, label %if.then.i.i173, !prof !322

if.then.i.i173:                                   ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i172 = add i32 %77, -1
  br label %_compound_head.exit.i179

if.end.i.i174:                                    ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #16
  %78 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i179

_compound_head.exit.i179:                         ; preds = %if.end.i.i174, %if.then.i.i173
  %retval.0.i.i175 = phi i32 [ %sub.i.i172, %if.then.i.i173 ], [ %78, %if.end.i.i174 ]
  %79 = inttoptr i32 %retval.0.i.i175 to ptr
  %80 = ptrtoint ptr %79 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load volatile i32, ptr %79, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %81)
  %cmp.i.not.i176 = icmp eq i32 %81, -1
  %82 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load volatile i32, ptr %12, align 4
  %and.i16.i177 = and i32 %83, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i177)
  %tobool.not.i17.i178 = icmp eq i32 %and.i16.i177, 0
  br i1 %cmp.i.not.i176, label %if.then.i180, label %do.end10.i186, !prof !319

if.then.i180:                                     ; preds = %_compound_head.exit.i179
  br i1 %tobool.not.i17.i178, label %if.end.i20.i183, label %if.then.i19.i182, !prof !322

if.then.i19.i182:                                 ; preds = %if.then.i180
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i18.i181 = add i32 %83, -1
  br label %_compound_head.exit22.i185

if.end.i20.i183:                                  ; preds = %if.then.i180
  call void @__sanitizer_cov_trace_pc() #16
  %84 = ptrtoint ptr %page to i32
  br label %_compound_head.exit22.i185

_compound_head.exit22.i185:                       ; preds = %if.end.i20.i183, %if.then.i19.i182
  %retval.0.i21.i184 = phi i32 [ %sub.i18.i181, %if.then.i19.i182 ], [ %84, %if.end.i20.i183 ]
  %85 = inttoptr i32 %retval.0.i21.i184 to ptr
  tail call void @dump_page(ptr noundef %85, ptr noundef nonnull @.str.86) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 416, 0\0A.popsection", ""() #14, !srcloc !378
  unreachable

do.end10.i186:                                    ; preds = %_compound_head.exit.i179
  br i1 %tobool.not.i17.i178, label %if.end.i27.i189, label %if.then.i26.i188, !prof !322

if.then.i26.i188:                                 ; preds = %do.end10.i186
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i25.i187 = add i32 %83, -1
  br label %PageError.exit

if.end.i27.i189:                                  ; preds = %do.end10.i186
  call void @__sanitizer_cov_trace_pc() #16
  %86 = ptrtoint ptr %page to i32
  br label %PageError.exit

PageError.exit:                                   ; preds = %if.end.i27.i189, %if.then.i26.i188
  %retval.0.i28.i190 = phi i32 [ %sub.i25.i187, %if.then.i26.i188 ], [ %86, %if.end.i27.i189 ]
  %87 = inttoptr i32 %retval.0.i28.i190 to ptr
  %88 = ptrtoint ptr %87 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load volatile i32, ptr %87, align 4
  %90 = and i32 %89, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %90)
  %tobool71.not = icmp eq i32 %90, 0
  br i1 %tobool71.not, label %PageError.exit.if.end73_crit_edge, label %if.then72

PageError.exit.if.end73_crit_edge:                ; preds = %PageError.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end73

if.then72:                                        ; preds = %PageError.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @end_extent_writepage(ptr noundef %page, i32 noundef %ret.0, i64 noundef %shl.i, i64 noundef %sub)
  br label %if.end73

if.end73:                                         ; preds = %if.then72, %PageError.exit.if.end73_crit_edge
  %extent_locked74 = getelementptr inbounds %struct.extent_page_data, ptr %epd, i32 0, i32 1
  %91 = ptrtoint ptr %extent_locked74 to i32
  call void @__asan_load1_noabort(i32 %91)
  %bf.load75 = load i8, ptr %extent_locked74, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load75)
  %tobool78.not = icmp sgt i8 %bf.load75, -1
  br i1 %tobool78.not, label %if.else, label %if.then79

if.then79:                                        ; preds = %if.end73
  %tobool80.not = icmp eq ptr %wbc, null
  br i1 %tobool80.not, label %cond.false, label %cond.end, !prof !319

cond.false:                                       ; preds = %if.then79
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.111, i32 noundef 4146) #18
  unreachable

cond.end:                                         ; preds = %if.then79
  call void @__sanitizer_cov_trace_pc() #16
  %range_start = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 2
  %92 = ptrtoint ptr %range_start to i32
  call void @__asan_load8_noabort(i32 %92)
  %93 = load i64, ptr %range_start, align 8
  %range_end = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 3
  %94 = ptrtoint ptr %range_end to i32
  call void @__asan_load8_noabort(i32 %94)
  %95 = load i64, ptr %range_end, align 8
  %add87 = sub i64 1, %93
  %sub89 = add i64 %add87, %95
  %conv90 = trunc i64 %sub89 to i32
  tail call void @btrfs_page_unlock_writer(ptr noundef %7, ptr noundef %page, i64 noundef %93, i32 noundef %conv90) #14
  br label %if.end91

if.else:                                          ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @unlock_page(ptr noundef %page) #14
  br label %if.end91

if.end91:                                         ; preds = %if.else, %cond.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %ret.0)
  %cmp92 = icmp slt i32 %ret.0, 1
  br i1 %cmp92, label %if.end91.cleanup_crit_edge, label %cond.false101, !prof !322

if.end91.cleanup_crit_edge:                       ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cond.false101:                                    ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.28, i32 noundef 4152) #18
  unreachable

cleanup:                                          ; preds = %if.end91.cleanup_crit_edge, %if.end58.cleanup_crit_edge, %if.then48.cleanup_crit_edge, %if.then33
  %retval.0 = phi i32 [ 0, %if.then33 ], [ 0, %if.then48.cleanup_crit_edge ], [ 0, %if.end58.cleanup_crit_edge ], [ %ret.0, %if.end91.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nr) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @extent_write_locked_range(ptr noundef %inode, i64 noundef %start, i64 noundef %end) local_unnamed_addr #0 align 64 {
entry:
  %epd = alloca %struct.extent_page_data, align 4
  %wbc_writepages = alloca %struct.writeback_control, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %i_mapping = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  %0 = ptrtoint ptr %i_mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_mapping, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %2 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 33
  %4 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %s_fs_info.i, align 16
  %sectorsize1 = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 167
  %6 = ptrtoint ptr %sectorsize1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sectorsize1, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %epd) #14
  %8 = call ptr @memcpy(ptr %epd, ptr @__const.extent_write_locked_range.epd, i32 20)
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %wbc_writepages) #14
  %9 = getelementptr inbounds i8, ptr %wbc_writepages, i32 24
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 -1, ptr %9, align 8, !annotation !349
  %pages_skipped = getelementptr inbounds %struct.writeback_control, ptr %wbc_writepages, i32 0, i32 1
  %11 = ptrtoint ptr %pages_skipped to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %pages_skipped, align 4
  %range_start = getelementptr inbounds %struct.writeback_control, ptr %wbc_writepages, i32 0, i32 2
  %12 = ptrtoint ptr %range_start to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %start, ptr %range_start, align 8
  %range_end = getelementptr inbounds %struct.writeback_control, ptr %wbc_writepages, i32 0, i32 3
  %add = add i64 %end, 1
  %13 = ptrtoint ptr %range_end to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %add, ptr %range_end, align 8
  %sync_mode = getelementptr inbounds %struct.writeback_control, ptr %wbc_writepages, i32 0, i32 4
  %14 = ptrtoint ptr %sync_mode to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 1, ptr %sync_mode, align 8
  %for_kupdate = getelementptr inbounds %struct.writeback_control, ptr %wbc_writepages, i32 0, i32 5
  %15 = ptrtoint ptr %for_kupdate to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 511, ptr %for_kupdate, align 4
  %wb = getelementptr inbounds %struct.writeback_control, ptr %wbc_writepages, i32 0, i32 6
  %conv = zext i32 %7 to i64
  %sub = add nsw i64 %conv, -1
  %16 = or i64 %add, %start
  %17 = and i64 %sub, %16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %17)
  %18 = icmp eq i64 %17, 0
  %19 = call ptr @memset(ptr %wb, i32 0, i32 32)
  br i1 %18, label %cond.end, label %cond.false, !prof !322

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.29, i32 noundef 5129) #18
  unreachable

cond.end:                                         ; preds = %entry
  %sub35 = add i64 %end, 8796093022207
  %or = or i64 %sub35, 4095
  %and37 = and i64 %start, 8796093018112
  %add36 = sub nsw i64 1, %and37
  %sub38 = add i64 %add36, %or
  %sh.diff = lshr exact i64 %sub38, 11
  %tr.sh.diff = trunc i64 %sh.diff to i32
  %20 = ptrtoint ptr %wbc_writepages to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %tr.sh.diff, ptr %wbc_writepages, align 8
  %i_lock.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock.i) #14
  %i_wb.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 30
  %21 = ptrtoint ptr %i_wb.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %i_wb.i.i, align 4
  %tobool.not.i.i142 = icmp eq ptr %22, null
  br i1 %tobool.not.i.i142, label %if.then.i.i143, label %cond.end.wbc_attach_fdatawrite_inode.exit_crit_edge

cond.end.wbc_attach_fdatawrite_inode.exit_crit_edge: ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %wbc_attach_fdatawrite_inode.exit

if.then.i.i143:                                   ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__inode_attach_wb(ptr noundef %inode, ptr noundef null) #14
  br label %wbc_attach_fdatawrite_inode.exit

wbc_attach_fdatawrite_inode.exit:                 ; preds = %if.then.i.i143, %cond.end.wbc_attach_fdatawrite_inode.exit_crit_edge
  call void @wbc_attach_and_unlock_inode(ptr noundef nonnull %wbc_writepages, ptr noundef %inode) #14
  call void @__sanitizer_cov_trace_cmp8(i64 %start, i64 %end)
  %cmp41.not186 = icmp ugt i64 %start, %end
  br i1 %cmp41.not186, label %wbc_attach_fdatawrite_inode.exit.if.then93_crit_edge, label %wbc_attach_fdatawrite_inode.exit.while.body_crit_edge

wbc_attach_fdatawrite_inode.exit.while.body_crit_edge: ; preds = %wbc_attach_fdatawrite_inode.exit
  br label %while.body

wbc_attach_fdatawrite_inode.exit.if.then93_crit_edge: ; preds = %wbc_attach_fdatawrite_inode.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then93

while.body:                                       ; preds = %put_page.exit.while.body_crit_edge, %wbc_attach_fdatawrite_inode.exit.while.body_crit_edge
  %cur.0189 = phi i64 [ %add91, %put_page.exit.while.body_crit_edge ], [ %start, %wbc_attach_fdatawrite_inode.exit.while.body_crit_edge ]
  %first_error.0188 = phi i32 [ %first_error.1, %put_page.exit.while.body_crit_edge ], [ 0, %wbc_attach_fdatawrite_inode.exit.while.body_crit_edge ]
  %found_error.0.off0187 = phi i1 [ %found_error.1.off0, %put_page.exit.while.body_crit_edge ], [ false, %wbc_attach_fdatawrite_inode.exit.while.body_crit_edge ]
  %23 = add i64 %cur.0189, 4096
  %add44 = and i64 %23, -4096
  %sub45 = add i64 %add44, -1
  %24 = call i64 @llvm.umin.i64(i64 %sub45, i64 %end)
  %shr51 = lshr i64 %cur.0189, 12
  %conv52 = trunc i64 %shr51 to i32
  %call.i = call ptr @pagecache_get_page(ptr noundef %1, i32 noundef %conv52, i32 noundef 0, i32 noundef 0) #14
  %25 = getelementptr inbounds %struct.page, ptr %call.i, i32 0, i32 1
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %25, align 4
  %and.i.i = and i32 %27, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !322

if.then.i.i:                                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %27, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  %28 = ptrtoint ptr %call.i to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %28, %if.end.i.i ]
  %29 = inttoptr i32 %retval.0.i.i to ptr
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %29, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %31)
  %cmp.i.not.i = icmp eq i32 %31, -1
  %32 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %25, align 4
  %and.i16.i = and i32 %33, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i)
  %tobool.not.i17.i = icmp eq i32 %and.i16.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end10.i, !prof !319

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i20.i, label %if.then.i19.i, !prof !322

if.then.i19.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i18.i = add i32 %33, -1
  br label %_compound_head.exit22.i

if.end.i20.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %34 = ptrtoint ptr %call.i to i32
  br label %_compound_head.exit22.i

_compound_head.exit22.i:                          ; preds = %if.end.i20.i, %if.then.i19.i
  %retval.0.i21.i = phi i32 [ %sub.i18.i, %if.then.i19.i ], [ %34, %if.end.i20.i ]
  %35 = inttoptr i32 %retval.0.i21.i to ptr
  call void @dump_page(ptr noundef %35, ptr noundef nonnull @.str.86) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 414, 0\0A.popsection", ""() #14, !srcloc !367
  unreachable

do.end10.i:                                       ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i27.i, label %if.then.i26.i, !prof !322

if.then.i26.i:                                    ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i25.i = add i32 %33, -1
  br label %PageLocked.exit

if.end.i27.i:                                     ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  %36 = ptrtoint ptr %call.i to i32
  br label %PageLocked.exit

PageLocked.exit:                                  ; preds = %if.end.i27.i, %if.then.i26.i
  %retval.0.i28.i = phi i32 [ %sub.i25.i, %if.then.i26.i ], [ %36, %if.end.i27.i ]
  %37 = inttoptr i32 %retval.0.i28.i to ptr
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %37, align 4
  %and1.i.i = and i32 %39, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool55.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool55.not, label %cond.false63, label %cond.end64, !prof !319

cond.false63:                                     ; preds = %PageLocked.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.30, i32 noundef 5144) #18
  unreachable

cond.end64:                                       ; preds = %PageLocked.exit
  %40 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %25, align 4
  %and.i.i132 = and i32 %41, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i132)
  %tobool.not.i.i133 = icmp eq i32 %and.i.i132, 0
  br i1 %tobool.not.i.i133, label %if.end.i.i136, label %if.then.i.i135, !prof !322

if.then.i.i135:                                   ; preds = %cond.end64
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i134 = add i32 %41, -1
  br label %_compound_head.exit.i139

if.end.i.i136:                                    ; preds = %cond.end64
  call void @__sanitizer_cov_trace_pc() #16
  %42 = ptrtoint ptr %call.i to i32
  br label %_compound_head.exit.i139

_compound_head.exit.i139:                         ; preds = %if.end.i.i136, %if.then.i.i135
  %retval.0.i.i137 = phi i32 [ %sub.i.i134, %if.then.i.i135 ], [ %42, %if.end.i.i136 ]
  %43 = inttoptr i32 %retval.0.i.i137 to ptr
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %43, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %45)
  %cmp.i.not.i138 = icmp eq i32 %45, -1
  %46 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %25, align 4
  %and.i13.i = and i32 %47, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i)
  %tobool.not.i14.i = icmp eq i32 %and.i13.i, 0
  br i1 %cmp.i.not.i138, label %if.then.i140, label %do.end8.i, !prof !319

if.then.i140:                                     ; preds = %_compound_head.exit.i139
  br i1 %tobool.not.i14.i, label %if.end.i17.i, label %if.then.i16.i, !prof !322

if.then.i16.i:                                    ; preds = %if.then.i140
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i15.i = add i32 %47, -1
  br label %_compound_head.exit19.i

if.end.i17.i:                                     ; preds = %if.then.i140
  call void @__sanitizer_cov_trace_pc() #16
  %48 = ptrtoint ptr %call.i to i32
  br label %_compound_head.exit19.i

_compound_head.exit19.i:                          ; preds = %if.end.i17.i, %if.then.i16.i
  %retval.0.i18.i = phi i32 [ %sub.i15.i, %if.then.i16.i ], [ %48, %if.end.i17.i ]
  %49 = inttoptr i32 %retval.0.i18.i to ptr
  call void @dump_page(ptr noundef %49, ptr noundef nonnull @.str.86) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 420, 0\0A.popsection", ""() #14, !srcloc !357
  unreachable

do.end8.i:                                        ; preds = %_compound_head.exit.i139
  br i1 %tobool.not.i14.i, label %if.end.i24.i, label %if.then.i23.i, !prof !322

if.then.i23.i:                                    ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i22.i = add i32 %47, -1
  br label %PageDirty.exit

if.end.i24.i:                                     ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  %50 = ptrtoint ptr %call.i to i32
  br label %PageDirty.exit

PageDirty.exit:                                   ; preds = %if.end.i24.i, %if.then.i23.i
  %retval.0.i25.i = phi i32 [ %sub.i22.i, %if.then.i23.i ], [ %50, %if.end.i24.i ]
  %51 = inttoptr i32 %retval.0.i25.i to ptr
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %51, align 4
  %54 = and i32 %53, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool66.not = icmp eq i32 %54, 0
  br i1 %tobool66.not, label %cond.false74, label %cond.end75, !prof !319

cond.false74:                                     ; preds = %PageDirty.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.31, i32 noundef 5145) #18
  unreachable

cond.end75:                                       ; preds = %PageDirty.exit
  %call76 = call zeroext i1 @clear_page_dirty_for_io(ptr noundef %call.i) #14
  %call77 = call fastcc i32 @__extent_writepage(ptr noundef %call.i, ptr noundef nonnull %wbc_writepages, ptr noundef nonnull %epd)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call77)
  %cmp89 = icmp slt i32 %call77, 0
  %found_error.1.off0 = select i1 %cmp89, i1 true, i1 %found_error.0.off0187
  %first_error.1 = select i1 %cmp89, i32 %call77, i32 %first_error.0188
  %55 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %25, align 4
  %and.i.i144 = and i32 %56, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i144)
  %tobool.not.i.i145 = icmp eq i32 %and.i.i144, 0
  br i1 %tobool.not.i.i145, label %if.end.i.i148, label %if.then.i.i147, !prof !322

if.then.i.i147:                                   ; preds = %cond.end75
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i146 = add i32 %56, -1
  br label %_compound_head.exit.i150

if.end.i.i148:                                    ; preds = %cond.end75
  call void @__sanitizer_cov_trace_pc() #16
  %57 = ptrtoint ptr %call.i to i32
  br label %_compound_head.exit.i150

_compound_head.exit.i150:                         ; preds = %if.end.i.i148, %if.then.i.i147
  %retval.0.i.i149 = phi i32 [ %sub.i.i146, %if.then.i.i147 ], [ %57, %if.end.i.i148 ]
  %58 = inttoptr i32 %retval.0.i.i149 to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %58, i32 0, i32 3
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #14
  %59 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %cmp.i.i.i.i = icmp eq i32 %60, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !319

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i150
  call void @__sanitizer_cov_trace_pc() #16
  %61 = inttoptr i32 %retval.0.i.i149 to ptr
  call void @dump_page(ptr noundef %61, ptr noundef nonnull @.str.57) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #14, !srcloc !351
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i150
  %call.i.i.i10.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !352
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #14
  %62 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #14, !srcloc !353
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %62, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !354
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@extent_write_locked_range, %if.then.i.i.i.i.i)) #14
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !326

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  call void @__page_ref_mod_and_test(ptr noundef %58, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #14
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.put_page.exit_crit_edge

folio_put_testzero.exit.i.i.put_page.exit_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %put_page.exit

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__put_page(ptr noundef %58) #14
  br label %put_page.exit

put_page.exit:                                    ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.put_page.exit_crit_edge
  %add91 = add i64 %24, 1
  %cmp41.not = icmp ugt i64 %add91, %end
  br i1 %cmp41.not, label %while.end, label %put_page.exit.while.body_crit_edge

put_page.exit.while.body_crit_edge:               ; preds = %put_page.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

while.end:                                        ; preds = %put_page.exit
  br i1 %found_error.1.off0, label %if.else, label %while.end.if.then93_crit_edge

while.end.if.then93_crit_edge:                    ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then93

if.then93:                                        ; preds = %while.end.if.then93_crit_edge, %wbc_attach_fdatawrite_inode.exit.if.then93_crit_edge
  %call94 = call fastcc i32 @flush_write_bio(ptr noundef nonnull %epd)
  br label %if.end95

if.else:                                          ; preds = %while.end
  %63 = ptrtoint ptr %epd to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %epd, align 4
  %tobool.not.i = icmp eq ptr %64, null
  br i1 %tobool.not.i, label %if.else.if.end95_crit_edge, label %if.then.i152

if.else.if.end95_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end95

if.then.i152:                                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  %call.i151 = call zeroext i8 @errno_to_blk_status(i32 noundef %call77) #14
  %bi_status.i = getelementptr inbounds %struct.bio, ptr %64, i32 0, i32 6
  %65 = ptrtoint ptr %bi_status.i to i32
  call void @__asan_store1_noabort(i32 %65)
  store i8 %call.i151, ptr %bi_status.i, align 2
  call void @bio_endio(ptr noundef nonnull %64) #14
  %66 = ptrtoint ptr %epd to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr null, ptr %epd, align 4
  br label %if.end95

if.end95:                                         ; preds = %if.then.i152, %if.else.if.end95_crit_edge, %if.then93
  %first_error.0.ret.1 = phi i32 [ %first_error.1, %if.then.i152 ], [ %first_error.1, %if.else.if.end95_crit_edge ], [ %call94, %if.then93 ]
  call void @wbc_detach_inode(ptr noundef nonnull %wbc_writepages) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %wbc_writepages) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %epd) #14
  ret i32 %first_error.0.ret.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @wbc_detach_inode(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @extent_writepages(ptr noundef %mapping, ptr noundef %wbc) local_unnamed_addr #0 align 64 {
entry:
  %pvec.i = alloca %struct.pagevec, align 4
  %index.i = alloca i32, align 4
  %epd = alloca %struct.extent_page_data, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mapping, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %epd) #14
  %2 = call ptr @memset(ptr %epd, i32 0, i32 20)
  %sync_io = getelementptr inbounds %struct.extent_page_data, ptr %epd, i32 0, i32 1
  %sync_mode = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 4
  %3 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %sync_mode, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cmp = icmp eq i32 %4, 1
  %bf.shl = select i1 %cmp, i8 64, i8 0
  %5 = ptrtoint ptr %sync_io to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %bf.shl, ptr %sync_io, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 -864
  %6 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %add.ptr.i, align 8
  %root_key.i.i = getelementptr inbounds %struct.btrfs_root, ptr %7, i32 0, i32 7
  %8 = ptrtoint ptr %root_key.i.i to i32
  call void @__asan_loadN_noabort(i32 %8, i32 8)
  %9 = load i64, ptr %root_key.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 -9, i64 %9)
  %cmp.i.i = icmp eq i64 %9, -9
  br i1 %cmp.i.i, label %land.lhs.true.i, label %entry.btrfs_zoned_data_reloc_lock.exit_crit_edge

entry.btrfs_zoned_data_reloc_lock.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_zoned_data_reloc_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %fs_info.i = getelementptr inbounds %struct.btrfs_root, ptr %7, i32 0, i32 8
  %10 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %fs_info.i, align 8
  %12 = getelementptr inbounds %struct.btrfs_fs_info, ptr %11, i32 0, i32 176
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %12, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %14)
  %cmp.i6.not.i = icmp eq i64 %14, 0
  br i1 %cmp.i6.not.i, label %land.lhs.true.i.btrfs_zoned_data_reloc_lock.exit_crit_edge, label %if.then.i

land.lhs.true.i.btrfs_zoned_data_reloc_lock.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_zoned_data_reloc_lock.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  %call3.i = tail call i32 @btrfs_inode_lock(ptr noundef %1, i32 noundef 0) #14
  br label %btrfs_zoned_data_reloc_lock.exit

btrfs_zoned_data_reloc_lock.exit:                 ; preds = %if.then.i, %land.lhs.true.i.btrfs_zoned_data_reloc_lock.exit_crit_edge, %entry.btrfs_zoned_data_reloc_lock.exit_crit_edge
  %15 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %mapping, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %pvec.i) #14
  %17 = call ptr @memset(ptr %pvec.i, i32 255, i32 64)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %index.i) #14
  %call.i = tail call ptr @igrab(ptr noundef %16) #14
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %btrfs_zoned_data_reloc_lock.exit.extent_write_cache_pages.exit_crit_edge, label %if.end.i

btrfs_zoned_data_reloc_lock.exit.extent_write_cache_pages.exit_crit_edge: ; preds = %btrfs_zoned_data_reloc_lock.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %extent_write_cache_pages.exit

if.end.i:                                         ; preds = %btrfs_zoned_data_reloc_lock.exit
  %18 = ptrtoint ptr %pvec.i to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 0, ptr %pvec.i, align 4
  %percpu_pvec_drained.i.i = getelementptr inbounds %struct.pagevec, ptr %pvec.i, i32 0, i32 1
  %19 = ptrtoint ptr %percpu_pvec_drained.i.i to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 0, ptr %percpu_pvec_drained.i.i, align 1
  %range_cyclic.i = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 5
  %20 = ptrtoint ptr %range_cyclic.i to i32
  call void @__asan_load2_noabort(i32 %20)
  %bf.load.i = load i16, ptr %range_cyclic.i, align 4
  %21 = and i16 %bf.load.i, 2048
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %21)
  %tobool1.not.i = icmp eq i16 %21, 0
  br i1 %tobool1.not.i, label %if.else.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %writeback_index.i = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 8
  %22 = ptrtoint ptr %writeback_index.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %writeback_index.i, align 4
  %24 = ptrtoint ptr %index.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %index.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp.i = icmp eq i32 %23, 0
  %conv.i = zext i1 %cmp.i to i32
  br label %if.end26.i

if.else.i:                                        ; preds = %if.end.i
  %range_start.i = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 2
  %25 = ptrtoint ptr %range_start.i to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %range_start.i, align 8
  %27 = lshr i64 %26, 12
  %conv3.i = trunc i64 %27 to i32
  %28 = ptrtoint ptr %index.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %conv3.i, ptr %index.i, align 4
  %range_end.i = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 3
  %29 = ptrtoint ptr %range_end.i to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %range_end.i, align 8
  %31 = lshr i64 %30, 12
  %conv5.i = trunc i64 %31 to i32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %26)
  %cmp7.i = icmp eq i64 %26, 0
  call void @__sanitizer_cov_trace_const_cmp8(i64 9223372036854775807, i64 %30)
  %cmp10.i = icmp eq i64 %30, 9223372036854775807
  %or.cond.i = select i1 %cmp7.i, i1 %cmp10.i, i1 false
  br i1 %or.cond.i, label %land.lhs.true16.i, label %if.else.i.if.end26.i_crit_edge

if.else.i.if.end26.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end26.i

land.lhs.true16.i:                                ; preds = %if.else.i
  %32 = ptrtoint ptr %wbc to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %wbc, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2147483647, i32 %33)
  %cmp17.i = icmp eq i32 %33, 2147483647
  br i1 %cmp17.i, label %land.lhs.true19.i, label %land.lhs.true16.i.if.end26.i_crit_edge

land.lhs.true16.i.if.end26.i_crit_edge:           ; preds = %land.lhs.true16.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end26.i

land.lhs.true19.i:                                ; preds = %land.lhs.true16.i
  %runtime_flags.i = getelementptr i8, ptr %16, i32 -356
  %call21.i = tail call i32 @_test_and_clear_bit(i32 noundef 8, ptr noundef %runtime_flags.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21.i)
  %tobool22.not.i = icmp eq i32 %call21.i, 0
  br i1 %tobool22.not.i, label %land.lhs.true19.i.if.end26.i_crit_edge, label %if.then23.i

land.lhs.true19.i.if.end26.i_crit_edge:           ; preds = %land.lhs.true19.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end26.i

if.then23.i:                                      ; preds = %land.lhs.true19.i
  call void @__sanitizer_cov_trace_pc() #16
  %34 = ptrtoint ptr %range_cyclic.i to i32
  call void @__asan_load2_noabort(i32 %34)
  %bf.load24.i = load i16, ptr %range_cyclic.i, align 4
  %bf.set.i = or i16 %bf.load24.i, 8192
  store i16 %bf.set.i, ptr %range_cyclic.i, align 4
  br label %if.end26.i

if.end26.i:                                       ; preds = %if.then23.i, %land.lhs.true19.i.if.end26.i_crit_edge, %land.lhs.true16.i.if.end26.i_crit_edge, %if.else.i.if.end26.i_crit_edge, %if.then2.i
  %tobool15.not273.i = phi i1 [ false, %if.then23.i ], [ false, %land.lhs.true19.i.if.end26.i_crit_edge ], [ false, %land.lhs.true16.i.if.end26.i_crit_edge ], [ true, %if.then2.i ], [ true, %if.else.i.if.end26.i_crit_edge ]
  %scanned.0272.i = phi i32 [ 1, %if.then23.i ], [ 1, %land.lhs.true19.i.if.end26.i_crit_edge ], [ 1, %land.lhs.true16.i.if.end26.i_crit_edge ], [ %conv.i, %if.then2.i ], [ 1, %if.else.i.if.end26.i_crit_edge ]
  %end.0271.i = phi i32 [ %conv5.i, %if.then23.i ], [ %conv5.i, %land.lhs.true19.i.if.end26.i_crit_edge ], [ %conv5.i, %land.lhs.true16.i.if.end26.i_crit_edge ], [ -1, %if.then2.i ], [ %conv5.i, %if.else.i.if.end26.i_crit_edge ]
  %35 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %sync_mode, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %36)
  %cmp27.i = icmp eq i32 %36, 1
  br i1 %cmp27.i, label %if.end26.i.if.end37.i_crit_edge, label %lor.lhs.false.i

if.end26.i.if.end37.i_crit_edge:                  ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end37.i

lor.lhs.false.i:                                  ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #16
  %37 = ptrtoint ptr %range_cyclic.i to i32
  call void @__asan_load2_noabort(i32 %37)
  %bf.load30.i = load i16, ptr %range_cyclic.i, align 4
  %38 = lshr i16 %bf.load30.i, 12
  %39 = and i16 %38, 2
  %40 = zext i16 %39 to i32
  br label %if.end37.i

if.end37.i:                                       ; preds = %lor.lhs.false.i, %if.end26.i.if.end37.i_crit_edge
  %tag.0.i = phi i32 [ 2, %if.end26.i.if.end37.i_crit_edge ], [ %40, %lor.lhs.false.i ]
  br label %retry.i

retry.i:                                          ; preds = %if.then136.i.retry.i_crit_edge, %if.end37.i
  %nr_to_write_done.0.i = phi i32 [ 0, %if.end37.i ], [ %nr_to_write_done.1.lcssa.i, %if.then136.i.retry.i_crit_edge ]
  %scanned.1.i = phi i32 [ %scanned.0272.i, %if.end37.i ], [ 1, %if.then136.i.retry.i_crit_edge ]
  %41 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %sync_mode, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %42)
  %cmp39.i = icmp eq i32 %42, 1
  br i1 %cmp39.i, label %retry.i.if.then48.i_crit_edge, label %lor.lhs.false41.i

retry.i.if.then48.i_crit_edge:                    ; preds = %retry.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then48.i

lor.lhs.false41.i:                                ; preds = %retry.i
  %43 = ptrtoint ptr %range_cyclic.i to i32
  call void @__asan_load2_noabort(i32 %43)
  %bf.load43.i = load i16, ptr %range_cyclic.i, align 4
  %44 = and i16 %bf.load43.i, 8192
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %44)
  %tobool47.not.i = icmp eq i16 %44, 0
  br i1 %tobool47.not.i, label %lor.lhs.false41.i.if.end49.i_crit_edge, label %lor.lhs.false41.i.if.then48.i_crit_edge

lor.lhs.false41.i.if.then48.i_crit_edge:          ; preds = %lor.lhs.false41.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then48.i

lor.lhs.false41.i.if.end49.i_crit_edge:           ; preds = %lor.lhs.false41.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end49.i

if.then48.i:                                      ; preds = %lor.lhs.false41.i.if.then48.i_crit_edge, %retry.i.if.then48.i_crit_edge
  %45 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %index.i, align 4
  call void @tag_pages_for_writeback(ptr noundef %mapping, i32 noundef %46, i32 noundef %end.0271.i) #14
  br label %if.end49.i

if.end49.i:                                       ; preds = %if.then48.i, %lor.lhs.false41.i.if.end49.i_crit_edge
  %47 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %index.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_to_write_done.0.i)
  %tobool52.not345.i = icmp eq i32 %nr_to_write_done.0.i, 0
  br i1 %tobool52.not345.i, label %land.lhs.true53.i.preheader, label %if.end49.i.while.end.i_crit_edge

if.end49.i.while.end.i_crit_edge:                 ; preds = %if.end49.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.i

land.lhs.true53.i.preheader:                      ; preds = %if.end49.i
  %49 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %index.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %50, i32 %end.0271.i)
  %cmp54.not.i55 = icmp ugt i32 %50, %end.0271.i
  br i1 %cmp54.not.i55, label %land.lhs.true53.i.preheader.while.end.i_crit_edge, label %land.rhs.i.preheader

land.lhs.true53.i.preheader.while.end.i_crit_edge: ; preds = %land.lhs.true53.i.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.i

land.rhs.i.preheader:                             ; preds = %land.lhs.true53.i.preheader
  %call56.i141 = call i32 @pagevec_lookup_range_tag(ptr noundef nonnull %pvec.i, ptr noundef %mapping, ptr noundef nonnull %index.i, i32 noundef %end.0271.i, i32 noundef %tag.0.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call56.i141)
  %tobool57.not.i142 = icmp eq i32 %call56.i141, 0
  br i1 %tobool57.not.i142, label %land.rhs.i.preheader.while.end.i_crit_edge, label %land.rhs.i.preheader.for.body.i.preheader_crit_edge

land.rhs.i.preheader.for.body.i.preheader_crit_edge: ; preds = %land.rhs.i.preheader
  br label %for.body.i.preheader

land.rhs.i.preheader.while.end.i_crit_edge:       ; preds = %land.rhs.i.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.i

land.lhs.true53.i:                                ; preds = %pagevec_release.exit.i
  %51 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %index.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %52, i32 %end.0271.i)
  %cmp54.not.i = icmp ugt i32 %52, %end.0271.i
  br i1 %cmp54.not.i, label %land.lhs.true53.i.while.end.i.loopexit_crit_edge, label %land.rhs.i

land.lhs.true53.i.while.end.i.loopexit_crit_edge: ; preds = %land.lhs.true53.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.i.loopexit

land.rhs.i:                                       ; preds = %land.lhs.true53.i
  %call56.i = call i32 @pagevec_lookup_range_tag(ptr noundef nonnull %pvec.i, ptr noundef %mapping, ptr noundef nonnull %index.i, i32 noundef %end.0271.i, i32 noundef %tag.0.i) #14
  %tobool57.not.i = icmp eq i32 %call56.i, 0
  br i1 %tobool57.not.i, label %land.rhs.i.while.end.i.loopexit_crit_edge, label %land.rhs.i.for.body.i.preheader_crit_edge

land.rhs.i.for.body.i.preheader_crit_edge:        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.preheader

land.rhs.i.while.end.i.loopexit_crit_edge:        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.i.loopexit

for.body.i.preheader:                             ; preds = %land.rhs.i.for.body.i.preheader_crit_edge, %land.rhs.i.preheader.for.body.i.preheader_crit_edge
  %call56.i144 = phi i32 [ %call56.i, %land.rhs.i.for.body.i.preheader_crit_edge ], [ %call56.i141, %land.rhs.i.preheader.for.body.i.preheader_crit_edge ]
  %ret.1347.i58143 = phi i32 [ %ret.7.i, %land.rhs.i.for.body.i.preheader_crit_edge ], [ 0, %land.rhs.i.preheader.for.body.i.preheader_crit_edge ]
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.i.preheader
  %i.0335.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %for.body.i.preheader ]
  %nr_to_write_done.2333.i = phi i32 [ %nr_to_write_done.3.ph.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %for.body.i.preheader ]
  %ret.2332.i = phi i32 [ %ret.6.ph.i, %for.inc.i.for.body.i_crit_edge ], [ %ret.1347.i58143, %for.body.i.preheader ]
  %arrayidx.i = getelementptr %struct.pagevec, ptr %pvec.i, i32 0, i32 2, i32 %i.0335.i
  %53 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %arrayidx.i, align 4
  %index60.i = getelementptr inbounds %struct.page, ptr %54, i32 0, i32 1, i32 0, i32 2
  %55 = ptrtoint ptr %index60.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %index60.i, align 4
  %57 = getelementptr inbounds %struct.page, ptr %54, i32 0, i32 1
  %58 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %57, align 4
  %and.i.i242.i = and i32 %59, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i242.i)
  %tobool.not.i.i243.i = icmp eq i32 %and.i.i242.i, 0
  br i1 %tobool.not.i.i243.i, label %if.end.i.i246.i, label %if.then.i.i245.i, !prof !322

if.then.i.i245.i:                                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i244.i = add i32 %59, -1
  br label %_compound_head.exit.i248.i

if.end.i.i246.i:                                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %60 = ptrtoint ptr %54 to i32
  br label %_compound_head.exit.i248.i

_compound_head.exit.i248.i:                       ; preds = %if.end.i.i246.i, %if.then.i.i245.i
  %retval.0.i.i247.i = phi i32 [ %sub.i.i244.i, %if.then.i.i245.i ], [ %60, %if.end.i.i246.i ]
  %61 = inttoptr i32 %retval.0.i.i247.i to ptr
  %62 = getelementptr inbounds %struct.page, ptr %61, i32 0, i32 1
  %63 = ptrtoint ptr %62 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile i32, ptr %62, align 4
  %and.i.i.i.i.i = and i32 %64, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %folio_flags.exit.i.i.i, label %if.then.i.i.i.i, !prof !322

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i248.i
  call void @__sanitizer_cov_trace_pc() #16
  %65 = inttoptr i32 %retval.0.i.i247.i to ptr
  call void @dump_page(ptr noundef %65, ptr noundef nonnull @.str.82) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

folio_flags.exit.i.i.i:                           ; preds = %_compound_head.exit.i248.i
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %61, i32 noundef 4) #14
  %66 = ptrtoint ptr %61 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile i32, ptr %61, align 4
  %and.i.i4.i.i.i = and i32 %67, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i.i)
  %tobool.not.i.i.i.i.i = icmp eq i32 %and.i.i4.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %trylock_page.exit.i, label %folio_flags.exit.i.i.i.if.then63.i_crit_edge

folio_flags.exit.i.i.i.if.then63.i_crit_edge:     ; preds = %folio_flags.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then63.i

trylock_page.exit.i:                              ; preds = %folio_flags.exit.i.i.i
  call void @llvm.prefetch.p0(ptr %61, i32 1, i32 3, i32 1) #14
  %68 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %61, ptr %61, i32 1, ptr elementtype(i32) %61) #14, !srcloc !383
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %68, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !384
  %and1.i.i.i.i.i = and i32 %asmresult.i.i.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i)
  %tobool62.not.not.i = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %tobool62.not.not.i, label %trylock_page.exit.i.if.end77.i_crit_edge, label %trylock_page.exit.i.if.then63.i_crit_edge

trylock_page.exit.i.if.then63.i_crit_edge:        ; preds = %trylock_page.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then63.i

trylock_page.exit.i.if.end77.i_crit_edge:         ; preds = %trylock_page.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end77.i

if.then63.i:                                      ; preds = %trylock_page.exit.i.if.then63.i_crit_edge, %folio_flags.exit.i.i.i.if.then63.i_crit_edge
  %call64.i = call fastcc i32 @flush_write_bio(ptr noundef nonnull %epd) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call64.i)
  %cmp65.i = icmp slt i32 %call64.i, 0
  br i1 %cmp65.i, label %do.body70.i, label %do.end76.i, !prof !319

do.body70.i:                                      ; preds = %if.then63.i
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5014, 0\0A.popsection", ""() #14, !srcloc !391
  unreachable

do.end76.i:                                       ; preds = %if.then63.i
  call void @__might_sleep(ptr noundef nonnull @.str.130, i32 noundef 788) #14
  %69 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %57, align 4
  %and.i.i249.i = and i32 %70, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i249.i)
  %tobool.not.i.i250.i = icmp eq i32 %and.i.i249.i, 0
  br i1 %tobool.not.i.i250.i, label %if.end.i.i253.i, label %if.then.i.i252.i, !prof !322

if.then.i.i252.i:                                 ; preds = %do.end76.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i251.i = add i32 %70, -1
  br label %_compound_head.exit.i257.i

if.end.i.i253.i:                                  ; preds = %do.end76.i
  call void @__sanitizer_cov_trace_pc() #16
  %71 = ptrtoint ptr %54 to i32
  br label %_compound_head.exit.i257.i

_compound_head.exit.i257.i:                       ; preds = %if.end.i.i253.i, %if.then.i.i252.i
  %retval.0.i.i254.i = phi i32 [ %sub.i.i251.i, %if.then.i.i252.i ], [ %71, %if.end.i.i253.i ]
  %72 = inttoptr i32 %retval.0.i.i254.i to ptr
  %73 = getelementptr inbounds %struct.page, ptr %72, i32 0, i32 1
  %74 = ptrtoint ptr %73 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load volatile i32, ptr %73, align 4
  %and.i.i.i.i255.i = and i32 %75, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i255.i)
  %tobool.not.i.i.i256.i = icmp eq i32 %and.i.i.i.i255.i, 0
  br i1 %tobool.not.i.i.i256.i, label %folio_flags.exit.i.i262.i, label %if.then.i.i.i258.i, !prof !322

if.then.i.i.i258.i:                               ; preds = %_compound_head.exit.i257.i
  call void @__sanitizer_cov_trace_pc() #16
  %76 = inttoptr i32 %retval.0.i.i254.i to ptr
  call void @dump_page(ptr noundef %76, ptr noundef nonnull @.str.82) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

folio_flags.exit.i.i262.i:                        ; preds = %_compound_head.exit.i257.i
  %call.i.i.i.i259.i = call zeroext i1 @__kasan_check_write(ptr noundef %72, i32 noundef 4) #14
  %77 = ptrtoint ptr %72 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load volatile i32, ptr %72, align 4
  %and.i.i4.i.i260.i = and i32 %78, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i260.i)
  %tobool.not.i.i.i.i261.i = icmp eq i32 %and.i.i4.i.i260.i, 0
  br i1 %tobool.not.i.i.i.i261.i, label %folio_trylock.exit.i.i, label %folio_flags.exit.i.i262.i.if.then.i265.i_crit_edge

folio_flags.exit.i.i262.i.if.then.i265.i_crit_edge: ; preds = %folio_flags.exit.i.i262.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i265.i

folio_trylock.exit.i.i:                           ; preds = %folio_flags.exit.i.i262.i
  call void @llvm.prefetch.p0(ptr %72, i32 1, i32 3, i32 1) #14
  %79 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %72, ptr %72, i32 1, ptr elementtype(i32) %72) #14, !srcloc !383
  %asmresult.i.i.i.i.i.i.i263.i = extractvalue { i32, i32, i32 } %79, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !384
  %and1.i.i.i.i264.i = and i32 %asmresult.i.i.i.i.i.i.i263.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i264.i)
  %phi.cmp.i.i.i.i = icmp eq i32 %and1.i.i.i.i264.i, 0
  br i1 %phi.cmp.i.i.i.i, label %folio_trylock.exit.i.i.if.end77.i_crit_edge, label %folio_trylock.exit.i.i.if.then.i265.i_crit_edge

folio_trylock.exit.i.i.if.then.i265.i_crit_edge:  ; preds = %folio_trylock.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i265.i

folio_trylock.exit.i.i.if.end77.i_crit_edge:      ; preds = %folio_trylock.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end77.i

if.then.i265.i:                                   ; preds = %folio_trylock.exit.i.i.if.then.i265.i_crit_edge, %folio_flags.exit.i.i262.i.if.then.i265.i_crit_edge
  call void @__folio_lock(ptr noundef %72) #14
  br label %if.end77.i

if.end77.i:                                       ; preds = %if.then.i265.i, %folio_trylock.exit.i.i.if.end77.i_crit_edge, %trylock_page.exit.i.if.end77.i_crit_edge
  %ret.3.i = phi i32 [ %ret.2332.i, %trylock_page.exit.i.if.end77.i_crit_edge ], [ %call64.i, %folio_trylock.exit.i.i.if.end77.i_crit_edge ], [ %call64.i, %if.then.i265.i ]
  %mapping78.i = getelementptr inbounds %struct.page, ptr %54, i32 0, i32 1, i32 0, i32 1
  %80 = ptrtoint ptr %mapping78.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %mapping78.i, align 4
  %cmp79.not.i = icmp eq ptr %81, %mapping
  br i1 %cmp79.not.i, label %if.end88.i, label %if.then87.i, !prof !322

if.then87.i:                                      ; preds = %if.end77.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @unlock_page(ptr noundef %54) #14
  br label %for.inc.i

if.end88.i:                                       ; preds = %if.end77.i
  %82 = ptrtoint ptr %sync_mode to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %sync_mode, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %83)
  %cmp90.not.i = icmp eq i32 %83, 0
  br i1 %cmp90.not.i, label %if.end88.i.if.end117.i_crit_edge, label %if.then92.i

if.end88.i.if.end117.i_crit_edge:                 ; preds = %if.end88.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end117.i

if.then92.i:                                      ; preds = %if.end88.i
  %84 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load volatile i32, ptr %57, align 4
  %and.i.i.i = and i32 %85, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !322

if.then.i.i.i:                                    ; preds = %if.then92.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i.i = add i32 %85, -1
  br label %_compound_head.exit.i.i

if.end.i.i.i:                                     ; preds = %if.then92.i
  call void @__sanitizer_cov_trace_pc() #16
  %86 = ptrtoint ptr %54 to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %86, %if.end.i.i.i ]
  %87 = inttoptr i32 %retval.0.i.i.i to ptr
  %88 = ptrtoint ptr %87 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load volatile i32, ptr %87, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %89)
  %cmp.i.not.i.i = icmp eq i32 %89, -1
  %90 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load volatile i32, ptr %57, align 4
  %and.i16.i.i = and i32 %91, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i.i)
  %tobool.not.i17.i.i = icmp eq i32 %and.i16.i.i, 0
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %do.end10.i.i, !prof !319

if.then.i.i:                                      ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i17.i.i, label %if.end.i20.i.i, label %if.then.i19.i.i, !prof !322

if.then.i19.i.i:                                  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i18.i.i = add i32 %91, -1
  br label %_compound_head.exit22.i.i

if.end.i20.i.i:                                   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %92 = ptrtoint ptr %54 to i32
  br label %_compound_head.exit22.i.i

_compound_head.exit22.i.i:                        ; preds = %if.end.i20.i.i, %if.then.i19.i.i
  %retval.0.i21.i.i = phi i32 [ %sub.i18.i.i, %if.then.i19.i.i ], [ %92, %if.end.i20.i.i ]
  %93 = inttoptr i32 %retval.0.i21.i.i to ptr
  call void @dump_page(ptr noundef %93, ptr noundef nonnull @.str.86) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 461, 0\0A.popsection", ""() #14, !srcloc !392
  unreachable

do.end10.i.i:                                     ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i17.i.i, label %if.end.i27.i.i, label %if.then.i26.i.i, !prof !322

if.then.i26.i.i:                                  ; preds = %do.end10.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i25.i.i = add i32 %91, -1
  br label %PageWriteback.exit.i

if.end.i27.i.i:                                   ; preds = %do.end10.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %94 = ptrtoint ptr %54 to i32
  br label %PageWriteback.exit.i

PageWriteback.exit.i:                             ; preds = %if.end.i27.i.i, %if.then.i26.i.i
  %retval.0.i28.i.i = phi i32 [ %sub.i25.i.i, %if.then.i26.i.i ], [ %94, %if.end.i27.i.i ]
  %95 = inttoptr i32 %retval.0.i28.i.i to ptr
  %96 = ptrtoint ptr %95 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load volatile i32, ptr %95, align 4
  %98 = and i32 %97, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %98)
  %tobool94.not.i = icmp eq i32 %98, 0
  br i1 %tobool94.not.i, label %PageWriteback.exit.i.if.end116.i_crit_edge, label %if.then95.i

PageWriteback.exit.i.if.end116.i_crit_edge:       ; preds = %PageWriteback.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end116.i

if.then95.i:                                      ; preds = %PageWriteback.exit.i
  %call96.i = call fastcc i32 @flush_write_bio(ptr noundef nonnull %epd) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call96.i)
  %cmp98.i = icmp slt i32 %call96.i, 0
  br i1 %cmp98.i, label %do.body107.i, label %if.then95.i.if.end116.i_crit_edge, !prof !319

if.then95.i.if.end116.i_crit_edge:                ; preds = %if.then95.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end116.i

do.body107.i:                                     ; preds = %if.then95.i
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5026, 0\0A.popsection", ""() #14, !srcloc !393
  unreachable

if.end116.i:                                      ; preds = %if.then95.i.if.end116.i_crit_edge, %PageWriteback.exit.i.if.end116.i_crit_edge
  %ret.4.i = phi i32 [ %call96.i, %if.then95.i.if.end116.i_crit_edge ], [ %ret.3.i, %PageWriteback.exit.i.if.end116.i_crit_edge ]
  call void @wait_on_page_writeback(ptr noundef %54) #14
  br label %if.end117.i

if.end117.i:                                      ; preds = %if.end116.i, %if.end88.i.if.end117.i_crit_edge
  %ret.5.i = phi i32 [ %ret.4.i, %if.end116.i ], [ %ret.3.i, %if.end88.i.if.end117.i_crit_edge ]
  %99 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load volatile i32, ptr %57, align 4
  %and.i.i218.i = and i32 %100, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i218.i)
  %tobool.not.i.i219.i = icmp eq i32 %and.i.i218.i, 0
  br i1 %tobool.not.i.i219.i, label %if.end.i.i222.i, label %if.then.i.i221.i, !prof !322

if.then.i.i221.i:                                 ; preds = %if.end117.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i220.i = add i32 %100, -1
  br label %_compound_head.exit.i227.i

if.end.i.i222.i:                                  ; preds = %if.end117.i
  call void @__sanitizer_cov_trace_pc() #16
  %101 = ptrtoint ptr %54 to i32
  br label %_compound_head.exit.i227.i

_compound_head.exit.i227.i:                       ; preds = %if.end.i.i222.i, %if.then.i.i221.i
  %retval.0.i.i223.i = phi i32 [ %sub.i.i220.i, %if.then.i.i221.i ], [ %101, %if.end.i.i222.i ]
  %102 = inttoptr i32 %retval.0.i.i223.i to ptr
  %103 = ptrtoint ptr %102 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load volatile i32, ptr %102, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %104)
  %cmp.i.not.i224.i = icmp eq i32 %104, -1
  %105 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load volatile i32, ptr %57, align 4
  %and.i16.i225.i = and i32 %106, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i225.i)
  %tobool.not.i17.i226.i = icmp eq i32 %and.i16.i225.i, 0
  br i1 %cmp.i.not.i224.i, label %if.then.i228.i, label %do.end10.i234.i, !prof !319

if.then.i228.i:                                   ; preds = %_compound_head.exit.i227.i
  br i1 %tobool.not.i17.i226.i, label %if.end.i20.i231.i, label %if.then.i19.i230.i, !prof !322

if.then.i19.i230.i:                               ; preds = %if.then.i228.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i18.i229.i = add i32 %106, -1
  br label %_compound_head.exit22.i233.i

if.end.i20.i231.i:                                ; preds = %if.then.i228.i
  call void @__sanitizer_cov_trace_pc() #16
  %107 = ptrtoint ptr %54 to i32
  br label %_compound_head.exit22.i233.i

_compound_head.exit22.i233.i:                     ; preds = %if.end.i20.i231.i, %if.then.i19.i230.i
  %retval.0.i21.i232.i = phi i32 [ %sub.i18.i229.i, %if.then.i19.i230.i ], [ %107, %if.end.i20.i231.i ]
  %108 = inttoptr i32 %retval.0.i21.i232.i to ptr
  call void @dump_page(ptr noundef %108, ptr noundef nonnull @.str.86) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 461, 0\0A.popsection", ""() #14, !srcloc !392
  unreachable

do.end10.i234.i:                                  ; preds = %_compound_head.exit.i227.i
  br i1 %tobool.not.i17.i226.i, label %if.end.i27.i237.i, label %if.then.i26.i236.i, !prof !322

if.then.i26.i236.i:                               ; preds = %do.end10.i234.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i25.i235.i = add i32 %106, -1
  br label %PageWriteback.exit241.i

if.end.i27.i237.i:                                ; preds = %do.end10.i234.i
  call void @__sanitizer_cov_trace_pc() #16
  %109 = ptrtoint ptr %54 to i32
  br label %PageWriteback.exit241.i

PageWriteback.exit241.i:                          ; preds = %if.end.i27.i237.i, %if.then.i26.i236.i
  %retval.0.i28.i238.i = phi i32 [ %sub.i25.i235.i, %if.then.i26.i236.i ], [ %109, %if.end.i27.i237.i ]
  %110 = inttoptr i32 %retval.0.i28.i238.i to ptr
  %111 = ptrtoint ptr %110 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load volatile i32, ptr %110, align 4
  %113 = and i32 %112, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %113)
  %tobool119.not.i = icmp eq i32 %113, 0
  br i1 %tobool119.not.i, label %lor.lhs.false120.i, label %PageWriteback.exit241.i.if.then122.i_crit_edge

PageWriteback.exit241.i.if.then122.i_crit_edge:   ; preds = %PageWriteback.exit241.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then122.i

lor.lhs.false120.i:                               ; preds = %PageWriteback.exit241.i
  %call121.i = call zeroext i1 @clear_page_dirty_for_io(ptr noundef %54) #14
  br i1 %call121.i, label %if.end123.i, label %lor.lhs.false120.i.if.then122.i_crit_edge

lor.lhs.false120.i.if.then122.i_crit_edge:        ; preds = %lor.lhs.false120.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then122.i

if.then122.i:                                     ; preds = %lor.lhs.false120.i.if.then122.i_crit_edge, %PageWriteback.exit241.i.if.then122.i_crit_edge
  call void @unlock_page(ptr noundef %54) #14
  br label %for.inc.i

if.end123.i:                                      ; preds = %lor.lhs.false120.i
  %call124.i = call fastcc i32 @__extent_writepage(ptr noundef %54, ptr noundef %wbc, ptr noundef nonnull %epd) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call124.i)
  %cmp125.i = icmp slt i32 %call124.i, 0
  br i1 %cmp125.i, label %if.end123.i.for.end.i_crit_edge, label %if.end128.i

if.end123.i.for.end.i_crit_edge:                  ; preds = %if.end123.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

if.end128.i:                                      ; preds = %if.end123.i
  call void @__sanitizer_cov_trace_pc() #16
  %114 = ptrtoint ptr %wbc to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %wbc, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %115)
  %cmp130.i = icmp slt i32 %115, 1
  %conv131.i = zext i1 %cmp130.i to i32
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end128.i, %if.then122.i, %if.then87.i
  %ret.6.ph.i = phi i32 [ %call124.i, %if.end128.i ], [ %ret.5.i, %if.then122.i ], [ %ret.3.i, %if.then87.i ]
  %nr_to_write_done.3.ph.i = phi i32 [ %conv131.i, %if.end128.i ], [ %nr_to_write_done.2333.i, %if.then122.i ], [ %nr_to_write_done.2333.i, %if.then87.i ]
  %inc.i = add nuw i32 %i.0335.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %call56.i144
  br i1 %exitcond.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.end123.i.for.end.i_crit_edge
  %nr_to_write_done.2.lcssa.i = phi i32 [ %nr_to_write_done.2333.i, %if.end123.i.for.end.i_crit_edge ], [ %nr_to_write_done.3.ph.i, %for.inc.i.for.end.i_crit_edge ]
  %ret.7.i = phi i32 [ %call124.i, %if.end123.i.for.end.i_crit_edge ], [ %ret.6.ph.i, %for.inc.i.for.end.i_crit_edge ]
  %tobool50.not.i = phi i1 [ false, %if.end123.i.for.end.i_crit_edge ], [ true, %for.inc.i.for.end.i_crit_edge ]
  %done.4.i = phi i32 [ 1, %if.end123.i.for.end.i_crit_edge ], [ 0, %for.inc.i.for.end.i_crit_edge ]
  %116 = ptrtoint ptr %pvec.i to i32
  call void @__asan_load1_noabort(i32 %116)
  %117 = load i8, ptr %pvec.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %117)
  %tobool.not.i.i = icmp eq i8 %117, 0
  br i1 %tobool.not.i.i, label %for.end.i.pagevec_release.exit.i_crit_edge, label %if.then.i266.i

for.end.i.pagevec_release.exit.i_crit_edge:       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %pagevec_release.exit.i

if.then.i266.i:                                   ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__pagevec_release(ptr noundef nonnull %pvec.i) #14
  br label %pagevec_release.exit.i

pagevec_release.exit.i:                           ; preds = %if.then.i266.i, %for.end.i.pagevec_release.exit.i_crit_edge
  call void @__might_resched(ptr noundef nonnull @.str.2, i32 noundef 5051, i32 noundef 0) #14
  %call.i.i = call i32 @__cond_resched() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_to_write_done.2.lcssa.i)
  %tobool52.not.i = icmp eq i32 %nr_to_write_done.2.lcssa.i, 0
  %or.cond216.i = select i1 %tobool50.not.i, i1 %tobool52.not.i, i1 false
  br i1 %or.cond216.i, label %land.lhs.true53.i, label %pagevec_release.exit.i.while.end.i.loopexit_crit_edge

pagevec_release.exit.i.while.end.i.loopexit_crit_edge: ; preds = %pagevec_release.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.i.loopexit

while.end.i.loopexit:                             ; preds = %pagevec_release.exit.i.while.end.i.loopexit_crit_edge, %land.rhs.i.while.end.i.loopexit_crit_edge, %land.lhs.true53.i.while.end.i.loopexit_crit_edge
  %nr_to_write_done.1.lcssa.i.ph = phi i32 [ 0, %land.lhs.true53.i.while.end.i.loopexit_crit_edge ], [ 0, %land.rhs.i.while.end.i.loopexit_crit_edge ], [ %nr_to_write_done.2.lcssa.i, %pagevec_release.exit.i.while.end.i.loopexit_crit_edge ]
  %done_index.2.i.le = add i32 %56, 1
  br label %while.end.i

while.end.i:                                      ; preds = %while.end.i.loopexit, %land.rhs.i.preheader.while.end.i_crit_edge, %land.lhs.true53.i.preheader.while.end.i_crit_edge, %if.end49.i.while.end.i_crit_edge
  %ret.1.lcssa.i = phi i32 [ 0, %if.end49.i.while.end.i_crit_edge ], [ 0, %land.lhs.true53.i.preheader.while.end.i_crit_edge ], [ 0, %land.rhs.i.preheader.while.end.i_crit_edge ], [ %ret.7.i, %while.end.i.loopexit ]
  %done.1.lcssa.i = phi i32 [ 0, %if.end49.i.while.end.i_crit_edge ], [ 0, %land.lhs.true53.i.preheader.while.end.i_crit_edge ], [ 0, %land.rhs.i.preheader.while.end.i_crit_edge ], [ %done.4.i, %while.end.i.loopexit ]
  %nr_to_write_done.1.lcssa.i = phi i32 [ %nr_to_write_done.0.i, %if.end49.i.while.end.i_crit_edge ], [ 0, %land.lhs.true53.i.preheader.while.end.i_crit_edge ], [ 0, %land.rhs.i.preheader.while.end.i_crit_edge ], [ %nr_to_write_done.1.lcssa.i.ph, %while.end.i.loopexit ]
  %done_index.0.lcssa.i = phi i32 [ %48, %if.end49.i.while.end.i_crit_edge ], [ %48, %land.lhs.true53.i.preheader.while.end.i_crit_edge ], [ %48, %land.rhs.i.preheader.while.end.i_crit_edge ], [ %done_index.2.i.le, %while.end.i.loopexit ]
  %118 = or i32 %done.1.lcssa.i, %scanned.1.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %118)
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %if.then136.i, label %while.end.i.if.end141.i_crit_edge

while.end.i.if.end141.i_crit_edge:                ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end141.i

if.then136.i:                                     ; preds = %while.end.i
  %120 = ptrtoint ptr %index.i to i32
  call void @__asan_store4_noabort(i32 %120)
  store i32 0, ptr %index.i, align 4
  %call137.i = call fastcc i32 @flush_write_bio(ptr noundef nonnull %epd) #14
  %tobool138.not.i = icmp eq i32 %call137.i, 0
  br i1 %tobool138.not.i, label %if.then136.i.retry.i_crit_edge, label %if.then136.i.if.end141.i_crit_edge

if.then136.i.if.end141.i_crit_edge:               ; preds = %if.then136.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end141.i

if.then136.i.retry.i_crit_edge:                   ; preds = %if.then136.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %retry.i

if.end141.i:                                      ; preds = %if.then136.i.if.end141.i_crit_edge, %while.end.i.if.end141.i_crit_edge
  %ret.8.i = phi i32 [ %ret.1.lcssa.i, %while.end.i.if.end141.i_crit_edge ], [ %call137.i, %if.then136.i.if.end141.i_crit_edge ]
  %121 = ptrtoint ptr %range_cyclic.i to i32
  call void @__asan_load2_noabort(i32 %121)
  %bf.load143.i = load i16, ptr %range_cyclic.i, align 4
  %122 = and i16 %bf.load143.i, 2048
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %122)
  %tobool147.not.i = icmp eq i16 %122, 0
  br i1 %tobool147.not.i, label %lor.lhs.false148.i, label %if.end141.i.if.then154.i_crit_edge

if.end141.i.if.then154.i_crit_edge:               ; preds = %if.end141.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then154.i

lor.lhs.false148.i:                               ; preds = %if.end141.i
  %123 = ptrtoint ptr %wbc to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %wbc, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %124)
  %cmp150.i = icmp slt i32 %124, 1
  %brmerge217.i = or i1 %tobool15.not273.i, %cmp150.i
  br i1 %brmerge217.i, label %lor.lhs.false148.i.if.end156.i_crit_edge, label %lor.lhs.false148.i.if.then154.i_crit_edge

lor.lhs.false148.i.if.then154.i_crit_edge:        ; preds = %lor.lhs.false148.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then154.i

lor.lhs.false148.i.if.end156.i_crit_edge:         ; preds = %lor.lhs.false148.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end156.i

if.then154.i:                                     ; preds = %lor.lhs.false148.i.if.then154.i_crit_edge, %if.end141.i.if.then154.i_crit_edge
  %writeback_index155.i = getelementptr inbounds %struct.address_space, ptr %mapping, i32 0, i32 8
  %125 = ptrtoint ptr %writeback_index155.i to i32
  call void @__asan_store4_noabort(i32 %125)
  store i32 %done_index.0.lcssa.i, ptr %writeback_index155.i, align 4
  br label %if.end156.i

if.end156.i:                                      ; preds = %if.then154.i, %lor.lhs.false148.i.if.end156.i_crit_edge
  call void @btrfs_add_delayed_iput(ptr noundef %16) #14
  br label %extent_write_cache_pages.exit

extent_write_cache_pages.exit:                    ; preds = %if.end156.i, %btrfs_zoned_data_reloc_lock.exit.extent_write_cache_pages.exit_crit_edge
  %retval.0.i = phi i32 [ %ret.8.i, %if.end156.i ], [ 0, %btrfs_zoned_data_reloc_lock.exit.extent_write_cache_pages.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %index.i) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %pvec.i) #14
  %126 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %add.ptr.i, align 8
  %root_key.i.i19 = getelementptr inbounds %struct.btrfs_root, ptr %127, i32 0, i32 7
  %128 = ptrtoint ptr %root_key.i.i19 to i32
  call void @__asan_loadN_noabort(i32 %128, i32 8)
  %129 = load i64, ptr %root_key.i.i19, align 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 -9, i64 %129)
  %cmp.i.i20 = icmp eq i64 %129, -9
  br i1 %cmp.i.i20, label %land.lhs.true.i22, label %extent_write_cache_pages.exit.btrfs_zoned_data_reloc_unlock.exit_crit_edge

extent_write_cache_pages.exit.btrfs_zoned_data_reloc_unlock.exit_crit_edge: ; preds = %extent_write_cache_pages.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_zoned_data_reloc_unlock.exit

land.lhs.true.i22:                                ; preds = %extent_write_cache_pages.exit
  %fs_info.i21 = getelementptr inbounds %struct.btrfs_root, ptr %127, i32 0, i32 8
  %130 = ptrtoint ptr %fs_info.i21 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %fs_info.i21, align 8
  %132 = getelementptr inbounds %struct.btrfs_fs_info, ptr %131, i32 0, i32 176
  %133 = ptrtoint ptr %132 to i32
  call void @__asan_load8_noabort(i32 %133)
  %134 = load i64, ptr %132, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %134)
  %cmp.i5.not.i = icmp eq i64 %134, 0
  br i1 %cmp.i5.not.i, label %land.lhs.true.i22.btrfs_zoned_data_reloc_unlock.exit_crit_edge, label %if.then.i24

land.lhs.true.i22.btrfs_zoned_data_reloc_unlock.exit_crit_edge: ; preds = %land.lhs.true.i22
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_zoned_data_reloc_unlock.exit

if.then.i24:                                      ; preds = %land.lhs.true.i22
  call void @__sanitizer_cov_trace_pc() #16
  call void @btrfs_inode_unlock(ptr noundef %1, i32 noundef 0) #14
  br label %btrfs_zoned_data_reloc_unlock.exit

btrfs_zoned_data_reloc_unlock.exit:               ; preds = %if.then.i24, %land.lhs.true.i22.btrfs_zoned_data_reloc_unlock.exit_crit_edge, %extent_write_cache_pages.exit.btrfs_zoned_data_reloc_unlock.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %retval.0.i)
  %cmp3 = icmp slt i32 %retval.0.i, 1
  br i1 %cmp3, label %cond.end, label %cond.false, !prof !322

cond.false:                                       ; preds = %btrfs_zoned_data_reloc_unlock.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.28, i32 noundef 5186) #18
  unreachable

cond.end:                                         ; preds = %btrfs_zoned_data_reloc_unlock.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %cmp6 = icmp slt i32 %retval.0.i, 0
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %135 = ptrtoint ptr %epd to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %epd, align 4
  %tobool.not.i26 = icmp eq ptr %136, null
  br i1 %tobool.not.i26, label %if.then.cleanup_crit_edge, label %if.then.i28

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then.i28:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %call.i27 = call zeroext i8 @errno_to_blk_status(i32 noundef %retval.0.i) #14
  %bi_status.i = getelementptr inbounds %struct.bio, ptr %136, i32 0, i32 6
  %137 = ptrtoint ptr %bi_status.i to i32
  call void @__asan_store1_noabort(i32 %137)
  store i8 %call.i27, ptr %bi_status.i, align 2
  call void @bio_endio(ptr noundef nonnull %136) #14
  br label %cleanup

if.end:                                           ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  %call8 = call fastcc i32 @flush_write_bio(ptr noundef nonnull %epd)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then.i28, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call8, %if.end ], [ %retval.0.i, %if.then.cleanup_crit_edge ], [ %retval.0.i, %if.then.i28 ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %epd) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @extent_readahead(ptr nocapture noundef %rac) local_unnamed_addr #0 align 64 {
entry:
  %xas.i = alloca %struct.xa_state, align 4
  %bio_ctrl = alloca %struct.btrfs_bio_ctrl, align 4
  %pagepool = alloca [16 x ptr], align 4
  %em_cached = alloca ptr, align 4
  %prev_em_start = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %bio_ctrl) #14
  %0 = call ptr @memset(ptr %bio_ctrl, i32 0, i32 16)
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %pagepool) #14
  %1 = call ptr @memset(ptr %pagepool, i32 255, i32 64)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %em_cached) #14
  %2 = ptrtoint ptr %em_cached to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %em_cached, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %prev_em_start) #14
  %3 = ptrtoint ptr %prev_em_start to i32
  call void @__asan_store8_noabort(i32 %3)
  store i64 -1, ptr %prev_em_start, align 8
  %4 = getelementptr inbounds %struct.xa_state, ptr %xas.i, i32 0, i32 1
  %5 = getelementptr inbounds %struct.xa_state, ptr %xas.i, i32 0, i32 4
  %6 = getelementptr inbounds %struct.xa_state, ptr %xas.i, i32 0, i32 6
  %7 = getelementptr inbounds %struct.xa_state, ptr %xas.i, i32 0, i32 7
  %8 = getelementptr inbounds %struct.xa_state, ptr %xas.i, i32 0, i32 8
  %mapping.i = getelementptr inbounds %struct.readahead_control, ptr %rac, i32 0, i32 1
  %9 = getelementptr inbounds %struct.xa_state, ptr %xas.i, i32 0, i32 2
  %_batch_count.i = getelementptr inbounds %struct.readahead_control, ptr %rac, i32 0, i32 5
  %_nr_pages.i = getelementptr inbounds %struct.readahead_control, ptr %rac, i32 0, i32 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %xas.i) #14
  %10 = ptrtoint ptr %mapping.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mapping.i, align 4
  %i_pages.i43 = getelementptr inbounds %struct.address_space, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %xas.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %i_pages.i43, ptr %xas.i, align 4
  %13 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %9, align 4
  %14 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %7, align 4
  %15 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %8, align 4
  %16 = ptrtoint ptr %_batch_count.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %_batch_count.i, align 4
  %18 = ptrtoint ptr %_nr_pages.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %_nr_pages.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %19, i32 %17)
  %cmp.i44 = icmp ult i32 %19, %17
  br i1 %cmp.i44, label %entry.do.body2.i_crit_edge, label %do.end7.i.lr.ph, !prof !319

entry.do.body2.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2.i

do.end7.i.lr.ph:                                  ; preds = %entry
  %_index.i = getelementptr inbounds %struct.readahead_control, ptr %rac, i32 0, i32 3
  br label %do.end7.i

do.body2.i:                                       ; preds = %while.body.do.body2.i_crit_edge, %entry.do.body2.i_crit_edge
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/pagemap.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1142, 0\0A.popsection", ""() #14, !srcloc !394
  unreachable

do.end7.i:                                        ; preds = %while.body.do.end7.i_crit_edge, %do.end7.i.lr.ph
  %20 = phi i32 [ %19, %do.end7.i.lr.ph ], [ %100, %while.body.do.end7.i_crit_edge ]
  %21 = phi i32 [ %17, %do.end7.i.lr.ph ], [ %98, %while.body.do.end7.i_crit_edge ]
  %sub.i = sub i32 %20, %21
  %22 = ptrtoint ptr %_nr_pages.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %sub.i, ptr %_nr_pages.i, align 4
  %23 = ptrtoint ptr %_index.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %_index.i, align 4
  %add.i = add i32 %24, %21
  store i32 %add.i, ptr %_index.i, align 4
  %25 = ptrtoint ptr %_batch_count.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 0, ptr %_batch_count.i, align 4
  %26 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %add.i, ptr %4, align 4
  %27 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr inttoptr (i32 3 to ptr), ptr %6, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i.i.i.i = and i32 %28, -16384
  %29 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %29, i32 0, i32 1
  %30 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %31, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #14, !srcloc !360
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #14
  %call.i.i = call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i.i, label %do.end7.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

do.end7.i.rcu_read_lock.exit.i_crit_edge:         ; preds = %do.end7.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %do.end7.i
  %call1.i.i = call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.66, i32 noundef 696, ptr noundef nonnull @.str.67) #14
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %do.end7.i.rcu_read_lock.exit.i_crit_edge
  %32 = ptrtoint ptr %_index.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %_index.i, align 4
  %34 = ptrtoint ptr %_nr_pages.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %_nr_pages.i, align 4
  %add15.i = add i32 %33, -1
  %sub16.i = add i32 %add15.i, %35
  %call.i = call ptr @xas_find(ptr noundef nonnull %xas.i, i32 noundef %sub16.i) #14
  %tobool17.not37.i = icmp eq ptr %call.i, null
  br i1 %tobool17.not37.i, label %rcu_read_lock.exit.i.for.end.i_crit_edge, label %rcu_read_lock.exit.i.for.body.i_crit_edge

rcu_read_lock.exit.i.for.body.i_crit_edge:        ; preds = %rcu_read_lock.exit.i
  br label %for.body.i

rcu_read_lock.exit.i.for.end.i_crit_edge:         ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.body.i:                                       ; preds = %xas_next_entry.exit.i.for.body.i_crit_edge, %rcu_read_lock.exit.i.for.body.i_crit_edge
  %page.039.i = phi ptr [ %retval.0.i12.i, %xas_next_entry.exit.i.for.body.i_crit_edge ], [ %call.i, %rcu_read_lock.exit.i.for.body.i_crit_edge ]
  %i.038.i = phi i32 [ %i.1.i, %xas_next_entry.exit.i.for.body.i_crit_edge ], [ 0, %rcu_read_lock.exit.i.for.body.i_crit_edge ]
  %magicptr.i.i = ptrtoint ptr %page.039.i to i32
  %36 = zext i32 %magicptr.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %36, ptr @__sancov_gen_cov_switch_values.136)
  switch i32 %magicptr.i.i, label %do.body21.i [
    i32 1030, label %for.body.i.for.inc.i_crit_edge
    i32 1026, label %if.end4.i.i
  ]

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

if.end4.i.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %37 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr inttoptr (i32 3 to ptr), ptr %6, align 4
  br label %for.inc.i

do.body21.i:                                      ; preds = %for.body.i
  %38 = getelementptr inbounds %struct.page, ptr %page.039.i, i32 0, i32 1
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %38, align 4
  %and.i.i.i = and i32 %40, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %do.body21.i._compound_head.exit.i.i_crit_edge, label %if.then.i.i.i, !prof !322

do.body21.i._compound_head.exit.i.i_crit_edge:    ; preds = %do.body21.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %_compound_head.exit.i.i

if.then.i.i.i:                                    ; preds = %do.body21.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i.i = add i32 %40, -1
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.then.i.i.i, %do.body21.i._compound_head.exit.i.i_crit_edge
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %magicptr.i.i, %do.body21.i._compound_head.exit.i.i_crit_edge ]
  %41 = inttoptr i32 %retval.0.i.i.i to ptr
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %41, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %43)
  %cmp.i.not.i.i = icmp eq i32 %43, -1
  %44 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %38, align 4
  %and.i16.i.i = and i32 %45, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i.i)
  %tobool.not.i17.i.i = icmp eq i32 %and.i16.i.i, 0
  br i1 %cmp.i.not.i.i, label %if.then.i1.i, label %do.end10.i.i, !prof !319

if.then.i1.i:                                     ; preds = %_compound_head.exit.i.i
  %magicptr.i.i.le = ptrtoint ptr %page.039.i to i32
  br i1 %tobool.not.i17.i.i, label %if.then.i1.i._compound_head.exit22.i.i_crit_edge, label %if.then.i19.i.i, !prof !322

if.then.i1.i._compound_head.exit22.i.i_crit_edge: ; preds = %if.then.i1.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %_compound_head.exit22.i.i

if.then.i19.i.i:                                  ; preds = %if.then.i1.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i18.i.i = add i32 %45, -1
  br label %_compound_head.exit22.i.i

_compound_head.exit22.i.i:                        ; preds = %if.then.i19.i.i, %if.then.i1.i._compound_head.exit22.i.i_crit_edge
  %retval.0.i21.i.i = phi i32 [ %sub.i18.i.i, %if.then.i19.i.i ], [ %magicptr.i.i.le, %if.then.i1.i._compound_head.exit22.i.i_crit_edge ]
  %46 = inttoptr i32 %retval.0.i21.i.i to ptr
  call void @dump_page(ptr noundef %46, ptr noundef nonnull @.str.86) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 414, 0\0A.popsection", ""() #14, !srcloc !367
  unreachable

do.end10.i.i:                                     ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i17.i.i, label %do.end10.i.i.PageLocked.exit.i_crit_edge, label %if.then.i26.i.i, !prof !322

do.end10.i.i.PageLocked.exit.i_crit_edge:         ; preds = %do.end10.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %PageLocked.exit.i

if.then.i26.i.i:                                  ; preds = %do.end10.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i25.i.i = add i32 %45, -1
  br label %PageLocked.exit.i

PageLocked.exit.i:                                ; preds = %if.then.i26.i.i, %do.end10.i.i.PageLocked.exit.i_crit_edge
  %retval.0.i28.i.i = phi i32 [ %sub.i25.i.i, %if.then.i26.i.i ], [ %magicptr.i.i, %do.end10.i.i.PageLocked.exit.i_crit_edge ]
  %47 = inttoptr i32 %retval.0.i28.i.i to ptr
  %48 = ptrtoint ptr %47 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %47, align 4
  %and1.i.i.i = and i32 %49, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool23.not.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool23.not.i, label %if.then32.i, label %do.body42.i, !prof !319

if.then32.i:                                      ; preds = %PageLocked.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @dump_page(ptr noundef nonnull %page.039.i, ptr noundef nonnull @.str.119) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/pagemap.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1152, 0\0A.popsection", ""() #14, !srcloc !395
  unreachable

do.body42.i:                                      ; preds = %PageLocked.exit.i
  %50 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %38, align 4
  %and.i.i = and i32 %51, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool44.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool44.not.i, label %do.end60.i, label %if.then51.i, !prof !322

if.then51.i:                                      ; preds = %do.body42.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @dump_page(ptr noundef nonnull %page.039.i, ptr noundef nonnull @.str.82) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/pagemap.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1153, 0\0A.popsection", ""() #14, !srcloc !396
  unreachable

do.end60.i:                                       ; preds = %do.body42.i
  %arrayidx.i = getelementptr ptr, ptr %pagepool, i32 %i.038.i
  %52 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %page.039.i, ptr %arrayidx.i, align 4
  %53 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %38, align 4
  %and.i.i2.i = and i32 %54, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i2.i)
  %tobool.not.i3.i = icmp eq i32 %and.i.i2.i, 0
  br i1 %tobool.not.i3.i, label %thp_nr_pages.exit.i, label %if.then.i4.i, !prof !322

if.then.i4.i:                                     ; preds = %do.end60.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @dump_page(ptr noundef nonnull %page.039.i, ptr noundef nonnull @.str.82) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/huge_mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 347, 0\0A.popsection", ""() #14, !srcloc !397
  unreachable

thp_nr_pages.exit.i:                              ; preds = %do.end60.i
  %inc.i = add i32 %i.038.i, 1
  %55 = ptrtoint ptr %_batch_count.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %_batch_count.i, align 4
  %add63.i = add i32 %56, 1
  store i32 %add63.i, ptr %_batch_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %inc.i)
  %cmp64.i = icmp eq i32 %inc.i, 16
  br i1 %cmp64.i, label %thp_nr_pages.exit.i.for.end.i_crit_edge, label %thp_nr_pages.exit.i.for.inc.i_crit_edge

thp_nr_pages.exit.i.for.inc.i_crit_edge:          ; preds = %thp_nr_pages.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

thp_nr_pages.exit.i.for.end.i_crit_edge:          ; preds = %thp_nr_pages.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.inc.i:                                        ; preds = %thp_nr_pages.exit.i.for.inc.i_crit_edge, %if.end4.i.i, %for.body.i.for.inc.i_crit_edge
  %i.1.i = phi i32 [ %inc.i, %thp_nr_pages.exit.i.for.inc.i_crit_edge ], [ %i.038.i, %if.end4.i.i ], [ %i.038.i, %for.body.i.for.inc.i_crit_edge ]
  %57 = ptrtoint ptr %_index.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %_index.i, align 4
  %59 = ptrtoint ptr %_nr_pages.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %_nr_pages.i, align 4
  %add69.i = add i32 %58, -1
  %sub70.i = add i32 %add69.i, %60
  %61 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %6, align 4
  %63 = ptrtoint ptr %62 to i32
  %and.i.i6.i = and i32 %63, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i6.i)
  %tobool.not.i.i7.i = icmp ne i32 %and.i.i6.i, 0
  %tobool1.not.i.i.i = icmp eq ptr %62, null
  %spec.select.i.i.i = or i1 %tobool1.not.i.i.i, %tobool.not.i.i7.i
  br i1 %spec.select.i.i.i, label %for.inc.i.cleanup.sink.split.i.i_crit_edge, label %lor.lhs.false.i.i, !prof !319

for.inc.i.cleanup.sink.split.i.i_crit_edge:       ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split.i.i

lor.lhs.false.i.i:                                ; preds = %for.inc.i
  %64 = ptrtoint ptr %62 to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %62, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %65)
  %tobool.not.i8.i = icmp eq i8 %65, 0
  br i1 %tobool.not.i8.i, label %lor.rhs.i.i, label %lor.lhs.false.i.i.cleanup.sink.split.i.i_crit_edge, !prof !322

lor.lhs.false.i.i.cleanup.sink.split.i.i_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split.i.i

lor.rhs.i.i:                                      ; preds = %lor.lhs.false.i.i
  %66 = ptrtoint ptr %5 to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %5, align 2
  %conv2.i.i = zext i8 %67 to i32
  %68 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %4, align 4
  %and.i10.i = and i32 %69, 63
  call void @__sanitizer_cov_trace_cmp4(i32 %and.i10.i, i32 %conv2.i.i)
  %cmp.not.i.i = icmp eq i32 %and.i10.i, %conv2.i.i
  br i1 %cmp.not.i.i, label %lor.rhs.i.i.do.body.i.i_crit_edge, label %lor.rhs.i.i.cleanup.sink.split.i.i_crit_edge, !prof !322

lor.rhs.i.i.cleanup.sink.split.i.i_crit_edge:     ; preds = %lor.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split.i.i

lor.rhs.i.i.do.body.i.i_crit_edge:                ; preds = %lor.rhs.i.i
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %if.end44.i.i.do.body.i.i_crit_edge, %lor.rhs.i.i.do.body.i.i_crit_edge
  %70 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %4, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %71, i32 %sub70.i)
  %cmp8.not.i.i = icmp ult i32 %71, %sub70.i
  br i1 %cmp8.not.i.i, label %if.end18.i.i, label %do.body.i.i.cleanup.sink.split.i.i_crit_edge, !prof !322

do.body.i.i.cleanup.sink.split.i.i_crit_edge:     ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split.i.i

if.end18.i.i:                                     ; preds = %do.body.i.i
  %72 = ptrtoint ptr %5 to i32
  call void @__asan_load1_noabort(i32 %72)
  %73 = load i8, ptr %5, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 63, i8 %73)
  %cmp21.i.i = icmp eq i8 %73, 63
  br i1 %cmp21.i.i, label %if.end18.i.i.cleanup.sink.split.i.i_crit_edge, label %if.end31.i.i, !prof !319

if.end18.i.i.cleanup.sink.split.i.i_crit_edge:    ; preds = %if.end18.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split.i.i

if.end31.i.i:                                     ; preds = %if.end18.i.i
  %conv20.i.i = zext i8 %73 to i32
  %74 = ptrtoint ptr %xas.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %xas.i, align 4
  %add.i.i = add nuw nsw i32 %conv20.i.i, 1
  %arrayidx.i.i.i = getelementptr %struct.xa_node, ptr %62, i32 0, i32 7, i32 %add.i.i
  %76 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile ptr, ptr %arrayidx.i.i.i, align 4
  %dep_map.i.i.i = getelementptr inbounds %struct.anon, ptr %75, i32 0, i32 1
  %call.i.i.i.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i.i.i, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool.not.i73.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool.not.i73.i.i, label %lor.lhs.false.i.i.i, label %if.end31.i.i.xa_entry.exit.i.i_crit_edge

if.end31.i.i.xa_entry.exit.i.i_crit_edge:         ; preds = %if.end31.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %xa_entry.exit.i.i

lor.lhs.false.i.i.i:                              ; preds = %if.end31.i.i
  %call4.i.i.i = call i32 @rcu_read_lock_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i.i)
  %tobool5.not.i.i.i = icmp eq i32 %call4.i.i.i, 0
  br i1 %tobool5.not.i.i.i, label %land.lhs.true.i.i.i, label %lor.lhs.false.i.i.i.xa_entry.exit.i.i_crit_edge

lor.lhs.false.i.i.i.xa_entry.exit.i.i_crit_edge:  ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %xa_entry.exit.i.i

land.lhs.true.i.i.i:                              ; preds = %lor.lhs.false.i.i.i
  %call6.i.i.i = call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i.i.i)
  %tobool7.not.i.i.i = icmp eq i32 %call6.i.i.i, 0
  br i1 %tobool7.not.i.i.i, label %land.lhs.true.i.i.i.xa_entry.exit.i.i_crit_edge, label %land.lhs.true8.i.i.i

land.lhs.true.i.i.i.xa_entry.exit.i.i_crit_edge:  ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %xa_entry.exit.i.i

land.lhs.true8.i.i.i:                             ; preds = %land.lhs.true.i.i.i
  %.b13.i.i.i = load i1, ptr @xa_entry.__warned, align 1
  br i1 %.b13.i.i.i, label %land.lhs.true8.i.i.i.xa_entry.exit.i.i_crit_edge, label %if.then.i.i11.i

land.lhs.true8.i.i.i.xa_entry.exit.i.i_crit_edge: ; preds = %land.lhs.true8.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %xa_entry.exit.i.i

if.then.i.i11.i:                                  ; preds = %land.lhs.true8.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @xa_entry.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.120, i32 noundef 1183, ptr noundef nonnull @.str.48) #14
  br label %xa_entry.exit.i.i

xa_entry.exit.i.i:                                ; preds = %if.then.i.i11.i, %land.lhs.true8.i.i.i.xa_entry.exit.i.i_crit_edge, %land.lhs.true.i.i.i.xa_entry.exit.i.i_crit_edge, %lor.lhs.false.i.i.i.xa_entry.exit.i.i_crit_edge, %if.end31.i.i.xa_entry.exit.i.i_crit_edge
  %78 = ptrtoint ptr %77 to i32
  %and.i74.i.i = and i32 %78, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %and.i74.i.i)
  %cmp.i.i.i = icmp eq i32 %and.i74.i.i, 2
  br i1 %cmp.i.i.i, label %xa_entry.exit.i.i.cleanup.sink.split.i.i_crit_edge, label %if.end44.i.i, !prof !319

xa_entry.exit.i.i.cleanup.sink.split.i.i_crit_edge: ; preds = %xa_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split.i.i

if.end44.i.i:                                     ; preds = %xa_entry.exit.i.i
  %79 = ptrtoint ptr %5 to i32
  call void @__asan_load1_noabort(i32 %79)
  %80 = load i8, ptr %5, align 2
  %inc.i.i = add i8 %80, 1
  store i8 %inc.i.i, ptr %5, align 2
  %81 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %4, align 4
  %inc47.i.i = add i32 %82, 1
  store i32 %inc47.i.i, ptr %4, align 4
  %tobool48.not.i.i = icmp eq ptr %77, null
  br i1 %tobool48.not.i.i, label %if.end44.i.i.do.body.i.i_crit_edge, label %if.end44.i.i.xas_next_entry.exit.i_crit_edge

if.end44.i.i.xas_next_entry.exit.i_crit_edge:     ; preds = %if.end44.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %xas_next_entry.exit.i

if.end44.i.i.do.body.i.i_crit_edge:               ; preds = %if.end44.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body.i.i

cleanup.sink.split.i.i:                           ; preds = %xa_entry.exit.i.i.cleanup.sink.split.i.i_crit_edge, %if.end18.i.i.cleanup.sink.split.i.i_crit_edge, %do.body.i.i.cleanup.sink.split.i.i_crit_edge, %lor.rhs.i.i.cleanup.sink.split.i.i_crit_edge, %lor.lhs.false.i.i.cleanup.sink.split.i.i_crit_edge, %for.inc.i.cleanup.sink.split.i.i_crit_edge
  %call43.i.i = call ptr @xas_find(ptr noundef nonnull %xas.i, i32 noundef %sub70.i) #14
  br label %xas_next_entry.exit.i

xas_next_entry.exit.i:                            ; preds = %cleanup.sink.split.i.i, %if.end44.i.i.xas_next_entry.exit.i_crit_edge
  %retval.0.i12.i = phi ptr [ %call43.i.i, %cleanup.sink.split.i.i ], [ %77, %if.end44.i.i.xas_next_entry.exit.i_crit_edge ]
  %tobool17.not.i = icmp eq ptr %retval.0.i12.i, null
  br i1 %tobool17.not.i, label %xas_next_entry.exit.i.for.end.i_crit_edge, label %xas_next_entry.exit.i.for.body.i_crit_edge

xas_next_entry.exit.i.for.body.i_crit_edge:       ; preds = %xas_next_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

xas_next_entry.exit.i.for.end.i_crit_edge:        ; preds = %xas_next_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.end.i:                                        ; preds = %xas_next_entry.exit.i.for.end.i_crit_edge, %thp_nr_pages.exit.i.for.end.i_crit_edge, %rcu_read_lock.exit.i.for.end.i_crit_edge
  %i.2.i = phi i32 [ 0, %rcu_read_lock.exit.i.for.end.i_crit_edge ], [ %i.1.i, %xas_next_entry.exit.i.for.end.i_crit_edge ], [ 16, %thp_nr_pages.exit.i.for.end.i_crit_edge ]
  %call.i13.i = call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i13.i, label %for.end.i.__readahead_batch.exit_crit_edge, label %land.lhs.true.i16.i

for.end.i.__readahead_batch.exit_crit_edge:       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__readahead_batch.exit

land.lhs.true.i16.i:                              ; preds = %for.end.i
  %call1.i14.i = call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i14.i)
  %tobool.not.i15.i = icmp eq i32 %call1.i14.i, 0
  br i1 %tobool.not.i15.i, label %land.lhs.true.i16.i.__readahead_batch.exit_crit_edge, label %land.lhs.true2.i18.i

land.lhs.true.i16.i.__readahead_batch.exit_crit_edge: ; preds = %land.lhs.true.i16.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__readahead_batch.exit

land.lhs.true2.i18.i:                             ; preds = %land.lhs.true.i16.i
  %.b4.i17.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i17.i, label %land.lhs.true2.i18.i.__readahead_batch.exit_crit_edge, label %if.then.i19.i

land.lhs.true2.i18.i.__readahead_batch.exit_crit_edge: ; preds = %land.lhs.true2.i18.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %__readahead_batch.exit

if.then.i19.i:                                    ; preds = %land.lhs.true2.i18.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.66, i32 noundef 724, ptr noundef nonnull @.str.68) #14
  br label %__readahead_batch.exit

__readahead_batch.exit:                           ; preds = %if.then.i19.i, %land.lhs.true2.i18.i.__readahead_batch.exit_crit_edge, %land.lhs.true.i16.i.__readahead_batch.exit_crit_edge, %for.end.i.__readahead_batch.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #14, !srcloc !398
  %83 = call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i.i.i20.i = and i32 %83, -16384
  %84 = inttoptr i32 %and.i.i.i.i.i20.i to ptr
  %preempt_count.i.i.i.i21.i = getelementptr inbounds %struct.thread_info, ptr %84, i32 0, i32 1
  %85 = ptrtoint ptr %preempt_count.i.i.i.i21.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load volatile i32, ptr %preempt_count.i.i.i.i21.i, align 4
  %sub.i.i.i.i = add i32 %86, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i21.i, align 4
  call void @rcu_read_unlock_strict() #14
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %xas.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.2.i)
  %tobool.not = icmp eq i32 %i.2.i, 0
  br i1 %tobool.not, label %while.end, label %while.body

while.body:                                       ; preds = %__readahead_batch.exit
  %87 = ptrtoint ptr %_index.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %_index.i, align 4
  %conv.i = zext i32 %88 to i64
  %mul.i = shl nuw nsw i64 %conv.i, 12
  %89 = ptrtoint ptr %_batch_count.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %_batch_count.i, align 4
  %mul.i23 = shl i32 %90, 12
  %conv = zext i32 %mul.i23 to i64
  %add = add nsw i64 %mul.i, -1
  %sub = add nsw i64 %add, %conv
  call fastcc void @contiguous_readpages(ptr noundef nonnull %pagepool, i32 noundef %i.2.i, i64 noundef %mul.i, i64 noundef %sub, ptr noundef nonnull %em_cached, ptr noundef nonnull %bio_ctrl, ptr noundef nonnull %prev_em_start)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %xas.i) #14
  %91 = ptrtoint ptr %mapping.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %mapping.i, align 4
  %i_pages.i = getelementptr inbounds %struct.address_space, ptr %92, i32 0, i32 1
  %93 = ptrtoint ptr %xas.i to i32
  call void @__asan_store4_noabort(i32 %93)
  store ptr %i_pages.i, ptr %xas.i, align 4
  %94 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 0, ptr %9, align 4
  %95 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %95)
  store ptr null, ptr %7, align 4
  %96 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %96)
  store ptr null, ptr %8, align 4
  %97 = ptrtoint ptr %_batch_count.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %_batch_count.i, align 4
  %99 = ptrtoint ptr %_nr_pages.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %_nr_pages.i, align 4
  %cmp.i = icmp ult i32 %100, %98
  br i1 %cmp.i, label %while.body.do.body2.i_crit_edge, label %while.body.do.end7.i_crit_edge, !prof !319

while.body.do.end7.i_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end7.i

while.body.do.body2.i_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body2.i

while.end:                                        ; preds = %__readahead_batch.exit
  %101 = ptrtoint ptr %em_cached to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %em_cached, align 4
  %tobool4.not = icmp eq ptr %102, null
  br i1 %tobool4.not, label %while.end.if.end_crit_edge, label %if.then

while.end.if.end_crit_edge:                       ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  call void @free_extent_map(ptr noundef nonnull %102) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %while.end.if.end_crit_edge
  %103 = ptrtoint ptr %bio_ctrl to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %bio_ctrl, align 4
  %tobool5.not = icmp eq ptr %104, null
  br i1 %tobool5.not, label %if.end.cleanup_crit_edge, label %if.then6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then6:                                         ; preds = %if.end
  %bio_flags = getelementptr inbounds %struct.btrfs_bio_ctrl, ptr %bio_ctrl, i32 0, i32 1
  %105 = ptrtoint ptr %bio_flags to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %bio_flags, align 4
  %bi_private.i = getelementptr inbounds %struct.bio, ptr %104, i32 0, i32 11
  %107 = ptrtoint ptr %bi_private.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %bi_private.i, align 4
  store ptr null, ptr %bi_private.i, align 4
  %bi_size.i = getelementptr inbounds %struct.bio, ptr %104, i32 0, i32 8, i32 1
  %109 = ptrtoint ptr %bi_size.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %bi_size.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %110)
  %tobool.not.i = icmp eq i32 %110, 0
  br i1 %tobool.not.i, label %cond.false.i, label %cond.end.i, !prof !319

cond.false.i:                                     ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.3, i32 noundef 176) #19
  unreachable

cond.end.i:                                       ; preds = %if.then6
  %private_data.i = getelementptr inbounds %struct.extent_io_tree, ptr %108, i32 0, i32 2
  %111 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %private_data.i, align 8
  %location.i.i.i = getelementptr i8, ptr %112, i32 -860
  %113 = ptrtoint ptr %location.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %113, i32 8)
  %114 = load i64, ptr %location.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %114)
  %tobool.not.i.i.i24 = icmp eq i64 %114, 0
  br i1 %tobool.not.i.i.i24, label %cond.end.i.if.then.i.i.i27_crit_edge, label %lor.lhs.false.i.i.i26

cond.end.i.if.then.i.i.i27_crit_edge:             ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i27

lor.lhs.false.i.i.i26:                            ; preds = %cond.end.i
  %type.i.i.i = getelementptr i8, ptr %112, i32 -852
  %115 = ptrtoint ptr %type.i.i.i to i32
  call void @__asan_load1_noabort(i32 %115)
  %116 = load i8, ptr %type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %116)
  %cmp.i.i.i25 = icmp eq i8 %116, -124
  br i1 %cmp.i.i.i25, label %lor.lhs.false.i.i.i26.if.then.i.i.i27_crit_edge, label %lor.lhs.false.i.i.i26.is_data_inode.exit.i_crit_edge

lor.lhs.false.i.i.i26.is_data_inode.exit.i_crit_edge: ; preds = %lor.lhs.false.i.i.i26
  call void @__sanitizer_cov_trace_pc() #16
  br label %is_data_inode.exit.i

lor.lhs.false.i.i.i26.if.then.i.i.i27_crit_edge:  ; preds = %lor.lhs.false.i.i.i26
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i27

if.then.i.i.i27:                                  ; preds = %lor.lhs.false.i.i.i26.if.then.i.i.i27_crit_edge, %cond.end.i.if.then.i.i.i27_crit_edge
  %i_ino.i.i.i = getelementptr i8, ptr %112, i32 40
  %117 = ptrtoint ptr %i_ino.i.i.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %i_ino.i.i.i, align 8
  %conv3.i.i.i = zext i32 %118 to i64
  br label %is_data_inode.exit.i

is_data_inode.exit.i:                             ; preds = %if.then.i.i.i27, %lor.lhs.false.i.i.i26.is_data_inode.exit.i_crit_edge
  %ino.0.i.i.i = phi i64 [ %conv3.i.i.i, %if.then.i.i.i27 ], [ %114, %lor.lhs.false.i.i.i26.is_data_inode.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %ino.0.i.i.i)
  %cmp.i.not.i = icmp eq i64 %ino.0.i.i.i, 1
  br i1 %cmp.i.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %is_data_inode.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %call5.i = call zeroext i8 @btrfs_submit_data_bio(ptr noundef %112, ptr noundef nonnull %104, i32 noundef 0, i32 noundef %106) #14
  br label %submit_one_bio.exit

if.else.i:                                        ; preds = %is_data_inode.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %call7.i = call zeroext i8 @btrfs_submit_metadata_bio(ptr noundef %112, ptr noundef nonnull %104, i32 noundef 0, i32 noundef %106) #14
  br label %submit_one_bio.exit

submit_one_bio.exit:                              ; preds = %if.else.i, %if.then.i
  %ret.0.i = phi i8 [ %call5.i, %if.then.i ], [ %call7.i, %if.else.i ]
  %call8.i = call i32 @blk_status_to_errno(i8 noundef zeroext %ret.0.i) #14
  br label %cleanup

cleanup:                                          ; preds = %submit_one_bio.exit, %if.end.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %prev_em_start) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %em_cached) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %pagepool) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %bio_ctrl) #14
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @contiguous_readpages(ptr nocapture noundef readonly %pages, i32 noundef %nr_pages, i64 noundef %start, i64 noundef %end, ptr noundef %em_cached, ptr noundef %bio_ctrl, ptr noundef %prev_em_start) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %pages to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pages, align 4
  %mapping = getelementptr inbounds %struct.page, ptr %1, i32 0, i32 1, i32 0, i32 1
  %2 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mapping, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %add.ptr.i = getelementptr i8, ptr %5, i32 -864
  tail call void @btrfs_lock_and_flush_ordered_range(ptr noundef %add.ptr.i, i64 noundef %start, i64 noundef %end, ptr noundef null) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_pages)
  %cmp9 = icmp sgt i32 %nr_pages, 0
  br i1 %cmp9, label %entry.for.body_crit_edge, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %put_page.exit.for.body_crit_edge, %entry.for.body_crit_edge
  %index.010 = phi i32 [ %inc, %put_page.exit.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx1 = getelementptr ptr, ptr %pages, i32 %index.010
  %6 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx1, align 4
  %call2 = tail call i32 @btrfs_do_readpage(ptr noundef %7, ptr noundef %em_cached, ptr noundef %bio_ctrl, i32 noundef 524288, ptr noundef %prev_em_start)
  %8 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx1, align 4
  %10 = getelementptr inbounds %struct.page, ptr %9, i32 0, i32 1
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %10, align 4
  %and.i.i = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !322

if.then.i.i:                                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %12, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %13 = ptrtoint ptr %9 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %13, %if.end.i.i ]
  %14 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %14, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #14
  %15 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp.i.i.i.i = icmp eq i32 %16, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !319

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %17 = inttoptr i32 %retval.0.i.i to ptr
  tail call void @dump_page(ptr noundef %17, ptr noundef nonnull @.str.57) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #14, !srcloc !351
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !352
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #14
  %18 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #14, !srcloc !353
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %18, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !354
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@contiguous_readpages, %if.then.i.i.i.i.i)) #14
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !326

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %14, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #14
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.put_page.exit_crit_edge

folio_put_testzero.exit.i.i.put_page.exit_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %put_page.exit

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__put_page(ptr noundef %14) #14
  br label %put_page.exit

put_page.exit:                                    ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.put_page.exit_crit_edge
  %inc = add nuw nsw i32 %index.010, 1
  %exitcond.not = icmp eq i32 %inc, %nr_pages
  br i1 %exitcond.not, label %put_page.exit.for.end_crit_edge, label %put_page.exit.for.body_crit_edge

put_page.exit.for.body_crit_edge:                 ; preds = %put_page.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

put_page.exit.for.end_crit_edge:                  ; preds = %put_page.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %put_page.exit.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @extent_invalidatepage(ptr noundef %tree, ptr noundef %page, i32 noundef %offset) local_unnamed_addr #0 align 64 {
entry:
  %cached_state = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cached_state) #14
  %0 = ptrtoint ptr %cached_state to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %cached_state, align 4
  %index.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 2
  %1 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %index.i, align 4
  %conv.i = zext i32 %2 to i64
  %shl.i = shl nuw nsw i64 %conv.i, 12
  %sub = or i64 %shl.i, 4095
  %owner = getelementptr inbounds %struct.extent_io_tree, ptr %tree, i32 0, i32 5
  %3 = ptrtoint ptr %owner to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %owner, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %4)
  %cmp = icmp eq i8 %4, 2
  br i1 %cmp, label %cond.end, label %cond.false, !prof !322

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.32, i32 noundef 5234) #18
  unreachable

cond.end:                                         ; preds = %entry
  %mapping = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %5 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %mapping, align 4
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 4
  %i_sb = getelementptr inbounds %struct.inode, ptr %8, i32 0, i32 8
  %9 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %i_sb, align 4
  %s_blocksize = getelementptr inbounds %struct.super_block, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %s_blocksize to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %s_blocksize, align 16
  %sub3 = add i32 %offset, -1
  %add4 = add i32 %sub3, %12
  %neg = sub i32 0, %12
  %and = and i32 %add4, %neg
  %conv6 = zext i32 %and to i64
  %add7 = add nuw nsw i64 %shl.i, %conv6
  call void @__sanitizer_cov_trace_cmp8(i64 %add7, i64 %sub)
  %cmp8 = icmp ugt i64 %add7, %sub
  br i1 %cmp8, label %cond.end.cleanup_crit_edge, label %if.end

cond.end.cleanup_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  %call10 = call i32 @lock_extent_bits(ptr noundef %tree, i64 noundef %add7, i64 noundef %sub, ptr noundef nonnull %cached_state)
  call void @wait_on_page_writeback(ptr noundef %page) #14
  %call.i = call i32 @__clear_extent_bit(ptr noundef %tree, i64 noundef %add7, i64 noundef %sub, i32 noundef 4, i32 noundef 1, i32 noundef 0, ptr noundef nonnull %cached_state, i32 noundef 3136, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %cond.end.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cached_state) #14
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @wait_on_page_writeback(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @try_release_extent_mapping(ptr nocapture noundef readonly %page, i32 noundef %mask) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %index.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 2
  %0 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %index.i, align 4
  %conv.i = zext i32 %1 to i64
  %shl.i = shl nuw nsw i64 %conv.i, 12
  %sub = or i64 %shl.i, 4095
  %mapping = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %2 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mapping, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %add.ptr.i = getelementptr i8, ptr %5, i32 -864
  %io_tree = getelementptr i8, ptr %5, i32 -736
  %extent_tree = getelementptr i8, ptr %5, i32 -796
  %and.i = and i32 %mask, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %entry.if.end43_crit_edge, label %land.lhs.true

entry.if.end43_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end43

land.lhs.true:                                    ; preds = %entry
  %i_size = getelementptr inbounds %struct.inode, ptr %5, i32 0, i32 14
  %6 = ptrtoint ptr %i_size to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %i_size, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 16777216, i64 %7)
  %cmp = icmp sgt i64 %7, 16777216
  br i1 %cmp, label %while.cond.preheader, label %land.lhs.true.if.end43_crit_edge

land.lhs.true.if.end43_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end43

while.cond.preheader:                             ; preds = %land.lhs.true
  %sub6 = add nuw nsw i64 %shl.i, 4096
  %lock = getelementptr i8, ptr %5, i32 -780
  br label %while.body

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %while.cond.preheader
  %start.091 = phi i64 [ %shl.i, %while.cond.preheader ], [ %32, %cleanup.while.body_crit_edge ]
  %add7 = sub i64 %sub6, %start.091
  tail call void @_raw_write_lock(ptr noundef %lock) #14
  %call8 = tail call ptr @lookup_extent_mapping(ptr noundef %extent_tree, i64 noundef %start.091, i64 noundef %add7) #14
  %tobool.not = icmp eq ptr %call8, null
  br i1 %tobool.not, label %if.then9, label %if.end

if.then9:                                         ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @_raw_write_unlock(ptr noundef %lock) #14
  br label %if.end43

if.end:                                           ; preds = %while.body
  %flags = getelementptr inbounds %struct.extent_map, ptr %call8, i32 0, i32 11
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %flags, align 4
  %and1.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool12.not = icmp eq i32 %and1.i, 0
  br i1 %tobool12.not, label %lor.lhs.false, label %if.end.if.then15_crit_edge

if.end.if.then15_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then15

lor.lhs.false:                                    ; preds = %if.end
  %start13 = getelementptr inbounds %struct.extent_map, ptr %call8, i32 0, i32 1
  %10 = ptrtoint ptr %start13 to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %start13, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %11, i64 %start.091)
  %cmp14.not = icmp eq i64 %11, %start.091
  br i1 %cmp14.not, label %if.end17, label %lor.lhs.false.if.then15_crit_edge

lor.lhs.false.if.then15_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then15

if.then15:                                        ; preds = %lor.lhs.false.if.then15_crit_edge, %if.end.if.then15_crit_edge
  tail call void @_raw_write_unlock(ptr noundef %lock) #14
  tail call void @free_extent_map(ptr noundef nonnull %call8) #14
  br label %if.end43

if.end17:                                         ; preds = %lor.lhs.false
  %len.i = getelementptr inbounds %struct.extent_map, ptr %call8, i32 0, i32 2
  %12 = ptrtoint ptr %len.i to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %len.i, align 8
  %14 = tail call i64 @llvm.uadd.sat.i64(i64 %start.091, i64 %13) #14
  %sub20 = add i64 %14, -1
  %call21 = tail call i32 @test_range_bit(ptr noundef %io_tree, i64 noundef %start.091, i64 noundef %sub20, i32 noundef 4, i32 noundef 0, ptr noundef null)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %if.end24, label %if.end17.cleanup_crit_edge

if.end17.cleanup_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end24:                                         ; preds = %if.end17
  %list = getelementptr inbounds %struct.extent_map, ptr %call8, i32 0, i32 15
  %15 = ptrtoint ptr %list to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile ptr, ptr %list, align 4
  %cmp.i.not = icmp eq ptr %16, %list
  br i1 %cmp.i.not, label %if.end24.remove_em_crit_edge, label %lor.lhs.false27

if.end24.remove_em_crit_edge:                     ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #16
  br label %remove_em

lor.lhs.false27:                                  ; preds = %if.end24
  %17 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %flags, align 4
  %19 = and i32 %18, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool30.not = icmp eq i32 %19, 0
  br i1 %tobool30.not, label %if.end32, label %lor.lhs.false27.remove_em_crit_edge

lor.lhs.false27.remove_em_crit_edge:              ; preds = %lor.lhs.false27
  call void @__sanitizer_cov_trace_pc() #16
  br label %remove_em

if.end32:                                         ; preds = %lor.lhs.false27
  %20 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %add.ptr.i, align 8
  %fs_info33 = getelementptr inbounds %struct.btrfs_root, ptr %21, i32 0, i32 8
  %22 = ptrtoint ptr %fs_info33 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %fs_info33, align 8
  %trans_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %23, i32 0, i32 57
  tail call void @_raw_spin_lock(ptr noundef %trans_lock) #14
  %generation = getelementptr inbounds %struct.btrfs_fs_info, ptr %23, i32 0, i32 26
  %24 = ptrtoint ptr %generation to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %generation, align 8
  tail call void @_raw_spin_unlock(ptr noundef %trans_lock) #14
  %generation35 = getelementptr inbounds %struct.extent_map, ptr %call8, i32 0, i32 10
  %26 = ptrtoint ptr %generation35 to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %generation35, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %27, i64 %25)
  %cmp36.not = icmp ult i64 %27, %25
  br i1 %cmp36.not, label %if.end32.remove_em_crit_edge, label %if.end32.cleanup_crit_edge

if.end32.cleanup_crit_edge:                       ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end32.remove_em_crit_edge:                     ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #16
  br label %remove_em

remove_em:                                        ; preds = %if.end32.remove_em_crit_edge, %lor.lhs.false27.remove_em_crit_edge, %if.end24.remove_em_crit_edge
  tail call void @remove_extent_mapping(ptr noundef %extent_tree, ptr noundef nonnull %call8) #14
  tail call void @free_extent_map(ptr noundef nonnull %call8) #14
  br label %cleanup

cleanup:                                          ; preds = %remove_em, %if.end32.cleanup_crit_edge, %if.end17.cleanup_crit_edge
  %28 = ptrtoint ptr %start13 to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %start13, align 8
  %30 = ptrtoint ptr %len.i to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %len.i, align 8
  %32 = tail call i64 @llvm.uadd.sat.i64(i64 %29, i64 %31) #14
  tail call void @_raw_write_unlock(ptr noundef %lock) #14
  tail call void @free_extent_map(ptr noundef nonnull %call8) #14
  tail call void @__might_resched(ptr noundef nonnull @.str.2, i32 noundef 5367, i32 noundef 0) #14
  %call.i = tail call i32 @__cond_resched() #14
  %cmp5.not = icmp ult i64 %sub, %32
  br i1 %cmp5.not, label %cleanup.if.end43_crit_edge, label %cleanup.while.body_crit_edge

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

cleanup.if.end43_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end43

if.end43:                                         ; preds = %cleanup.if.end43_crit_edge, %if.then15, %if.then9, %land.lhs.true.if.end43_crit_edge, %entry.if.end43_crit_edge
  %33 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %index.i, align 4
  %conv.i.i = zext i32 %34 to i64
  %shl.i.i = shl nuw nsw i64 %conv.i.i, 12
  %sub.i = or i64 %shl.i.i, 4095
  %call1.i = tail call i32 @test_range_bit(ptr noundef %io_tree, i64 noundef %shl.i.i, i64 noundef %sub.i, i32 noundef 4, i32 noundef 0, ptr noundef null) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.end43.try_release_extent_state.exit_crit_edge

if.end43.try_release_extent_state.exit_crit_edge: ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #16
  br label %try_release_extent_state.exit

if.else.i:                                        ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #16
  %call2.i = tail call i32 @__clear_extent_bit(ptr noundef %io_tree, i64 noundef %shl.i.i, i64 noundef %sub.i, i32 noundef -16517, i32 noundef 0, i32 noundef 0, ptr noundef null, i32 noundef %mask, ptr noundef null) #14
  br label %try_release_extent_state.exit

try_release_extent_state.exit:                    ; preds = %if.else.i, %if.end43.try_release_extent_state.exit_crit_edge
  %ret.0.i = phi i32 [ 1, %if.else.i ], [ 0, %if.end43.try_release_extent_state.exit_crit_edge ]
  ret i32 %ret.0.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_write_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @lookup_extent_mapping(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_write_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @remove_extent_mapping(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @extent_fiemap(ptr noundef %inode, ptr noundef %fieinfo, i64 noundef %start, i64 noundef %len) local_unnamed_addr #0 align 64 {
entry:
  %disk_key.i = alloca %struct.btrfs_disk_key, align 8
  %cached_state = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add = add i64 %len, %start
  %vfs_inode = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 37
  %call = tail call fastcc i64 @i_size_read(ptr noundef %vfs_inode)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cached_state) #14
  %0 = ptrtoint ptr %cached_state to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %cached_state, align 4
  %1 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %inode, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %len)
  %cmp = icmp eq i64 %len, 0
  br i1 %cmp, label %entry.cleanup208_crit_edge, label %if.end

entry.cleanup208_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup208

if.end:                                           ; preds = %entry
  %call2 = tail call ptr @btrfs_alloc_path() #14
  %tobool.not = icmp eq ptr %call2, null
  br i1 %tobool.not, label %if.end.cleanup208_crit_edge, label %if.end4

if.end.cleanup208_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup208

if.end4:                                          ; preds = %if.end
  %call5 = tail call ptr @ulist_alloc(i32 noundef 3264) #14
  %call6 = tail call ptr @ulist_alloc(i32 noundef 3264) #14
  %tobool7.not = icmp eq ptr %call5, null
  %tobool8.not = icmp eq ptr %call6, null
  %or.cond = select i1 %tobool7.not, i1 true, i1 %tobool8.not
  br i1 %or.cond, label %if.end4.out_free_ulist_crit_edge, label %if.end10

if.end4.out_free_ulist_crit_edge:                 ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_free_ulist

if.end10:                                         ; preds = %if.end4
  %3 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %inode, align 8
  %fs_info.i = getelementptr inbounds %struct.btrfs_root, ptr %4, i32 0, i32 8
  %5 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_info.i, align 8
  %sectorsize.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %6, i32 0, i32 167
  %7 = ptrtoint ptr %sectorsize.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %sectorsize.i, align 4
  %sub = add i32 %8, -1
  %conv = zext i32 %sub to i64
  %neg = xor i64 %conv, -1
  %and = and i64 %neg, %start
  %sub12 = add i64 %add, -1
  %or = or i64 %sub12, %conv
  %location.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 1
  %9 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %9, i32 8)
  %10 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %10)
  %tobool.not.i = icmp eq i64 %10, 0
  br i1 %tobool.not.i, label %if.end10.if.then.i_crit_edge, label %lor.lhs.false.i

if.end10.if.then.i_crit_edge:                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end10
  %type.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 1, i32 1
  %11 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %12)
  %cmp.i = icmp eq i8 %12, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end10.if.then.i_crit_edge
  %i_ino.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 37, i32 11
  %13 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %14 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %10, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %call19 = tail call i32 @btrfs_lookup_file_extent(ptr noundef null, ptr noundef %2, ptr noundef nonnull %call2, i64 noundef %ino.0.i, i64 noundef -1, i32 noundef 0) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %cmp20 = icmp slt i32 %call19, 0
  br i1 %cmp20, label %btrfs_ino.exit.out_free_ulist_crit_edge, label %if.else

btrfs_ino.exit.out_free_ulist_crit_edge:          ; preds = %btrfs_ino.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_free_ulist

if.else:                                          ; preds = %btrfs_ino.exit
  %15 = zext i32 %call19 to i64
  call void @__sanitizer_cov_trace_switch(i64 %15, ptr @__sancov_gen_cov_switch_values.137)
  switch i32 %call19, label %if.else.if.end50_crit_edge [
    i32 0, label %do.end
    i32 1, label %if.then48
  ], !prof !399

if.else.if.end50_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50

do.end:                                           ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 5577, i32 noundef 9, ptr noundef null) #14
  br label %if.end50

if.then48:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50

if.end50:                                         ; preds = %if.then48, %do.end, %if.else.if.end50_crit_edge
  %ret.0 = phi i32 [ 0, %if.then48 ], [ 0, %do.end ], [ %call19, %if.else.if.end50_crit_edge ]
  %slots = getelementptr inbounds %struct.btrfs_path, ptr %call2, i32 0, i32 1
  %16 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %slots, align 4
  %dec = add i32 %17, -1
  store i32 %dec, ptr %slots, align 4
  %18 = ptrtoint ptr %call2 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %call2, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %disk_key.i) #14
  %20 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i, i32 0, i32 1
  %21 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i, i32 0, i32 2
  %mul.i.i.i.i = mul i32 %dec, 25
  %add.i.i.i.i = add i32 %mul.i.i.i.i, 101
  %22 = call ptr @memset(ptr %disk_key.i, i32 255, i32 17)
  call void @read_extent_buffer(ptr noundef %19, ptr noundef nonnull %disk_key.i, i32 noundef %add.i.i.i.i, i32 noundef 17) #14
  %23 = ptrtoint ptr %21 to i32
  call void @__asan_loadN_noabort(i32 %23, i32 8)
  %24 = load i64, ptr %21, align 1
  %25 = tail call i64 @llvm.bswap.i64(i64 %24) #14
  %26 = ptrtoint ptr %20 to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %20, align 8
  %28 = ptrtoint ptr %disk_key.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %disk_key.i, align 8
  %30 = tail call i64 @llvm.bswap.i64(i64 %29) #14
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %disk_key.i) #14
  %31 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %31, i32 8)
  %32 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %32)
  %tobool.not.i341 = icmp eq i64 %32, 0
  br i1 %tobool.not.i341, label %if.end50.if.then.i347_crit_edge, label %lor.lhs.false.i344

if.end50.if.then.i347_crit_edge:                  ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i347

lor.lhs.false.i344:                               ; preds = %if.end50
  %type.i342 = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 1, i32 1
  %33 = ptrtoint ptr %type.i342 to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %type.i342, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %34)
  %cmp.i343 = icmp eq i8 %34, -124
  br i1 %cmp.i343, label %lor.lhs.false.i344.if.then.i347_crit_edge, label %lor.lhs.false.i344.btrfs_ino.exit349_crit_edge

lor.lhs.false.i344.btrfs_ino.exit349_crit_edge:   ; preds = %lor.lhs.false.i344
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_ino.exit349

lor.lhs.false.i344.if.then.i347_crit_edge:        ; preds = %lor.lhs.false.i344
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i347

if.then.i347:                                     ; preds = %lor.lhs.false.i344.if.then.i347_crit_edge, %if.end50.if.then.i347_crit_edge
  %i_ino.i345 = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 37, i32 11
  %35 = ptrtoint ptr %i_ino.i345 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %i_ino.i345, align 8
  %conv3.i346 = zext i32 %36 to i64
  br label %btrfs_ino.exit349

btrfs_ino.exit349:                                ; preds = %if.then.i347, %lor.lhs.false.i344.btrfs_ino.exit349_crit_edge
  %ino.0.i348 = phi i64 [ %conv3.i346, %if.then.i347 ], [ %32, %lor.lhs.false.i344.btrfs_ino.exit349_crit_edge ]
  call void @__sanitizer_cov_trace_cmp8(i64 %30, i64 %ino.0.i348)
  %cmp56.not = icmp eq i64 %30, %ino.0.i348
  call void @__sanitizer_cov_trace_const_cmp1(i8 108, i8 %27)
  %cmp59.not = icmp eq i8 %27, 108
  %or.cond326 = select i1 %cmp56.not, i1 %cmp59.not, i1 false
  %add63 = add i64 %25, 1
  %spec.select505 = select i1 %or.cond326, i64 %25, i64 -1
  %spec.select506 = select i1 %or.cond326, i64 %add63, i64 %call
  tail call void @btrfs_release_path(ptr noundef nonnull %call2) #14
  call void @__sanitizer_cov_trace_cmp8(i64 %spec.select505, i64 %call)
  %cmp65 = icmp ult i64 %spec.select505, %call
  %spec.select = select i1 %cmp65, i64 -1, i64 %spec.select505
  %spec.select327 = select i1 %cmp65, i64 %call, i64 %spec.select506
  %io_tree = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 4
  %call71 = call i32 @lock_extent_bits(ptr noundef %io_tree, i64 noundef %and, i64 noundef %or, ptr noundef nonnull %cached_state)
  call void @__sanitizer_cov_trace_cmp8(i64 %and, i64 %spec.select327)
  %cmp.not.i = icmp ult i64 %and, %spec.select327
  br i1 %cmp.not.i, label %while.cond.preheader.i, label %btrfs_ino.exit349.out_crit_edge

btrfs_ino.exit349.out_crit_edge:                  ; preds = %btrfs_ino.exit349
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

while.cond.preheader.i:                           ; preds = %btrfs_ino.exit349
  %37 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %inode, align 8
  %fs_info.i.i = getelementptr inbounds %struct.btrfs_root, ptr %38, i32 0, i32 8
  %39 = ptrtoint ptr %fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %fs_info.i.i, align 8
  %sectorsize.i.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %40, i32 0, i32 167
  %41 = ptrtoint ptr %sectorsize.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %sectorsize.i.i, align 4
  %conv.i = zext i32 %42 to i64
  %sub.i = add i64 %spec.select327, -1
  %sub6.i = add i64 %sub.i, %conv.i
  %neg.i = sub nsw i64 0, %conv.i
  br label %while.cond.i

while.cond.i:                                     ; preds = %if.end15.i.while.cond.i_crit_edge, %while.cond.preheader.i
  %offset.addr.0.i = phi i64 [ %49, %if.end15.i.while.cond.i_crit_edge ], [ %and, %while.cond.preheader.i ]
  call void @__sanitizer_cov_trace_cmp8(i64 %offset.addr.0.i, i64 %spec.select327)
  %cmp2.i = icmp eq i64 %offset.addr.0.i, %spec.select327
  br i1 %cmp2.i, label %while.cond.i.out_crit_edge, label %if.end5.i

while.cond.i.out_crit_edge:                       ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end5.i:                                        ; preds = %while.cond.i
  %add.i = sub i64 %sub6.i, %offset.addr.0.i
  %and.i = and i64 %add.i, %neg.i
  %call8.i = call ptr @btrfs_get_extent_fiemap(ptr noundef %inode, i64 noundef %offset.addr.0.i, i64 noundef %and.i) #14
  %tobool.not.i.i = icmp eq ptr %call8.i, null
  %cmp.i.i = icmp ugt ptr %call8.i, inttoptr (i32 -4096 to ptr)
  %spec.select.i.i = or i1 %tobool.not.i.i, %cmp.i.i
  br i1 %spec.select.i.i, label %get_extent_skip_holes.exit, label %if.end11.i

if.end11.i:                                       ; preds = %if.end5.i
  %block_start.i = getelementptr inbounds %struct.extent_map, ptr %call8.i, i32 0, i32 8
  %43 = ptrtoint ptr %block_start.i to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %block_start.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -3, i64 %44)
  %cmp12.not.i = icmp eq i64 %44, -3
  br i1 %cmp12.not.i, label %if.end15.i, label %if.end11.i.if.end75_crit_edge

if.end11.i.if.end75_crit_edge:                    ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end75

if.end15.i:                                       ; preds = %if.end11.i
  %start.i.i = getelementptr inbounds %struct.extent_map, ptr %call8.i, i32 0, i32 1
  %45 = ptrtoint ptr %start.i.i to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %start.i.i, align 8
  %len.i.i = getelementptr inbounds %struct.extent_map, ptr %call8.i, i32 0, i32 2
  %47 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %len.i.i, align 8
  %49 = call i64 @llvm.uadd.sat.i64(i64 %46, i64 %48) #14
  call void @free_extent_map(ptr noundef nonnull %call8.i) #14
  %cmp17.not.i = icmp ult i64 %49, %spec.select327
  br i1 %cmp17.not.i, label %if.end15.i.while.cond.i_crit_edge, label %if.end15.i.out_crit_edge

if.end15.i.out_crit_edge:                         ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end15.i.while.cond.i_crit_edge:                ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond.i

get_extent_skip_holes.exit:                       ; preds = %if.end5.i
  br i1 %tobool.not.i.i, label %get_extent_skip_holes.exit.out_crit_edge, label %get_extent_skip_holes.exit.if.end75_crit_edge

get_extent_skip_holes.exit.if.end75_crit_edge:    ; preds = %get_extent_skip_holes.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end75

get_extent_skip_holes.exit.out_crit_edge:         ; preds = %get_extent_skip_holes.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end75:                                         ; preds = %get_extent_skip_holes.exit.if.end75_crit_edge, %if.end11.i.if.end75_crit_edge
  br i1 %cmp.i.i, label %if.then77, label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.end75
  %fi_extents_max = getelementptr inbounds %struct.fiemap_extent_info, ptr %fieinfo, i32 0, i32 2
  %type.i357 = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 1, i32 1
  %i_ino.i360 = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 37, i32 11
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %spec.select)
  %cmp173 = icmp ne i64 %spec.select, -1
  %start83662 = getelementptr inbounds %struct.extent_map, ptr %call8.i, i32 0, i32 1
  %50 = ptrtoint ptr %start83662 to i32
  call void @__asan_load8_noabort(i32 %50)
  %51 = load i64, ptr %start83662, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %51, i64 %add)
  %cmp84.not663 = icmp ult i64 %51, %add
  br i1 %cmp84.not663, label %while.cond.preheader.lor.lhs.false86_crit_edge, label %while.cond.preheader.out_free_crit_edge

while.cond.preheader.out_free_crit_edge:          ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_free

while.cond.preheader.lor.lhs.false86_crit_edge:   ; preds = %while.cond.preheader
  br label %lor.lhs.false86

if.then77:                                        ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #16
  %52 = ptrtoint ptr %call8.i to i32
  br label %out

while.cond:                                       ; preds = %emit_fiemap_extent.exit.while.cond_crit_edge, %try_submit_last.i.while.cond_crit_edge
  %cache.sroa.0.3.ph = phi i64 [ %cache.sroa.0.1, %try_submit_last.i.while.cond_crit_edge ], [ %cache.sroa.0.2, %emit_fiemap_extent.exit.while.cond_crit_edge ]
  %cache.sroa.7.3.ph = phi i64 [ %cache.sroa.7.1, %try_submit_last.i.while.cond_crit_edge ], [ %cache.sroa.7.2, %emit_fiemap_extent.exit.while.cond_crit_edge ]
  %cache.sroa.12.3.ph = phi i64 [ %cache.sroa.12.1, %try_submit_last.i.while.cond_crit_edge ], [ %cache.sroa.12.2, %emit_fiemap_extent.exit.while.cond_crit_edge ]
  %cache.sroa.17.3.ph = phi i32 [ %cache.sroa.17.1, %try_submit_last.i.while.cond_crit_edge ], [ %cache.sroa.17.2, %emit_fiemap_extent.exit.while.cond_crit_edge ]
  %cache.sroa.23.3.ph = phi i8 [ %cache.sroa.23.1, %try_submit_last.i.while.cond_crit_edge ], [ 0, %emit_fiemap_extent.exit.while.cond_crit_edge ]
  br i1 %narrow618, label %while.cond.if.then201_crit_edge, label %while.body

while.cond.if.then201_crit_edge:                  ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then201

while.body:                                       ; preds = %while.cond
  %start83 = getelementptr inbounds %struct.extent_map, ptr %retval.0.i390434, i32 0, i32 1
  %53 = ptrtoint ptr %start83 to i32
  call void @__asan_load8_noabort(i32 %53)
  %54 = load i64, ptr %start83, align 8
  %cmp84.not = icmp ult i64 %54, %add
  br i1 %cmp84.not, label %while.body.lor.lhs.false86_crit_edge, label %while.body.out_free_crit_edge

while.body.out_free_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_free

while.body.lor.lhs.false86_crit_edge:             ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %lor.lhs.false86

lor.lhs.false86:                                  ; preds = %while.body.lor.lhs.false86_crit_edge, %while.cond.preheader.lor.lhs.false86_crit_edge
  %55 = phi i64 [ %54, %while.body.lor.lhs.false86_crit_edge ], [ %51, %while.cond.preheader.lor.lhs.false86_crit_edge ]
  %cache.sroa.0.0516672 = phi i64 [ %cache.sroa.0.3.ph, %while.body.lor.lhs.false86_crit_edge ], [ 0, %while.cond.preheader.lor.lhs.false86_crit_edge ]
  %cache.sroa.7.0518671 = phi i64 [ %cache.sroa.7.3.ph, %while.body.lor.lhs.false86_crit_edge ], [ 0, %while.cond.preheader.lor.lhs.false86_crit_edge ]
  %cache.sroa.12.0519670 = phi i64 [ %cache.sroa.12.3.ph, %while.body.lor.lhs.false86_crit_edge ], [ 0, %while.cond.preheader.lor.lhs.false86_crit_edge ]
  %cache.sroa.17.0520669 = phi i32 [ %cache.sroa.17.3.ph, %while.body.lor.lhs.false86_crit_edge ], [ 0, %while.cond.preheader.lor.lhs.false86_crit_edge ]
  %cache.sroa.23.0521668 = phi i8 [ %cache.sroa.23.3.ph, %while.body.lor.lhs.false86_crit_edge ], [ 0, %while.cond.preheader.lor.lhs.false86_crit_edge ]
  %ret.1523667 = phi i32 [ 0, %while.body.lor.lhs.false86_crit_edge ], [ %ret.0, %while.cond.preheader.lor.lhs.false86_crit_edge ]
  %off.0524666 = phi i64 [ %58, %while.body.lor.lhs.false86_crit_edge ], [ 0, %while.cond.preheader.lor.lhs.false86_crit_edge ]
  %em.0525664 = phi ptr [ %retval.0.i390434, %while.body.lor.lhs.false86_crit_edge ], [ %call8.i, %while.cond.preheader.lor.lhs.false86_crit_edge ]
  %len.i = getelementptr inbounds %struct.extent_map, ptr %em.0525664, i32 0, i32 2
  %56 = ptrtoint ptr %len.i to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %len.i, align 8
  %58 = call i64 @llvm.uadd.sat.i64(i64 %55, i64 %57) #14
  call void @__sanitizer_cov_trace_cmp8(i64 %58, i64 %off.0524666)
  %cmp88 = icmp ult i64 %58, %off.0524666
  br i1 %cmp88, label %lor.lhs.false86.out_free_crit_edge, label %if.end91

lor.lhs.false86.out_free_crit_edge:               ; preds = %lor.lhs.false86
  call void @__sanitizer_cov_trace_pc() #16
  br label %out_free

if.end91:                                         ; preds = %lor.lhs.false86
  %59 = call i64 @llvm.umax.i64(i64 %55, i64 %off.0524666)
  %flags96 = getelementptr inbounds %struct.extent_map, ptr %em.0525664, i32 0, i32 11
  %60 = ptrtoint ptr %flags96 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %flags96, align 4
  %62 = and i32 %61, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %62)
  %tobool98.not = icmp eq i32 %62, 0
  %sub101 = sub i64 %59, %55
  %spec.select507 = select i1 %tobool98.not, i64 %sub101, i64 0
  %sub104 = sub i64 %58, %59
  %block_start = getelementptr inbounds %struct.extent_map, ptr %em.0525664, i32 0, i32 8
  %63 = ptrtoint ptr %block_start to i32
  call void @__asan_load8_noabort(i32 %63)
  %64 = load i64, ptr %block_start, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -4, i64 %64)
  %cmp105 = icmp ult i64 %64, -4
  %add109 = add i64 %spec.select507, %64
  %disko.0 = select i1 %cmp105, i64 %add109, i64 0
  call void @__sanitizer_cov_trace_cmp8(i64 %58, i64 %add)
  %cmp113.not = icmp uge i64 %58, %add
  call void @__sanitizer_cov_trace_switch(i64 %64, ptr @__sancov_gen_cov_switch_values.138)
  switch i64 %64, label %if.else134 [
    i64 -4, label %if.end91.if.end154_crit_edge
    i64 -2, label %if.then126
    i64 -1, label %if.then132
  ]

if.end91.if.end154_crit_edge:                     ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end154

if.then126:                                       ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end154

if.then132:                                       ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end154

if.else134:                                       ; preds = %if.end91
  %65 = ptrtoint ptr %fi_extents_max to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %fi_extents_max, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %66)
  %tobool135.not = icmp eq i32 %66, 0
  br i1 %tobool135.not, label %if.else134.if.end154_crit_edge, label %if.then136

if.else134.if.end154_crit_edge:                   ; preds = %if.else134
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end154

if.then136:                                       ; preds = %if.else134
  %orig_start = getelementptr inbounds %struct.extent_map, ptr %em.0525664, i32 0, i32 5
  %67 = ptrtoint ptr %orig_start to i32
  call void @__asan_load8_noabort(i32 %67)
  %68 = load i64, ptr %orig_start, align 8
  %sub139.neg = sub i64 %64, %55
  %sub140 = add i64 %sub139.neg, %68
  %69 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %69, i32 8)
  %70 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %70)
  %tobool.not.i356 = icmp eq i64 %70, 0
  br i1 %tobool.not.i356, label %if.then136.if.then.i362_crit_edge, label %lor.lhs.false.i359

if.then136.if.then.i362_crit_edge:                ; preds = %if.then136
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i362

lor.lhs.false.i359:                               ; preds = %if.then136
  %71 = ptrtoint ptr %type.i357 to i32
  call void @__asan_load1_noabort(i32 %71)
  %72 = load i8, ptr %type.i357, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %72)
  %cmp.i358 = icmp eq i8 %72, -124
  br i1 %cmp.i358, label %lor.lhs.false.i359.if.then.i362_crit_edge, label %lor.lhs.false.i359.btrfs_ino.exit364_crit_edge

lor.lhs.false.i359.btrfs_ino.exit364_crit_edge:   ; preds = %lor.lhs.false.i359
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_ino.exit364

lor.lhs.false.i359.if.then.i362_crit_edge:        ; preds = %lor.lhs.false.i359
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i362

if.then.i362:                                     ; preds = %lor.lhs.false.i359.if.then.i362_crit_edge, %if.then136.if.then.i362_crit_edge
  %73 = ptrtoint ptr %i_ino.i360 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %i_ino.i360, align 8
  %conv3.i361 = zext i32 %74 to i64
  br label %btrfs_ino.exit364

btrfs_ino.exit364:                                ; preds = %if.then.i362, %lor.lhs.false.i359.btrfs_ino.exit364_crit_edge
  %ino.0.i363 = phi i64 [ %conv3.i361, %if.then.i362 ], [ %70, %lor.lhs.false.i359.btrfs_ino.exit364_crit_edge ]
  %call142 = call i32 @btrfs_check_shared(ptr noundef %2, i64 noundef %ino.0.i363, i64 noundef %sub140, ptr noundef nonnull %call5, ptr noundef nonnull %call6) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call142)
  %cmp143 = icmp slt i32 %call142, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call142)
  %tobool147.not = icmp eq i32 %call142, 0
  %spec.select328 = select i1 %tobool147.not, i32 0, i32 8192
  br i1 %cmp143, label %btrfs_ino.exit364.if.end203.loopexit_crit_edge, label %btrfs_ino.exit364.if.end154_crit_edge

btrfs_ino.exit364.if.end154_crit_edge:            ; preds = %btrfs_ino.exit364
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end154

btrfs_ino.exit364.if.end203.loopexit_crit_edge:   ; preds = %btrfs_ino.exit364
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end203.loopexit

if.end154:                                        ; preds = %btrfs_ino.exit364.if.end154_crit_edge, %if.else134.if.end154_crit_edge, %if.then132, %if.then126, %if.end91.if.end154_crit_edge
  %flags.2 = phi i32 [ 768, %if.then126 ], [ 6, %if.then132 ], [ %spec.select328, %btrfs_ino.exit364.if.end154_crit_edge ], [ 0, %if.else134.if.end154_crit_edge ], [ 1, %if.end91.if.end154_crit_edge ]
  %end.2.shrunk = phi i1 [ %cmp113.not, %if.then126 ], [ %cmp113.not, %if.then132 ], [ %cmp113.not, %btrfs_ino.exit364.if.end154_crit_edge ], [ %cmp113.not, %if.else134.if.end154_crit_edge ], [ true, %if.end91.if.end154_crit_edge ]
  %75 = ptrtoint ptr %flags96 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load volatile i32, ptr %flags96, align 4
  %77 = shl i32 %76, 2
  %78 = and i32 %77, 8
  %79 = or i32 %78, %flags.2
  %80 = load volatile i32, ptr %flags96, align 4
  %81 = shl i32 %80, 9
  %82 = and i32 %81, 2048
  %83 = or i32 %79, %82
  call void @free_extent_map(ptr noundef %em.0525664) #14
  call void @__sanitizer_cov_trace_cmp8(i64 %59, i64 %spec.select)
  %cmp167.not = icmp ult i64 %59, %spec.select
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %sub104)
  %cmp170 = icmp ne i64 %sub104, -1
  %or.cond330 = select i1 %cmp167.not, i1 %cmp170, i1 false
  call void @__sanitizer_cov_trace_cmp8(i64 %call, i64 %58)
  %cmp175.not = icmp ugt i64 %call, %58
  %or.cond331 = select i1 %cmp173, i1 true, i1 %cmp175.not
  %or.cond528 = select i1 %or.cond330, i1 %or.cond331, i1 false
  %not.or.cond528 = xor i1 %or.cond528, true
  %or178 = zext i1 %not.or.cond528 to i32
  %flags.5 = or i32 %83, %or178
  %not.or.cond528617 = xor i1 %or.cond528, true
  call void @__sanitizer_cov_trace_cmp8(i64 %58, i64 %spec.select327)
  %cmp.not.i365 = icmp ult i64 %58, %spec.select327
  br i1 %cmp.not.i365, label %while.cond.preheader.i372, label %if.end154.if.end184_crit_edge

if.end154.if.end184_crit_edge:                    ; preds = %if.end154
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end184

while.cond.preheader.i372:                        ; preds = %if.end154
  %84 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %inode, align 8
  %fs_info.i.i366 = getelementptr inbounds %struct.btrfs_root, ptr %85, i32 0, i32 8
  %86 = ptrtoint ptr %fs_info.i.i366 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %fs_info.i.i366, align 8
  %sectorsize.i.i367 = getelementptr inbounds %struct.btrfs_fs_info, ptr %87, i32 0, i32 167
  %88 = ptrtoint ptr %sectorsize.i.i367 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %sectorsize.i.i367, align 4
  %conv.i368 = zext i32 %89 to i64
  %sub6.i370 = add i64 %sub.i, %conv.i368
  %neg.i371 = sub nsw i64 0, %conv.i368
  br label %while.cond.i375

while.cond.i375:                                  ; preds = %if.end15.i389.while.cond.i375_crit_edge, %while.cond.preheader.i372
  %offset.addr.0.i373 = phi i64 [ %96, %if.end15.i389.while.cond.i375_crit_edge ], [ %58, %while.cond.preheader.i372 ]
  call void @__sanitizer_cov_trace_cmp8(i64 %offset.addr.0.i373, i64 %spec.select327)
  %cmp2.i374 = icmp eq i64 %offset.addr.0.i373, %spec.select327
  br i1 %cmp2.i374, label %while.cond.i375.if.end184_crit_edge, label %if.end5.i382

while.cond.i375.if.end184_crit_edge:              ; preds = %while.cond.i375
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end184

if.end5.i382:                                     ; preds = %while.cond.i375
  %add.i376 = sub i64 %sub6.i370, %offset.addr.0.i373
  %and.i377 = and i64 %add.i376, %neg.i371
  %call8.i378 = call ptr @btrfs_get_extent_fiemap(ptr noundef %inode, i64 noundef %offset.addr.0.i373, i64 noundef %and.i377) #14
  %tobool.not.i.i379 = icmp eq ptr %call8.i378, null
  %cmp.i.i380 = icmp ugt ptr %call8.i378, inttoptr (i32 -4096 to ptr)
  %spec.select.i.i381 = or i1 %tobool.not.i.i379, %cmp.i.i380
  br i1 %spec.select.i.i381, label %if.end5.i382.get_extent_skip_holes.exit391_crit_edge, label %if.end11.i385

if.end5.i382.get_extent_skip_holes.exit391_crit_edge: ; preds = %if.end5.i382
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_extent_skip_holes.exit391

if.end11.i385:                                    ; preds = %if.end5.i382
  %block_start.i383 = getelementptr inbounds %struct.extent_map, ptr %call8.i378, i32 0, i32 8
  %90 = ptrtoint ptr %block_start.i383 to i32
  call void @__asan_load8_noabort(i32 %90)
  %91 = load i64, ptr %block_start.i383, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -3, i64 %91)
  %cmp12.not.i384 = icmp eq i64 %91, -3
  br i1 %cmp12.not.i384, label %if.end15.i389, label %if.end11.i385.get_extent_skip_holes.exit391_crit_edge

if.end11.i385.get_extent_skip_holes.exit391_crit_edge: ; preds = %if.end11.i385
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_extent_skip_holes.exit391

if.end15.i389:                                    ; preds = %if.end11.i385
  %start.i.i386 = getelementptr inbounds %struct.extent_map, ptr %call8.i378, i32 0, i32 1
  %92 = ptrtoint ptr %start.i.i386 to i32
  call void @__asan_load8_noabort(i32 %92)
  %93 = load i64, ptr %start.i.i386, align 8
  %len.i.i387 = getelementptr inbounds %struct.extent_map, ptr %call8.i378, i32 0, i32 2
  %94 = ptrtoint ptr %len.i.i387 to i32
  call void @__asan_load8_noabort(i32 %94)
  %95 = load i64, ptr %len.i.i387, align 8
  %96 = call i64 @llvm.uadd.sat.i64(i64 %93, i64 %95) #14
  call void @free_extent_map(ptr noundef nonnull %call8.i378) #14
  %cmp17.not.i388 = icmp ult i64 %96, %spec.select327
  br i1 %cmp17.not.i388, label %if.end15.i389.while.cond.i375_crit_edge, label %if.end15.i389.if.end184_crit_edge

if.end15.i389.if.end184_crit_edge:                ; preds = %if.end15.i389
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end184

if.end15.i389.while.cond.i375_crit_edge:          ; preds = %if.end15.i389
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond.i375

get_extent_skip_holes.exit391:                    ; preds = %if.end11.i385.get_extent_skip_holes.exit391_crit_edge, %if.end5.i382.get_extent_skip_holes.exit391_crit_edge
  br i1 %cmp.i.i380, label %cleanup197.thread463, label %get_extent_skip_holes.exit391.if.end184_crit_edge

get_extent_skip_holes.exit391.if.end184_crit_edge: ; preds = %get_extent_skip_holes.exit391
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end184

cleanup197.thread463:                             ; preds = %get_extent_skip_holes.exit391
  call void @__sanitizer_cov_trace_pc() #16
  %97 = ptrtoint ptr %call8.i378 to i32
  br label %out

if.end184:                                        ; preds = %get_extent_skip_holes.exit391.if.end184_crit_edge, %if.end15.i389.if.end184_crit_edge, %while.cond.i375.if.end184_crit_edge, %if.end154.if.end184_crit_edge
  %retval.0.i390434 = phi ptr [ %call8.i378, %get_extent_skip_holes.exit391.if.end184_crit_edge ], [ null, %if.end154.if.end184_crit_edge ], [ null, %while.cond.i375.if.end184_crit_edge ], [ null, %if.end15.i389.if.end184_crit_edge ]
  %tobool185.not = icmp eq ptr %retval.0.i390434, null
  %or187 = zext i1 %tobool185.not to i32
  %spec.select332 = or i32 %flags.5, %or187
  %98 = select i1 %tobool185.not, i1 true, i1 %not.or.cond528617
  %narrow618 = select i1 %98, i1 true, i1 %end.2.shrunk
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %cache.sroa.23.0521668)
  %tobool.not.i393 = icmp eq i8 %cache.sroa.23.0521668, 0
  br i1 %tobool.not.i393, label %if.end184.try_submit_last.i_crit_edge, label %if.end.i

if.end184.try_submit_last.i_crit_edge:            ; preds = %if.end184
  call void @__sanitizer_cov_trace_pc() #16
  br label %try_submit_last.i

if.end.i:                                         ; preds = %if.end184
  %add.i394 = add i64 %cache.sroa.12.0519670, %cache.sroa.0.0516672
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i394, i64 %59)
  %cmp.i395 = icmp ugt i64 %add.i394, %59
  br i1 %cmp.i395, label %emit_fiemap_extent.exit.thread, label %if.end21.i

emit_fiemap_extent.exit.thread:                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 5449, i32 noundef 9, ptr noundef null) #14
  br label %if.end203

if.end21.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i394, i64 %59)
  %cmp25.i = icmp eq i64 %add.i394, %59
  %add28.i = add i64 %cache.sroa.12.0519670, %cache.sroa.7.0518671
  call void @__sanitizer_cov_trace_cmp8(i64 %add28.i, i64 %disko.0)
  %cmp29.i = icmp eq i64 %add28.i, %disko.0
  %or.cond508 = select i1 %cmp25.i, i1 %cmp29.i, i1 false
  %99 = xor i32 %83, %cache.sroa.17.0520669
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %99)
  %cmp33.i = icmp ult i32 %99, 2
  %or.cond509 = select i1 %or.cond508, i1 %cmp33.i, i1 false
  br i1 %or.cond509, label %if.then34.i, label %if.end38.i

if.then34.i:                                      ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #16
  %add36.i = add i64 %sub104, %cache.sroa.12.0519670
  %or.i = or i32 %spec.select332, %cache.sroa.17.0520669
  br label %try_submit_last.i

if.end38.i:                                       ; preds = %if.end21.i
  %call.i = call i32 @fiemap_fill_next_extent(ptr noundef %fieinfo, i64 noundef %cache.sroa.0.0516672, i64 noundef %cache.sroa.7.0518671, i64 noundef %cache.sroa.12.0519670, i32 noundef %cache.sroa.17.0520669) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool44.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool44.not.i, label %if.end38.i.try_submit_last.i_crit_edge, label %if.end38.i.emit_fiemap_extent.exit_crit_edge

if.end38.i.emit_fiemap_extent.exit_crit_edge:     ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %emit_fiemap_extent.exit

if.end38.i.try_submit_last.i_crit_edge:           ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %try_submit_last.i

try_submit_last.i:                                ; preds = %if.end38.i.try_submit_last.i_crit_edge, %if.then34.i, %if.end184.try_submit_last.i_crit_edge
  %cache.sroa.0.1 = phi i64 [ %cache.sroa.0.0516672, %if.then34.i ], [ %59, %if.end38.i.try_submit_last.i_crit_edge ], [ %59, %if.end184.try_submit_last.i_crit_edge ]
  %cache.sroa.7.1 = phi i64 [ %cache.sroa.7.0518671, %if.then34.i ], [ %disko.0, %if.end38.i.try_submit_last.i_crit_edge ], [ %disko.0, %if.end184.try_submit_last.i_crit_edge ]
  %cache.sroa.12.1 = phi i64 [ %add36.i, %if.then34.i ], [ %sub104, %if.end38.i.try_submit_last.i_crit_edge ], [ %sub104, %if.end184.try_submit_last.i_crit_edge ]
  %cache.sroa.17.1 = phi i32 [ %or.i, %if.then34.i ], [ %spec.select332, %if.end38.i.try_submit_last.i_crit_edge ], [ %spec.select332, %if.end184.try_submit_last.i_crit_edge ]
  %cache.sroa.23.1 = phi i8 [ %cache.sroa.23.0521668, %if.then34.i ], [ 1, %if.end38.i.try_submit_last.i_crit_edge ], [ 1, %if.end184.try_submit_last.i_crit_edge ]
  %and53.i = and i32 %cache.sroa.17.1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and53.i)
  %tobool54.not.i = icmp eq i32 %and53.i, 0
  br i1 %tobool54.not.i, label %try_submit_last.i.while.cond_crit_edge, label %if.then55.i

try_submit_last.i.while.cond_crit_edge:           ; preds = %try_submit_last.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond

if.then55.i:                                      ; preds = %try_submit_last.i
  call void @__sanitizer_cov_trace_pc() #16
  %call60.i = call i32 @fiemap_fill_next_extent(ptr noundef %fieinfo, i64 noundef %cache.sroa.0.1, i64 noundef %cache.sroa.7.1, i64 noundef %cache.sroa.12.1, i32 noundef %cache.sroa.17.1) #14
  br label %emit_fiemap_extent.exit

emit_fiemap_extent.exit:                          ; preds = %if.then55.i, %if.end38.i.emit_fiemap_extent.exit_crit_edge
  %cache.sroa.0.2 = phi i64 [ %cache.sroa.0.1, %if.then55.i ], [ %cache.sroa.0.0516672, %if.end38.i.emit_fiemap_extent.exit_crit_edge ]
  %cache.sroa.7.2 = phi i64 [ %cache.sroa.7.1, %if.then55.i ], [ %cache.sroa.7.0518671, %if.end38.i.emit_fiemap_extent.exit_crit_edge ]
  %cache.sroa.12.2 = phi i64 [ %cache.sroa.12.1, %if.then55.i ], [ %cache.sroa.12.0519670, %if.end38.i.emit_fiemap_extent.exit_crit_edge ]
  %cache.sroa.17.2 = phi i32 [ %cache.sroa.17.1, %if.then55.i ], [ %cache.sroa.17.0520669, %if.end38.i.emit_fiemap_extent.exit_crit_edge ]
  %retval.0.i396 = phi i32 [ %call60.i, %if.then55.i ], [ %call.i, %if.end38.i.emit_fiemap_extent.exit_crit_edge ]
  %100 = zext i32 %retval.0.i396 to i64
  call void @__sanitizer_cov_trace_switch(i64 %100, ptr @__sancov_gen_cov_switch_values.139)
  switch i32 %retval.0.i396, label %emit_fiemap_extent.exit.if.end203_crit_edge [
    i32 0, label %emit_fiemap_extent.exit.while.cond_crit_edge
    i32 1, label %emit_fiemap_extent.exit.if.end203.loopexit_crit_edge
  ]

emit_fiemap_extent.exit.if.end203.loopexit_crit_edge: ; preds = %emit_fiemap_extent.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end203.loopexit

emit_fiemap_extent.exit.while.cond_crit_edge:     ; preds = %emit_fiemap_extent.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond

emit_fiemap_extent.exit.if.end203_crit_edge:      ; preds = %emit_fiemap_extent.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end203

out_free:                                         ; preds = %lor.lhs.false86.out_free_crit_edge, %while.body.out_free_crit_edge, %while.cond.preheader.out_free_crit_edge
  %em.0525.lcssa = phi ptr [ %call8.i, %while.cond.preheader.out_free_crit_edge ], [ %em.0525664, %lor.lhs.false86.out_free_crit_edge ], [ %retval.0.i390434, %while.body.out_free_crit_edge ]
  %ret.1523.lcssa = phi i32 [ %ret.0, %while.cond.preheader.out_free_crit_edge ], [ %ret.1523667, %lor.lhs.false86.out_free_crit_edge ], [ 0, %while.body.out_free_crit_edge ]
  %cache.sroa.23.0521.lcssa = phi i8 [ 0, %while.cond.preheader.out_free_crit_edge ], [ %cache.sroa.23.0521668, %lor.lhs.false86.out_free_crit_edge ], [ %cache.sroa.23.3.ph, %while.body.out_free_crit_edge ]
  %cache.sroa.17.0520.lcssa = phi i32 [ 0, %while.cond.preheader.out_free_crit_edge ], [ %cache.sroa.17.0520669, %lor.lhs.false86.out_free_crit_edge ], [ %cache.sroa.17.3.ph, %while.body.out_free_crit_edge ]
  %cache.sroa.12.0519.lcssa = phi i64 [ 0, %while.cond.preheader.out_free_crit_edge ], [ %cache.sroa.12.0519670, %lor.lhs.false86.out_free_crit_edge ], [ %cache.sroa.12.3.ph, %while.body.out_free_crit_edge ]
  %cache.sroa.7.0518.lcssa = phi i64 [ 0, %while.cond.preheader.out_free_crit_edge ], [ %cache.sroa.7.0518671, %lor.lhs.false86.out_free_crit_edge ], [ %cache.sroa.7.3.ph, %while.body.out_free_crit_edge ]
  %cache.sroa.0.0516.lcssa = phi i64 [ 0, %while.cond.preheader.out_free_crit_edge ], [ %cache.sroa.0.0516672, %lor.lhs.false86.out_free_crit_edge ], [ %cache.sroa.0.3.ph, %while.body.out_free_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.1523.lcssa)
  %tobool200.not = icmp eq i32 %ret.1523.lcssa, 0
  br i1 %tobool200.not, label %out_free.if.then201_crit_edge, label %out_free.if.end203_crit_edge

out_free.if.end203_crit_edge:                     ; preds = %out_free
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end203

out_free.if.then201_crit_edge:                    ; preds = %out_free
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then201

if.then201:                                       ; preds = %out_free.if.then201_crit_edge, %while.cond.if.then201_crit_edge
  %em.2565 = phi ptr [ %em.0525.lcssa, %out_free.if.then201_crit_edge ], [ %retval.0.i390434, %while.cond.if.then201_crit_edge ]
  %cache.sroa.23.4564 = phi i8 [ %cache.sroa.23.0521.lcssa, %out_free.if.then201_crit_edge ], [ %cache.sroa.23.3.ph, %while.cond.if.then201_crit_edge ]
  %cache.sroa.17.4563 = phi i32 [ %cache.sroa.17.0520.lcssa, %out_free.if.then201_crit_edge ], [ %cache.sroa.17.3.ph, %while.cond.if.then201_crit_edge ]
  %cache.sroa.12.4562 = phi i64 [ %cache.sroa.12.0519.lcssa, %out_free.if.then201_crit_edge ], [ %cache.sroa.12.3.ph, %while.cond.if.then201_crit_edge ]
  %cache.sroa.7.4561 = phi i64 [ %cache.sroa.7.0518.lcssa, %out_free.if.then201_crit_edge ], [ %cache.sroa.7.3.ph, %while.cond.if.then201_crit_edge ]
  %cache.sroa.0.4560 = phi i64 [ %cache.sroa.0.0516.lcssa, %out_free.if.then201_crit_edge ], [ %cache.sroa.0.3.ph, %while.cond.if.then201_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %cache.sroa.23.4564)
  %tobool.not.i398 = icmp eq i8 %cache.sroa.23.4564, 0
  br i1 %tobool.not.i398, label %if.then201.if.end203_crit_edge, label %if.end.i401

if.then201.if.end203_crit_edge:                   ; preds = %if.then201
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end203

if.end.i401:                                      ; preds = %if.then201
  call void @__sanitizer_cov_trace_pc() #16
  %call.i400 = call i32 @fiemap_fill_next_extent(ptr noundef %fieinfo, i64 noundef %cache.sroa.0.4560, i64 noundef %cache.sroa.7.4561, i64 noundef %cache.sroa.12.4562, i32 noundef %cache.sroa.17.4563) #14
  %101 = call i32 @llvm.smin.i32(i32 %call.i400, i32 0) #14
  br label %if.end203

if.end203.loopexit:                               ; preds = %emit_fiemap_extent.exit.if.end203.loopexit_crit_edge, %btrfs_ino.exit364.if.end203.loopexit_crit_edge
  %em.2482.ph = phi ptr [ %retval.0.i390434, %emit_fiemap_extent.exit.if.end203.loopexit_crit_edge ], [ %em.0525664, %btrfs_ino.exit364.if.end203.loopexit_crit_edge ]
  %ret.6.ph = phi i32 [ 0, %emit_fiemap_extent.exit.if.end203.loopexit_crit_edge ], [ %call142, %btrfs_ino.exit364.if.end203.loopexit_crit_edge ]
  br label %if.end203

if.end203:                                        ; preds = %if.end203.loopexit, %if.end.i401, %if.then201.if.end203_crit_edge, %out_free.if.end203_crit_edge, %emit_fiemap_extent.exit.if.end203_crit_edge, %emit_fiemap_extent.exit.thread
  %em.2482 = phi ptr [ %em.0525.lcssa, %out_free.if.end203_crit_edge ], [ %em.2565, %if.end.i401 ], [ %em.2565, %if.then201.if.end203_crit_edge ], [ %retval.0.i390434, %emit_fiemap_extent.exit.thread ], [ %em.2482.ph, %if.end203.loopexit ], [ %retval.0.i390434, %emit_fiemap_extent.exit.if.end203_crit_edge ]
  %ret.6 = phi i32 [ %ret.1523.lcssa, %out_free.if.end203_crit_edge ], [ %101, %if.end.i401 ], [ 0, %if.then201.if.end203_crit_edge ], [ -22, %emit_fiemap_extent.exit.thread ], [ %ret.6.ph, %if.end203.loopexit ], [ %retval.0.i396, %emit_fiemap_extent.exit.if.end203_crit_edge ]
  call void @free_extent_map(ptr noundef %em.2482) #14
  br label %out

out:                                              ; preds = %if.end203, %cleanup197.thread463, %if.then77, %get_extent_skip_holes.exit.out_crit_edge, %if.end15.i.out_crit_edge, %while.cond.i.out_crit_edge, %btrfs_ino.exit349.out_crit_edge
  %ret.7 = phi i32 [ %52, %if.then77 ], [ %ret.6, %if.end203 ], [ %ret.0, %get_extent_skip_holes.exit.out_crit_edge ], [ %97, %cleanup197.thread463 ], [ %ret.0, %btrfs_ino.exit349.out_crit_edge ], [ %ret.0, %while.cond.i.out_crit_edge ], [ %ret.0, %if.end15.i.out_crit_edge ]
  %call.i403 = call i32 @__clear_extent_bit(ptr noundef %io_tree, i64 noundef %and, i64 noundef %or, i32 noundef 4, i32 noundef 1, i32 noundef 0, ptr noundef nonnull %cached_state, i32 noundef 3136, ptr noundef null) #14
  br label %out_free_ulist

out_free_ulist:                                   ; preds = %out, %btrfs_ino.exit.out_free_ulist_crit_edge, %if.end4.out_free_ulist_crit_edge
  %ret.8 = phi i32 [ %call19, %btrfs_ino.exit.out_free_ulist_crit_edge ], [ %ret.7, %out ], [ -12, %if.end4.out_free_ulist_crit_edge ]
  call void @btrfs_free_path(ptr noundef nonnull %call2) #14
  call void @ulist_free(ptr noundef %call5) #14
  call void @ulist_free(ptr noundef %call6) #14
  br label %cleanup208

cleanup208:                                       ; preds = %out_free_ulist, %if.end.cleanup208_crit_edge, %entry.cleanup208_crit_edge
  %retval.0 = phi i32 [ %ret.8, %out_free_ulist ], [ -22, %entry.cleanup208_crit_edge ], [ -12, %if.end.cleanup208_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cached_state) #14
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_alloc_path() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @ulist_alloc(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_lookup_file_extent(ptr noundef, ptr noundef, ptr noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_release_path(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_check_shared(ptr noundef, i64 noundef, i64 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_free_path(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ulist_free(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @extent_buffer_under_io(ptr noundef %eb) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %io_pages = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 6
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %io_pages, i32 noundef 4) #14
  %0 = ptrtoint ptr %io_pages to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %io_pages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.lor.end_crit_edge

entry.lor.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %lor.end

lor.lhs.false:                                    ; preds = %entry
  %bflags = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 2
  %2 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %bflags, align 4
  %4 = and i32 %3, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool2.not = icmp eq i32 %4, 0
  br i1 %tobool2.not, label %lor.rhs, label %lor.lhs.false.lor.end_crit_edge

lor.lhs.false.lor.end_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %lor.end

lor.rhs:                                          ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  %5 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %bflags, align 4
  %7 = lshr i32 %6, 1
  %.lobit = and i32 %7, 1
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.lor.end_crit_edge, %entry.lor.end_crit_edge
  %8 = phi i32 [ 1, %lor.lhs.false.lor.end_crit_edge ], [ 1, %entry.lor.end_crit_edge ], [ %.lobit, %lor.rhs ]
  ret i32 %8
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @btrfs_clone_extent_buffer(ptr nocapture noundef readonly %src) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %len.i = getelementptr inbounds %struct.extent_buffer, ptr %src, i32 0, i32 1
  %0 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len.i, align 8
  %shr.i = lshr i32 %1, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %1)
  %tobool.not.i = icmp ult i32 %1, 4096
  %shr..i = select i1 %tobool.not.i, i32 1, i32 %shr.i
  %fs_info = getelementptr inbounds %struct.extent_buffer, ptr %src, i32 0, i32 3
  %2 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %fs_info, align 8
  %4 = ptrtoint ptr %src to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %src, align 8
  %call1 = tail call fastcc ptr @__alloc_extent_buffer(ptr noundef %3, i64 noundef %5, i32 noundef %1)
  %cmp = icmp eq ptr %call1, null
  br i1 %cmp, label %entry.cleanup37_crit_edge, label %if.end

entry.cleanup37_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup37

if.end:                                           ; preds = %entry
  %bflags = getelementptr inbounds %struct.extent_buffer, ptr %call1, i32 0, i32 2
  tail call void @_set_bit(i32 noundef 8, ptr noundef %bflags) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr..i)
  %cmp282.not = icmp eq i32 %shr..i, 0
  br i1 %cmp282.not, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body:                                         ; preds = %if.end26.for.body_crit_edge, %if.end.for.body_crit_edge
  %i.083 = phi i32 [ %inc, %if.end26.for.body_crit_edge ], [ 0, %if.end.for.body_crit_edge ]
  %call38.i.i.i = tail call ptr @__alloc_pages(i32 noundef 3136, i32 noundef 0, i32 noundef 0, ptr noundef null) #14
  %tobool.not = icmp eq ptr %call38.i.i.i, null
  br i1 %tobool.not, label %if.then4, label %if.end5

if.then4:                                         ; preds = %for.body
  tail call fastcc void @btrfs_release_extent_buffer_pages(ptr noundef %call1) #14
  %fs_info.i = getelementptr inbounds %struct.extent_buffer, ptr %call1, i32 0, i32 3
  %6 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %fs_info.i, align 8
  %eb_leak_lock.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %7, i32 0, i32 189
  %leak_list.i = getelementptr inbounds %struct.extent_buffer, ptr %call1, i32 0, i32 14
  %call3.i.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %eb_leak_lock.i) #14
  %call.i.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %leak_list.i) #14
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %if.then4.btrfs_release_extent_buffer.exit_crit_edge

if.then4.btrfs_release_extent_buffer.exit_crit_edge: ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_release_extent_buffer.exit

if.end.i.i.i.i:                                   ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #16
  %prev.i.i.i.i = getelementptr inbounds %struct.extent_buffer, ptr %call1, i32 0, i32 14, i32 1
  %8 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %prev.i.i.i.i, align 4
  %10 = ptrtoint ptr %leak_list.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %leak_list.i, align 4
  %prev1.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %prev1.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %9, ptr %prev1.i.i.i.i.i, align 4
  %13 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr %11, ptr %9, align 4
  br label %btrfs_release_extent_buffer.exit

btrfs_release_extent_buffer.exit:                 ; preds = %if.end.i.i.i.i, %if.then4.btrfs_release_extent_buffer.exit_crit_edge
  %14 = ptrtoint ptr %leak_list.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr inttoptr (i32 256 to ptr), ptr %leak_list.i, align 4
  %prev.i.i.i = getelementptr inbounds %struct.extent_buffer, ptr %call1, i32 0, i32 14, i32 1
  %15 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i.i, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %eb_leak_lock.i, i32 noundef %call3.i.i) #14
  br label %cleanup37.sink.split

if.end5:                                          ; preds = %for.body
  %call6 = tail call fastcc i32 @attach_extent_buffer_page(ptr noundef nonnull %call1, ptr noundef nonnull %call38.i.i.i, ptr noundef null)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %cmp7 = icmp slt i32 %call6, 0
  %16 = getelementptr inbounds %struct.page, ptr %call38.i.i.i, i32 0, i32 1
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %16, align 4
  %and.i.i61 = and i32 %18, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i61)
  %tobool.not.i.i62 = icmp eq i32 %and.i.i61, 0
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end5
  br i1 %tobool.not.i.i62, label %if.end.i.i65, label %if.then.i.i64, !prof !322

if.then.i.i64:                                    ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i63 = add i32 %18, -1
  br label %_compound_head.exit.i67

if.end.i.i65:                                     ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #16
  %19 = ptrtoint ptr %call38.i.i.i to i32
  br label %_compound_head.exit.i67

_compound_head.exit.i67:                          ; preds = %if.end.i.i65, %if.then.i.i64
  %retval.0.i.i66 = phi i32 [ %sub.i.i63, %if.then.i.i64 ], [ %19, %if.end.i.i65 ]
  %20 = inttoptr i32 %retval.0.i.i66 to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %20, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #14
  %21 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %cmp.i.i.i.i = icmp eq i32 %22, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !319

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i67
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %20, ptr noundef nonnull @.str.57) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #14, !srcloc !351
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i67
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !352
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #14
  %23 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #14, !srcloc !353
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %23, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !354
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@btrfs_clone_extent_buffer, %if.then.i.i.i.i.i)) #14
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !326

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %20, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #14
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.put_page.exit_crit_edge

folio_put_testzero.exit.i.i.put_page.exit_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %put_page.exit

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__put_page(ptr noundef %20) #14
  br label %put_page.exit

put_page.exit:                                    ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.put_page.exit_crit_edge
  tail call fastcc void @btrfs_release_extent_buffer_pages(ptr noundef %call1) #14
  %fs_info.i68 = getelementptr inbounds %struct.extent_buffer, ptr %call1, i32 0, i32 3
  %24 = ptrtoint ptr %fs_info.i68 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %fs_info.i68, align 8
  %eb_leak_lock.i69 = getelementptr inbounds %struct.btrfs_fs_info, ptr %25, i32 0, i32 189
  %leak_list.i70 = getelementptr inbounds %struct.extent_buffer, ptr %call1, i32 0, i32 14
  %call3.i.i71 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %eb_leak_lock.i69) #14
  %call.i.i.i.i72 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %leak_list.i70) #14
  br i1 %call.i.i.i.i72, label %if.end.i.i.i.i75, label %put_page.exit.btrfs_release_extent_buffer.exit77_crit_edge

put_page.exit.btrfs_release_extent_buffer.exit77_crit_edge: ; preds = %put_page.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_release_extent_buffer.exit77

if.end.i.i.i.i75:                                 ; preds = %put_page.exit
  call void @__sanitizer_cov_trace_pc() #16
  %prev.i.i.i.i73 = getelementptr inbounds %struct.extent_buffer, ptr %call1, i32 0, i32 14, i32 1
  %26 = ptrtoint ptr %prev.i.i.i.i73 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %prev.i.i.i.i73, align 4
  %28 = ptrtoint ptr %leak_list.i70 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %leak_list.i70, align 4
  %prev1.i.i.i.i.i74 = getelementptr inbounds %struct.list_head, ptr %29, i32 0, i32 1
  %30 = ptrtoint ptr %prev1.i.i.i.i.i74 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %27, ptr %prev1.i.i.i.i.i74, align 4
  %31 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %31)
  store volatile ptr %29, ptr %27, align 4
  br label %btrfs_release_extent_buffer.exit77

btrfs_release_extent_buffer.exit77:               ; preds = %if.end.i.i.i.i75, %put_page.exit.btrfs_release_extent_buffer.exit77_crit_edge
  %32 = ptrtoint ptr %leak_list.i70 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr inttoptr (i32 256 to ptr), ptr %leak_list.i70, align 4
  %prev.i.i.i76 = getelementptr inbounds %struct.extent_buffer, ptr %call1, i32 0, i32 14, i32 1
  %33 = ptrtoint ptr %prev.i.i.i76 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i.i76, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %eb_leak_lock.i69, i32 noundef %call3.i.i71) #14
  br label %cleanup37.sink.split

if.end9:                                          ; preds = %if.end5
  br i1 %tobool.not.i.i62, label %if.end.i.i, label %if.then.i.i, !prof !322

if.then.i.i:                                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %18, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  %34 = ptrtoint ptr %call38.i.i.i to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %34, %if.end.i.i ]
  %35 = inttoptr i32 %retval.0.i.i to ptr
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %35, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %37)
  %cmp.i.not.i = icmp eq i32 %37, -1
  %38 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %16, align 4
  %and.i13.i = and i32 %39, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i)
  %tobool.not.i14.i = icmp eq i32 %and.i13.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end8.i, !prof !319

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i17.i, label %if.then.i16.i, !prof !322

if.then.i16.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i15.i = add i32 %39, -1
  br label %_compound_head.exit19.i

if.end.i17.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %40 = ptrtoint ptr %call38.i.i.i to i32
  br label %_compound_head.exit19.i

_compound_head.exit19.i:                          ; preds = %if.end.i17.i, %if.then.i16.i
  %retval.0.i18.i = phi i32 [ %sub.i15.i, %if.then.i16.i ], [ %40, %if.end.i17.i ]
  %41 = inttoptr i32 %retval.0.i18.i to ptr
  tail call void @dump_page(ptr noundef %41, ptr noundef nonnull @.str.86) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 420, 0\0A.popsection", ""() #14, !srcloc !357
  unreachable

do.end8.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i24.i, label %if.then.i23.i, !prof !322

if.then.i23.i:                                    ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i22.i = add i32 %39, -1
  br label %PageDirty.exit

if.end.i24.i:                                     ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  %42 = ptrtoint ptr %call38.i.i.i to i32
  br label %PageDirty.exit

PageDirty.exit:                                   ; preds = %if.end.i24.i, %if.then.i23.i
  %retval.0.i25.i = phi i32 [ %sub.i22.i, %if.then.i23.i ], [ %42, %if.end.i24.i ]
  %43 = inttoptr i32 %retval.0.i25.i to ptr
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %43, align 4
  %46 = and i32 %45, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool11.not = icmp eq i32 %46, 0
  br i1 %tobool11.not, label %PageDirty.exit.if.end26_crit_edge, label %do.end, !prof !322

PageDirty.exit.if.end26_crit_edge:                ; preds = %PageDirty.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end26

do.end:                                           ; preds = %PageDirty.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 5922, i32 noundef 9, ptr noundef null) #14
  br label %if.end26

if.end26:                                         ; preds = %do.end, %PageDirty.exit.if.end26_crit_edge
  %arrayidx = getelementptr %struct.extent_buffer, ptr %call1, i32 0, i32 12, i32 %i.083
  %47 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %call38.i.i.i, ptr %arrayidx, align 4
  %call33 = tail call ptr @page_address(ptr noundef nonnull %call38.i.i.i) #14
  %arrayidx35 = getelementptr %struct.extent_buffer, ptr %src, i32 0, i32 12, i32 %i.083
  %48 = ptrtoint ptr %arrayidx35 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %arrayidx35, align 4
  %call36 = tail call ptr @page_address(ptr noundef %49) #14
  tail call void @copy_page(ptr noundef %call33, ptr noundef %call36) #14
  %inc = add nuw nsw i32 %i.083, 1
  %exitcond.not = icmp eq i32 %inc, %shr..i
  br i1 %exitcond.not, label %if.end26.for.end_crit_edge, label %if.end26.for.body_crit_edge

if.end26.for.body_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

if.end26.for.end_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %if.end26.for.end_crit_edge, %if.end.for.end_crit_edge
  %fs_info1.i = getelementptr inbounds %struct.extent_buffer, ptr %call1, i32 0, i32 3
  %50 = ptrtoint ptr %fs_info1.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %fs_info1.i, align 8
  tail call void @_set_bit(i32 noundef 0, ptr noundef %bflags) #14
  %len.i.i = getelementptr inbounds %struct.extent_buffer, ptr %call1, i32 0, i32 1
  %52 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %len.i.i, align 8
  %shr.i.i78 = lshr i32 %53, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %53)
  %tobool.not.i.i79 = icmp ult i32 %53, 4096
  %shr..i.i = select i1 %tobool.not.i.i79, i32 1, i32 %shr.i.i78
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr..i.i)
  %cmp9.not.i = icmp eq i32 %shr..i.i, 0
  br i1 %cmp9.not.i, label %for.end.cleanup37_crit_edge, label %for.end.for.body.i_crit_edge

for.end.for.body.i_crit_edge:                     ; preds = %for.end
  br label %for.body.i

for.end.cleanup37_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup37

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.end.for.body.i_crit_edge
  %i.010.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %for.end.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.extent_buffer, ptr %call1, i32 0, i32 12, i32 %i.010.i
  %54 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %arrayidx.i, align 4
  %56 = ptrtoint ptr %call1 to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %call1, align 8
  %58 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %len.i.i, align 8
  tail call void @btrfs_page_set_uptodate(ptr noundef %51, ptr noundef %55, i64 noundef %57, i32 noundef %59) #14
  %inc.i = add nuw nsw i32 %i.010.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %shr..i.i
  br i1 %exitcond.not.i, label %for.body.i.cleanup37_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.body.i.cleanup37_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup37

cleanup37.sink.split:                             ; preds = %btrfs_release_extent_buffer.exit77, %btrfs_release_extent_buffer.exit
  %60 = load ptr, ptr @extent_buffer_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %60, ptr noundef %call1) #14
  br label %cleanup37

cleanup37:                                        ; preds = %cleanup37.sink.split, %for.body.i.cleanup37_crit_edge, %for.end.cleanup37_crit_edge, %entry.cleanup37_crit_edge
  %retval.2 = phi ptr [ null, %entry.cleanup37_crit_edge ], [ %call1, %for.end.cleanup37_crit_edge ], [ null, %cleanup37.sink.split ], [ %call1, %for.body.i.cleanup37_crit_edge ]
  ret ptr %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @__alloc_extent_buffer(ptr noundef %fs_info, i64 noundef %start, i32 noundef %len) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @extent_buffer_cache, align 4
  %call.i = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %0, i32 noundef 36160) #14
  %1 = ptrtoint ptr %call.i to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 %start, ptr %call.i, align 8
  %len2 = getelementptr inbounds %struct.extent_buffer, ptr %call.i, i32 0, i32 1
  %2 = ptrtoint ptr %len2 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %len, ptr %len2, align 8
  %fs_info3 = getelementptr inbounds %struct.extent_buffer, ptr %call.i, i32 0, i32 3
  %3 = ptrtoint ptr %fs_info3 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %fs_info, ptr %fs_info3, align 8
  %bflags = getelementptr inbounds %struct.extent_buffer, ptr %call.i, i32 0, i32 2
  %4 = ptrtoint ptr %bflags to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %bflags, align 4
  %lock = getelementptr inbounds %struct.extent_buffer, ptr %call.i, i32 0, i32 11
  tail call void @__init_rwsem(ptr noundef %lock, ptr noundef nonnull @.str.121, ptr noundef nonnull @__alloc_extent_buffer.__key) #14
  %eb_leak_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 189
  %leak_list = getelementptr inbounds %struct.extent_buffer, ptr %call.i, i32 0, i32 14
  %allocated_ebs = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 190
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %eb_leak_lock) #14
  %5 = ptrtoint ptr %allocated_ebs to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %allocated_ebs, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %leak_list, ptr noundef %allocated_ebs, ptr noundef %6) #14
  br i1 %call.i.i.i, label %if.end.i.i.i, label %entry.btrfs_leak_debug_add.exit_crit_edge

entry.btrfs_leak_debug_add.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_leak_debug_add.exit

if.end.i.i.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %leak_list, ptr %prev1.i.i.i, align 4
  %8 = ptrtoint ptr %leak_list to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %6, ptr %leak_list, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.extent_buffer, ptr %call.i, i32 0, i32 14, i32 1
  %9 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %allocated_ebs, ptr %prev3.i.i.i, align 8
  %10 = ptrtoint ptr %allocated_ebs to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %leak_list, ptr %allocated_ebs, align 4
  br label %btrfs_leak_debug_add.exit

btrfs_leak_debug_add.exit:                        ; preds = %if.end.i.i.i, %entry.btrfs_leak_debug_add.exit_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %eb_leak_lock, i32 noundef %call2.i) #14
  %release_list = getelementptr inbounds %struct.extent_buffer, ptr %call.i, i32 0, i32 13
  %11 = ptrtoint ptr %release_list to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %release_list, ptr %release_list, align 4
  %prev.i = getelementptr inbounds %struct.extent_buffer, ptr %call.i, i32 0, i32 13, i32 1
  %12 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %release_list, ptr %prev.i, align 8
  %refs_lock = getelementptr inbounds %struct.extent_buffer, ptr %call.i, i32 0, i32 4
  tail call void @__raw_spin_lock_init(ptr noundef %refs_lock, ptr noundef nonnull @.str.123, ptr noundef nonnull @__alloc_extent_buffer.__key.122, i16 noundef signext 3) #14
  %refs = getelementptr inbounds %struct.extent_buffer, ptr %call.i, i32 0, i32 5
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refs, i32 noundef 4) #14
  %13 = ptrtoint ptr %refs to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile i32 1, ptr %refs, align 8
  %io_pages = getelementptr inbounds %struct.extent_buffer, ptr %call.i, i32 0, i32 6
  %call.i.i22 = tail call zeroext i1 @__kasan_check_write(ptr noundef %io_pages, i32 noundef 4) #14
  %14 = ptrtoint ptr %io_pages to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile i32 0, ptr %io_pages, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 65537, i32 %len)
  %cmp = icmp ult i32 %len, 65537
  br i1 %cmp, label %cond.end, label %cond.false, !prof !322

cond.false:                                       ; preds = %btrfs_leak_debug_add.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.124, i32 noundef 5885) #18
  unreachable

cond.end:                                         ; preds = %btrfs_leak_debug_add.exit
  call void @__sanitizer_cov_trace_pc() #16
  ret ptr %call.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @attach_extent_buffer_page(ptr noundef %eb, ptr noundef %page, ptr noundef %prealloc) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info1 = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 3
  %0 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info1, align 8
  %mapping = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %2 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mapping, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.if.end28_crit_edge, label %do.body

entry.if.end28_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end28

do.body:                                          ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %4 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool2.not = icmp eq i32 %4, 0
  br i1 %tobool2.not, label %do.body.if.end28_crit_edge, label %land.rhs

do.body.if.end28_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end28

land.rhs:                                         ; preds = %do.body
  %dep_map = getelementptr inbounds %struct.address_space, ptr %3, i32 0, i32 12, i32 0, i32 0, i32 4
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end28_crit_edge, !prof !319

land.rhs.if.end28_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end28

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 3458, i32 noundef 9, ptr noundef null) #14
  br label %if.end28

if.end28:                                         ; preds = %do.end, %land.rhs.if.end28_crit_edge, %do.body.if.end28_crit_edge, %entry.if.end28_crit_edge
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 167
  %5 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %sectorsize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %6)
  %cmp29 = icmp eq i32 %6, 4096
  %7 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %page, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %8)
  %cmp.i.not.i = icmp eq i32 %8, -1
  br i1 %cmp29, label %if.then30, label %if.end66

if.then30:                                        ; preds = %if.end28
  br i1 %cmp.i.not.i, label %if.then.i, label %PagePrivate.exit, !prof !319

if.then.i:                                        ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.80) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 452, 0\0A.popsection", ""() #14, !srcloc !363
  unreachable

PagePrivate.exit:                                 ; preds = %if.then30
  %9 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %page, align 4
  %11 = and i32 %10, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool32.not = icmp eq i32 %11, 0
  br i1 %tobool32.not, label %if.then33, label %if.else

if.then33:                                        ; preds = %PagePrivate.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @attach_page_private(ptr noundef %page, ptr noundef %eb)
  br label %cleanup

if.else:                                          ; preds = %PagePrivate.exit
  %private = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 3
  %12 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %private, align 4
  %14 = ptrtoint ptr %eb to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %14)
  %cmp35.not = icmp eq i32 %13, %14
  br i1 %cmp35.not, label %if.else.cleanup_crit_edge, label %do.end51, !prof !322

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end51:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 3464, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end66:                                         ; preds = %if.end28
  br i1 %cmp.i.not.i, label %if.then.i92, label %PagePrivate.exit95, !prof !319

if.then.i92:                                      ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.80) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 452, 0\0A.popsection", ""() #14, !srcloc !363
  unreachable

PagePrivate.exit95:                               ; preds = %if.end66
  %15 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %page, align 4
  %17 = and i32 %16, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool68.not = icmp eq i32 %17, 0
  br i1 %tobool68.not, label %if.end70, label %if.then69

if.then69:                                        ; preds = %PagePrivate.exit95
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @btrfs_free_subpage(ptr noundef %prealloc) #14
  br label %cleanup

if.end70:                                         ; preds = %PagePrivate.exit95
  %tobool71.not = icmp eq ptr %prealloc, null
  br i1 %tobool71.not, label %if.else73, label %if.then72

if.then72:                                        ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @attach_page_private(ptr noundef %page, ptr noundef nonnull %prealloc)
  br label %cleanup

if.else73:                                        ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #16
  %call74 = tail call i32 @btrfs_attach_subpage(ptr noundef %1, ptr noundef %page, i32 noundef 0) #14
  br label %cleanup

cleanup:                                          ; preds = %if.else73, %if.then72, %if.then69, %do.end51, %if.else.cleanup_crit_edge, %if.then33
  %retval.0 = phi i32 [ 0, %if.then69 ], [ 0, %if.else.cleanup_crit_edge ], [ 0, %do.end51 ], [ 0, %if.then33 ], [ 0, %if.then72 ], [ %call74, %if.else73 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @copy_page(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_address(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @set_extent_buffer_uptodate(ptr noundef %eb) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info1 = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 3
  %0 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info1, align 8
  %bflags = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 2
  tail call void @_set_bit(i32 noundef 0, ptr noundef %bflags) #14
  %len.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %2 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %len.i, align 8
  %shr.i = lshr i32 %3, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %3)
  %tobool.not.i = icmp ult i32 %3, 4096
  %shr..i = select i1 %tobool.not.i, i32 1, i32 %shr.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr..i)
  %cmp9.not = icmp eq i32 %shr..i, 0
  br i1 %cmp9.not, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %i.010 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %i.010
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  %6 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %eb, align 8
  %8 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %len.i, align 8
  tail call void @btrfs_page_set_uptodate(ptr noundef %1, ptr noundef %5, i64 noundef %7, i32 noundef %9) #14
  %inc = add nuw nsw i32 %i.010, 1
  %exitcond.not = icmp eq i32 %inc, %shr..i
  br i1 %exitcond.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__alloc_dummy_extent_buffer(ptr noundef %fs_info, i64 noundef %start, i32 noundef %len) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @__alloc_extent_buffer(ptr noundef %fs_info, i64 noundef %start, i32 noundef %len)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup24_crit_edge, label %if.end

entry.cleanup24_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup24

if.end:                                           ; preds = %entry
  %len.i = getelementptr inbounds %struct.extent_buffer, ptr %call, i32 0, i32 1
  %0 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len.i, align 8
  %shr.i = lshr i32 %1, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %1)
  %tobool.not.i = icmp ult i32 %1, 4096
  %shr..i = select i1 %tobool.not.i, i32 1, i32 %shr.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr..i)
  %cmp50.not = icmp eq i32 %shr..i, 0
  br i1 %cmp50.not, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end.for.body_crit_edge
  %i.051 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %if.end.for.body_crit_edge ]
  %call38.i.i.i = tail call ptr @__alloc_pages(i32 noundef 3136, i32 noundef 0, i32 noundef 0, ptr noundef null) #14
  %arrayidx = getelementptr %struct.extent_buffer, ptr %call, i32 0, i32 12, i32 %i.051
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %call38.i.i.i, ptr %arrayidx, align 4
  %tobool5.not = icmp eq ptr %call38.i.i.i, null
  br i1 %tobool5.not, label %for.body.cleanup_crit_edge, label %if.end7

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end7:                                          ; preds = %for.body
  %call10 = tail call fastcc i32 @attach_extent_buffer_page(ptr noundef nonnull %call, ptr noundef nonnull %call38.i.i.i, ptr noundef null)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %cmp11 = icmp slt i32 %call10, 0
  br i1 %cmp11, label %if.end7.cleanup_crit_edge, label %for.inc

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %if.end7.cleanup_crit_edge, %for.body.cleanup_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.051)
  %cmp1552.not = icmp eq i32 %i.051, 0
  br i1 %cmp1552.not, label %cleanup.for.end23_crit_edge, label %cleanup.for.body16_crit_edge

cleanup.for.body16_crit_edge:                     ; preds = %cleanup
  br label %for.body16

cleanup.for.end23_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end23

for.inc:                                          ; preds = %if.end7
  %inc = add nuw nsw i32 %i.051, 1
  %exitcond.not = icmp eq i32 %inc, %shr..i
  br i1 %exitcond.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end.for.end_crit_edge
  %fs_info1.i = getelementptr inbounds %struct.extent_buffer, ptr %call, i32 0, i32 3
  %3 = ptrtoint ptr %fs_info1.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %fs_info1.i, align 8
  %bflags.i = getelementptr inbounds %struct.extent_buffer, ptr %call, i32 0, i32 2
  tail call void @_set_bit(i32 noundef 0, ptr noundef %bflags.i) #14
  %5 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %len.i, align 8
  %shr.i.i = lshr i32 %6, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %6)
  %tobool.not.i.i = icmp ult i32 %6, 4096
  %shr..i.i = select i1 %tobool.not.i.i, i32 1, i32 %shr.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr..i.i)
  %cmp9.not.i = icmp eq i32 %shr..i.i, 0
  br i1 %cmp9.not.i, label %for.end.set_extent_buffer_uptodate.exit_crit_edge, label %for.end.for.body.i_crit_edge

for.end.for.body.i_crit_edge:                     ; preds = %for.end
  br label %for.body.i

for.end.set_extent_buffer_uptodate.exit_crit_edge: ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %set_extent_buffer_uptodate.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.end.for.body.i_crit_edge
  %i.010.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %for.end.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.extent_buffer, ptr %call, i32 0, i32 12, i32 %i.010.i
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx.i, align 4
  %9 = ptrtoint ptr %call to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %call, align 8
  %11 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %len.i, align 8
  tail call void @btrfs_page_set_uptodate(ptr noundef %4, ptr noundef %8, i64 noundef %10, i32 noundef %12) #14
  %inc.i = add nuw nsw i32 %i.010.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %shr..i.i
  br i1 %exitcond.not.i, label %for.body.i.set_extent_buffer_uptodate.exit_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.body.i.set_extent_buffer_uptodate.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %set_extent_buffer_uptodate.exit

set_extent_buffer_uptodate.exit:                  ; preds = %for.body.i.set_extent_buffer_uptodate.exit_crit_edge, %for.end.set_extent_buffer_uptodate.exit_crit_edge
  %pages.i = getelementptr inbounds %struct.extent_buffer, ptr %call, i32 0, i32 12
  %13 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %pages.i, align 4
  %call.i = tail call ptr @page_address(ptr noundef %14) #14
  %15 = ptrtoint ptr %call to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %call, align 8
  %conv.i = trunc i64 %16 to i32
  %and.i = and i32 %conv.i, 4095
  %add.ptr.i = getelementptr i8, ptr %call.i, i32 %and.i
  %nritems.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i, i32 0, i32 7
  %17 = ptrtoint ptr %nritems.i to i32
  call void @__asan_storeN_noabort(i32 %17, i32 4)
  store i32 0, ptr %nritems.i, align 1
  tail call void @_set_bit(i32 noundef 8, ptr noundef %bflags.i) #14
  br label %cleanup24

for.body16:                                       ; preds = %for.body16.for.body16_crit_edge, %cleanup.for.body16_crit_edge
  %i.153 = phi i32 [ %sub, %for.body16.for.body16_crit_edge ], [ %i.051, %cleanup.for.body16_crit_edge ]
  %sub = add nsw i32 %i.153, -1
  %arrayidx18 = getelementptr %struct.extent_buffer, ptr %call, i32 0, i32 12, i32 %sub
  %18 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx18, align 4
  tail call fastcc void @detach_extent_buffer_page(ptr noundef nonnull %call, ptr noundef %19)
  %20 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx18, align 4
  tail call void @__free_pages(ptr noundef %21, i32 noundef 0) #14
  %cmp15 = icmp sgt i32 %i.153, 1
  br i1 %cmp15, label %for.body16.for.body16_crit_edge, label %for.body16.for.end23_crit_edge

for.body16.for.end23_crit_edge:                   ; preds = %for.body16
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end23

for.body16.for.body16_crit_edge:                  ; preds = %for.body16
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body16

for.end23:                                        ; preds = %for.body16.for.end23_crit_edge, %cleanup.for.end23_crit_edge
  %22 = load ptr, ptr @extent_buffer_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %22, ptr noundef nonnull %call) #14
  br label %cleanup24

cleanup24:                                        ; preds = %for.end23, %set_extent_buffer_uptodate.exit, %entry.cleanup24_crit_edge
  %retval.0 = phi ptr [ null, %for.end23 ], [ %call, %set_extent_buffer_uptodate.exit ], [ null, %entry.cleanup24_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @detach_extent_buffer_page(ptr noundef %eb, ptr noundef %page) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info1 = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 3
  %0 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info1, align 8
  %bflags = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 2
  %2 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %bflags, align 4
  %4 = and i32 %3, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %mapping = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %5 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %mapping, align 4
  %private_lock = getelementptr inbounds %struct.address_space, ptr %6, i32 0, i32 12
  tail call void @_raw_spin_lock(ptr noundef %private_lock) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %7 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %page, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %8)
  %cmp.i.not.i = icmp eq i32 %8, -1
  br i1 %cmp.i.not.i, label %if.then.i, label %PagePrivate.exit, !prof !319

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.80) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 452, 0\0A.popsection", ""() #14, !srcloc !363
  unreachable

PagePrivate.exit:                                 ; preds = %if.end
  %9 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %page, align 4
  %11 = and i32 %10, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool4.not = icmp eq i32 %11, 0
  br i1 %tobool4.not, label %if.then5, label %if.end11

if.then5:                                         ; preds = %PagePrivate.exit
  br i1 %tobool.not, label %if.then7, label %if.then5.cleanup_crit_edge

if.then5.cleanup_crit_edge:                       ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then7:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #16
  %mapping8 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %12 = ptrtoint ptr %mapping8 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %mapping8, align 4
  %private_lock9 = getelementptr inbounds %struct.address_space, ptr %13, i32 0, i32 12
  tail call void @_raw_spin_unlock(ptr noundef %private_lock9) #14
  br label %cleanup

if.end11:                                         ; preds = %PagePrivate.exit
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 167
  %14 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %sectorsize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %15)
  %cmp = icmp eq i32 %15, 4096
  br i1 %cmp, label %if.then12, label %if.end76

if.then12:                                        ; preds = %if.end11
  %16 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %page, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %17)
  %cmp.i.not.i109 = icmp eq i32 %17, -1
  br i1 %cmp.i.not.i109, label %if.then.i110, label %PagePrivate.exit113, !prof !319

if.then.i110:                                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.80) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 452, 0\0A.popsection", ""() #14, !srcloc !363
  unreachable

PagePrivate.exit113:                              ; preds = %if.then12
  %18 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %page, align 4
  %20 = and i32 %19, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool14.not = icmp eq i32 %20, 0
  br i1 %tobool14.not, label %PagePrivate.exit113.if.end70_crit_edge, label %land.lhs.true

PagePrivate.exit113.if.end70_crit_edge:           ; preds = %PagePrivate.exit113
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end70

land.lhs.true:                                    ; preds = %PagePrivate.exit113
  %private = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 3
  %21 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %private, align 4
  %23 = ptrtoint ptr %eb to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %22, i32 %23)
  %cmp15 = icmp eq i32 %22, %23
  br i1 %cmp15, label %do.body, label %land.lhs.true.if.end70_crit_edge

land.lhs.true.if.end70_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end70

do.body:                                          ; preds = %land.lhs.true
  %24 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %bflags, align 4
  %26 = and i32 %25, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool19.not = icmp eq i32 %26, 0
  br i1 %tobool19.not, label %do.body31, label %do.body24, !prof !322

do.body24:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5796, 0\0A.popsection", ""() #14, !srcloc !400
  unreachable

do.body31:                                        ; preds = %do.body
  %27 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %27, align 4
  %and.i.i = and i32 %29, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !322

if.then.i.i:                                      ; preds = %do.body31
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %29, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %do.body31
  call void @__sanitizer_cov_trace_pc() #16
  %30 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %30, %if.end.i.i ]
  %31 = inttoptr i32 %retval.0.i.i to ptr
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %31, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %33)
  %cmp.i.not.i116 = icmp eq i32 %33, -1
  %34 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %27, align 4
  %and.i13.i = and i32 %35, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i)
  %tobool.not.i14.i = icmp eq i32 %and.i13.i, 0
  br i1 %cmp.i.not.i116, label %if.then.i117, label %do.end8.i, !prof !319

if.then.i117:                                     ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i17.i, label %if.then.i16.i, !prof !322

if.then.i16.i:                                    ; preds = %if.then.i117
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i15.i = add i32 %35, -1
  br label %_compound_head.exit19.i

if.end.i17.i:                                     ; preds = %if.then.i117
  call void @__sanitizer_cov_trace_pc() #16
  %36 = ptrtoint ptr %page to i32
  br label %_compound_head.exit19.i

_compound_head.exit19.i:                          ; preds = %if.end.i17.i, %if.then.i16.i
  %retval.0.i18.i = phi i32 [ %sub.i15.i, %if.then.i16.i ], [ %36, %if.end.i17.i ]
  %37 = inttoptr i32 %retval.0.i18.i to ptr
  tail call void @dump_page(ptr noundef %37, ptr noundef nonnull @.str.86) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 420, 0\0A.popsection", ""() #14, !srcloc !357
  unreachable

do.end8.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i24.i, label %if.then.i23.i, !prof !322

if.then.i23.i:                                    ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i22.i = add i32 %35, -1
  br label %PageDirty.exit

if.end.i24.i:                                     ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  %38 = ptrtoint ptr %page to i32
  br label %PageDirty.exit

PageDirty.exit:                                   ; preds = %if.end.i24.i, %if.then.i23.i
  %retval.0.i25.i = phi i32 [ %sub.i22.i, %if.then.i23.i ], [ %38, %if.end.i24.i ]
  %39 = inttoptr i32 %retval.0.i25.i to ptr
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %39, align 4
  %42 = and i32 %41, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool33.not = icmp eq i32 %42, 0
  br i1 %tobool33.not, label %do.body50, label %do.body41, !prof !322

do.body41:                                        ; preds = %PageDirty.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5797, 0\0A.popsection", ""() #14, !srcloc !401
  unreachable

do.body50:                                        ; preds = %PageDirty.exit
  %43 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %27, align 4
  %and.i.i120 = and i32 %44, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i120)
  %tobool.not.i.i121 = icmp eq i32 %and.i.i120, 0
  br i1 %tobool.not.i.i121, label %if.end.i.i124, label %if.then.i.i123, !prof !322

if.then.i.i123:                                   ; preds = %do.body50
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i122 = add i32 %44, -1
  br label %_compound_head.exit.i127

if.end.i.i124:                                    ; preds = %do.body50
  call void @__sanitizer_cov_trace_pc() #16
  %45 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i127

_compound_head.exit.i127:                         ; preds = %if.end.i.i124, %if.then.i.i123
  %retval.0.i.i125 = phi i32 [ %sub.i.i122, %if.then.i.i123 ], [ %45, %if.end.i.i124 ]
  %46 = inttoptr i32 %retval.0.i.i125 to ptr
  %47 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %46, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %48)
  %cmp.i.not.i126 = icmp eq i32 %48, -1
  %49 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %27, align 4
  %and.i16.i = and i32 %50, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i)
  %tobool.not.i17.i = icmp eq i32 %and.i16.i, 0
  br i1 %cmp.i.not.i126, label %if.then.i128, label %do.end10.i, !prof !319

if.then.i128:                                     ; preds = %_compound_head.exit.i127
  br i1 %tobool.not.i17.i, label %if.end.i20.i, label %if.then.i19.i, !prof !322

if.then.i19.i:                                    ; preds = %if.then.i128
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i18.i = add i32 %50, -1
  br label %_compound_head.exit22.i

if.end.i20.i:                                     ; preds = %if.then.i128
  call void @__sanitizer_cov_trace_pc() #16
  %51 = ptrtoint ptr %page to i32
  br label %_compound_head.exit22.i

_compound_head.exit22.i:                          ; preds = %if.end.i20.i, %if.then.i19.i
  %retval.0.i21.i = phi i32 [ %sub.i18.i, %if.then.i19.i ], [ %51, %if.end.i20.i ]
  %52 = inttoptr i32 %retval.0.i21.i to ptr
  tail call void @dump_page(ptr noundef %52, ptr noundef nonnull @.str.86) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 461, 0\0A.popsection", ""() #14, !srcloc !392
  unreachable

do.end10.i:                                       ; preds = %_compound_head.exit.i127
  br i1 %tobool.not.i17.i, label %if.end.i27.i, label %if.then.i26.i, !prof !322

if.then.i26.i:                                    ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i25.i = add i32 %50, -1
  br label %PageWriteback.exit

if.end.i27.i:                                     ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  %53 = ptrtoint ptr %page to i32
  br label %PageWriteback.exit

PageWriteback.exit:                               ; preds = %if.end.i27.i, %if.then.i26.i
  %retval.0.i28.i = phi i32 [ %sub.i25.i, %if.then.i26.i ], [ %53, %if.end.i27.i ]
  %54 = inttoptr i32 %retval.0.i28.i to ptr
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %54, align 4
  %57 = and i32 %56, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %57)
  %tobool52.not = icmp eq i32 %57, 0
  br i1 %tobool52.not, label %do.end68, label %do.body60, !prof !322

do.body60:                                        ; preds = %PageWriteback.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5798, 0\0A.popsection", ""() #14, !srcloc !402
  unreachable

do.end68:                                         ; preds = %PageWriteback.exit
  %58 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %27, align 4
  %and.i.i131 = and i32 %59, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i131)
  %tobool.not.i.i132 = icmp eq i32 %and.i.i131, 0
  br i1 %tobool.not.i.i132, label %if.end.i.i135, label %if.then.i.i134, !prof !322

if.then.i.i134:                                   ; preds = %do.end68
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i133 = add i32 %59, -1
  br label %detach_page_private.exit

if.end.i.i135:                                    ; preds = %do.end68
  call void @__sanitizer_cov_trace_pc() #16
  %60 = ptrtoint ptr %page to i32
  br label %detach_page_private.exit

detach_page_private.exit:                         ; preds = %if.end.i.i135, %if.then.i.i134
  %retval.0.i.i136 = phi i32 [ %sub.i.i133, %if.then.i.i134 ], [ %60, %if.end.i.i135 ]
  %61 = inttoptr i32 %retval.0.i.i136 to ptr
  tail call fastcc void @folio_detach_private(ptr noundef %61) #14
  br label %if.end70

if.end70:                                         ; preds = %detach_page_private.exit, %land.lhs.true.if.end70_crit_edge, %PagePrivate.exit113.if.end70_crit_edge
  br i1 %tobool.not, label %if.then72, label %if.end70.cleanup_crit_edge

if.end70.cleanup_crit_edge:                       ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then72:                                        ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #16
  %mapping73 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %62 = ptrtoint ptr %mapping73 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %mapping73, align 4
  %private_lock74 = getelementptr inbounds %struct.address_space, ptr %63, i32 0, i32 12
  tail call void @_raw_spin_unlock(ptr noundef %private_lock74) #14
  br label %cleanup

if.end76:                                         ; preds = %if.end11
  br i1 %tobool.not, label %if.end79, label %if.then78

if.then78:                                        ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @btrfs_detach_subpage(ptr noundef %1, ptr noundef %page) #14
  br label %cleanup

if.end79:                                         ; preds = %if.end76
  tail call void @btrfs_page_dec_eb_refs(ptr noundef %1, ptr noundef %page) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %64 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %64)
  %tobool.not.i = icmp eq i32 %64, 0
  br i1 %tobool.not.i, label %if.end79.if.end.i_crit_edge, label %land.rhs.i

if.end79.if.end.i_crit_edge:                      ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

land.rhs.i:                                       ; preds = %if.end79
  %mapping.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %65 = ptrtoint ptr %mapping.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %mapping.i, align 4
  %dep_map.i = getelementptr inbounds %struct.address_space, ptr %66, i32 0, i32 12, i32 0, i32 0, i32 4
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !319

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 5752, i32 noundef 9, ptr noundef null) #14
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %if.end79.if.end.i_crit_edge
  %67 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %page, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %68)
  %cmp.i.not.i.i = icmp eq i32 %68, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i138, label %PagePrivate.exit.i, !prof !319

if.then.i.i138:                                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.80) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 452, 0\0A.popsection", ""() #14, !srcloc !363
  unreachable

PagePrivate.exit.i:                               ; preds = %if.end.i
  %69 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %page, align 4
  %71 = and i32 %70, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %tobool25.not.i = icmp eq i32 %71, 0
  br i1 %tobool25.not.i, label %PagePrivate.exit.i.if.then81_crit_edge, label %if.then26.i

PagePrivate.exit.i.if.then81_crit_edge:           ; preds = %PagePrivate.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then81

if.then26.i:                                      ; preds = %PagePrivate.exit.i
  %private.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 3
  %72 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %private.i, align 4
  %74 = inttoptr i32 %73 to ptr
  %75 = getelementptr inbounds %struct.btrfs_subpage, ptr %74, i32 0, i32 2
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %75, i32 noundef 4) #14
  %76 = ptrtoint ptr %75 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile i32, ptr %75, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %77)
  %tobool28.not.i = icmp eq i32 %77, 0
  br i1 %tobool28.not.i, label %if.end30.i, label %if.then26.i.if.end82_crit_edge

if.then26.i.if.end82_crit_edge:                   ; preds = %if.then26.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end82

if.end30.i:                                       ; preds = %if.then26.i
  %readers.i = getelementptr inbounds %struct.btrfs_subpage, ptr %74, i32 0, i32 1
  %call.i.i1.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %readers.i, i32 noundef 4) #14
  %78 = ptrtoint ptr %readers.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load volatile i32, ptr %readers.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %79)
  %tobool32.not.i = icmp eq i32 %79, 0
  br i1 %tobool32.not.i, label %if.end30.i.if.then81_crit_edge, label %if.end30.i.if.end82_crit_edge

if.end30.i.if.end82_crit_edge:                    ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end82

if.end30.i.if.then81_crit_edge:                   ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then81

if.then81:                                        ; preds = %if.end30.i.if.then81_crit_edge, %PagePrivate.exit.i.if.then81_crit_edge
  tail call void @btrfs_detach_subpage(ptr noundef %1, ptr noundef %page) #14
  br label %if.end82

if.end82:                                         ; preds = %if.then81, %if.end30.i.if.end82_crit_edge, %if.then26.i.if.end82_crit_edge
  %mapping83 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %80 = ptrtoint ptr %mapping83 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %mapping83, align 4
  %private_lock84 = getelementptr inbounds %struct.address_space, ptr %81, i32 0, i32 12
  tail call void @_raw_spin_unlock(ptr noundef %private_lock84) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end82, %if.then78, %if.then72, %if.end70.cleanup_crit_edge, %if.then7, %if.then5.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__free_pages(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @alloc_dummy_extent_buffer(ptr noundef %fs_info, i64 noundef %start) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %nodesize = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 166
  %0 = ptrtoint ptr %nodesize to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %nodesize, align 8
  %call = tail call ptr @__alloc_dummy_extent_buffer(ptr noundef %fs_info, i64 noundef %start, i32 noundef %1)
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @find_extent_buffer(ptr noundef %fs_info, i64 noundef %start) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @find_extent_buffer_nolock(ptr noundef %fs_info, i64 noundef %start)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %bflags = getelementptr inbounds %struct.extent_buffer, ptr %call, i32 0, i32 2
  %0 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %bflags, align 4
  %2 = and i32 %1, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool2.not = icmp eq i32 %2, 0
  br i1 %tobool2.not, label %if.end.if.end5_crit_edge, label %if.then3

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end5

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %refs_lock = getelementptr inbounds %struct.extent_buffer, ptr %call, i32 0, i32 4
  tail call void @_raw_spin_lock(ptr noundef %refs_lock) #14
  tail call void @_raw_spin_unlock(ptr noundef %refs_lock) #14
  br label %if.end5

if.end5:                                          ; preds = %if.then3, %if.end.if.end5_crit_edge
  tail call fastcc void @check_buffer_tree_ref(ptr noundef nonnull %call) #14
  %len.i.i = getelementptr inbounds %struct.extent_buffer, ptr %call, i32 0, i32 1
  %3 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %len.i.i, align 8
  %shr.i.i = lshr i32 %4, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %4)
  %tobool.not.i.i = icmp ult i32 %4, 4096
  %shr..i.i = select i1 %tobool.not.i.i, i32 1, i32 %shr.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr..i.i)
  %cmp7.not.i = icmp eq i32 %shr..i.i, 0
  br i1 %cmp7.not.i, label %if.end5.cleanup_crit_edge, label %if.end5.for.body.i_crit_edge

if.end5.for.body.i_crit_edge:                     ; preds = %if.end5
  br label %for.body.i

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %if.end5.for.body.i_crit_edge
  %i.08.i = phi i32 [ %inc.i, %if.end.i.for.body.i_crit_edge ], [ 0, %if.end5.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.extent_buffer, ptr %call, i32 0, i32 12, i32 %i.08.i
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i, align 4
  %cmp1.not.i = icmp eq ptr %6, null
  br i1 %cmp1.not.i, label %for.body.i.if.end.i_crit_edge, label %if.then.i

for.body.i.if.end.i_crit_edge:                    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @mark_page_accessed(ptr noundef nonnull %6) #14
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %for.body.i.if.end.i_crit_edge
  %inc.i = add nuw nsw i32 %i.08.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %shr..i.i
  br i1 %exitcond.not.i, label %if.end.i.cleanup_crit_edge, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %if.end.i.cleanup_crit_edge, %if.end5.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @find_extent_buffer_nolock(ptr noundef %fs_info, i64 noundef %start) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !360
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #14
  %call.i = tail call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.66, i32 noundef 696, ptr noundef nonnull @.str.67) #14
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %buffer_radix = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 152
  %sectorsize_bits = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 168
  %4 = ptrtoint ptr %sectorsize_bits to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sectorsize_bits, align 8
  %sh_prom = zext i32 %5 to i64
  %shr = lshr i64 %start, %sh_prom
  %conv = trunc i64 %shr to i32
  %call = tail call ptr @radix_tree_lookup(ptr noundef %buffer_radix, i32 noundef %conv) #14
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %rcu_read_lock.exit.if.end_crit_edge, label %land.lhs.true

rcu_read_lock.exit.if.end_crit_edge:              ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %refs = getelementptr inbounds %struct.extent_buffer, ptr %call, i32 0, i32 5
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refs, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !386
  tail call void @llvm.prefetch.p0(ptr %refs, i32 1, i32 3, i32 1) #14
  %6 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %refs, ptr %refs, i32 0, i32 1, ptr elementtype(i32) %refs) #14, !srcloc !387
  %asmresult.i.i.i.i = extractvalue { i32, i32, i32 } %6, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i)
  %cmp.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !388
  %call.i6 = tail call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i6, label %if.then.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i9

if.then.rcu_read_unlock.exit_crit_edge:           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit

land.lhs.true.i9:                                 ; preds = %if.then
  %call1.i7 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i7)
  %tobool.not.i8 = icmp eq i32 %call1.i7, 0
  br i1 %tobool.not.i8, label %land.lhs.true.i9.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i11

land.lhs.true.i9.rcu_read_unlock.exit_crit_edge:  ; preds = %land.lhs.true.i9
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit

land.lhs.true2.i11:                               ; preds = %land.lhs.true.i9
  %.b4.i10 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i10, label %land.lhs.true2.i11.rcu_read_unlock.exit_crit_edge, label %if.then.i12

land.lhs.true2.i11.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i11
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit

if.then.i12:                                      ; preds = %land.lhs.true2.i11
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.66, i32 noundef 724, ptr noundef nonnull @.str.68) #14
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i12, %land.lhs.true2.i11.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i9.rcu_read_unlock.exit_crit_edge, %if.then.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !398
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %rcu_read_lock.exit.if.end_crit_edge
  %call.i15 = tail call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i15, label %if.end.rcu_read_unlock.exit25_crit_edge, label %land.lhs.true.i18

if.end.rcu_read_unlock.exit25_crit_edge:          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit25

land.lhs.true.i18:                                ; preds = %if.end
  %call1.i16 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i16)
  %tobool.not.i17 = icmp eq i32 %call1.i16, 0
  br i1 %tobool.not.i17, label %land.lhs.true.i18.rcu_read_unlock.exit25_crit_edge, label %land.lhs.true2.i20

land.lhs.true.i18.rcu_read_unlock.exit25_crit_edge: ; preds = %land.lhs.true.i18
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit25

land.lhs.true2.i20:                               ; preds = %land.lhs.true.i18
  %.b4.i19 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i19, label %land.lhs.true2.i20.rcu_read_unlock.exit25_crit_edge, label %if.then.i21

land.lhs.true2.i20.rcu_read_unlock.exit25_crit_edge: ; preds = %land.lhs.true2.i20
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit25

if.then.i21:                                      ; preds = %land.lhs.true2.i20
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.66, i32 noundef 724, ptr noundef nonnull @.str.68) #14
  br label %rcu_read_unlock.exit25

rcu_read_unlock.exit25:                           ; preds = %if.then.i21, %land.lhs.true2.i20.rcu_read_unlock.exit25_crit_edge, %land.lhs.true.i18.rcu_read_unlock.exit25_crit_edge, %if.end.rcu_read_unlock.exit25_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !398
  br label %cleanup

cleanup:                                          ; preds = %rcu_read_unlock.exit25, %rcu_read_unlock.exit
  %retval.0 = phi ptr [ %call, %rcu_read_unlock.exit ], [ null, %rcu_read_unlock.exit25 ]
  %7 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i.i.i22 = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i.i.i.i22 to ptr
  %preempt_count.i.i.i.i23 = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %preempt_count.i.i.i.i23 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %preempt_count.i.i.i.i23, align 4
  %sub.i.i.i24 = add i32 %10, -1
  store volatile i32 %sub.i.i.i24, ptr %preempt_count.i.i.i.i23, align 4
  tail call void @rcu_read_unlock_strict() #14
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #14
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @alloc_test_extent_buffer(ptr noundef %fs_info, i64 noundef %start) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @find_extent_buffer(ptr noundef %fs_info, i64 noundef %start)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %nodesize.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 166
  %0 = ptrtoint ptr %nodesize.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %nodesize.i, align 8
  %call.i = tail call ptr @__alloc_dummy_extent_buffer(ptr noundef %fs_info, i64 noundef %start, i32 noundef %1) #14
  %tobool2.not = icmp eq ptr %call.i, null
  br i1 %tobool2.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %fs_info6 = getelementptr inbounds %struct.extent_buffer, ptr %call.i, i32 0, i32 3
  %2 = ptrtoint ptr %fs_info6 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %fs_info, ptr %fs_info6, align 8
  %buffer_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 151
  %buffer_radix = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 152
  %sectorsize_bits = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 168
  br label %again

again:                                            ; preds = %if.then15.again_crit_edge, %if.end5
  %call7 = tail call i32 @radix_tree_preload(i32 noundef 3136) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.end11, label %if.then9

if.then9:                                         ; preds = %again
  call void @__sanitizer_cov_trace_pc() #16
  %3 = inttoptr i32 %call7 to ptr
  br label %free_eb

if.end11:                                         ; preds = %again
  tail call void @_raw_spin_lock(ptr noundef %buffer_lock) #14
  %4 = ptrtoint ptr %sectorsize_bits to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sectorsize_bits, align 8
  %sh_prom = zext i32 %5 to i64
  %shr = lshr i64 %start, %sh_prom
  %conv = trunc i64 %shr to i32
  %call12 = tail call i32 @radix_tree_insert(ptr noundef %buffer_radix, i32 noundef %conv, ptr noundef nonnull %call.i) #14
  tail call void @_raw_spin_unlock(ptr noundef %buffer_lock) #14
  %6 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %9
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %11, ptrtoint (ptr @radix_tree_preloads to i32)
  %12 = inttoptr i32 %add.i to ptr
  tail call fastcc void @local_lock_release(ptr noundef %12) #14
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !403
  %13 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %16, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -17, i32 %call12)
  %cmp = icmp eq i32 %call12, -17
  br i1 %cmp, label %if.then15, label %if.end19

if.then15:                                        ; preds = %if.end11
  %call16 = tail call ptr @find_extent_buffer(ptr noundef %fs_info, i64 noundef %start)
  %tobool17.not = icmp eq ptr %call16, null
  br i1 %tobool17.not, label %if.then15.again_crit_edge, label %if.then15.free_eb_crit_edge

if.then15.free_eb_crit_edge:                      ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #16
  br label %free_eb

if.then15.again_crit_edge:                        ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #16
  br label %again

if.end19:                                         ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @check_buffer_tree_ref(ptr noundef nonnull %call.i)
  %bflags = getelementptr inbounds %struct.extent_buffer, ptr %call.i, i32 0, i32 2
  tail call void @_set_bit(i32 noundef 9, ptr noundef %bflags) #14
  br label %cleanup

free_eb:                                          ; preds = %if.then15.free_eb_crit_edge, %if.then9
  %exists.0 = phi ptr [ %3, %if.then9 ], [ %call16, %if.then15.free_eb_crit_edge ]
  tail call fastcc void @btrfs_release_extent_buffer_pages(ptr noundef nonnull %call.i) #14
  %17 = ptrtoint ptr %fs_info6 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %fs_info6, align 8
  %eb_leak_lock.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %18, i32 0, i32 189
  %leak_list.i = getelementptr inbounds %struct.extent_buffer, ptr %call.i, i32 0, i32 14
  %call3.i.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %eb_leak_lock.i) #14
  %call.i.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %leak_list.i) #14
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %free_eb.btrfs_release_extent_buffer.exit_crit_edge

free_eb.btrfs_release_extent_buffer.exit_crit_edge: ; preds = %free_eb
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_release_extent_buffer.exit

if.end.i.i.i.i:                                   ; preds = %free_eb
  call void @__sanitizer_cov_trace_pc() #16
  %prev.i.i.i.i = getelementptr inbounds %struct.extent_buffer, ptr %call.i, i32 0, i32 14, i32 1
  %19 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %prev.i.i.i.i, align 4
  %21 = ptrtoint ptr %leak_list.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %leak_list.i, align 4
  %prev1.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %prev1.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %20, ptr %prev1.i.i.i.i.i, align 4
  %24 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %22, ptr %20, align 4
  br label %btrfs_release_extent_buffer.exit

btrfs_release_extent_buffer.exit:                 ; preds = %if.end.i.i.i.i, %free_eb.btrfs_release_extent_buffer.exit_crit_edge
  %25 = ptrtoint ptr %leak_list.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr inttoptr (i32 256 to ptr), ptr %leak_list.i, align 4
  %prev.i.i.i = getelementptr inbounds %struct.extent_buffer, ptr %call.i, i32 0, i32 14, i32 1
  %26 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i.i, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %eb_leak_lock.i, i32 noundef %call3.i.i) #14
  %27 = load ptr, ptr @extent_buffer_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %27, ptr noundef nonnull %call.i) #14
  br label %cleanup

cleanup:                                          ; preds = %btrfs_release_extent_buffer.exit, %if.end19, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %exists.0, %btrfs_release_extent_buffer.exit ], [ %call.i, %if.end19 ], [ %call, %entry.cleanup_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.end.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @radix_tree_preload(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @radix_tree_insert(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @check_buffer_tree_ref(ptr noundef %eb) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %refs1 = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 5
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refs1, i32 noundef 4) #14
  %0 = ptrtoint ptr %refs1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %refs1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp = icmp sgt i32 %1, 1
  br i1 %cmp, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %bflags = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 2
  %2 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %bflags, align 4
  %4 = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %land.lhs.true.if.end_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %refs_lock = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 4
  tail call void @_raw_spin_lock(ptr noundef %refs_lock) #14
  %bflags3 = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 2
  %call4 = tail call i32 @_test_and_set_bit(i32 noundef 4, ptr noundef %bflags3) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.then6, label %if.end.if.end8_crit_edge

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8

if.then6:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i15 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refs1, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %refs1, i32 1, i32 3, i32 1) #14
  %5 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs1, ptr %refs1, i32 1, ptr elementtype(i32) %refs1) #14, !srcloc !365
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %if.end.if.end8_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %refs_lock) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %land.lhs.true.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @alloc_extent_buffer(ptr noundef %fs_info, i64 noundef %start, i64 noundef %owner_root, i32 noundef %level) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %nodesize = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 166
  %0 = ptrtoint ptr %nodesize to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %nodesize, align 8
  %shr = lshr i64 %start, 12
  %conv = trunc i64 %shr to i32
  %btree_inode = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 46
  %2 = ptrtoint ptr %btree_inode to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %btree_inode, align 4
  %i_mapping = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 9
  %4 = ptrtoint ptr %i_mapping to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %i_mapping, align 8
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 167
  %6 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sectorsize, align 4
  %conv1 = zext i32 %7 to i64
  %sub = add nsw i64 %conv1, -1
  %and = and i64 %sub, %start
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %cmp = icmp eq i64 %and, 0
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.33, i64 noundef %start) #17
  br label %cleanup176

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp8(i64 17592186040319, i64 %start)
  %cmp3 = icmp ugt i64 %start, 17592186040319
  br i1 %cmp3, label %do.body, label %if.end10

do.body:                                          ; preds = %if.end
  %call6 = tail call i32 @___ratelimit(ptr noundef nonnull @alloc_extent_buffer._rs, ptr noundef nonnull @__func__.alloc_extent_buffer) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %do.body.do.end_crit_edge, label %if.then7

do.body.do.end_crit_edge:                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

if.then7:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.35, i64 noundef %start) #17
  br label %do.end

do.end:                                           ; preds = %if.then7, %do.body.do.end_crit_edge
  tail call void @btrfs_err_32bit_limit(ptr noundef %fs_info) #14
  br label %cleanup176

if.end10:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp8(i64 10995116277759, i64 %start)
  %cmp11 = icmp ugt i64 %start, 10995116277759
  br i1 %cmp11, label %if.then13, label %if.end10.if.end14_crit_edge

if.end10.if.end14_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14

if.then13:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @btrfs_warn_32bit_limit(ptr noundef %fs_info) #14
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.end10.if.end14_crit_edge
  %8 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sectorsize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %9)
  %cmp16 = icmp ult i32 %9, 4096
  br i1 %cmp16, label %land.lhs.true, label %if.end14.if.end24_crit_edge

if.end14.if.end24_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end24

land.lhs.true:                                    ; preds = %if.end14
  %conv18 = trunc i64 %start to i32
  %and19 = and i32 %conv18, 4095
  %add = add i32 %1, %and19
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %add)
  %cmp20 = icmp ugt i32 %add, 4096
  br i1 %cmp20, label %if.then22, label %land.lhs.true.if.end24_crit_edge

land.lhs.true.if.end24_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end24

if.then22:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.36, i64 noundef %start, i32 noundef %1) #17
  br label %cleanup176

if.end24:                                         ; preds = %land.lhs.true.if.end24_crit_edge, %if.end14.if.end24_crit_edge
  %call25 = tail call ptr @find_extent_buffer(ptr noundef %fs_info, i64 noundef %start)
  %tobool26.not = icmp eq ptr %call25, null
  br i1 %tobool26.not, label %if.end28, label %if.end24.cleanup176_crit_edge

if.end24.cleanup176_crit_edge:                    ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup176

if.end28:                                         ; preds = %if.end24
  %call29 = tail call fastcc ptr @__alloc_extent_buffer(ptr noundef %fs_info, i64 noundef %start, i32 noundef %1)
  %tobool30.not = icmp eq ptr %call29, null
  br i1 %tobool30.not, label %if.end28.cleanup176_crit_edge, label %if.end33

if.end28.cleanup176_crit_edge:                    ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup176

if.end33:                                         ; preds = %if.end28
  tail call void @btrfs_set_buffer_lockdep_class(i64 noundef %owner_root, ptr noundef nonnull %call29, i32 noundef %level) #14
  %len.i = getelementptr inbounds %struct.extent_buffer, ptr %call29, i32 0, i32 1
  %10 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %len.i, align 8
  %shr.i = lshr i32 %11, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %11)
  %tobool.not.i = icmp ult i32 %11, 4096
  %shr..i = select i1 %tobool.not.i, i32 1, i32 %shr.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr..i)
  %cmp35348.not = icmp eq i32 %shr..i, 0
  br i1 %cmp35348.not, label %if.end33.if.then101_crit_edge, label %for.body.lr.ph

if.end33.if.then101_crit_edge:                    ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then101

for.body.lr.ph:                                   ; preds = %if.end33
  %private_lock = getelementptr inbounds %struct.address_space, ptr %5, i32 0, i32 12
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %uptodate.0351 = phi i32 [ 1, %for.body.lr.ph ], [ %spec.select, %for.inc.for.body_crit_edge ]
  %index.0350 = phi i32 [ %conv, %for.body.lr.ph ], [ %inc99, %for.inc.for.body_crit_edge ]
  %i.0349 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %call.i = tail call ptr @pagecache_get_page(ptr noundef %5, i32 noundef %index.0350, i32 noundef 7, i32 noundef 35904) #14
  %tobool38.not = icmp eq ptr %call.i, null
  br i1 %tobool38.not, label %for.body.free_eb_crit_edge, label %if.end41

for.body.free_eb_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %free_eb

if.end41:                                         ; preds = %for.body
  %12 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %sectorsize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %13)
  %cmp43 = icmp ult i32 %13, 4096
  br i1 %cmp43, label %if.then45, label %if.end41.if.end52_crit_edge

if.end41.if.end52_crit_edge:                      ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end52

if.then45:                                        ; preds = %if.end41
  %call46 = tail call ptr @btrfs_alloc_subpage(ptr noundef %fs_info, i32 noundef 0) #14
  %cmp.i = icmp ugt ptr %call46, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then48, label %if.then45.if.end52_crit_edge

if.then45.if.end52_crit_edge:                     ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end52

if.then48:                                        ; preds = %if.then45
  tail call void @unlock_page(ptr noundef nonnull %call.i) #14
  %14 = getelementptr inbounds %struct.page, ptr %call.i, i32 0, i32 1
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %14, align 4
  %and.i.i = and i32 %16, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !322

if.then.i.i:                                      ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %16, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #16
  %17 = ptrtoint ptr %call.i to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %17, %if.end.i.i ]
  %18 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %18, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #14
  %19 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp.i.i.i.i = icmp eq i32 %20, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !319

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %18, ptr noundef nonnull @.str.57) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #14, !srcloc !351
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !352
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #14
  %21 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #14, !srcloc !353
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %21, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !354
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@alloc_extent_buffer, %if.then.i.i.i.i.i)) #14
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !326

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %18, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #14
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.free_eb_crit_edge

folio_put_testzero.exit.i.i.free_eb_crit_edge:    ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %free_eb

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__put_page(ptr noundef %18) #14
  br label %free_eb

if.end52:                                         ; preds = %if.then45.if.end52_crit_edge, %if.end41.if.end52_crit_edge
  %prealloc.0 = phi ptr [ %call46, %if.then45.if.end52_crit_edge ], [ null, %if.end41.if.end52_crit_edge ]
  tail call void @_raw_spin_lock(ptr noundef %private_lock) #14
  %22 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %sectorsize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %23)
  %cmp.i275 = icmp ult i32 %23, 4096
  br i1 %cmp.i275, label %if.end52.if.end57_crit_edge, label %if.end.i

if.end52.if.end57_crit_edge:                      ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end57

if.end.i:                                         ; preds = %if.end52
  %24 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %call.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %25)
  %cmp.i.not.i.i = icmp eq i32 %25, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i276, label %PagePrivate.exit.i, !prof !319

if.then.i.i276:                                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef nonnull %call.i, ptr noundef nonnull @.str.80) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 452, 0\0A.popsection", ""() #14, !srcloc !363
  unreachable

PagePrivate.exit.i:                               ; preds = %if.end.i
  %26 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %call.i, align 4
  %28 = and i32 %27, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool.not.i277 = icmp eq i32 %28, 0
  br i1 %tobool.not.i277, label %PagePrivate.exit.i.if.end57_crit_edge, label %if.end2.i

PagePrivate.exit.i.if.end57_crit_edge:            ; preds = %PagePrivate.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end57

if.end2.i:                                        ; preds = %PagePrivate.exit.i
  %private.i = getelementptr inbounds %struct.page, ptr %call.i, i32 0, i32 1, i32 0, i32 3
  %29 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %private.i, align 4
  %31 = inttoptr i32 %30 to ptr
  %refs.i = getelementptr inbounds %struct.extent_buffer, ptr %31, i32 0, i32 5
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refs.i, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !386
  tail call void @llvm.prefetch.p0(ptr %refs.i, i32 1, i32 3, i32 1) #14
  %32 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %refs.i, ptr %refs.i, i32 0, i32 1, ptr elementtype(i32) %refs.i) #14, !srcloc !387
  %asmresult.i.i.i.i.i278 = extractvalue { i32, i32, i32 } %32, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i278)
  %cmp.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i278, 0
  br i1 %cmp.not.i.i.i.i.i, label %if.end5.i, label %grab_extent_buffer.exit

if.end5.i:                                        ; preds = %if.end2.i
  %33 = getelementptr inbounds %struct.page, ptr %call.i, i32 0, i32 1
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %33, align 4
  %and.i.i.i = and i32 %35, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !322

if.then.i.i.i:                                    ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i.i = add i32 %35, -1
  br label %_compound_head.exit.i.i

if.end.i.i.i:                                     ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #16
  %36 = ptrtoint ptr %call.i to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %36, %if.end.i.i.i ]
  %37 = inttoptr i32 %retval.0.i.i.i to ptr
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %37, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %39)
  %cmp.i.not.i35.i = icmp eq i32 %39, -1
  %40 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %33, align 4
  %and.i13.i.i = and i32 %41, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i.i)
  %tobool.not.i14.i.i = icmp eq i32 %and.i13.i.i, 0
  br i1 %cmp.i.not.i35.i, label %if.then.i36.i, label %do.end8.i.i, !prof !319

if.then.i36.i:                                    ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i14.i.i, label %if.end.i17.i.i, label %if.then.i16.i.i, !prof !322

if.then.i16.i.i:                                  ; preds = %if.then.i36.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i15.i.i = add i32 %41, -1
  br label %_compound_head.exit19.i.i

if.end.i17.i.i:                                   ; preds = %if.then.i36.i
  call void @__sanitizer_cov_trace_pc() #16
  %42 = ptrtoint ptr %call.i to i32
  br label %_compound_head.exit19.i.i

_compound_head.exit19.i.i:                        ; preds = %if.end.i17.i.i, %if.then.i16.i.i
  %retval.0.i18.i.i = phi i32 [ %sub.i15.i.i, %if.then.i16.i.i ], [ %42, %if.end.i17.i.i ]
  %43 = inttoptr i32 %retval.0.i18.i.i to ptr
  tail call void @dump_page(ptr noundef %43, ptr noundef nonnull @.str.86) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 420, 0\0A.popsection", ""() #14, !srcloc !357
  unreachable

do.end8.i.i:                                      ; preds = %_compound_head.exit.i.i
  br i1 %tobool.not.i14.i.i, label %if.end.i24.i.i, label %if.then.i23.i.i, !prof !322

if.then.i23.i.i:                                  ; preds = %do.end8.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i22.i.i = add i32 %41, -1
  br label %PageDirty.exit.i

if.end.i24.i.i:                                   ; preds = %do.end8.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %44 = ptrtoint ptr %call.i to i32
  br label %PageDirty.exit.i

PageDirty.exit.i:                                 ; preds = %if.end.i24.i.i, %if.then.i23.i.i
  %retval.0.i25.i.i = phi i32 [ %sub.i22.i.i, %if.then.i23.i.i ], [ %44, %if.end.i24.i.i ]
  %45 = inttoptr i32 %retval.0.i25.i.i to ptr
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %45, align 4
  %48 = and i32 %47, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool7.not.i = icmp eq i32 %48, 0
  br i1 %tobool7.not.i, label %PageDirty.exit.i.if.end22.i_crit_edge, label %do.end.i, !prof !322

PageDirty.exit.i.if.end22.i_crit_edge:            ; preds = %PageDirty.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22.i

do.end.i:                                         ; preds = %PageDirty.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 6123, i32 noundef 9, ptr noundef null) #14
  br label %if.end22.i

if.end22.i:                                       ; preds = %do.end.i, %PageDirty.exit.i.if.end22.i_crit_edge
  %49 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %33, align 4
  %and.i.i39.i = and i32 %50, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i39.i)
  %tobool.not.i.i40.i = icmp eq i32 %and.i.i39.i, 0
  br i1 %tobool.not.i.i40.i, label %if.end.i.i43.i, label %if.then.i.i42.i, !prof !322

if.then.i.i42.i:                                  ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i41.i = add i32 %50, -1
  br label %detach_page_private.exit.i

if.end.i.i43.i:                                   ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #16
  %51 = ptrtoint ptr %call.i to i32
  br label %detach_page_private.exit.i

detach_page_private.exit.i:                       ; preds = %if.end.i.i43.i, %if.then.i.i42.i
  %retval.0.i.i44.i = phi i32 [ %sub.i.i41.i, %if.then.i.i42.i ], [ %51, %if.end.i.i43.i ]
  %52 = inttoptr i32 %retval.0.i.i44.i to ptr
  tail call fastcc void @folio_detach_private(ptr noundef %52) #14
  br label %if.end57

grab_extent_buffer.exit:                          ; preds = %if.end2.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !388
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool54.not = icmp eq i32 %30, 0
  br i1 %tobool54.not, label %grab_extent_buffer.exit.if.end57_crit_edge, label %if.then55

grab_extent_buffer.exit.if.end57_crit_edge:       ; preds = %grab_extent_buffer.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end57

if.then55:                                        ; preds = %grab_extent_buffer.exit
  %53 = inttoptr i32 %30 to ptr
  tail call void @_raw_spin_unlock(ptr noundef %private_lock) #14
  tail call void @unlock_page(ptr noundef nonnull %call.i) #14
  %54 = getelementptr inbounds %struct.page, ptr %call.i, i32 0, i32 1
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %54, align 4
  %and.i.i279 = and i32 %56, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i279)
  %tobool.not.i.i280 = icmp eq i32 %and.i.i279, 0
  br i1 %tobool.not.i.i280, label %if.end.i.i283, label %if.then.i.i282, !prof !322

if.then.i.i282:                                   ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i281 = add i32 %56, -1
  br label %_compound_head.exit.i288

if.end.i.i283:                                    ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #16
  %57 = ptrtoint ptr %call.i to i32
  br label %_compound_head.exit.i288

_compound_head.exit.i288:                         ; preds = %if.end.i.i283, %if.then.i.i282
  %retval.0.i.i284 = phi i32 [ %sub.i.i281, %if.then.i.i282 ], [ %57, %if.end.i.i283 ]
  %58 = inttoptr i32 %retval.0.i.i284 to ptr
  %_refcount.i.i.i.i.i285 = getelementptr inbounds %struct.page, ptr %58, i32 0, i32 3
  %call.i.i.i.i.i.i.i286 = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i285, i32 noundef 4) #14
  %59 = ptrtoint ptr %_refcount.i.i.i.i.i285 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %_refcount.i.i.i.i.i285, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %cmp.i.i.i.i287 = icmp eq i32 %60, 0
  br i1 %cmp.i.i.i.i287, label %if.then.i.i.i.i289, label %do.end5.i.i.i.i293, !prof !319

if.then.i.i.i.i289:                               ; preds = %_compound_head.exit.i288
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %58, ptr noundef nonnull @.str.57) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #14, !srcloc !351
  unreachable

do.end5.i.i.i.i293:                               ; preds = %_compound_head.exit.i288
  %call.i.i.i10.i.i.i.i290 = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i285, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !352
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i285, i32 1, i32 3, i32 1) #14
  %61 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i285, ptr %_refcount.i.i.i.i.i285, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i285) #14, !srcloc !353
  %asmresult.i.i.i.i.i.i.i.i.i.i291 = extractvalue { i32, i32 } %61, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !354
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i291)
  %cmp.i.i.i.i.i.i.i292 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i291, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@alloc_extent_buffer, %if.then.i.i.i.i.i295)) #14
          to label %folio_put_testzero.exit.i.i296 [label %if.then.i.i.i.i.i295], !srcloc !326

if.then.i.i.i.i.i295:                             ; preds = %do.end5.i.i.i.i293
  call void @__sanitizer_cov_trace_pc() #16
  %conv.i.i.i.i.i294 = zext i1 %cmp.i.i.i.i.i.i.i292 to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %58, i32 noundef -1, i32 noundef %conv.i.i.i.i.i294) #14
  br label %folio_put_testzero.exit.i.i296

folio_put_testzero.exit.i.i296:                   ; preds = %if.then.i.i.i.i.i295, %do.end5.i.i.i.i293
  br i1 %cmp.i.i.i.i.i.i.i292, label %if.then.i4.i297, label %folio_put_testzero.exit.i.i296.put_page.exit298_crit_edge

folio_put_testzero.exit.i.i296.put_page.exit298_crit_edge: ; preds = %folio_put_testzero.exit.i.i296
  call void @__sanitizer_cov_trace_pc() #16
  br label %put_page.exit298

if.then.i4.i297:                                  ; preds = %folio_put_testzero.exit.i.i296
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__put_page(ptr noundef %58) #14
  br label %put_page.exit298

put_page.exit298:                                 ; preds = %if.then.i4.i297, %folio_put_testzero.exit.i.i296.put_page.exit298_crit_edge
  tail call fastcc void @check_buffer_tree_ref(ptr noundef nonnull %53) #14
  %len.i.i = getelementptr inbounds %struct.extent_buffer, ptr %53, i32 0, i32 1
  %62 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %len.i.i, align 8
  %shr.i.i = lshr i32 %63, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %63)
  %tobool.not.i.i299 = icmp ult i32 %63, 4096
  %shr..i.i = select i1 %tobool.not.i.i299, i32 1, i32 %shr.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr..i.i)
  %cmp7.not.i = icmp eq i32 %shr..i.i, 0
  br i1 %cmp7.not.i, label %put_page.exit298.mark_extent_buffer_accessed.exit_crit_edge, label %put_page.exit298.for.body.i_crit_edge

put_page.exit298.for.body.i_crit_edge:            ; preds = %put_page.exit298
  br label %for.body.i

put_page.exit298.mark_extent_buffer_accessed.exit_crit_edge: ; preds = %put_page.exit298
  call void @__sanitizer_cov_trace_pc() #16
  br label %mark_extent_buffer_accessed.exit

for.body.i:                                       ; preds = %if.end.i300.for.body.i_crit_edge, %put_page.exit298.for.body.i_crit_edge
  %i.08.i = phi i32 [ %inc.i, %if.end.i300.for.body.i_crit_edge ], [ 0, %put_page.exit298.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.extent_buffer, ptr %53, i32 0, i32 12, i32 %i.08.i
  %64 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %arrayidx.i, align 4
  %cmp1.not.i = icmp eq ptr %65, %call.i
  br i1 %cmp1.not.i, label %for.body.i.if.end.i300_crit_edge, label %if.then.i

for.body.i.if.end.i300_crit_edge:                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i300

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @mark_page_accessed(ptr noundef %65) #14
  br label %if.end.i300

if.end.i300:                                      ; preds = %if.then.i, %for.body.i.if.end.i300_crit_edge
  %inc.i = add nuw nsw i32 %i.08.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %shr..i.i
  br i1 %exitcond.not.i, label %if.end.i300.mark_extent_buffer_accessed.exit_crit_edge, label %if.end.i300.for.body.i_crit_edge

if.end.i300.for.body.i_crit_edge:                 ; preds = %if.end.i300
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

if.end.i300.mark_extent_buffer_accessed.exit_crit_edge: ; preds = %if.end.i300
  call void @__sanitizer_cov_trace_pc() #16
  br label %mark_extent_buffer_accessed.exit

mark_extent_buffer_accessed.exit:                 ; preds = %if.end.i300.mark_extent_buffer_accessed.exit_crit_edge, %put_page.exit298.mark_extent_buffer_accessed.exit_crit_edge
  tail call void @btrfs_free_subpage(ptr noundef %prealloc.0) #14
  br label %free_eb

if.end57:                                         ; preds = %grab_extent_buffer.exit.if.end57_crit_edge, %detach_page_private.exit.i, %PagePrivate.exit.i.if.end57_crit_edge, %if.end52.if.end57_crit_edge
  %call58 = tail call fastcc i32 @attach_extent_buffer_page(ptr noundef nonnull %call29, ptr noundef nonnull %call.i, ptr noundef %prealloc.0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %cond.end, label %cond.false, !prof !322

cond.false:                                       ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.37, i32 noundef 6218) #18
  unreachable

cond.end:                                         ; preds = %if.end57
  tail call void @btrfs_page_inc_eb_refs(ptr noundef %fs_info, ptr noundef nonnull %call.i) #14
  tail call void @_raw_spin_unlock(ptr noundef %private_lock) #14
  %66 = ptrtoint ptr %call29 to i32
  call void @__asan_load8_noabort(i32 %66)
  %67 = load i64, ptr %call29, align 8
  %68 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %len.i, align 8
  %call66 = tail call zeroext i1 @btrfs_page_test_dirty(ptr noundef %fs_info, ptr noundef nonnull %call.i, i64 noundef %67, i32 noundef %69) #14
  br i1 %call66, label %do.end82, label %cond.end.if.end88_crit_edge, !prof !319

cond.end.if.end88_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end88

do.end82:                                         ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 6231, i32 noundef 9, ptr noundef null) #14
  br label %if.end88

if.end88:                                         ; preds = %do.end82, %cond.end.if.end88_crit_edge
  %arrayidx = getelementptr %struct.extent_buffer, ptr %call29, i32 0, i32 12, i32 %i.0349
  %70 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %70)
  store ptr %call.i, ptr %arrayidx, align 4
  %71 = getelementptr inbounds %struct.page, ptr %call.i, i32 0, i32 1
  %72 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %71, align 4
  %and.i.i301 = and i32 %73, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i301)
  %tobool.not.i.i302 = icmp eq i32 %and.i.i301, 0
  br i1 %tobool.not.i.i302, label %if.end.i.i305, label %if.then.i.i304, !prof !322

if.then.i.i304:                                   ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i303 = add i32 %73, -1
  br label %_compound_head.exit.i308

if.end.i.i305:                                    ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #16
  %74 = ptrtoint ptr %call.i to i32
  br label %_compound_head.exit.i308

_compound_head.exit.i308:                         ; preds = %if.end.i.i305, %if.then.i.i304
  %retval.0.i.i306 = phi i32 [ %sub.i.i303, %if.then.i.i304 ], [ %74, %if.end.i.i305 ]
  %75 = inttoptr i32 %retval.0.i.i306 to ptr
  %76 = getelementptr inbounds %struct.page, ptr %75, i32 0, i32 1
  %77 = ptrtoint ptr %76 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load volatile i32, ptr %76, align 4
  %and.i.i.i.i = and i32 %78, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i307 = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i307, label %folio_flags.exit.i.i, label %if.then.i.i.i309, !prof !322

if.then.i.i.i309:                                 ; preds = %_compound_head.exit.i308
  call void @__sanitizer_cov_trace_pc() #16
  %79 = inttoptr i32 %retval.0.i.i306 to ptr
  tail call void @dump_page(ptr noundef %79, ptr noundef nonnull @.str.82) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

folio_flags.exit.i.i:                             ; preds = %_compound_head.exit.i308
  %80 = ptrtoint ptr %75 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load volatile i32, ptr %75, align 4
  %82 = and i32 %81, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %82)
  %tobool.i.not.i = icmp eq i32 %82, 0
  br i1 %tobool.i.not.i, label %folio_flags.exit.i.i.for.inc_crit_edge, label %do.end.i.i

folio_flags.exit.i.i.for.inc_crit_edge:           ; preds = %folio_flags.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

do.end.i.i:                                       ; preds = %folio_flags.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !379
  br label %for.inc

for.inc:                                          ; preds = %do.end.i.i, %folio_flags.exit.i.i.for.inc_crit_edge
  %spec.select = phi i32 [ 0, %folio_flags.exit.i.i.for.inc_crit_edge ], [ %uptodate.0351, %do.end.i.i ]
  %inc = add nuw nsw i32 %i.0349, 1
  %inc99 = add i32 %index.0350, 1
  %exitcond.not = icmp eq i32 %inc, %shr..i
  br i1 %exitcond.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %for.inc
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select)
  %tobool100.not = icmp eq i32 %spec.select, 0
  br i1 %tobool100.not, label %for.end.if.end102_crit_edge, label %for.end.if.then101_crit_edge

for.end.if.then101_crit_edge:                     ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then101

for.end.if.end102_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end102

if.then101:                                       ; preds = %for.end.if.then101_crit_edge, %if.end33.if.then101_crit_edge
  %bflags = getelementptr inbounds %struct.extent_buffer, ptr %call29, i32 0, i32 2
  tail call void @_set_bit(i32 noundef 0, ptr noundef %bflags) #14
  br label %if.end102

if.end102:                                        ; preds = %if.then101, %for.end.if.end102_crit_edge
  %buffer_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 151
  %buffer_radix = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 152
  %sectorsize_bits = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 168
  br label %again

again:                                            ; preds = %if.then114.again_crit_edge, %if.end102
  %call103 = tail call i32 @radix_tree_preload(i32 noundef 3136) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call103)
  %tobool104.not = icmp eq i32 %call103, 0
  br i1 %tobool104.not, label %if.end107, label %if.then105

if.then105:                                       ; preds = %again
  call void @__sanitizer_cov_trace_pc() #16
  %83 = inttoptr i32 %call103 to ptr
  br label %free_eb

if.end107:                                        ; preds = %again
  tail call void @_raw_spin_lock(ptr noundef %buffer_lock) #14
  %84 = ptrtoint ptr %sectorsize_bits to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %sectorsize_bits, align 8
  %sh_prom = zext i32 %85 to i64
  %shr108 = lshr i64 %start, %sh_prom
  %conv109 = trunc i64 %shr108 to i32
  %call110 = tail call i32 @radix_tree_insert(ptr noundef %buffer_radix, i32 noundef %conv109, ptr noundef nonnull %call29) #14
  tail call void @_raw_spin_unlock(ptr noundef %buffer_lock) #14
  %86 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i310 = and i32 %86, -16384
  %87 = inttoptr i32 %and.i.i310 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %87, i32 0, i32 3
  %88 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %cpu.i, align 4
  %arrayidx.i311 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %89
  %90 = ptrtoint ptr %arrayidx.i311 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %arrayidx.i311, align 4
  %add.i = add i32 %91, ptrtoint (ptr @radix_tree_preloads to i32)
  %92 = inttoptr i32 %add.i to ptr
  tail call fastcc void @local_lock_release(ptr noundef %92) #14
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !403
  %93 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i.i312 = and i32 %93, -16384
  %94 = inttoptr i32 %and.i.i.i.i312 to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %94, i32 0, i32 1
  %95 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i313 = add i32 %96, -1
  store volatile i32 %sub.i.i313, ptr %preempt_count.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -17, i32 %call110)
  %cmp112 = icmp eq i32 %call110, -17
  br i1 %cmp112, label %if.then114, label %if.end118

if.then114:                                       ; preds = %if.end107
  %call115 = tail call ptr @find_extent_buffer(ptr noundef %fs_info, i64 noundef %start)
  %tobool116.not = icmp eq ptr %call115, null
  br i1 %tobool116.not, label %if.then114.again_crit_edge, label %if.then114.free_eb_crit_edge

if.then114.free_eb_crit_edge:                     ; preds = %if.then114
  call void @__sanitizer_cov_trace_pc() #16
  br label %free_eb

if.then114.again_crit_edge:                       ; preds = %if.then114
  call void @__sanitizer_cov_trace_pc() #16
  br label %again

if.end118:                                        ; preds = %if.end107
  tail call fastcc void @check_buffer_tree_ref(ptr noundef nonnull %call29)
  %bflags119 = getelementptr inbounds %struct.extent_buffer, ptr %call29, i32 0, i32 2
  tail call void @_set_bit(i32 noundef 9, ptr noundef %bflags119) #14
  br i1 %cmp35348.not, label %if.end118.cleanup176_crit_edge, label %if.end118.for.body123_crit_edge

if.end118.for.body123_crit_edge:                  ; preds = %if.end118
  br label %for.body123

if.end118.cleanup176_crit_edge:                   ; preds = %if.end118
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup176

for.body123:                                      ; preds = %for.body123.for.body123_crit_edge, %if.end118.for.body123_crit_edge
  %i.1353 = phi i32 [ %inc127, %for.body123.for.body123_crit_edge ], [ 0, %if.end118.for.body123_crit_edge ]
  %arrayidx125 = getelementptr %struct.extent_buffer, ptr %call29, i32 0, i32 12, i32 %i.1353
  %97 = ptrtoint ptr %arrayidx125 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %arrayidx125, align 4
  tail call void @unlock_page(ptr noundef %98) #14
  %inc127 = add nuw nsw i32 %i.1353, 1
  %exitcond374.not = icmp eq i32 %inc127, %shr..i
  br i1 %exitcond374.not, label %for.body123.cleanup176_crit_edge, label %for.body123.for.body123_crit_edge

for.body123.for.body123_crit_edge:                ; preds = %for.body123
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body123

for.body123.cleanup176_crit_edge:                 ; preds = %for.body123
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup176

free_eb:                                          ; preds = %if.then114.free_eb_crit_edge, %if.then105, %mark_extent_buffer_accessed.exit, %if.then.i4.i, %folio_put_testzero.exit.i.i.free_eb_crit_edge, %for.body.free_eb_crit_edge
  %exists.1 = phi ptr [ %83, %if.then105 ], [ %call46, %if.then.i4.i ], [ %call46, %folio_put_testzero.exit.i.i.free_eb_crit_edge ], [ %53, %mark_extent_buffer_accessed.exit ], [ %call115, %if.then114.free_eb_crit_edge ], [ inttoptr (i32 -12 to ptr), %for.body.free_eb_crit_edge ]
  %refs = getelementptr inbounds %struct.extent_buffer, ptr %call29, i32 0, i32 5
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refs, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !352
  tail call void @llvm.prefetch.p0(ptr %refs, i32 1, i32 3, i32 1) #14
  %99 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs, ptr %refs, i32 1, ptr elementtype(i32) %refs) #14, !srcloc !353
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %99, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !354
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.i.i, label %free_eb.if.end154_crit_edge, label %do.end148, !prof !322

free_eb.if.end154_crit_edge:                      ; preds = %free_eb
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end154

do.end148:                                        ; preds = %free_eb
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 6279, i32 noundef 9, ptr noundef null) #14
  br label %if.end154

if.end154:                                        ; preds = %do.end148, %free_eb.if.end154_crit_edge
  br i1 %cmp35348.not, label %if.end154.for.end175_crit_edge, label %if.end154.for.body165_crit_edge

if.end154.for.body165_crit_edge:                  ; preds = %if.end154
  br label %for.body165

if.end154.for.end175_crit_edge:                   ; preds = %if.end154
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end175

for.body165:                                      ; preds = %for.inc173.for.body165_crit_edge, %if.end154.for.body165_crit_edge
  %i.2355 = phi i32 [ %inc174, %for.inc173.for.body165_crit_edge ], [ 0, %if.end154.for.body165_crit_edge ]
  %arrayidx167 = getelementptr %struct.extent_buffer, ptr %call29, i32 0, i32 12, i32 %i.2355
  %100 = ptrtoint ptr %arrayidx167 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %arrayidx167, align 4
  %tobool168.not = icmp eq ptr %101, null
  br i1 %tobool168.not, label %for.body165.for.inc173_crit_edge, label %if.then169

for.body165.for.inc173_crit_edge:                 ; preds = %for.body165
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc173

if.then169:                                       ; preds = %for.body165
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @unlock_page(ptr noundef nonnull %101) #14
  br label %for.inc173

for.inc173:                                       ; preds = %if.then169, %for.body165.for.inc173_crit_edge
  %inc174 = add nuw nsw i32 %i.2355, 1
  %exitcond375.not = icmp eq i32 %inc174, %shr..i
  br i1 %exitcond375.not, label %for.inc173.for.end175_crit_edge, label %for.inc173.for.body165_crit_edge

for.inc173.for.body165_crit_edge:                 ; preds = %for.inc173
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body165

for.inc173.for.end175_crit_edge:                  ; preds = %for.inc173
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end175

for.end175:                                       ; preds = %for.inc173.for.end175_crit_edge, %if.end154.for.end175_crit_edge
  tail call fastcc void @btrfs_release_extent_buffer_pages(ptr noundef nonnull %call29) #14
  %fs_info.i = getelementptr inbounds %struct.extent_buffer, ptr %call29, i32 0, i32 3
  %102 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %fs_info.i, align 8
  %eb_leak_lock.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %103, i32 0, i32 189
  %leak_list.i = getelementptr inbounds %struct.extent_buffer, ptr %call29, i32 0, i32 14
  %call3.i.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %eb_leak_lock.i) #14
  %call.i.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %leak_list.i) #14
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %for.end175.btrfs_release_extent_buffer.exit_crit_edge

for.end175.btrfs_release_extent_buffer.exit_crit_edge: ; preds = %for.end175
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_release_extent_buffer.exit

if.end.i.i.i.i:                                   ; preds = %for.end175
  call void @__sanitizer_cov_trace_pc() #16
  %prev.i.i.i.i = getelementptr inbounds %struct.extent_buffer, ptr %call29, i32 0, i32 14, i32 1
  %104 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %prev.i.i.i.i, align 4
  %106 = ptrtoint ptr %leak_list.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %leak_list.i, align 4
  %prev1.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %107, i32 0, i32 1
  %108 = ptrtoint ptr %prev1.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %108)
  store ptr %105, ptr %prev1.i.i.i.i.i, align 4
  %109 = ptrtoint ptr %105 to i32
  call void @__asan_store4_noabort(i32 %109)
  store volatile ptr %107, ptr %105, align 4
  br label %btrfs_release_extent_buffer.exit

btrfs_release_extent_buffer.exit:                 ; preds = %if.end.i.i.i.i, %for.end175.btrfs_release_extent_buffer.exit_crit_edge
  %110 = ptrtoint ptr %leak_list.i to i32
  call void @__asan_store4_noabort(i32 %110)
  store ptr inttoptr (i32 256 to ptr), ptr %leak_list.i, align 4
  %prev.i.i.i = getelementptr inbounds %struct.extent_buffer, ptr %call29, i32 0, i32 14, i32 1
  %111 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %111)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i.i, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %eb_leak_lock.i, i32 noundef %call3.i.i) #14
  %112 = load ptr, ptr @extent_buffer_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %112, ptr noundef nonnull %call29) #14
  br label %cleanup176

cleanup176:                                       ; preds = %btrfs_release_extent_buffer.exit, %for.body123.cleanup176_crit_edge, %if.end118.cleanup176_crit_edge, %if.end28.cleanup176_crit_edge, %if.end24.cleanup176_crit_edge, %if.then22, %do.end, %if.then
  %retval.0 = phi ptr [ inttoptr (i32 -75 to ptr), %do.end ], [ inttoptr (i32 -22 to ptr), %if.then22 ], [ %exists.1, %btrfs_release_extent_buffer.exit ], [ inttoptr (i32 -22 to ptr), %if.then ], [ %call25, %if.end24.cleanup176_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.end28.cleanup176_crit_edge ], [ %call29, %if.end118.cleanup176_crit_edge ], [ %call29, %for.body123.cleanup176_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @___ratelimit(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_err_32bit_limit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_warn_32bit_limit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_set_buffer_lockdep_class(i64 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_alloc_subpage(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_free_subpage(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_page_inc_eb_refs(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @btrfs_page_test_dirty(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @free_extent_buffer(ptr noundef %eb) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %eb, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %while.cond.preheader

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

while.cond.preheader:                             ; preds = %entry
  %refs1 = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 5
  %bflags = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 2
  br label %while.cond

while.cond:                                       ; preds = %atomic_cmpxchg.exit.while.cond_crit_edge, %while.cond.preheader
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refs1, i32 noundef 4) #14
  %0 = ptrtoint ptr %refs1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %refs1, align 4
  %2 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %bflags, align 4
  %4 = and i32 %3, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool3.not = icmp eq i32 %4, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %1)
  %cmp = icmp slt i32 %1, 4
  %or.cond = select i1 %tobool3.not, i1 %cmp, i1 false
  br i1 %or.cond, label %while.cond.while.end_crit_edge, label %lor.lhs.false

while.cond.while.end_crit_edge:                   ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

lor.lhs.false:                                    ; preds = %while.cond
  %5 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %bflags, align 4
  %7 = and i32 %6, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool6.not = icmp ne i32 %7, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp8 = icmp eq i32 %1, 1
  %or.cond50 = select i1 %tobool6.not, i1 %cmp8, i1 false
  br i1 %or.cond50, label %lor.lhs.false.while.end_crit_edge, label %if.end10

lor.lhs.false.while.end_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.end10:                                         ; preds = %lor.lhs.false
  %sub = add i32 %1, -1
  %call.i.i53 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refs1, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !404
  tail call void @llvm.prefetch.p0(ptr %refs1, i32 1, i32 3, i32 1) #14
  br label %do.body.i.i.i

do.body.i.i.i:                                    ; preds = %do.body.i.i.i.do.body.i.i.i_crit_edge, %if.end10
  %8 = tail call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %refs1, ptr %refs1, i32 %1, i32 %sub, ptr elementtype(i32) %refs1) #14, !srcloc !405
  %asmresult.i.i.i = extractvalue { i32, i32 } %8, 0
  %tobool.not.i.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %atomic_cmpxchg.exit, label %do.body.i.i.i.do.body.i.i.i_crit_edge

do.body.i.i.i.do.body.i.i.i_crit_edge:            ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body.i.i.i

atomic_cmpxchg.exit:                              ; preds = %do.body.i.i.i
  %asmresult3.i.i.i = extractvalue { i32, i32 } %8, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !406
  %cmp13 = icmp eq i32 %asmresult3.i.i.i, %1
  br i1 %cmp13, label %atomic_cmpxchg.exit.cleanup_crit_edge, label %atomic_cmpxchg.exit.while.cond_crit_edge

atomic_cmpxchg.exit.while.cond_crit_edge:         ; preds = %atomic_cmpxchg.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond

atomic_cmpxchg.exit.cleanup_crit_edge:            ; preds = %atomic_cmpxchg.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

while.end:                                        ; preds = %lor.lhs.false.while.end_crit_edge, %while.cond.while.end_crit_edge
  %refs_lock = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 4
  tail call void @_raw_spin_lock(ptr noundef %refs_lock) #14
  %call.i.i54 = tail call zeroext i1 @__kasan_check_read(ptr noundef %refs1, i32 noundef 4) #14
  %9 = ptrtoint ptr %refs1 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %refs1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %10)
  %cmp18 = icmp eq i32 %10, 2
  br i1 %cmp18, label %land.lhs.true19, label %while.end.if.end32_crit_edge

while.end.if.end32_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end32

land.lhs.true19:                                  ; preds = %while.end
  %11 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %bflags, align 4
  %13 = and i32 %12, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool22.not = icmp eq i32 %13, 0
  br i1 %tobool22.not, label %land.lhs.true19.if.end32_crit_edge, label %land.lhs.true23

land.lhs.true19.if.end32_crit_edge:               ; preds = %land.lhs.true19
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end32

land.lhs.true23:                                  ; preds = %land.lhs.true19
  %io_pages.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 6
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %io_pages.i, i32 noundef 4) #14
  %14 = ptrtoint ptr %io_pages.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %io_pages.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.not.i = icmp eq i32 %15, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %land.lhs.true23.if.end32_crit_edge

land.lhs.true23.if.end32_crit_edge:               ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end32

lor.lhs.false.i:                                  ; preds = %land.lhs.true23
  %16 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %bflags, align 4
  %18 = and i32 %17, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool2.not.i = icmp eq i32 %18, 0
  br i1 %tobool2.not.i, label %extent_buffer_under_io.exit, label %lor.lhs.false.i.if.end32_crit_edge

lor.lhs.false.i.if.end32_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end32

extent_buffer_under_io.exit:                      ; preds = %lor.lhs.false.i
  %19 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %bflags, align 4
  %21 = and i32 %20, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool25.not = icmp eq i32 %21, 0
  br i1 %tobool25.not, label %land.lhs.true26, label %extent_buffer_under_io.exit.if.end32_crit_edge

extent_buffer_under_io.exit.if.end32_crit_edge:   ; preds = %extent_buffer_under_io.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end32

land.lhs.true26:                                  ; preds = %extent_buffer_under_io.exit
  %call28 = tail call i32 @_test_and_clear_bit(i32 noundef 4, ptr noundef %bflags) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28)
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %land.lhs.true26.if.end32_crit_edge, label %if.then30

land.lhs.true26.if.end32_crit_edge:               ; preds = %land.lhs.true26
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end32

if.then30:                                        ; preds = %land.lhs.true26
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i57 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refs1, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %refs1, i32 1, i32 3, i32 1) #14
  %22 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs1, ptr %refs1, i32 1, ptr elementtype(i32) %refs1) #14, !srcloc !381
  br label %if.end32

if.end32:                                         ; preds = %if.then30, %land.lhs.true26.if.end32_crit_edge, %extent_buffer_under_io.exit.if.end32_crit_edge, %lor.lhs.false.i.if.end32_crit_edge, %land.lhs.true23.if.end32_crit_edge, %land.lhs.true19.if.end32_crit_edge, %while.end.if.end32_crit_edge
  %call33 = tail call fastcc i32 @release_extent_buffer(ptr noundef nonnull %eb)
  br label %cleanup

cleanup:                                          ; preds = %if.end32, %atomic_cmpxchg.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @release_extent_buffer(ptr noundef %eb) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.rhs:                                         ; preds = %entry
  %dep_map = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 4, i32 0, i32 0, i32 4
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !319

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 6300, i32 noundef 9, ptr noundef null) #14
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %refs = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 5
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refs, i32 noundef 4) #14
  %1 = ptrtoint ptr %refs to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %refs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp26 = icmp eq i32 %2, 0
  br i1 %cmp26, label %do.end42, label %if.end.if.end48_crit_edge, !prof !319

if.end.if.end48_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end48

do.end42:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 6302, i32 noundef 9, ptr noundef null) #14
  br label %if.end48

if.end48:                                         ; preds = %do.end42, %if.end.if.end48_crit_edge
  %call.i.i101 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refs, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !352
  tail call void @llvm.prefetch.p0(ptr %refs, i32 1, i32 3, i32 1) #14
  %3 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs, ptr %refs, i32 1, ptr elementtype(i32) %refs) #14, !srcloc !353
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %3, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !354
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.i.i, label %if.then58, label %if.end80

if.then58:                                        ; preds = %if.end48
  %bflags = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 2
  %call59 = tail call i32 @_test_and_clear_bit(i32 noundef 9, ptr noundef %bflags) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call59)
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %if.else, label %if.then61

if.then61:                                        ; preds = %if.then58
  call void @__sanitizer_cov_trace_pc() #16
  %fs_info62 = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 3
  %4 = ptrtoint ptr %fs_info62 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %fs_info62, align 8
  %refs_lock63 = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 4
  tail call void @_raw_spin_unlock(ptr noundef %refs_lock63) #14
  %buffer_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 151
  tail call void @_raw_spin_lock(ptr noundef %buffer_lock) #14
  %buffer_radix = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 152
  %6 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %eb, align 8
  %sectorsize_bits = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 168
  %8 = ptrtoint ptr %sectorsize_bits to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sectorsize_bits, align 8
  %sh_prom = zext i32 %9 to i64
  %shr = lshr i64 %7, %sh_prom
  %conv = trunc i64 %shr to i32
  %call64 = tail call ptr @radix_tree_delete(ptr noundef %buffer_radix, i32 noundef %conv) #14
  br label %if.end67

if.else:                                          ; preds = %if.then58
  call void @__sanitizer_cov_trace_pc() #16
  %refs_lock66 = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 4
  br label %if.end67

if.end67:                                         ; preds = %if.else, %if.then61
  %refs_lock66.sink = phi ptr [ %refs_lock66, %if.else ], [ %buffer_lock, %if.then61 ]
  tail call void @_raw_spin_unlock(ptr noundef %refs_lock66.sink) #14
  %fs_info68 = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 3
  %10 = ptrtoint ptr %fs_info68 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %fs_info68, align 8
  %eb_leak_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %11, i32 0, i32 189
  %leak_list = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 14
  %call3.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %eb_leak_lock) #14
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %leak_list) #14
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end67.btrfs_leak_debug_del.exit_crit_edge

if.end67.btrfs_leak_debug_del.exit_crit_edge:     ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_leak_debug_del.exit

if.end.i.i.i:                                     ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #16
  %prev.i.i.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 14, i32 1
  %12 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %prev.i.i.i, align 4
  %14 = ptrtoint ptr %leak_list to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %leak_list, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %13, ptr %prev1.i.i.i.i, align 4
  %17 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %15, ptr %13, align 4
  br label %btrfs_leak_debug_del.exit

btrfs_leak_debug_del.exit:                        ; preds = %if.end.i.i.i, %if.end67.btrfs_leak_debug_del.exit_crit_edge
  %18 = ptrtoint ptr %leak_list to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr inttoptr (i32 256 to ptr), ptr %leak_list, align 4
  %prev.i.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 14, i32 1
  %19 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %eb_leak_lock, i32 noundef %call3.i) #14
  tail call fastcc void @btrfs_release_extent_buffer_pages(ptr noundef %eb)
  %20 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %bflags, align 4
  %22 = and i32 %21, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool71.not = icmp eq i32 %22, 0
  br i1 %tobool71.not, label %if.end79, label %if.then78, !prof !322

if.then78:                                        ; preds = %btrfs_leak_debug_del.exit
  call void @__sanitizer_cov_trace_pc() #16
  %23 = load ptr, ptr @extent_buffer_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %23, ptr noundef %eb) #14
  br label %return

if.end79:                                         ; preds = %btrfs_leak_debug_del.exit
  call void @__sanitizer_cov_trace_pc() #16
  %callback_head = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 8
  tail call void @call_rcu(ptr noundef %callback_head, ptr noundef nonnull @btrfs_release_extent_buffer_rcu) #14
  br label %return

if.end80:                                         ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  %refs_lock81 = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 4
  tail call void @_raw_spin_unlock(ptr noundef %refs_lock81) #14
  br label %return

return:                                           ; preds = %if.end80, %if.end79, %if.then78
  %retval.0 = phi i32 [ 1, %if.then78 ], [ 1, %if.end79 ], [ 0, %if.end80 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @free_extent_buffer_stale(ptr noundef %eb) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %eb, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end:                                           ; preds = %entry
  %refs_lock = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 4
  tail call void @_raw_spin_lock(ptr noundef %refs_lock) #14
  %bflags = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 2
  tail call void @_set_bit(i32 noundef 5, ptr noundef %bflags) #14
  %refs = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 5
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refs, i32 noundef 4) #14
  %0 = ptrtoint ptr %refs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %refs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %1)
  %cmp = icmp eq i32 %1, 2
  br i1 %cmp, label %land.lhs.true, label %if.end.if.end9_crit_edge

if.end.if.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

land.lhs.true:                                    ; preds = %if.end
  %io_pages.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 6
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %io_pages.i, i32 noundef 4) #14
  %2 = ptrtoint ptr %io_pages.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %io_pages.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %land.lhs.true.if.end9_crit_edge

land.lhs.true.if.end9_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

lor.lhs.false.i:                                  ; preds = %land.lhs.true
  %4 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %bflags, align 4
  %6 = and i32 %5, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool2.not.i = icmp eq i32 %6, 0
  br i1 %tobool2.not.i, label %extent_buffer_under_io.exit, label %lor.lhs.false.i.if.end9_crit_edge

lor.lhs.false.i.if.end9_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

extent_buffer_under_io.exit:                      ; preds = %lor.lhs.false.i
  %7 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %bflags, align 4
  %9 = and i32 %8, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool2.not = icmp eq i32 %9, 0
  br i1 %tobool2.not, label %land.lhs.true3, label %extent_buffer_under_io.exit.if.end9_crit_edge

extent_buffer_under_io.exit.if.end9_crit_edge:    ; preds = %extent_buffer_under_io.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

land.lhs.true3:                                   ; preds = %extent_buffer_under_io.exit
  %call5 = tail call i32 @_test_and_clear_bit(i32 noundef 4, ptr noundef %bflags) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %land.lhs.true3.if.end9_crit_edge, label %if.then7

land.lhs.true3.if.end9_crit_edge:                 ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

if.then7:                                         ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i18 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refs, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %refs, i32 1, i32 3, i32 1) #14
  %10 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs, ptr %refs, i32 1, ptr elementtype(i32) %refs) #14, !srcloc !381
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %land.lhs.true3.if.end9_crit_edge, %extent_buffer_under_io.exit.if.end9_crit_edge, %lor.lhs.false.i.if.end9_crit_edge, %land.lhs.true.if.end9_crit_edge, %if.end.if.end9_crit_edge
  %call10 = tail call fastcc i32 @release_extent_buffer(ptr noundef nonnull %eb)
  br label %return

return:                                           ; preds = %if.end9, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @clear_extent_buffer_dirty(ptr noundef %eb) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 3
  %0 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info, align 8
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 167
  %2 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %sectorsize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %3)
  %cmp = icmp ult i32 %3, 4096
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %pages.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 12
  %4 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pages.i, align 4
  tail call void @__might_sleep(ptr noundef nonnull @.str.130, i32 noundef 788) #14
  %6 = getelementptr inbounds %struct.page, ptr %5, i32 0, i32 1
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %6, align 4
  %and.i.i.i = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !322

if.then.i.i.i:                                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i.i = add i32 %8, -1
  br label %_compound_head.exit.i.i

if.end.i.i.i:                                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %9 = ptrtoint ptr %5 to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %9, %if.end.i.i.i ]
  %10 = inttoptr i32 %retval.0.i.i.i to ptr
  %11 = getelementptr inbounds %struct.page, ptr %10, i32 0, i32 1
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  %and.i.i.i.i.i = and i32 %13, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %folio_flags.exit.i.i.i, label %if.then.i.i.i.i, !prof !322

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %10, ptr noundef nonnull @.str.82) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

folio_flags.exit.i.i.i:                           ; preds = %_compound_head.exit.i.i
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %10, i32 noundef 4) #14
  %14 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %10, align 4
  %and.i.i4.i.i.i = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i.i)
  %tobool.not.i.i.i.i.i = icmp eq i32 %and.i.i4.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %folio_trylock.exit.i.i, label %folio_flags.exit.i.i.i.if.then.i.i50_crit_edge

folio_flags.exit.i.i.i.if.then.i.i50_crit_edge:   ; preds = %folio_flags.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i50

folio_trylock.exit.i.i:                           ; preds = %folio_flags.exit.i.i.i
  tail call void @llvm.prefetch.p0(ptr %10, i32 1, i32 3, i32 1) #14
  %16 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %10, ptr %10, i32 1, ptr elementtype(i32) %10) #14, !srcloc !383
  %asmresult.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %16, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !384
  %and1.i.i.i.i.i = and i32 %asmresult.i.i.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i)
  %phi.cmp.i.i.i.i = icmp eq i32 %and1.i.i.i.i.i, 0
  br i1 %phi.cmp.i.i.i.i, label %folio_trylock.exit.i.i.lock_page.exit.i_crit_edge, label %folio_trylock.exit.i.i.if.then.i.i50_crit_edge

folio_trylock.exit.i.i.if.then.i.i50_crit_edge:   ; preds = %folio_trylock.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i50

folio_trylock.exit.i.i.lock_page.exit.i_crit_edge: ; preds = %folio_trylock.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %lock_page.exit.i

if.then.i.i50:                                    ; preds = %folio_trylock.exit.i.i.if.then.i.i50_crit_edge, %folio_flags.exit.i.i.i.if.then.i.i50_crit_edge
  tail call void @__folio_lock(ptr noundef %10) #14
  br label %lock_page.exit.i

lock_page.exit.i:                                 ; preds = %if.then.i.i50, %folio_trylock.exit.i.i.lock_page.exit.i_crit_edge
  %17 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %eb, align 8
  %len.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %19 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %len.i, align 8
  %call.i = tail call zeroext i1 @btrfs_subpage_clear_and_test_dirty(ptr noundef %1, ptr noundef %5, i64 noundef %18, i32 noundef %20) #14
  br i1 %call.i, label %if.then.i51, label %lock_page.exit.i.if.end.i_crit_edge

lock_page.exit.i.if.end.i_crit_edge:              ; preds = %lock_page.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

if.then.i51:                                      ; preds = %lock_page.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @btree_clear_page_dirty(ptr noundef %5) #14
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i51, %lock_page.exit.i.if.end.i_crit_edge
  tail call void @unlock_page(ptr noundef %5) #14
  %refs.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 5
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refs.i, i32 noundef 4) #14
  %21 = ptrtoint ptr %refs.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %refs.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %cmp.i = icmp eq i32 %22, 0
  br i1 %cmp.i, label %if.end.i.cleanup.sink.split_crit_edge, label %if.end.i.cleanup_crit_edge, !prof !319

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i.cleanup.sink.split_crit_edge:            ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end:                                           ; preds = %entry
  %len.i52 = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %23 = ptrtoint ptr %len.i52 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %len.i52, align 8
  %shr.i = lshr i32 %24, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %24)
  %tobool.not.i53 = icmp ult i32 %24, 4096
  %shr..i = select i1 %tobool.not.i53, i32 1, i32 %shr.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr..i)
  %cmp180.not = icmp eq i32 %shr..i, 0
  br i1 %cmp180.not, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end.for.body_crit_edge
  %i.081 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %if.end.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %i.081
  %25 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx, align 4
  %27 = getelementptr inbounds %struct.page, ptr %26, i32 0, i32 1
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %27, align 4
  %and.i.i = and i32 %29, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !322

if.then.i.i:                                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %29, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %30 = ptrtoint ptr %26 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %30, %if.end.i.i ]
  %31 = inttoptr i32 %retval.0.i.i to ptr
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %31, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %33)
  %cmp.i.not.i = icmp eq i32 %33, -1
  %34 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %27, align 4
  %and.i13.i = and i32 %35, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i)
  %tobool.not.i14.i = icmp eq i32 %and.i13.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end8.i, !prof !319

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i17.i, label %if.then.i16.i, !prof !322

if.then.i16.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i15.i = add i32 %35, -1
  br label %_compound_head.exit19.i

if.end.i17.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %36 = ptrtoint ptr %26 to i32
  br label %_compound_head.exit19.i

_compound_head.exit19.i:                          ; preds = %if.end.i17.i, %if.then.i16.i
  %retval.0.i18.i = phi i32 [ %sub.i15.i, %if.then.i16.i ], [ %36, %if.end.i17.i ]
  %37 = inttoptr i32 %retval.0.i18.i to ptr
  tail call void @dump_page(ptr noundef %37, ptr noundef nonnull @.str.86) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 420, 0\0A.popsection", ""() #14, !srcloc !357
  unreachable

do.end8.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i24.i, label %if.then.i23.i, !prof !322

if.then.i23.i:                                    ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i22.i = add i32 %35, -1
  br label %PageDirty.exit

if.end.i24.i:                                     ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  %38 = ptrtoint ptr %26 to i32
  br label %PageDirty.exit

PageDirty.exit:                                   ; preds = %if.end.i24.i, %if.then.i23.i
  %retval.0.i25.i = phi i32 [ %sub.i22.i, %if.then.i23.i ], [ %38, %if.end.i24.i ]
  %39 = inttoptr i32 %retval.0.i25.i to ptr
  %40 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %39, align 4
  %42 = and i32 %41, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool.not = icmp eq i32 %42, 0
  br i1 %tobool.not, label %PageDirty.exit.for.inc_crit_edge, label %if.end4

PageDirty.exit.for.inc_crit_edge:                 ; preds = %PageDirty.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.end4:                                          ; preds = %PageDirty.exit
  tail call void @__might_sleep(ptr noundef nonnull @.str.130, i32 noundef 788) #14
  %43 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %27, align 4
  %and.i.i54 = and i32 %44, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i54)
  %tobool.not.i.i55 = icmp eq i32 %and.i.i54, 0
  br i1 %tobool.not.i.i55, label %if.end.i.i58, label %if.then.i.i57, !prof !322

if.then.i.i57:                                    ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i56 = add i32 %44, -1
  br label %_compound_head.exit.i61

if.end.i.i58:                                     ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  %45 = ptrtoint ptr %26 to i32
  br label %_compound_head.exit.i61

_compound_head.exit.i61:                          ; preds = %if.end.i.i58, %if.then.i.i57
  %retval.0.i.i59 = phi i32 [ %sub.i.i56, %if.then.i.i57 ], [ %45, %if.end.i.i58 ]
  %46 = inttoptr i32 %retval.0.i.i59 to ptr
  %47 = getelementptr inbounds %struct.page, ptr %46, i32 0, i32 1
  %48 = ptrtoint ptr %47 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %47, align 4
  %and.i.i.i.i = and i32 %49, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i60 = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i60, label %folio_flags.exit.i.i, label %if.then.i.i.i62, !prof !322

if.then.i.i.i62:                                  ; preds = %_compound_head.exit.i61
  call void @__sanitizer_cov_trace_pc() #16
  %50 = inttoptr i32 %retval.0.i.i59 to ptr
  tail call void @dump_page(ptr noundef %50, ptr noundef nonnull @.str.82) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

folio_flags.exit.i.i:                             ; preds = %_compound_head.exit.i61
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %46, i32 noundef 4) #14
  %51 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load volatile i32, ptr %46, align 4
  %and.i.i4.i.i = and i32 %52, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i)
  %tobool.not.i.i.i.i63 = icmp eq i32 %and.i.i4.i.i, 0
  br i1 %tobool.not.i.i.i.i63, label %folio_trylock.exit.i, label %folio_flags.exit.i.i.if.then.i64_crit_edge

folio_flags.exit.i.i.if.then.i64_crit_edge:       ; preds = %folio_flags.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i64

folio_trylock.exit.i:                             ; preds = %folio_flags.exit.i.i
  tail call void @llvm.prefetch.p0(ptr %46, i32 1, i32 3, i32 1) #14
  %53 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %46, ptr %46, i32 1, ptr elementtype(i32) %46) #14, !srcloc !383
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %53, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !384
  %and1.i.i.i.i = and i32 %asmresult.i.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i)
  %phi.cmp.i.i.i = icmp eq i32 %and1.i.i.i.i, 0
  br i1 %phi.cmp.i.i.i, label %folio_trylock.exit.i.lock_page.exit_crit_edge, label %folio_trylock.exit.i.if.then.i64_crit_edge

folio_trylock.exit.i.if.then.i64_crit_edge:       ; preds = %folio_trylock.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i64

folio_trylock.exit.i.lock_page.exit_crit_edge:    ; preds = %folio_trylock.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %lock_page.exit

if.then.i64:                                      ; preds = %folio_trylock.exit.i.if.then.i64_crit_edge, %folio_flags.exit.i.i.if.then.i64_crit_edge
  tail call void @__folio_lock(ptr noundef %46) #14
  br label %lock_page.exit

lock_page.exit:                                   ; preds = %if.then.i64, %folio_trylock.exit.i.lock_page.exit_crit_edge
  tail call fastcc void @btree_clear_page_dirty(ptr noundef %26)
  %54 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %27, align 4
  %and.i.i41 = and i32 %55, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i41)
  %tobool.not.i = icmp eq i32 %and.i.i41, 0
  br i1 %tobool.not.i, label %do.body7.i, label %if.then.i42, !prof !322

if.then.i42:                                      ; preds = %lock_page.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %26, ptr noundef nonnull @.str.110) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 416, 0\0A.popsection", ""() #14, !srcloc !407
  unreachable

do.body7.i:                                       ; preds = %lock_page.exit
  %56 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %27, align 4
  %and.i31.i = and i32 %57, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i31.i)
  %tobool.not.i.i43 = icmp eq i32 %and.i31.i, 0
  br i1 %tobool.not.i.i43, label %if.end.i.i46, label %if.then.i.i45, !prof !322

if.then.i.i45:                                    ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i44 = add i32 %57, -1
  br label %_compound_head.exit.i49

if.end.i.i46:                                     ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #16
  %58 = ptrtoint ptr %26 to i32
  br label %_compound_head.exit.i49

_compound_head.exit.i49:                          ; preds = %if.end.i.i46, %if.then.i.i45
  %retval.0.i.i47 = phi i32 [ %sub.i.i44, %if.then.i.i45 ], [ %58, %if.end.i.i46 ]
  %59 = inttoptr i32 %retval.0.i.i47 to ptr
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %59, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %61)
  %cmp.i.not.i48 = icmp eq i32 %61, -1
  %62 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %27, align 4
  %and.i32.i = and i32 %63, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i32.i)
  %tobool.not.i33.i = icmp eq i32 %and.i32.i, 0
  br i1 %cmp.i.not.i48, label %if.then17.i, label %do.end24.i, !prof !319

if.then17.i:                                      ; preds = %_compound_head.exit.i49
  br i1 %tobool.not.i33.i, label %if.end.i36.i, label %if.then.i35.i, !prof !322

if.then.i35.i:                                    ; preds = %if.then17.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i34.i = add i32 %63, -1
  br label %_compound_head.exit38.i

if.end.i36.i:                                     ; preds = %if.then17.i
  call void @__sanitizer_cov_trace_pc() #16
  %64 = ptrtoint ptr %26 to i32
  br label %_compound_head.exit38.i

_compound_head.exit38.i:                          ; preds = %if.end.i36.i, %if.then.i35.i
  %retval.0.i37.i = phi i32 [ %sub.i34.i, %if.then.i35.i ], [ %64, %if.end.i36.i ]
  %65 = inttoptr i32 %retval.0.i37.i to ptr
  tail call void @dump_page(ptr noundef %65, ptr noundef nonnull @.str.86) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 416, 0\0A.popsection", ""() #14, !srcloc !408
  unreachable

do.end24.i:                                       ; preds = %_compound_head.exit.i49
  br i1 %tobool.not.i33.i, label %if.end.i43.i, label %if.then.i42.i, !prof !322

if.then.i42.i:                                    ; preds = %do.end24.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i41.i = add i32 %63, -1
  br label %ClearPageError.exit

if.end.i43.i:                                     ; preds = %do.end24.i
  call void @__sanitizer_cov_trace_pc() #16
  %66 = ptrtoint ptr %26 to i32
  br label %ClearPageError.exit

ClearPageError.exit:                              ; preds = %if.end.i43.i, %if.then.i42.i
  %retval.0.i44.i = phi i32 [ %sub.i41.i, %if.then.i42.i ], [ %66, %if.end.i43.i ]
  %67 = inttoptr i32 %retval.0.i44.i to ptr
  tail call void @_clear_bit(i32 noundef 8, ptr noundef %67) #14
  tail call void @unlock_page(ptr noundef %26) #14
  br label %for.inc

for.inc:                                          ; preds = %ClearPageError.exit, %PageDirty.exit.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.081, 1
  %exitcond.not = icmp eq i32 %inc, %shr..i
  br i1 %exitcond.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end.for.end_crit_edge
  %refs = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 5
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refs, i32 noundef 4) #14
  %68 = ptrtoint ptr %refs to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile i32, ptr %refs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %69)
  %cmp6 = icmp eq i32 %69, 0
  br i1 %cmp6, label %for.end.cleanup.sink.split_crit_edge, label %for.end.cleanup_crit_edge, !prof !319

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.end.cleanup.sink.split_crit_edge:             ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %for.end.cleanup.sink.split_crit_edge, %if.end.i.cleanup.sink.split_crit_edge
  %.sink = phi i32 [ 6405, %if.end.i.cleanup.sink.split_crit_edge ], [ 6428, %for.end.cleanup.sink.split_crit_edge ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef %.sink, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %for.end.cleanup_crit_edge, %if.end.i.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @btree_clear_page_dirty(ptr noundef %page) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !322

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %2, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %3 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %3, %if.end.i.i ]
  %4 = inttoptr i32 %retval.0.i.i to ptr
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %6)
  %cmp.i.not.i = icmp eq i32 %6, -1
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %0, align 4
  %and.i13.i = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i)
  %tobool.not.i14.i = icmp eq i32 %and.i13.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end8.i, !prof !319

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i17.i, label %if.then.i16.i, !prof !322

if.then.i16.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i15.i = add i32 %8, -1
  br label %_compound_head.exit19.i

if.end.i17.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %9 = ptrtoint ptr %page to i32
  br label %_compound_head.exit19.i

_compound_head.exit19.i:                          ; preds = %if.end.i17.i, %if.then.i16.i
  %retval.0.i18.i = phi i32 [ %sub.i15.i, %if.then.i16.i ], [ %9, %if.end.i17.i ]
  %10 = inttoptr i32 %retval.0.i18.i to ptr
  tail call void @dump_page(ptr noundef %10, ptr noundef nonnull @.str.86) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 420, 0\0A.popsection", ""() #14, !srcloc !357
  unreachable

do.end8.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i24.i, label %if.then.i23.i, !prof !322

if.then.i23.i:                                    ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i22.i = add i32 %8, -1
  br label %PageDirty.exit

if.end.i24.i:                                     ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  %11 = ptrtoint ptr %page to i32
  br label %PageDirty.exit

PageDirty.exit:                                   ; preds = %if.end.i24.i, %if.then.i23.i
  %retval.0.i25.i = phi i32 [ %sub.i22.i, %if.then.i23.i ], [ %11, %if.end.i24.i ]
  %12 = inttoptr i32 %retval.0.i25.i to ptr
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %12, align 4
  %15 = and i32 %14, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.not = icmp eq i32 %15, 0
  br i1 %tobool.not, label %cond.false, label %cond.end, !prof !319

cond.false:                                       ; preds = %PageDirty.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.31, i32 noundef 6382) #18
  unreachable

cond.end:                                         ; preds = %PageDirty.exit
  %16 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %0, align 4
  %and.i.i30 = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i30)
  %tobool.not.i.i31 = icmp eq i32 %and.i.i30, 0
  br i1 %tobool.not.i.i31, label %if.end.i.i34, label %if.then.i.i33, !prof !322

if.then.i.i33:                                    ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i32 = add i32 %17, -1
  br label %_compound_head.exit.i37

if.end.i.i34:                                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  %18 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i37

_compound_head.exit.i37:                          ; preds = %if.end.i.i34, %if.then.i.i33
  %retval.0.i.i35 = phi i32 [ %sub.i.i32, %if.then.i.i33 ], [ %18, %if.end.i.i34 ]
  %19 = inttoptr i32 %retval.0.i.i35 to ptr
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %19, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %21)
  %cmp.i.not.i36 = icmp eq i32 %21, -1
  %22 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %0, align 4
  %and.i16.i = and i32 %23, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i)
  %tobool.not.i17.i = icmp eq i32 %and.i16.i, 0
  br i1 %cmp.i.not.i36, label %if.then.i38, label %do.end10.i, !prof !319

if.then.i38:                                      ; preds = %_compound_head.exit.i37
  br i1 %tobool.not.i17.i, label %if.end.i20.i, label %if.then.i19.i, !prof !322

if.then.i19.i:                                    ; preds = %if.then.i38
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i18.i = add i32 %23, -1
  br label %_compound_head.exit22.i

if.end.i20.i:                                     ; preds = %if.then.i38
  call void @__sanitizer_cov_trace_pc() #16
  %24 = ptrtoint ptr %page to i32
  br label %_compound_head.exit22.i

_compound_head.exit22.i:                          ; preds = %if.end.i20.i, %if.then.i19.i
  %retval.0.i21.i = phi i32 [ %sub.i18.i, %if.then.i19.i ], [ %24, %if.end.i20.i ]
  %25 = inttoptr i32 %retval.0.i21.i to ptr
  tail call void @dump_page(ptr noundef %25, ptr noundef nonnull @.str.86) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 414, 0\0A.popsection", ""() #14, !srcloc !367
  unreachable

do.end10.i:                                       ; preds = %_compound_head.exit.i37
  br i1 %tobool.not.i17.i, label %if.end.i27.i, label %if.then.i26.i, !prof !322

if.then.i26.i:                                    ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i25.i = add i32 %23, -1
  br label %PageLocked.exit

if.end.i27.i:                                     ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  %26 = ptrtoint ptr %page to i32
  br label %PageLocked.exit

PageLocked.exit:                                  ; preds = %if.end.i27.i, %if.then.i26.i
  %retval.0.i28.i = phi i32 [ %sub.i25.i, %if.then.i26.i ], [ %26, %if.end.i27.i ]
  %27 = inttoptr i32 %retval.0.i28.i to ptr
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %27, align 4
  %and1.i.i39 = and i32 %29, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i39)
  %tobool4.not = icmp eq i32 %and1.i.i39, 0
  br i1 %tobool4.not, label %cond.false12, label %cond.end13, !prof !319

cond.false12:                                     ; preds = %PageLocked.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.30, i32 noundef 6383) #18
  unreachable

cond.end13:                                       ; preds = %PageLocked.exit
  %call14 = tail call zeroext i1 @clear_page_dirty_for_io(ptr noundef %page) #14
  %mapping = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %30 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %mapping, align 4
  %i_pages = getelementptr inbounds %struct.address_space, ptr %31, i32 0, i32 1
  tail call void @_raw_spin_lock_irq(ptr noundef %i_pages) #14
  %32 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %0, align 4
  %and.i.i40 = and i32 %33, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i40)
  %tobool.not.i.i41 = icmp eq i32 %and.i.i40, 0
  br i1 %tobool.not.i.i41, label %if.end.i.i44, label %if.then.i.i43, !prof !322

if.then.i.i43:                                    ; preds = %cond.end13
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i42 = add i32 %33, -1
  br label %_compound_head.exit.i49

if.end.i.i44:                                     ; preds = %cond.end13
  call void @__sanitizer_cov_trace_pc() #16
  %34 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i49

_compound_head.exit.i49:                          ; preds = %if.end.i.i44, %if.then.i.i43
  %retval.0.i.i45 = phi i32 [ %sub.i.i42, %if.then.i.i43 ], [ %34, %if.end.i.i44 ]
  %35 = inttoptr i32 %retval.0.i.i45 to ptr
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %35, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %37)
  %cmp.i.not.i46 = icmp eq i32 %37, -1
  %38 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %0, align 4
  %and.i13.i47 = and i32 %39, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i47)
  %tobool.not.i14.i48 = icmp eq i32 %and.i13.i47, 0
  br i1 %cmp.i.not.i46, label %if.then.i50, label %do.end8.i56, !prof !319

if.then.i50:                                      ; preds = %_compound_head.exit.i49
  br i1 %tobool.not.i14.i48, label %if.end.i17.i53, label %if.then.i16.i52, !prof !322

if.then.i16.i52:                                  ; preds = %if.then.i50
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i15.i51 = add i32 %39, -1
  br label %_compound_head.exit19.i55

if.end.i17.i53:                                   ; preds = %if.then.i50
  call void @__sanitizer_cov_trace_pc() #16
  %40 = ptrtoint ptr %page to i32
  br label %_compound_head.exit19.i55

_compound_head.exit19.i55:                        ; preds = %if.end.i17.i53, %if.then.i16.i52
  %retval.0.i18.i54 = phi i32 [ %sub.i15.i51, %if.then.i16.i52 ], [ %40, %if.end.i17.i53 ]
  %41 = inttoptr i32 %retval.0.i18.i54 to ptr
  tail call void @dump_page(ptr noundef %41, ptr noundef nonnull @.str.86) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 420, 0\0A.popsection", ""() #14, !srcloc !357
  unreachable

do.end8.i56:                                      ; preds = %_compound_head.exit.i49
  br i1 %tobool.not.i14.i48, label %if.end.i24.i59, label %if.then.i23.i58, !prof !322

if.then.i23.i58:                                  ; preds = %do.end8.i56
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i22.i57 = add i32 %39, -1
  br label %PageDirty.exit63

if.end.i24.i59:                                   ; preds = %do.end8.i56
  call void @__sanitizer_cov_trace_pc() #16
  %42 = ptrtoint ptr %page to i32
  br label %PageDirty.exit63

PageDirty.exit63:                                 ; preds = %if.end.i24.i59, %if.then.i23.i58
  %retval.0.i25.i60 = phi i32 [ %sub.i22.i57, %if.then.i23.i58 ], [ %42, %if.end.i24.i59 ]
  %43 = inttoptr i32 %retval.0.i25.i60 to ptr
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %43, align 4
  %46 = and i32 %45, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %tobool16.not = icmp eq i32 %46, 0
  br i1 %tobool16.not, label %if.then, label %PageDirty.exit63.if.end_crit_edge

PageDirty.exit63.if.end_crit_edge:                ; preds = %PageDirty.exit63
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %PageDirty.exit63
  %47 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %mapping, align 4
  %i_pages18 = getelementptr inbounds %struct.address_space, ptr %48, i32 0, i32 1
  %49 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %0, align 4
  %and.i.i.i = and i32 %50, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !322

if.then.i.i.i:                                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i.i = add i32 %50, -1
  br label %_compound_head.exit.i.i

if.end.i.i.i:                                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %51 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %51, %if.end.i.i.i ]
  %52 = inttoptr i32 %retval.0.i.i.i to ptr
  %53 = getelementptr inbounds %struct.page, ptr %52, i32 0, i32 1
  %54 = ptrtoint ptr %53 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %53, align 4
  %and.i.i.i.i.i.i = and i32 %55, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i)
  %tobool.not.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %folio_test_swapbacked.exit.i.i.i, label %if.then.i.i.i.i.i, !prof !322

if.then.i.i.i.i.i:                                ; preds = %_compound_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %52, ptr noundef nonnull @.str.82) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

folio_test_swapbacked.exit.i.i.i:                 ; preds = %_compound_head.exit.i.i
  %56 = ptrtoint ptr %52 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %52, align 4
  %58 = and i32 %57, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %tobool.i.not.i.i.i = icmp eq i32 %58, 0
  br i1 %tobool.i.not.i.i.i, label %folio_test_swapbacked.exit.i.i.i.if.end.i_crit_edge, label %land.rhs.i.i.i

folio_test_swapbacked.exit.i.i.i.if.end.i_crit_edge: ; preds = %folio_test_swapbacked.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

land.rhs.i.i.i:                                   ; preds = %folio_test_swapbacked.exit.i.i.i
  %59 = ptrtoint ptr %53 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %53, align 4
  %and.i.i.i.i.i = and i32 %60, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %PageSwapCache.exit.i, label %if.then.i.i.i.i, !prof !322

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %52, ptr noundef nonnull @.str.82) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

PageSwapCache.exit.i:                             ; preds = %land.rhs.i.i.i
  %61 = ptrtoint ptr %52 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile i32, ptr %52, align 4
  %63 = and i32 %62, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %63)
  %tobool.i.i.not.i = icmp eq i32 %63, 0
  br i1 %tobool.i.i.not.i, label %PageSwapCache.exit.i.if.end.i_crit_edge, label %if.then.i64, !prof !322

PageSwapCache.exit.i.if.end.i_crit_edge:          ; preds = %PageSwapCache.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

if.then.i64:                                      ; preds = %PageSwapCache.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %call2.i = tail call i32 @__page_file_index(ptr noundef %page) #14
  br label %page_index.exit

if.end.i:                                         ; preds = %PageSwapCache.exit.i.if.end.i_crit_edge, %folio_test_swapbacked.exit.i.i.i.if.end.i_crit_edge
  %index.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 2
  %64 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %index.i, align 4
  br label %page_index.exit

page_index.exit:                                  ; preds = %if.end.i, %if.then.i64
  %retval.0.i = phi i32 [ %call2.i, %if.then.i64 ], [ %65, %if.end.i ]
  tail call void @__xa_clear_mark(ptr noundef %i_pages18, i32 noundef %retval.0.i, i32 noundef 0) #14
  br label %if.end

if.end:                                           ; preds = %page_index.exit, %PageDirty.exit63.if.end_crit_edge
  %66 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %mapping, align 4
  %i_pages21 = getelementptr inbounds %struct.address_space, ptr %67, i32 0, i32 1
  tail call void @_raw_spin_unlock_irq(ptr noundef %i_pages21) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @set_extent_buffer_dirty(ptr noundef %eb) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @check_buffer_tree_ref(ptr noundef %eb)
  %bflags = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 2
  %call = tail call i32 @_test_and_set_bit(i32 noundef 1, ptr noundef %bflags) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool = icmp ne i32 %call, 0
  %len.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %0 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len.i, align 8
  %shr.i113 = lshr i32 %1, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %1)
  %tobool.not.i = icmp ult i32 %1, 4096
  %shr..i = select i1 %tobool.not.i, i32 1, i32 %shr.i113
  %refs = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 5
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refs, i32 noundef 4) #14
  %2 = ptrtoint ptr %refs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %refs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %do.end, label %entry.if.end_crit_edge, !prof !319

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 6442, i32 noundef 9, ptr noundef null) #14
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %4 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %bflags, align 4
  %6 = and i32 %5, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool25.not = icmp eq i32 %6, 0
  br i1 %tobool25.not, label %do.end43, label %if.end.if.end49_crit_edge, !prof !319

if.end.if.end49_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end49

do.end43:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 6443, i32 noundef 9, ptr noundef null) #14
  br label %if.end49

if.end49:                                         ; preds = %do.end43, %if.end.if.end49_crit_edge
  br i1 %tobool, label %if.end49.if.end73_crit_edge, label %if.then58

if.end49.if.end73_crit_edge:                      ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end73

if.then58:                                        ; preds = %if.end49
  %fs_info = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 3
  %7 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %fs_info, align 8
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %8, i32 0, i32 167
  %9 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sectorsize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %10)
  %cmp59 = icmp ult i32 %10, 4096
  br i1 %cmp59, label %if.then62, label %if.then58.if.end63_crit_edge

if.then58.if.end63_crit_edge:                     ; preds = %if.then58
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end63

if.then62:                                        ; preds = %if.then58
  %pages = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 12
  %11 = ptrtoint ptr %pages to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %pages, align 4
  tail call void @__might_sleep(ptr noundef nonnull @.str.130, i32 noundef 788) #14
  %13 = getelementptr inbounds %struct.page, ptr %12, i32 0, i32 1
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %13, align 4
  %and.i.i114 = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i114)
  %tobool.not.i.i115 = icmp eq i32 %and.i.i114, 0
  br i1 %tobool.not.i.i115, label %if.end.i.i118, label %if.then.i.i117, !prof !322

if.then.i.i117:                                   ; preds = %if.then62
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i116 = add i32 %15, -1
  br label %_compound_head.exit.i120

if.end.i.i118:                                    ; preds = %if.then62
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %12 to i32
  br label %_compound_head.exit.i120

_compound_head.exit.i120:                         ; preds = %if.end.i.i118, %if.then.i.i117
  %retval.0.i.i119 = phi i32 [ %sub.i.i116, %if.then.i.i117 ], [ %16, %if.end.i.i118 ]
  %17 = inttoptr i32 %retval.0.i.i119 to ptr
  %18 = getelementptr inbounds %struct.page, ptr %17, i32 0, i32 1
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %18, align 4
  %and.i.i.i.i = and i32 %20, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %folio_flags.exit.i.i, label %if.then.i.i.i, !prof !322

if.then.i.i.i:                                    ; preds = %_compound_head.exit.i120
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %17, ptr noundef nonnull @.str.82) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

folio_flags.exit.i.i:                             ; preds = %_compound_head.exit.i120
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %17, i32 noundef 4) #14
  %21 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %17, align 4
  %and.i.i4.i.i = and i32 %22, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i4.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %folio_trylock.exit.i, label %folio_flags.exit.i.i.if.then.i121_crit_edge

folio_flags.exit.i.i.if.then.i121_crit_edge:      ; preds = %folio_flags.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i121

folio_trylock.exit.i:                             ; preds = %folio_flags.exit.i.i
  tail call void @llvm.prefetch.p0(ptr %17, i32 1, i32 3, i32 1) #14
  %23 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %17, ptr %17, i32 1, ptr elementtype(i32) %17) #14, !srcloc !383
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %23, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !384
  %and1.i.i.i.i = and i32 %asmresult.i.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i)
  %phi.cmp.i.i.i = icmp eq i32 %and1.i.i.i.i, 0
  br i1 %phi.cmp.i.i.i, label %folio_trylock.exit.i.if.end63_crit_edge, label %folio_trylock.exit.i.if.then.i121_crit_edge

folio_trylock.exit.i.if.then.i121_crit_edge:      ; preds = %folio_trylock.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i121

folio_trylock.exit.i.if.end63_crit_edge:          ; preds = %folio_trylock.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end63

if.then.i121:                                     ; preds = %folio_trylock.exit.i.if.then.i121_crit_edge, %folio_flags.exit.i.i.if.then.i121_crit_edge
  tail call void @__folio_lock(ptr noundef %17) #14
  br label %if.end63

if.end63:                                         ; preds = %if.then.i121, %folio_trylock.exit.i.if.end63_crit_edge, %if.then58.if.end63_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr..i)
  %cmp64126.not = icmp eq i32 %shr..i, 0
  br i1 %cmp64126.not, label %if.end63.for.end_crit_edge, label %if.end63.for.body_crit_edge

if.end63.for.body_crit_edge:                      ; preds = %if.end63
  br label %for.body

if.end63.for.end_crit_edge:                       ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end63.for.body_crit_edge
  %i.0127 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %if.end63.for.body_crit_edge ]
  %24 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %fs_info, align 8
  %arrayidx67 = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %i.0127
  %26 = ptrtoint ptr %arrayidx67 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx67, align 4
  %28 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %eb, align 8
  %30 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %len.i, align 8
  tail call void @btrfs_page_set_dirty(ptr noundef %25, ptr noundef %27, i64 noundef %29, i32 noundef %31) #14
  %inc = add nuw nsw i32 %i.0127, 1
  %exitcond.not = icmp eq i32 %inc, %shr..i
  br i1 %exitcond.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end63.for.end_crit_edge
  br i1 %cmp59, label %if.then69, label %for.end.if.end73_crit_edge

for.end.if.end73_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end73

if.then69:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  %pages70 = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 12
  %32 = ptrtoint ptr %pages70 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %pages70, align 4
  tail call void @unlock_page(ptr noundef %33) #14
  br label %if.end73

if.end73:                                         ; preds = %if.then69, %for.end.if.end73_crit_edge, %if.end49.if.end73_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr..i)
  %cmp75128.not = icmp eq i32 %shr..i, 0
  br i1 %cmp75128.not, label %if.end73.for.end89_crit_edge, label %if.end73.for.body76_crit_edge

if.end73.for.body76_crit_edge:                    ; preds = %if.end73
  br label %for.body76

if.end73.for.end89_crit_edge:                     ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end89

for.cond74:                                       ; preds = %PageDirty.exit
  %inc88 = add nuw nsw i32 %i.1129, 1
  %exitcond137.not = icmp eq i32 %inc88, %shr..i
  br i1 %exitcond137.not, label %for.cond74.for.end89_crit_edge, label %for.cond74.for.body76_crit_edge

for.cond74.for.body76_crit_edge:                  ; preds = %for.cond74
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body76

for.cond74.for.end89_crit_edge:                   ; preds = %for.cond74
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end89

for.body76:                                       ; preds = %for.cond74.for.body76_crit_edge, %if.end73.for.body76_crit_edge
  %i.1129 = phi i32 [ %inc88, %for.cond74.for.body76_crit_edge ], [ 0, %if.end73.for.body76_crit_edge ]
  %arrayidx78 = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %i.1129
  %34 = ptrtoint ptr %arrayidx78 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %arrayidx78, align 4
  %36 = getelementptr inbounds %struct.page, ptr %35, i32 0, i32 1
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %36, align 4
  %and.i.i = and i32 %38, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !322

if.then.i.i:                                      ; preds = %for.body76
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %38, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %for.body76
  call void @__sanitizer_cov_trace_pc() #16
  %39 = ptrtoint ptr %35 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %39, %if.end.i.i ]
  %40 = inttoptr i32 %retval.0.i.i to ptr
  %41 = ptrtoint ptr %40 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %40, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %42)
  %cmp.i.not.i = icmp eq i32 %42, -1
  %43 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %36, align 4
  %and.i13.i = and i32 %44, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i13.i)
  %tobool.not.i14.i = icmp eq i32 %and.i13.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end8.i, !prof !319

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i17.i, label %if.then.i16.i, !prof !322

if.then.i16.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i15.i = add i32 %44, -1
  br label %_compound_head.exit19.i

if.end.i17.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %45 = ptrtoint ptr %35 to i32
  br label %_compound_head.exit19.i

_compound_head.exit19.i:                          ; preds = %if.end.i17.i, %if.then.i16.i
  %retval.0.i18.i = phi i32 [ %sub.i15.i, %if.then.i16.i ], [ %45, %if.end.i17.i ]
  %46 = inttoptr i32 %retval.0.i18.i to ptr
  tail call void @dump_page(ptr noundef %46, ptr noundef nonnull @.str.86) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 420, 0\0A.popsection", ""() #14, !srcloc !357
  unreachable

do.end8.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i14.i, label %if.end.i24.i, label %if.then.i23.i, !prof !322

if.then.i23.i:                                    ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i22.i = add i32 %44, -1
  br label %PageDirty.exit

if.end.i24.i:                                     ; preds = %do.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  %47 = ptrtoint ptr %35 to i32
  br label %PageDirty.exit

PageDirty.exit:                                   ; preds = %if.end.i24.i, %if.then.i23.i
  %retval.0.i25.i = phi i32 [ %sub.i22.i, %if.then.i23.i ], [ %47, %if.end.i24.i ]
  %48 = inttoptr i32 %retval.0.i25.i to ptr
  %49 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %48, align 4
  %51 = and i32 %50, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool80.not = icmp eq i32 %51, 0
  br i1 %tobool80.not, label %cond.false, label %for.cond74, !prof !319

cond.false:                                       ; preds = %PageDirty.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.38, i32 noundef 6469) #18
  unreachable

for.end89:                                        ; preds = %for.cond74.for.end89_crit_edge, %if.end73.for.end89_crit_edge
  ret i1 %tobool
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_page_set_dirty(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @clear_extent_buffer_uptodate(ptr noundef %eb) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info1 = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 3
  %0 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info1, align 8
  %bflags = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 2
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %bflags) #14
  %len.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %2 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %len.i, align 8
  %shr.i = lshr i32 %3, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %3)
  %tobool.not.i = icmp ult i32 %3, 4096
  %shr..i = select i1 %tobool.not.i, i32 1, i32 %shr.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr..i)
  %cmp10.not = icmp eq i32 %shr..i, 0
  br i1 %cmp10.not, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %i.011 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %i.011
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %6 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %eb, align 8
  %8 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %len.i, align 8
  tail call void @btrfs_page_clear_uptodate(ptr noundef %1, ptr noundef nonnull %5, i64 noundef %7, i32 noundef %9) #14
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.011, 1
  %exitcond.not = icmp eq i32 %inc, %shr..i
  br i1 %exitcond.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_page_set_uptodate(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @read_extent_buffer_pages(ptr noundef %eb, i32 noundef %wait, i32 noundef %mirror_num) local_unnamed_addr #0 align 64 {
entry:
  %failed_start.i.i = alloca i64, align 8
  %bio_ctrl.i = alloca %struct.btrfs_bio_ctrl, align 4
  %bio_ctrl = alloca %struct.btrfs_bio_ctrl, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %bio_ctrl) #14
  %0 = call ptr @memset(ptr %bio_ctrl, i32 0, i32 16)
  %bflags = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 2
  %1 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %bflags, align 4
  %and1.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %bflags, align 4
  %5 = and i32 %4, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool3.not = icmp eq i32 %5, 0
  br i1 %tobool3.not, label %if.end7, label %if.end.cleanup_crit_edge, !prof !322

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %fs_info = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 3
  %6 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %fs_info, align 8
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %7, i32 0, i32 167
  %8 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sectorsize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %9)
  %cmp = icmp ult i32 %9, 4096
  br i1 %cmp, label %if.then8, label %if.end10

if.then8:                                         ; preds = %if.end7
  %pages.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 12
  %10 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pages.i, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %bio_ctrl.i) #14
  %12 = call ptr @memset(ptr %bio_ctrl.i, i32 0, i32 16)
  %13 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %bflags, align 4
  %15 = and i32 %14, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.not.i186 = icmp eq i32 %15, 0
  br i1 %tobool.not.i186, label %cond.end.i, label %cond.false.i, !prof !322

cond.false.i:                                     ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.131, i32 noundef 6516) #19
  unreachable

cond.end.i:                                       ; preds = %if.then8
  %16 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %11, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %17)
  %cmp.i.not.i.i = icmp eq i32 %17, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i187, label %PagePrivate.exit.i, !prof !319

if.then.i.i187:                                   ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %11, ptr noundef nonnull @.str.80) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 452, 0\0A.popsection", ""() #14, !srcloc !363
  unreachable

PagePrivate.exit.i:                               ; preds = %cond.end.i
  %18 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %11, align 4
  %20 = and i32 %19, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool6.not.i = icmp eq i32 %20, 0
  br i1 %tobool6.not.i, label %cond.false14.i, label %cond.end15.i, !prof !319

cond.false14.i:                                   ; preds = %PagePrivate.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.84, i32 noundef 6517) #19
  unreachable

cond.end15.i:                                     ; preds = %PagePrivate.exit.i
  %btree_inode.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %7, i32 0, i32 46
  %21 = ptrtoint ptr %btree_inode.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %btree_inode.i, align 4
  %io_tree17.i = getelementptr i8, ptr %22, i32 -736
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %wait)
  %cmp.i = icmp eq i32 %wait, 0
  %23 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %eb, align 8
  %len.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %25 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %len.i, align 8
  %conv.i = zext i32 %26 to i64
  %add.i = add i64 %24, -1
  %sub.i = add i64 %add.i, %conv.i
  br i1 %cmp.i, label %if.then.i189, label %if.else.i

if.then.i189:                                     ; preds = %cond.end15.i
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %failed_start.i.i) #14
  %27 = ptrtoint ptr %failed_start.i.i to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 -1, ptr %failed_start.i.i, align 8, !annotation !349
  %call.i.i188 = call i32 @set_extent_bit(ptr noundef %io_tree17.i, i64 noundef %24, i64 noundef %sub.i, i32 noundef 4, i32 noundef 4, ptr noundef nonnull %failed_start.i.i, ptr noundef null, i32 noundef 3136, ptr noundef null) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 -17, i32 %call.i.i188)
  %cmp.i.i = icmp eq i32 %call.i.i188, -17
  br i1 %cmp.i.i, label %if.then.i157.i, label %try_lock_extent.exit.i

if.then.i157.i:                                   ; preds = %if.then.i189
  %28 = ptrtoint ptr %failed_start.i.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %failed_start.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %29, i64 %24)
  %cmp1.i.i = icmp ugt i64 %29, %24
  br i1 %cmp1.i.i, label %if.then2.i.i, label %if.then.i157.i.try_lock_extent.exit.thread.i_crit_edge

if.then.i157.i.try_lock_extent.exit.thread.i_crit_edge: ; preds = %if.then.i157.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %try_lock_extent.exit.thread.i

if.then2.i.i:                                     ; preds = %if.then.i157.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i190 = add i64 %29, -1
  %call.i.i158.i = call i32 @__clear_extent_bit(ptr noundef %io_tree17.i, i64 noundef %24, i64 noundef %sub.i.i190, i32 noundef 4, i32 noundef 1, i32 noundef 0, ptr noundef null, i32 noundef 3136, ptr noundef null) #14
  br label %try_lock_extent.exit.thread.i

try_lock_extent.exit.thread.i:                    ; preds = %if.then2.i.i, %if.then.i157.i.try_lock_extent.exit.thread.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %failed_start.i.i) #14
  br label %read_extent_buffer_subpage.exit

try_lock_extent.exit.i:                           ; preds = %if.then.i189
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %failed_start.i.i) #14
  br label %if.end33.i

if.else.i:                                        ; preds = %cond.end15.i
  %call.i159.i = tail call i32 @lock_extent_bits(ptr noundef %io_tree17.i, i64 noundef %24, i64 noundef %sub.i, ptr noundef null) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i159.i)
  %cmp29.i = icmp slt i32 %call.i159.i, 0
  br i1 %cmp29.i, label %if.else.i.read_extent_buffer_subpage.exit_crit_edge, label %if.else.i.if.end33.i_crit_edge

if.else.i.if.end33.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end33.i

if.else.i.read_extent_buffer_subpage.exit_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %read_extent_buffer_subpage.exit

if.end33.i:                                       ; preds = %if.else.i.if.end33.i_crit_edge, %try_lock_extent.exit.i
  %30 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %bflags, align 4
  %and1.i154.i = and i32 %31, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i154.i)
  %tobool36.not.i = icmp eq i32 %and1.i154.i, 0
  br i1 %tobool36.not.i, label %lor.lhs.false.i, label %if.end33.i.if.then44.i_crit_edge

if.end33.i.if.then44.i_crit_edge:                 ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then44.i

lor.lhs.false.i:                                  ; preds = %if.end33.i
  %32 = getelementptr inbounds %struct.page, ptr %11, i32 0, i32 1
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %32, align 4
  %and.i.i.i = and i32 %34, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i, !prof !322

if.then.i.i.i:                                    ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i.i = add i32 %34, -1
  br label %_compound_head.exit.i.i

if.end.i.i.i:                                     ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  %35 = ptrtoint ptr %11 to i32
  br label %_compound_head.exit.i.i

_compound_head.exit.i.i:                          ; preds = %if.end.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi i32 [ %sub.i.i.i, %if.then.i.i.i ], [ %35, %if.end.i.i.i ]
  %36 = inttoptr i32 %retval.0.i.i.i to ptr
  %37 = getelementptr inbounds %struct.page, ptr %36, i32 0, i32 1
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %37, align 4
  %and.i.i.i.i.i = and i32 %39, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %folio_flags.exit.i.i.i, label %if.then.i.i.i.i, !prof !322

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @dump_page(ptr noundef %36, ptr noundef nonnull @.str.82) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

folio_flags.exit.i.i.i:                           ; preds = %_compound_head.exit.i.i
  %40 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %36, align 4
  %42 = and i32 %41, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool.i.not.i.i = icmp eq i32 %42, 0
  br i1 %tobool.i.not.i.i, label %lor.lhs.false39.i, label %PageUptodate.exit.i

PageUptodate.exit.i:                              ; preds = %folio_flags.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !379
  br label %if.then44.i

lor.lhs.false39.i:                                ; preds = %folio_flags.exit.i.i.i
  %43 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %eb, align 8
  %45 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %len.i, align 8
  %call42.i = call zeroext i1 @btrfs_subpage_test_uptodate(ptr noundef %7, ptr noundef %11, i64 noundef %44, i32 noundef %46) #14
  br i1 %call42.i, label %lor.lhs.false39.i.if.then44.i_crit_edge, label %if.end53.i

lor.lhs.false39.i.if.then44.i_crit_edge:          ; preds = %lor.lhs.false39.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then44.i

if.then44.i:                                      ; preds = %lor.lhs.false39.i.if.then44.i_crit_edge, %PageUptodate.exit.i, %if.end33.i.if.then44.i_crit_edge
  call void @_set_bit(i32 noundef 0, ptr noundef %bflags) #14
  %47 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %eb, align 8
  %49 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %len.i, align 8
  %conv49.i = zext i32 %50 to i64
  %add50.i = add i64 %48, -1
  %sub51.i = add i64 %add50.i, %conv49.i
  %call.i.i160.i = call i32 @__clear_extent_bit(ptr noundef %io_tree17.i, i64 noundef %48, i64 noundef %sub51.i, i32 noundef 4, i32 noundef 1, i32 noundef 0, ptr noundef null, i32 noundef 3136, ptr noundef null) #14
  br label %read_extent_buffer_subpage.exit

if.end53.i:                                       ; preds = %lor.lhs.false39.i
  call void @_clear_bit(i32 noundef 7, ptr noundef %bflags) #14
  %read_mirror.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 7
  %51 = ptrtoint ptr %read_mirror.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 0, ptr %read_mirror.i, align 8
  %io_pages.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 6
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %io_pages.i, i32 noundef 4) #14
  %52 = ptrtoint ptr %io_pages.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store volatile i32 1, ptr %io_pages.i, align 4
  call fastcc void @check_buffer_tree_ref(ptr noundef %eb) #14
  %53 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %53)
  %54 = load i64, ptr %eb, align 8
  %55 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %len.i, align 8
  call void @btrfs_subpage_clear_error(ptr noundef %7, ptr noundef %11, i64 noundef %54, i32 noundef %56) #14
  %57 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %57)
  %58 = load i64, ptr %eb, align 8
  %59 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %len.i, align 8
  call void @btrfs_subpage_start_reader(ptr noundef %7, ptr noundef %11, i64 noundef %58, i32 noundef %60) #14
  %61 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %61)
  %62 = load i64, ptr %eb, align 8
  %63 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %len.i, align 8
  %index.i.i = getelementptr inbounds %struct.page, ptr %11, i32 0, i32 1, i32 0, i32 2
  %65 = ptrtoint ptr %index.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %index.i.i, align 4
  %conv.i.i = zext i32 %66 to i64
  %shl.i.neg.i = mul nuw i64 %conv.i.i, 4294963200
  %sub63.i = add i64 %shl.i.neg.i, %62
  %conv64.i = trunc i64 %sub63.i to i32
  %call65.i = call fastcc i32 @submit_extent_page(i32 noundef 4096, ptr noundef null, ptr noundef nonnull %bio_ctrl.i, ptr noundef %11, i64 noundef %62, i32 noundef %64, i32 noundef %conv64.i, ptr noundef nonnull @end_bio_extent_readpage, i32 noundef %mirror_num, i32 noundef 0, i1 noundef zeroext true) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call65.i)
  %tobool66.not.i = icmp eq i32 %call65.i, 0
  br i1 %tobool66.not.i, label %if.end53.i.if.end69.i_crit_edge, label %if.then67.i

if.end53.i.if.end69.i_crit_edge:                  ; preds = %if.end53.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69.i

if.then67.i:                                      ; preds = %if.end53.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i155.i = call zeroext i1 @__kasan_check_write(ptr noundef %io_pages.i, i32 noundef 4) #14
  call void @llvm.prefetch.p0(ptr %io_pages.i, i32 1, i32 3, i32 1) #14
  %67 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %io_pages.i, ptr %io_pages.i, i32 1, ptr elementtype(i32) %io_pages.i) #14, !srcloc !381
  br label %if.end69.i

if.end69.i:                                       ; preds = %if.then67.i, %if.end53.i.if.end69.i_crit_edge
  %68 = ptrtoint ptr %bio_ctrl.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %bio_ctrl.i, align 4
  %tobool70.not.i = icmp eq ptr %69, null
  br i1 %tobool70.not.i, label %if.end69.i.if.end79.i_crit_edge, label %if.then71.i

if.end69.i.if.end79.i_crit_edge:                  ; preds = %if.end69.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end79.i

if.then71.i:                                      ; preds = %if.end69.i
  %bi_private.i.i = getelementptr inbounds %struct.bio, ptr %69, i32 0, i32 11
  %70 = ptrtoint ptr %bi_private.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %bi_private.i.i, align 4
  store ptr null, ptr %bi_private.i.i, align 4
  %bi_size.i.i = getelementptr inbounds %struct.bio, ptr %69, i32 0, i32 8, i32 1
  %72 = ptrtoint ptr %bi_size.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %bi_size.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %73)
  %tobool.not.i.i191 = icmp eq i32 %73, 0
  br i1 %tobool.not.i.i191, label %cond.false.i.i, label %cond.end.i.i, !prof !319

cond.false.i.i:                                   ; preds = %if.then71.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.3, i32 noundef 176) #19
  unreachable

cond.end.i.i:                                     ; preds = %if.then71.i
  %private_data.i.i = getelementptr inbounds %struct.extent_io_tree, ptr %71, i32 0, i32 2
  %74 = ptrtoint ptr %private_data.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %private_data.i.i, align 8
  %location.i.i.i.i = getelementptr i8, ptr %75, i32 -860
  %76 = ptrtoint ptr %location.i.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %76, i32 8)
  %77 = load i64, ptr %location.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %77)
  %tobool.not.i.i.i161.i = icmp eq i64 %77, 0
  br i1 %tobool.not.i.i.i161.i, label %cond.end.i.i.if.then.i.i.i162.i_crit_edge, label %lor.lhs.false.i.i.i.i

cond.end.i.i.if.then.i.i.i162.i_crit_edge:        ; preds = %cond.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i162.i

lor.lhs.false.i.i.i.i:                            ; preds = %cond.end.i.i
  %type.i.i.i.i = getelementptr i8, ptr %75, i32 -852
  %78 = ptrtoint ptr %type.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %78)
  %79 = load i8, ptr %type.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %79)
  %cmp.i.i.i.i = icmp eq i8 %79, -124
  br i1 %cmp.i.i.i.i, label %lor.lhs.false.i.i.i.i.if.then.i.i.i162.i_crit_edge, label %lor.lhs.false.i.i.i.i.is_data_inode.exit.i.i_crit_edge

lor.lhs.false.i.i.i.i.is_data_inode.exit.i.i_crit_edge: ; preds = %lor.lhs.false.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %is_data_inode.exit.i.i

lor.lhs.false.i.i.i.i.if.then.i.i.i162.i_crit_edge: ; preds = %lor.lhs.false.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i162.i

if.then.i.i.i162.i:                               ; preds = %lor.lhs.false.i.i.i.i.if.then.i.i.i162.i_crit_edge, %cond.end.i.i.if.then.i.i.i162.i_crit_edge
  %i_ino.i.i.i.i = getelementptr i8, ptr %75, i32 40
  %80 = ptrtoint ptr %i_ino.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %i_ino.i.i.i.i, align 8
  %conv3.i.i.i.i = zext i32 %81 to i64
  br label %is_data_inode.exit.i.i

is_data_inode.exit.i.i:                           ; preds = %if.then.i.i.i162.i, %lor.lhs.false.i.i.i.i.is_data_inode.exit.i.i_crit_edge
  %ino.0.i.i.i.i = phi i64 [ %conv3.i.i.i.i, %if.then.i.i.i162.i ], [ %77, %lor.lhs.false.i.i.i.i.is_data_inode.exit.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %ino.0.i.i.i.i)
  %cmp.i.not.i163.i = icmp eq i64 %ino.0.i.i.i.i, 1
  br i1 %cmp.i.not.i163.i, label %if.else.i.i, label %if.then.i164.i

if.then.i164.i:                                   ; preds = %is_data_inode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call5.i.i = call zeroext i8 @btrfs_submit_data_bio(ptr noundef %75, ptr noundef nonnull %69, i32 noundef %mirror_num, i32 noundef 0) #14
  br label %submit_one_bio.exit.i

if.else.i.i:                                      ; preds = %is_data_inode.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call7.i.i = call zeroext i8 @btrfs_submit_metadata_bio(ptr noundef %75, ptr noundef nonnull %69, i32 noundef %mirror_num, i32 noundef 0) #14
  br label %submit_one_bio.exit.i

submit_one_bio.exit.i:                            ; preds = %if.else.i.i, %if.then.i164.i
  %ret.0.i.i = phi i8 [ %call5.i.i, %if.then.i164.i ], [ %call7.i.i, %if.else.i.i ]
  %call8.i.i = call i32 @blk_status_to_errno(i8 noundef zeroext %ret.0.i.i) #14
  %82 = ptrtoint ptr %bio_ctrl.i to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr null, ptr %bio_ctrl.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i.i)
  %cmp75.i = icmp slt i32 %call8.i.i, 0
  br i1 %cmp75.i, label %submit_one_bio.exit.i.read_extent_buffer_subpage.exit_crit_edge, label %submit_one_bio.exit.i.if.end79.i_crit_edge

submit_one_bio.exit.i.if.end79.i_crit_edge:       ; preds = %submit_one_bio.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end79.i

submit_one_bio.exit.i.read_extent_buffer_subpage.exit_crit_edge: ; preds = %submit_one_bio.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %read_extent_buffer_subpage.exit

if.end79.i:                                       ; preds = %submit_one_bio.exit.i.if.end79.i_crit_edge, %if.end69.i.if.end79.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %wait)
  %cmp82.not.i = icmp eq i32 %wait, 1
  %or.cond.i = and i1 %cmp82.not.i, %tobool66.not.i
  br i1 %or.cond.i, label %if.end85.i, label %if.end79.i.read_extent_buffer_subpage.exit_crit_edge

if.end79.i.read_extent_buffer_subpage.exit_crit_edge: ; preds = %if.end79.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %read_extent_buffer_subpage.exit

if.end85.i:                                       ; preds = %if.end79.i
  call void @__sanitizer_cov_trace_pc() #16
  %83 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %83)
  %84 = load i64, ptr %eb, align 8
  %85 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %len.i, align 8
  %conv89.i = zext i32 %86 to i64
  %add90.i = add i64 %84, -1
  %sub91.i = add i64 %add90.i, %conv89.i
  call fastcc void @wait_extent_bit(ptr noundef %io_tree17.i, i64 noundef %84, i64 noundef %sub91.i) #14
  %87 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load volatile i32, ptr %bflags, align 4
  %and1.i156.i = and i32 %88, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i156.i)
  %tobool94.not.i = icmp eq i32 %and1.i156.i, 0
  %spec.select.i = select i1 %tobool94.not.i, i32 -5, i32 0
  br label %read_extent_buffer_subpage.exit

read_extent_buffer_subpage.exit:                  ; preds = %if.end85.i, %if.end79.i.read_extent_buffer_subpage.exit_crit_edge, %submit_one_bio.exit.i.read_extent_buffer_subpage.exit_crit_edge, %if.then44.i, %if.else.i.read_extent_buffer_subpage.exit_crit_edge, %try_lock_extent.exit.thread.i
  %retval.1.i = phi i32 [ 0, %if.then44.i ], [ %spec.select.i, %if.end85.i ], [ %call8.i.i, %submit_one_bio.exit.i.read_extent_buffer_subpage.exit_crit_edge ], [ %call.i159.i, %if.else.i.read_extent_buffer_subpage.exit_crit_edge ], [ %call65.i, %if.end79.i.read_extent_buffer_subpage.exit_crit_edge ], [ -11, %try_lock_extent.exit.thread.i ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %bio_ctrl.i) #14
  br label %cleanup

if.end10:                                         ; preds = %if.end7
  %len.i192 = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %89 = ptrtoint ptr %len.i192 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %len.i192, align 8
  %shr.i193 = lshr i32 %90, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %90)
  %tobool.not.i194 = icmp ult i32 %90, 4096
  %shr..i = select i1 %tobool.not.i194, i32 1, i32 %shr.i193
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr..i)
  %cmp12324.not = icmp eq i32 %shr..i, 0
  br i1 %cmp12324.not, label %if.end10.if.then35_crit_edge, label %for.body.lr.ph

if.end10.if.then35_crit_edge:                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then35

for.body.lr.ph:                                   ; preds = %if.end10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %wait)
  %cmp13 = icmp eq i32 %wait, 0
  br label %for.body

for.cond21.preheader:                             ; preds = %if.end19
  br i1 %cmp12324.not, label %for.cond21.preheader.if.then35_crit_edge, label %for.cond21.preheader.for.body23_crit_edge

for.cond21.preheader.for.body23_crit_edge:        ; preds = %for.cond21.preheader
  br label %for.body23

for.cond21.preheader.if.then35_crit_edge:         ; preds = %for.cond21.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then35

for.body:                                         ; preds = %if.end19.for.body_crit_edge, %for.body.lr.ph
  %locked_pages.0326 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end19.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %locked_pages.0326
  %91 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %arrayidx, align 4
  br i1 %cmp13, label %if.then14, label %if.else

if.then14:                                        ; preds = %for.body
  %93 = getelementptr inbounds %struct.page, ptr %92, i32 0, i32 1
  %94 = ptrtoint ptr %93 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load volatile i32, ptr %93, align 4
  %and.i.i195 = and i32 %95, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i195)
  %tobool.not.i.i196 = icmp eq i32 %and.i.i195, 0
  br i1 %tobool.not.i.i196, label %if.end.i.i199, label %if.then.i.i198, !prof !322

if.then.i.i198:                                   ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i197 = add i32 %95, -1
  br label %_compound_head.exit.i202

if.end.i.i199:                                    ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #16
  %96 = ptrtoint ptr %92 to i32
  br label %_compound_head.exit.i202

_compound_head.exit.i202:                         ; preds = %if.end.i.i199, %if.then.i.i198
  %retval.0.i.i200 = phi i32 [ %sub.i.i197, %if.then.i.i198 ], [ %96, %if.end.i.i199 ]
  %97 = inttoptr i32 %retval.0.i.i200 to ptr
  %98 = getelementptr inbounds %struct.page, ptr %97, i32 0, i32 1
  %99 = ptrtoint ptr %98 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load volatile i32, ptr %98, align 4
  %and.i.i.i.i = and i32 %100, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i201 = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i201, label %folio_flags.exit.i.i, label %if.then.i.i.i203, !prof !322

if.then.i.i.i203:                                 ; preds = %_compound_head.exit.i202
  call void @__sanitizer_cov_trace_pc() #16
  %101 = inttoptr i32 %retval.0.i.i200 to ptr
  tail call void @dump_page(ptr noundef %101, ptr noundef nonnull @.str.82) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

folio_flags.exit.i.i:                             ; preds = %_compound_head.exit.i202
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %97, i32 noundef 4) #14
  %102 = ptrtoint ptr %97 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load volatile i32, ptr %97, align 4
  %and.i.i4.i.i = and i32 %103, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i)
  %tobool.not.i.i.i.i204 = icmp eq i32 %and.i.i4.i.i, 0
  br i1 %tobool.not.i.i.i.i204, label %trylock_page.exit, label %folio_flags.exit.i.i.unlock_exit_crit_edge

folio_flags.exit.i.i.unlock_exit_crit_edge:       ; preds = %folio_flags.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %unlock_exit

trylock_page.exit:                                ; preds = %folio_flags.exit.i.i
  tail call void @llvm.prefetch.p0(ptr %97, i32 1, i32 3, i32 1) #14
  %104 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %97, ptr %97, i32 1, ptr elementtype(i32) %97) #14, !srcloc !383
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %104, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !384
  %and1.i.i.i.i = and i32 %asmresult.i.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i)
  %tobool16.not.not = icmp eq i32 %and1.i.i.i.i, 0
  br i1 %tobool16.not.not, label %trylock_page.exit.if.end19_crit_edge, label %trylock_page.exit.unlock_exit_crit_edge

trylock_page.exit.unlock_exit_crit_edge:          ; preds = %trylock_page.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %unlock_exit

trylock_page.exit.if.end19_crit_edge:             ; preds = %trylock_page.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19

if.else:                                          ; preds = %for.body
  tail call void @__might_sleep(ptr noundef nonnull @.str.130, i32 noundef 788) #14
  %105 = getelementptr inbounds %struct.page, ptr %92, i32 0, i32 1
  %106 = ptrtoint ptr %105 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load volatile i32, ptr %105, align 4
  %and.i.i205 = and i32 %107, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i205)
  %tobool.not.i.i206 = icmp eq i32 %and.i.i205, 0
  br i1 %tobool.not.i.i206, label %if.end.i.i209, label %if.then.i.i208, !prof !322

if.then.i.i208:                                   ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i207 = add i32 %107, -1
  br label %_compound_head.exit.i213

if.end.i.i209:                                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  %108 = ptrtoint ptr %92 to i32
  br label %_compound_head.exit.i213

_compound_head.exit.i213:                         ; preds = %if.end.i.i209, %if.then.i.i208
  %retval.0.i.i210 = phi i32 [ %sub.i.i207, %if.then.i.i208 ], [ %108, %if.end.i.i209 ]
  %109 = inttoptr i32 %retval.0.i.i210 to ptr
  %110 = getelementptr inbounds %struct.page, ptr %109, i32 0, i32 1
  %111 = ptrtoint ptr %110 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load volatile i32, ptr %110, align 4
  %and.i.i.i.i211 = and i32 %112, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i211)
  %tobool.not.i.i.i212 = icmp eq i32 %and.i.i.i.i211, 0
  br i1 %tobool.not.i.i.i212, label %folio_flags.exit.i.i218, label %if.then.i.i.i214, !prof !322

if.then.i.i.i214:                                 ; preds = %_compound_head.exit.i213
  call void @__sanitizer_cov_trace_pc() #16
  %113 = inttoptr i32 %retval.0.i.i210 to ptr
  tail call void @dump_page(ptr noundef %113, ptr noundef nonnull @.str.82) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

folio_flags.exit.i.i218:                          ; preds = %_compound_head.exit.i213
  %call.i.i.i.i215 = tail call zeroext i1 @__kasan_check_write(ptr noundef %109, i32 noundef 4) #14
  %114 = ptrtoint ptr %109 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load volatile i32, ptr %109, align 4
  %and.i.i4.i.i216 = and i32 %115, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i216)
  %tobool.not.i.i.i.i217 = icmp eq i32 %and.i.i4.i.i216, 0
  br i1 %tobool.not.i.i.i.i217, label %folio_trylock.exit.i, label %folio_flags.exit.i.i218.if.then.i221_crit_edge

folio_flags.exit.i.i218.if.then.i221_crit_edge:   ; preds = %folio_flags.exit.i.i218
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i221

folio_trylock.exit.i:                             ; preds = %folio_flags.exit.i.i218
  tail call void @llvm.prefetch.p0(ptr %109, i32 1, i32 3, i32 1) #14
  %116 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %109, ptr %109, i32 1, ptr elementtype(i32) %109) #14, !srcloc !383
  %asmresult.i.i.i.i.i.i.i219 = extractvalue { i32, i32, i32 } %116, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !384
  %and1.i.i.i.i220 = and i32 %asmresult.i.i.i.i.i.i.i219, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i220)
  %phi.cmp.i.i.i = icmp eq i32 %and1.i.i.i.i220, 0
  br i1 %phi.cmp.i.i.i, label %folio_trylock.exit.i.if.end19_crit_edge, label %folio_trylock.exit.i.if.then.i221_crit_edge

folio_trylock.exit.i.if.then.i221_crit_edge:      ; preds = %folio_trylock.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i221

folio_trylock.exit.i.if.end19_crit_edge:          ; preds = %folio_trylock.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19

if.then.i221:                                     ; preds = %folio_trylock.exit.i.if.then.i221_crit_edge, %folio_flags.exit.i.i218.if.then.i221_crit_edge
  tail call void @__folio_lock(ptr noundef %109) #14
  br label %if.end19

if.end19:                                         ; preds = %if.then.i221, %folio_trylock.exit.i.if.end19_crit_edge, %trylock_page.exit.if.end19_crit_edge
  %inc = add nuw nsw i32 %locked_pages.0326, 1
  %exitcond.not = icmp eq i32 %inc, %shr..i
  br i1 %exitcond.not, label %for.cond21.preheader, label %if.end19.for.body_crit_edge

if.end19.for.body_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.body23:                                       ; preds = %PageUptodate.exit.for.body23_crit_edge, %for.cond21.preheader.for.body23_crit_edge
  %num_reads.0331 = phi i32 [ %spec.select156, %PageUptodate.exit.for.body23_crit_edge ], [ 0, %for.cond21.preheader.for.body23_crit_edge ]
  %all_uptodate.0330 = phi i32 [ %spec.select, %PageUptodate.exit.for.body23_crit_edge ], [ 1, %for.cond21.preheader.for.body23_crit_edge ]
  %i.1329 = phi i32 [ %inc32, %PageUptodate.exit.for.body23_crit_edge ], [ 0, %for.cond21.preheader.for.body23_crit_edge ]
  %arrayidx25 = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %i.1329
  %117 = ptrtoint ptr %arrayidx25 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %arrayidx25, align 4
  %119 = getelementptr inbounds %struct.page, ptr %118, i32 0, i32 1
  %120 = ptrtoint ptr %119 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load volatile i32, ptr %119, align 4
  %and.i.i222 = and i32 %121, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i222)
  %tobool.not.i.i223 = icmp eq i32 %and.i.i222, 0
  br i1 %tobool.not.i.i223, label %if.end.i.i226, label %if.then.i.i225, !prof !322

if.then.i.i225:                                   ; preds = %for.body23
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i224 = add i32 %121, -1
  br label %_compound_head.exit.i230

if.end.i.i226:                                    ; preds = %for.body23
  call void @__sanitizer_cov_trace_pc() #16
  %122 = ptrtoint ptr %118 to i32
  br label %_compound_head.exit.i230

_compound_head.exit.i230:                         ; preds = %if.end.i.i226, %if.then.i.i225
  %retval.0.i.i227 = phi i32 [ %sub.i.i224, %if.then.i.i225 ], [ %122, %if.end.i.i226 ]
  %123 = inttoptr i32 %retval.0.i.i227 to ptr
  %124 = getelementptr inbounds %struct.page, ptr %123, i32 0, i32 1
  %125 = ptrtoint ptr %124 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load volatile i32, ptr %124, align 4
  %and.i.i.i.i228 = and i32 %126, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i228)
  %tobool.not.i.i.i229 = icmp eq i32 %and.i.i.i.i228, 0
  br i1 %tobool.not.i.i.i229, label %folio_flags.exit.i.i232, label %if.then.i.i.i231, !prof !322

if.then.i.i.i231:                                 ; preds = %_compound_head.exit.i230
  call void @__sanitizer_cov_trace_pc() #16
  %127 = inttoptr i32 %retval.0.i.i227 to ptr
  tail call void @dump_page(ptr noundef %127, ptr noundef nonnull @.str.82) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

folio_flags.exit.i.i232:                          ; preds = %_compound_head.exit.i230
  %128 = ptrtoint ptr %123 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load volatile i32, ptr %123, align 4
  %130 = and i32 %129, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %130)
  %tobool.i.not.i = icmp eq i32 %130, 0
  br i1 %tobool.i.not.i, label %folio_flags.exit.i.i232.PageUptodate.exit_crit_edge, label %do.end.i.i

folio_flags.exit.i.i232.PageUptodate.exit_crit_edge: ; preds = %folio_flags.exit.i.i232
  call void @__sanitizer_cov_trace_pc() #16
  br label %PageUptodate.exit

do.end.i.i:                                       ; preds = %folio_flags.exit.i.i232
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !379
  br label %PageUptodate.exit

PageUptodate.exit:                                ; preds = %do.end.i.i, %folio_flags.exit.i.i232.PageUptodate.exit_crit_edge
  %spec.select = phi i32 [ 0, %folio_flags.exit.i.i232.PageUptodate.exit_crit_edge ], [ %all_uptodate.0330, %do.end.i.i ]
  %.lobit = lshr exact i32 %130, 2
  %131 = xor i32 %.lobit, 1
  %spec.select156 = add i32 %131, %num_reads.0331
  %inc32 = add nuw nsw i32 %i.1329, 1
  %exitcond369.not = icmp eq i32 %inc32, %shr..i
  br i1 %exitcond369.not, label %for.end33, label %PageUptodate.exit.for.body23_crit_edge

PageUptodate.exit.for.body23_crit_edge:           ; preds = %PageUptodate.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body23

for.end33:                                        ; preds = %PageUptodate.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.select)
  %tobool34.not = icmp eq i32 %spec.select, 0
  br i1 %tobool34.not, label %if.end37, label %for.end33.if.then35_crit_edge

for.end33.if.then35_crit_edge:                    ; preds = %for.end33
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then35

if.then35:                                        ; preds = %for.end33.if.then35_crit_edge, %for.cond21.preheader.if.then35_crit_edge, %if.end10.if.then35_crit_edge
  %locked_pages.0.lcssa373378 = phi i32 [ %shr..i, %for.end33.if.then35_crit_edge ], [ %shr..i, %for.cond21.preheader.if.then35_crit_edge ], [ 0, %if.end10.if.then35_crit_edge ]
  tail call void @_set_bit(i32 noundef 0, ptr noundef %bflags) #14
  br label %unlock_exit

if.end37:                                         ; preds = %for.end33
  tail call void @_clear_bit(i32 noundef 7, ptr noundef %bflags) #14
  %read_mirror = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 7
  %132 = ptrtoint ptr %read_mirror to i32
  call void @__asan_store4_noabort(i32 %132)
  store i32 0, ptr %read_mirror, align 8
  %io_pages = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 6
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %io_pages, i32 noundef 4) #14
  %133 = ptrtoint ptr %io_pages to i32
  call void @__asan_store4_noabort(i32 %133)
  store volatile i32 %spec.select156, ptr %io_pages, align 4
  tail call fastcc void @check_buffer_tree_ref(ptr noundef %eb)
  br i1 %cmp12324.not, label %if.end37.for.end61_crit_edge, label %if.end37.for.body41_crit_edge

if.end37.for.body41_crit_edge:                    ; preds = %if.end37
  br label %for.body41

if.end37.for.end61_crit_edge:                     ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end61

for.body41:                                       ; preds = %for.inc59.for.body41_crit_edge, %if.end37.for.body41_crit_edge
  %ret.0336 = phi i32 [ %ret.1, %for.inc59.for.body41_crit_edge ], [ 0, %if.end37.for.body41_crit_edge ]
  %i.2335 = phi i32 [ %inc60, %for.inc59.for.body41_crit_edge ], [ 0, %if.end37.for.body41_crit_edge ]
  %arrayidx43 = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %i.2335
  %134 = ptrtoint ptr %arrayidx43 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %arrayidx43, align 4
  %136 = getelementptr inbounds %struct.page, ptr %135, i32 0, i32 1
  %137 = ptrtoint ptr %136 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load volatile i32, ptr %136, align 4
  %and.i.i233 = and i32 %138, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i233)
  %tobool.not.i.i234 = icmp eq i32 %and.i.i233, 0
  br i1 %tobool.not.i.i234, label %if.end.i.i237, label %if.then.i.i236, !prof !322

if.then.i.i236:                                   ; preds = %for.body41
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i235 = add i32 %138, -1
  br label %_compound_head.exit.i241

if.end.i.i237:                                    ; preds = %for.body41
  call void @__sanitizer_cov_trace_pc() #16
  %139 = ptrtoint ptr %135 to i32
  br label %_compound_head.exit.i241

_compound_head.exit.i241:                         ; preds = %if.end.i.i237, %if.then.i.i236
  %retval.0.i.i238 = phi i32 [ %sub.i.i235, %if.then.i.i236 ], [ %139, %if.end.i.i237 ]
  %140 = inttoptr i32 %retval.0.i.i238 to ptr
  %141 = getelementptr inbounds %struct.page, ptr %140, i32 0, i32 1
  %142 = ptrtoint ptr %141 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load volatile i32, ptr %141, align 4
  %and.i.i.i.i239 = and i32 %143, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i239)
  %tobool.not.i.i.i240 = icmp eq i32 %and.i.i.i.i239, 0
  br i1 %tobool.not.i.i.i240, label %folio_flags.exit.i.i244, label %if.then.i.i.i242, !prof !322

if.then.i.i.i242:                                 ; preds = %_compound_head.exit.i241
  call void @__sanitizer_cov_trace_pc() #16
  %144 = inttoptr i32 %retval.0.i.i238 to ptr
  call void @dump_page(ptr noundef %144, ptr noundef nonnull @.str.82) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

folio_flags.exit.i.i244:                          ; preds = %_compound_head.exit.i241
  %145 = ptrtoint ptr %140 to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load volatile i32, ptr %140, align 4
  %147 = and i32 %146, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %147)
  %tobool.i.not.i243 = icmp eq i32 %147, 0
  br i1 %tobool.i.not.i243, label %if.then46, label %PageUptodate.exit247

PageUptodate.exit247:                             ; preds = %folio_flags.exit.i.i244
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !379
  call void @unlock_page(ptr noundef %135) #14
  br label %for.inc59

if.then46:                                        ; preds = %folio_flags.exit.i.i244
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0336)
  %tobool47.not = icmp eq i32 %ret.0336, 0
  br i1 %tobool47.not, label %if.end50, label %if.then48

if.then48:                                        ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i159 = call zeroext i1 @__kasan_check_write(ptr noundef %io_pages, i32 noundef 4) #14
  call void @llvm.prefetch.p0(ptr %io_pages, i32 1, i32 3, i32 1) #14
  %148 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %io_pages, ptr %io_pages, i32 1, ptr elementtype(i32) %io_pages) #14, !srcloc !381
  call void @unlock_page(ptr noundef %135) #14
  br label %for.inc59

if.end50:                                         ; preds = %if.then46
  %149 = ptrtoint ptr %136 to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load volatile i32, ptr %136, align 4
  %and.i.i = and i32 %150, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %do.body7.i, label %if.then.i, !prof !322

if.then.i:                                        ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #16
  call void @dump_page(ptr noundef %135, ptr noundef nonnull @.str.110) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 416, 0\0A.popsection", ""() #14, !srcloc !407
  unreachable

do.body7.i:                                       ; preds = %if.end50
  %151 = ptrtoint ptr %136 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load volatile i32, ptr %136, align 4
  %and.i31.i = and i32 %152, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i31.i)
  %tobool.not.i.i = icmp eq i32 %and.i31.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !322

if.then.i.i:                                      ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %152, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #16
  %153 = ptrtoint ptr %135 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %153, %if.end.i.i ]
  %154 = inttoptr i32 %retval.0.i.i to ptr
  %155 = ptrtoint ptr %154 to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load volatile i32, ptr %154, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %156)
  %cmp.i.not.i = icmp eq i32 %156, -1
  %157 = ptrtoint ptr %136 to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load volatile i32, ptr %136, align 4
  %and.i32.i = and i32 %158, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i32.i)
  %tobool.not.i33.i = icmp eq i32 %and.i32.i, 0
  br i1 %cmp.i.not.i, label %if.then17.i, label %do.end24.i, !prof !319

if.then17.i:                                      ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i33.i, label %if.end.i36.i, label %if.then.i35.i, !prof !322

if.then.i35.i:                                    ; preds = %if.then17.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i34.i = add i32 %158, -1
  br label %_compound_head.exit38.i

if.end.i36.i:                                     ; preds = %if.then17.i
  call void @__sanitizer_cov_trace_pc() #16
  %159 = ptrtoint ptr %135 to i32
  br label %_compound_head.exit38.i

_compound_head.exit38.i:                          ; preds = %if.end.i36.i, %if.then.i35.i
  %retval.0.i37.i = phi i32 [ %sub.i34.i, %if.then.i35.i ], [ %159, %if.end.i36.i ]
  %160 = inttoptr i32 %retval.0.i37.i to ptr
  call void @dump_page(ptr noundef %160, ptr noundef nonnull @.str.86) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 416, 0\0A.popsection", ""() #14, !srcloc !408
  unreachable

do.end24.i:                                       ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i33.i, label %if.end.i43.i, label %if.then.i42.i, !prof !322

if.then.i42.i:                                    ; preds = %do.end24.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i41.i = add i32 %158, -1
  br label %ClearPageError.exit

if.end.i43.i:                                     ; preds = %do.end24.i
  call void @__sanitizer_cov_trace_pc() #16
  %161 = ptrtoint ptr %135 to i32
  br label %ClearPageError.exit

ClearPageError.exit:                              ; preds = %if.end.i43.i, %if.then.i42.i
  %retval.0.i44.i = phi i32 [ %sub.i41.i, %if.then.i42.i ], [ %161, %if.end.i43.i ]
  %162 = inttoptr i32 %retval.0.i44.i to ptr
  call void @_clear_bit(i32 noundef 8, ptr noundef %162) #14
  %index.i = getelementptr inbounds %struct.page, ptr %135, i32 0, i32 1, i32 0, i32 2
  %163 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load i32, ptr %index.i, align 4
  %conv.i248 = zext i32 %164 to i64
  %shl.i = shl nuw nsw i64 %conv.i248, 12
  %call52 = call fastcc i32 @submit_extent_page(i32 noundef 4096, ptr noundef null, ptr noundef nonnull %bio_ctrl, ptr noundef %135, i64 noundef %shl.i, i32 noundef 4096, i32 noundef 0, ptr noundef nonnull @end_bio_extent_readpage, i32 noundef %mirror_num, i32 noundef 0, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call52)
  %tobool53.not = icmp eq i32 %call52, 0
  br i1 %tobool53.not, label %ClearPageError.exit.for.inc59_crit_edge, label %if.then54

ClearPageError.exit.for.inc59_crit_edge:          ; preds = %ClearPageError.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc59

if.then54:                                        ; preds = %ClearPageError.exit
  %165 = ptrtoint ptr %136 to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load volatile i32, ptr %136, align 4
  %and.i.i160 = and i32 %166, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i160)
  %tobool.not.i161 = icmp eq i32 %and.i.i160, 0
  br i1 %tobool.not.i161, label %do.body7.i165, label %if.then.i162, !prof !322

if.then.i162:                                     ; preds = %if.then54
  call void @__sanitizer_cov_trace_pc() #16
  call void @dump_page(ptr noundef %135, ptr noundef nonnull @.str.110) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 416, 0\0A.popsection", ""() #14, !srcloc !389
  unreachable

do.body7.i165:                                    ; preds = %if.then54
  %167 = ptrtoint ptr %136 to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load volatile i32, ptr %136, align 4
  %and.i31.i163 = and i32 %168, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i31.i163)
  %tobool.not.i.i164 = icmp eq i32 %and.i31.i163, 0
  br i1 %tobool.not.i.i164, label %if.end.i.i168, label %if.then.i.i167, !prof !322

if.then.i.i167:                                   ; preds = %do.body7.i165
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i166 = add i32 %168, -1
  br label %_compound_head.exit.i173

if.end.i.i168:                                    ; preds = %do.body7.i165
  call void @__sanitizer_cov_trace_pc() #16
  %169 = ptrtoint ptr %135 to i32
  br label %_compound_head.exit.i173

_compound_head.exit.i173:                         ; preds = %if.end.i.i168, %if.then.i.i167
  %retval.0.i.i169 = phi i32 [ %sub.i.i166, %if.then.i.i167 ], [ %169, %if.end.i.i168 ]
  %170 = inttoptr i32 %retval.0.i.i169 to ptr
  %171 = ptrtoint ptr %170 to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load volatile i32, ptr %170, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %172)
  %cmp.i.not.i170 = icmp eq i32 %172, -1
  %173 = ptrtoint ptr %136 to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load volatile i32, ptr %136, align 4
  %and.i32.i171 = and i32 %174, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i32.i171)
  %tobool.not.i33.i172 = icmp eq i32 %and.i32.i171, 0
  br i1 %cmp.i.not.i170, label %if.then17.i174, label %do.end24.i180, !prof !319

if.then17.i174:                                   ; preds = %_compound_head.exit.i173
  br i1 %tobool.not.i33.i172, label %if.end.i36.i177, label %if.then.i35.i176, !prof !322

if.then.i35.i176:                                 ; preds = %if.then17.i174
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i34.i175 = add i32 %174, -1
  br label %_compound_head.exit38.i179

if.end.i36.i177:                                  ; preds = %if.then17.i174
  call void @__sanitizer_cov_trace_pc() #16
  %175 = ptrtoint ptr %135 to i32
  br label %_compound_head.exit38.i179

_compound_head.exit38.i179:                       ; preds = %if.end.i36.i177, %if.then.i35.i176
  %retval.0.i37.i178 = phi i32 [ %sub.i34.i175, %if.then.i35.i176 ], [ %175, %if.end.i36.i177 ]
  %176 = inttoptr i32 %retval.0.i37.i178 to ptr
  call void @dump_page(ptr noundef %176, ptr noundef nonnull @.str.86) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 416, 0\0A.popsection", ""() #14, !srcloc !390
  unreachable

do.end24.i180:                                    ; preds = %_compound_head.exit.i173
  br i1 %tobool.not.i33.i172, label %if.end.i43.i183, label %if.then.i42.i182, !prof !322

if.then.i42.i182:                                 ; preds = %do.end24.i180
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i41.i181 = add i32 %174, -1
  br label %SetPageError.exit

if.end.i43.i183:                                  ; preds = %do.end24.i180
  call void @__sanitizer_cov_trace_pc() #16
  %177 = ptrtoint ptr %135 to i32
  br label %SetPageError.exit

SetPageError.exit:                                ; preds = %if.end.i43.i183, %if.then.i42.i182
  %retval.0.i44.i184 = phi i32 [ %sub.i41.i181, %if.then.i42.i182 ], [ %177, %if.end.i43.i183 ]
  %178 = inttoptr i32 %retval.0.i44.i184 to ptr
  call void @_set_bit(i32 noundef 8, ptr noundef %178) #14
  call void @unlock_page(ptr noundef %135) #14
  %call.i.i185 = call zeroext i1 @__kasan_check_write(ptr noundef %io_pages, i32 noundef 4) #14
  call void @llvm.prefetch.p0(ptr %io_pages, i32 1, i32 3, i32 1) #14
  %179 = call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %io_pages, ptr %io_pages, i32 1, ptr elementtype(i32) %io_pages) #14, !srcloc !381
  br label %for.inc59

for.inc59:                                        ; preds = %SetPageError.exit, %ClearPageError.exit.for.inc59_crit_edge, %if.then48, %PageUptodate.exit247
  %ret.1 = phi i32 [ %ret.0336, %PageUptodate.exit247 ], [ %ret.0336, %if.then48 ], [ %call52, %SetPageError.exit ], [ 0, %ClearPageError.exit.for.inc59_crit_edge ]
  %inc60 = add nuw nsw i32 %i.2335, 1
  %exitcond370.not = icmp eq i32 %inc60, %shr..i
  br i1 %exitcond370.not, label %for.inc59.for.end61_crit_edge, label %for.inc59.for.body41_crit_edge

for.inc59.for.body41_crit_edge:                   ; preds = %for.inc59
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body41

for.inc59.for.end61_crit_edge:                    ; preds = %for.inc59
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end61

for.end61:                                        ; preds = %for.inc59.for.end61_crit_edge, %if.end37.for.end61_crit_edge
  %ret.0.lcssa = phi i32 [ 0, %if.end37.for.end61_crit_edge ], [ %ret.1, %for.inc59.for.end61_crit_edge ]
  %180 = ptrtoint ptr %bio_ctrl to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load ptr, ptr %bio_ctrl, align 4
  %tobool62.not = icmp eq ptr %181, null
  br i1 %tobool62.not, label %for.end61.if.end70_crit_edge, label %if.then63

for.end61.if.end70_crit_edge:                     ; preds = %for.end61
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end70

if.then63:                                        ; preds = %for.end61
  %bio_flags = getelementptr inbounds %struct.btrfs_bio_ctrl, ptr %bio_ctrl, i32 0, i32 1
  %182 = ptrtoint ptr %bio_flags to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load i32, ptr %bio_flags, align 4
  %bi_private.i = getelementptr inbounds %struct.bio, ptr %181, i32 0, i32 11
  %184 = ptrtoint ptr %bi_private.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load ptr, ptr %bi_private.i, align 4
  store ptr null, ptr %bi_private.i, align 4
  %bi_size.i = getelementptr inbounds %struct.bio, ptr %181, i32 0, i32 8, i32 1
  %186 = ptrtoint ptr %bi_size.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load i32, ptr %bi_size.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %187)
  %tobool.not.i249 = icmp eq i32 %187, 0
  br i1 %tobool.not.i249, label %cond.false.i250, label %cond.end.i252, !prof !319

cond.false.i250:                                  ; preds = %if.then63
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.3, i32 noundef 176) #19
  unreachable

cond.end.i252:                                    ; preds = %if.then63
  %private_data.i = getelementptr inbounds %struct.extent_io_tree, ptr %185, i32 0, i32 2
  %188 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load ptr, ptr %private_data.i, align 8
  %location.i.i.i = getelementptr i8, ptr %189, i32 -860
  %190 = ptrtoint ptr %location.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %190, i32 8)
  %191 = load i64, ptr %location.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %191)
  %tobool.not.i.i.i251 = icmp eq i64 %191, 0
  br i1 %tobool.not.i.i.i251, label %cond.end.i252.if.then.i.i.i253_crit_edge, label %lor.lhs.false.i.i.i

cond.end.i252.if.then.i.i.i253_crit_edge:         ; preds = %cond.end.i252
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i253

lor.lhs.false.i.i.i:                              ; preds = %cond.end.i252
  %type.i.i.i = getelementptr i8, ptr %189, i32 -852
  %192 = ptrtoint ptr %type.i.i.i to i32
  call void @__asan_load1_noabort(i32 %192)
  %193 = load i8, ptr %type.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %193)
  %cmp.i.i.i = icmp eq i8 %193, -124
  br i1 %cmp.i.i.i, label %lor.lhs.false.i.i.i.if.then.i.i.i253_crit_edge, label %lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge

lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge: ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %is_data_inode.exit.i

lor.lhs.false.i.i.i.if.then.i.i.i253_crit_edge:   ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i.i.i253

if.then.i.i.i253:                                 ; preds = %lor.lhs.false.i.i.i.if.then.i.i.i253_crit_edge, %cond.end.i252.if.then.i.i.i253_crit_edge
  %i_ino.i.i.i = getelementptr i8, ptr %189, i32 40
  %194 = ptrtoint ptr %i_ino.i.i.i to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load i32, ptr %i_ino.i.i.i, align 8
  %conv3.i.i.i = zext i32 %195 to i64
  br label %is_data_inode.exit.i

is_data_inode.exit.i:                             ; preds = %if.then.i.i.i253, %lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge
  %ino.0.i.i.i = phi i64 [ %conv3.i.i.i, %if.then.i.i.i253 ], [ %191, %lor.lhs.false.i.i.i.is_data_inode.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %ino.0.i.i.i)
  %cmp.i.not.i254 = icmp eq i64 %ino.0.i.i.i, 1
  br i1 %cmp.i.not.i254, label %if.else.i256, label %if.then.i255

if.then.i255:                                     ; preds = %is_data_inode.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %call5.i = call zeroext i8 @btrfs_submit_data_bio(ptr noundef %189, ptr noundef nonnull %181, i32 noundef %mirror_num, i32 noundef %183) #14
  br label %submit_one_bio.exit

if.else.i256:                                     ; preds = %is_data_inode.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %call7.i = call zeroext i8 @btrfs_submit_metadata_bio(ptr noundef %189, ptr noundef nonnull %181, i32 noundef %mirror_num, i32 noundef %183) #14
  br label %submit_one_bio.exit

submit_one_bio.exit:                              ; preds = %if.else.i256, %if.then.i255
  %ret.0.i = phi i8 [ %call5.i, %if.then.i255 ], [ %call7.i, %if.else.i256 ]
  %call8.i = call i32 @blk_status_to_errno(i8 noundef zeroext %ret.0.i) #14
  %196 = ptrtoint ptr %bio_ctrl to i32
  call void @__asan_store4_noabort(i32 %196)
  store ptr null, ptr %bio_ctrl, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %tobool67.not = icmp eq i32 %call8.i, 0
  br i1 %tobool67.not, label %submit_one_bio.exit.if.end70_crit_edge, label %submit_one_bio.exit.cleanup_crit_edge

submit_one_bio.exit.cleanup_crit_edge:            ; preds = %submit_one_bio.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

submit_one_bio.exit.if.end70_crit_edge:           ; preds = %submit_one_bio.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end70

if.end70:                                         ; preds = %submit_one_bio.exit.if.end70_crit_edge, %for.end61.if.end70_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0.lcssa)
  %tobool71.not = icmp ne i32 %ret.0.lcssa, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %wait)
  %cmp72.not = icmp ne i32 %wait, 1
  %or.cond.not = or i1 %cmp72.not, %tobool71.not
  %brmerge = select i1 %or.cond.not, i1 true, i1 %cmp12324.not
  %ret.0.lcssa.mux = select i1 %or.cond.not, i32 %ret.0.lcssa, i32 0
  br i1 %brmerge, label %if.end70.cleanup_crit_edge, label %if.end70.for.body77_crit_edge

if.end70.for.body77_crit_edge:                    ; preds = %if.end70
  br label %for.body77

if.end70.cleanup_crit_edge:                       ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body77:                                       ; preds = %PageUptodate.exit283.for.body77_crit_edge, %if.end70.for.body77_crit_edge
  %ret.2340 = phi i32 [ %spec.select157, %PageUptodate.exit283.for.body77_crit_edge ], [ 0, %if.end70.for.body77_crit_edge ]
  %i.3339 = phi i32 [ %inc85, %PageUptodate.exit283.for.body77_crit_edge ], [ 0, %if.end70.for.body77_crit_edge ]
  %arrayidx79 = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %i.3339
  %197 = ptrtoint ptr %arrayidx79 to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load ptr, ptr %arrayidx79, align 4
  %199 = getelementptr inbounds %struct.page, ptr %198, i32 0, i32 1
  %200 = ptrtoint ptr %199 to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load volatile i32, ptr %199, align 4
  %and.i.i257 = and i32 %201, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i257)
  %tobool.not.i.i258 = icmp eq i32 %and.i.i257, 0
  br i1 %tobool.not.i.i258, label %if.end.i.i261, label %if.then.i.i260, !prof !322

if.then.i.i260:                                   ; preds = %for.body77
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i259 = add i32 %201, -1
  br label %_compound_head.exit.i265

if.end.i.i261:                                    ; preds = %for.body77
  call void @__sanitizer_cov_trace_pc() #16
  %202 = ptrtoint ptr %198 to i32
  br label %_compound_head.exit.i265

_compound_head.exit.i265:                         ; preds = %if.end.i.i261, %if.then.i.i260
  %retval.0.i.i262 = phi i32 [ %sub.i.i259, %if.then.i.i260 ], [ %202, %if.end.i.i261 ]
  %203 = inttoptr i32 %retval.0.i.i262 to ptr
  %204 = getelementptr inbounds %struct.page, ptr %203, i32 0, i32 1
  %205 = ptrtoint ptr %204 to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load volatile i32, ptr %204, align 4
  %and.i.i.i.i.i263 = and i32 %206, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i263)
  %tobool.not.i.i.i.i264 = icmp eq i32 %and.i.i.i.i.i263, 0
  br i1 %tobool.not.i.i.i.i264, label %folio_test_locked.exit.i.i, label %if.then.i.i.i.i266, !prof !322

if.then.i.i.i.i266:                               ; preds = %_compound_head.exit.i265
  call void @__sanitizer_cov_trace_pc() #16
  %207 = inttoptr i32 %retval.0.i.i262 to ptr
  call void @dump_page(ptr noundef %207, ptr noundef nonnull @.str.82) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

folio_test_locked.exit.i.i:                       ; preds = %_compound_head.exit.i265
  %208 = ptrtoint ptr %203 to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load volatile i32, ptr %203, align 4
  %and1.i.i.i.i267 = and i32 %209, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i267)
  %tobool.i.not.i.i268 = icmp eq i32 %and1.i.i.i.i267, 0
  br i1 %tobool.i.not.i.i268, label %folio_test_locked.exit.i.i.wait_on_page_locked.exit_crit_edge, label %if.then.i1.i

folio_test_locked.exit.i.i.wait_on_page_locked.exit_crit_edge: ; preds = %folio_test_locked.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %wait_on_page_locked.exit

if.then.i1.i:                                     ; preds = %folio_test_locked.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @folio_wait_bit(ptr noundef %203, i32 noundef 0) #14
  br label %wait_on_page_locked.exit

wait_on_page_locked.exit:                         ; preds = %if.then.i1.i, %folio_test_locked.exit.i.i.wait_on_page_locked.exit_crit_edge
  %210 = ptrtoint ptr %199 to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load volatile i32, ptr %199, align 4
  %and.i.i269 = and i32 %211, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i269)
  %tobool.not.i.i270 = icmp eq i32 %and.i.i269, 0
  br i1 %tobool.not.i.i270, label %if.end.i.i273, label %if.then.i.i272, !prof !322

if.then.i.i272:                                   ; preds = %wait_on_page_locked.exit
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i271 = add i32 %211, -1
  br label %_compound_head.exit.i277

if.end.i.i273:                                    ; preds = %wait_on_page_locked.exit
  call void @__sanitizer_cov_trace_pc() #16
  %212 = ptrtoint ptr %198 to i32
  br label %_compound_head.exit.i277

_compound_head.exit.i277:                         ; preds = %if.end.i.i273, %if.then.i.i272
  %retval.0.i.i274 = phi i32 [ %sub.i.i271, %if.then.i.i272 ], [ %212, %if.end.i.i273 ]
  %213 = inttoptr i32 %retval.0.i.i274 to ptr
  %214 = getelementptr inbounds %struct.page, ptr %213, i32 0, i32 1
  %215 = ptrtoint ptr %214 to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load volatile i32, ptr %214, align 4
  %and.i.i.i.i275 = and i32 %216, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i275)
  %tobool.not.i.i.i276 = icmp eq i32 %and.i.i.i.i275, 0
  br i1 %tobool.not.i.i.i276, label %folio_flags.exit.i.i280, label %if.then.i.i.i278, !prof !322

if.then.i.i.i278:                                 ; preds = %_compound_head.exit.i277
  call void @__sanitizer_cov_trace_pc() #16
  %217 = inttoptr i32 %retval.0.i.i274 to ptr
  call void @dump_page(ptr noundef %217, ptr noundef nonnull @.str.82) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

folio_flags.exit.i.i280:                          ; preds = %_compound_head.exit.i277
  %218 = ptrtoint ptr %213 to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load volatile i32, ptr %213, align 4
  %220 = and i32 %219, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %220)
  %tobool.i.not.i279 = icmp eq i32 %220, 0
  br i1 %tobool.i.not.i279, label %folio_flags.exit.i.i280.PageUptodate.exit283_crit_edge, label %do.end.i.i281

folio_flags.exit.i.i280.PageUptodate.exit283_crit_edge: ; preds = %folio_flags.exit.i.i280
  call void @__sanitizer_cov_trace_pc() #16
  br label %PageUptodate.exit283

do.end.i.i281:                                    ; preds = %folio_flags.exit.i.i280
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !379
  br label %PageUptodate.exit283

PageUptodate.exit283:                             ; preds = %do.end.i.i281, %folio_flags.exit.i.i280.PageUptodate.exit283_crit_edge
  %spec.select157 = phi i32 [ -5, %folio_flags.exit.i.i280.PageUptodate.exit283_crit_edge ], [ %ret.2340, %do.end.i.i281 ]
  %inc85 = add nuw nsw i32 %i.3339, 1
  %exitcond371.not = icmp eq i32 %inc85, %shr..i
  br i1 %exitcond371.not, label %PageUptodate.exit283.cleanup_crit_edge, label %PageUptodate.exit283.for.body77_crit_edge

PageUptodate.exit283.for.body77_crit_edge:        ; preds = %PageUptodate.exit283
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body77

PageUptodate.exit283.cleanup_crit_edge:           ; preds = %PageUptodate.exit283
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

unlock_exit:                                      ; preds = %if.then35, %trylock_page.exit.unlock_exit_crit_edge, %folio_flags.exit.i.i.unlock_exit_crit_edge
  %locked_pages.0321 = phi i32 [ %locked_pages.0.lcssa373378, %if.then35 ], [ %locked_pages.0326, %trylock_page.exit.unlock_exit_crit_edge ], [ %locked_pages.0326, %folio_flags.exit.i.i.unlock_exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %locked_pages.0321)
  %cmp87342 = icmp sgt i32 %locked_pages.0321, 0
  br i1 %cmp87342, label %unlock_exit.while.body_crit_edge, label %unlock_exit.cleanup_crit_edge

unlock_exit.cleanup_crit_edge:                    ; preds = %unlock_exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

unlock_exit.while.body_crit_edge:                 ; preds = %unlock_exit
  br label %while.body

while.body:                                       ; preds = %while.body.while.body_crit_edge, %unlock_exit.while.body_crit_edge
  %locked_pages.1343 = phi i32 [ %dec, %while.body.while.body_crit_edge ], [ %locked_pages.0321, %unlock_exit.while.body_crit_edge ]
  %dec = add nsw i32 %locked_pages.1343, -1
  %arrayidx89 = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %dec
  %221 = ptrtoint ptr %arrayidx89 to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load ptr, ptr %arrayidx89, align 4
  tail call void @unlock_page(ptr noundef %222) #14
  %cmp87 = icmp ugt i32 %locked_pages.1343, 1
  br i1 %cmp87, label %while.body.while.body_crit_edge, label %while.body.cleanup_crit_edge

while.body.cleanup_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

cleanup:                                          ; preds = %while.body.cleanup_crit_edge, %unlock_exit.cleanup_crit_edge, %PageUptodate.exit283.cleanup_crit_edge, %if.end70.cleanup_crit_edge, %submit_one_bio.exit.cleanup_crit_edge, %read_extent_buffer_subpage.exit, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval.1.i, %read_extent_buffer_subpage.exit ], [ 0, %entry.cleanup_crit_edge ], [ -5, %if.end.cleanup_crit_edge ], [ %call8.i, %submit_one_bio.exit.cleanup_crit_edge ], [ %ret.0.lcssa.mux, %if.end70.cleanup_crit_edge ], [ 0, %unlock_exit.cleanup_crit_edge ], [ 0, %while.body.cleanup_crit_edge ], [ %spec.select157, %PageUptodate.exit283.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %bio_ctrl) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @read_extent_buffer(ptr nocapture noundef readonly %eb, ptr nocapture noundef writeonly %dstv, i32 noundef %start, i32 noundef %len) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %shr.i = lshr i32 %start, 12
  %0 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %start, i32 %len) #14
  %1 = extractvalue { i32, i1 } %0, 1
  br i1 %1, label %entry.check_eb_range.exit_crit_edge, label %lor.rhs.i, !prof !319

entry.check_eb_range.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %check_eb_range.exit

lor.rhs.i:                                        ; preds = %entry
  %2 = extractvalue { i32, i1 } %0, 0
  %len4.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %3 = ptrtoint ptr %len4.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %len4.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %4)
  %cmp5.i = icmp ugt i32 %2, %4
  br i1 %cmp5.i, label %lor.rhs.i.check_eb_range.exit_crit_edge, label %if.end, !prof !319

lor.rhs.i.check_eb_range.exit_crit_edge:          ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %check_eb_range.exit

check_eb_range.exit:                              ; preds = %lor.rhs.i.check_eb_range.exit_crit_edge, %entry.check_eb_range.exit_crit_edge
  %fs_info.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 3
  %5 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_info.i, align 8
  %7 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %eb, align 8
  %len2.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %9 = ptrtoint ptr %len2.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %len2.i, align 8
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %6, ptr noundef nonnull @.str.132, i64 noundef %8, i32 noundef %10, i32 noundef %start, i32 noundef %len) #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 6710, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end:                                           ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %cmp.not28 = icmp eq i32 %len, 0
  br i1 %cmp.not28, label %if.end.cleanup_crit_edge, label %while.body.preheader

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

while.body.preheader:                             ; preds = %if.end
  %11 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %eb, align 8
  %13 = trunc i64 %12 to i32
  %conv1.i = add i32 %13, %start
  %and.i = and i32 %conv1.i, 4095
  %arrayidx.peel = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %shr.i
  %14 = ptrtoint ptr %arrayidx.peel to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx.peel, align 4
  %sub.peel = sub nuw nsw i32 4096, %and.i
  %16 = tail call i32 @llvm.umin.i32(i32 %len, i32 %sub.peel)
  %call4.peel = tail call ptr @page_address(ptr noundef %15) #14
  %add.ptr.peel = getelementptr i8, ptr %call4.peel, i32 %and.i
  %17 = call ptr @memcpy(ptr %dstv, ptr %add.ptr.peel, i32 %16)
  %sub6.peel = sub i32 %len, %16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub6.peel)
  %cmp.not.peel = icmp eq i32 %sub6.peel, 0
  br i1 %cmp.not.peel, label %while.body.preheader.cleanup_crit_edge, label %while.body.peel.next

while.body.preheader.cleanup_crit_edge:           ; preds = %while.body.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

while.body.peel.next:                             ; preds = %while.body.preheader
  %add.ptr5.peel = getelementptr i8, ptr %dstv, i32 %16
  br label %while.body

while.body:                                       ; preds = %while.body.while.body_crit_edge, %while.body.peel.next
  %len.addr.032 = phi i32 [ %sub6, %while.body.while.body_crit_edge ], [ %sub6.peel, %while.body.peel.next ]
  %i.031.in = phi i32 [ %i.031, %while.body.while.body_crit_edge ], [ %shr.i, %while.body.peel.next ]
  %dst.030 = phi ptr [ %add.ptr5, %while.body.while.body_crit_edge ], [ %add.ptr5.peel, %while.body.peel.next ]
  %i.031 = add i32 %i.031.in, 1
  %arrayidx = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %i.031
  %18 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx, align 4
  %20 = tail call i32 @llvm.umin.i32(i32 %len.addr.032, i32 4096)
  %call4 = tail call ptr @page_address(ptr noundef %19) #14
  %21 = call ptr @memcpy(ptr %dst.030, ptr %call4, i32 %20)
  %add.ptr5 = getelementptr i8, ptr %dst.030, i32 %20
  %sub6 = sub i32 %len.addr.032, %20
  %cmp.not = icmp eq i32 %sub6, 0
  br i1 %cmp.not, label %while.body.cleanup_crit_edge, label %while.body.while.body_crit_edge, !llvm.loop !409

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

while.body.cleanup_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %while.body.cleanup_crit_edge, %while.body.preheader.cleanup_crit_edge, %if.end.cleanup_crit_edge, %check_eb_range.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @read_extent_buffer_to_user_nofault(ptr nocapture noundef readonly %eb, ptr noundef %dstv, i32 noundef %start, i32 noundef %len) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %shr.i = lshr i32 %start, 12
  %len1 = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %0 = ptrtoint ptr %len1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len1, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %start)
  %cmp = icmp ult i32 %1, %start
  br i1 %cmp, label %do.end, label %entry.if.end_crit_edge, !prof !319

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 6775, i32 noundef 9, ptr noundef null) #14
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %add = add i32 %len, %start
  %conv = zext i32 %add to i64
  %2 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %eb, align 8
  %4 = ptrtoint ptr %len1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %len1, align 8
  %conv23 = zext i32 %5 to i64
  %add24 = add i64 %3, %conv23
  call void @__sanitizer_cov_trace_cmp8(i64 %add24, i64 %conv)
  %cmp25 = icmp ult i64 %add24, %conv
  br i1 %cmp25, label %do.end42, label %if.end.if.end48_crit_edge, !prof !319

if.end.if.end48_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end48

do.end42:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 6776, i32 noundef 9, ptr noundef null) #14
  br label %if.end48

if.end48:                                         ; preds = %do.end42, %if.end.if.end48_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %cmp57.not88 = icmp eq i32 %len, 0
  br i1 %cmp57.not88, label %if.end48.while.end_crit_edge, label %while.body.preheader

if.end48.while.end_crit_edge:                     ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body.preheader:                             ; preds = %if.end48
  %6 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %eb, align 8
  %8 = trunc i64 %7 to i32
  %conv1.i = add i32 %8, %start
  %and.i = and i32 %conv1.i, 4095
  br label %while.body

while.body:                                       ; preds = %if.end66.while.body_crit_edge, %while.body.preheader
  %len.addr.092 = phi i32 [ %sub68, %if.end66.while.body_crit_edge ], [ %len, %while.body.preheader ]
  %offset.091 = phi i32 [ 0, %if.end66.while.body_crit_edge ], [ %and.i, %while.body.preheader ]
  %i.090 = phi i32 [ %inc, %if.end66.while.body_crit_edge ], [ %shr.i, %while.body.preheader ]
  %dst.089 = phi ptr [ %add.ptr67, %if.end66.while.body_crit_edge ], [ %dstv, %while.body.preheader ]
  %arrayidx = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %i.090
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx, align 4
  %sub = sub nuw nsw i32 4096, %offset.091
  %11 = tail call i32 @llvm.umin.i32(i32 %len.addr.092, i32 %sub)
  %call62 = tail call ptr @page_address(ptr noundef %10) #14
  %add.ptr = getelementptr i8, ptr %call62, i32 %offset.091
  %call63 = tail call i32 @copy_to_user_nofault(ptr noundef %dst.089, ptr noundef %add.ptr, i32 noundef %11) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call63)
  %tobool64.not = icmp eq i32 %call63, 0
  br i1 %tobool64.not, label %if.end66, label %while.body.while.end_crit_edge

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.end66:                                         ; preds = %while.body
  %add.ptr67 = getelementptr i8, ptr %dst.089, i32 %11
  %sub68 = sub i32 %len.addr.092, %11
  %inc = add i32 %i.090, 1
  %cmp57.not = icmp eq i32 %sub68, 0
  br i1 %cmp57.not, label %if.end66.while.end_crit_edge, label %if.end66.while.body_crit_edge

if.end66.while.body_crit_edge:                    ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

if.end66.while.end_crit_edge:                     ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %if.end66.while.end_crit_edge, %while.body.while.end_crit_edge, %if.end48.while.end_crit_edge
  %ret.0 = phi i32 [ 0, %if.end48.while.end_crit_edge ], [ -14, %while.body.while.end_crit_edge ], [ 0, %if.end66.while.end_crit_edge ]
  ret i32 %ret.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @copy_to_user_nofault(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @memcmp_extent_buffer(ptr nocapture noundef readonly %eb, ptr nocapture noundef readonly %ptrv, i32 noundef %start, i32 noundef %len) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %shr.i = lshr i32 %start, 12
  %0 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %start, i32 %len) #14
  %1 = extractvalue { i32, i1 } %0, 1
  br i1 %1, label %entry.check_eb_range.exit_crit_edge, label %lor.rhs.i, !prof !319

entry.check_eb_range.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %check_eb_range.exit

lor.rhs.i:                                        ; preds = %entry
  %2 = extractvalue { i32, i1 } %0, 0
  %len4.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %3 = ptrtoint ptr %len4.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %len4.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %4)
  %cmp5.i = icmp ugt i32 %2, %4
  br i1 %cmp5.i, label %lor.rhs.i.check_eb_range.exit_crit_edge, label %if.end, !prof !319

lor.rhs.i.check_eb_range.exit_crit_edge:          ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %check_eb_range.exit

check_eb_range.exit:                              ; preds = %lor.rhs.i.check_eb_range.exit_crit_edge, %entry.check_eb_range.exit_crit_edge
  %fs_info.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 3
  %5 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_info.i, align 8
  %7 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %eb, align 8
  %len2.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %9 = ptrtoint ptr %len2.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %len2.i, align 8
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %6, ptr noundef nonnull @.str.132, i64 noundef %8, i32 noundef %10, i32 noundef %start, i32 noundef %len) #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 6710, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end:                                           ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %cmp.not34 = icmp eq i32 %len, 0
  br i1 %cmp.not34, label %if.end.cleanup_crit_edge, label %while.body.preheader

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

while.body.preheader:                             ; preds = %if.end
  %11 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %eb, align 8
  %13 = trunc i64 %12 to i32
  %conv1.i = add i32 %13, %start
  %and.i = and i32 %conv1.i, 4095
  br label %while.body

while.body:                                       ; preds = %if.end8.while.body_crit_edge, %while.body.preheader
  %i.038 = phi i32 [ %inc, %if.end8.while.body_crit_edge ], [ %shr.i, %while.body.preheader ]
  %ptr.037 = phi ptr [ %add.ptr9, %if.end8.while.body_crit_edge ], [ %ptrv, %while.body.preheader ]
  %offset.036 = phi i32 [ 0, %if.end8.while.body_crit_edge ], [ %and.i, %while.body.preheader ]
  %len.addr.035 = phi i32 [ %sub10, %if.end8.while.body_crit_edge ], [ %len, %while.body.preheader ]
  %arrayidx = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %i.038
  %14 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx, align 4
  %sub = sub nuw nsw i32 4096, %offset.036
  %16 = tail call i32 @llvm.umin.i32(i32 %len.addr.035, i32 %sub)
  %call4 = tail call ptr @page_address(ptr noundef %15) #14
  %add.ptr = getelementptr i8, ptr %call4, i32 %offset.036
  %call5 = tail call i32 @memcmp(ptr noundef %ptr.037, ptr noundef %add.ptr, i32 noundef %16) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end8, label %while.body.cleanup_crit_edge

while.body.cleanup_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end8:                                          ; preds = %while.body
  %add.ptr9 = getelementptr i8, ptr %ptr.037, i32 %16
  %sub10 = sub i32 %len.addr.035, %16
  %inc = add i32 %i.038, 1
  %cmp.not = icmp eq i32 %sub10, 0
  br i1 %cmp.not, label %if.end8.cleanup_crit_edge, label %if.end8.while.body_crit_edge

if.end8.while.body_crit_edge:                     ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %if.end8.cleanup_crit_edge, %while.body.cleanup_crit_edge, %if.end.cleanup_crit_edge, %check_eb_range.exit
  %retval.0 = phi i32 [ -22, %check_eb_range.exit ], [ 0, %if.end.cleanup_crit_edge ], [ %call5, %while.body.cleanup_crit_edge ], [ 0, %if.end8.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @memcmp(ptr nocapture noundef, ptr nocapture noundef, i32 noundef) local_unnamed_addr #9

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @write_extent_buffer_chunk_tree_uuid(ptr nocapture noundef readonly %eb, ptr nocapture noundef readonly %srcv) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %pages = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 12
  %0 = ptrtoint ptr %pages to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pages, align 4
  tail call fastcc void @assert_eb_page_uptodate(ptr noundef %eb, ptr noundef %1)
  %2 = ptrtoint ptr %pages to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pages, align 4
  %call = tail call ptr @page_address(ptr noundef %3) #14
  %4 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %eb, align 8
  %6 = trunc i64 %5 to i32
  %conv1.i = add i32 %6, 64
  %and.i = and i32 %conv1.i, 4095
  %add.ptr = getelementptr i8, ptr %call, i32 %and.i
  %7 = call ptr @memcpy(ptr %add.ptr, ptr %srcv, i32 16)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @assert_eb_page_uptodate(ptr nocapture noundef readonly %eb, ptr noundef %page) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info1 = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 3
  %0 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info1, align 8
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 167
  %2 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %sectorsize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %3)
  %cmp = icmp ult i32 %3, 4096
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %eb, align 8
  %len = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %6 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %len, align 8
  %call = tail call zeroext i1 @btrfs_subpage_test_uptodate(ptr noundef %1, ptr noundef %page, i64 noundef %5, i32 noundef %7) #14
  %8 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %eb, align 8
  %10 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %len, align 8
  %call4 = tail call zeroext i1 @btrfs_subpage_test_error(ptr noundef %1, ptr noundef %page, i64 noundef %9, i32 noundef %11) #14
  %12 = select i1 %call, i1 true, i1 %call4
  br i1 %12, label %if.then.if.end66_crit_edge, label %do.end, !prof !322

if.then.if.end66_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end66

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 6859, i32 noundef 9, ptr noundef null) #14
  br label %if.end66

if.else:                                          ; preds = %entry
  %13 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %13, align 4
  %and.i.i78 = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i78)
  %tobool.not.i.i79 = icmp eq i32 %and.i.i78, 0
  br i1 %tobool.not.i.i79, label %if.end.i.i82, label %if.then.i.i81, !prof !322

if.then.i.i81:                                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i80 = add i32 %15, -1
  br label %_compound_head.exit.i84

if.end.i.i82:                                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i84

_compound_head.exit.i84:                          ; preds = %if.end.i.i82, %if.then.i.i81
  %retval.0.i.i83 = phi i32 [ %sub.i.i80, %if.then.i.i81 ], [ %16, %if.end.i.i82 ]
  %17 = inttoptr i32 %retval.0.i.i83 to ptr
  %18 = getelementptr inbounds %struct.page, ptr %17, i32 0, i32 1
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %18, align 4
  %and.i.i.i.i = and i32 %20, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %folio_flags.exit.i.i, label %if.then.i.i.i, !prof !322

if.then.i.i.i:                                    ; preds = %_compound_head.exit.i84
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %17, ptr noundef nonnull @.str.82) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

folio_flags.exit.i.i:                             ; preds = %_compound_head.exit.i84
  %21 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %17, align 4
  %23 = and i32 %22, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool.i.not.i = icmp eq i32 %23, 0
  br i1 %tobool.i.not.i, label %land.rhs31, label %PageUptodate.exit

PageUptodate.exit:                                ; preds = %folio_flags.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !379
  br label %if.end66

land.rhs31:                                       ; preds = %folio_flags.exit.i.i
  %24 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %13, align 4
  %and.i.i = and i32 %25, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !322

if.then.i.i:                                      ; preds = %land.rhs31
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %25, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %land.rhs31
  call void @__sanitizer_cov_trace_pc() #16
  %26 = ptrtoint ptr %page to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %26, %if.end.i.i ]
  %27 = inttoptr i32 %retval.0.i.i to ptr
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %27, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %29)
  %cmp.i.not.i = icmp eq i32 %29, -1
  %30 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %13, align 4
  %and.i16.i = and i32 %31, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i)
  %tobool.not.i17.i = icmp eq i32 %and.i16.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end10.i, !prof !319

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i20.i, label %if.then.i19.i, !prof !322

if.then.i19.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i18.i = add i32 %31, -1
  br label %_compound_head.exit22.i

if.end.i20.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %32 = ptrtoint ptr %page to i32
  br label %_compound_head.exit22.i

_compound_head.exit22.i:                          ; preds = %if.end.i20.i, %if.then.i19.i
  %retval.0.i21.i = phi i32 [ %sub.i18.i, %if.then.i19.i ], [ %32, %if.end.i20.i ]
  %33 = inttoptr i32 %retval.0.i21.i to ptr
  tail call void @dump_page(ptr noundef %33, ptr noundef nonnull @.str.86) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 416, 0\0A.popsection", ""() #14, !srcloc !378
  unreachable

do.end10.i:                                       ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i27.i, label %if.then.i26.i, !prof !322

if.then.i26.i:                                    ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i25.i = add i32 %31, -1
  br label %PageError.exit

if.end.i27.i:                                     ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  %34 = ptrtoint ptr %page to i32
  br label %PageError.exit

PageError.exit:                                   ; preds = %if.end.i27.i, %if.then.i26.i
  %retval.0.i28.i = phi i32 [ %sub.i25.i, %if.then.i26.i ], [ %34, %if.end.i27.i ]
  %35 = inttoptr i32 %retval.0.i28.i to ptr
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %35, align 4
  %38 = and i32 %37, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool33.not = icmp eq i32 %38, 0
  br i1 %tobool33.not, label %do.end52, label %PageError.exit.if.end66_crit_edge, !prof !319

PageError.exit.if.end66_crit_edge:                ; preds = %PageError.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end66

do.end52:                                         ; preds = %PageError.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 6861, i32 noundef 9, ptr noundef null) #14
  br label %if.end66

if.end66:                                         ; preds = %do.end52, %PageError.exit.if.end66_crit_edge, %PageUptodate.exit, %do.end, %if.then.if.end66_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @write_extent_buffer_fsid(ptr nocapture noundef readonly %eb, ptr nocapture noundef readonly %srcv) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %pages = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 12
  %0 = ptrtoint ptr %pages to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pages, align 4
  tail call fastcc void @assert_eb_page_uptodate(ptr noundef %eb, ptr noundef %1)
  %2 = ptrtoint ptr %pages to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pages, align 4
  %call = tail call ptr @page_address(ptr noundef %3) #14
  %4 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %eb, align 8
  %6 = trunc i64 %5 to i32
  %conv1.i = add i32 %6, 32
  %and.i = and i32 %conv1.i, 4095
  %add.ptr = getelementptr i8, ptr %call, i32 %and.i
  %7 = call ptr @memcpy(ptr %add.ptr, ptr %srcv, i32 16)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @write_extent_buffer(ptr noundef %eb, ptr nocapture noundef readonly %srcv, i32 noundef %start, i32 noundef %len) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %shr.i54 = lshr i32 %start, 12
  %bflags = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 2
  %0 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %bflags, align 4
  %2 = and i32 %1, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end, !prof !322

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 6897, i32 noundef 9, ptr noundef null) #14
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %start, i32 %len) #14
  %4 = extractvalue { i32, i1 } %3, 1
  br i1 %4, label %if.end.check_eb_range.exit_crit_edge, label %lor.rhs.i, !prof !319

if.end.check_eb_range.exit_crit_edge:             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %check_eb_range.exit

lor.rhs.i:                                        ; preds = %if.end
  %5 = extractvalue { i32, i1 } %3, 0
  %len4.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %6 = ptrtoint ptr %len4.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %len4.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %7)
  %cmp5.i = icmp ugt i32 %5, %7
  br i1 %cmp5.i, label %lor.rhs.i.check_eb_range.exit_crit_edge, label %if.end24, !prof !319

lor.rhs.i.check_eb_range.exit_crit_edge:          ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %check_eb_range.exit

check_eb_range.exit:                              ; preds = %lor.rhs.i.check_eb_range.exit_crit_edge, %if.end.check_eb_range.exit_crit_edge
  tail call fastcc void @report_eb_range(ptr noundef %eb, i32 noundef %start, i32 noundef %len) #14
  br label %cleanup

if.end24:                                         ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %cmp.not57 = icmp eq i32 %len, 0
  br i1 %cmp.not57, label %if.end24.cleanup_crit_edge, label %while.body.preheader

if.end24.cleanup_crit_edge:                       ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

while.body.preheader:                             ; preds = %if.end24
  %8 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %eb, align 8
  %10 = trunc i64 %9 to i32
  %conv1.i = add i32 %10, %start
  %and.i = and i32 %conv1.i, 4095
  %arrayidx.peel = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %shr.i54
  %11 = ptrtoint ptr %arrayidx.peel to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx.peel, align 4
  tail call fastcc void @assert_eb_page_uptodate(ptr noundef %eb, ptr noundef %12)
  %sub.peel = sub nuw nsw i32 4096, %and.i
  %13 = tail call i32 @llvm.umin.i32(i32 %len, i32 %sub.peel)
  %call28.peel = tail call ptr @page_address(ptr noundef %12) #14
  %add.ptr.peel = getelementptr i8, ptr %call28.peel, i32 %and.i
  %14 = call ptr @memcpy(ptr %add.ptr.peel, ptr %srcv, i32 %13)
  %sub30.peel = sub i32 %len, %13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub30.peel)
  %cmp.not.peel = icmp eq i32 %sub30.peel, 0
  br i1 %cmp.not.peel, label %while.body.preheader.cleanup_crit_edge, label %while.body.peel.next

while.body.preheader.cleanup_crit_edge:           ; preds = %while.body.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

while.body.peel.next:                             ; preds = %while.body.preheader
  %add.ptr29.peel = getelementptr i8, ptr %srcv, i32 %13
  br label %while.body

while.body:                                       ; preds = %while.body.while.body_crit_edge, %while.body.peel.next
  %len.addr.061 = phi i32 [ %sub30, %while.body.while.body_crit_edge ], [ %sub30.peel, %while.body.peel.next ]
  %i.060.in = phi i32 [ %i.060, %while.body.while.body_crit_edge ], [ %shr.i54, %while.body.peel.next ]
  %src.059 = phi ptr [ %add.ptr29, %while.body.while.body_crit_edge ], [ %add.ptr29.peel, %while.body.peel.next ]
  %i.060 = add i32 %i.060.in, 1
  %arrayidx = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %i.060
  %15 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %arrayidx, align 4
  tail call fastcc void @assert_eb_page_uptodate(ptr noundef %eb, ptr noundef %16)
  %17 = tail call i32 @llvm.umin.i32(i32 %len.addr.061, i32 4096)
  %call28 = tail call ptr @page_address(ptr noundef %16) #14
  %18 = call ptr @memcpy(ptr %call28, ptr %src.059, i32 %17)
  %add.ptr29 = getelementptr i8, ptr %src.059, i32 %17
  %sub30 = sub i32 %len.addr.061, %17
  %cmp.not = icmp eq i32 %sub30, 0
  br i1 %cmp.not, label %while.body.cleanup_crit_edge, label %while.body.while.body_crit_edge, !llvm.loop !411

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

while.body.cleanup_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %while.body.cleanup_crit_edge, %while.body.preheader.cleanup_crit_edge, %if.end24.cleanup_crit_edge, %check_eb_range.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @memzero_extent_buffer(ptr nocapture noundef readonly %eb, i32 noundef %start, i32 noundef %len) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %shr.i = lshr i32 %start, 12
  %0 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %start, i32 %len) #14
  %1 = extractvalue { i32, i1 } %0, 1
  br i1 %1, label %entry.check_eb_range.exit_crit_edge, label %lor.rhs.i, !prof !319

entry.check_eb_range.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %check_eb_range.exit

lor.rhs.i:                                        ; preds = %entry
  %2 = extractvalue { i32, i1 } %0, 0
  %len4.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %3 = ptrtoint ptr %len4.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %len4.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %4)
  %cmp5.i = icmp ugt i32 %2, %4
  br i1 %cmp5.i, label %lor.rhs.i.check_eb_range.exit_crit_edge, label %if.end, !prof !319

lor.rhs.i.check_eb_range.exit_crit_edge:          ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %check_eb_range.exit

check_eb_range.exit:                              ; preds = %lor.rhs.i.check_eb_range.exit_crit_edge, %entry.check_eb_range.exit_crit_edge
  %fs_info.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 3
  %5 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_info.i, align 8
  %7 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %eb, align 8
  %len2.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %9 = ptrtoint ptr %len2.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %len2.i, align 8
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %6, ptr noundef nonnull @.str.132, i64 noundef %8, i32 noundef %10, i32 noundef %start, i32 noundef %len) #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 6710, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end:                                           ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %cmp.not26 = icmp eq i32 %len, 0
  br i1 %cmp.not26, label %if.end.cleanup_crit_edge, label %while.body.preheader

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

while.body.preheader:                             ; preds = %if.end
  %11 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %eb, align 8
  %13 = trunc i64 %12 to i32
  %conv1.i = add i32 %13, %start
  %and.i = and i32 %conv1.i, 4095
  %arrayidx.peel = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %shr.i
  %14 = ptrtoint ptr %arrayidx.peel to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx.peel, align 4
  tail call fastcc void @assert_eb_page_uptodate(ptr noundef %eb, ptr noundef %15)
  %sub.peel = sub nuw nsw i32 4096, %and.i
  %16 = tail call i32 @llvm.umin.i32(i32 %len, i32 %sub.peel)
  %call4.peel = tail call ptr @page_address(ptr noundef %15) #14
  %add.ptr.peel = getelementptr i8, ptr %call4.peel, i32 %and.i
  %17 = call ptr @memset(ptr %add.ptr.peel, i32 0, i32 %16)
  %sub5.peel = sub i32 %len, %16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub5.peel)
  %cmp.not.peel = icmp eq i32 %sub5.peel, 0
  br i1 %cmp.not.peel, label %while.body.preheader.cleanup_crit_edge, label %while.body.preheader.while.body_crit_edge

while.body.preheader.while.body_crit_edge:        ; preds = %while.body.preheader
  br label %while.body

while.body.preheader.cleanup_crit_edge:           ; preds = %while.body.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

while.body:                                       ; preds = %while.body.while.body_crit_edge, %while.body.preheader.while.body_crit_edge
  %len.addr.029 = phi i32 [ %sub5, %while.body.while.body_crit_edge ], [ %sub5.peel, %while.body.preheader.while.body_crit_edge ]
  %i.028.in = phi i32 [ %i.028, %while.body.while.body_crit_edge ], [ %shr.i, %while.body.preheader.while.body_crit_edge ]
  %i.028 = add i32 %i.028.in, 1
  %arrayidx = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %i.028
  %18 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx, align 4
  tail call fastcc void @assert_eb_page_uptodate(ptr noundef %eb, ptr noundef %19)
  %20 = tail call i32 @llvm.umin.i32(i32 %len.addr.029, i32 4096)
  %call4 = tail call ptr @page_address(ptr noundef %19) #14
  %21 = call ptr @memset(ptr %call4, i32 0, i32 %20)
  %sub5 = sub i32 %len.addr.029, %20
  %cmp.not = icmp eq i32 %sub5, 0
  br i1 %cmp.not, label %while.body.cleanup_crit_edge, label %while.body.while.body_crit_edge, !llvm.loop !412

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

while.body.cleanup_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %while.body.cleanup_crit_edge, %while.body.preheader.cleanup_crit_edge, %if.end.cleanup_crit_edge, %check_eb_range.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @copy_extent_buffer_full(ptr nocapture noundef readonly %dst, ptr nocapture noundef readonly %src) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %len = getelementptr inbounds %struct.extent_buffer, ptr %dst, i32 0, i32 1
  %0 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len, align 8
  %len1 = getelementptr inbounds %struct.extent_buffer, ptr %src, i32 0, i32 1
  %2 = ptrtoint ptr %len1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %len1, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %3)
  %cmp = icmp eq i32 %1, %3
  br i1 %cmp, label %cond.end, label %cond.false, !prof !322

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.39, i32 noundef 6953) #18
  unreachable

cond.end:                                         ; preds = %entry
  %fs_info = getelementptr inbounds %struct.extent_buffer, ptr %dst, i32 0, i32 3
  %4 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %fs_info, align 8
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 167
  %6 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sectorsize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %7)
  %cmp3 = icmp eq i32 %7, 4096
  br i1 %cmp3, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end
  %shr.i = lshr i32 %1, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %1)
  %tobool.not.i = icmp ult i32 %1, 4096
  %shr..i = select i1 %tobool.not.i, i32 1, i32 %shr.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr..i)
  %cmp445.not = icmp eq i32 %shr..i, 0
  br i1 %cmp445.not, label %if.then.if.end_crit_edge, label %if.then.for.body_crit_edge

if.then.for.body_crit_edge:                       ; preds = %if.then
  br label %for.body

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.then.for.body_crit_edge
  %i.046 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %if.then.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.extent_buffer, ptr %dst, i32 0, i32 12, i32 %i.046
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 4
  %call5 = tail call ptr @page_address(ptr noundef %9) #14
  %arrayidx7 = getelementptr %struct.extent_buffer, ptr %src, i32 0, i32 12, i32 %i.046
  %10 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx7, align 4
  %call8 = tail call ptr @page_address(ptr noundef %11) #14
  tail call void @copy_page(ptr noundef %call5, ptr noundef %call8) #14
  %inc = add nuw nsw i32 %i.046, 1
  %exitcond.not = icmp eq i32 %inc, %shr..i
  br i1 %exitcond.not, label %for.body.if.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.body.if.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.else:                                          ; preds = %cond.end
  %fs_info11 = getelementptr inbounds %struct.extent_buffer, ptr %src, i32 0, i32 3
  %12 = ptrtoint ptr %fs_info11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %fs_info11, align 8
  %sectorsize12 = getelementptr inbounds %struct.btrfs_fs_info, ptr %13, i32 0, i32 167
  %14 = ptrtoint ptr %sectorsize12 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %sectorsize12, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %15)
  %cmp13 = icmp ult i32 %15, 4096
  br i1 %cmp13, label %cond.end22, label %cond.false21, !prof !322

cond.false21:                                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.40, i32 noundef 6964) #18
  unreachable

cond.end22:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %dst to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %dst, align 8
  %18 = trunc i64 %17 to i32
  %and.i44 = and i32 %18, 4095
  %19 = ptrtoint ptr %src to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %src, align 8
  %21 = trunc i64 %20 to i32
  %and.i = and i32 %21, 4095
  %pages23 = getelementptr inbounds %struct.extent_buffer, ptr %dst, i32 0, i32 12
  %22 = ptrtoint ptr %pages23 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pages23, align 4
  %call25 = tail call ptr @page_address(ptr noundef %23) #14
  %add.ptr = getelementptr i8, ptr %call25, i32 %and.i44
  %pages26 = getelementptr inbounds %struct.extent_buffer, ptr %src, i32 0, i32 12
  %24 = ptrtoint ptr %pages26 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %pages26, align 4
  %call28 = tail call ptr @page_address(ptr noundef %25) #14
  %add.ptr29 = getelementptr i8, ptr %call28, i32 %and.i
  %26 = ptrtoint ptr %len1 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %len1, align 8
  %28 = call ptr @memcpy(ptr %add.ptr, ptr %add.ptr29, i32 %27)
  br label %if.end

if.end:                                           ; preds = %cond.end22, %for.body.if.end_crit_edge, %if.then.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @copy_extent_buffer(ptr nocapture noundef readonly %dst, ptr nocapture noundef readonly %src, i32 noundef %dst_offset, i32 noundef %src_offset, i32 noundef %len) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %len1 = getelementptr inbounds %struct.extent_buffer, ptr %dst, i32 0, i32 1
  %0 = ptrtoint ptr %len1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len1, align 8
  %shr.i = lshr i32 %dst_offset, 12
  %2 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %dst_offset, i32 %len) #14
  %3 = extractvalue { i32, i1 } %2, 1
  %4 = extractvalue { i32, i1 } %2, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %1)
  %cmp5.i = icmp ugt i32 %4, %1
  %or.cond = select i1 %3, i1 true, i1 %cmp5.i
  br i1 %or.cond, label %check_eb_range.exit, label %lor.lhs.false, !prof !413

check_eb_range.exit:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @report_eb_range(ptr noundef %dst, i32 noundef %dst_offset, i32 noundef %len) #14
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %5 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %src_offset, i32 %len) #14
  %6 = extractvalue { i32, i1 } %5, 1
  br i1 %6, label %lor.lhs.false.check_eb_range.exit69_crit_edge, label %lor.rhs.i66, !prof !319

lor.lhs.false.check_eb_range.exit69_crit_edge:    ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %check_eb_range.exit69

lor.rhs.i66:                                      ; preds = %lor.lhs.false
  %7 = extractvalue { i32, i1 } %5, 0
  %len4.i64 = getelementptr inbounds %struct.extent_buffer, ptr %src, i32 0, i32 1
  %8 = ptrtoint ptr %len4.i64 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %len4.i64, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %9)
  %cmp5.i65 = icmp ugt i32 %7, %9
  br i1 %cmp5.i65, label %lor.rhs.i66.check_eb_range.exit69_crit_edge, label %if.end, !prof !319

lor.rhs.i66.check_eb_range.exit69_crit_edge:      ; preds = %lor.rhs.i66
  call void @__sanitizer_cov_trace_pc() #16
  br label %check_eb_range.exit69

check_eb_range.exit69:                            ; preds = %lor.rhs.i66.check_eb_range.exit69_crit_edge, %lor.lhs.false.check_eb_range.exit69_crit_edge
  tail call fastcc void @report_eb_range(ptr noundef %src, i32 noundef %src_offset, i32 noundef %len) #14
  br label %cleanup

if.end:                                           ; preds = %lor.rhs.i66
  %10 = ptrtoint ptr %len4.i64 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %len4.i64, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %1)
  %cmp.not = icmp eq i32 %11, %1
  br i1 %cmp.not, label %if.end.if.end22_crit_edge, label %do.end, !prof !322

if.end.if.end22_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 6987, i32 noundef 9, ptr noundef null) #14
  br label %if.end22

if.end22:                                         ; preds = %do.end, %if.end.if.end22_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %cmp30.not74 = icmp eq i32 %len, 0
  br i1 %cmp30.not74, label %if.end22.cleanup_crit_edge, label %while.body.preheader

if.end22.cleanup_crit_edge:                       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

while.body.preheader:                             ; preds = %if.end22
  %12 = ptrtoint ptr %dst to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %dst, align 8
  %14 = trunc i64 %13 to i32
  %conv1.i = add i32 %14, %dst_offset
  %and.i = and i32 %conv1.i, 4095
  %arrayidx.peel = getelementptr %struct.extent_buffer, ptr %dst, i32 0, i32 12, i32 %shr.i
  %15 = ptrtoint ptr %arrayidx.peel to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %arrayidx.peel, align 4
  tail call fastcc void @assert_eb_page_uptodate(ptr noundef %dst, ptr noundef %16)
  %sub.peel = sub nuw nsw i32 4096, %and.i
  %17 = tail call i32 @llvm.umin.i32(i32 %len, i32 %sub.peel)
  %call35.peel = tail call ptr @page_address(ptr noundef %16) #14
  %add.ptr.peel = getelementptr i8, ptr %call35.peel, i32 %and.i
  tail call void @read_extent_buffer(ptr noundef %src, ptr noundef %add.ptr.peel, i32 noundef %src_offset, i32 noundef %17)
  %sub36.peel = sub i32 %len, %17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub36.peel)
  %cmp30.not.peel = icmp eq i32 %sub36.peel, 0
  br i1 %cmp30.not.peel, label %while.body.preheader.cleanup_crit_edge, label %while.body.peel.next

while.body.preheader.cleanup_crit_edge:           ; preds = %while.body.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

while.body.peel.next:                             ; preds = %while.body.preheader
  %add.peel = add i32 %17, %src_offset
  br label %while.body

while.body:                                       ; preds = %while.body.while.body_crit_edge, %while.body.peel.next
  %src_offset.addr.078 = phi i32 [ %add, %while.body.while.body_crit_edge ], [ %add.peel, %while.body.peel.next ]
  %len.addr.077 = phi i32 [ %sub36, %while.body.while.body_crit_edge ], [ %sub36.peel, %while.body.peel.next ]
  %i.076.in = phi i32 [ %i.076, %while.body.while.body_crit_edge ], [ %shr.i, %while.body.peel.next ]
  %i.076 = add i32 %i.076.in, 1
  %arrayidx = getelementptr %struct.extent_buffer, ptr %dst, i32 0, i32 12, i32 %i.076
  %18 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx, align 4
  tail call fastcc void @assert_eb_page_uptodate(ptr noundef %dst, ptr noundef %19)
  %20 = tail call i32 @llvm.umin.i32(i32 %len.addr.077, i32 4096)
  %call35 = tail call ptr @page_address(ptr noundef %19) #14
  tail call void @read_extent_buffer(ptr noundef %src, ptr noundef %call35, i32 noundef %src_offset.addr.078, i32 noundef %20)
  %add = add i32 %src_offset.addr.078, %20
  %sub36 = sub i32 %len.addr.077, %20
  %cmp30.not = icmp eq i32 %sub36, 0
  br i1 %cmp30.not, label %while.body.cleanup_crit_edge, label %while.body.while.body_crit_edge, !llvm.loop !414

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

while.body.cleanup_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %while.body.cleanup_crit_edge, %while.body.preheader.cleanup_crit_edge, %if.end22.cleanup_crit_edge, %check_eb_range.exit69, %check_eb_range.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @extent_buffer_test_bit(ptr nocapture noundef readonly %eb, i32 noundef %start, i32 noundef %nr) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %div5.i = lshr i32 %nr, 3
  %0 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %eb, align 8
  %conv.i = trunc i64 %1 to i32
  %and.i = and i32 %conv.i, 4095
  %add.i = add i32 %div5.i, %start
  %add2.i = add i32 %add.i, %and.i
  %shr.i = lshr i32 %add2.i, 12
  %and3.i = and i32 %add2.i, 4095
  %arrayidx = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %shr.i
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx, align 4
  tail call fastcc void @assert_eb_page_uptodate(ptr noundef %eb, ptr noundef %3)
  %call = tail call ptr @page_address(ptr noundef %3) #14
  %arrayidx1 = getelementptr i8, ptr %call, i32 %and3.i
  %4 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %arrayidx1, align 1
  %conv = zext i8 %5 to i32
  %and = and i32 %nr, 7
  %shr = lshr i32 %conv, %and
  %and2 = and i32 %shr, 1
  ret i32 %and2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @extent_buffer_bitmap_set(ptr nocapture noundef readonly %eb, i32 noundef %start, i32 noundef %pos, i32 noundef %len) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add = add i32 %pos, %len
  %rem = and i32 %pos, 7
  %sub = sub nuw nsw i32 8, %rem
  %shl = shl nuw nsw i32 255, %rem
  %div5.i = lshr i32 %pos, 3
  %0 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %eb, align 8
  %conv.i = trunc i64 %1 to i32
  %and.i = and i32 %conv.i, 4095
  %add.i = add i32 %div5.i, %start
  %add2.i = add i32 %add.i, %and.i
  %shr.i = lshr i32 %add2.i, 12
  %and3.i = and i32 %add2.i, 4095
  %arrayidx = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %shr.i
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx, align 4
  tail call fastcc void @assert_eb_page_uptodate(ptr noundef %eb, ptr noundef %3)
  %call = tail call ptr @page_address(ptr noundef %3) #14
  %phi.cast = and i32 %shl, 255
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %len)
  %cmp.not49 = icmp ugt i32 %sub, %len
  br i1 %cmp.not49, label %entry.while.end_crit_edge, label %while.body.preheader

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body.preheader:                             ; preds = %entry
  %arrayidx4.peel = getelementptr i8, ptr %call, i32 %and3.i
  %4 = ptrtoint ptr %arrayidx4.peel to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %arrayidx4.peel, align 1
  %6 = trunc i32 %shl to i8
  %conv6.peel = or i8 %5, %6
  store i8 %conv6.peel, ptr %arrayidx4.peel, align 1
  %sub7.peel = sub i32 %len, %sub
  %inc.peel = add nuw nsw i32 %and3.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 4095, i32 %and3.i)
  %cmp8.peel = icmp ne i32 %and3.i, 4095
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub7.peel)
  %cmp10.not.peel = icmp eq i32 %sub7.peel, 0
  %or.cond.peel = select i1 %cmp8.peel, i1 true, i1 %cmp10.not.peel
  br i1 %or.cond.peel, label %while.body.preheader.if.end.peel_crit_edge, label %if.then.peel

while.body.preheader.if.end.peel_crit_edge:       ; preds = %while.body.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.peel

if.then.peel:                                     ; preds = %while.body.preheader
  call void @__sanitizer_cov_trace_pc() #16
  %inc13.peel = add nuw nsw i32 %shr.i, 1
  %arrayidx14.peel = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %inc13.peel
  %7 = ptrtoint ptr %arrayidx14.peel to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx14.peel, align 4
  tail call fastcc void @assert_eb_page_uptodate(ptr noundef %eb, ptr noundef %8)
  %call15.peel = tail call ptr @page_address(ptr noundef %8) #14
  br label %if.end.peel

if.end.peel:                                      ; preds = %if.then.peel, %while.body.preheader.if.end.peel_crit_edge
  %i.1.peel = phi i32 [ %shr.i, %while.body.preheader.if.end.peel_crit_edge ], [ %inc13.peel, %if.then.peel ]
  %offset.1.peel = phi i32 [ %inc.peel, %while.body.preheader.if.end.peel_crit_edge ], [ 0, %if.then.peel ]
  %kaddr.1.peel = phi ptr [ %call, %while.body.preheader.if.end.peel_crit_edge ], [ %call15.peel, %if.then.peel ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %sub7.peel)
  %cmp.not.peel = icmp ult i32 %sub7.peel, 8
  br i1 %cmp.not.peel, label %if.end.peel.while.end_crit_edge, label %if.end.peel.while.body_crit_edge

if.end.peel.while.body_crit_edge:                 ; preds = %if.end.peel
  br label %while.body

if.end.peel.while.end_crit_edge:                  ; preds = %if.end.peel
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body:                                       ; preds = %if.end.while.body_crit_edge, %if.end.peel.while.body_crit_edge
  %kaddr.053 = phi ptr [ %kaddr.1, %if.end.while.body_crit_edge ], [ %kaddr.1.peel, %if.end.peel.while.body_crit_edge ]
  %len.addr.052 = phi i32 [ %sub7, %if.end.while.body_crit_edge ], [ %sub7.peel, %if.end.peel.while.body_crit_edge ]
  %offset.051 = phi i32 [ %offset.1, %if.end.while.body_crit_edge ], [ %offset.1.peel, %if.end.peel.while.body_crit_edge ]
  %i.050 = phi i32 [ %i.1, %if.end.while.body_crit_edge ], [ %i.1.peel, %if.end.peel.while.body_crit_edge ]
  %arrayidx4 = getelementptr i8, ptr %kaddr.053, i32 %offset.051
  %9 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 -1, ptr %arrayidx4, align 1
  %sub7 = add i32 %len.addr.052, -8
  %inc = add i32 %offset.051, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %inc)
  %cmp8 = icmp ult i32 %inc, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub7)
  %cmp10.not = icmp eq i32 %sub7, 0
  %or.cond = select i1 %cmp8, i1 true, i1 %cmp10.not
  br i1 %or.cond, label %while.body.if.end_crit_edge, label %if.then

while.body.if.end_crit_edge:                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  %inc13 = add i32 %i.050, 1
  %arrayidx14 = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %inc13
  %10 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx14, align 4
  tail call fastcc void @assert_eb_page_uptodate(ptr noundef %eb, ptr noundef %11)
  %call15 = tail call ptr @page_address(ptr noundef %11) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body.if.end_crit_edge
  %i.1 = phi i32 [ %i.050, %while.body.if.end_crit_edge ], [ %inc13, %if.then ]
  %offset.1 = phi i32 [ %inc, %while.body.if.end_crit_edge ], [ 0, %if.then ]
  %kaddr.1 = phi ptr [ %kaddr.053, %while.body.if.end_crit_edge ], [ %call15, %if.then ]
  %cmp.not = icmp ult i32 %sub7, 8
  br i1 %cmp.not, label %if.end.while.end_crit_edge, label %if.end.while.body_crit_edge, !llvm.loop !415

if.end.while.body_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %if.end.while.end_crit_edge, %if.end.peel.while.end_crit_edge, %entry.while.end_crit_edge
  %offset.0.lcssa = phi i32 [ %and3.i, %entry.while.end_crit_edge ], [ %offset.1.peel, %if.end.peel.while.end_crit_edge ], [ %offset.1, %if.end.while.end_crit_edge ]
  %len.addr.0.lcssa = phi i32 [ %len, %entry.while.end_crit_edge ], [ %sub7.peel, %if.end.peel.while.end_crit_edge ], [ %sub7, %if.end.while.end_crit_edge ]
  %kaddr.0.lcssa = phi ptr [ %call, %entry.while.end_crit_edge ], [ %kaddr.1.peel, %if.end.peel.while.end_crit_edge ], [ %kaddr.1, %if.end.while.end_crit_edge ]
  %mask_to_set.0.lcssa = phi i32 [ %phi.cast, %entry.while.end_crit_edge ], [ 255, %if.end.peel.while.end_crit_edge ], [ 255, %if.end.while.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len.addr.0.lcssa)
  %tobool.not = icmp eq i32 %len.addr.0.lcssa, 0
  br i1 %tobool.not, label %while.end.if.end27_crit_edge, label %if.then16

while.end.if.end27_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end27

if.then16:                                        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  %sub17 = sub i32 0, %add
  %and18 = and i32 %sub17, 7
  %shr = lshr i32 255, %and18
  %and20 = and i32 %mask_to_set.0.lcssa, %shr
  %arrayidx23 = getelementptr i8, ptr %kaddr.0.lcssa, i32 %offset.0.lcssa
  %12 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx23, align 1
  %14 = trunc i32 %and20 to i8
  %conv26 = or i8 %13, %14
  store i8 %conv26, ptr %arrayidx23, align 1
  br label %if.end27

if.end27:                                         ; preds = %if.then16, %while.end.if.end27_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @extent_buffer_bitmap_clear(ptr nocapture noundef readonly %eb, i32 noundef %start, i32 noundef %pos, i32 noundef %len) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add = add i32 %pos, %len
  %rem = and i32 %pos, 7
  %sub = sub nuw nsw i32 8, %rem
  %shl = shl nuw nsw i32 255, %rem
  %div5.i = lshr i32 %pos, 3
  %0 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %eb, align 8
  %conv.i = trunc i64 %1 to i32
  %and.i = and i32 %conv.i, 4095
  %add.i = add i32 %div5.i, %start
  %add2.i = add i32 %add.i, %and.i
  %shr.i = lshr i32 %add2.i, 12
  %and3.i = and i32 %add2.i, 4095
  %arrayidx = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %shr.i
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx, align 4
  tail call fastcc void @assert_eb_page_uptodate(ptr noundef %eb, ptr noundef %3)
  %call = tail call ptr @page_address(ptr noundef %3) #14
  %phi.cast = and i32 %shl, 255
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %len)
  %cmp.not51 = icmp ugt i32 %sub, %len
  br i1 %cmp.not51, label %entry.while.end_crit_edge, label %while.body.preheader

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body.preheader:                             ; preds = %entry
  %arrayidx4.peel = getelementptr i8, ptr %call, i32 %and3.i
  %4 = ptrtoint ptr %arrayidx4.peel to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %arrayidx4.peel, align 1
  %6 = trunc i32 %shl to i8
  %7 = xor i8 %6, -1
  %conv7.peel = and i8 %5, %7
  store i8 %conv7.peel, ptr %arrayidx4.peel, align 1
  %sub8.peel = sub i32 %len, %sub
  %inc.peel = add nuw nsw i32 %and3.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 4095, i32 %and3.i)
  %cmp9.peel = icmp ne i32 %and3.i, 4095
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub8.peel)
  %cmp11.not.peel = icmp eq i32 %sub8.peel, 0
  %or.cond.peel = select i1 %cmp9.peel, i1 true, i1 %cmp11.not.peel
  br i1 %or.cond.peel, label %while.body.preheader.if.end.peel_crit_edge, label %if.then.peel

while.body.preheader.if.end.peel_crit_edge:       ; preds = %while.body.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.peel

if.then.peel:                                     ; preds = %while.body.preheader
  call void @__sanitizer_cov_trace_pc() #16
  %inc14.peel = add nuw nsw i32 %shr.i, 1
  %arrayidx15.peel = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %inc14.peel
  %8 = ptrtoint ptr %arrayidx15.peel to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx15.peel, align 4
  tail call fastcc void @assert_eb_page_uptodate(ptr noundef %eb, ptr noundef %9)
  %call16.peel = tail call ptr @page_address(ptr noundef %9) #14
  br label %if.end.peel

if.end.peel:                                      ; preds = %if.then.peel, %while.body.preheader.if.end.peel_crit_edge
  %i.1.peel = phi i32 [ %shr.i, %while.body.preheader.if.end.peel_crit_edge ], [ %inc14.peel, %if.then.peel ]
  %offset.1.peel = phi i32 [ %inc.peel, %while.body.preheader.if.end.peel_crit_edge ], [ 0, %if.then.peel ]
  %kaddr.1.peel = phi ptr [ %call, %while.body.preheader.if.end.peel_crit_edge ], [ %call16.peel, %if.then.peel ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %sub8.peel)
  %cmp.not.peel = icmp ult i32 %sub8.peel, 8
  br i1 %cmp.not.peel, label %if.end.peel.while.end_crit_edge, label %if.end.peel.while.body_crit_edge

if.end.peel.while.body_crit_edge:                 ; preds = %if.end.peel
  br label %while.body

if.end.peel.while.end_crit_edge:                  ; preds = %if.end.peel
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body:                                       ; preds = %if.end.while.body_crit_edge, %if.end.peel.while.body_crit_edge
  %kaddr.055 = phi ptr [ %kaddr.1, %if.end.while.body_crit_edge ], [ %kaddr.1.peel, %if.end.peel.while.body_crit_edge ]
  %len.addr.054 = phi i32 [ %sub8, %if.end.while.body_crit_edge ], [ %sub8.peel, %if.end.peel.while.body_crit_edge ]
  %offset.053 = phi i32 [ %offset.1, %if.end.while.body_crit_edge ], [ %offset.1.peel, %if.end.peel.while.body_crit_edge ]
  %i.052 = phi i32 [ %i.1, %if.end.while.body_crit_edge ], [ %i.1.peel, %if.end.peel.while.body_crit_edge ]
  %arrayidx4 = getelementptr i8, ptr %kaddr.055, i32 %offset.053
  %10 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 0, ptr %arrayidx4, align 1
  %sub8 = add i32 %len.addr.054, -8
  %inc = add i32 %offset.053, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %inc)
  %cmp9 = icmp ult i32 %inc, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub8)
  %cmp11.not = icmp eq i32 %sub8, 0
  %or.cond = select i1 %cmp9, i1 true, i1 %cmp11.not
  br i1 %or.cond, label %while.body.if.end_crit_edge, label %if.then

while.body.if.end_crit_edge:                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  %inc14 = add i32 %i.052, 1
  %arrayidx15 = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %inc14
  %11 = ptrtoint ptr %arrayidx15 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx15, align 4
  tail call fastcc void @assert_eb_page_uptodate(ptr noundef %eb, ptr noundef %12)
  %call16 = tail call ptr @page_address(ptr noundef %12) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body.if.end_crit_edge
  %i.1 = phi i32 [ %i.052, %while.body.if.end_crit_edge ], [ %inc14, %if.then ]
  %offset.1 = phi i32 [ %inc, %while.body.if.end_crit_edge ], [ 0, %if.then ]
  %kaddr.1 = phi ptr [ %kaddr.055, %while.body.if.end_crit_edge ], [ %call16, %if.then ]
  %cmp.not = icmp ult i32 %sub8, 8
  br i1 %cmp.not, label %if.end.while.end_crit_edge, label %if.end.while.body_crit_edge, !llvm.loop !416

if.end.while.body_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %if.end.while.end_crit_edge, %if.end.peel.while.end_crit_edge, %entry.while.end_crit_edge
  %offset.0.lcssa = phi i32 [ %and3.i, %entry.while.end_crit_edge ], [ %offset.1.peel, %if.end.peel.while.end_crit_edge ], [ %offset.1, %if.end.while.end_crit_edge ]
  %len.addr.0.lcssa = phi i32 [ %len, %entry.while.end_crit_edge ], [ %sub8.peel, %if.end.peel.while.end_crit_edge ], [ %sub8, %if.end.while.end_crit_edge ]
  %kaddr.0.lcssa = phi ptr [ %call, %entry.while.end_crit_edge ], [ %kaddr.1.peel, %if.end.peel.while.end_crit_edge ], [ %kaddr.1, %if.end.while.end_crit_edge ]
  %mask_to_clear.0.lcssa = phi i32 [ %phi.cast, %entry.while.end_crit_edge ], [ 255, %if.end.peel.while.end_crit_edge ], [ 255, %if.end.while.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len.addr.0.lcssa)
  %tobool.not = icmp eq i32 %len.addr.0.lcssa, 0
  br i1 %tobool.not, label %while.end.if.end29_crit_edge, label %if.then17

while.end.if.end29_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

if.then17:                                        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  %sub18 = sub i32 0, %add
  %and19 = and i32 %sub18, 7
  %shr = lshr i32 255, %and19
  %and21 = and i32 %mask_to_clear.0.lcssa, %shr
  %arrayidx25 = getelementptr i8, ptr %kaddr.0.lcssa, i32 %offset.0.lcssa
  %13 = ptrtoint ptr %arrayidx25 to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %arrayidx25, align 1
  %15 = trunc i32 %and21 to i8
  %16 = xor i8 %15, -1
  %conv28 = and i8 %14, %16
  store i8 %conv28, ptr %arrayidx25, align 1
  br label %if.end29

if.end29:                                         ; preds = %if.then17, %while.end.if.end29_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @memcpy_extent_buffer(ptr nocapture noundef readonly %dst, i32 noundef %dst_offset, i32 noundef %src_offset, i32 noundef %len) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %dst_offset, i32 %len) #14
  %1 = extractvalue { i32, i1 } %0, 1
  br i1 %1, label %entry.check_eb_range.exit_crit_edge, label %lor.rhs.i, !prof !319

entry.check_eb_range.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %check_eb_range.exit

lor.rhs.i:                                        ; preds = %entry
  %2 = extractvalue { i32, i1 } %0, 0
  %len4.i = getelementptr inbounds %struct.extent_buffer, ptr %dst, i32 0, i32 1
  %3 = ptrtoint ptr %len4.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %len4.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %4)
  %cmp5.i = icmp ugt i32 %2, %4
  br i1 %cmp5.i, label %lor.rhs.i.check_eb_range.exit_crit_edge, label %lor.lhs.false, !prof !319

lor.rhs.i.check_eb_range.exit_crit_edge:          ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %check_eb_range.exit

check_eb_range.exit:                              ; preds = %lor.rhs.i.check_eb_range.exit_crit_edge, %entry.check_eb_range.exit_crit_edge
  %fs_info.i = getelementptr inbounds %struct.extent_buffer, ptr %dst, i32 0, i32 3
  %5 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %fs_info.i, align 8
  %7 = ptrtoint ptr %dst to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %dst, align 8
  %len2.i = getelementptr inbounds %struct.extent_buffer, ptr %dst, i32 0, i32 1
  %9 = ptrtoint ptr %len2.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %len2.i, align 8
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %6, ptr noundef nonnull @.str.132, i64 noundef %8, i32 noundef %10, i32 noundef %dst_offset, i32 noundef %len) #17
  br label %cleanup.sink.split

lor.lhs.false:                                    ; preds = %lor.rhs.i
  %11 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %src_offset, i32 %len) #14
  %12 = extractvalue { i32, i1 } %11, 1
  br i1 %12, label %lor.lhs.false.check_eb_range.exit53.thread_crit_edge, label %lor.rhs.i50, !prof !319

lor.lhs.false.check_eb_range.exit53.thread_crit_edge: ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %check_eb_range.exit53.thread

lor.rhs.i50:                                      ; preds = %lor.lhs.false
  %13 = extractvalue { i32, i1 } %11, 0
  %14 = ptrtoint ptr %len4.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %len4.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %15)
  %cmp5.i49 = icmp ugt i32 %13, %15
  br i1 %cmp5.i49, label %lor.rhs.i50.check_eb_range.exit53.thread_crit_edge, label %while.cond.preheader, !prof !319

lor.rhs.i50.check_eb_range.exit53.thread_crit_edge: ; preds = %lor.rhs.i50
  call void @__sanitizer_cov_trace_pc() #16
  br label %check_eb_range.exit53.thread

while.cond.preheader:                             ; preds = %lor.rhs.i50
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %cmp.not63 = icmp eq i32 %len, 0
  br i1 %cmp.not63, label %while.cond.preheader.cleanup_crit_edge, label %while.cond.preheader.while.body_crit_edge

while.cond.preheader.while.body_crit_edge:        ; preds = %while.cond.preheader
  br label %while.body

while.cond.preheader.cleanup_crit_edge:           ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

check_eb_range.exit53.thread:                     ; preds = %lor.rhs.i50.check_eb_range.exit53.thread_crit_edge, %lor.lhs.false.check_eb_range.exit53.thread_crit_edge
  %fs_info.i57 = getelementptr inbounds %struct.extent_buffer, ptr %dst, i32 0, i32 3
  %16 = ptrtoint ptr %fs_info.i57 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %fs_info.i57, align 8
  %18 = ptrtoint ptr %dst to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %dst, align 8
  %20 = ptrtoint ptr %len4.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %len4.i, align 8
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %17, ptr noundef nonnull @.str.132, i64 noundef %19, i32 noundef %21, i32 noundef %src_offset, i32 noundef %len) #17
  br label %cleanup.sink.split

while.body:                                       ; preds = %copy_pages.exit.while.body_crit_edge, %while.cond.preheader.while.body_crit_edge
  %dst_offset.addr.066 = phi i32 [ %add17, %copy_pages.exit.while.body_crit_edge ], [ %dst_offset, %while.cond.preheader.while.body_crit_edge ]
  %src_offset.addr.065 = phi i32 [ %add, %copy_pages.exit.while.body_crit_edge ], [ %src_offset, %while.cond.preheader.while.body_crit_edge ]
  %len.addr.064 = phi i32 [ %sub18, %copy_pages.exit.while.body_crit_edge ], [ %len, %while.cond.preheader.while.body_crit_edge ]
  %22 = ptrtoint ptr %dst to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %dst, align 8
  %24 = trunc i64 %23 to i32
  %conv1.i = add i32 %dst_offset.addr.066, %24
  %and.i = and i32 %conv1.i, 4095
  %conv1.i54 = add i32 %src_offset.addr.065, %24
  %and.i55 = and i32 %conv1.i54, 4095
  %shr.i = lshr i32 %dst_offset.addr.066, 12
  %shr.i56 = lshr i32 %src_offset.addr.065, 12
  %sub = sub nuw nsw i32 4096, %and.i55
  %25 = tail call i32 @llvm.umin.i32(i32 %len.addr.064, i32 %sub)
  %sub8 = sub nuw nsw i32 4096, %and.i
  %26 = tail call i32 @llvm.umin.i32(i32 %25, i32 %sub8)
  %arrayidx = getelementptr %struct.extent_buffer, ptr %dst, i32 0, i32 12, i32 %shr.i
  %27 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %arrayidx, align 4
  %arrayidx16 = getelementptr %struct.extent_buffer, ptr %dst, i32 0, i32 12, i32 %shr.i56
  %29 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx16, align 4
  %call.i = tail call ptr @page_address(ptr noundef %28) #14
  %cmp.not.i = icmp eq ptr %28, %30
  br i1 %cmp.not.i, label %if.end4.i, label %if.end4.thread.i

if.end4.thread.i:                                 ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  %call1.i = tail call ptr @page_address(ptr noundef %30) #14
  br label %if.else7.i

if.end4.i:                                        ; preds = %while.body
  call void @__sanitizer_cov_trace_cmp4(i32 %and.i55, i32 %and.i)
  %cmp.i.i = icmp ugt i32 %and.i55, %and.i
  %sub.i.i = sub nsw i32 %and.i55, %and.i
  %sub1.i.i = sub nsw i32 %and.i, %and.i55
  %cond.i.i = select i1 %cmp.i.i, i32 %sub.i.i, i32 %sub1.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %cond.i.i, i32 %26)
  %cmp2.i.not.i = icmp ult i32 %cond.i.i, %26
  br i1 %cmp2.i.not.i, label %if.then5.i, label %if.end4.i.if.else7.i_crit_edge

if.end4.i.if.else7.i_crit_edge:                   ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else7.i

if.then5.i:                                       ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  %add.ptr.i = getelementptr i8, ptr %call.i, i32 %and.i
  %add.ptr6.i = getelementptr i8, ptr %call.i, i32 %and.i55
  %31 = call ptr @memmove(ptr %add.ptr.i, ptr %add.ptr6.i, i32 %26)
  br label %copy_pages.exit

if.else7.i:                                       ; preds = %if.end4.i.if.else7.i_crit_edge, %if.end4.thread.i
  %src_kaddr.024.i = phi ptr [ %call1.i, %if.end4.thread.i ], [ %call.i, %if.end4.i.if.else7.i_crit_edge ]
  %add.ptr8.i = getelementptr i8, ptr %call.i, i32 %and.i
  %add.ptr9.i = getelementptr i8, ptr %src_kaddr.024.i, i32 %and.i55
  %32 = call ptr @memcpy(ptr %add.ptr8.i, ptr %add.ptr9.i, i32 %26)
  br label %copy_pages.exit

copy_pages.exit:                                  ; preds = %if.else7.i, %if.then5.i
  %add = add i32 %26, %src_offset.addr.065
  %add17 = add i32 %26, %dst_offset.addr.066
  %sub18 = sub i32 %len.addr.064, %26
  %cmp.not = icmp eq i32 %sub18, 0
  br i1 %cmp.not, label %copy_pages.exit.cleanup_crit_edge, label %copy_pages.exit.while.body_crit_edge

copy_pages.exit.while.body_crit_edge:             ; preds = %copy_pages.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

copy_pages.exit.cleanup_crit_edge:                ; preds = %copy_pages.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup.sink.split:                               ; preds = %check_eb_range.exit53.thread, %check_eb_range.exit
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 6710, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %copy_pages.exit.cleanup_crit_edge, %while.cond.preheader.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @memmove_extent_buffer(ptr nocapture noundef readonly %dst, i32 noundef %dst_offset, i32 noundef %src_offset, i32 noundef %len) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add = add i32 %len, -1
  %sub = add i32 %add, %dst_offset
  %sub2 = add i32 %add, %src_offset
  %0 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %dst_offset, i32 %len) #14
  %1 = extractvalue { i32, i1 } %0, 1
  br i1 %1, label %entry.check_eb_range.exit_crit_edge, label %lor.rhs.i, !prof !319

entry.check_eb_range.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %check_eb_range.exit

lor.rhs.i:                                        ; preds = %entry
  %2 = extractvalue { i32, i1 } %0, 0
  %len4.i = getelementptr inbounds %struct.extent_buffer, ptr %dst, i32 0, i32 1
  %3 = ptrtoint ptr %len4.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %len4.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %4)
  %cmp5.i = icmp ugt i32 %2, %4
  br i1 %cmp5.i, label %lor.rhs.i.check_eb_range.exit_crit_edge, label %lor.lhs.false, !prof !319

lor.rhs.i.check_eb_range.exit_crit_edge:          ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %check_eb_range.exit

check_eb_range.exit:                              ; preds = %lor.rhs.i.check_eb_range.exit_crit_edge, %entry.check_eb_range.exit_crit_edge
  tail call fastcc void @report_eb_range(ptr noundef %dst, i32 noundef %dst_offset, i32 noundef %len) #14
  br label %cleanup

lor.lhs.false:                                    ; preds = %lor.rhs.i
  %5 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %src_offset, i32 %len) #14
  %6 = extractvalue { i32, i1 } %5, 1
  br i1 %6, label %lor.lhs.false.check_eb_range.exit76_crit_edge, label %lor.rhs.i73, !prof !319

lor.lhs.false.check_eb_range.exit76_crit_edge:    ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %check_eb_range.exit76

lor.rhs.i73:                                      ; preds = %lor.lhs.false
  %7 = extractvalue { i32, i1 } %5, 0
  %8 = ptrtoint ptr %len4.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %len4.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %9)
  %cmp5.i72 = icmp ugt i32 %7, %9
  br i1 %cmp5.i72, label %lor.rhs.i73.check_eb_range.exit76_crit_edge, label %if.end, !prof !319

lor.rhs.i73.check_eb_range.exit76_crit_edge:      ; preds = %lor.rhs.i73
  call void @__sanitizer_cov_trace_pc() #16
  br label %check_eb_range.exit76

check_eb_range.exit76:                            ; preds = %lor.rhs.i73.check_eb_range.exit76_crit_edge, %lor.lhs.false.check_eb_range.exit76_crit_edge
  tail call fastcc void @report_eb_range(ptr noundef %dst, i32 noundef %src_offset, i32 noundef %len) #14
  br label %cleanup

if.end:                                           ; preds = %lor.rhs.i73
  call void @__sanitizer_cov_trace_cmp4(i32 %dst_offset, i32 %src_offset)
  %cmp = icmp ult i32 %dst_offset, %src_offset
  br i1 %cmp, label %if.then5, label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %cmp7.not84 = icmp eq i32 %len, 0
  br i1 %cmp7.not84, label %while.cond.preheader.cleanup_crit_edge, label %while.cond.preheader.while.body_crit_edge

while.cond.preheader.while.body_crit_edge:        ; preds = %while.cond.preheader
  br label %while.body

while.cond.preheader.cleanup_crit_edge:           ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @memcpy_extent_buffer(ptr noundef %dst, i32 noundef %dst_offset, i32 noundef %src_offset, i32 noundef %len)
  br label %cleanup

while.body:                                       ; preds = %copy_pages.exit.while.body_crit_edge, %while.cond.preheader.while.body_crit_edge
  %len.addr.087 = phi i32 [ %sub29, %copy_pages.exit.while.body_crit_edge ], [ %len, %while.cond.preheader.while.body_crit_edge ]
  %src_end.086 = phi i32 [ %sub28, %copy_pages.exit.while.body_crit_edge ], [ %sub2, %while.cond.preheader.while.body_crit_edge ]
  %dst_end.085 = phi i32 [ %sub27, %copy_pages.exit.while.body_crit_edge ], [ %sub, %while.cond.preheader.while.body_crit_edge ]
  %shr.i = lshr i32 %dst_end.085, 12
  %shr.i77 = lshr i32 %src_end.086, 12
  %10 = ptrtoint ptr %dst to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %dst, align 8
  %12 = trunc i64 %11 to i32
  %conv1.i = add i32 %dst_end.085, %12
  %and.i = and i32 %conv1.i, 4095
  %conv1.i78 = add i32 %src_end.086, %12
  %and.i79 = and i32 %conv1.i78, 4095
  %add12 = add nuw nsw i32 %and.i79, 1
  %13 = tail call i32 @llvm.umin.i32(i32 %len.addr.087, i32 %add12)
  %add14 = add nuw nsw i32 %and.i, 1
  %14 = tail call i32 @llvm.umin.i32(i32 %13, i32 %add14)
  %arrayidx = getelementptr %struct.extent_buffer, ptr %dst, i32 0, i32 12, i32 %shr.i
  %15 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %arrayidx, align 4
  %arrayidx22 = getelementptr %struct.extent_buffer, ptr %dst, i32 0, i32 12, i32 %shr.i77
  %17 = ptrtoint ptr %arrayidx22 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx22, align 4
  %sub23 = sub nsw i32 %and.i, %14
  %add24 = add nsw i32 %sub23, 1
  %sub25 = sub nsw i32 %and.i79, %14
  %add26 = add nsw i32 %sub25, 1
  %call.i = tail call ptr @page_address(ptr noundef %16) #14
  %cmp.not.i = icmp eq ptr %16, %18
  br i1 %cmp.not.i, label %if.end4.i, label %if.end4.thread.i

if.end4.thread.i:                                 ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  %call1.i = tail call ptr @page_address(ptr noundef %18) #14
  br label %if.else7.i

if.end4.i:                                        ; preds = %while.body
  call void @__sanitizer_cov_trace_cmp4(i32 %add26, i32 %add24)
  %cmp.i.i = icmp ugt i32 %add26, %add24
  %sub.i.i = sub nsw i32 %add26, %add24
  %sub1.i.i = sub nsw i32 %add24, %add26
  %cond.i.i = select i1 %cmp.i.i, i32 %sub.i.i, i32 %sub1.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %cond.i.i, i32 %14)
  %cmp2.i.not.i = icmp ult i32 %cond.i.i, %14
  br i1 %cmp2.i.not.i, label %if.then5.i, label %if.end4.i.if.else7.i_crit_edge

if.end4.i.if.else7.i_crit_edge:                   ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else7.i

if.then5.i:                                       ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  %add.ptr.i = getelementptr i8, ptr %call.i, i32 %add24
  %add.ptr6.i = getelementptr i8, ptr %call.i, i32 %add26
  %19 = call ptr @memmove(ptr %add.ptr.i, ptr %add.ptr6.i, i32 %14)
  br label %copy_pages.exit

if.else7.i:                                       ; preds = %if.end4.i.if.else7.i_crit_edge, %if.end4.thread.i
  %src_kaddr.024.i = phi ptr [ %call1.i, %if.end4.thread.i ], [ %call.i, %if.end4.i.if.else7.i_crit_edge ]
  %add.ptr8.i = getelementptr i8, ptr %call.i, i32 %add24
  %add.ptr9.i = getelementptr i8, ptr %src_kaddr.024.i, i32 %add26
  %20 = call ptr @memcpy(ptr %add.ptr8.i, ptr %add.ptr9.i, i32 %14)
  br label %copy_pages.exit

copy_pages.exit:                                  ; preds = %if.else7.i, %if.then5.i
  %sub27 = sub i32 %dst_end.085, %14
  %sub28 = sub i32 %src_end.086, %14
  %sub29 = sub i32 %len.addr.087, %14
  %cmp7.not = icmp eq i32 %sub29, 0
  br i1 %cmp7.not, label %copy_pages.exit.cleanup_crit_edge, label %copy_pages.exit.while.body_crit_edge

copy_pages.exit.while.body_crit_edge:             ; preds = %copy_pages.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

copy_pages.exit.cleanup_crit_edge:                ; preds = %copy_pages.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %copy_pages.exit.cleanup_crit_edge, %if.then5, %while.cond.preheader.cleanup_crit_edge, %check_eb_range.exit76, %check_eb_range.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @try_release_extent_buffer(ptr noundef %page) local_unnamed_addr #0 align 64 {
entry:
  %gang.i.i = alloca [16 x ptr], align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %mapping = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %0 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mapping, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %i_sb = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %5, i32 0, i32 33
  %6 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %s_fs_info.i, align 16
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %7, i32 0, i32 167
  %8 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sectorsize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %9)
  %cmp = icmp ult i32 %9, 4096
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %index.i.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 2
  %10 = ptrtoint ptr %index.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %index.i.i, align 4
  %conv.i.i = zext i32 %11 to i64
  %shl.i.i = shl nuw nsw i64 %conv.i.i, 12
  %add.i = add nuw nsw i64 %shl.i.i, 4096
  %buffer_lock.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %7, i32 0, i32 151
  %dep_map.i.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %7, i32 0, i32 151, i32 0, i32 0, i32 4
  %buffer_radix.i.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %7, i32 0, i32 152
  %sectorsize_bits.i.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %7, i32 0, i32 168
  %nodesize.i.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %7, i32 0, i32 166
  br label %while.body.i

while.body.i:                                     ; preds = %cleanup.i.while.body.i_crit_edge, %if.then
  %cur.075.i = phi i64 [ %shl.i.i, %if.then ], [ %add5.i, %cleanup.i.while.body.i_crit_edge ]
  call void @_raw_spin_lock(ptr noundef %buffer_lock.i) #14
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %gang.i.i) #14
  %12 = call ptr @memset(ptr %gang.i.i, i32 255, i32 64)
  %13 = ptrtoint ptr %index.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %index.i.i, align 4
  %conv.i.i.i = zext i32 %14 to i64
  %shl.i.i.i = shl nuw nsw i64 %conv.i.i.i, 12
  call void @__sanitizer_cov_trace_cmp8(i64 %shl.i.i.i, i64 %cur.075.i)
  %cmp.not.i.i = icmp ule i64 %shl.i.i.i, %cur.075.i
  %add.i.i = add nuw nsw i64 %shl.i.i.i, 4096
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i.i, i64 %cur.075.i)
  %cmp1.i.i = icmp ugt i64 %add.i.i, %cur.075.i
  %15 = select i1 %cmp.not.i.i, i1 %cmp1.i.i, i1 false
  br i1 %15, label %do.body.i.i, label %cond.false.i.i, !prof !322

cond.false.i.i:                                   ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.133, i32 noundef 7254) #19
  unreachable

do.body.i.i:                                      ; preds = %while.body.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %16 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool3.not.i.i = icmp eq i32 %16, 0
  br i1 %tobool3.not.i.i, label %do.body.i.i.while.body.i.i.preheader_crit_edge, label %land.rhs4.i.i

do.body.i.i.while.body.i.i.preheader_crit_edge:   ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.preheader

land.rhs4.i.i:                                    ; preds = %do.body.i.i
  %call.i.i56.i = call i32 @lock_is_held_type(ptr noundef %dep_map.i.i, i32 noundef -1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i56.i)
  %cmp6.not.i.i = icmp eq i32 %call.i.i56.i, 0
  br i1 %cmp6.not.i.i, label %do.end.i.i, label %land.rhs4.i.i.while.body.i.i.preheader_crit_edge, !prof !319

land.rhs4.i.i.while.body.i.i.preheader_crit_edge: ; preds = %land.rhs4.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i.preheader

do.end.i.i:                                       ; preds = %land.rhs4.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 7255, i32 noundef 9, ptr noundef null) #14
  br label %while.body.i.i.preheader

while.body.i.i.preheader:                         ; preds = %do.end.i.i, %land.rhs4.i.i.while.body.i.i.preheader_crit_edge, %do.body.i.i.while.body.i.i.preheader_crit_edge
  br label %while.body.i.i

while.body.i.i:                                   ; preds = %cleanup.i.i.while.body.i.i_crit_edge, %while.body.i.i.preheader
  %cur.0102.i.i = phi i64 [ %add68.i.i, %cleanup.i.i.while.body.i.i_crit_edge ], [ %shl.i.i.i, %while.body.i.i.preheader ]
  %17 = ptrtoint ptr %sectorsize_bits.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %sectorsize_bits.i.i, align 8
  %sh_prom.i.i = zext i32 %18 to i64
  %shr.i.i51 = lshr i64 %cur.0102.i.i, %sh_prom.i.i
  %conv.i57.i = trunc i64 %shr.i.i51 to i32
  %19 = ptrtoint ptr %nodesize.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %nodesize.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 241, i32 %20)
  %cmp39.i.i = icmp ult i32 %20, 241
  br i1 %cmp39.i.i, label %while.body.i.i.cond.end43.i.i_crit_edge, label %cond.false42.i.i

while.body.i.i.cond.end43.i.i_crit_edge:          ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end43.i.i

cond.false42.i.i:                                 ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %div.i.i = udiv i32 4096, %20
  br label %cond.end43.i.i

cond.end43.i.i:                                   ; preds = %cond.false42.i.i, %while.body.i.i.cond.end43.i.i_crit_edge
  %cond.i.i = phi i32 [ %div.i.i, %cond.false42.i.i ], [ 16, %while.body.i.i.cond.end43.i.i_crit_edge ]
  %call44.i.i = call i32 @radix_tree_gang_lookup(ptr noundef %buffer_radix.i.i, ptr noundef nonnull %gang.i.i, i32 noundef %conv.i57.i, i32 noundef %cond.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call44.i.i)
  %cmp45.i.i = icmp eq i32 %call44.i.i, 0
  br i1 %cmp45.i.i, label %cond.end43.i.i.get_next_extent_buffer.exit.thread.i_crit_edge, label %for.cond.preheader.i.i

cond.end43.i.i.get_next_extent_buffer.exit.thread.i_crit_edge: ; preds = %cond.end43.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_next_extent_buffer.exit.thread.i

for.cond.preheader.i.i:                           ; preds = %cond.end43.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call44.i.i)
  %cmp49100.i.i = icmp sgt i32 %call44.i.i, 0
  br i1 %cmp49100.i.i, label %for.cond.preheader.i.i.for.body.i.i_crit_edge, label %for.cond.preheader.i.i.cleanup.i.i_crit_edge

for.cond.preheader.i.i.cleanup.i.i_crit_edge:     ; preds = %for.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.i.i

for.cond.preheader.i.i.for.body.i.i_crit_edge:    ; preds = %for.cond.preheader.i.i
  br label %for.body.i.i

for.cond.i.i:                                     ; preds = %if.end55.i.i
  %inc.i.i = add nuw nsw i32 %i.0101.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, %call44.i.i
  br i1 %exitcond.not.i.i, label %for.cond.i.i.cleanup.i.i_crit_edge, label %for.cond.i.i.for.body.i.i_crit_edge

for.cond.i.i.for.body.i.i_crit_edge:              ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i

for.cond.i.i.cleanup.i.i_crit_edge:               ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.i.i

for.body.i.i:                                     ; preds = %for.cond.i.i.for.body.i.i_crit_edge, %for.cond.preheader.i.i.for.body.i.i_crit_edge
  %i.0101.i.i = phi i32 [ %inc.i.i, %for.cond.i.i.for.body.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i.for.body.i.i_crit_edge ]
  %arrayidx.i.i = getelementptr [16 x ptr], ptr %gang.i.i, i32 0, i32 %i.0101.i.i
  %21 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %arrayidx.i.i, align 4
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %22, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %24, i64 %add.i.i)
  %cmp52.not.i.i = icmp ult i64 %24, %add.i.i
  br i1 %cmp52.not.i.i, label %if.end55.i.i, label %for.body.i.i.get_next_extent_buffer.exit.thread.i_crit_edge

for.body.i.i.get_next_extent_buffer.exit.thread.i_crit_edge: ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_next_extent_buffer.exit.thread.i

if.end55.i.i:                                     ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_cmp8(i64 %24, i64 %cur.075.i)
  %cmp58.not.i.i = icmp ult i64 %24, %cur.075.i
  br i1 %cmp58.not.i.i, label %for.cond.i.i, label %get_next_extent_buffer.exit.i

cleanup.i.i:                                      ; preds = %for.cond.i.i.cleanup.i.i_crit_edge, %for.cond.preheader.i.i.cleanup.i.i_crit_edge
  %sub.i.i = add i32 %call44.i.i, -1
  %arrayidx63.i.i = getelementptr [16 x ptr], ptr %gang.i.i, i32 0, i32 %sub.i.i
  %25 = ptrtoint ptr %arrayidx63.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx63.i.i, align 4
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %26, align 8
  %len.i.i = getelementptr inbounds %struct.extent_buffer, ptr %26, i32 0, i32 1
  %29 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %len.i.i, align 8
  %conv67.i.i = zext i32 %30 to i64
  %add68.i.i = add i64 %28, %conv67.i.i
  %cmp37.i.i = icmp ult i64 %add68.i.i, %add.i.i
  br i1 %cmp37.i.i, label %cleanup.i.i.while.body.i.i_crit_edge, label %cleanup.i.i.get_next_extent_buffer.exit.thread.i_crit_edge

cleanup.i.i.get_next_extent_buffer.exit.thread.i_crit_edge: ; preds = %cleanup.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_next_extent_buffer.exit.thread.i

cleanup.i.i.while.body.i.i_crit_edge:             ; preds = %cleanup.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i.i

get_next_extent_buffer.exit.thread.i:             ; preds = %cleanup.i.i.get_next_extent_buffer.exit.thread.i_crit_edge, %for.body.i.i.get_next_extent_buffer.exit.thread.i_crit_edge, %cond.end43.i.i.get_next_extent_buffer.exit.thread.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %gang.i.i) #14
  br label %while.end.sink.split.i

get_next_extent_buffer.exit.i:                    ; preds = %if.end55.i.i
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %gang.i.i) #14
  %tobool.not.i = icmp eq ptr %22, null
  br i1 %tobool.not.i, label %get_next_extent_buffer.exit.i.while.end.sink.split.i_crit_edge, label %if.end.i

get_next_extent_buffer.exit.i.while.end.sink.split.i_crit_edge: ; preds = %get_next_extent_buffer.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.sink.split.i

if.end.i:                                         ; preds = %get_next_extent_buffer.exit.i
  %31 = ptrtoint ptr %22 to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %22, align 8
  %len.i = getelementptr inbounds %struct.extent_buffer, ptr %22, i32 0, i32 1
  %33 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %len.i, align 8
  %conv.i = zext i32 %34 to i64
  %add5.i = add i64 %32, %conv.i
  %refs_lock.i = getelementptr inbounds %struct.extent_buffer, ptr %22, i32 0, i32 4
  call void @_raw_spin_lock(ptr noundef %refs_lock.i) #14
  %refs.i = getelementptr inbounds %struct.extent_buffer, ptr %22, i32 0, i32 5
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %refs.i, i32 noundef 4) #14
  %35 = ptrtoint ptr %refs.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %refs.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %36)
  %cmp7.not.i = icmp eq i32 %36, 1
  br i1 %cmp7.not.i, label %lor.lhs.false.i, label %if.end.i.if.then11.i_crit_edge

if.end.i.if.then11.i_crit_edge:                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i

lor.lhs.false.i:                                  ; preds = %if.end.i
  %io_pages.i.i = getelementptr inbounds %struct.extent_buffer, ptr %22, i32 0, i32 6
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %io_pages.i.i, i32 noundef 4) #14
  %37 = ptrtoint ptr %io_pages.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %io_pages.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool.not.i.i = icmp eq i32 %38, 0
  br i1 %tobool.not.i.i, label %lor.lhs.false.i.i, label %lor.lhs.false.i.if.then11.i_crit_edge

lor.lhs.false.i.if.then11.i_crit_edge:            ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i

lor.lhs.false.i.i:                                ; preds = %lor.lhs.false.i
  %bflags.i.i = getelementptr inbounds %struct.extent_buffer, ptr %22, i32 0, i32 2
  %39 = ptrtoint ptr %bflags.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %bflags.i.i, align 4
  %41 = and i32 %40, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool2.not.i.i = icmp eq i32 %41, 0
  br i1 %tobool2.not.i.i, label %extent_buffer_under_io.exit.i, label %lor.lhs.false.i.i.if.then11.i_crit_edge

lor.lhs.false.i.i.if.then11.i_crit_edge:          ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i

extent_buffer_under_io.exit.i:                    ; preds = %lor.lhs.false.i.i
  %42 = ptrtoint ptr %bflags.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %bflags.i.i, align 4
  %44 = and i32 %43, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool10.not.i = icmp eq i32 %44, 0
  br i1 %tobool10.not.i, label %if.end14.i, label %extent_buffer_under_io.exit.i.if.then11.i_crit_edge

extent_buffer_under_io.exit.i.if.then11.i_crit_edge: ; preds = %extent_buffer_under_io.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i

if.then11.i:                                      ; preds = %extent_buffer_under_io.exit.i.if.then11.i_crit_edge, %lor.lhs.false.i.i.if.then11.i_crit_edge, %lor.lhs.false.i.if.then11.i_crit_edge, %if.end.i.if.then11.i_crit_edge
  call void @_raw_spin_unlock(ptr noundef %refs_lock.i) #14
  br label %while.end.sink.split.i

if.end14.i:                                       ; preds = %extent_buffer_under_io.exit.i
  call void @_raw_spin_unlock(ptr noundef %buffer_lock.i) #14
  %call16.i = call i32 @_test_and_clear_bit(i32 noundef 4, ptr noundef %bflags.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.i)
  %tobool17.not.i = icmp eq i32 %call16.i, 0
  br i1 %tobool17.not.i, label %if.end14.i.while.end.sink.split.i_crit_edge, label %cleanup.i

if.end14.i.while.end.sink.split.i_crit_edge:      ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.sink.split.i

cleanup.i:                                        ; preds = %if.end14.i
  %call21.i = call fastcc i32 @release_extent_buffer(ptr noundef nonnull %22) #14
  %cmp.i = icmp ult i64 %add5.i, %add.i
  br i1 %cmp.i, label %cleanup.i.while.body.i_crit_edge, label %cleanup.i.while.end.i_crit_edge

cleanup.i.while.end.i_crit_edge:                  ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.i

cleanup.i.while.body.i_crit_edge:                 ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i

while.end.sink.split.i:                           ; preds = %if.end14.i.while.end.sink.split.i_crit_edge, %if.then11.i, %get_next_extent_buffer.exit.i.while.end.sink.split.i_crit_edge, %get_next_extent_buffer.exit.thread.i
  %buffer_lock.sink.i = phi ptr [ %buffer_lock.i, %if.then11.i ], [ %buffer_lock.i, %get_next_extent_buffer.exit.thread.i ], [ %refs_lock.i, %if.end14.i.while.end.sink.split.i_crit_edge ], [ %buffer_lock.i, %get_next_extent_buffer.exit.i.while.end.sink.split.i_crit_edge ]
  call void @_raw_spin_unlock(ptr noundef %buffer_lock.sink.i) #14
  br label %while.end.i

while.end.i:                                      ; preds = %while.end.sink.split.i, %cleanup.i.while.end.i_crit_edge
  %45 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %mapping, align 4
  %private_lock.i = getelementptr inbounds %struct.address_space, ptr %46, i32 0, i32 12
  call void @_raw_spin_lock(ptr noundef %private_lock.i) #14
  %47 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %page, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %48)
  %cmp.i.not.i.i = icmp eq i32 %48, -1
  br i1 %cmp.i.not.i.i, label %if.then.i.i, label %try_release_subpage_extent_buffer.exit, !prof !319

if.then.i.i:                                      ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.80) #14
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 452, 0\0A.popsection", ""() #14, !srcloc !363
  unreachable

try_release_subpage_extent_buffer.exit:           ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %49 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %page, align 4
  %51 = lshr i32 %50, 13
  %.lobit.i = and i32 %51, 1
  %52 = xor i32 %.lobit.i, 1
  %53 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %mapping, align 4
  %private_lock28.i = getelementptr inbounds %struct.address_space, ptr %54, i32 0, i32 12
  call void @_raw_spin_unlock(ptr noundef %private_lock28.i) #14
  br label %cleanup

if.end:                                           ; preds = %entry
  %private_lock = getelementptr inbounds %struct.address_space, ptr %1, i32 0, i32 12
  tail call void @_raw_spin_lock(ptr noundef %private_lock) #14
  %55 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %page, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %56)
  %cmp.i.not.i = icmp eq i32 %56, -1
  br i1 %cmp.i.not.i, label %if.then.i, label %PagePrivate.exit, !prof !319

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.80) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 452, 0\0A.popsection", ""() #14, !srcloc !363
  unreachable

PagePrivate.exit:                                 ; preds = %if.end
  %57 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load volatile i32, ptr %page, align 4
  %59 = and i32 %58, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %59)
  %tobool.not = icmp eq i32 %59, 0
  br i1 %tobool.not, label %if.then4, label %if.end7

if.then4:                                         ; preds = %PagePrivate.exit
  call void @__sanitizer_cov_trace_pc() #16
  %60 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %mapping, align 4
  %private_lock6 = getelementptr inbounds %struct.address_space, ptr %61, i32 0, i32 12
  tail call void @_raw_spin_unlock(ptr noundef %private_lock6) #14
  br label %cleanup

if.end7:                                          ; preds = %PagePrivate.exit
  %private = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 3
  %62 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %private, align 4
  %64 = inttoptr i32 %63 to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %63)
  %tobool8.not = icmp eq i32 %63, 0
  br i1 %tobool8.not, label %do.body13, label %do.end19, !prof !319

do.body13:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 7371, 0\0A.popsection", ""() #14, !srcloc !417
  unreachable

do.end19:                                         ; preds = %if.end7
  %refs_lock = getelementptr inbounds %struct.extent_buffer, ptr %64, i32 0, i32 4
  tail call void @_raw_spin_lock(ptr noundef %refs_lock) #14
  %refs = getelementptr inbounds %struct.extent_buffer, ptr %64, i32 0, i32 5
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refs, i32 noundef 4) #14
  %65 = ptrtoint ptr %refs to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile i32, ptr %refs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %66)
  %cmp21.not = icmp eq i32 %66, 1
  br i1 %cmp21.not, label %lor.lhs.false, label %do.end19.if.then24_crit_edge

do.end19.if.then24_crit_edge:                     ; preds = %do.end19
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then24

lor.lhs.false:                                    ; preds = %do.end19
  %io_pages.i = getelementptr inbounds %struct.extent_buffer, ptr %64, i32 0, i32 6
  %call.i.i.i52 = tail call zeroext i1 @__kasan_check_read(ptr noundef %io_pages.i, i32 noundef 4) #14
  %67 = ptrtoint ptr %io_pages.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load volatile i32, ptr %io_pages.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %tobool.not.i53 = icmp eq i32 %68, 0
  br i1 %tobool.not.i53, label %lor.lhs.false.i54, label %lor.lhs.false.if.then24_crit_edge

lor.lhs.false.if.then24_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then24

lor.lhs.false.i54:                                ; preds = %lor.lhs.false
  %bflags.i = getelementptr inbounds %struct.extent_buffer, ptr %64, i32 0, i32 2
  %69 = ptrtoint ptr %bflags.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %bflags.i, align 4
  %71 = and i32 %70, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %tobool2.not.i = icmp eq i32 %71, 0
  br i1 %tobool2.not.i, label %extent_buffer_under_io.exit, label %lor.lhs.false.i54.if.then24_crit_edge

lor.lhs.false.i54.if.then24_crit_edge:            ; preds = %lor.lhs.false.i54
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then24

extent_buffer_under_io.exit:                      ; preds = %lor.lhs.false.i54
  %72 = ptrtoint ptr %bflags.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load volatile i32, ptr %bflags.i, align 4
  %74 = and i32 %73, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %74)
  %tobool23.not = icmp eq i32 %74, 0
  br i1 %tobool23.not, label %if.end28, label %extent_buffer_under_io.exit.if.then24_crit_edge

extent_buffer_under_io.exit.if.then24_crit_edge:  ; preds = %extent_buffer_under_io.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then24

if.then24:                                        ; preds = %extent_buffer_under_io.exit.if.then24_crit_edge, %lor.lhs.false.i54.if.then24_crit_edge, %lor.lhs.false.if.then24_crit_edge, %do.end19.if.then24_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %refs_lock) #14
  %75 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %mapping, align 4
  %private_lock27 = getelementptr inbounds %struct.address_space, ptr %76, i32 0, i32 12
  tail call void @_raw_spin_unlock(ptr noundef %private_lock27) #14
  br label %cleanup

if.end28:                                         ; preds = %extent_buffer_under_io.exit
  %77 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %mapping, align 4
  %private_lock30 = getelementptr inbounds %struct.address_space, ptr %78, i32 0, i32 12
  tail call void @_raw_spin_unlock(ptr noundef %private_lock30) #14
  %call31 = tail call i32 @_test_and_clear_bit(i32 noundef 4, ptr noundef %bflags.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %if.then33, label %if.end35

if.then33:                                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @_raw_spin_unlock(ptr noundef %refs_lock) #14
  br label %cleanup

if.end35:                                         ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  %call36 = tail call fastcc i32 @release_extent_buffer(ptr noundef nonnull %64)
  br label %cleanup

cleanup:                                          ; preds = %if.end35, %if.then33, %if.then24, %if.then4, %try_release_subpage_extent_buffer.exit
  %retval.0 = phi i32 [ %52, %try_release_subpage_extent_buffer.exit ], [ 0, %if.then24 ], [ %call36, %if.end35 ], [ 0, %if.then33 ], [ 1, %if.then4 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_readahead_tree_block(ptr noundef %fs_info, i64 noundef %bytenr, i64 noundef %owner_root, i64 noundef %gen, i32 noundef %level) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @btrfs_find_create_tree_block(ptr noundef %fs_info, i64 noundef %bytenr, i64 noundef %owner_root, i32 noundef %level) #14
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call2 = tail call i32 @btrfs_buffer_uptodate(ptr noundef %call, i64 noundef %gen, i32 noundef 1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @free_extent_buffer(ptr noundef %call)
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %call5 = tail call i32 @read_extent_buffer_pages(ptr noundef %call, i32 noundef 0, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %cmp = icmp slt i32 %call5, 0
  br i1 %cmp, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @free_extent_buffer_stale(ptr noundef %call)
  br label %cleanup

if.else:                                          ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @free_extent_buffer(ptr noundef %call)
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then6, %if.then3, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_find_create_tree_block(ptr noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_buffer_uptodate(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_readahead_node_child(ptr noundef %node, i32 noundef %slot) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info = getelementptr inbounds %struct.extent_buffer, ptr %node, i32 0, i32 3
  %0 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info, align 8
  %mul.i = mul i32 %slot, 33
  %add.i = add i32 %mul.i, 101
  %2 = inttoptr i32 %add.i to ptr
  %call.i.i = tail call i64 @btrfs_get_64(ptr noundef %node, ptr noundef %2, i32 noundef 17) #14
  %pages.i = getelementptr inbounds %struct.extent_buffer, ptr %node, i32 0, i32 12
  %3 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %pages.i, align 4
  %call.i = tail call ptr @page_address(ptr noundef %4) #14
  %5 = ptrtoint ptr %node to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %node, align 8
  %conv.i = trunc i64 %6 to i32
  %and.i = and i32 %conv.i, 4095
  %add.ptr.i = getelementptr i8, ptr %call.i, i32 %and.i
  %owner.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i, i32 0, i32 6
  %7 = ptrtoint ptr %owner.i to i32
  call void @__asan_loadN_noabort(i32 %7, i32 8)
  %8 = load i64, ptr %owner.i, align 1
  %9 = tail call i64 @llvm.bswap.i64(i64 %8) #14
  %call.i.i11 = tail call i64 @btrfs_get_64(ptr noundef %node, ptr noundef %2, i32 noundef 25) #14
  %10 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pages.i, align 4
  %call.i13 = tail call ptr @page_address(ptr noundef %11) #14
  %12 = ptrtoint ptr %node to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %node, align 8
  %conv.i14 = trunc i64 %13 to i32
  %and.i15 = and i32 %conv.i14, 4095
  %add.ptr.i16 = getelementptr i8, ptr %call.i13, i32 %and.i15
  %level.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i16, i32 0, i32 8
  %14 = ptrtoint ptr %level.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %level.i, align 1
  %conv = zext i8 %15 to i32
  %sub = add nsw i32 %conv, -1
  %call.i17 = tail call ptr @btrfs_find_create_tree_block(ptr noundef %1, i64 noundef %call.i.i, i64 noundef %9, i32 noundef %sub) #14
  %cmp.i.i = icmp ugt ptr %call.i17, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %entry.btrfs_readahead_tree_block.exit_crit_edge, label %if.end.i

entry.btrfs_readahead_tree_block.exit_crit_edge:  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %btrfs_readahead_tree_block.exit

if.end.i:                                         ; preds = %entry
  %call2.i = tail call i32 @btrfs_buffer_uptodate(ptr noundef %call.i17, i64 noundef %call.i.i11, i32 noundef 1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool.not.i, label %if.end4.i, label %if.then3.i

if.then3.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @free_extent_buffer(ptr noundef %call.i17) #14
  br label %btrfs_readahead_tree_block.exit

if.end4.i:                                        ; preds = %if.end.i
  %call5.i = tail call i32 @read_extent_buffer_pages(ptr noundef %call.i17, i32 noundef 0, i32 noundef 0) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %cmp.i = icmp slt i32 %call5.i, 0
  br i1 %cmp.i, label %if.then6.i, label %if.else.i

if.then6.i:                                       ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @free_extent_buffer_stale(ptr noundef %call.i17) #14
  br label %btrfs_readahead_tree_block.exit

if.else.i:                                        ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @free_extent_buffer(ptr noundef %call.i17) #14
  br label %btrfs_readahead_tree_block.exit

btrfs_readahead_tree_block.exit:                  ; preds = %if.else.i, %if.then6.i, %if.then3.i, %entry.btrfs_readahead_tree_block.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.bswap.i64(i64) #10

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #11

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_free_extent_state(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #12

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_btrfs_clear_extent_bit(ptr noundef, ptr noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kmem_cache_alloc(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_waitqueue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_alloc_extent_state(ptr noundef %state, i32 noundef %mask, i32 noundef %IP) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_alloc_extent_state, i32 0, i32 1), ptr blockaddress(@trace_alloc_extent_state, %do.body)) #14
          to label %if.end48 [label %do.body], !srcloc !326

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !322

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.49, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  %9 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !418
  %call42 = tail call i32 @__traceiter_alloc_extent_state(ptr noundef null, ptr noundef %state, i32 noundef %mask, i32 noundef %IP) #14
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !419
  %13 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !322

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.49, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !329
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_alloc_extent_state, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_alloc_extent_state, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_alloc_extent_state.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @trace_alloc_extent_state.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.47, i32 noundef 1358, ptr noundef nonnull @.str.48) #14
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !330
  %31 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_alloc_extent_state(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_split_delalloc_extent(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rb_insert_color(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @__btrfs_panic(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_clear_delalloc_extent(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ulist_add(ptr noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_btrfs_set_extent_bit(ptr noundef, ptr noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_set_delalloc_extent(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rb_prev(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_merge_delalloc_extent(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_btrfs_convert_extent_bit(ptr noundef, ptr noundef, i64 noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @autoremove_wake_function(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @prepare_to_wait(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @finish_wait(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @pagecache_get_page(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dump_page(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod_and_test(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @folio_account_redirty(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @find_get_pages_contig(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_page_clamp_set_ordered(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_page_clamp_set_error(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_page_clamp_clear_dirty(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_page_clamp_set_writeback(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_page_clamp_clear_writeback(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_page_start_writer_lock(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_page_end_writer_lock(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @btrfs_repair_one_zone(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_bio_counter_inc_blocked(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_is_parity_mirror(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_map_block(ptr noundef, i32 noundef, i64 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_put_bioc(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfsic_submit_bio_wait(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_dev_stat_inc_and_print(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_read_unlock() unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %call = tail call zeroext i1 @rcu_is_watching() #14
  br i1 %call, label %entry.do.end_crit_edge, label %land.lhs.true

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true2

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

land.lhs.true2:                                   ; preds = %land.lhs.true
  %.b4 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4, label %land.lhs.true2.do.end_crit_edge, label %if.then

land.lhs.true2.do.end_crit_edge:                  ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

if.then:                                          ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.66, i32 noundef 724, ptr noundef nonnull @.str.68) #14
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true2.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !398
  %0 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %3, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void @rcu_read_unlock_strict() #14
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_bio_counter_sub(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bio_associate_blkg(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_read_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_read_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #13

; Function Attrs: null_pointer_is_valid
declare dso_local void @__filemap_set_wb_err(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @errseq_set(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @folio_detach_private(ptr noundef %folio) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %private.i = getelementptr inbounds %struct.anon.86, ptr %folio, i32 0, i32 4
  %0 = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i.i.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %folio_test_private.exit, label %if.then.i.i, !prof !322

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.82) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

folio_test_private.exit:                          ; preds = %entry
  %3 = ptrtoint ptr %folio to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %folio, align 4
  %5 = and i32 %4, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.i.not = icmp eq i32 %5, 0
  br i1 %tobool.i.not, label %folio_test_private.exit.cleanup_crit_edge, label %if.end

folio_test_private.exit.cleanup_crit_edge:        ; preds = %folio_test_private.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %folio_test_private.exit
  %6 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %0, align 4
  %and.i.i.i1 = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i1)
  %tobool.not.i.i2 = icmp eq i32 %and.i.i.i1, 0
  br i1 %tobool.not.i.i2, label %folio_clear_private.exit, label %if.then.i.i3, !prof !322

if.then.i.i3:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.82) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

folio_clear_private.exit:                         ; preds = %if.end
  tail call void @_clear_bit(i32 noundef 13, ptr noundef %folio) #14
  %8 = ptrtoint ptr %private.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %private.i, align 4
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %folio, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #14
  %9 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp.i.i.i = icmp eq i32 %10, 0
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %do.end5.i.i.i, !prof !319

if.then.i.i.i:                                    ; preds = %folio_clear_private.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %folio, ptr noundef nonnull @.str.57) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #14, !srcloc !351
  unreachable

do.end5.i.i.i:                                    ; preds = %folio_clear_private.exit
  %call.i.i.i10.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !352
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #14
  %11 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #14, !srcloc !353
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %11, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !354
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@folio_detach_private, %if.then.i.i.i.i)) #14
          to label %folio_put_testzero.exit.i [label %if.then.i.i.i.i], !srcloc !326

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %folio, i32 noundef -1, i32 noundef %conv.i.i.i.i) #14
  br label %folio_put_testzero.exit.i

folio_put_testzero.exit.i:                        ; preds = %if.then.i.i.i.i, %do.end5.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i, label %folio_put_testzero.exit.i.cleanup_crit_edge

folio_put_testzero.exit.i.cleanup_crit_edge:      ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then.i:                                        ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__put_page(ptr noundef %folio) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %folio_put_testzero.exit.i.cleanup_crit_edge, %folio_test_private.exit.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__kmap_local_page_prot(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kunmap_local_indexed(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_subpage_start_reader(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @fsverity_verify_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_subpage_end_reader(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_get_extent(ptr noundef, ptr noundef, i32 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_bio_add_page(ptr nocapture noundef readonly %bio_ctrl, ptr noundef %page, i64 noundef %disk_bytenr, i32 noundef %size, i32 noundef %pg_offset, i32 noundef %bio_flags) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %bio_ctrl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bio_ctrl, align 4
  %bi_iter = getelementptr inbounds %struct.bio, ptr %1, i32 0, i32 8
  %bi_size = getelementptr inbounds %struct.bio, ptr %1, i32 0, i32 8, i32 1
  %2 = ptrtoint ptr %bi_size to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bi_size, align 8
  %shr = lshr i64 %disk_bytenr, 9
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %cond.false, label %cond.end, !prof !319

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.25, i32 noundef 3213) #18
  unreachable

cond.end:                                         ; preds = %entry
  %len_to_oe_boundary = getelementptr inbounds %struct.btrfs_bio_ctrl, ptr %bio_ctrl, i32 0, i32 3
  %4 = ptrtoint ptr %len_to_oe_boundary to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %len_to_oe_boundary, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool4.not = icmp eq i32 %5, 0
  br i1 %tobool4.not, label %cond.end.cond.false13_crit_edge, label %land.rhs, !prof !319

cond.end.cond.false13_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.false13

land.rhs:                                         ; preds = %cond.end
  %len_to_stripe_boundary = getelementptr inbounds %struct.btrfs_bio_ctrl, ptr %bio_ctrl, i32 0, i32 2
  %6 = ptrtoint ptr %len_to_stripe_boundary to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %len_to_stripe_boundary, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool5.not = icmp eq i32 %7, 0
  br i1 %tobool5.not, label %land.rhs.cond.false13_crit_edge, label %cond.end14, !prof !319

land.rhs.cond.false13_crit_edge:                  ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.false13

cond.false13:                                     ; preds = %land.rhs.cond.false13_crit_edge, %cond.end.cond.false13_crit_edge
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.92, i32 noundef 3215) #18
  unreachable

cond.end14:                                       ; preds = %land.rhs
  %bio_flags15 = getelementptr inbounds %struct.btrfs_bio_ctrl, ptr %bio_ctrl, i32 0, i32 1
  %8 = ptrtoint ptr %bio_flags15 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %bio_flags15, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %bio_flags)
  %cmp.not = icmp eq i32 %9, %bio_flags
  br i1 %cmp.not, label %if.end, label %cond.end14.cleanup_crit_edge

cond.end14.cleanup_crit_edge:                     ; preds = %cond.end14
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %cond.end14
  %and = and i32 %bio_flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool17.not = icmp eq i32 %and, 0
  %10 = ptrtoint ptr %bi_iter to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %bi_iter, align 8
  %shr25 = lshr i32 %3, 9
  %narrow = select i1 %tobool17.not, i32 %shr25, i32 0
  %add = zext i32 %narrow to i64
  %.pn = add i64 %11, %add
  call void @__sanitizer_cov_trace_cmp8(i64 %.pn, i64 %shr)
  %contig.0.in = icmp eq i64 %.pn, %shr
  br i1 %contig.0.in, label %if.end32, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end32:                                         ; preds = %if.end
  %12 = tail call i32 @llvm.umin.i32(i32 %5, i32 %7)
  %sub = sub i32 %12, %3
  %13 = tail call i32 @llvm.umin.i32(i32 %sub, i32 %size)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp47 = icmp eq i32 %13, 0
  br i1 %cmp47, label %if.end32.cleanup_crit_edge, label %if.end50

if.end32.cleanup_crit_edge:                       ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end50:                                         ; preds = %if.end32
  %bi_opf = getelementptr inbounds %struct.bio, ptr %1, i32 0, i32 2
  %14 = ptrtoint ptr %bi_opf to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %bi_opf, align 8
  %and51 = and i32 %15, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 13, i32 %and51)
  %cmp52 = icmp eq i32 %and51, 13
  br i1 %cmp52, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #16
  %call = tail call i32 @bio_add_zone_append_page(ptr noundef nonnull %1, ptr noundef %page, i32 noundef %13, i32 noundef %pg_offset) #14
  br label %cleanup

if.else55:                                        ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #16
  %call56 = tail call i32 @bio_add_page(ptr noundef nonnull %1, ptr noundef %page, i32 noundef %13, i32 noundef %pg_offset) #14
  br label %cleanup

cleanup:                                          ; preds = %if.else55, %if.then54, %if.end32.cleanup_crit_edge, %if.end.cleanup_crit_edge, %cond.end14.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %cond.end14.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %if.end32.cleanup_crit_edge ], [ %call, %if.then54 ], [ %call56, %if.else55 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @wbc_account_cgroup_owner(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_zoned_get_device(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i8 @errno_to_blk_status(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bio_endio(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_get_chunk_map(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_get_io_geometry(ptr noundef, ptr noundef, i32 noundef, i64 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_lookup_ordered_extent(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_put_ordered_extent(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bio_associate_blkg_from_css(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bio_add_zone_append_page(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_verify_data_csum(ptr noundef, i32 noundef, ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_validate_metadata_buffer(ptr noundef, ptr noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @submit_read_repair(ptr noundef %inode, ptr nocapture noundef readonly %failed_bio, i32 noundef %bio_offset, ptr noundef %page, i32 noundef %pgoff, i64 noundef %start, i64 noundef %end, i32 noundef %failed_mirror, i32 noundef %error_bitmap) unnamed_addr #0 align 64 {
entry:
  %cached = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 33
  %2 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s_fs_info.i, align 16
  %sectorsize1 = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 167
  %4 = ptrtoint ptr %sectorsize1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sectorsize1, align 4
  %add = sub i64 1, %start
  %sub = add i64 %add, %end
  %sectorsize_bits = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 168
  %6 = ptrtoint ptr %sectorsize_bits to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sectorsize_bits, align 8
  %sh_prom = zext i32 %7 to i64
  %shr = lshr i64 %sub, %sh_prom
  %conv = trunc i64 %shr to i32
  %bi_opf = getelementptr inbounds %struct.bio, ptr %failed_bio, i32 0, i32 2
  %8 = ptrtoint ptr %bi_opf to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %bi_opf, align 8
  %and = and i32 %9, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and)
  %cmp = icmp eq i32 %and, 1
  br i1 %cmp, label %do.body4, label %do.end9, !prof !319

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2731, 0\0A.popsection", ""() #14, !srcloc !420
  unreachable

do.end9:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %error_bitmap)
  %tobool10.not = icmp eq i32 %error_bitmap, 0
  br i1 %tobool10.not, label %cond.false, label %cond.end, !prof !319

cond.false:                                       ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.100, i32 noundef 2734) #18
  unreachable

cond.end:                                         ; preds = %do.end9
  %mapping = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %10 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mapping, align 4
  %tobool17.not = icmp eq ptr %11, null
  br i1 %tobool17.not, label %cond.end.cond.false28_crit_edge, label %land.rhs, !prof !319

cond.end.cond.false28_crit_edge:                  ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.false28

land.rhs:                                         ; preds = %cond.end
  %bi_flags.i = getelementptr inbounds %struct.bio, ptr %failed_bio, i32 0, i32 3
  %12 = ptrtoint ptr %bi_flags.i to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %bi_flags.i, align 4
  %14 = and i16 %13, 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %14)
  %cmp.i.not = icmp eq i16 %14, 0
  br i1 %cmp.i.not, label %for.cond.preheader, label %land.rhs.cond.false28_crit_edge, !prof !322

land.rhs.cond.false28_crit_edge:                  ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.false28

for.cond.preheader:                               ; preds = %land.rhs
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv)
  %cmp3010 = icmp sgt i32 %conv, 0
  br i1 %cmp3010, label %for.body.lr.ph, label %for.cond.preheader.for.end_crit_edge

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %io_tree = getelementptr i8, ptr %inode, i32 -736
  %conv57 = zext i32 %5 to i64
  %add58 = add nsw i64 %conv57, -1
  br label %for.body

cond.false28:                                     ; preds = %land.rhs.cond.false28_crit_edge, %cond.end.cond.false28_crit_edge
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.101, i32 noundef 2740) #18
  unreachable

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %for.body.lr.ph
  %i.012 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %cleanup.for.body_crit_edge ]
  %error.011 = phi i32 [ 0, %for.body.lr.ph ], [ %error.2, %cleanup.for.body_crit_edge ]
  %mul = mul i32 %i.012, %5
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cached) #14
  %15 = ptrtoint ptr %cached to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %cached, align 4
  %shl = shl nuw i32 1, %i.012
  %and32 = and i32 %shl, %error_bitmap
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32)
  %tobool33.not = icmp eq i32 %and32, 0
  br i1 %tobool33.not, label %if.then51, label %if.end35

if.end35:                                         ; preds = %for.body
  %add36 = add i32 %mul, %bio_offset
  %add37 = add i32 %mul, %pgoff
  %conv38 = zext i32 %mul to i64
  %add39 = add i64 %conv38, %start
  %call40 = call i32 @btrfs_repair_one_sector(ptr noundef %inode, ptr noundef %failed_bio, i32 noundef %add36, ptr noundef %page, i32 noundef %add37, i64 noundef %add39, i32 noundef %failed_mirror, ptr noundef nonnull @btrfs_submit_data_bio)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call40)
  %tobool41.not = icmp eq i32 %call40, 0
  br i1 %tobool41.not, label %if.end35.cleanup_crit_edge, label %next

if.end35.cleanup_crit_edge:                       ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

next:                                             ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %error.011)
  %tobool44.not = icmp eq i32 %error.011, 0
  %spec.select = select i1 %tobool44.not, i32 %call40, i32 %error.011
  call fastcc void @end_page_read(ptr noundef %page, i1 noundef zeroext false, i64 noundef %add39, i32 noundef %5)
  %.pre = add i64 %add58, %add39
  br label %if.end61

if.then51:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %conv484 = zext i32 %mul to i64
  %add495 = add i64 %conv484, %start
  call fastcc void @end_page_read(ptr noundef %page, i1 noundef zeroext true, i64 noundef %add495, i32 noundef %5)
  %sub59 = add i64 %add58, %add495
  %call.i = call i32 @set_extent_bit(ptr noundef %io_tree, i64 noundef %add495, i64 noundef %sub59, i32 noundef 2, i32 noundef 0, ptr noundef null, ptr noundef nonnull %cached, i32 noundef 2592, ptr noundef null) #14
  br label %if.end61

if.end61:                                         ; preds = %if.then51, %next
  %sub70.pre-phi = phi i64 [ %.pre, %next ], [ %sub59, %if.then51 ]
  %add499 = phi i64 [ %add39, %next ], [ %add495, %if.then51 ]
  %error.16 = phi i32 [ %spec.select, %next ], [ %error.011, %if.then51 ]
  %call.i2 = call i32 @__clear_extent_bit(ptr noundef %io_tree, i64 noundef %add499, i64 noundef %sub70.pre-phi, i32 noundef 4, i32 noundef 1, i32 noundef 0, ptr noundef nonnull %cached, i32 noundef 2592, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end61, %if.end35.cleanup_crit_edge
  %error.2 = phi i32 [ %error.16, %if.end61 ], [ %error.011, %if.end35.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cached) #14
  %inc = add nuw nsw i32 %i.012, 1
  %exitcond.not = icmp eq i32 %inc, %conv
  br i1 %exitcond.not, label %cleanup.for.end_crit_edge, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %cleanup.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %error.0.lcssa = phi i32 [ 0, %for.cond.preheader.for.end_crit_edge ], [ %error.2, %cleanup.for.end_crit_edge ]
  %call75 = call zeroext i8 @errno_to_blk_status(i32 noundef %error.0.lcssa) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @find_extent_buffer_readpage(ptr noundef %fs_info, ptr noundef %page, i64 noundef %bytenr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 167
  %0 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sectorsize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %1)
  %cmp = icmp eq i32 %1, 4096
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %page, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %3)
  %cmp.i.not.i = icmp eq i32 %3, -1
  br i1 %cmp.i.not.i, label %if.then.i, label %PagePrivate.exit, !prof !319

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %page, ptr noundef nonnull @.str.80) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 452, 0\0A.popsection", ""() #14, !srcloc !363
  unreachable

PagePrivate.exit:                                 ; preds = %if.then
  %4 = ptrtoint ptr %page to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %page, align 4
  %6 = and i32 %5, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %PagePrivate.exit.cond.false_crit_edge, label %land.rhs, !prof !319

PagePrivate.exit.cond.false_crit_edge:            ; preds = %PagePrivate.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.false

land.rhs:                                         ; preds = %PagePrivate.exit
  %private = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 3
  %7 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %private, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool1.not = icmp eq i32 %8, 0
  br i1 %tobool1.not, label %land.rhs.cond.false_crit_edge, label %cond.end, !prof !319

land.rhs.cond.false_crit_edge:                    ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.false

cond.false:                                       ; preds = %land.rhs.cond.false_crit_edge, %PagePrivate.exit.cond.false_crit_edge
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.102, i32 noundef 2968) #18
  unreachable

cond.end:                                         ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  %9 = inttoptr i32 %8 to ptr
  br label %cleanup

if.end:                                           ; preds = %entry
  %10 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %13, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !360
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #14
  %call.i = tail call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i, label %if.end.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end.rcu_read_lock.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i21

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_lock.exit

if.then.i21:                                      ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.66, i32 noundef 696, ptr noundef nonnull @.str.67) #14
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i21, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end.rcu_read_lock.exit_crit_edge
  %buffer_radix = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 152
  %sectorsize_bits = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 168
  %14 = ptrtoint ptr %sectorsize_bits to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %sectorsize_bits, align 8
  %sh_prom = zext i32 %15 to i64
  %shr = lshr i64 %bytenr, %sh_prom
  %conv = trunc i64 %shr to i32
  %call5 = tail call ptr @radix_tree_lookup(ptr noundef %buffer_radix, i32 noundef %conv) #14
  %call.i22 = tail call zeroext i1 @rcu_is_watching() #14
  br i1 %call.i22, label %rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i25

rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit

land.lhs.true.i25:                                ; preds = %rcu_read_lock.exit
  %call1.i23 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i23)
  %tobool.not.i24 = icmp eq i32 %call1.i23, 0
  br i1 %tobool.not.i24, label %land.lhs.true.i25.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i27

land.lhs.true.i25.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i25
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit

land.lhs.true2.i27:                               ; preds = %land.lhs.true.i25
  %.b4.i26 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i26, label %land.lhs.true2.i27.rcu_read_unlock.exit_crit_edge, label %if.then.i28

land.lhs.true2.i27.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i27
  call void @__sanitizer_cov_trace_pc() #16
  br label %rcu_read_unlock.exit

if.then.i28:                                      ; preds = %land.lhs.true2.i27
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.66, i32 noundef 724, ptr noundef nonnull @.str.68) #14
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i28, %land.lhs.true2.i27.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i25.rcu_read_unlock.exit_crit_edge, %rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !398
  %16 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i.i.i29 = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i.i.i.i29 to ptr
  %preempt_count.i.i.i.i30 = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %preempt_count.i.i.i.i30 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %preempt_count.i.i.i.i30, align 4
  %sub.i.i.i = add i32 %19, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i30, align 4
  tail call void @rcu_read_unlock_strict() #14
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #14
  %tobool6.not = icmp eq ptr %call5, null
  br i1 %tobool6.not, label %cond.false14, label %rcu_read_unlock.exit.cleanup_crit_edge, !prof !319

rcu_read_unlock.exit.cleanup_crit_edge:           ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cond.false14:                                     ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.103, i32 noundef 2977) #18
  unreachable

cleanup:                                          ; preds = %rcu_read_unlock.exit.cleanup_crit_edge, %cond.end
  %retval.0 = phi ptr [ %9, %cond.end ], [ %call5, %rcu_read_unlock.exit.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @radix_tree_lookup(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @zero_user_segments(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @out_of_line_wait_on_bit(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bit_wait_io(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @btrfs_check_meta_write_pointer(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @lock_extent_buffer_for_io(ptr noundef %eb, ptr nocapture noundef %epd) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info1 = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 3
  %0 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info1, align 8
  %call = tail call i32 @btrfs_try_tree_write_lock(ptr noundef %eb) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end4_crit_edge

entry.if.end4_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc i32 @flush_write_bio(ptr noundef %epd)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %cmp = icmp slt i32 %call2, 0
  br i1 %cmp, label %if.then.cleanup71_crit_edge, label %if.end

if.then.cleanup71_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup71

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @btrfs_tree_lock(ptr noundef %eb) #14
  br label %if.end4

if.end4:                                          ; preds = %if.end, %entry.if.end4_crit_edge
  %flush.0 = phi i32 [ 0, %entry.if.end4_crit_edge ], [ 1, %if.end ]
  %ret.0 = phi i32 [ 0, %entry.if.end4_crit_edge ], [ %call2, %if.end ]
  %bflags = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 2
  %2 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %bflags, align 4
  %4 = and i32 %3, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool6.not = icmp eq i32 %4, 0
  br i1 %tobool6.not, label %if.end4.if.end23_crit_edge, label %if.then7

if.end4.if.end23_crit_edge:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end23

if.then7:                                         ; preds = %if.end4
  tail call void @btrfs_tree_unlock(ptr noundef %eb) #14
  %sync_io = getelementptr inbounds %struct.extent_page_data, ptr %epd, i32 0, i32 1
  %5 = ptrtoint ptr %sync_io to i32
  call void @__asan_load1_noabort(i32 %5)
  %bf.load = load i8, ptr %sync_io, align 4
  %6 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool8.not = icmp eq i8 %6, 0
  br i1 %tobool8.not, label %if.then7.cleanup71_crit_edge, label %if.end10

if.then7.cleanup71_crit_edge:                     ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup71

if.end10:                                         ; preds = %if.then7
  br i1 %tobool.not, label %if.end10.if.end17_crit_edge, label %if.then12

if.end10.if.end17_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end17

if.then12:                                        ; preds = %if.end10
  %call13 = tail call fastcc i32 @flush_write_bio(ptr noundef %epd)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %cmp14 = icmp slt i32 %call13, 0
  br i1 %cmp14, label %if.then12.cleanup71_crit_edge, label %if.then12.if.end17_crit_edge

if.then12.if.end17_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end17

if.then12.cleanup71_crit_edge:                    ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup71

if.end17:                                         ; preds = %if.then12.if.end17_crit_edge, %if.end10.if.end17_crit_edge
  %ret.1 = phi i32 [ %ret.0, %if.end10.if.end17_crit_edge ], [ %call13, %if.then12.if.end17_crit_edge ]
  br label %while.cond

while.cond:                                       ; preds = %if.end22, %if.end17
  tail call void @__might_sleep(ptr noundef nonnull @.str.104, i32 noundef 98) #14
  %7 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %bflags, align 4
  %9 = and i32 %8, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not.i.i = icmp eq i32 %9, 0
  br i1 %tobool.not.i.i, label %while.cond.wait_on_extent_buffer_writeback.exit_crit_edge, label %if.end.i.i

while.cond.wait_on_extent_buffer_writeback.exit_crit_edge: ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %wait_on_extent_buffer_writeback.exit

if.end.i.i:                                       ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #16
  %call3.i.i = tail call i32 @out_of_line_wait_on_bit(ptr noundef %bflags, i32 noundef 6, ptr noundef nonnull @bit_wait_io, i32 noundef 2) #14
  br label %wait_on_extent_buffer_writeback.exit

wait_on_extent_buffer_writeback.exit:             ; preds = %if.end.i.i, %while.cond.wait_on_extent_buffer_writeback.exit_crit_edge
  tail call void @btrfs_tree_lock(ptr noundef %eb) #14
  %10 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %bflags, align 4
  %12 = and i32 %11, 64
  %tobool20.not = icmp eq i32 %12, 0
  br i1 %tobool20.not, label %wait_on_extent_buffer_writeback.exit.if.end23_crit_edge, label %if.end22

wait_on_extent_buffer_writeback.exit.if.end23_crit_edge: ; preds = %wait_on_extent_buffer_writeback.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end23

if.end22:                                         ; preds = %wait_on_extent_buffer_writeback.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @btrfs_tree_unlock(ptr noundef %eb) #14
  br label %while.cond

if.end23:                                         ; preds = %wait_on_extent_buffer_writeback.exit.if.end23_crit_edge, %if.end4.if.end23_crit_edge
  %flush.2 = phi i32 [ %flush.0, %if.end4.if.end23_crit_edge ], [ 1, %wait_on_extent_buffer_writeback.exit.if.end23_crit_edge ]
  %ret.2 = phi i32 [ %ret.0, %if.end4.if.end23_crit_edge ], [ %ret.1, %wait_on_extent_buffer_writeback.exit.if.end23_crit_edge ]
  %refs_lock = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 4
  tail call void @_raw_spin_lock(ptr noundef %refs_lock) #14
  %call25 = tail call i32 @_test_and_clear_bit(i32 noundef 1, ptr noundef %bflags) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %if.end31, label %if.end31.thread

if.end31.thread:                                  ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @_set_bit(i32 noundef 6, ptr noundef %bflags) #14
  tail call void @_raw_spin_unlock(ptr noundef %refs_lock) #14
  %pages.i.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 12
  %13 = ptrtoint ptr %pages.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %pages.i.i, align 4
  %call.i.i = tail call ptr @page_address(ptr noundef %14) #14
  %15 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %eb, align 8
  %conv.i.i = trunc i64 %16 to i32
  %and.i.i = and i32 %conv.i.i, 4095
  %add.ptr.i.i = getelementptr i8, ptr %call.i.i, i32 %and.i.i
  %flags.i.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i.i, i32 0, i32 3
  %17 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_loadN_noabort(i32 %17, i32 8)
  %18 = load i64, ptr %flags.i.i, align 1
  %19 = or i64 %18, 72057594037927936
  %20 = ptrtoint ptr %pages.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %pages.i.i, align 4
  %call.i2.i = tail call ptr @page_address(ptr noundef %21) #14
  %22 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %eb, align 8
  %conv.i3.i = trunc i64 %23 to i32
  %and.i4.i = and i32 %conv.i3.i, 4095
  %add.ptr.i5.i = getelementptr i8, ptr %call.i2.i, i32 %and.i4.i
  %flags.i6.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i5.i, i32 0, i32 3
  %24 = ptrtoint ptr %flags.i6.i to i32
  call void @__asan_storeN_noabort(i32 %24, i32 8)
  store i64 %19, ptr %flags.i6.i, align 1
  %dirty_metadata_bytes = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 94
  %len = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %25 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %len, align 8
  %sub = sub i32 0, %26
  %conv = zext i32 %sub to i64
  %dirty_metadata_batch = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 97
  %27 = ptrtoint ptr %dirty_metadata_batch to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %dirty_metadata_batch, align 8
  tail call void @percpu_counter_add_batch(ptr noundef %dirty_metadata_bytes, i64 noundef %conv, i32 noundef %28) #14
  tail call void @btrfs_tree_unlock(ptr noundef %eb) #14
  br label %lor.lhs.false

if.end31:                                         ; preds = %if.end23
  tail call void @_raw_spin_unlock(ptr noundef %refs_lock) #14
  tail call void @btrfs_tree_unlock(ptr noundef %eb) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.2)
  %tobool32.not = icmp eq i32 %ret.2, 0
  br i1 %tobool32.not, label %if.end31.cleanup71_crit_edge, label %if.end31.lor.lhs.false_crit_edge

if.end31.lor.lhs.false_crit_edge:                 ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #16
  br label %lor.lhs.false

if.end31.cleanup71_crit_edge:                     ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup71

lor.lhs.false:                                    ; preds = %if.end31.lor.lhs.false_crit_edge, %if.end31.thread
  %ret.3168 = phi i32 [ 1, %if.end31.thread ], [ %ret.2, %if.end31.lor.lhs.false_crit_edge ]
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 167
  %29 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %sectorsize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %30)
  %cmp33 = icmp ult i32 %30, 4096
  br i1 %cmp33, label %lor.lhs.false.cleanup71_crit_edge, label %if.end36

lor.lhs.false.cleanup71_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup71

if.end36:                                         ; preds = %lor.lhs.false
  %len.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %31 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %len.i, align 8
  %shr.i131 = lshr i32 %32, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %32)
  %tobool.not.i = icmp ult i32 %32, 4096
  %shr..i = select i1 %tobool.not.i, i32 1, i32 %shr.i131
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr..i)
  %cmp38184.not = icmp eq i32 %shr..i, 0
  br i1 %cmp38184.not, label %if.end36.cleanup71_crit_edge, label %if.end36.for.body_crit_edge

if.end36.for.body_crit_edge:                      ; preds = %if.end36
  br label %for.body

if.end36.cleanup71_crit_edge:                     ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup71

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end36.for.body_crit_edge
  %flush.3188 = phi i32 [ %flush.7176, %for.inc.for.body_crit_edge ], [ %flush.2, %if.end36.for.body_crit_edge ]
  %i.0185 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %if.end36.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %i.0185
  %33 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %arrayidx, align 4
  %35 = getelementptr inbounds %struct.page, ptr %34, i32 0, i32 1
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %35, align 4
  %and.i.i132 = and i32 %37, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i132)
  %tobool.not.i.i133 = icmp eq i32 %and.i.i132, 0
  br i1 %tobool.not.i.i133, label %if.end.i.i134, label %if.then.i.i, !prof !322

if.then.i.i:                                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %37, -1
  br label %_compound_head.exit.i

if.end.i.i134:                                    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %38 = ptrtoint ptr %34 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i134, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %38, %if.end.i.i134 ]
  %39 = inttoptr i32 %retval.0.i.i to ptr
  %40 = getelementptr inbounds %struct.page, ptr %39, i32 0, i32 1
  %41 = ptrtoint ptr %40 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %40, align 4
  %and.i.i.i.i = and i32 %42, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %folio_flags.exit.i.i, label %if.then.i.i.i, !prof !322

if.then.i.i.i:                                    ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %43 = inttoptr i32 %retval.0.i.i to ptr
  tail call void @dump_page(ptr noundef %43, ptr noundef nonnull @.str.82) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

folio_flags.exit.i.i:                             ; preds = %_compound_head.exit.i
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %39, i32 noundef 4) #14
  %44 = ptrtoint ptr %39 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %39, align 4
  %and.i.i4.i.i = and i32 %45, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i4.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %trylock_page.exit, label %folio_flags.exit.i.i.if.then42_crit_edge

folio_flags.exit.i.i.if.then42_crit_edge:         ; preds = %folio_flags.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then42

trylock_page.exit:                                ; preds = %folio_flags.exit.i.i
  tail call void @llvm.prefetch.p0(ptr %39, i32 1, i32 3, i32 1) #14
  %46 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %39, ptr %39, i32 1, ptr elementtype(i32) %39) #14, !srcloc !383
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %46, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !384
  %and1.i.i.i.i = and i32 %asmresult.i.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i)
  %tobool41.not.not = icmp eq i32 %and1.i.i.i.i, 0
  br i1 %tobool41.not.not, label %trylock_page.exit.for.inc_crit_edge, label %trylock_page.exit.if.then42_crit_edge

trylock_page.exit.if.then42_crit_edge:            ; preds = %trylock_page.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then42

trylock_page.exit.for.inc_crit_edge:              ; preds = %trylock_page.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.then42:                                        ; preds = %trylock_page.exit.if.then42_crit_edge, %folio_flags.exit.i.i.if.then42_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %flush.3188)
  %tobool43.not = icmp eq i32 %flush.3188, 0
  br i1 %tobool43.not, label %if.then44, label %if.then42.if.end50_crit_edge

if.then42.if.end50_crit_edge:                     ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50

if.then44:                                        ; preds = %if.then42
  %call45 = tail call fastcc i32 @flush_write_bio(ptr noundef %epd)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call45)
  %cmp46 = icmp slt i32 %call45, 0
  br i1 %cmp46, label %for.cond55.preheader, label %if.then44.if.end50_crit_edge

if.then44.if.end50_crit_edge:                     ; preds = %if.then44
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50

for.cond55.preheader:                             ; preds = %if.then44
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.0185)
  %cmp56190.not = icmp eq i32 %i.0185, 0
  br i1 %cmp56190.not, label %for.cond55.preheader.for.end63_crit_edge, label %for.cond55.preheader.for.body58_crit_edge

for.cond55.preheader.for.body58_crit_edge:        ; preds = %for.cond55.preheader
  br label %for.body58

for.cond55.preheader.for.end63_crit_edge:         ; preds = %for.cond55.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end63

if.end50:                                         ; preds = %if.then44.if.end50_crit_edge, %if.then42.if.end50_crit_edge
  tail call void @__might_sleep(ptr noundef nonnull @.str.130, i32 noundef 788) #14
  %47 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %35, align 4
  %and.i.i135 = and i32 %48, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i135)
  %tobool.not.i.i136 = icmp eq i32 %and.i.i135, 0
  br i1 %tobool.not.i.i136, label %if.end.i.i139, label %if.then.i.i138, !prof !322

if.then.i.i138:                                   ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i137 = add i32 %48, -1
  br label %_compound_head.exit.i143

if.end.i.i139:                                    ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #16
  %49 = ptrtoint ptr %34 to i32
  br label %_compound_head.exit.i143

_compound_head.exit.i143:                         ; preds = %if.end.i.i139, %if.then.i.i138
  %retval.0.i.i140 = phi i32 [ %sub.i.i137, %if.then.i.i138 ], [ %49, %if.end.i.i139 ]
  %50 = inttoptr i32 %retval.0.i.i140 to ptr
  %51 = getelementptr inbounds %struct.page, ptr %50, i32 0, i32 1
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %51, align 4
  %and.i.i.i.i141 = and i32 %53, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i141)
  %tobool.not.i.i.i142 = icmp eq i32 %and.i.i.i.i141, 0
  br i1 %tobool.not.i.i.i142, label %folio_flags.exit.i.i148, label %if.then.i.i.i144, !prof !322

if.then.i.i.i144:                                 ; preds = %_compound_head.exit.i143
  call void @__sanitizer_cov_trace_pc() #16
  %54 = inttoptr i32 %retval.0.i.i140 to ptr
  tail call void @dump_page(ptr noundef %54, ptr noundef nonnull @.str.82) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #14, !srcloc !366
  unreachable

folio_flags.exit.i.i148:                          ; preds = %_compound_head.exit.i143
  %call.i.i.i.i145 = tail call zeroext i1 @__kasan_check_write(ptr noundef %50, i32 noundef 4) #14
  %55 = ptrtoint ptr %50 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %50, align 4
  %and.i.i4.i.i146 = and i32 %56, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i146)
  %tobool.not.i.i.i.i147 = icmp eq i32 %and.i.i4.i.i146, 0
  br i1 %tobool.not.i.i.i.i147, label %folio_trylock.exit.i, label %folio_flags.exit.i.i148.if.then.i_crit_edge

folio_flags.exit.i.i148.if.then.i_crit_edge:      ; preds = %folio_flags.exit.i.i148
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i

folio_trylock.exit.i:                             ; preds = %folio_flags.exit.i.i148
  tail call void @llvm.prefetch.p0(ptr %50, i32 1, i32 3, i32 1) #14
  %57 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %50, ptr %50, i32 1, ptr elementtype(i32) %50) #14, !srcloc !383
  %asmresult.i.i.i.i.i.i.i149 = extractvalue { i32, i32, i32 } %57, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !384
  %and1.i.i.i.i150 = and i32 %asmresult.i.i.i.i.i.i.i149, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i150)
  %phi.cmp.i.i.i = icmp eq i32 %and1.i.i.i.i150, 0
  br i1 %phi.cmp.i.i.i, label %folio_trylock.exit.i.for.inc_crit_edge, label %folio_trylock.exit.i.if.then.i_crit_edge

folio_trylock.exit.i.if.then.i_crit_edge:         ; preds = %folio_trylock.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then.i

folio_trylock.exit.i.for.inc_crit_edge:           ; preds = %folio_trylock.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.then.i:                                        ; preds = %folio_trylock.exit.i.if.then.i_crit_edge, %folio_flags.exit.i.i148.if.then.i_crit_edge
  tail call void @__folio_lock(ptr noundef %50) #14
  br label %for.inc

for.inc:                                          ; preds = %if.then.i, %folio_trylock.exit.i.for.inc_crit_edge, %trylock_page.exit.for.inc_crit_edge
  %flush.7176 = phi i32 [ 1, %if.then.i ], [ 1, %folio_trylock.exit.i.for.inc_crit_edge ], [ %flush.3188, %trylock_page.exit.for.inc_crit_edge ]
  %inc = add nuw nsw i32 %i.0185, 1
  %exitcond.not = icmp eq i32 %inc, %shr..i
  br i1 %exitcond.not, label %for.inc.cleanup71_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.cleanup71_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup71

for.body58:                                       ; preds = %for.body58.for.body58_crit_edge, %for.cond55.preheader.for.body58_crit_edge
  %i.1191 = phi i32 [ %inc62, %for.body58.for.body58_crit_edge ], [ 0, %for.cond55.preheader.for.body58_crit_edge ]
  %arrayidx60 = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %i.1191
  %58 = ptrtoint ptr %arrayidx60 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %arrayidx60, align 4
  tail call void @unlock_page(ptr noundef %59) #14
  %inc62 = add nuw nsw i32 %i.1191, 1
  %exitcond198.not = icmp eq i32 %inc62, %i.0185
  br i1 %exitcond198.not, label %for.body58.for.end63_crit_edge, label %for.body58.for.body58_crit_edge

for.body58.for.body58_crit_edge:                  ; preds = %for.body58
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body58

for.body58.for.end63_crit_edge:                   ; preds = %for.body58
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end63

for.end63:                                        ; preds = %for.body58.for.end63_crit_edge, %for.cond55.preheader.for.end63_crit_edge
  tail call void @btrfs_tree_lock(ptr noundef %eb) #14
  tail call void @_raw_spin_lock(ptr noundef %refs_lock) #14
  tail call void @_set_bit(i32 noundef 1, ptr noundef %bflags) #14
  %60 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load volatile i32, ptr %bflags, align 4
  %62 = and i32 %61, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %62)
  %tobool.not.i152 = icmp eq i32 %62, 0
  br i1 %tobool.not.i152, label %for.end63.end_extent_buffer_writeback.exit_crit_edge, label %if.then.i154

for.end63.end_extent_buffer_writeback.exit_crit_edge: ; preds = %for.end63
  call void @__sanitizer_cov_trace_pc() #16
  br label %end_extent_buffer_writeback.exit

if.then.i154:                                     ; preds = %for.end63
  call void @__sanitizer_cov_trace_pc() #16
  %63 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %fs_info1, align 8
  %65 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %65)
  %66 = load i64, ptr %eb, align 8
  %67 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %len.i, align 8
  %conv.i = zext i32 %68 to i64
  tail call void @btrfs_zone_finish_endio(ptr noundef %64, i64 noundef %66, i64 noundef %conv.i) #14
  br label %end_extent_buffer_writeback.exit

end_extent_buffer_writeback.exit:                 ; preds = %if.then.i154, %for.end63.end_extent_buffer_writeback.exit_crit_edge
  tail call void @_clear_bit(i32 noundef 6, ptr noundef %bflags) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !385
  tail call void @wake_up_bit(ptr noundef %bflags, i32 noundef 6) #14
  tail call void @_raw_spin_unlock(ptr noundef %refs_lock) #14
  %dirty_metadata_bytes67 = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 94
  %69 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %len.i, align 8
  %conv69 = zext i32 %70 to i64
  %dirty_metadata_batch70 = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 97
  %71 = ptrtoint ptr %dirty_metadata_batch70 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %dirty_metadata_batch70, align 8
  tail call void @percpu_counter_add_batch(ptr noundef %dirty_metadata_bytes67, i64 noundef %conv69, i32 noundef %72) #14
  %pages.i.i155 = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 12
  %73 = ptrtoint ptr %pages.i.i155 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %pages.i.i155, align 4
  %call.i.i156 = tail call ptr @page_address(ptr noundef %74) #14
  %75 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %75)
  %76 = load i64, ptr %eb, align 8
  %conv.i.i157 = trunc i64 %76 to i32
  %and.i.i158 = and i32 %conv.i.i157, 4095
  %add.ptr.i.i159 = getelementptr i8, ptr %call.i.i156, i32 %and.i.i158
  %flags.i.i160 = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i.i159, i32 0, i32 3
  %77 = ptrtoint ptr %flags.i.i160 to i32
  call void @__asan_loadN_noabort(i32 %77, i32 8)
  %78 = load i64, ptr %flags.i.i160, align 1
  %79 = and i64 %78, -72057594037927937
  %80 = ptrtoint ptr %pages.i.i155 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %pages.i.i155, align 4
  %call.i2.i161 = tail call ptr @page_address(ptr noundef %81) #14
  %82 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load i64, ptr %eb, align 8
  %conv.i3.i162 = trunc i64 %83 to i32
  %and.i4.i163 = and i32 %conv.i3.i162, 4095
  %add.ptr.i5.i164 = getelementptr i8, ptr %call.i2.i161, i32 %and.i4.i163
  %flags.i6.i165 = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i5.i164, i32 0, i32 3
  %84 = ptrtoint ptr %flags.i6.i165 to i32
  call void @__asan_storeN_noabort(i32 %84, i32 8)
  store i64 %79, ptr %flags.i6.i165, align 1
  tail call void @btrfs_tree_unlock(ptr noundef %eb) #14
  br label %cleanup71

cleanup71:                                        ; preds = %end_extent_buffer_writeback.exit, %for.inc.cleanup71_crit_edge, %if.end36.cleanup71_crit_edge, %lor.lhs.false.cleanup71_crit_edge, %if.end31.cleanup71_crit_edge, %if.then12.cleanup71_crit_edge, %if.then7.cleanup71_crit_edge, %if.then.cleanup71_crit_edge
  %retval.0 = phi i32 [ %call45, %end_extent_buffer_writeback.exit ], [ %call2, %if.then.cleanup71_crit_edge ], [ 0, %if.then7.cleanup71_crit_edge ], [ %call13, %if.then12.cleanup71_crit_edge ], [ %ret.3168, %lor.lhs.false.cleanup71_crit_edge ], [ 0, %if.end31.cleanup71_crit_edge ], [ %ret.3168, %if.end36.cleanup71_crit_edge ], [ %ret.3168, %for.inc.cleanup71_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_revert_meta_write_pointer(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_put_block_group(ptr noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @write_one_eb(ptr noundef %eb, ptr noundef %wbc, ptr noundef %epd) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %eb, align 8
  %punt_to_cgroup.i = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 5
  %2 = ptrtoint ptr %punt_to_cgroup.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %bf.load.i = load i16, ptr %punt_to_cgroup.i, align 4
  %sync_mode.i = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 4
  %3 = ptrtoint ptr %sync_mode.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %sync_mode.i, align 8
  tail call fastcc void @prepare_eb_write(ptr noundef %eb)
  %len.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %5 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %len.i, align 8
  %shr.i = lshr i32 %6, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %6)
  %tobool.not.i = icmp ult i32 %6, 4096
  %shr..i = select i1 %tobool.not.i, i32 1, i32 %shr.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr..i)
  %cmp75.not = icmp eq i32 %shr..i, 0
  br i1 %cmp75.not, label %entry.if.end30_crit_edge, label %for.body.lr.ph

entry.if.end30_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30

for.body.lr.ph:                                   ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cmp.i = icmp eq i32 %4, 1
  %7 = and i16 %bf.load.i, 128
  %8 = zext i16 %7 to i32
  %9 = shl nuw nsw i32 %8, 15
  %10 = or i32 %9, 2048
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %bf.load.i)
  %11 = icmp ult i16 %bf.load.i, 16384
  %12 = or i32 %9, 1048576
  %spec.select.i = select i1 %11, i32 %9, i32 %12
  %flags.0.i = select i1 %cmp.i, i32 %10, i32 %spec.select.i
  %or6 = or i32 %flags.0.i, 4097
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %disk_bytenr.077 = phi i64 [ %1, %for.body.lr.ph ], [ %add, %for.inc.for.body_crit_edge ]
  %i.076 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %i.076
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx, align 4
  %call4 = tail call zeroext i1 @clear_page_dirty_for_io(ptr noundef %14) #14
  %call5 = tail call zeroext i1 @set_page_writeback(ptr noundef %14) #14
  %call7 = tail call fastcc i32 @submit_extent_page(i32 noundef %or6, ptr noundef %wbc, ptr noundef %epd, ptr noundef %14, i64 noundef %disk_bytenr.077, i32 noundef 4096, i32 noundef 0, ptr noundef nonnull @end_bio_extent_buffer_writepage, i32 noundef 0, i32 noundef 0, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool.not = icmp eq i32 %call7, 0
  br i1 %tobool.not, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  tail call fastcc void @set_btree_ioerr(ptr noundef %14, ptr noundef %eb)
  %15 = getelementptr inbounds %struct.page, ptr %14, i32 0, i32 1
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %15, align 4
  %and.i.i = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !322

if.then.i.i:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %17, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %18 = ptrtoint ptr %14 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %18, %if.end.i.i ]
  %19 = inttoptr i32 %retval.0.i.i to ptr
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %19, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %21)
  %cmp.i.not.i = icmp eq i32 %21, -1
  %22 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %15, align 4
  %and.i16.i = and i32 %23, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i)
  %tobool.not.i17.i = icmp eq i32 %and.i16.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end10.i, !prof !319

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i20.i, label %if.then.i19.i, !prof !322

if.then.i19.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i18.i = add i32 %23, -1
  br label %_compound_head.exit22.i

if.end.i20.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %24 = ptrtoint ptr %14 to i32
  br label %_compound_head.exit22.i

_compound_head.exit22.i:                          ; preds = %if.end.i20.i, %if.then.i19.i
  %retval.0.i21.i = phi i32 [ %sub.i18.i, %if.then.i19.i ], [ %24, %if.end.i20.i ]
  %25 = inttoptr i32 %retval.0.i21.i to ptr
  tail call void @dump_page(ptr noundef %25, ptr noundef nonnull @.str.86) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 461, 0\0A.popsection", ""() #14, !srcloc !392
  unreachable

do.end10.i:                                       ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.end.i27.i, label %if.then.i26.i, !prof !322

if.then.i26.i:                                    ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i25.i = add i32 %23, -1
  br label %PageWriteback.exit

if.end.i27.i:                                     ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  %26 = ptrtoint ptr %14 to i32
  br label %PageWriteback.exit

PageWriteback.exit:                               ; preds = %if.end.i27.i, %if.then.i26.i
  %retval.0.i28.i = phi i32 [ %sub.i25.i, %if.then.i26.i ], [ %26, %if.end.i27.i ]
  %27 = inttoptr i32 %retval.0.i28.i to ptr
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %27, align 4
  %30 = and i32 %29, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool9.not = icmp eq i32 %30, 0
  br i1 %tobool9.not, label %PageWriteback.exit.if.end_crit_edge, label %if.then10

PageWriteback.exit.if.end_crit_edge:              ; preds = %PageWriteback.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then10:                                        ; preds = %PageWriteback.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @end_page_writeback(ptr noundef %14) #14
  br label %if.end

if.end:                                           ; preds = %if.then10, %PageWriteback.exit.if.end_crit_edge
  %sub = sub nsw i32 %shr..i, %i.076
  %io_pages = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 6
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %io_pages, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !352
  tail call void @llvm.prefetch.p0(ptr %io_pages, i32 1, i32 3, i32 1) #14
  %31 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %io_pages, ptr %io_pages, i32 %sub, ptr elementtype(i32) %io_pages) #14, !srcloc !353
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %31, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !354
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i)
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %cmp.i.i, label %if.then12, label %if.end.for.end_crit_edge

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

if.then12:                                        ; preds = %if.end
  %bflags.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 2
  %32 = ptrtoint ptr %bflags.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %bflags.i, align 4
  %34 = and i32 %33, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool.not.i63 = icmp eq i32 %34, 0
  br i1 %tobool.not.i63, label %if.then12.end_extent_buffer_writeback.exit_crit_edge, label %if.then.i65

if.then12.end_extent_buffer_writeback.exit_crit_edge: ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #16
  br label %end_extent_buffer_writeback.exit

if.then.i65:                                      ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #16
  %fs_info.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 3
  %35 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %fs_info.i, align 8
  %37 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %eb, align 8
  %39 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %len.i, align 8
  %conv.i = zext i32 %40 to i64
  tail call void @btrfs_zone_finish_endio(ptr noundef %36, i64 noundef %38, i64 noundef %conv.i) #14
  br label %end_extent_buffer_writeback.exit

end_extent_buffer_writeback.exit:                 ; preds = %if.then.i65, %if.then12.end_extent_buffer_writeback.exit_crit_edge
  tail call void @_clear_bit(i32 noundef 6, ptr noundef %bflags.i) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !385
  tail call void @wake_up_bit(ptr noundef %bflags.i, i32 noundef 6) #14
  br label %for.end

for.inc:                                          ; preds = %for.body
  %add = add i64 %disk_bytenr.077, 4096
  %41 = ptrtoint ptr %wbc to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %wbc, align 8
  %sub.i = add i32 %42, -1
  store i32 %sub.i, ptr %wbc, align 8
  tail call void @unlock_page(ptr noundef %14) #14
  %inc = add nuw nsw i32 %i.076, 1
  %exitcond.not = icmp eq i32 %inc, %shr..i
  br i1 %exitcond.not, label %for.inc.if.end30_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.if.end30_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30

for.end:                                          ; preds = %end_extent_buffer_writeback.exit, %if.end.for.end_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %shr..i, i32 %i.076)
  %cmp2078 = icmp ugt i32 %shr..i, %i.076
  br i1 %cmp2078, label %for.end.for.body22_crit_edge, label %for.end.if.end30_crit_edge

for.end.if.end30_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30

for.end.for.body22_crit_edge:                     ; preds = %for.end
  br label %for.body22

for.body22:                                       ; preds = %for.body22.for.body22_crit_edge, %for.end.for.body22_crit_edge
  %i.179 = phi i32 [ %inc28, %for.body22.for.body22_crit_edge ], [ %i.076, %for.end.for.body22_crit_edge ]
  %arrayidx25 = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %i.179
  %43 = ptrtoint ptr %arrayidx25 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %arrayidx25, align 4
  %call26 = tail call zeroext i1 @clear_page_dirty_for_io(ptr noundef %44) #14
  tail call void @unlock_page(ptr noundef %44) #14
  %inc28 = add nuw nsw i32 %i.179, 1
  %exitcond83.not = icmp eq i32 %inc28, %shr..i
  br i1 %exitcond83.not, label %for.body22.if.end30_crit_edge, label %for.body22.for.body22_crit_edge

for.body22.for.body22_crit_edge:                  ; preds = %for.body22
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body22

for.body22.if.end30_crit_edge:                    ; preds = %for.body22
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30

if.end30:                                         ; preds = %for.body22.if.end30_crit_edge, %for.end.if.end30_crit_edge, %for.inc.if.end30_crit_edge, %entry.if.end30_crit_edge
  %ret.272 = phi i32 [ -5, %for.end.if.end30_crit_edge ], [ 0, %entry.if.end30_crit_edge ], [ -5, %for.body22.if.end30_crit_edge ], [ 0, %for.inc.if.end30_crit_edge ]
  ret i32 %ret.272
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @prepare_eb_write(ptr noundef %eb) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %bflags = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 2
  tail call void @_clear_bit(i32 noundef 10, ptr noundef %bflags) #14
  %io_pages = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 6
  %len.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %0 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len.i, align 8
  %shr.i = lshr i32 %1, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %1)
  %tobool.not.i = icmp ult i32 %1, 4096
  %shr..i = select i1 %tobool.not.i, i32 1, i32 %shr.i
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %io_pages, i32 noundef 4) #14
  %2 = ptrtoint ptr %io_pages to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile i32 %shr..i, ptr %io_pages, align 4
  %pages.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 12
  %3 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %pages.i, align 4
  %call.i = tail call ptr @page_address(ptr noundef %4) #14
  %5 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %eb, align 8
  %conv.i = trunc i64 %6 to i32
  %and.i = and i32 %conv.i, 4095
  %add.ptr.i = getelementptr i8, ptr %call.i, i32 %and.i
  %nritems.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i, i32 0, i32 7
  %7 = ptrtoint ptr %nritems.i to i32
  call void @__asan_loadN_noabort(i32 %7, i32 4)
  %8 = load i32, ptr %nritems.i, align 1
  %9 = tail call i32 @llvm.bswap.i32(i32 %8) #14
  %10 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pages.i, align 4
  %call.i21 = tail call ptr @page_address(ptr noundef %11) #14
  %12 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %eb, align 8
  %conv.i22 = trunc i64 %13 to i32
  %and.i23 = and i32 %conv.i22, 4095
  %add.ptr.i24 = getelementptr i8, ptr %call.i21, i32 %and.i23
  %level.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i24, i32 0, i32 8
  %14 = ptrtoint ptr %level.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %level.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %cmp.not = icmp eq i8 %15, 0
  br i1 %cmp.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %mul.i = mul i32 %9, 33
  %add.i = add i32 %mul.i, 101
  %16 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %len.i, align 8
  %sub = sub i32 %17, %add.i
  tail call void @memzero_extent_buffer(ptr noundef %eb, i32 noundef %add.i, i32 noundef %sub)
  br label %if.end

if.else:                                          ; preds = %entry
  %mul.i25 = mul i32 %9, 25
  %add.i26 = add i32 %mul.i25, 101
  %18 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pages.i, align 4
  %call.i.i27 = tail call ptr @page_address(ptr noundef %19) #14
  %20 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %eb, align 8
  %conv.i.i = trunc i64 %21 to i32
  %and.i.i = and i32 %conv.i.i, 4095
  %add.ptr.i.i = getelementptr i8, ptr %call.i.i27, i32 %and.i.i
  %nritems.i.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i.i, i32 0, i32 7
  %22 = ptrtoint ptr %nritems.i.i to i32
  call void @__asan_loadN_noabort(i32 %22, i32 4)
  %23 = load i32, ptr %nritems.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp.i = icmp eq i32 %23, 0
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  %fs_info.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 3
  %24 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %fs_info.i, align 8
  %nodesize.i.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %25, i32 0, i32 166
  %26 = ptrtoint ptr %nodesize.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %nodesize.i.i, align 8
  %sub.i.i = add i32 %27, -101
  br label %leaf_data_end.exit

if.end.i:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  %28 = tail call i32 @llvm.bswap.i32(i32 %23) #14
  %29 = mul i32 %28, 25
  %add.i.i.i.i = add i32 %29, 76
  %30 = inttoptr i32 %add.i.i.i.i to ptr
  %call.i.i.i = tail call i32 @btrfs_get_32(ptr noundef %eb, ptr noundef %30, i32 noundef 17) #14
  br label %leaf_data_end.exit

leaf_data_end.exit:                               ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi i32 [ %sub.i.i, %if.then.i ], [ %call.i.i.i, %if.end.i ]
  %sub7 = sub i32 %retval.0.i, %mul.i25
  tail call void @memzero_extent_buffer(ptr noundef %eb, i32 noundef %add.i26, i32 noundef %sub7)
  br label %if.end

if.end:                                           ; preds = %leaf_data_end.exit, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_subpage_set_writeback(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @btrfs_subpage_clear_and_test_dirty(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @end_bio_subpage_eb_writepage(ptr noundef %bio) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %bi_flags.i.i.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 3
  %0 = ptrtoint ptr %bi_flags.i.i.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %bi_flags.i.i.i, align 4
  %2 = and i16 %1, 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %2)
  %cmp.i.not.i.i = icmp eq i16 %2, 0
  br i1 %cmp.i.not.i.i, label %entry.bio_first_page_all.exit_crit_edge, label %land.rhs.i.i

entry.bio_first_page_all.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %bio_first_page_all.exit

land.rhs.i.i:                                     ; preds = %entry
  %.b38.i.i = load i1, ptr @bio_first_bvec_all.__already_done, align 1
  br i1 %.b38.i.i, label %land.rhs.i.i.bio_first_page_all.exit_crit_edge, label %if.then.i.i106, !prof !322

land.rhs.i.i.bio_first_page_all.exit_crit_edge:   ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %bio_first_page_all.exit

if.then.i.i106:                                   ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @bio_first_bvec_all.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.109, i32 noundef 248, i32 noundef 9, ptr noundef null) #14
  br label %bio_first_page_all.exit

bio_first_page_all.exit:                          ; preds = %if.then.i.i106, %land.rhs.i.i.bio_first_page_all.exit_crit_edge, %entry.bio_first_page_all.exit_crit_edge
  %bi_io_vec.i.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 20
  %3 = ptrtoint ptr %bi_io_vec.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %bi_io_vec.i.i, align 8
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 4
  %mapping = getelementptr inbounds %struct.page, ptr %6, i32 0, i32 1, i32 0, i32 1
  %7 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %mapping, align 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 4
  %i_sb = getelementptr inbounds %struct.inode, ptr %10, i32 0, i32 8
  %11 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %12, i32 0, i32 33
  %13 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %s_fs_info.i, align 16
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %14, i32 0, i32 167
  %15 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %sectorsize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %16)
  %cmp = icmp ult i32 %16, 4096
  br i1 %cmp, label %cond.end, label %cond.false, !prof !322

cond.false:                                       ; preds = %bio_first_page_all.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.105, i32 noundef 4403) #18
  unreachable

cond.end:                                         ; preds = %bio_first_page_all.exit
  %17 = ptrtoint ptr %bi_flags.i.i.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %bi_flags.i.i.i, align 4
  %19 = and i16 %18, 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %19)
  %cmp.i.not = icmp eq i16 %19, 0
  br i1 %cmp.i.not, label %for.cond.preheader, label %cond.false13, !prof !322

for.cond.preheader:                               ; preds = %cond.end
  %bi_vcnt.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 17
  %20 = ptrtoint ptr %bi_vcnt.i to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %bi_vcnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %21)
  %cmp.not.i138.not = icmp eq i16 %21, 0
  br i1 %cmp.not.i138.not, label %for.cond.preheader.for.end_crit_edge, label %if.end.i.lr.ph

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

if.end.i.lr.ph:                                   ; preds = %for.cond.preheader
  %nodesize = getelementptr inbounds %struct.btrfs_fs_info, ptr %14, i32 0, i32 166
  %bi_status = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 6
  br label %if.end.i

cond.false13:                                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.93, i32 noundef 4405) #18
  unreachable

for.cond.loopexit:                                ; preds = %end_extent_buffer_writeback.exit.for.cond.loopexit_crit_edge, %while.cond.preheader.for.cond.loopexit_crit_edge
  %22 = ptrtoint ptr %bi_vcnt.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %bi_vcnt.i, align 8
  %conv.i = zext i16 %23 to i32
  %cmp.not.i = icmp ult i32 %spec.select129, %conv.i
  br i1 %cmp.not.i, label %for.cond.loopexit.if.end.i_crit_edge, label %for.cond.loopexit.for.end_crit_edge

for.cond.loopexit.for.end_crit_edge:              ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.cond.loopexit.if.end.i_crit_edge:             ; preds = %for.cond.loopexit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

if.end.i:                                         ; preds = %for.cond.loopexit.if.end.i_crit_edge, %if.end.i.lr.ph
  %iter_all.sroa.0.0141 = phi ptr [ inttoptr (i32 -1 to ptr), %if.end.i.lr.ph ], [ %iter_all.sroa.0.1, %for.cond.loopexit.if.end.i_crit_edge ]
  %iter_all.sroa.13.0140 = phi i32 [ 0, %if.end.i.lr.ph ], [ %spec.select129, %for.cond.loopexit.if.end.i_crit_edge ]
  %iter_all.sroa.17.0139 = phi i32 [ 0, %if.end.i.lr.ph ], [ %spec.select, %for.cond.loopexit.if.end.i_crit_edge ]
  %24 = ptrtoint ptr %bi_io_vec.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %bi_io_vec.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %iter_all.sroa.17.0139)
  %tobool.not.i.i108 = icmp eq i32 %iter_all.sroa.17.0139, 0
  br i1 %tobool.not.i.i108, label %if.else.i.i, label %if.then.i.i109

if.then.i.i109:                                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %incdec.ptr.i.i = getelementptr %struct.page, ptr %iter_all.sroa.0.0141, i32 1
  br label %if.end.i.i112

if.else.i.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i = getelementptr %struct.bio_vec, ptr %25, i32 %iter_all.sroa.13.0140
  %26 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx.i, align 4
  %bv_offset3.i.i = getelementptr %struct.bio_vec, ptr %25, i32 %iter_all.sroa.13.0140, i32 2
  %28 = ptrtoint ptr %bv_offset3.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %bv_offset3.i.i, align 4
  %shr.i.i = lshr i32 %29, 12
  %add.ptr.i.i = getelementptr %struct.page, ptr %27, i32 %shr.i.i
  %and.i.i110 = and i32 %29, 4095
  br label %if.end.i.i112

if.end.i.i112:                                    ; preds = %if.else.i.i, %if.then.i.i109
  %iter_all.sroa.0.1 = phi ptr [ %add.ptr.i.i, %if.else.i.i ], [ %incdec.ptr.i.i, %if.then.i.i109 ]
  %.sink.i.i = phi i32 [ %and.i.i110, %if.else.i.i ], [ 0, %if.then.i.i109 ]
  %sub.i.i111 = sub nuw nsw i32 4096, %.sink.i.i
  %bv_len.i.i = getelementptr %struct.bio_vec, ptr %25, i32 %iter_all.sroa.13.0140, i32 1
  %30 = ptrtoint ptr %bv_len.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %bv_len.i.i, align 4
  %sub9.i.i = sub i32 %31, %iter_all.sroa.17.0139
  %32 = tail call i32 @llvm.umin.i32(i32 %sub.i.i111, i32 %sub9.i.i) #14
  %add.i.i = add i32 %32, %iter_all.sroa.17.0139
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %31)
  %cmp15.i.i = icmp eq i32 %add.i.i, %31
  %spec.select = select i1 %cmp15.i.i, i32 0, i32 %add.i.i
  %inc.i.i = zext i1 %cmp15.i.i to i32
  %spec.select129 = add nuw nsw i32 %iter_all.sroa.13.0140, %inc.i.i
  %index.i = getelementptr inbounds %struct.page, ptr %iter_all.sroa.0.1, i32 0, i32 1, i32 0, i32 2
  %33 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %index.i, align 4
  %conv.i113 = zext i32 %34 to i64
  %shl.i = shl nuw nsw i64 %conv.i113, 12
  %conv = zext i32 %.sink.i.i to i64
  %add = or i64 %shl.i, %conv
  %conv18 = zext i32 %32 to i64
  %add19 = add nsw i64 %conv18, -1
  %sub = add nsw i64 %add19, %add
  %35 = ptrtoint ptr %nodesize to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %nodesize, align 8
  %sub21 = add i32 %36, 8191
  %and = and i32 %sub21, %32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %cmp22 = icmp eq i32 %and, 0
  br i1 %cmp22, label %while.cond.preheader, label %cond.false31, !prof !322

while.cond.preheader:                             ; preds = %if.end.i.i112
  call void @__sanitizer_cov_trace_cmp8(i64 %add, i64 %sub)
  %cmp33.not135 = icmp ugt i64 %add, %sub
  br i1 %cmp33.not135, label %while.cond.preheader.for.cond.loopexit_crit_edge, label %while.body.lr.ph

while.cond.preheader.for.cond.loopexit_crit_edge: ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.loopexit

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %37 = getelementptr inbounds %struct.page, ptr %iter_all.sroa.0.1, i32 0, i32 1
  %38 = ptrtoint ptr %iter_all.sroa.0.1 to i32
  br label %while.body

cond.false31:                                     ; preds = %if.end.i.i112
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.106, i32 noundef 4412) #18
  unreachable

while.body:                                       ; preds = %end_extent_buffer_writeback.exit.while.body_crit_edge, %while.body.lr.ph
  %cur_bytenr.0136 = phi i64 [ %add, %while.body.lr.ph ], [ %add47, %end_extent_buffer_writeback.exit.while.body_crit_edge ]
  %call35 = tail call fastcc ptr @find_extent_buffer_nolock(ptr noundef %14, i64 noundef %cur_bytenr.0136)
  %tobool36.not = icmp eq ptr %call35, null
  br i1 %tobool36.not, label %cond.false44, label %cond.end45, !prof !319

cond.false44:                                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.103, i32 noundef 4425) #18
  unreachable

cond.end45:                                       ; preds = %while.body
  %39 = ptrtoint ptr %call35 to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %call35, align 8
  %len = getelementptr inbounds %struct.extent_buffer, ptr %call35, i32 0, i32 1
  %41 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %len, align 8
  %conv46 = zext i32 %42 to i64
  %add47 = add i64 %40, %conv46
  %bflags = getelementptr inbounds %struct.extent_buffer, ptr %call35, i32 0, i32 2
  %43 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %bflags, align 4
  %45 = and i32 %44, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool49.not = icmp eq i32 %45, 0
  br i1 %tobool49.not, label %cond.false57, label %cond.end58, !prof !319

cond.false57:                                     ; preds = %cond.end45
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.107, i32 noundef 4429) #18
  unreachable

cond.end58:                                       ; preds = %cond.end45
  %io_pages = getelementptr inbounds %struct.extent_buffer, ptr %call35, i32 0, i32 6
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %io_pages, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !352
  tail call void @llvm.prefetch.p0(ptr %io_pages, i32 1, i32 3, i32 1) #14
  %46 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %io_pages, ptr %io_pages, i32 1, ptr elementtype(i32) %io_pages) #14, !srcloc !353
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %46, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !354
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.i.i, label %cond.end70, label %cond.false69, !prof !322

cond.false69:                                     ; preds = %cond.end58
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.108, i32 noundef 4431) #18
  unreachable

cond.end70:                                       ; preds = %cond.end58
  %47 = ptrtoint ptr %bi_status to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %bi_status, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %48)
  %tobool72.not = icmp eq i8 %48, 0
  br i1 %tobool72.not, label %lor.lhs.false, label %cond.end70.if.then_crit_edge

cond.end70.if.then_crit_edge:                     ; preds = %cond.end70
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

lor.lhs.false:                                    ; preds = %cond.end70
  %49 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %bflags, align 4
  %51 = and i32 %50, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool75.not = icmp eq i32 %51, 0
  br i1 %tobool75.not, label %lor.lhs.false.if.end_crit_edge, label %lor.lhs.false.if.then_crit_edge

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

lor.lhs.false.if.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %cond.end70.if.then_crit_edge
  %52 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %37, align 4
  %and.i.i = and i32 %53, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %do.body7.i, label %if.then.i, !prof !322

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %iter_all.sroa.0.1, ptr noundef nonnull @.str.110) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 678, 0\0A.popsection", ""() #14, !srcloc !421
  unreachable

do.body7.i:                                       ; preds = %if.then
  %54 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile i32, ptr %37, align 4
  %and.i31.i = and i32 %55, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i31.i)
  %tobool.not.i.i = icmp eq i32 %and.i31.i, 0
  br i1 %tobool.not.i.i, label %do.body7.i._compound_head.exit.i_crit_edge, label %if.then.i.i, !prof !322

do.body7.i._compound_head.exit.i_crit_edge:       ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %_compound_head.exit.i

if.then.i.i:                                      ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %55, -1
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.then.i.i, %do.body7.i._compound_head.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %38, %do.body7.i._compound_head.exit.i_crit_edge ]
  %56 = inttoptr i32 %retval.0.i.i to ptr
  %57 = ptrtoint ptr %56 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load volatile i32, ptr %56, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %58)
  %cmp.i.not.i = icmp eq i32 %58, -1
  %59 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %37, align 4
  %and.i32.i = and i32 %60, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i32.i)
  %tobool.not.i33.i = icmp eq i32 %and.i32.i, 0
  br i1 %cmp.i.not.i, label %if.then17.i, label %do.end24.i, !prof !319

if.then17.i:                                      ; preds = %_compound_head.exit.i
  %61 = ptrtoint ptr %iter_all.sroa.0.1 to i32
  br i1 %tobool.not.i33.i, label %if.then17.i._compound_head.exit38.i_crit_edge, label %if.then.i35.i, !prof !322

if.then17.i._compound_head.exit38.i_crit_edge:    ; preds = %if.then17.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %_compound_head.exit38.i

if.then.i35.i:                                    ; preds = %if.then17.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i34.i = add i32 %60, -1
  br label %_compound_head.exit38.i

_compound_head.exit38.i:                          ; preds = %if.then.i35.i, %if.then17.i._compound_head.exit38.i_crit_edge
  %retval.0.i37.i = phi i32 [ %sub.i34.i, %if.then.i35.i ], [ %61, %if.then17.i._compound_head.exit38.i_crit_edge ]
  %62 = inttoptr i32 %retval.0.i37.i to ptr
  tail call void @dump_page(ptr noundef %62, ptr noundef nonnull @.str.86) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 678, 0\0A.popsection", ""() #14, !srcloc !422
  unreachable

do.end24.i:                                       ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i33.i, label %do.end24.i.ClearPageUptodate.exit_crit_edge, label %if.then.i42.i, !prof !322

do.end24.i.ClearPageUptodate.exit_crit_edge:      ; preds = %do.end24.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ClearPageUptodate.exit

if.then.i42.i:                                    ; preds = %do.end24.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i41.i = add i32 %60, -1
  br label %ClearPageUptodate.exit

ClearPageUptodate.exit:                           ; preds = %if.then.i42.i, %do.end24.i.ClearPageUptodate.exit_crit_edge
  %retval.0.i44.i = phi i32 [ %sub.i41.i, %if.then.i42.i ], [ %38, %do.end24.i.ClearPageUptodate.exit_crit_edge ]
  %63 = inttoptr i32 %retval.0.i44.i to ptr
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %63) #14
  tail call fastcc void @set_btree_ioerr(ptr noundef %iter_all.sroa.0.1, ptr noundef nonnull %call35)
  br label %if.end

if.end:                                           ; preds = %ClearPageUptodate.exit, %lor.lhs.false.if.end_crit_edge
  %64 = ptrtoint ptr %call35 to i32
  call void @__asan_load8_noabort(i32 %64)
  %65 = load i64, ptr %call35, align 8
  %66 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %len, align 8
  tail call void @btrfs_subpage_clear_writeback(ptr noundef %14, ptr noundef %iter_all.sroa.0.1, i64 noundef %65, i32 noundef %67) #14
  %68 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile i32, ptr %bflags, align 4
  %70 = and i32 %69, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %70)
  %tobool.not.i114 = icmp eq i32 %70, 0
  br i1 %tobool.not.i114, label %if.end.end_extent_buffer_writeback.exit_crit_edge, label %if.then.i116

if.end.end_extent_buffer_writeback.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %end_extent_buffer_writeback.exit

if.then.i116:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %fs_info.i = getelementptr inbounds %struct.extent_buffer, ptr %call35, i32 0, i32 3
  %71 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %fs_info.i, align 8
  %73 = ptrtoint ptr %call35 to i32
  call void @__asan_load8_noabort(i32 %73)
  %74 = load i64, ptr %call35, align 8
  %75 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %len, align 8
  %conv.i115 = zext i32 %76 to i64
  tail call void @btrfs_zone_finish_endio(ptr noundef %72, i64 noundef %74, i64 noundef %conv.i115) #14
  br label %end_extent_buffer_writeback.exit

end_extent_buffer_writeback.exit:                 ; preds = %if.then.i116, %if.end.end_extent_buffer_writeback.exit_crit_edge
  tail call void @_clear_bit(i32 noundef 6, ptr noundef %bflags) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !385
  tail call void @wake_up_bit(ptr noundef %bflags, i32 noundef 6) #14
  %refs = getelementptr inbounds %struct.extent_buffer, ptr %call35, i32 0, i32 5
  %call.i.i105 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refs, i32 noundef 4) #14
  tail call void @llvm.prefetch.p0(ptr %refs, i32 1, i32 3, i32 1) #14
  %77 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refs, ptr %refs, i32 1, ptr elementtype(i32) %refs) #14, !srcloc !381
  %cmp33.not = icmp ugt i64 %add47, %sub
  br i1 %cmp33.not, label %end_extent_buffer_writeback.exit.for.cond.loopexit_crit_edge, label %end_extent_buffer_writeback.exit.while.body_crit_edge

end_extent_buffer_writeback.exit.while.body_crit_edge: ; preds = %end_extent_buffer_writeback.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

end_extent_buffer_writeback.exit.for.cond.loopexit_crit_edge: ; preds = %end_extent_buffer_writeback.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.loopexit

for.end:                                          ; preds = %for.cond.loopexit.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  tail call void @bio_put(ptr noundef %bio) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_subpage_clear_writeback(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @set_btree_ioerr(ptr noundef %page, ptr noundef %eb) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info1 = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 3
  %0 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info1, align 8
  %2 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %eb, align 8
  %len = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %4 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %len, align 8
  tail call void @btrfs_page_set_error(ptr noundef %1, ptr noundef %page, i64 noundef %3, i32 noundef %5) #14
  %bflags = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 2
  %call = tail call i32 @_test_and_set_bit(i32 noundef 10, ptr noundef %bflags) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %bflags) #14
  %mapping = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 1
  %6 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mapping, align 4
  tail call void @__filemap_set_wb_err(ptr noundef %7, i32 noundef -5) #14
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  %tobool4.not.i = icmp eq ptr %9, null
  br i1 %tobool4.not.i, label %if.end.mapping_set_error.exit_crit_edge, label %if.then5.i

if.end.mapping_set_error.exit_crit_edge:          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %mapping_set_error.exit

if.then5.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %9, i32 0, i32 8
  %10 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %i_sb.i, align 4
  %s_wb_err.i = getelementptr inbounds %struct.super_block, ptr %11, i32 0, i32 50
  %call.i = tail call i32 @errseq_set(ptr noundef %s_wb_err.i, i32 noundef -5) #14
  br label %mapping_set_error.exit

mapping_set_error.exit:                           ; preds = %if.then5.i, %if.end.mapping_set_error.exit_crit_edge
  %flags.i = getelementptr inbounds %struct.address_space, ptr %7, i32 0, i32 10
  tail call void @_set_bit(i32 noundef 0, ptr noundef %flags.i) #14
  %dirty_metadata_bytes = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 94
  %12 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %len, align 8
  %conv = zext i32 %13 to i64
  %dirty_metadata_batch = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 97
  %14 = ptrtoint ptr %dirty_metadata_batch to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %dirty_metadata_batch, align 8
  tail call void @percpu_counter_add_batch(ptr noundef %dirty_metadata_bytes, i64 noundef %conv, i32 noundef %15) #14
  %log_index = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 10
  %16 = ptrtoint ptr %log_index to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %log_index, align 8
  %conv4 = sext i8 %17 to i32
  %switch.tableidx = add nsw i32 %conv4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %switch.tableidx)
  %18 = icmp ult i32 %switch.tableidx, 3
  br i1 %18, label %switch.lookup, label %do.body

do.body:                                          ; preds = %mapping_set_error.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4366, 0\0A.popsection", ""() #14, !srcloc !423
  unreachable

switch.lookup:                                    ; preds = %mapping_set_error.exit
  call void @__sanitizer_cov_trace_pc() #16
  %switch.offset = add nsw i32 %conv4, 8
  %flags = getelementptr inbounds %struct.btrfs_fs_info, ptr %1, i32 0, i32 1
  tail call void @_set_bit(i32 noundef %switch.offset, ptr noundef %flags) #14
  br label %cleanup

cleanup:                                          ; preds = %switch.lookup, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #10

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_get_32(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @percpu_counter_add_batch(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_zone_finish_endio(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @wake_up_bit(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_try_tree_write_lock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_tree_lock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_tree_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @set_page_writeback(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @end_bio_extent_buffer_writepage(ptr noundef %bio) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %bi_flags.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 3
  %0 = ptrtoint ptr %bi_flags.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %bi_flags.i, align 4
  %2 = and i16 %1, 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %2)
  %cmp.i.not = icmp eq i16 %2, 0
  br i1 %cmp.i.not, label %for.cond.preheader, label %cond.false, !prof !322

for.cond.preheader:                               ; preds = %entry
  %bi_vcnt.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 17
  %3 = ptrtoint ptr %bi_vcnt.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %bi_vcnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %4)
  %cmp.not.i62.not = icmp eq i16 %4, 0
  br i1 %cmp.not.i62.not, label %for.cond.preheader.for.end_crit_edge, label %if.end.i.lr.ph

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

if.end.i.lr.ph:                                   ; preds = %for.cond.preheader
  %bi_io_vec.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 20
  %bi_status = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 6
  br label %if.end.i

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.93, i32 noundef 4460) #18
  unreachable

if.end.i:                                         ; preds = %cleanup.if.end.i_crit_edge, %if.end.i.lr.ph
  %iter_all.sroa.0.065 = phi ptr [ inttoptr (i32 -1 to ptr), %if.end.i.lr.ph ], [ %iter_all.sroa.0.1, %cleanup.if.end.i_crit_edge ]
  %iter_all.sroa.11.064 = phi i32 [ 0, %if.end.i.lr.ph ], [ %spec.select58, %cleanup.if.end.i_crit_edge ]
  %iter_all.sroa.15.063 = phi i32 [ 0, %if.end.i.lr.ph ], [ %spec.select, %cleanup.if.end.i_crit_edge ]
  %5 = ptrtoint ptr %bi_io_vec.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %bi_io_vec.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %iter_all.sroa.15.063)
  %tobool.not.i.i41 = icmp eq i32 %iter_all.sroa.15.063, 0
  br i1 %tobool.not.i.i41, label %if.else.i.i, label %if.then.i.i42

if.then.i.i42:                                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %incdec.ptr.i.i = getelementptr %struct.page, ptr %iter_all.sroa.0.065, i32 1
  br label %if.end.i.i45

if.else.i.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i = getelementptr %struct.bio_vec, ptr %6, i32 %iter_all.sroa.11.064
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx.i, align 4
  %bv_offset3.i.i = getelementptr %struct.bio_vec, ptr %6, i32 %iter_all.sroa.11.064, i32 2
  %9 = ptrtoint ptr %bv_offset3.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %bv_offset3.i.i, align 4
  %shr.i.i = lshr i32 %10, 12
  %add.ptr.i.i = getelementptr %struct.page, ptr %8, i32 %shr.i.i
  %and.i.i43 = and i32 %10, 4095
  br label %if.end.i.i45

if.end.i.i45:                                     ; preds = %if.else.i.i, %if.then.i.i42
  %iter_all.sroa.0.1 = phi ptr [ %add.ptr.i.i, %if.else.i.i ], [ %incdec.ptr.i.i, %if.then.i.i42 ]
  %.sink.i.i = phi i32 [ %and.i.i43, %if.else.i.i ], [ 0, %if.then.i.i42 ]
  %sub.i.i44 = sub nuw nsw i32 4096, %.sink.i.i
  %bv_len.i.i = getelementptr %struct.bio_vec, ptr %6, i32 %iter_all.sroa.11.064, i32 1
  %11 = ptrtoint ptr %bv_len.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %bv_len.i.i, align 4
  %sub9.i.i = sub i32 %12, %iter_all.sroa.15.063
  %13 = tail call i32 @llvm.umin.i32(i32 %sub.i.i44, i32 %sub9.i.i) #14
  %add.i.i = add i32 %13, %iter_all.sroa.15.063
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %12)
  %cmp15.i.i = icmp eq i32 %add.i.i, %12
  %spec.select = select i1 %cmp15.i.i, i32 0, i32 %add.i.i
  %inc.i.i = zext i1 %cmp15.i.i to i32
  %spec.select58 = add nuw nsw i32 %iter_all.sroa.11.064, %inc.i.i
  %private = getelementptr inbounds %struct.page, ptr %iter_all.sroa.0.1, i32 0, i32 1, i32 0, i32 3
  %14 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %private, align 4
  %16 = inttoptr i32 %15 to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool5.not = icmp eq i32 %15, 0
  br i1 %tobool5.not, label %do.body14, label %do.end19, !prof !319

do.body14:                                        ; preds = %if.end.i.i45
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/extent_io.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4465, 0\0A.popsection", ""() #14, !srcloc !424
  unreachable

do.end19:                                         ; preds = %if.end.i.i45
  %io_pages = getelementptr inbounds %struct.extent_buffer, ptr %16, i32 0, i32 6
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %io_pages, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !352
  tail call void @llvm.prefetch.p0(ptr %io_pages, i32 1, i32 3, i32 1) #14
  %17 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %io_pages, ptr %io_pages, i32 1, ptr elementtype(i32) %io_pages) #14, !srcloc !353
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %17, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !354
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  %18 = ptrtoint ptr %bi_status to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %bi_status, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool22.not = icmp eq i8 %19, 0
  br i1 %tobool22.not, label %lor.lhs.false, label %do.end19.if.then25_crit_edge

do.end19.if.then25_crit_edge:                     ; preds = %do.end19
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then25

lor.lhs.false:                                    ; preds = %do.end19
  %bflags = getelementptr inbounds %struct.extent_buffer, ptr %16, i32 0, i32 2
  %20 = ptrtoint ptr %bflags to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %bflags, align 4
  %22 = and i32 %21, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool24.not = icmp eq i32 %22, 0
  br i1 %tobool24.not, label %lor.lhs.false.if.end26_crit_edge, label %lor.lhs.false.if.then25_crit_edge

lor.lhs.false.if.then25_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then25

lor.lhs.false.if.end26_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end26

if.then25:                                        ; preds = %lor.lhs.false.if.then25_crit_edge, %do.end19.if.then25_crit_edge
  %23 = getelementptr inbounds %struct.page, ptr %iter_all.sroa.0.1, i32 0, i32 1
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %23, align 4
  %and.i.i = and i32 %25, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %do.body7.i, label %if.then.i, !prof !322

if.then.i:                                        ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @dump_page(ptr noundef %iter_all.sroa.0.1, ptr noundef nonnull @.str.110) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 678, 0\0A.popsection", ""() #14, !srcloc !421
  unreachable

do.body7.i:                                       ; preds = %if.then25
  %26 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %23, align 4
  %and.i31.i = and i32 %27, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i31.i)
  %tobool.not.i.i = icmp eq i32 %and.i31.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !322

if.then.i.i:                                      ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %27, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #16
  %28 = ptrtoint ptr %iter_all.sroa.0.1 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %28, %if.end.i.i ]
  %29 = inttoptr i32 %retval.0.i.i to ptr
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %29, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %31)
  %cmp.i.not.i = icmp eq i32 %31, -1
  %32 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %23, align 4
  %and.i32.i = and i32 %33, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i32.i)
  %tobool.not.i33.i = icmp eq i32 %and.i32.i, 0
  br i1 %cmp.i.not.i, label %if.then17.i, label %do.end24.i, !prof !319

if.then17.i:                                      ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i33.i, label %if.end.i36.i, label %if.then.i35.i, !prof !322

if.then.i35.i:                                    ; preds = %if.then17.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i34.i = add i32 %33, -1
  br label %_compound_head.exit38.i

if.end.i36.i:                                     ; preds = %if.then17.i
  call void @__sanitizer_cov_trace_pc() #16
  %34 = ptrtoint ptr %iter_all.sroa.0.1 to i32
  br label %_compound_head.exit38.i

_compound_head.exit38.i:                          ; preds = %if.end.i36.i, %if.then.i35.i
  %retval.0.i37.i = phi i32 [ %sub.i34.i, %if.then.i35.i ], [ %34, %if.end.i36.i ]
  %35 = inttoptr i32 %retval.0.i37.i to ptr
  tail call void @dump_page(ptr noundef %35, ptr noundef nonnull @.str.86) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 678, 0\0A.popsection", ""() #14, !srcloc !422
  unreachable

do.end24.i:                                       ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i33.i, label %if.end.i43.i, label %if.then.i42.i, !prof !322

if.then.i42.i:                                    ; preds = %do.end24.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i41.i = add i32 %33, -1
  br label %ClearPageUptodate.exit

if.end.i43.i:                                     ; preds = %do.end24.i
  call void @__sanitizer_cov_trace_pc() #16
  %36 = ptrtoint ptr %iter_all.sroa.0.1 to i32
  br label %ClearPageUptodate.exit

ClearPageUptodate.exit:                           ; preds = %if.end.i43.i, %if.then.i42.i
  %retval.0.i44.i = phi i32 [ %sub.i41.i, %if.then.i42.i ], [ %36, %if.end.i43.i ]
  %37 = inttoptr i32 %retval.0.i44.i to ptr
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %37) #14
  tail call fastcc void @set_btree_ioerr(ptr noundef %iter_all.sroa.0.1, ptr noundef nonnull %16)
  br label %if.end26

if.end26:                                         ; preds = %ClearPageUptodate.exit, %lor.lhs.false.if.end26_crit_edge
  tail call void @end_page_writeback(ptr noundef %iter_all.sroa.0.1) #14
  br i1 %cmp.i.i, label %if.end29, label %if.end26.cleanup_crit_edge

if.end26.cleanup_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end29:                                         ; preds = %if.end26
  %bflags.i = getelementptr inbounds %struct.extent_buffer, ptr %16, i32 0, i32 2
  %38 = ptrtoint ptr %bflags.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %bflags.i, align 4
  %40 = and i32 %39, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool.not.i46 = icmp eq i32 %40, 0
  br i1 %tobool.not.i46, label %if.end29.end_extent_buffer_writeback.exit_crit_edge, label %if.then.i48

if.end29.end_extent_buffer_writeback.exit_crit_edge: ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  br label %end_extent_buffer_writeback.exit

if.then.i48:                                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  %fs_info.i = getelementptr inbounds %struct.extent_buffer, ptr %16, i32 0, i32 3
  %41 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %fs_info.i, align 8
  %43 = ptrtoint ptr %16 to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %16, align 8
  %len.i = getelementptr inbounds %struct.extent_buffer, ptr %16, i32 0, i32 1
  %45 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %len.i, align 8
  %conv.i47 = zext i32 %46 to i64
  tail call void @btrfs_zone_finish_endio(ptr noundef %42, i64 noundef %44, i64 noundef %conv.i47) #14
  br label %end_extent_buffer_writeback.exit

end_extent_buffer_writeback.exit:                 ; preds = %if.then.i48, %if.end29.end_extent_buffer_writeback.exit_crit_edge
  tail call void @_clear_bit(i32 noundef 6, ptr noundef %bflags.i) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !385
  tail call void @wake_up_bit(ptr noundef %bflags.i, i32 noundef 6) #14
  br label %cleanup

cleanup:                                          ; preds = %end_extent_buffer_writeback.exit, %if.end26.cleanup_crit_edge
  %47 = ptrtoint ptr %bi_vcnt.i to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %bi_vcnt.i, align 8
  %conv.i = zext i16 %48 to i32
  %cmp.not.i = icmp ult i32 %spec.select58, %conv.i
  br i1 %cmp.not.i, label %cleanup.if.end.i_crit_edge, label %cleanup.for.end_crit_edge

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

cleanup.if.end.i_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

for.end:                                          ; preds = %cleanup.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  tail call void @bio_put(ptr noundef %bio) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @end_page_writeback(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__pagevec_release(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace___extent_writepage(ptr noundef %page, ptr noundef %inode, ptr noundef %wbc) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint___extent_writepage, i32 0, i32 1), ptr blockaddress(@trace___extent_writepage, %do.body)) #14
          to label %if.end48 [label %do.body], !srcloc !326

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !322

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.49, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #16
  %9 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !425
  %call42 = tail call i32 @__traceiter___extent_writepage(ptr noundef null, ptr noundef %page, ptr noundef %inode, ptr noundef %wbc) #14
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !426
  %13 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !322

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.49, i32 noundef 108, i32 noundef 9, ptr noundef null) #14
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !329
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint___extent_writepage, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint___extent_writepage, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace___extent_writepage.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @trace___extent_writepage.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.47, i32 noundef 653, ptr noundef nonnull @.str.48) #14
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #14, !srcloc !330
  %31 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_page_clear_error(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @writepage_delalloc(ptr noundef %inode, ptr noundef %page, ptr noundef %wbc) unnamed_addr #8 align 64 {
entry:
  %delalloc_start = alloca i64, align 8
  %nr_written = alloca i32, align 4
  %page_started = alloca i32, align 4
  %delalloc_end = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %index.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 2
  %0 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %index.i, align 4
  %conv.i = zext i32 %1 to i64
  %shl.i = shl nuw nsw i64 %conv.i, 12
  %sub = or i64 %shl.i, 4095
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %delalloc_start) #14
  %2 = ptrtoint ptr %delalloc_start to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 %shl.i, ptr %delalloc_start, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %nr_written) #14
  %3 = ptrtoint ptr %nr_written to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %nr_written, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %page_started) #14
  %4 = ptrtoint ptr %page_started to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %page_started, align 4
  call void @__sanitizer_cov_trace_cmp8(i64 %shl.i, i64 %sub)
  %cmp70 = icmp ult i64 %shl.i, %sub
  br i1 %cmp70, label %while.body.lr.ph, label %entry.cleanup34_crit_edge

entry.cleanup34_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup34

while.body.lr.ph:                                 ; preds = %entry
  %vfs_inode = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 37
  br label %while.body

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %while.body.lr.ph
  %delalloc_to_write.071 = phi i64 [ 0, %while.body.lr.ph ], [ %delalloc_to_write.1, %cleanup.while.body_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %delalloc_end) #14
  %5 = ptrtoint ptr %delalloc_end to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %sub, ptr %delalloc_end, align 8
  %call2 = call zeroext i1 @find_lock_delalloc_range(ptr noundef %vfs_inode, ptr noundef %page, ptr noundef nonnull %delalloc_start, ptr noundef nonnull %delalloc_end)
  br i1 %call2, label %if.end, label %if.then

if.then:                                          ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  %6 = ptrtoint ptr %delalloc_end to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %delalloc_end, align 8
  br label %cleanup

if.end:                                           ; preds = %while.body
  %8 = ptrtoint ptr %delalloc_start to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %delalloc_start, align 8
  %10 = ptrtoint ptr %delalloc_end to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %delalloc_end, align 8
  %call4 = call i32 @btrfs_run_delalloc_range(ptr noundef %inode, ptr noundef %page, i64 noundef %9, i64 noundef %11, ptr noundef nonnull %page_started, ptr noundef nonnull %nr_written, ptr noundef %wbc) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.end8, label %cleanup.thread

cleanup.thread:                                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %12 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %inode, align 8
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %13, i32 0, i32 8
  %14 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %fs_info, align 8
  %16 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %index.i, align 4
  %conv.i64 = zext i32 %17 to i64
  %shl.i65 = shl nuw nsw i64 %conv.i64, 12
  call void @btrfs_page_set_error(ptr noundef %15, ptr noundef %page, i64 noundef %shl.i65, i32 noundef 4096) #14
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %delalloc_end) #14
  br label %cleanup34

if.end8:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %sub9 = sub i64 4096, %9
  %add10 = add i64 %sub9, %11
  %shr = lshr i64 %add10, 12
  %add11 = add i64 %shr, %delalloc_to_write.071
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.then
  %storemerge.in = phi i64 [ %7, %if.then ], [ %11, %if.end8 ]
  %delalloc_to_write.1 = phi i64 [ %delalloc_to_write.071, %if.then ], [ %add11, %if.end8 ]
  %storemerge = add i64 %storemerge.in, 1
  %18 = ptrtoint ptr %delalloc_start to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %storemerge, ptr %delalloc_start, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %delalloc_end) #14
  %cmp = icmp ult i64 %storemerge, %sub
  br i1 %cmp, label %cleanup.while.body_crit_edge, label %while.end

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

while.end:                                        ; preds = %cleanup
  %19 = ptrtoint ptr %wbc to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %wbc, align 8
  %conv = sext i32 %20 to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %delalloc_to_write.1, i64 %conv)
  %cmp14 = icmp ugt i64 %delalloc_to_write.1, %conv
  br i1 %cmp14, label %if.then16, label %while.end.if.end28_crit_edge

while.end.if.end28_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end28

if.then16:                                        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp8(i64 16384, i64 %delalloc_to_write.1)
  %cmp18 = icmp ult i64 %delalloc_to_write.1, 16384
  %conv21 = trunc i64 %delalloc_to_write.1 to i32
  %spec.select = select i1 %cmp18, i32 %conv21, i32 8192
  %21 = zext i32 %spec.select to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %delalloc_to_write.1, i64 %21)
  %cmp24 = icmp ult i64 %delalloc_to_write.1, %21
  %cond.off0 = select i1 %cmp24, i32 %conv21, i32 %spec.select
  %22 = ptrtoint ptr %wbc to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %cond.off0, ptr %wbc, align 8
  br label %if.end28

if.end28:                                         ; preds = %if.then16, %while.end.if.end28_crit_edge
  %23 = ptrtoint ptr %page_started to i32
  call void @__asan_load4_noabort(i32 %23)
  %.pr = load i32, ptr %page_started, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr)
  %tobool29.not = icmp eq i32 %.pr, 0
  br i1 %tobool29.not, label %if.end28.cleanup34_crit_edge, label %if.then30

if.end28.cleanup34_crit_edge:                     ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup34

if.then30:                                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  %24 = ptrtoint ptr %nr_written to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %nr_written, align 4
  %26 = ptrtoint ptr %wbc to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %wbc, align 8
  %sub32 = sub i32 %27, %25
  store i32 %sub32, ptr %wbc, align 8
  br label %cleanup34

cleanup34:                                        ; preds = %if.then30, %if.end28.cleanup34_crit_edge, %cleanup.thread, %entry.cleanup34_crit_edge
  %retval.2 = phi i32 [ 1, %if.then30 ], [ 0, %if.end28.cleanup34_crit_edge ], [ %call4, %cleanup.thread ], [ 0, %entry.cleanup34_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %page_started) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %nr_written) #14
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %delalloc_start) #14
  ret i32 %retval.2
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__extent_writepage_io(ptr noundef %inode, ptr noundef %page, ptr noundef %wbc, ptr noundef %epd, i64 noundef %i_size, ptr nocapture noundef writeonly %nr_ret) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %inode, align 8
  %fs_info1 = getelementptr inbounds %struct.btrfs_root, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %fs_info1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %fs_info1, align 8
  %index.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 2
  %4 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %index.i, align 4
  %conv.i = zext i32 %5 to i64
  %shl.i = shl nuw nsw i64 %conv.i, 12
  %add = add nuw nsw i64 %shl.i, 4096
  %sub = or i64 %shl.i, 4095
  %punt_to_cgroup.i = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 5
  %6 = ptrtoint ptr %punt_to_cgroup.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %bf.load.i = load i16, ptr %punt_to_cgroup.i, align 4
  %7 = and i16 %bf.load.i, 128
  %8 = zext i16 %7 to i32
  %9 = shl nuw nsw i32 %8, 15
  %sync_mode.i = getelementptr inbounds %struct.writeback_control, ptr %wbc, i32 0, i32 4
  %10 = ptrtoint ptr %sync_mode.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sync_mode.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %11)
  %cmp.i = icmp eq i32 %11, 1
  %12 = or i32 %9, 2048
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %bf.load.i)
  %13 = icmp ult i16 %bf.load.i, 16384
  %14 = or i32 %9, 1048576
  %spec.select.i = select i1 %13, i32 %9, i32 %14
  %flags.0.i = select i1 %cmp.i, i32 %12, i32 %spec.select.i
  %call3 = tail call i32 @btrfs_writepage_cow_fixup(ptr noundef %page) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call4 = tail call zeroext i1 @redirty_page_for_writepage(ptr noundef %wbc, ptr noundef %page) #14
  tail call void @unlock_page(ptr noundef %page) #14
  br label %cleanup141

if.end:                                           ; preds = %entry
  %15 = ptrtoint ptr %wbc to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %wbc, align 8
  %sub.i = add i32 %16, -1
  store i32 %sub.i, ptr %wbc, align 8
  %sectorsize.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 167
  %subpage_info.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 133
  %private.i = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1, i32 0, i32 3
  %sectorsize_bits.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 168
  %17 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %18 = ptrtoint ptr %page to i32
  br label %while.body

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %if.end
  %opf.0358 = phi i32 [ 1, %if.end ], [ %opf.2, %cleanup.while.body_crit_edge ]
  %nr.0357 = phi i32 [ 0, %if.end ], [ %nr.2, %cleanup.while.body_crit_edge ]
  %ret.0356 = phi i32 [ 0, %if.end ], [ %ret.1, %cleanup.while.body_crit_edge ]
  %cur.0355 = phi i64 [ %shl.i, %if.end ], [ %cur.1, %cleanup.while.body_crit_edge ]
  call void @__sanitizer_cov_trace_cmp8(i64 %cur.0355, i64 %i_size)
  %cmp5.not = icmp ult i64 %cur.0355, %i_size
  br i1 %cmp5.not, label %if.end9, label %if.then6

if.then6:                                         ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @btrfs_writepage_endio_finish_ordered(ptr noundef %inode, ptr noundef %page, i64 noundef %cur.0355, i64 noundef %sub, i1 noundef zeroext true) #14
  %sub8 = sub i64 %add, %cur.0355
  %conv = trunc i64 %sub8 to i32
  tail call void @btrfs_page_clear_dirty(ptr noundef %3, ptr noundef %page, i64 noundef %cur.0355, i32 noundef %conv) #14
  br label %while.end

if.end9:                                          ; preds = %while.body
  %19 = ptrtoint ptr %sectorsize.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %sectorsize.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %20)
  %cmp.i280 = icmp eq i32 %20, 4096
  br i1 %cmp.i280, label %if.then.i281, label %if.end.i

if.then.i281:                                     ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  %21 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %index.i, align 4
  %conv.i.i = zext i32 %22 to i64
  %shl.i.i = shl nuw nsw i64 %conv.i.i, 12
  %add.i = add nuw nsw i64 %shl.i.i, 4096
  br label %find_next_dirty_byte.exit

if.end.i:                                         ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  %23 = ptrtoint ptr %subpage_info.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %subpage_info.i, align 8
  %25 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %private.i, align 4
  %27 = inttoptr i32 %26 to ptr
  %dirty_offset.i = getelementptr inbounds %struct.btrfs_subpage_info, ptr %24, i32 0, i32 4
  %28 = ptrtoint ptr %dirty_offset.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %dirty_offset.i, align 4
  %conv.i282 = trunc i64 %cur.0355 to i32
  %and.i = and i32 %conv.i282, 4095
  %30 = ptrtoint ptr %sectorsize_bits.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %sectorsize_bits.i, align 8
  %shr.i283 = lshr i32 %and.i, %31
  %add2.i = add i32 %shr.i283, %29
  %call7.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %27) #14
  %bitmaps.i = getelementptr inbounds %struct.btrfs_subpage, ptr %27, i32 0, i32 3
  %32 = ptrtoint ptr %dirty_offset.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %dirty_offset.i, align 4
  %34 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %24, align 4
  %add11.i = add i32 %35, %33
  %call.i.i = tail call i32 @_find_next_bit_be(ptr noundef %bitmaps.i, i32 noundef %add11.i, i32 noundef %add2.i) #14
  %add.i.i = add i32 %call.i.i, 1
  %call1.i.i = tail call i32 @_find_next_zero_bit_be(ptr noundef %bitmaps.i, i32 noundef %add11.i, i32 noundef %add.i.i) #14
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %27, i32 noundef %call7.i) #14
  %36 = ptrtoint ptr %dirty_offset.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %dirty_offset.i, align 4
  %sub.i284 = sub i32 %call.i.i, %37
  %sub15.i = sub i32 %call1.i.i, %37
  %38 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %index.i, align 4
  %conv.i51.i = zext i32 %39 to i64
  %shl.i52.i = shl nuw nsw i64 %conv.i51.i, 12
  %40 = ptrtoint ptr %sectorsize.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %sectorsize.i, align 4
  %mul.i = mul i32 %41, %sub.i284
  %conv18.i = zext i32 %mul.i to i64
  %add19.i = add nuw nsw i64 %shl.i52.i, %conv18.i
  %mul22.i = mul i32 %41, %sub15.i
  %conv23.i = zext i32 %mul22.i to i64
  %add24.i = add nuw nsw i64 %shl.i52.i, %conv23.i
  br label %find_next_dirty_byte.exit

find_next_dirty_byte.exit:                        ; preds = %if.end.i, %if.then.i281
  %dirty_range_start.0 = phi i64 [ %shl.i.i, %if.then.i281 ], [ %add19.i, %if.end.i ]
  %storemerge.i = phi i64 [ %add.i, %if.then.i281 ], [ %add24.i, %if.end.i ]
  call void @__sanitizer_cov_trace_cmp8(i64 %cur.0355, i64 %dirty_range_start.0)
  %cmp10 = icmp ult i64 %cur.0355, %dirty_range_start.0
  br i1 %cmp10, label %find_next_dirty_byte.exit.cleanup_crit_edge, label %if.end13

find_next_dirty_byte.exit.cleanup_crit_edge:      ; preds = %find_next_dirty_byte.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end13:                                         ; preds = %find_next_dirty_byte.exit
  %sub14 = sub i64 %sub, %cur.0355
  %add15 = add i64 %sub14, 1
  %call16 = tail call ptr @btrfs_get_extent(ptr noundef %inode, ptr noundef null, i32 noundef 0, i64 noundef %cur.0355, i64 noundef %add15) #14
  %tobool.not.i = icmp eq ptr %call16, null
  %cmp.i285 = icmp ugt ptr %call16, inttoptr (i32 -4096 to ptr)
  %spec.select.i286 = or i1 %tobool.not.i, %cmp.i285
  br i1 %spec.select.i286, label %if.then18, label %if.end23

if.then18:                                        ; preds = %if.end13
  %conv21 = trunc i64 %add15 to i32
  tail call void @btrfs_page_set_error(ptr noundef %3, ptr noundef %page, i64 noundef %cur.0355, i32 noundef %conv21) #14
  %42 = ptrtoint ptr %call16 to i32
  br i1 %cmp.i285, label %if.then18.while.end_crit_edge, label %if.then18.if.then139_crit_edge

if.then18.if.then139_crit_edge:                   ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then139

if.then18.while.end_crit_edge:                    ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.end23:                                         ; preds = %if.end13
  %start = getelementptr inbounds %struct.extent_map, ptr %call16, i32 0, i32 1
  %43 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %start, align 8
  %sub24 = sub i64 %cur.0355, %44
  %len.i = getelementptr inbounds %struct.extent_map, ptr %call16, i32 0, i32 2
  %45 = ptrtoint ptr %len.i to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %len.i, align 8
  %47 = tail call i64 @llvm.uadd.sat.i64(i64 %44, i64 %46) #14
  call void @__sanitizer_cov_trace_cmp8(i64 %cur.0355, i64 %47)
  %cmp26.not = icmp ugt i64 %cur.0355, %47
  br i1 %cmp26.not, label %cond.false, label %cond.end, !prof !319

cond.false:                                       ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.112, i32 noundef 3962) #18
  unreachable

cond.end:                                         ; preds = %if.end23
  call void @__sanitizer_cov_trace_cmp8(i64 %sub, i64 %cur.0355)
  %cmp30 = icmp ugt i64 %sub, %cur.0355
  br i1 %cmp30, label %cond.end40, label %cond.false39, !prof !322

cond.false39:                                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.113, i32 noundef 3963) #18
  unreachable

cond.end40:                                       ; preds = %cond.end
  %48 = ptrtoint ptr %sectorsize.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %sectorsize.i, align 4
  %conv42 = zext i32 %49 to i64
  %sub43 = add nsw i64 %conv42, -1
  %and = and i64 %sub43, %44
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %cmp44 = icmp eq i64 %and, 0
  br i1 %cmp44, label %cond.end54, label %cond.false53, !prof !322

cond.false53:                                     ; preds = %cond.end40
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.114, i32 noundef 3964) #18
  unreachable

cond.end54:                                       ; preds = %cond.end40
  %and58 = and i64 %sub43, %46
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and58)
  %cmp59 = icmp eq i64 %and58, 0
  br i1 %cmp59, label %cond.end69, label %cond.false68, !prof !322

cond.false68:                                     ; preds = %cond.end54
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.115, i32 noundef 3965) #18
  unreachable

cond.end69:                                       ; preds = %cond.end54
  %block_start70 = getelementptr inbounds %struct.extent_map, ptr %call16, i32 0, i32 8
  %50 = ptrtoint ptr %block_start70 to i32
  call void @__asan_load8_noabort(i32 %50)
  %51 = load i64, ptr %block_start70, align 8
  %flags = getelementptr inbounds %struct.extent_map, ptr %call16, i32 0, i32 11
  %52 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %flags, align 4
  %.fr306 = freeze i32 %53
  %54 = and i32 %.fr306, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool72.not = icmp eq i32 %54, 0
  %add74 = add i64 %sub24, %51
  %55 = tail call i64 @llvm.umin.i64(i64 %47, i64 %add)
  %56 = tail call i64 @llvm.umin.i64(i64 %55, i64 %storemerge.i)
  %sub88 = sub i64 %56, %cur.0355
  %conv89 = trunc i64 %sub88 to i32
  %call91 = tail call zeroext i1 @btrfs_use_zone_append(ptr noundef %inode, i64 noundef %51) #14
  %opf.1 = select i1 %call91, i32 13, i32 %opf.0358
  tail call void @free_extent_map(ptr noundef nonnull %call16) #14
  %57 = add i64 %51, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 -2, i64 %57)
  %switch255 = icmp ult i64 %57, -2
  %58 = and i1 %switch255, %tobool72.not
  br i1 %58, label %if.end110, label %if.then101

if.then101:                                       ; preds = %cond.end69
  br i1 %tobool72.not, label %if.else, label %if.then103

if.then103:                                       ; preds = %if.then101
  call void @__sanitizer_cov_trace_pc() #16
  %inc = add i32 %nr.0357, 1
  %.pre = and i64 %sub88, 4294967295
  br label %if.end107

if.else:                                          ; preds = %if.then101
  call void @__sanitizer_cov_trace_pc() #16
  %conv104 = and i64 %sub88, 4294967295
  %add105 = add i64 %cur.0355, -1
  %sub106 = add i64 %add105, %conv104
  tail call void @btrfs_writepage_endio_finish_ordered(ptr noundef %inode, ptr noundef %page, i64 noundef %cur.0355, i64 noundef %sub106, i1 noundef zeroext true) #14
  br label %if.end107

if.end107:                                        ; preds = %if.else, %if.then103
  %conv108.pre-phi = phi i64 [ %conv104, %if.else ], [ %.pre, %if.then103 ]
  %nr.1 = phi i32 [ %nr.0357, %if.else ], [ %inc, %if.then103 ]
  tail call void @btrfs_page_clear_dirty(ptr noundef %3, ptr noundef %page, i64 noundef %cur.0355, i32 noundef %conv89) #14
  %add109 = add i64 %conv108.pre-phi, %cur.0355
  br label %cleanup

if.end110:                                        ; preds = %cond.end69
  %conv111 = and i64 %sub88, 4294967295
  %add112 = add i64 %conv111, %cur.0355
  %sub113 = add i64 %add112, -1
  tail call void @btrfs_set_range_writeback(ptr noundef %inode, i64 noundef %cur.0355, i64 noundef %sub113) #14
  %59 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %17, align 4
  %and.i.i = and i32 %60, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end110._compound_head.exit.i_crit_edge, label %if.then.i.i, !prof !322

if.end110._compound_head.exit.i_crit_edge:        ; preds = %if.end110
  call void @__sanitizer_cov_trace_pc() #16
  br label %_compound_head.exit.i

if.then.i.i:                                      ; preds = %if.end110
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %60, -1
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.then.i.i, %if.end110._compound_head.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %18, %if.end110._compound_head.exit.i_crit_edge ]
  %61 = inttoptr i32 %retval.0.i.i to ptr
  %62 = ptrtoint ptr %61 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %61, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %63)
  %cmp.i.not.i = icmp eq i32 %63, -1
  %64 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile i32, ptr %17, align 4
  %and.i16.i = and i32 %65, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i)
  %tobool.not.i17.i = icmp eq i32 %and.i16.i, 0
  br i1 %cmp.i.not.i, label %if.then.i, label %do.end10.i, !prof !319

if.then.i:                                        ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %if.then.i._compound_head.exit22.i_crit_edge, label %if.then.i19.i, !prof !322

if.then.i._compound_head.exit22.i_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %_compound_head.exit22.i

if.then.i19.i:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i18.i = add i32 %65, -1
  br label %_compound_head.exit22.i

_compound_head.exit22.i:                          ; preds = %if.then.i19.i, %if.then.i._compound_head.exit22.i_crit_edge
  %retval.0.i21.i = phi i32 [ %sub.i18.i, %if.then.i19.i ], [ %18, %if.then.i._compound_head.exit22.i_crit_edge ]
  %66 = inttoptr i32 %retval.0.i21.i to ptr
  tail call void @dump_page(ptr noundef %66, ptr noundef nonnull @.str.86) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 461, 0\0A.popsection", ""() #14, !srcloc !392
  unreachable

do.end10.i:                                       ; preds = %_compound_head.exit.i
  br i1 %tobool.not.i17.i, label %do.end10.i.PageWriteback.exit_crit_edge, label %if.then.i26.i, !prof !322

do.end10.i.PageWriteback.exit_crit_edge:          ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %PageWriteback.exit

if.then.i26.i:                                    ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i25.i = add i32 %65, -1
  br label %PageWriteback.exit

PageWriteback.exit:                               ; preds = %if.then.i26.i, %do.end10.i.PageWriteback.exit_crit_edge
  %retval.0.i28.i = phi i32 [ %sub.i25.i, %if.then.i26.i ], [ %18, %do.end10.i.PageWriteback.exit_crit_edge ]
  %67 = inttoptr i32 %retval.0.i28.i to ptr
  %68 = ptrtoint ptr %67 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile i32, ptr %67, align 4
  %70 = and i32 %69, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %70)
  %tobool115.not = icmp eq i32 %70, 0
  br i1 %tobool115.not, label %if.then116, label %PageWriteback.exit.if.end119_crit_edge

PageWriteback.exit.if.end119_crit_edge:           ; preds = %PageWriteback.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end119

if.then116:                                       ; preds = %PageWriteback.exit
  call void @__sanitizer_cov_trace_pc() #16
  %71 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %inode, align 8
  %fs_info118 = getelementptr inbounds %struct.btrfs_root, ptr %72, i32 0, i32 8
  %73 = ptrtoint ptr %fs_info118 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %fs_info118, align 8
  %75 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %index.i, align 4
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %74, ptr noundef nonnull @.str.116, i32 noundef %76, i64 noundef %cur.0355, i64 noundef %sub) #17
  br label %if.end119

if.end119:                                        ; preds = %if.then116, %PageWriteback.exit.if.end119_crit_edge
  tail call void @btrfs_page_clear_dirty(ptr noundef %3, ptr noundef %page, i64 noundef %cur.0355, i32 noundef %conv89) #14
  %or = or i32 %opf.1, %flags.0.i
  %77 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %index.i, align 4
  %conv.i289 = zext i32 %78 to i64
  %shl.i290.neg = mul nuw i64 %conv.i289, 4294963200
  %sub121 = add i64 %shl.i290.neg, %cur.0355
  %conv122 = trunc i64 %sub121 to i32
  %call123 = tail call fastcc i32 @submit_extent_page(i32 noundef %or, ptr noundef %wbc, ptr noundef %epd, ptr noundef %page, i64 noundef %add74, i32 noundef %conv89, i32 noundef %conv122, ptr noundef nonnull @end_bio_extent_writepage, i32 noundef 0, i32 noundef 0, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call123)
  %tobool124.not = icmp eq i32 %call123, 0
  br i1 %tobool124.not, label %if.end119.if.end130_crit_edge, label %if.then125

if.end119.if.end130_crit_edge:                    ; preds = %if.end119
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end130

if.then125:                                       ; preds = %if.end119
  tail call void @btrfs_page_set_error(ptr noundef %3, ptr noundef %page, i64 noundef %cur.0355, i32 noundef %conv89) #14
  %79 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load volatile i32, ptr %17, align 4
  %and.i.i256 = and i32 %80, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i256)
  %tobool.not.i.i257 = icmp eq i32 %and.i.i256, 0
  br i1 %tobool.not.i.i257, label %if.then125._compound_head.exit.i265_crit_edge, label %if.then.i.i259, !prof !322

if.then125._compound_head.exit.i265_crit_edge:    ; preds = %if.then125
  call void @__sanitizer_cov_trace_pc() #16
  br label %_compound_head.exit.i265

if.then.i.i259:                                   ; preds = %if.then125
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i258 = add i32 %80, -1
  br label %_compound_head.exit.i265

_compound_head.exit.i265:                         ; preds = %if.then.i.i259, %if.then125._compound_head.exit.i265_crit_edge
  %retval.0.i.i261 = phi i32 [ %sub.i.i258, %if.then.i.i259 ], [ %18, %if.then125._compound_head.exit.i265_crit_edge ]
  %81 = inttoptr i32 %retval.0.i.i261 to ptr
  %82 = ptrtoint ptr %81 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load volatile i32, ptr %81, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %83)
  %cmp.i.not.i262 = icmp eq i32 %83, -1
  %84 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load volatile i32, ptr %17, align 4
  %and.i16.i263 = and i32 %85, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i16.i263)
  %tobool.not.i17.i264 = icmp eq i32 %and.i16.i263, 0
  br i1 %cmp.i.not.i262, label %if.then.i266, label %do.end10.i272, !prof !319

if.then.i266:                                     ; preds = %_compound_head.exit.i265
  br i1 %tobool.not.i17.i264, label %if.then.i266._compound_head.exit22.i271_crit_edge, label %if.then.i19.i268, !prof !322

if.then.i266._compound_head.exit22.i271_crit_edge: ; preds = %if.then.i266
  call void @__sanitizer_cov_trace_pc() #16
  br label %_compound_head.exit22.i271

if.then.i19.i268:                                 ; preds = %if.then.i266
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i18.i267 = add i32 %85, -1
  br label %_compound_head.exit22.i271

_compound_head.exit22.i271:                       ; preds = %if.then.i19.i268, %if.then.i266._compound_head.exit22.i271_crit_edge
  %retval.0.i21.i270 = phi i32 [ %sub.i18.i267, %if.then.i19.i268 ], [ %18, %if.then.i266._compound_head.exit22.i271_crit_edge ]
  %86 = inttoptr i32 %retval.0.i21.i270 to ptr
  tail call void @dump_page(ptr noundef %86, ptr noundef nonnull @.str.86) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 461, 0\0A.popsection", ""() #14, !srcloc !392
  unreachable

do.end10.i272:                                    ; preds = %_compound_head.exit.i265
  br i1 %tobool.not.i17.i264, label %do.end10.i272.PageWriteback.exit279_crit_edge, label %if.then.i26.i274, !prof !322

do.end10.i272.PageWriteback.exit279_crit_edge:    ; preds = %do.end10.i272
  call void @__sanitizer_cov_trace_pc() #16
  br label %PageWriteback.exit279

if.then.i26.i274:                                 ; preds = %do.end10.i272
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i25.i273 = add i32 %85, -1
  br label %PageWriteback.exit279

PageWriteback.exit279:                            ; preds = %if.then.i26.i274, %do.end10.i272.PageWriteback.exit279_crit_edge
  %retval.0.i28.i276 = phi i32 [ %sub.i25.i273, %if.then.i26.i274 ], [ %18, %do.end10.i272.PageWriteback.exit279_crit_edge ]
  %87 = inttoptr i32 %retval.0.i28.i276 to ptr
  %88 = ptrtoint ptr %87 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load volatile i32, ptr %87, align 4
  %90 = and i32 %89, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %90)
  %tobool127.not = icmp eq i32 %90, 0
  br i1 %tobool127.not, label %PageWriteback.exit279.if.end130_crit_edge, label %if.then128

PageWriteback.exit279.if.end130_crit_edge:        ; preds = %PageWriteback.exit279
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end130

if.then128:                                       ; preds = %PageWriteback.exit279
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @btrfs_page_clear_writeback(ptr noundef %3, ptr noundef %page, i64 noundef %cur.0355, i32 noundef %conv89) #14
  br label %if.end130

if.end130:                                        ; preds = %if.then128, %PageWriteback.exit279.if.end130_crit_edge, %if.end119.if.end130_crit_edge
  %inc133 = add i32 %nr.0357, 1
  br label %cleanup

cleanup:                                          ; preds = %if.end130, %if.end107, %find_next_dirty_byte.exit.cleanup_crit_edge
  %cur.1 = phi i64 [ %add109, %if.end107 ], [ %add112, %if.end130 ], [ %dirty_range_start.0, %find_next_dirty_byte.exit.cleanup_crit_edge ]
  %ret.1 = phi i32 [ %ret.0356, %if.end107 ], [ %call123, %if.end130 ], [ %ret.0356, %find_next_dirty_byte.exit.cleanup_crit_edge ]
  %nr.2 = phi i32 [ %nr.1, %if.end107 ], [ %inc133, %if.end130 ], [ %nr.0357, %find_next_dirty_byte.exit.cleanup_crit_edge ]
  %opf.2 = phi i32 [ %opf.1, %if.end107 ], [ %opf.1, %if.end130 ], [ %opf.0358, %find_next_dirty_byte.exit.cleanup_crit_edge ]
  %cmp.not = icmp ult i64 %sub, %cur.1
  br i1 %cmp.not, label %cleanup.while.end_crit_edge, label %cleanup.while.body_crit_edge

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

cleanup.while.end_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %cleanup.while.end_crit_edge, %if.then18.while.end_crit_edge, %if.then6
  %nr.0317 = phi i32 [ %nr.0357, %if.then6 ], [ %nr.0357, %if.then18.while.end_crit_edge ], [ %nr.2, %cleanup.while.end_crit_edge ]
  %ret.2 = phi i32 [ %ret.0356, %if.then6 ], [ %42, %if.then18.while.end_crit_edge ], [ %ret.1, %cleanup.while.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.2)
  %tobool138.not = icmp eq i32 %ret.2, 0
  br i1 %tobool138.not, label %while.end.if.then139_crit_edge, label %while.end.if.end140_crit_edge

while.end.if.end140_crit_edge:                    ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end140

while.end.if.then139_crit_edge:                   ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then139

if.then139:                                       ; preds = %while.end.if.then139_crit_edge, %if.then18.if.then139_crit_edge
  %nr.0316 = phi i32 [ %nr.0357, %if.then18.if.then139_crit_edge ], [ %nr.0317, %while.end.if.then139_crit_edge ]
  tail call void @btrfs_page_assert_not_dirty(ptr noundef %3, ptr noundef %page) #14
  br label %if.end140

if.end140:                                        ; preds = %if.then139, %while.end.if.end140_crit_edge
  %nr.0315 = phi i32 [ %nr.0316, %if.then139 ], [ %nr.0317, %while.end.if.end140_crit_edge ]
  %ret.2302 = phi i32 [ 0, %if.then139 ], [ %ret.2, %while.end.if.end140_crit_edge ]
  %91 = ptrtoint ptr %nr_ret to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 %nr.0315, ptr %nr_ret, align 4
  br label %cleanup141

cleanup141:                                       ; preds = %if.end140, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ %ret.2302, %if.end140 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_page_unlock_writer(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter___extent_writepage(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_run_delalloc_range(ptr noundef, ptr noundef, i64 noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_writepage_cow_fixup(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @redirty_page_for_writepage(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_page_clear_dirty(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @btrfs_use_zone_append(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_set_range_writeback(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @end_bio_extent_writepage(ptr noundef %bio) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %bi_status = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 6
  %0 = ptrtoint ptr %bi_status to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %bi_status, align 2
  %call = tail call i32 @blk_status_to_errno(i8 noundef zeroext %1) #14
  %bi_flags.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 3
  %2 = ptrtoint ptr %bi_flags.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %bi_flags.i, align 4
  %4 = and i16 %3, 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %4)
  %cmp.i.not = icmp eq i16 %4, 0
  br i1 %cmp.i.not, label %for.cond.preheader, label %cond.false, !prof !322

for.cond.preheader:                               ; preds = %entry
  %bi_vcnt.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 17
  %5 = ptrtoint ptr %bi_vcnt.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %bi_vcnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %6)
  %cmp.not.i73.not = icmp eq i16 %6, 0
  br i1 %cmp.not.i73.not, label %for.cond.preheader.for.end_crit_edge, label %if.end.i.i.peel

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

if.end.i.i.peel:                                  ; preds = %for.cond.preheader
  %bi_io_vec.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 20
  %7 = ptrtoint ptr %bi_io_vec.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %bi_io_vec.i, align 8
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 4
  %bv_offset3.i.i.peel = getelementptr %struct.bio_vec, ptr %8, i32 0, i32 2
  %11 = ptrtoint ptr %bv_offset3.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %bv_offset3.i.i.peel, align 4
  %shr.i.i.peel = lshr i32 %12, 12
  %add.ptr.i.i.peel = getelementptr %struct.page, ptr %10, i32 %shr.i.i.peel
  %and.i.i.peel = and i32 %12, 4095
  %sub.i.i.peel = sub nuw nsw i32 4096, %and.i.i.peel
  %bv_len.i.i.peel = getelementptr %struct.bio_vec, ptr %8, i32 0, i32 1
  %13 = ptrtoint ptr %bv_len.i.i.peel to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %bv_len.i.i.peel, align 4
  %15 = tail call i32 @llvm.umin.i32(i32 %sub.i.i.peel, i32 %14) #14
  call void @__sanitizer_cov_trace_cmp4(i32 %14, i32 %sub.i.i.peel)
  %cmp15.i.i.peel = icmp ule i32 %14, %sub.i.i.peel
  %spec.select.peel = select i1 %cmp15.i.i.peel, i32 0, i32 %15
  %inc.i.i.peel = zext i1 %cmp15.i.i.peel to i32
  %mapping.peel = getelementptr %struct.page, ptr %10, i32 %shr.i.i.peel, i32 1, i32 0, i32 1
  %16 = ptrtoint ptr %mapping.peel to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %mapping.peel, align 4
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %17, align 4
  %i_sb.peel = getelementptr inbounds %struct.inode, ptr %19, i32 0, i32 8
  %20 = ptrtoint ptr %i_sb.peel to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %i_sb.peel, align 4
  %s_fs_info.i.peel = getelementptr inbounds %struct.super_block, ptr %21, i32 0, i32 33
  %22 = ptrtoint ptr %s_fs_info.i.peel to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %s_fs_info.i.peel, align 16
  %sectorsize7.peel = getelementptr inbounds %struct.btrfs_fs_info, ptr %23, i32 0, i32 167
  %24 = ptrtoint ptr %sectorsize7.peel to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %sectorsize7.peel, align 4
  %sub.peel = add i32 %25, -1
  %and.peel = and i32 %sub.peel, %and.i.i.peel
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.peel)
  %cmp.peel = icmp eq i32 %and.peel, 0
  br i1 %cmp.peel, label %if.else.peel, label %if.end.i.i.peel.if.end25.peel.sink.split_crit_edge

if.end.i.i.peel.if.end25.peel.sink.split_crit_edge: ; preds = %if.end.i.i.peel
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end25.peel.sink.split

if.else.peel:                                     ; preds = %if.end.i.i.peel
  %and11.peel = and i32 %sub.peel, %15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11.peel)
  %cmp12.peel = icmp eq i32 %and11.peel, 0
  br i1 %cmp12.peel, label %if.else.peel.if.end25.peel_crit_edge, label %if.else.peel.if.end25.peel.sink.split_crit_edge

if.else.peel.if.end25.peel.sink.split_crit_edge:  ; preds = %if.else.peel
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end25.peel.sink.split

if.else.peel.if.end25.peel_crit_edge:             ; preds = %if.else.peel
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end25.peel

if.end25.peel.sink.split:                         ; preds = %if.else.peel.if.end25.peel.sink.split_crit_edge, %if.end.i.i.peel.if.end25.peel.sink.split_crit_edge
  %.str.118.sink = phi ptr [ @.str.117, %if.end.i.i.peel.if.end25.peel.sink.split_crit_edge ], [ @.str.118, %if.else.peel.if.end25.peel.sink.split_crit_edge ]
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %23, ptr noundef nonnull %.str.118.sink, i32 noundef %and.i.i.peel, i32 noundef %15) #17
  br label %if.end25.peel

if.end25.peel:                                    ; preds = %if.end25.peel.sink.split, %if.else.peel.if.end25.peel_crit_edge
  %index.i.peel = getelementptr %struct.page, ptr %10, i32 %shr.i.i.peel, i32 1, i32 0, i32 2
  %26 = ptrtoint ptr %index.i.peel to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %index.i.peel, align 4
  %conv.i53.peel = zext i32 %27 to i64
  %shl.i.peel = shl nuw nsw i64 %conv.i53.peel, 12
  %conv.peel = zext i32 %and.i.i.peel to i64
  %add.peel = or i64 %shl.i.peel, %conv.peel
  %conv20.peel = zext i32 %15 to i64
  %add21.peel = add nsw i64 %conv20.peel, -1
  %sub22.peel = add nsw i64 %add21.peel, %add.peel
  tail call void @btrfs_record_physical_zoned(ptr noundef %19, i64 noundef %add.peel, ptr noundef %bio) #14
  tail call void @end_extent_writepage(ptr noundef %add.ptr.i.i.peel, i32 noundef %call, i64 noundef %add.peel, i64 noundef %sub22.peel)
  tail call void @btrfs_page_clear_writeback(ptr noundef %23, ptr noundef %add.ptr.i.i.peel, i64 noundef %add.peel, i32 noundef %15) #14
  %28 = ptrtoint ptr %bi_vcnt.i to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %bi_vcnt.i, align 8
  %30 = zext i1 %cmp15.i.i.peel to i16
  call void @__sanitizer_cov_trace_cmp2(i16 %29, i16 %30)
  %cmp.not.i.peel = icmp ugt i16 %29, %30
  br i1 %cmp.not.i.peel, label %if.end25.peel.if.end.i_crit_edge, label %if.end25.peel.for.end_crit_edge

if.end25.peel.for.end_crit_edge:                  ; preds = %if.end25.peel
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

if.end25.peel.if.end.i_crit_edge:                 ; preds = %if.end25.peel
  br label %if.end.i

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.93, i32 noundef 2836) #18
  unreachable

if.end.i:                                         ; preds = %if.end25.if.end.i_crit_edge, %if.end25.peel.if.end.i_crit_edge
  %iter_all.sroa.0.076 = phi ptr [ %iter_all.sroa.0.1, %if.end25.if.end.i_crit_edge ], [ %add.ptr.i.i.peel, %if.end25.peel.if.end.i_crit_edge ]
  %iter_all.sroa.17.075 = phi i32 [ %spec.select71, %if.end25.if.end.i_crit_edge ], [ %inc.i.i.peel, %if.end25.peel.if.end.i_crit_edge ]
  %iter_all.sroa.21.074 = phi i32 [ %spec.select, %if.end25.if.end.i_crit_edge ], [ %spec.select.peel, %if.end25.peel.if.end.i_crit_edge ]
  %31 = ptrtoint ptr %bi_io_vec.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %bi_io_vec.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %iter_all.sroa.21.074)
  %tobool.not.i.i = icmp eq i32 %iter_all.sroa.21.074, 0
  br i1 %tobool.not.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %incdec.ptr.i.i = getelementptr %struct.page, ptr %iter_all.sroa.0.076, i32 1
  br label %if.end.i.i

if.else.i.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i = getelementptr %struct.bio_vec, ptr %32, i32 %iter_all.sroa.17.075
  %33 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %arrayidx.i, align 4
  %bv_offset3.i.i = getelementptr %struct.bio_vec, ptr %32, i32 %iter_all.sroa.17.075, i32 2
  %35 = ptrtoint ptr %bv_offset3.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %bv_offset3.i.i, align 4
  %shr.i.i = lshr i32 %36, 12
  %add.ptr.i.i = getelementptr %struct.page, ptr %34, i32 %shr.i.i
  %and.i.i = and i32 %36, 4095
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else.i.i, %if.then.i.i
  %iter_all.sroa.0.1 = phi ptr [ %add.ptr.i.i, %if.else.i.i ], [ %incdec.ptr.i.i, %if.then.i.i ]
  %.sink.i.i = phi i32 [ %and.i.i, %if.else.i.i ], [ 0, %if.then.i.i ]
  %sub.i.i = sub nuw nsw i32 4096, %.sink.i.i
  %bv_len.i.i = getelementptr %struct.bio_vec, ptr %32, i32 %iter_all.sroa.17.075, i32 1
  %37 = ptrtoint ptr %bv_len.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %bv_len.i.i, align 4
  %sub9.i.i = sub i32 %38, %iter_all.sroa.21.074
  %39 = tail call i32 @llvm.umin.i32(i32 %sub.i.i, i32 %sub9.i.i) #14
  %add.i.i = add i32 %39, %iter_all.sroa.21.074
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %38)
  %cmp15.i.i = icmp eq i32 %add.i.i, %38
  %spec.select = select i1 %cmp15.i.i, i32 0, i32 %add.i.i
  %inc.i.i = zext i1 %cmp15.i.i to i32
  %spec.select71 = add nuw nsw i32 %iter_all.sroa.17.075, %inc.i.i
  %mapping = getelementptr inbounds %struct.page, ptr %iter_all.sroa.0.1, i32 0, i32 1, i32 0, i32 1
  %40 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %mapping, align 4
  %42 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %41, align 4
  %i_sb = getelementptr inbounds %struct.inode, ptr %43, i32 0, i32 8
  %44 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %45, i32 0, i32 33
  %46 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %s_fs_info.i, align 16
  %sectorsize7 = getelementptr inbounds %struct.btrfs_fs_info, ptr %47, i32 0, i32 167
  %48 = ptrtoint ptr %sectorsize7 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %sectorsize7, align 4
  %sub = add i32 %49, -1
  %and = and i32 %sub, %.sink.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %if.else, label %if.end.i.i.if.end25.sink.split_crit_edge

if.end.i.i.if.end25.sink.split_crit_edge:         ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end25.sink.split

if.else:                                          ; preds = %if.end.i.i
  %and11 = and i32 %sub, %39
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11)
  %cmp12 = icmp eq i32 %and11, 0
  br i1 %cmp12, label %if.else.if.end25_crit_edge, label %if.else.if.end25.sink.split_crit_edge

if.else.if.end25.sink.split_crit_edge:            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end25.sink.split

if.else.if.end25_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end25

if.end25.sink.split:                              ; preds = %if.else.if.end25.sink.split_crit_edge, %if.end.i.i.if.end25.sink.split_crit_edge
  %.str.117.sink = phi ptr [ @.str.117, %if.end.i.i.if.end25.sink.split_crit_edge ], [ @.str.118, %if.else.if.end25.sink.split_crit_edge ]
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %47, ptr noundef nonnull %.str.117.sink, i32 noundef %.sink.i.i, i32 noundef %39) #17
  br label %if.end25

if.end25:                                         ; preds = %if.end25.sink.split, %if.else.if.end25_crit_edge
  %index.i = getelementptr inbounds %struct.page, ptr %iter_all.sroa.0.1, i32 0, i32 1, i32 0, i32 2
  %50 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %index.i, align 4
  %conv.i53 = zext i32 %51 to i64
  %shl.i = shl nuw nsw i64 %conv.i53, 12
  %conv = zext i32 %.sink.i.i to i64
  %add = or i64 %shl.i, %conv
  %conv20 = zext i32 %39 to i64
  %add21 = add nsw i64 %conv20, -1
  %sub22 = add nsw i64 %add21, %add
  tail call void @end_extent_writepage(ptr noundef %iter_all.sroa.0.1, i32 noundef %call, i64 noundef %add, i64 noundef %sub22)
  tail call void @btrfs_page_clear_writeback(ptr noundef %47, ptr noundef %iter_all.sroa.0.1, i64 noundef %add, i32 noundef %39) #14
  %52 = ptrtoint ptr %bi_vcnt.i to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %bi_vcnt.i, align 8
  %conv.i = zext i16 %53 to i32
  %cmp.not.i = icmp ult i32 %spec.select71, %conv.i
  br i1 %cmp.not.i, label %if.end25.if.end.i_crit_edge, label %if.end25.for.end_crit_edge, !llvm.loop !427

if.end25.for.end_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

if.end25.if.end.i_crit_edge:                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

for.end:                                          ; preds = %if.end25.for.end_crit_edge, %if.end25.peel.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  tail call void @bio_put(ptr noundef %bio) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_page_clear_writeback(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_page_assert_not_dirty(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_next_bit_be(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_next_zero_bit_be(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_record_physical_zoned(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @wbc_attach_and_unlock_inode(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__inode_attach_wb(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_inode_lock(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @igrab(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_add_delayed_iput(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_inode_unlock(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xas_find(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_lock_and_flush_ordered_range(ptr noundef, i64 noundef, i64 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_get_extent_fiemap(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @fiemap_fill_next_extent(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_rwsem(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__alloc_pages(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @btrfs_release_extent_buffer_pages(ptr noundef %eb) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %io_pages.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 6
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %io_pages.i, i32 noundef 4) #14
  %0 = ptrtoint ptr %io_pages.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %io_pages.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not.i = icmp eq i32 %1, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %entry.cond.false_crit_edge

entry.cond.false_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.false

lor.lhs.false.i:                                  ; preds = %entry
  %bflags.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 2
  %2 = ptrtoint ptr %bflags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %bflags.i, align 4
  %4 = and i32 %3, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool2.not.i = icmp eq i32 %4, 0
  br i1 %tobool2.not.i, label %extent_buffer_under_io.exit, label %lor.lhs.false.i.cond.false_crit_edge

lor.lhs.false.i.cond.false_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.false

extent_buffer_under_io.exit:                      ; preds = %lor.lhs.false.i
  %5 = ptrtoint ptr %bflags.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %bflags.i, align 4
  %7 = and i32 %6, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not = icmp eq i32 %7, 0
  br i1 %tobool.not, label %cond.end, label %extent_buffer_under_io.exit.cond.false_crit_edge, !prof !322

extent_buffer_under_io.exit.cond.false_crit_edge: ; preds = %extent_buffer_under_io.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.false

cond.false:                                       ; preds = %extent_buffer_under_io.exit.cond.false_crit_edge, %lor.lhs.false.i.cond.false_crit_edge, %entry.cond.false_crit_edge
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.126, i32 noundef 5838) #18
  unreachable

cond.end:                                         ; preds = %extent_buffer_under_io.exit
  %len.i = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %8 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %len.i, align 8
  %shr.i = lshr i32 %9, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %9)
  %tobool.not.i13 = icmp ult i32 %9, 4096
  %shr..i = select i1 %tobool.not.i13, i32 1, i32 %shr.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %shr..i)
  %cmp15.not = icmp eq i32 %shr..i, 0
  br i1 %cmp15.not, label %cond.end.for.end_crit_edge, label %cond.end.for.body_crit_edge

cond.end.for.body_crit_edge:                      ; preds = %cond.end
  br label %for.body

cond.end.for.end_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %cond.end.for.body_crit_edge
  %i.016 = phi i32 [ %inc, %cleanup.for.body_crit_edge ], [ 0, %cond.end.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.extent_buffer, ptr %eb, i32 0, i32 12, i32 %i.016
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx, align 4
  %tobool5.not = icmp eq ptr %11, null
  br i1 %tobool5.not, label %for.body.cleanup_crit_edge, label %if.end

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %for.body
  tail call fastcc void @detach_extent_buffer_page(ptr noundef %eb, ptr noundef nonnull %11)
  %12 = getelementptr inbounds %struct.page, ptr %11, i32 0, i32 1
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %12, align 4
  %and.i.i = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !322

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %sub.i.i = add i32 %14, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %15 = ptrtoint ptr %11 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %15, %if.end.i.i ]
  %16 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %16, i32 0, i32 3
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #14
  %17 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp.i.i.i.i = icmp eq i32 %18, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !319

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %19 = inttoptr i32 %retval.0.i.i to ptr
  tail call void @dump_page(ptr noundef %19, ptr noundef nonnull @.str.57) #14
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #14, !srcloc !351
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !352
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #14
  %20 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #14, !srcloc !353
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %20, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #14, !srcloc !354
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@btrfs_release_extent_buffer_pages, %if.then.i.i.i.i.i)) #14
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !326

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %16, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #14
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.cleanup_crit_edge

folio_put_testzero.exit.i.i.cleanup_crit_edge:    ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @__put_page(ptr noundef %16) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.cleanup_crit_edge, %for.body.cleanup_crit_edge
  %inc = add nuw nsw i32 %i.016, 1
  %exitcond.not = icmp eq i32 %inc, %shr..i
  br i1 %exitcond.not, label %cleanup.for.end_crit_edge, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %cleanup.for.end_crit_edge, %cond.end.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_page_dec_eb_refs(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mark_page_accessed(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @local_lock_release(ptr noundef %l) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %0 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end35_crit_edge

entry.if.end35_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end35

land.lhs.true:                                    ; preds = %entry
  %owner = getelementptr inbounds %struct.local_lock_t, ptr %l, i32 0, i32 1
  %1 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %owner, align 4
  %3 = tail call i32 @llvm.read_register.i32(metadata !309) #14
  %and.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task, align 8
  %cmp.not = icmp eq ptr %2, %6
  br i1 %cmp.not, label %land.lhs.true.if.end35_crit_edge, label %do.end, !prof !322

land.lhs.true.if.end35_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end35

do.end:                                           ; preds = %land.lhs.true
  %call3 = tail call i32 @debug_locks_off() #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %do.end.if.end35_crit_edge, label %land.lhs.true5

do.end.if.end35_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end35

land.lhs.true5:                                   ; preds = %do.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %7 = load i32, ptr @debug_locks_silent, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool6.not = icmp eq i32 %7, 0
  br i1 %tobool6.not, label %do.end19, label %land.lhs.true5.if.end35_crit_edge

land.lhs.true5.if.end35_crit_edge:                ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end35

do.end19:                                         ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.127, i32 noundef 36, i32 noundef 9, ptr noundef nonnull @.str.128, ptr noundef nonnull @.str.129) #14
  br label %if.end35

if.end35:                                         ; preds = %do.end19, %land.lhs.true5.if.end35_crit_edge, %do.end.if.end35_crit_edge, %land.lhs.true.if.end35_crit_edge, %entry.if.end35_crit_edge
  %owner37 = getelementptr inbounds %struct.local_lock_t, ptr %l, i32 0, i32 1
  %8 = ptrtoint ptr %owner37 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %owner37, align 4
  br label %__here

__here:                                           ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @lock_release(ptr noundef %l, i32 noundef ptrtoint (ptr blockaddress(@local_lock_release, %__here) to i32)) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_locks_off() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @radix_tree_delete(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @call_rcu(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @btrfs_release_extent_buffer_rcu(ptr noundef %head) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %add.ptr = getelementptr i8, ptr %head, i32 -76
  %0 = load ptr, ptr @extent_buffer_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %0, ptr noundef %add.ptr) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__folio_lock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__xa_clear_mark(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_irq(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__page_file_index(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irq(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @btrfs_subpage_test_uptodate(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_subpage_clear_error(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @folio_wait_bit(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #10

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @report_eb_range(ptr nocapture noundef readonly %eb, i32 noundef %start, i32 noundef %len) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_info = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 3
  %0 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_info, align 8
  %2 = ptrtoint ptr %eb to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %eb, align 8
  %len2 = getelementptr inbounds %struct.extent_buffer, ptr %eb, i32 0, i32 1
  %4 = ptrtoint ptr %len2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %len2, align 8
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %1, ptr noundef nonnull @.str.132, i64 noundef %3, i32 noundef %5, i32 noundef %start, i32 noundef %len) #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 6710, i32 noundef 9, ptr noundef null) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @btrfs_subpage_test_error(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @radix_tree_gang_lookup(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @btrfs_get_64(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #10

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #10

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umin.i64(i64, i64) #10

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umax.i64(i64, i64) #10

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.uadd.sat.i64(i64, i64) #10

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #10

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #14

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memmove(ptr, ptr, i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_handle_no_return()

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #15 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 144)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #15 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 144)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { cold inlinehint noreturn nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #8 = { noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #11 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #12 = { nounwind readonly }
attributes #13 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nounwind }
attributes #15 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #16 = { nomerge }
attributes #17 = { cold nounwind }
attributes #18 = { cold noreturn }
attributes #19 = { cold noreturn nounwind }
attributes #20 = { nounwind allocsize(2) }
attributes #21 = { nobuiltin }

!llvm.asan.globals = !{!0, !2, !3, !4, !5, !6, !8, !10, !12, !14, !15, !17, !19, !21, !23, !25, !27, !29, !31, !33, !35, !37, !39, !40, !41, !42, !43, !45, !46, !47, !49, !51, !53, !55, !57, !59, !61, !63, !65, !67, !69, !71, !73, !75, !76, !77, !78, !80, !82, !84, !86, !88, !90, !92, !94, !96, !98, !99, !100, !101, !102, !104, !105, !106, !107, !109, !111, !112, !114, !115, !116, !117, !119, !120, !122, !123, !124, !125, !126, !128, !129, !131, !132, !134, !135, !137, !138, !140, !141, !143, !145, !147, !148, !150, !152, !154, !156, !158, !160, !162, !164, !166, !168, !169, !170, !171, !173, !174, !175, !177, !178, !180, !181, !182, !183, !185, !186, !187, !189, !190, !191, !192, !194, !196, !197, !198, !200, !202, !204, !206, !208, !210, !212, !214, !216, !218, !220, !222, !223, !225, !227, !229, !230, !231, !232, !234, !236, !238, !240, !242, !244, !246, !248, !250, !252, !254, !256, !258, !259, !261, !263, !265, !266, !268, !270, !272, !274, !276, !278, !280, !282, !284, !285, !287, !288, !290, !291, !293, !295, !297, !299, !300, !301, !303, !305, !307}
!llvm.named.register.sp = !{!309}
!llvm.module.flags = !{!310, !311, !312, !313, !314, !315, !316, !317}
!llvm.ident = !{!318}

!0 = !{ptr @.str, !1, !"<string literal>", i1 false, i1 false}
!1 = !{!"../fs/btrfs/extent_io.c", i32 82, i32 3}
!2 = !{ptr @.str.1, !1, !"<string literal>", i1 false, i1 false}
!3 = !{ptr @.str.2, !1, !"<string literal>", i1 false, i1 false}
!4 = !{ptr @btrfs_extent_buffer_leak_debug_check._entry, !1, !"_entry", i1 false, i1 false}
!5 = !{ptr @btrfs_extent_buffer_leak_debug_check._entry_ptr, !1, !"_entry_ptr", i1 false, i1 false}
!6 = !{ptr @.str.3, !7, !"<string literal>", i1 false, i1 false}
!7 = !{!"../fs/btrfs/extent_io.c", i32 176, i32 2}
!8 = !{ptr @.str.4, !9, !"<string literal>", i1 false, i1 false}
!9 = !{!"../fs/btrfs/extent_io.c", i32 226, i32 41}
!10 = !{ptr @.str.5, !11, !"<string literal>", i1 false, i1 false}
!11 = !{!"../fs/btrfs/extent_io.c", i32 236, i32 42}
!12 = !{ptr @extent_io_tree_init.__key, !13, !"__key", i1 false, i1 false}
!13 = !{!"../fs/btrfs/extent_io.c", i32 294, i32 2}
!14 = !{ptr @.str.6, !13, !"<string literal>", i1 false, i1 false}
!15 = !{ptr @.str.7, !16, !"<string literal>", i1 false, i1 false}
!16 = !{!"../fs/btrfs/extent_io.c", i32 298, i32 3}
!17 = !{ptr @.str.8, !18, !"<string literal>", i1 false, i1 false}
!18 = !{!"../fs/btrfs/extent_io.c", i32 322, i32 3}
!19 = !{ptr @__func__.__clear_extent_bit, !20, !"<string literal>", i1 false, i1 false}
!20 = !{!"../fs/btrfs/extent_io.c", i32 717, i32 2}
!21 = !{ptr @__func__.set_extent_bit, !22, !"<string literal>", i1 false, i1 false}
!22 = !{!"../fs/btrfs/extent_io.c", i32 985, i32 2}
!23 = !{ptr @.str.9, !24, !"<string literal>", i1 false, i1 false}
!24 = !{!"../fs/btrfs/extent_io.c", i32 989, i32 3}
!25 = !{ptr @.str.10, !26, !"<string literal>", i1 false, i1 false}
!26 = !{!"../fs/btrfs/extent_io.c", i32 991, i32 3}
!27 = !{ptr @__func__.convert_extent_bit, !28, !"<string literal>", i1 false, i1 false}
!28 = !{!"../fs/btrfs/extent_io.c", i32 1223, i32 2}
!29 = !{ptr @.str.11, !30, !"<string literal>", i1 false, i1 false}
!30 = !{!"../fs/btrfs/extent_io.c", i32 2007, i32 2}
!31 = !{ptr @.str.12, !32, !"<string literal>", i1 false, i1 false}
!32 = !{!"../fs/btrfs/extent_io.c", i32 2010, i32 2}
!33 = !{ptr @.str.13, !34, !"<string literal>", i1 false, i1 false}
!34 = !{!"../fs/btrfs/extent_io.c", i32 2044, i32 2}
!35 = !{ptr @.str.14, !36, !"<string literal>", i1 false, i1 false}
!36 = !{!"../fs/btrfs/extent_io.c", i32 2483, i32 3}
!37 = !{ptr @.str.15, !38, !"<string literal>", i1 false, i1 false}
!38 = !{!"../fs/btrfs/extent_io.c", i32 2644, i32 2}
!39 = !{ptr @.str.16, !38, !"<string literal>", i1 false, i1 false}
!40 = !{ptr @.str.17, !38, !"<string literal>", i1 false, i1 false}
!41 = !{ptr @btrfs_repair_one_sector.__UNIQUE_ID_ddebug966, !38, !"__UNIQUE_ID_ddebug966", i1 false, i1 false}
!42 = !{ptr @.str.18, !38, !"<string literal>", i1 false, i1 false}
!43 = !{ptr @.str.19, !44, !"<string literal>", i1 false, i1 false}
!44 = !{!"../fs/btrfs/extent_io.c", i32 2677, i32 2}
!45 = !{ptr @btrfs_repair_one_sector.__UNIQUE_ID_ddebug967, !44, !"__UNIQUE_ID_ddebug967", i1 false, i1 false}
!46 = !{ptr @.str.20, !44, !"<string literal>", i1 false, i1 false}
!47 = !{ptr @.str.21, !48, !"<string literal>", i1 false, i1 false}
!48 = !{!"../fs/btrfs/extent_io.c", i32 2800, i32 2}
!49 = !{ptr @.str.22, !50, !"<string literal>", i1 false, i1 false}
!50 = !{!"../fs/btrfs/extent_io.c", i32 2808, i32 3}
!51 = !{ptr @.str.23, !52, !"<string literal>", i1 false, i1 false}
!52 = !{!"../fs/btrfs/extent_io.c", i32 3145, i32 2}
!53 = !{ptr @.str.24, !54, !"<string literal>", i1 false, i1 false}
!54 = !{!"../fs/btrfs/extent_io.c", i32 3169, i32 2}
!55 = !{ptr @.str.25, !56, !"<string literal>", i1 false, i1 false}
!56 = !{!"../fs/btrfs/extent_io.c", i32 3173, i32 2}
!57 = !{ptr @.str.26, !58, !"<string literal>", i1 false, i1 false}
!58 = !{!"../fs/btrfs/extent_io.c", i32 3488, i32 2}
!59 = !{ptr @.str.27, !60, !"<string literal>", i1 false, i1 false}
!60 = !{!"../fs/btrfs/extent_io.c", i32 3595, i32 3}
!61 = !{ptr @.str.28, !62, !"<string literal>", i1 false, i1 false}
!62 = !{!"../fs/btrfs/extent_io.c", i32 5089, i32 2}
!63 = !{ptr @.str.29, !64, !"<string literal>", i1 false, i1 false}
!64 = !{!"../fs/btrfs/extent_io.c", i32 5129, i32 2}
!65 = !{ptr @.str.30, !66, !"<string literal>", i1 false, i1 false}
!66 = !{!"../fs/btrfs/extent_io.c", i32 5144, i32 3}
!67 = !{ptr @.str.31, !68, !"<string literal>", i1 false, i1 false}
!68 = !{!"../fs/btrfs/extent_io.c", i32 5145, i32 3}
!69 = !{ptr @.str.32, !70, !"<string literal>", i1 false, i1 false}
!70 = !{!"../fs/btrfs/extent_io.c", i32 5234, i32 2}
!71 = !{ptr @.str.33, !72, !"<string literal>", i1 false, i1 false}
!72 = !{!"../fs/btrfs/extent_io.c", i32 6143, i32 3}
!73 = !{ptr @.str.34, !74, !"<string literal>", i1 false, i1 false}
!74 = !{!"../fs/btrfs/extent_io.c", i32 6149, i32 3}
!75 = !{ptr @alloc_extent_buffer._rs, !74, !"_rs", i1 false, i1 false}
!76 = !{ptr @__func__.alloc_extent_buffer, !74, !"<string literal>", i1 false, i1 false}
!77 = !{ptr @.str.35, !74, !"<string literal>", i1 false, i1 false}
!78 = !{ptr @.str.36, !79, !"<string literal>", i1 false, i1 false}
!79 = !{!"../fs/btrfs/extent_io.c", i32 6160, i32 3}
!80 = !{ptr @.str.37, !81, !"<string literal>", i1 false, i1 false}
!81 = !{!"../fs/btrfs/extent_io.c", i32 6218, i32 3}
!82 = !{ptr @.str.38, !83, !"<string literal>", i1 false, i1 false}
!83 = !{!"../fs/btrfs/extent_io.c", i32 6469, i32 3}
!84 = !{ptr @.str.39, !85, !"<string literal>", i1 false, i1 false}
!85 = !{!"../fs/btrfs/extent_io.c", i32 6953, i32 2}
!86 = !{ptr @.str.40, !87, !"<string literal>", i1 false, i1 false}
!87 = !{!"../fs/btrfs/extent_io.c", i32 6964, i32 3}
!88 = !{ptr @extent_state_cache, !89, !"extent_state_cache", i1 false, i1 false}
!89 = !{!"../fs/btrfs/extent_io.c", i32 32, i32 27}
!90 = !{ptr @extent_buffer_cache, !91, !"extent_buffer_cache", i1 false, i1 false}
!91 = !{!"../fs/btrfs/extent_io.c", i32 33, i32 27}
!92 = !{ptr @btrfs_bioset, !93, !"btrfs_bioset", i1 false, i1 false}
!93 = !{!"../fs/btrfs/extent_io.c", i32 34, i32 23}
!94 = !{ptr @file_extent_tree_class, !95, !"file_extent_tree_class", i1 false, i1 false}
!95 = !{!"../fs/btrfs/extent_io.c", i32 285, i32 30}
!96 = !{ptr @.str.41, !97, !"<string literal>", i1 false, i1 false}
!97 = !{!"../fs/btrfs/ctree.h", i32 3491, i32 2}
!98 = !{ptr @.str.42, !97, !"<string literal>", i1 false, i1 false}
!99 = !{ptr @.str.43, !97, !"<string literal>", i1 false, i1 false}
!100 = !{ptr @assertfail._entry, !97, !"_entry", i1 false, i1 false}
!101 = !{ptr @assertfail._entry_ptr, !97, !"_entry_ptr", i1 false, i1 false}
!102 = !{ptr @.str.44, !103, !"<string literal>", i1 false, i1 false}
!103 = !{!"../fs/btrfs/extent_io.c", i32 98, i32 3}
!104 = !{ptr @.str.45, !103, !"<string literal>", i1 false, i1 false}
!105 = !{ptr @btrfs_extent_state_leak_debug_check._entry, !103, !"_entry", i1 false, i1 false}
!106 = !{ptr @btrfs_extent_state_leak_debug_check._entry_ptr, !103, !"_entry_ptr", i1 false, i1 false}
!107 = !{ptr @states, !108, !"states", i1 false, i1 false}
!108 = !{!"../fs/btrfs/extent_io.c", i32 42, i32 8}
!109 = !{ptr @.str.46, !110, !"<string literal>", i1 false, i1 false}
!110 = !{!"../fs/btrfs/extent_io.c", i32 43, i32 8}
!111 = !{ptr @leak_lock, !110, !"leak_lock", i1 false, i1 false}
!112 = distinct !{null, !113, !"__already_done", i1 false, i1 false}
!113 = !{!"../include/trace/events/btrfs.h", i32 1360, i32 1}
!114 = !{ptr @.str.47, !113, !"<string literal>", i1 false, i1 false}
!115 = distinct !{null, !113, !"__warned", i1 false, i1 false}
!116 = !{ptr @.str.48, !113, !"<string literal>", i1 false, i1 false}
!117 = distinct !{null, !118, !"__already_done", i1 false, i1 false}
!118 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!119 = !{ptr @.str.49, !118, !"<string literal>", i1 false, i1 false}
!120 = !{ptr @.str.50, !121, !"<string literal>", i1 false, i1 false}
!121 = !{!"../fs/btrfs/extent_io.c", i32 120, i32 3}
!122 = !{ptr @.str.51, !121, !"<string literal>", i1 false, i1 false}
!123 = !{ptr @__btrfs_debug_check_extent_io_range.__UNIQUE_ID_ddebug945, !121, !"__UNIQUE_ID_ddebug945", i1 false, i1 false}
!124 = !{ptr @__btrfs_debug_check_extent_io_range._rs, !121, !"_rs", i1 false, i1 false}
!125 = !{ptr @.str.52, !121, !"<string literal>", i1 false, i1 false}
!126 = distinct !{null, !127, !"__already_done", i1 false, i1 false}
!127 = !{!"../include/trace/events/btrfs.h", i32 1959, i32 1}
!128 = distinct !{null, !127, !"__warned", i1 false, i1 false}
!129 = !{ptr @alloc_extent_state.__key, !130, !"__key", i1 false, i1 false}
!130 = !{!"../fs/btrfs/extent_io.c", i32 347, i32 2}
!131 = !{ptr @.str.53, !130, !"<string literal>", i1 false, i1 false}
!132 = distinct !{null, !133, !"__already_done", i1 false, i1 false}
!133 = !{!"../include/trace/events/btrfs.h", i32 1337, i32 1}
!134 = distinct !{null, !133, !"__warned", i1 false, i1 false}
!135 = !{ptr @__func__.extent_io_tree_panic, !136, !"<string literal>", i1 false, i1 false}
!136 = !{!"../fs/btrfs/extent_io.c", i32 688, i32 2}
!137 = !{ptr @.str.54, !136, !"<string literal>", i1 false, i1 false}
!138 = distinct !{null, !139, !"__already_done", i1 false, i1 false}
!139 = !{!"../include/trace/events/btrfs.h", i32 1920, i32 1}
!140 = distinct !{null, !139, !"__warned", i1 false, i1 false}
!141 = !{ptr @.str.55, !142, !"<string literal>", i1 false, i1 false}
!142 = !{!"../fs/btrfs/extent_io.c", i32 564, i32 3}
!143 = !{ptr @.str.56, !144, !"<string literal>", i1 false, i1 false}
!144 = !{!"../fs/btrfs/extent_io.c", i32 577, i32 3}
!145 = distinct !{null, !146, !"__already_done", i1 false, i1 false}
!146 = !{!"../include/trace/events/btrfs.h", i32 1998, i32 1}
!147 = distinct !{null, !146, !"__warned", i1 false, i1 false}
!148 = !{ptr @__func__.wait_extent_bit, !149, !"<string literal>", i1 false, i1 false}
!149 = !{!"../fs/btrfs/extent_io.c", i32 883, i32 2}
!150 = !{ptr @.str.57, !151, !"<string literal>", i1 false, i1 false}
!151 = !{!"../include/linux/mm.h", i32 717, i32 2}
!152 = !{ptr @.str.58, !153, !"<string literal>", i1 false, i1 false}
!153 = !{!"../fs/btrfs/extent_io.c", i32 1963, i32 2}
!154 = !{ptr @.str.59, !155, !"<string literal>", i1 false, i1 false}
!155 = !{!"../fs/btrfs/extent_io.c", i32 1877, i32 3}
!156 = !{ptr @.str.60, !157, !"<string literal>", i1 false, i1 false}
!157 = !{!"../fs/btrfs/extent_io.c", i32 1878, i32 3}
!158 = !{ptr @.str.61, !159, !"<string literal>", i1 false, i1 false}
!159 = !{!"../fs/btrfs/extent_io.c", i32 1895, i32 4}
!160 = !{ptr @.str.62, !161, !"<string literal>", i1 false, i1 false}
!161 = !{!"../fs/btrfs/extent_io.c", i32 1828, i32 2}
!162 = !{ptr @.str.63, !163, !"<string literal>", i1 false, i1 false}
!163 = !{!"../fs/btrfs/extent_io.c", i32 2313, i32 2}
!164 = !{ptr @.str.64, !165, !"<string literal>", i1 false, i1 false}
!165 = !{!"../fs/btrfs/extent_io.c", i32 2343, i32 3}
!166 = !{ptr @repair_io_failure._rs, !167, !"_rs", i1 false, i1 false}
!167 = !{!"../fs/btrfs/extent_io.c", i32 2377, i32 2}
!168 = !{ptr @__func__.repair_io_failure, !167, !"<string literal>", i1 false, i1 false}
!169 = !{ptr @.str.65, !167, !"<string literal>", i1 false, i1 false}
!170 = distinct !{null, !167, !"__warned", i1 false, i1 false}
!171 = distinct !{null, !172, !"__warned", i1 false, i1 false}
!172 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!173 = !{ptr @.str.66, !172, !"<string literal>", i1 false, i1 false}
!174 = !{ptr @.str.67, !172, !"<string literal>", i1 false, i1 false}
!175 = distinct !{null, !176, !"__warned", i1 false, i1 false}
!176 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!177 = !{ptr @.str.68, !176, !"<string literal>", i1 false, i1 false}
!178 = !{ptr @.str.69, !179, !"<string literal>", i1 false, i1 false}
!179 = !{!"../fs/btrfs/extent_io.c", i32 2511, i32 3}
!180 = !{ptr @.str.70, !179, !"<string literal>", i1 false, i1 false}
!181 = !{ptr @btrfs_get_io_failure_record.__UNIQUE_ID_ddebug962, !179, !"__UNIQUE_ID_ddebug962", i1 false, i1 false}
!182 = !{ptr @.str.71, !179, !"<string literal>", i1 false, i1 false}
!183 = !{ptr @.str.72, !184, !"<string literal>", i1 false, i1 false}
!184 = !{!"../fs/btrfs/extent_io.c", i32 2558, i32 2}
!185 = !{ptr @btrfs_get_io_failure_record.__UNIQUE_ID_ddebug963, !184, !"__UNIQUE_ID_ddebug963", i1 false, i1 false}
!186 = !{ptr @.str.73, !184, !"<string literal>", i1 false, i1 false}
!187 = !{ptr @.str.74, !188, !"<string literal>", i1 false, i1 false}
!188 = !{!"../fs/btrfs/extent_io.c", i32 2595, i32 3}
!189 = !{ptr @.str.75, !188, !"<string literal>", i1 false, i1 false}
!190 = !{ptr @btrfs_check_repairable.__UNIQUE_ID_ddebug964, !188, !"__UNIQUE_ID_ddebug964", i1 false, i1 false}
!191 = !{ptr @.str.76, !188, !"<string literal>", i1 false, i1 false}
!192 = !{ptr @.str.77, !193, !"<string literal>", i1 false, i1 false}
!193 = !{!"../fs/btrfs/extent_io.c", i32 2602, i32 2}
!194 = !{ptr @.str.78, !195, !"<string literal>", i1 false, i1 false}
!195 = !{!"../fs/btrfs/extent_io.c", i32 2619, i32 3}
!196 = !{ptr @btrfs_check_repairable.__UNIQUE_ID_ddebug965, !195, !"__UNIQUE_ID_ddebug965", i1 false, i1 false}
!197 = !{ptr @.str.79, !195, !"<string literal>", i1 false, i1 false}
!198 = !{ptr @.str.80, !199, !"<string literal>", i1 false, i1 false}
!199 = !{!"../include/linux/page-flags.h", i32 452, i32 1}
!200 = !{ptr @.str.81, !201, !"<string literal>", i1 false, i1 false}
!201 = !{!"../include/linux/mm.h", i32 1160, i32 2}
!202 = !{ptr @.str.82, !203, !"<string literal>", i1 false, i1 false}
!203 = !{!"../include/linux/page-flags.h", i32 260, i32 2}
!204 = distinct !{null, !205, !"<string literal>", i1 false, i1 false}
!205 = !{!"../include/linux/page-flags.h", i32 261, i32 2}
!206 = !{ptr @.str.84, !207, !"<string literal>", i1 false, i1 false}
!207 = !{!"../fs/btrfs/extent_io.c", i32 2948, i32 2}
!208 = !{ptr @.str.85, !209, !"<string literal>", i1 false, i1 false}
!209 = !{!"../fs/btrfs/extent_io.c", i32 2694, i32 2}
!210 = !{ptr @.str.86, !211, !"<string literal>", i1 false, i1 false}
!211 = !{!"../include/linux/page-flags.h", i32 416, i32 1}
!212 = !{ptr @.str.87, !213, !"<string literal>", i1 false, i1 false}
!213 = !{!"../fs/btrfs/extent_io.c", i32 3384, i32 2}
!214 = !{ptr @.str.88, !215, !"<string literal>", i1 false, i1 false}
!215 = !{!"../fs/btrfs/extent_io.c", i32 3386, i32 2}
!216 = !{ptr @.str.89, !217, !"<string literal>", i1 false, i1 false}
!217 = !{!"../fs/btrfs/extent_io.c", i32 3423, i32 4}
!218 = !{ptr @.str.90, !219, !"<string literal>", i1 false, i1 false}
!219 = !{!"../fs/btrfs/extent_io.c", i32 3432, i32 4}
!220 = distinct !{null, !221, !"__already_done", i1 false, i1 false}
!221 = !{!"../fs/btrfs/volumes.h", i32 479, i32 3}
!222 = !{ptr @.str.91, !221, !"<string literal>", i1 false, i1 false}
!223 = !{ptr @.str.92, !224, !"<string literal>", i1 false, i1 false}
!224 = !{!"../fs/btrfs/extent_io.c", i32 3215, i32 2}
!225 = !{ptr @.str.93, !226, !"<string literal>", i1 false, i1 false}
!226 = !{!"../fs/btrfs/extent_io.c", i32 3007, i32 2}
!227 = !{ptr @.str.94, !228, !"<string literal>", i1 false, i1 false}
!228 = !{!"../fs/btrfs/extent_io.c", i32 3019, i32 3}
!229 = !{ptr @.str.95, !228, !"<string literal>", i1 false, i1 false}
!230 = !{ptr @end_bio_extent_readpage.__UNIQUE_ID_ddebug968, !228, !"__UNIQUE_ID_ddebug968", i1 false, i1 false}
!231 = !{ptr @.str.96, !228, !"<string literal>", i1 false, i1 false}
!232 = !{ptr @.str.97, !233, !"<string literal>", i1 false, i1 false}
!233 = !{!"../fs/btrfs/extent_io.c", i32 3034, i32 4}
!234 = !{ptr @.str.98, !235, !"<string literal>", i1 false, i1 false}
!235 = !{!"../fs/btrfs/extent_io.c", i32 3039, i32 4}
!236 = !{ptr @.str.99, !237, !"<string literal>", i1 false, i1 false}
!237 = !{!"../fs/btrfs/extent_io.c", i32 3079, i32 4}
!238 = !{ptr @.str.100, !239, !"<string literal>", i1 false, i1 false}
!239 = !{!"../fs/btrfs/extent_io.c", i32 2734, i32 2}
!240 = !{ptr @.str.101, !241, !"<string literal>", i1 false, i1 false}
!241 = !{!"../fs/btrfs/extent_io.c", i32 2740, i32 2}
!242 = !{ptr @.str.102, !243, !"<string literal>", i1 false, i1 false}
!243 = !{!"../fs/btrfs/extent_io.c", i32 2968, i32 3}
!244 = !{ptr @.str.103, !245, !"<string literal>", i1 false, i1 false}
!245 = !{!"../fs/btrfs/extent_io.c", i32 2977, i32 2}
!246 = !{ptr @.str.104, !247, !"<string literal>", i1 false, i1 false}
!247 = !{!"../include/linux/wait_bit.h", i32 98, i32 2}
!248 = !{ptr @.str.105, !249, !"<string literal>", i1 false, i1 false}
!249 = !{!"../fs/btrfs/extent_io.c", i32 4403, i32 2}
!250 = !{ptr @.str.106, !251, !"<string literal>", i1 false, i1 false}
!251 = !{!"../fs/btrfs/extent_io.c", i32 4412, i32 3}
!252 = !{ptr @.str.107, !253, !"<string literal>", i1 false, i1 false}
!253 = !{!"../fs/btrfs/extent_io.c", i32 4429, i32 4}
!254 = !{ptr @.str.108, !255, !"<string literal>", i1 false, i1 false}
!255 = !{!"../fs/btrfs/extent_io.c", i32 4431, i32 4}
!256 = distinct !{null, !257, !"__already_done", i1 false, i1 false}
!257 = !{!"../include/linux/bio.h", i32 248, i32 2}
!258 = !{ptr @.str.109, !257, !"<string literal>", i1 false, i1 false}
!259 = !{ptr @.str.110, !260, !"<string literal>", i1 false, i1 false}
!260 = !{!"../include/linux/page-flags.h", i32 678, i32 1}
!261 = !{ptr @.str.111, !262, !"<string literal>", i1 false, i1 false}
!262 = !{!"../fs/btrfs/extent_io.c", i32 4146, i32 3}
!263 = distinct !{null, !264, !"__already_done", i1 false, i1 false}
!264 = !{!"../include/trace/events/btrfs.h", i32 647, i32 1}
!265 = distinct !{null, !264, !"__warned", i1 false, i1 false}
!266 = !{ptr @.str.112, !267, !"<string literal>", i1 false, i1 false}
!267 = !{!"../fs/btrfs/extent_io.c", i32 3962, i32 3}
!268 = !{ptr @.str.113, !269, !"<string literal>", i1 false, i1 false}
!269 = !{!"../fs/btrfs/extent_io.c", i32 3963, i32 3}
!270 = !{ptr @.str.114, !271, !"<string literal>", i1 false, i1 false}
!271 = !{!"../fs/btrfs/extent_io.c", i32 3964, i32 3}
!272 = !{ptr @.str.115, !273, !"<string literal>", i1 false, i1 false}
!273 = !{!"../fs/btrfs/extent_io.c", i32 3965, i32 3}
!274 = !{ptr @.str.116, !275, !"<string literal>", i1 false, i1 false}
!275 = !{!"../fs/btrfs/extent_io.c", i32 4000, i32 4}
!276 = !{ptr @.str.117, !277, !"<string literal>", i1 false, i1 false}
!277 = !{!"../fs/btrfs/extent_io.c", i32 2845, i32 4}
!278 = !{ptr @.str.118, !279, !"<string literal>", i1 false, i1 false}
!279 = !{!"../fs/btrfs/extent_io.c", i32 2849, i32 4}
!280 = !{ptr @.str.119, !281, !"<string literal>", i1 false, i1 false}
!281 = !{!"../include/linux/pagemap.h", i32 1152, i32 3}
!282 = distinct !{null, !283, !"__warned", i1 false, i1 false}
!283 = !{!"../include/linux/xarray.h", i32 1182, i32 9}
!284 = !{ptr @.str.120, !283, !"<string literal>", i1 false, i1 false}
!285 = !{ptr @__alloc_extent_buffer.__key, !286, !"__key", i1 false, i1 false}
!286 = !{!"../fs/btrfs/extent_io.c", i32 5875, i32 2}
!287 = !{ptr @.str.121, !286, !"<string literal>", i1 false, i1 false}
!288 = !{ptr @__alloc_extent_buffer.__key.122, !289, !"__key", i1 false, i1 false}
!289 = !{!"../fs/btrfs/extent_io.c", i32 5881, i32 2}
!290 = !{ptr @.str.123, !289, !"<string literal>", i1 false, i1 false}
!291 = !{ptr @.str.124, !292, !"<string literal>", i1 false, i1 false}
!292 = !{!"../fs/btrfs/extent_io.c", i32 5885, i32 2}
!293 = distinct !{null, !294, !"<string literal>", i1 false, i1 false}
!294 = !{!"../include/linux/gfp.h", i32 570, i32 2}
!295 = !{ptr @.str.126, !296, !"<string literal>", i1 false, i1 false}
!296 = !{!"../fs/btrfs/extent_io.c", i32 5838, i32 2}
!297 = !{ptr @.str.127, !298, !"<string literal>", i1 false, i1 false}
!298 = !{!"../include/linux/local_lock_internal.h", i32 36, i32 2}
!299 = !{ptr @.str.128, !298, !"<string literal>", i1 false, i1 false}
!300 = !{ptr @.str.129, !298, !"<string literal>", i1 false, i1 false}
!301 = !{ptr @.str.130, !302, !"<string literal>", i1 false, i1 false}
!302 = !{!"../include/linux/pagemap.h", i32 788, i32 2}
!303 = !{ptr @.str.131, !304, !"<string literal>", i1 false, i1 false}
!304 = !{!"../fs/btrfs/extent_io.c", i32 6516, i32 2}
!305 = !{ptr @.str.132, !306, !"<string literal>", i1 false, i1 false}
!306 = !{!"../fs/btrfs/extent_io.c", i32 6707, i32 2}
!307 = !{ptr @.str.133, !308, !"<string literal>", i1 false, i1 false}
!308 = !{!"../fs/btrfs/extent_io.c", i32 7254, i32 2}
!309 = !{!"sp"}
!310 = !{i32 1, !"wchar_size", i32 2}
!311 = !{i32 1, !"min_enum_size", i32 4}
!312 = !{i32 8, !"branch-target-enforcement", i32 0}
!313 = !{i32 8, !"sign-return-address", i32 0}
!314 = !{i32 8, !"sign-return-address-all", i32 0}
!315 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!316 = !{i32 7, !"uwtable", i32 1}
!317 = !{i32 7, !"frame-pointer", i32 2}
!318 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!319 = !{!"branch_weights", i32 1, i32 2000}
!320 = !{i64 2158596650, i64 2158597132, i64 2158596687, i64 2158596743, i64 2158596777, i64 2158596801, i64 2158596842, i64 2158596863, i64 2158596891, i64 2158596925}
!321 = !{i64 2158824578}
!322 = !{!"branch_weights", i32 2000, i32 1}
!323 = !{i64 2148451047}
!324 = !{i64 2148365511, i64 2148365543, i64 2148365572, i64 2148365606, i64 2148365637, i64 2148365660}
!325 = !{i64 2150066799}
!326 = !{i64 2148895488, i64 2148895493, i64 2148895506, i64 2148895550, i64 2148895584, i64 2148895605}
!327 = !{i64 2156315244}
!328 = !{i64 2156315459}
!329 = !{i64 2150124901}
!330 = !{i64 2150125937}
!331 = !{i64 2158854711, i64 2158855196, i64 2158854748, i64 2158854804, i64 2158854838, i64 2158854862, i64 2158854903, i64 2158854924, i64 2158854952, i64 2158854986}
!332 = !{i64 2158847001, i64 2158847486, i64 2158847038, i64 2158847094, i64 2158847128, i64 2158847152, i64 2158847193, i64 2158847214, i64 2158847242, i64 2158847276}
!333 = !{i64 2158856300, i64 2158856785, i64 2158856337, i64 2158856393, i64 2158856427, i64 2158856451, i64 2158856492, i64 2158856513, i64 2158856541, i64 2158856575}
!334 = !{i64 2156825990}
!335 = !{i64 2156826253}
!336 = !{i64 2158844461, i64 2158844946, i64 2158844498, i64 2158844554, i64 2158844588, i64 2158844612, i64 2158844653, i64 2158844674, i64 2158844702, i64 2158844736}
!337 = !{i64 2158862256, i64 2158862742, i64 2158862293, i64 2158862349, i64 2158862383, i64 2158862407, i64 2158862448, i64 2158862469, i64 2158862497, i64 2158862531}
!338 = !{i64 2148363046, i64 2148363078, i64 2148363107, i64 2148363141, i64 2148363172, i64 2148363195}
!339 = !{i64 2158865118, i64 2158865604, i64 2158865155, i64 2158865211, i64 2158865245, i64 2158865269, i64 2158865310, i64 2158865331, i64 2158865359, i64 2158865393}
!340 = !{i64 2158866710, i64 2158867196, i64 2158866747, i64 2158866803, i64 2158866837, i64 2158866861, i64 2158866902, i64 2158866923, i64 2158866951, i64 2158866985}
!341 = !{i64 2158868329, i64 2158868815, i64 2158868366, i64 2158868422, i64 2158868456, i64 2158868480, i64 2158868521, i64 2158868542, i64 2158868570, i64 2158868604}
!342 = !{i64 2156808131}
!343 = !{i64 2156808386}
!344 = !{i64 2158860190, i64 2158860675, i64 2158860227, i64 2158860283, i64 2158860317, i64 2158860341, i64 2158860382, i64 2158860403, i64 2158860431, i64 2158860465}
!345 = !{i64 2156848470}
!346 = !{i64 2156848757}
!347 = !{i64 2158871832, i64 2158872318, i64 2158871869, i64 2158871925, i64 2158871959, i64 2158871983, i64 2158872024, i64 2158872045, i64 2158872073, i64 2158872107}
!348 = !{i64 2158873851, i64 2158874337, i64 2158873888, i64 2158873944, i64 2158873978, i64 2158874002, i64 2158874043, i64 2158874064, i64 2158874092, i64 2158874126}
!349 = !{!"auto-init"}
!350 = !{i64 2158876462, i64 2158876948, i64 2158876499, i64 2158876555, i64 2158876589, i64 2158876613, i64 2158876654, i64 2158876675, i64 2158876703, i64 2158876737}
!351 = !{i64 2153427160, i64 2153427643, i64 2153427197, i64 2153427253, i64 2153427287, i64 2153427311, i64 2153427352, i64 2153427373, i64 2153427401, i64 2153427435}
!352 = !{i64 2148449968}
!353 = !{i64 2148364701, i64 2148364733, i64 2148364762, i64 2148364796, i64 2148364827, i64 2148364850}
!354 = !{i64 2148450197}
!355 = !{i64 2158878040, i64 2158878526, i64 2158878077, i64 2158878133, i64 2158878167, i64 2158878191, i64 2158878232, i64 2158878253, i64 2158878281, i64 2158878315}
!356 = !{!"branch_weights", i32 4000000, i32 4001}
!357 = !{i64 2150449977, i64 2150450468, i64 2150450014, i64 2150450070, i64 2150450104, i64 2150450128, i64 2150450169, i64 2150450190, i64 2150450218, i64 2150450252}
!358 = !{i64 2158911938, i64 2158912424, i64 2158911975, i64 2158912031, i64 2158912065, i64 2158912089, i64 2158912130, i64 2158912151, i64 2158912179, i64 2158912213}
!359 = !{i64 2158913752, i64 2158914238, i64 2158913789, i64 2158913845, i64 2158913879, i64 2158913903, i64 2158913944, i64 2158913965, i64 2158913993, i64 2158914027}
!360 = !{i64 2150116342}
!361 = !{i64 2158921137, i64 2158921623, i64 2158921174, i64 2158921230, i64 2158921264, i64 2158921288, i64 2158921329, i64 2158921350, i64 2158921378, i64 2158921412}
!362 = !{i64 2158939748, i64 2158940234, i64 2158939785, i64 2158939841, i64 2158939875, i64 2158939899, i64 2158939940, i64 2158939961, i64 2158939989, i64 2158940023}
!363 = !{i64 2150798774, i64 2150799265, i64 2150798811, i64 2150798867, i64 2150798901, i64 2150798925, i64 2150798966, i64 2150798987, i64 2150799015, i64 2150799049}
!364 = !{i64 2153451133, i64 2153451617, i64 2153451170, i64 2153451226, i64 2153451260, i64 2153451284, i64 2153451325, i64 2153451346, i64 2153451374, i64 2153451408}
!365 = !{i64 2148361516, i64 2148361542, i64 2148361571, i64 2148361605, i64 2148361636, i64 2148361659}
!366 = !{i64 2150336007, i64 2150336498, i64 2150336044, i64 2150336100, i64 2150336134, i64 2150336158, i64 2150336199, i64 2150336220, i64 2150336248, i64 2150336282}
!367 = !{i64 2150347501, i64 2150347992, i64 2150347538, i64 2150347594, i64 2150347628, i64 2150347652, i64 2150347693, i64 2150347714, i64 2150347742, i64 2150347776}
!368 = !{i64 2158970676, i64 2158971162, i64 2158970713, i64 2158970769, i64 2158970803, i64 2158970827, i64 2158970868, i64 2158970889, i64 2158970917, i64 2158970951}
!369 = !{i64 2158973105, i64 2158973591, i64 2158973142, i64 2158973198, i64 2158973232, i64 2158973256, i64 2158973297, i64 2158973318, i64 2158973346, i64 2158973380}
!370 = !{i64 753997, i64 754058}
!371 = !{i64 756729}
!372 = !{i64 757014}
!373 = !{i64 2153158157}
!374 = !{i64 2153157999}
!375 = !{i64 2153158327}
!376 = !{i64 2149958870}
!377 = !{i64 2155136947}
!378 = !{i64 2150393100, i64 2150393591, i64 2150393137, i64 2150393193, i64 2150393227, i64 2150393251, i64 2150393292, i64 2150393313, i64 2150393341, i64 2150393375}
!379 = !{i64 2151085899}
!380 = !{!"branch_weights", i32 -294967296, i32 6003000}
!381 = !{i64 2148363981, i64 2148364007, i64 2148364036, i64 2148364070, i64 2148364101, i64 2148364124}
!382 = !{i8 0, i8 2}
!383 = !{i64 2148370374, i64 2148370406, i64 2148370435, i64 2148370469, i64 2148370500, i64 2148370523}
!384 = !{i64 2148459455}
!385 = !{i64 2158994812}
!386 = !{i64 2148360935}
!387 = !{i64 845758, i64 845783, i64 845805, i64 845821, i64 845833, i64 845853, i64 845877, i64 845893, i64 845905}
!388 = !{i64 2148361123}
!389 = !{i64 2150401658, i64 2150401831, i64 2150401846, i64 2150401898, i64 2150401957, i64 2150401981, i64 2150402022, i64 2150402043, i64 2150402071, i64 2150402103}
!390 = !{i64 2150402533, i64 2150402706, i64 2150402721, i64 2150402773, i64 2150402832, i64 2150402856, i64 2150402897, i64 2150402918, i64 2150402946, i64 2150402978}
!391 = !{i64 2159003715, i64 2159004201, i64 2159003752, i64 2159003808, i64 2159003842, i64 2159003866, i64 2159003907, i64 2159003928, i64 2159003956, i64 2159003990}
!392 = !{i64 2150855922, i64 2150856413, i64 2150855959, i64 2150856015, i64 2150856049, i64 2150856073, i64 2150856114, i64 2150856135, i64 2150856163, i64 2150856197}
!393 = !{i64 2159009404, i64 2159009890, i64 2159009441, i64 2159009497, i64 2159009531, i64 2159009555, i64 2159009596, i64 2159009617, i64 2159009645, i64 2159009679}
!394 = !{i64 2154390314, i64 2154390803, i64 2154390351, i64 2154390407, i64 2154390441, i64 2154390465, i64 2154390506, i64 2154390527, i64 2154390555, i64 2154390589}
!395 = !{i64 2154392271, i64 2154392760, i64 2154392308, i64 2154392364, i64 2154392398, i64 2154392422, i64 2154392463, i64 2154392484, i64 2154392512, i64 2154392546}
!396 = !{i64 2154394040, i64 2154394529, i64 2154394077, i64 2154394133, i64 2154394167, i64 2154394191, i64 2154394232, i64 2154394253, i64 2154394281, i64 2154394315}
!397 = !{i64 2153418150, i64 2153418638, i64 2153418187, i64 2153418243, i64 2153418277, i64 2153418301, i64 2153418342, i64 2153418363, i64 2153418391, i64 2153418425}
!398 = !{i64 2150116608}
!399 = !{!"branch_weights", i32 2000, i32 2, i32 2000}
!400 = !{i64 2159021463, i64 2159021949, i64 2159021500, i64 2159021556, i64 2159021590, i64 2159021614, i64 2159021655, i64 2159021676, i64 2159021704, i64 2159021738}
!401 = !{i64 2159023055, i64 2159023541, i64 2159023092, i64 2159023148, i64 2159023182, i64 2159023206, i64 2159023247, i64 2159023268, i64 2159023296, i64 2159023330}
!402 = !{i64 2159024655, i64 2159025141, i64 2159024692, i64 2159024748, i64 2159024782, i64 2159024806, i64 2159024847, i64 2159024868, i64 2159024896, i64 2159024930}
!403 = !{i64 2152662272}
!404 = !{i64 2148463339}
!405 = !{i64 845252, i64 845276, i64 845297, i64 845314, i64 845331}
!406 = !{i64 2148463565}
!407 = !{i64 2150410460, i64 2150410633, i64 2150410648, i64 2150410700, i64 2150410759, i64 2150410783, i64 2150410824, i64 2150410845, i64 2150410873, i64 2150410905}
!408 = !{i64 2150411335, i64 2150411508, i64 2150411523, i64 2150411575, i64 2150411634, i64 2150411658, i64 2150411699, i64 2150411720, i64 2150411748, i64 2150411780}
!409 = distinct !{!409, !410}
!410 = !{!"llvm.loop.peeled.count", i32 1}
!411 = distinct !{!411, !410}
!412 = distinct !{!412, !410}
!413 = !{!"branch_weights", i32 4001, i32 4000000}
!414 = distinct !{!414, !410}
!415 = distinct !{!415, !410}
!416 = distinct !{!416, !410}
!417 = !{i64 2159074784, i64 2159075270, i64 2159074821, i64 2159074877, i64 2159074911, i64 2159074935, i64 2159074976, i64 2159074997, i64 2159075025, i64 2159075059}
!418 = !{i64 2156298340}
!419 = !{i64 2156298569}
!420 = !{i64 2158944441, i64 2158944927, i64 2158944478, i64 2158944534, i64 2158944568, i64 2158944592, i64 2158944633, i64 2158944654, i64 2158944682, i64 2158944716}
!421 = !{i64 2151094883, i64 2151095056, i64 2151095071, i64 2151095123, i64 2151095182, i64 2151095206, i64 2151095247, i64 2151095268, i64 2151095296, i64 2151095328}
!422 = !{i64 2151095758, i64 2151095931, i64 2151095946, i64 2151095998, i64 2151096057, i64 2151096081, i64 2151096122, i64 2151096143, i64 2151096171, i64 2151096203}
!423 = !{i64 2158996281, i64 2158996767, i64 2158996318, i64 2158996374, i64 2158996408, i64 2158996432, i64 2158996473, i64 2158996494, i64 2158996522, i64 2158996556}
!424 = !{i64 2158999754, i64 2159000240, i64 2158999791, i64 2158999847, i64 2158999881, i64 2158999905, i64 2158999946, i64 2158999967, i64 2158999995, i64 2159000029}
!425 = !{i64 2155820629}
!426 = !{i64 2155820860}
!427 = distinct !{!427, !410}
