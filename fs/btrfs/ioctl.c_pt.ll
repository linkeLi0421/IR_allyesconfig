; ModuleID = '/llk/IR_all_yes/fs/btrfs/ioctl.c_pt.bc'
source_filename = "../fs/btrfs/ioctl.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.atomic_t = type { i32 }
%struct.btrfs_ioctl_feature_flags = type { i64, i64, i64 }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key = type { %struct.atomic_t, %union.anon.72 }
%union.anon.72 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i32, i8, %struct.list_head, ptr, %struct.rw_semaphore, ptr, %struct.work_struct, %struct.ctl_table_set, ptr, ptr, [16 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.40 }
%union.anon.40 = type { [5 x %struct.uid_gid_extent] }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.list_head = type { ptr, ptr }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.ctl_table_set = type { ptr, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.42, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head }
%union.anon.42 = type { %struct.anon.43 }
%struct.anon.43 = type { ptr, i32, i32, i32 }
%struct.hlist_head = type { ptr }
%struct.rb_root = type { ptr }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.80, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.81, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.82, ptr, %struct.address_space, %struct.list_head, %union.anon.83, i32, i32, ptr, ptr, ptr, ptr }
%union.anon.80 = type { i32 }
%struct.timespec64 = type { i64, i32 }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.hlist_node = type { ptr, ptr }
%union.anon.81 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.atomic64_t = type { i64 }
%union.anon.82 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%union.anon.83 = type { ptr }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, ptr, %struct.qstr, ptr, [36 x i8], %struct.lockref, ptr, ptr, i32, ptr, %union.anon.78, %struct.list_head, %struct.list_head, %union.anon.79 }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.hlist_bl_node = type { ptr, ptr }
%struct.qstr = type { %union.anon.2, ptr }
%union.anon.2 = type { i64 }
%struct.lockref = type { %union.anon.4 }
%union.anon.4 = type { %struct.anon.5 }
%struct.anon.5 = type { %struct.spinlock, i32 }
%union.anon.78 = type { %struct.list_head }
%union.anon.79 = type { %struct.hlist_node }
%struct.super_block = type { %struct.list_head, i32, i8, i32, i64, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, %struct.rw_semaphore, i32, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, i16, %struct.hlist_bl_head, %struct.list_head, ptr, ptr, ptr, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, ptr, i32, i64, i64, i32, ptr, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, ptr, ptr, %struct.shrinker, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr, %struct.hlist_head, ptr, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [24 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [24 x i8] }
%struct.hlist_bl_head = type { ptr }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x ptr], [3 x %struct.mem_dqinfo], [3 x ptr] }
%struct.mem_dqinfo = type { ptr, i32, %struct.list_head, i32, i32, i32, i64, i64, ptr }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, ptr, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t, %struct.lockdep_map }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { ptr }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { ptr, ptr, i32, i32, i32, %struct.list_head, i32, ptr }
%struct.list_lru = type { ptr, %struct.list_head, i32, i8 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.btrfs_root = type { %struct.rb_node, ptr, ptr, ptr, ptr, i32, %struct.btrfs_root_item, %struct.btrfs_key, ptr, %struct.extent_io_tree, %struct.mutex, %struct.spinlock, ptr, %struct.mutex, %struct.wait_queue_head, [2 x %struct.wait_queue_head], [2 x %struct.list_head], %struct.atomic_t, [2 x %struct.atomic_t], %struct.atomic_t, i32, i32, i32, i32, i64, i32, i64, %struct.btrfs_key, %struct.btrfs_key, %struct.list_head, %struct.list_head, [2 x %struct.spinlock], [2 x %struct.list_head], %struct.spinlock, %struct.rb_root, %struct.xarray, i32, %struct.spinlock, %struct.refcount_struct, %struct.mutex, %struct.spinlock, %struct.list_head, %struct.list_head, i64, %struct.mutex, %struct.spinlock, %struct.list_head, %struct.list_head, i64, %struct.list_head, i32, i32, %struct.btrfs_drew_lock, %struct.atomic_t, %struct.spinlock, i64, i64, %struct.wait_queue_head, %struct.atomic_t, %struct.btrfs_qgroup_swapped_blocks, %struct.extent_io_tree, i64, %struct.list_head }
%struct.rb_node = type { i32, ptr, ptr }
%struct.btrfs_root_item = type <{ %struct.btrfs_inode_item, i64, i64, i64, i64, i64, i64, i64, i32, %struct.btrfs_disk_key, i8, i8, i64, [16 x i8], [16 x i8], [16 x i8], i64, i64, i64, i64, %struct.btrfs_timespec, %struct.btrfs_timespec, %struct.btrfs_timespec, %struct.btrfs_timespec, [8 x i64] }>
%struct.btrfs_inode_item = type { i64, i64, i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, [4 x i64], %struct.btrfs_timespec, %struct.btrfs_timespec, %struct.btrfs_timespec, %struct.btrfs_timespec }
%struct.btrfs_disk_key = type <{ i64, i8, i64 }>
%struct.btrfs_timespec = type <{ i64, i32 }>
%struct.btrfs_key = type <{ i64, i8, i64 }>
%struct.btrfs_drew_lock = type { %struct.atomic_t, %struct.percpu_counter, %struct.wait_queue_head, %struct.wait_queue_head }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.btrfs_qgroup_swapped_blocks = type { %struct.spinlock, i8, [8 x %struct.rb_root] }
%struct.extent_io_tree = type { %struct.rb_root, ptr, ptr, i64, i8, i8, %struct.spinlock }
%struct.fileattr = type { i32, i32, i32, i32, i32, i32, i8 }
%struct.btrfs_fs_info = type { [16 x i8], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.rwlock_t, %struct.rb_root, %struct.spinlock, %struct.xarray, %struct.spinlock, i64, %struct.rb_root, %struct.atomic64_t, %struct.extent_io_tree, %struct.extent_map_tree, %struct.btrfs_block_rsv, %struct.btrfs_block_rsv, %struct.btrfs_block_rsv, %struct.btrfs_block_rsv, %struct.btrfs_block_rsv, %struct.btrfs_block_rsv, i64, i64, i64, i64, i64, i32, i32, i8, i32, i32, i64, ptr, %struct.wait_queue_head, %struct.wait_queue_head, %struct.wait_queue_head, %struct.wait_queue_head, %struct.spinlock, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.mutex, %struct.mutex, %struct.mutex, ptr, %struct.mutex, %struct.rw_semaphore, %struct.rw_semaphore, %struct.rw_semaphore, %struct.spinlock, %struct.mutex, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.list_head, %struct.atomic_t, %struct.wait_queue_head, %struct.atomic64_t, %struct.rwlock_t, %struct.rb_root, %struct.list_head, %struct.atomic_t, %struct.spinlock, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, %struct.percpu_counter, %struct.percpu_counter, %struct.percpu_counter, i32, i32, %struct.list_head, ptr, %struct.list_head, ptr, ptr, %struct.btrfs_free_cluster, %struct.btrfs_free_cluster, %struct.spinlock, %struct.rb_root, %struct.atomic_t, %struct.seqlock_t, i64, i64, i64, %struct.spinlock, %struct.mutex, %struct.atomic_t, %struct.atomic_t, ptr, %struct.wait_queue_head, %struct.atomic_t, i32, i32, ptr, %struct.mutex, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.wait_queue_head, %struct.refcount_struct, ptr, ptr, ptr, ptr, %struct.btrfs_discard_ctl, i32, i64, %struct.rb_root, %struct.spinlock, ptr, %struct.mutex, %struct.list_head, i64, %struct.mutex, %struct.btrfs_key, ptr, %struct.completion, %struct.btrfs_work, i8, i32, ptr, %struct.spinlock, %struct.xarray, i32, %struct.btrfs_dev_replace, %struct.semaphore, %struct.work_struct, %struct.work_struct, %struct.work_struct, %struct.work_struct, %struct.list_head, i32, %struct.spinlock, %struct.list_head, %struct.mutex, %struct.mutex, i32, i32, i32, i32, i32, i32, %struct.spinlock, %struct.rb_root, ptr, i32, %union.anon.90, %struct.mutex, %struct.spinlock, i64, %struct.spinlock, i64, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.rb_root, ptr, ptr, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.extent_map_tree = type { %struct.rb_root_cached, %struct.list_head, %struct.rwlock_t }
%struct.btrfs_block_rsv = type { i64, i64, ptr, %struct.spinlock, i16, i16, i16, i64, i64 }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.btrfs_free_cluster = type { %struct.spinlock, %struct.spinlock, %struct.rb_root, i64, i64, i8, ptr, %struct.list_head }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.btrfs_discard_ctl = type { ptr, %struct.delayed_work, %struct.spinlock, ptr, [3 x %struct.list_head], i64, i64, %struct.atomic_t, %struct.atomic64_t, i64, i64, i32, i32, i64, i64, %struct.atomic64_t }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.btrfs_work = type { ptr, ptr, ptr, %struct.work_struct, %struct.list_head, ptr, i32 }
%struct.btrfs_dev_replace = type { i64, i64, i64, %struct.atomic64_t, %struct.atomic64_t, i64, i64, i64, i64, i64, i32, i32, ptr, ptr, %struct.mutex, %struct.rw_semaphore, %struct.btrfs_scrub_progress, %struct.percpu_counter, %struct.wait_queue_head }
%struct.btrfs_scrub_progress = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.semaphore = type { %struct.raw_spinlock, i32, %struct.list_head }
%union.anon.90 = type { i64 }
%struct.btrfs_trans_handle = type { i64, i64, i64, i32, ptr, ptr, ptr, ptr, %struct.refcount_struct, i32, i16, i8, i8, i8, i8, i8, ptr, %struct.list_head }
%struct.btrfs_fs_devices = type { [16 x i8], [16 x i8], i8, %struct.list_head, i64, i64, i64, i64, i64, i64, i64, ptr, %struct.mutex, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32, i8, ptr, %struct.kobject, ptr, ptr, %struct.completion, i32, i32 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.readahead_control = type { ptr, ptr, ptr, i32, i32, i32 }
%struct.btrfs_ioctl_defrag_range_args = type { i64, i64, i64, i32, i32, [4 x i32] }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.64, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.25 }
%struct.llist_node = type { ptr }
%union.anon.25 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%struct.cpumask = type { [1 x i32] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.27 }
%union.anon.27 = type { %struct.anon.28 }
%struct.anon.28 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.tlbflush_unmap_batch = type {}
%union.anon.64 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.defrag_target_range = type { %struct.list_head, i64, i64 }
%struct.btrfs_super_block = type <{ [32 x i8], [16 x i8], i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i64, i64, i64, i64, i16, i8, i8, i8, %struct.btrfs_dev_item, [256 x i8], i64, i64, [16 x i8], [28 x i64], [2048 x i8], [4 x %struct.btrfs_root_backup], [565 x i8] }>
%struct.btrfs_dev_item = type <{ i64, i64, i64, i32, i32, i32, i64, i64, i64, i32, i8, i8, [16 x i8], [16 x i8] }>
%struct.btrfs_root_backup = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [4 x i64], i8, i8, i8, i8, i8, i8, [10 x i8] }
%struct.btrfs_balance_control = type { %struct.btrfs_balance_args, %struct.btrfs_balance_args, %struct.btrfs_balance_args, i64, %struct.btrfs_balance_progress }
%struct.btrfs_balance_args = type { i64, %union.anon.86, i64, i64, i64, i64, i64, i64, i64, %union.anon.88, i32, i32, [6 x i64] }
%union.anon.86 = type { i64 }
%union.anon.88 = type { i64 }
%struct.btrfs_balance_progress = type { i64, i64, i64 }
%struct.btrfs_ioctl_balance_args = type { i64, i64, %struct.btrfs_balance_args, %struct.btrfs_balance_args, %struct.btrfs_balance_args, %struct.btrfs_balance_progress, [72 x i64] }
%struct.file = type { %union.anon.19, %struct.path, ptr, ptr, %struct.spinlock, i32, %struct.atomic_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, ptr, %struct.file_ra_state, i64, ptr, ptr, ptr, ptr, i32, i32 }
%union.anon.19 = type { %struct.callback_head }
%struct.path = type { ptr, ptr }
%struct.fown_struct = type { %struct.rwlock_t, ptr, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i32, i32, i32, i32, i32, i64 }
%struct.fstrim_range = type { i64, i64, i64 }
%struct.btrfs_device = type { %struct.list_head, %struct.list_head, %struct.list_head, ptr, ptr, ptr, i64, ptr, ptr, i32, i32, i8, %struct.seqcount, i64, i64, i64, i64, i32, i32, i64, i32, [16 x i8], i64, i64, ptr, %struct.completion, ptr, i32, %struct.atomic_t, [5 x %struct.atomic_t], %struct.extent_io_tree, %struct.completion, %struct.kobject, i64 }
%struct.block_device = type { i64, i64, ptr, i32, i8, i32, i32, ptr, ptr, ptr, %struct.device, ptr, i32, i8, ptr, i8, %struct.spinlock, ptr, ptr, i32, %struct.mutex, ptr, ptr, i8 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.request_queue = type { ptr, ptr, %struct.percpu_ref, ptr, ptr, ptr, ptr, i32, ptr, i32, ptr, i32, %struct.atomic_t, i32, %struct.spinlock, ptr, %struct.kobject, ptr, %struct.blk_integrity, ptr, i32, i32, i32, i32, ptr, i32, i32, ptr, ptr, %struct.timer_list, %struct.work_struct, %struct.atomic_t, ptr, %struct.list_head, [1 x i32], ptr, %struct.list_head, %struct.queue_limits, i32, i32, ptr, ptr, i32, i32, i32, %struct.mutex, ptr, ptr, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, ptr, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, i32, ptr, %struct.list_head, %struct.bio_set, ptr, ptr, ptr, i8, [5 x i64], ptr, [0 x %struct.srcu_struct] }
%struct.percpu_ref = type { i32, ptr }
%struct.blk_integrity = type { ptr, i8, i8, i8, i8 }
%struct.queue_limits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.bio_set = type { ptr, i32, ptr, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, i32, %struct.spinlock, %struct.bio_list, %struct.work_struct, ptr, %struct.hlist_node }
%struct.mempool_s = type { %struct.spinlock, i32, i32, ptr, ptr, ptr, ptr, %struct.wait_queue_head }
%struct.bio_list = type { ptr, ptr }
%struct.srcu_struct = type { [3 x %struct.srcu_node], [3 x ptr], %struct.mutex, %struct.spinlock, %struct.mutex, i32, i32, i32, i32, i32, ptr, i32, %struct.mutex, %struct.completion, %struct.atomic_t, %struct.delayed_work, %struct.lockdep_map }
%struct.srcu_node = type { %struct.spinlock, [4 x i32], [4 x i32], i32, ptr, i32, i32 }
%struct.btrfs_ioctl_vol_args = type { i64, [4088 x i8] }
%struct.vfsmount = type { ptr, ptr, i32, ptr }
%struct.btrfs_ioctl_vol_args_v2 = type { i64, i64, i64, %union.anon.97, %union.anon.99 }
%union.anon.97 = type { [4 x i64] }
%union.anon.99 = type { i64, [4032 x i8] }
%struct.btrfs_qgroup_inherit = type { i64, i64, i64, i64, %struct.btrfs_qgroup_limit, [0 x i64] }
%struct.btrfs_qgroup_limit = type { i64, i64, i64, i64, i64 }
%struct.btrfs_dev_lookup_args = type { i64, ptr, ptr, i8 }
%struct.rcu_string = type { %struct.callback_head, [0 x i8] }
%struct.btrfs_ioctl_fs_info_args = type { i64, i64, [16 x i8], i32, i32, i32, i16, i16, i64, i64, [16 x i8], [944 x i8] }
%struct.btrfs_ioctl_dev_info_args = type { i64, [16 x i8], i64, i64, [379 x i64], [1024 x i8] }
%struct.btrfs_ioctl_search_key = type { i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64 }
%struct.btrfs_ioctl_search_args = type { %struct.btrfs_ioctl_search_key, [3992 x i8] }
%struct.btrfs_ioctl_search_args_v2 = type { %struct.btrfs_ioctl_search_key, i64, [0 x i64] }
%struct.btrfs_ioctl_ino_lookup_args = type { i64, i64, [4080 x i8] }
%struct.btrfs_ioctl_ino_path_args = type { i64, i64, [4 x i64], i64 }
%struct.inode_fs_paths = type { ptr, ptr, ptr }
%struct.btrfs_data_container = type { i32, i32, i32, i32, [0 x i64] }
%struct.btrfs_ioctl_logical_ino_args = type { i64, i64, [3 x i64], i64, i64 }
%struct.btrfs_ioctl_space_args = type { i64, i64, [0 x %struct.btrfs_ioctl_space_info] }
%struct.btrfs_ioctl_space_info = type { i64, i64, i64 }
%struct.btrfs_space_info = type { %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i32, i8, i32, i64, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i64, i64, %struct.rw_semaphore, [9 x %struct.list_head], %struct.kobject, [9 x ptr] }
%struct.btrfs_ioctl_scrub_args = type { i64, i64, i64, i64, %struct.btrfs_scrub_progress, [109 x i64] }
%struct.btrfs_ioctl_get_dev_stats = type { i64, i64, i64, [5 x i64], [121 x i64] }
%struct.btrfs_ioctl_qgroup_assign_args = type { i64, i64, i64 }
%struct.btrfs_ioctl_qgroup_create_args = type { i64, i64 }
%struct.btrfs_ioctl_qgroup_limit_args = type { i64, %struct.btrfs_qgroup_limit }
%struct.btrfs_ioctl_quota_rescan_args = type { i64, i64, [6 x i64] }
%struct.btrfs_ioctl_dev_replace_args = type { i64, i64, %union.anon.101, [64 x i64] }
%union.anon.101 = type { %struct.btrfs_ioctl_dev_replace_start_params }
%struct.btrfs_ioctl_dev_replace_start_params = type { i64, i64, [1025 x i8], [1025 x i8] }
%struct.btrfs_ioctl_get_subvol_info_args = type { i64, [256 x i8], i64, i64, i64, i64, [16 x i8], [16 x i8], [16 x i8], i64, i64, i64, i64, %struct.btrfs_ioctl_timespec, %struct.btrfs_ioctl_timespec, %struct.btrfs_ioctl_timespec, %struct.btrfs_ioctl_timespec, [8 x i64] }
%struct.btrfs_ioctl_timespec = type { i64, i32 }
%struct.btrfs_path = type { [8 x ptr], [8 x i32], [8 x i8], i8, i8, i8 }
%struct.extent_buffer = type { i64, i32, i32, ptr, %struct.spinlock, %struct.atomic_t, %struct.atomic_t, i32, %struct.callback_head, i32, i8, %struct.rw_semaphore, [16 x ptr], %struct.list_head, %struct.list_head }
%struct.btrfs_header = type <{ [32 x i8], [16 x i8], i64, i64, [16 x i8], i64, i64, i32, i8 }>
%struct.btrfs_ioctl_get_subvol_rootref_args = type { i64, [255 x %struct.anon.102], i8, [7 x i8] }
%struct.anon.102 = type { i64, i64 }
%struct.btrfs_ioctl_ino_lookup_user_args = type { i64, i64, [256 x i8], [3824 x i8] }
%struct.btrfs_inode_ref = type <{ i64, i16 }>
%struct.btrfs_inode = type { ptr, %struct.btrfs_key, %struct.spinlock, %struct.extent_map_tree, %struct.extent_io_tree, %struct.extent_io_tree, %struct.extent_io_tree, %struct.mutex, %struct.btrfs_ordered_inode_tree, %struct.list_head, %struct.rb_node, i32, %struct.atomic_t, i64, i64, i64, i32, i32, i64, %union.anon.91, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, %struct.btrfs_block_rsv, i32, i32, ptr, %struct.timespec64, %struct.list_head, %struct.rw_semaphore, %struct.inode }
%struct.btrfs_ordered_inode_tree = type { %struct.spinlock, %struct.rb_root, ptr }
%union.anon.91 = type { i64 }
%struct.extent_map = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, ptr, %struct.refcount_struct, i32, %struct.list_head }
%struct.page = type { i32, %union.anon.6, %union.anon.70, %struct.atomic_t, i32 }
%union.anon.6 = type { %struct.anon.7 }
%struct.anon.7 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.70 = type { %struct.atomic_t }
%struct.extent_changeset = type { i32, %struct.ulist }
%struct.ulist = type { i32, %struct.list_head, %struct.rb_root }
%struct.cred = type { %struct.atomic_t, %struct.atomic_t, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %union.anon.44 }
%struct.kernel_cap_struct = type { [2 x i32] }
%union.anon.44 = type { %struct.callback_head }
%struct.btrfs_pending_snapshot = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.btrfs_block_rsv, i32, i32, i8, %struct.list_head }
%struct.btrfs_ioctl_search_header = type { i64, i64, i64, i32, i32 }
%struct.btrfs_ioctl_received_subvol_args = type { [16 x i8], i64, i64, %struct.btrfs_ioctl_timespec, %struct.btrfs_ioctl_timespec, i64, [16 x i64] }

@.str = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"btrfs.compression\00", [46 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"fs/btrfs/ioctl.c\00", [47 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\017BTRFS: Transaction aborted (error %d)\0A\00", [55 x i8] zeroinitializer }, align 32
@btrfs_fileattr_set.__UNIQUE_ID_ddebug936 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.3, ptr @.str.4, ptr @.str.1, ptr @.str.5, i8 0, i8 85, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.3 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"btrfs\00", [26 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"btrfs_fileattr_set\00", [45 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"Transaction aborted (error %d)\00", [33 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\017Transaction aborted (error %d)\00", [63 x i8] zeroinitializer }, align 32
@btrfs_fileattr_set.__UNIQUE_ID_ddebug937 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.3, ptr @.str.4, ptr @.str.1, ptr @.str.5, i8 0, i8 87, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.7 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"exclusive_operation\00", [44 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [109 x i8], [51 x i8] } { [109 x i8] c"fs_info->exclusive_operation == BTRFS_EXCLOP_BALANCE || fs_info->exclusive_operation == BTRFS_EXCLOP_DEV_ADD\00", [51 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"fs_info->exclusive_operation == BTRFS_EXCLOP_BALANCE_PAUSED\00", [36 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\014invalid exclop balance operation %d requested\00", [48 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"COMPRESS_LZO\00", [19 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"COMPRESS_ZSTD\00", [18 x i8] zeroinitializer }, align 32
@btrfs_ioctl_get_supported_features.features = internal constant { [3 x %struct.btrfs_ioctl_feature_flags], [56 x i8] } { [3 x %struct.btrfs_ioctl_feature_flags] [%struct.btrfs_ioctl_feature_flags { i64 0, i64 7, i64 8191 }, %struct.btrfs_ioctl_feature_flags { i64 0, i64 0, i64 64 }, %struct.btrfs_ioctl_feature_flags zeroinitializer], [56 x i8] zeroinitializer }, align 32
@assertfail._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.13, ptr @.str.14, ptr @.str.15, i32 3491, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\013assertion failed: %s, in %s:%d\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"assertfail\00", [21 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"fs/btrfs/ctree.h\00", [47 x i8] zeroinitializer }, align 32
@assertfail._entry_ptr = internal global ptr @assertfail._entry, section ".printk_index", align 4
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@.str.16 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"last->start + last->len <= cur\00", [33 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"btrfs_header_nritems(path.nodes[0])\00", [60 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"nr_pages <= CLUSTER_SIZE / PAGE_SIZE\00", [59 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"IS_ALIGNED(start, sectorsize) && IS_ALIGNED(len, sectorsize)\00", [35 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/pagemap.h\00", [40 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"VM_BUG_ON_PAGE(PageTail(page))\00", [33 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"VM_BUG_ON_PAGE(PagePoisoned(page))\00", [61 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"last_index - first_index + 1 <= nr_pages\00", [55 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"VM_BUG_ON_PAGE(1 && PageCompound(page))\00", [56 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"VM_BUG_ON_PAGE(page_ref_count(page) == 0)\00", [54 x i8] zeroinitializer }, align 32
@__tracepoint_page_ref_mod_and_test = external dso_local global %struct.tracepoint, align 4
@.str.27 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\016setting incompat feature flag for %s (0x%llx)\00", [48 x i8] zeroinitializer }, align 32
@check_copy_size.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.28 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/linux/thread_info.h\00", [36 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/uaccess.h\00", [40 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\014label is too long, return the first %zu bytes\00", [48 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\013unable to set label with more than %d bytes\00", [50 x i8] zeroinitializer }, align 32
@btrfs_ioctl_fitrim.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.33 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"RCU-list traversed in non-reader section!\00", [54 x i8] zeroinitializer }, align 32
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.34 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.36 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"\016Snapshot src from another FS\00", [33 x i8] zeroinitializer }, align 32
@init_user_ns = external dso_local global %struct.user_namespace, align 4
@.str.38 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\014cannot snapshot subvolume with active swapfile\00", [47 x i8] zeroinitializer }, align 32
@create_subvol.__UNIQUE_ID_ddebug945 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.3, ptr @.str.39, ptr @.str.1, ptr @.str.5, i8 0, i8 -90, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.39 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"create_subvol\00", [18 x i8] zeroinitializer }, align 32
@create_subvol.__UNIQUE_ID_ddebug946 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.3, ptr @.str.39, ptr @.str.1, ptr @.str.5, i8 0, i8 -88, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@create_subvol.__UNIQUE_ID_ddebug947 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.3, ptr @.str.39, ptr @.str.1, ptr @.str.5, i8 0, i8 -86, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@create_subvol.__UNIQUE_ID_ddebug948 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.3, ptr @.str.39, ptr @.str.1, ptr @.str.5, i8 0, i8 -84, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@create_subvol.__UNIQUE_ID_ddebug949 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.3, ptr @.str.39, ptr @.str.1, ptr @.str.5, i8 0, i8 -82, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@create_subvol.__UNIQUE_ID_ddebug950 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.3, ptr @.str.39, ptr @.str.1, ptr @.str.5, i8 0, i8 -80, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@create_subvol.__UNIQUE_ID_ddebug951 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.3, ptr @.str.39, ptr @.str.1, ptr @.str.5, i8 0, i8 -79, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@create_subvol.__UNIQUE_ID_ddebug952 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.3, ptr @.str.39, ptr @.str.1, ptr @.str.5, i8 0, i8 -77, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@__seqprop_assert.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@lockdep_recursion = external dso_local global i32, section ".data..percpu", align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@hardirqs_enabled = external dso_local global i32, section ".data..percpu", align 4
@.str.40 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/seqlock.h\00", [40 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"..\00", [29 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"\014Attempt to set subvolume %llu read-write during send\00", [41 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"default\00", [24 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\013Umm, you don't have the default diritem, this isn't going to work\00", [60 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"DEFAULT_SUBVOL\00", [17 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"cancel\00", [25 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"\016resizing devid %llu\00", [42 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"\016resizer unable to find device %llu\00", [59 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\016resizer unable to apply on readonly device %llu\00", [46 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"max\00", [28 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\016resize device %s (devid %llu) from %llu to %llu\00", [46 x i8] zeroinitializer }, align 32
@btrfs_ioctl_resize.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.52 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/wait_bit.h\00", [39 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"\016disk added %s\00", [16 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"\016disk deleted %s\00", [46 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"\016device deleted: id %llu\00", [38 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"\016device deleted: %s\00", [43 x i8] zeroinitializer }, align 32
@btrfs_ioctl_fs_info.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__const.btrfs_ioctl_dev_info.args = private unnamed_addr constant { i64, ptr, ptr, i8, [7 x i8] } { i64 -1, ptr null, ptr null, i8 0, [7 x i8] zeroinitializer }, align 8
@btrfs_ioctl_dev_info.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.58 = internal constant { [74 x i8], [54 x i8] } { [74 x i8] c"\014IOC_BALANCE ioctl (v1) is deprecated and will be removed in kernel 5.18\00", [54 x i8] zeroinitializer }, align 32
@btrfs_ioctl_space_info.types = internal constant { [4 x i64], [32 x i8] } { [4 x i64] [i64 1, i64 2, i64 4, i64 5], [32 x i8] zeroinitializer }, align 32
@_btrfs_ioctl_set_received_subvol.__UNIQUE_ID_ddebug985 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.3, ptr @.str.59, ptr @.str.1, ptr @.str.5, i8 4, i8 -80, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.59 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"_btrfs_ioctl_set_received_subvol\00", [63 x i8] zeroinitializer }, align 32
@_btrfs_ioctl_set_received_subvol.__UNIQUE_ID_ddebug986 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.3, ptr @.str.59, ptr @.str.1, ptr @.str.5, i8 4, i8 -74, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@__func__.btrfs_ioctl_qgroup_assign = private unnamed_addr constant [26 x i8] c"btrfs_ioctl_qgroup_assign\00", align 1
@.str.60 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"failed to update qgroup status and info\00", [56 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\014this kernel does not support the %s feature bit%s\00", [44 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"s\00", [30 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@.str.64 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\014this kernel does not support %s bits 0x%llx\00", [50 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"\014can't set the %s feature bit%s while mounted\00", [49 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\014can't set %s bits 0x%llx while mounted\00", [55 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\014can't clear the %s feature bit%s while mounted\00", [47 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\014can't clear %s bits 0x%llx while mounted\00", [53 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 16, i64 16384, i64 32768]
@__sancov_gen_cov_switch_values.69 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.70 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967235]
@__sancov_gen_cov_switch_values.71 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.72 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.73 = internal global [4 x i64] [i64 2, i64 32, i64 2, i64 3]
@__sancov_gen_cov_switch_values.74 = internal global [59 x i64] [i64 57, i64 32, i64 37896, i64 37916, i64 37934, i64 1074041889, i64 1074304019, i64 1074304022, i64 1074304026, i64 1074828330, i64 1075352617, i64 1076925456, i64 1076925497, i64 1077974060, i64 1078498342, i64 1082156677, i64 1090556978, i64 1342215169, i64 1342215170, i64 1342215171, i64 1342215178, i64 1342215179, i64 1342215180, i64 1342215182, i64 1342215183, i64 1342215191, i64 1342215192, i64 1342215226, i64 1342215231, i64 2147776001, i64 2148045848, i64 2148045849, i64 2149094457, i64 2150667307, i64 2151715885, i64 2152240185, i64 2164298801, i64 2180551740, i64 2214630431, i64 2214630434, i64 3221513862, i64 3222311956, i64 3222311976, i64 3222820985, i64 3224933411, i64 3224933412, i64 3224933435, i64 3228603409, i64 3234370597, i64 3288372251, i64 3288372253, i64 3288372256, i64 3288896564, i64 3391657013, i64 3489698833, i64 3489698834, i64 3489698846, i64 3489698877, i64 3489698878]
@__sancov_gen_cov_switch_values.75 = internal global [4 x i64] [i64 2, i64 16, i64 16384, i64 32768]
@__sancov_gen_cov_switch_values.76 = internal global [4 x i64] [i64 2, i64 8, i64 43, i64 45]
@__sancov_gen_cov_switch_values.77 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 3]
@__sancov_gen_cov_switch_values.78 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967171]
@__sancov_gen_cov_switch_values.79 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967221]
@__sancov_gen_cov_switch_values.80 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.81 = internal global [4 x i64] [i64 2, i64 64, i64 1, i64 2]
@__sancov_gen_cov_switch_values.82 = internal global [5 x i64] [i64 3, i64 64, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.83 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967171]
@__sancov_gen_cov_switch_values.84 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.85 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.86 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.87 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.88 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.89 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.90 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.91 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.92 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967294]
@__sancov_gen_cov_switch_values.93 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@__sancov_gen_cov_switch_values.94 = internal global [4 x i64] [i64 2, i64 32, i64 4294967266, i64 4294967291]
@___asan_gen_.97 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 338, i32 38 }
@___asan_gen_.115 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 341, i32 4 }
@___asan_gen_.118 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 417, i32 54 }
@___asan_gen_.121 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 426, i32 3 }
@___asan_gen_.124 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 433, i32 3 }
@___asan_gen_.127 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 438, i32 3 }
@___asan_gen_.130 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 1876, i32 4 }
@___asan_gen_.133 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 1878, i32 4 }
@___asan_gen_.134 = private unnamed_addr constant [9 x i8] c"features\00", align 1
@___asan_gen_.136 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 4988, i32 48 }
@___asan_gen_.137 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.148 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.180, i32 3491, i32 2 }
@___asan_gen_.151 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 1477, i32 4 }
@___asan_gen_.154 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 1073, i32 3 }
@___asan_gen_.157 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 1594, i32 2 }
@___asan_gen_.160 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 1595, i32 2 }
@___asan_gen_.162 = private unnamed_addr constant [27 x i8] c"../include/linux/pagemap.h\00", align 1
@___asan_gen_.163 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.162, i32 788, i32 2 }
@___asan_gen_.166 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.174, i32 260, i32 2 }
@___asan_gen_.169 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.174, i32 452, i32 1 }
@___asan_gen_.172 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 1557, i32 2 }
@___asan_gen_.174 = private unnamed_addr constant [30 x i8] c"../include/linux/page-flags.h\00", align 1
@___asan_gen_.175 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.174, i32 430, i32 1 }
@___asan_gen_.177 = private unnamed_addr constant [22 x i8] c"../include/linux/mm.h\00", align 1
@___asan_gen_.178 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.177, i32 717, i32 2 }
@___asan_gen_.180 = private unnamed_addr constant [20 x i8] c"../fs/btrfs/ctree.h\00", align 1
@___asan_gen_.181 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.180, i32 3648, i32 4 }
@___asan_gen_.184 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.186, i32 230, i32 6 }
@___asan_gen_.186 = private unnamed_addr constant [31 x i8] c"../include/linux/thread_info.h\00", align 1
@___asan_gen_.187 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.186, i32 214, i32 2 }
@___asan_gen_.189 = private unnamed_addr constant [27 x i8] c"../include/linux/uaccess.h\00", align 1
@___asan_gen_.190 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.189, i32 174, i32 2 }
@___asan_gen_.193 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 4928, i32 3 }
@___asan_gen_.196 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 4955, i32 3 }
@___asan_gen_.199 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 482, i32 2 }
@___asan_gen_.205 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.207, i32 695, i32 2 }
@___asan_gen_.207 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.208 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.207, i32 723, i32 2 }
@___asan_gen_.211 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 2123, i32 4 }
@___asan_gen_.214 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 760, i32 3 }
@___asan_gen_.217 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 664, i32 3 }
@___asan_gen_.219 = private unnamed_addr constant [27 x i8] c"../include/linux/seqlock.h\00", align 1
@___asan_gen_.220 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.219, i32 271, i32 2 }
@___asan_gen_.223 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 3302, i32 27 }
@___asan_gen_.226 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 2310, i32 4 }
@___asan_gen_.229 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 3768, i32 16 }
@___asan_gen_.232 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 3772, i32 3 }
@___asan_gen_.235 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 3783, i32 2 }
@___asan_gen_.238 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 1969, i32 19 }
@___asan_gen_.241 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 1987, i32 3 }
@___asan_gen_.244 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 1993, i32 3 }
@___asan_gen_.247 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 2000, i32 3 }
@___asan_gen_.250 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 2007, i32 23 }
@___asan_gen_.256 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 2069, i32 3 }
@___asan_gen_.258 = private unnamed_addr constant [28 x i8] c"../include/linux/wait_bit.h\00", align 1
@___asan_gen_.259 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.258, i32 73, i32 2 }
@___asan_gen_.262 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 3491, i32 3 }
@___asan_gen_.265 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 3604, i32 4 }
@___asan_gen_.268 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 3552, i32 4 }
@___asan_gen_.271 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 3555, i32 4 }
@___asan_gen_.274 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 4309, i32 3 }
@___asan_gen_.275 = private unnamed_addr constant [6 x i8] c"types\00", align 1
@___asan_gen_.277 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 3817, i32 19 }
@___asan_gen_.280 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 4803, i32 11 }
@___asan_gen_.283 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 4575, i32 3 }
@___asan_gen_.292 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 5031, i32 4 }
@___asan_gen_.295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 5036, i32 4 }
@___asan_gen_.298 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 5046, i32 4 }
@___asan_gen_.301 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 5051, i32 4 }
@___asan_gen_.304 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 5061, i32 4 }
@___asan_gen_.305 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.306 = private constant [20 x i8] c"../fs/btrfs/ioctl.c\00", align 1
@___asan_gen_.307 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.306, i32 5066, i32 4 }
@llvm.compiler.used = appending global [72 x ptr] [ptr @assertfail._entry, ptr @assertfail._entry_ptr, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @btrfs_ioctl_get_supported_features.features, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @btrfs_ioctl_space_info.types, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68], section "llvm.metadata"
@0 = internal global [71 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.97 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.115 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.115 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.115 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.115 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.115 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.115 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.118 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 109, i32 160, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.121 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.124 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.127 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.130 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.133 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @btrfs_ioctl_get_supported_features.features to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.134 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.136 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @assertfail._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.137 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.148 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.148 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.148 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.148 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.151 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.154 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.160 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.166 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.172 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.178 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.181 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.184 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.187 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.193 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.196 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.208 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.241 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.250 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.256 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.256 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.262 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 74, i32 128, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @btrfs_ioctl_space_info.types to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.275 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.280 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.298 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.301 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.304 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_sync_inode_flags_to_i_flags(ptr noundef %inode) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %flags = getelementptr i8, ptr %inode, i32 -240
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 8
  %and = lshr i32 %1, 5
  %and.lobit = and i32 %and, 1
  %and2 = lshr i32 %1, 3
  %2 = and i32 %and2, 8
  %3 = or i32 %2, %and.lobit
  %4 = and i32 %and, 4
  %5 = or i32 %3, %4
  %and14 = lshr i32 %1, 8
  %6 = and i32 %and14, 2
  %7 = or i32 %5, %6
  %and20 = lshr i32 %1, 4
  %8 = and i32 %and20, 64
  %9 = or i32 %7, %8
  %ro_flags = getelementptr i8, ptr %inode, i32 -236
  %10 = ptrtoint ptr %ro_flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %ro_flags, align 4
  %and25 = shl i32 %11, 16
  %12 = and i32 %and25, 65536
  %13 = or i32 %9, %12
  %i_flags = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 4
  br label %do.body

do.body:                                          ; preds = %__cmpxchg.exit.do.body_crit_edge, %entry
  %14 = ptrtoint ptr %i_flags to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %i_flags, align 4
  %and31 = and i32 %15, -65616
  %or32 = or i32 %13, %and31
  %call.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %i_flags, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !179
  tail call void @llvm.prefetch.p0(ptr %i_flags, i32 1, i32 3, i32 1) #20
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %do.body
  %16 = tail call { i32, i32 } asm sideeffect "@ __cmpxchg4\0A\09ldrex\09$1, [$2]\0A\09mov\09$0, #0\0A\09teq\09$1, $3\0A\09strexeq $0, $4, [$2]\0A", "=&r,=&r,r,Ir,r,~{memory},~{cc}"(ptr %i_flags, i32 %15, i32 %or32) #20, !srcloc !180
  %asmresult.i = extractvalue { i32, i32 } %16, 0
  %tobool.not.i = icmp eq i32 %asmresult.i, 0
  br i1 %tobool.not.i, label %__cmpxchg.exit, label %do.body.i.do.body.i_crit_edge

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i

__cmpxchg.exit:                                   ; preds = %do.body.i
  %asmresult1.i = extractvalue { i32, i32 } %16, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !181
  %cmp.not = icmp eq i32 %asmresult1.i, %15
  br i1 %cmp.not, label %do.end54, label %__cmpxchg.exit.do.body_crit_edge

__cmpxchg.exit.do.body_crit_edge:                 ; preds = %__cmpxchg.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body

do.end54:                                         ; preds = %__cmpxchg.exit
  call void @__sanitizer_cov_trace_pc() #22
  ret void
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_fileattr_get(ptr nocapture noundef readonly %dentry, ptr noundef %fa) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %0 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_inode.i, align 8
  %flags1.i = getelementptr i8, ptr %1, i32 -240
  %2 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags1.i, align 8
  %ro_flags2.i = getelementptr i8, ptr %1, i32 -236
  %4 = ptrtoint ptr %ro_flags2.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %ro_flags2.i, align 4
  %and.i = lshr i32 %3, 2
  %6 = and i32 %and.i, 248
  %and23.i = shl i32 %3, 6
  %7 = and i32 %and23.i, 65536
  %8 = or i32 %6, %7
  %and28.i = shl i32 %3, 22
  %9 = and i32 %and28.i, 8388608
  %10 = or i32 %8, %9
  %and33.i = shl i32 %5, 20
  %11 = and i32 %and33.i, 1048576
  %12 = or i32 %10, %11
  %and38.i = and i32 %3, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and38.i)
  %tobool39.not.i = icmp eq i32 %and38.i, 0
  %and42.i = lshr i32 %3, 9
  %13 = and i32 %and42.i, 4
  %iflags.8.v.i = select i1 %tobool39.not.i, i32 %13, i32 1024
  %iflags.8.i = or i32 %12, %iflags.8.v.i
  tail call void @fileattr_fill_flags(ptr noundef %fa, i32 noundef %iflags.8.i) #20
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @fileattr_fill_flags(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_fileattr_set(ptr nocapture noundef readnone %mnt_userns, ptr nocapture noundef readonly %dentry, ptr nocapture noundef readonly %fa) local_unnamed_addr #0 align 64 {
entry:
  %tmp254 = alloca %struct.timespec64, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %0 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_inode.i, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 33
  %4 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %s_fs_info.i, align 16
  %add.ptr.i = getelementptr i8, ptr %1, i32 -864
  %6 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %add.ptr.i, align 8
  %flags.i = getelementptr inbounds %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 7
  %8 = ptrtoint ptr %flags.i to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %flags.i, align 8
  %and.i = and i64 %9, 72057594037927936
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %cmp.i.not = icmp eq i64 %and.i, 0
  br i1 %cmp.i.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %fsx_valid.i = getelementptr inbounds %struct.fileattr, ptr %fa, i32 0, i32 6
  %10 = ptrtoint ptr %fsx_valid.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %bf.load.i = load i8, ptr %fsx_valid.i, align 4
  %11 = and i8 %bf.load.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %bf.cast.not.i = icmp eq i8 %11, 0
  br i1 %bf.cast.not.i, label %if.end.if.end7_crit_edge, label %land.rhs.i

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end7

land.rhs.i:                                       ; preds = %if.end
  %fsx_xflags.i = getelementptr inbounds %struct.fileattr, ptr %fa, i32 0, i32 1
  %12 = ptrtoint ptr %fsx_xflags.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %fsx_xflags.i, align 4
  %and.i361 = and i32 %13, -33529
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i361)
  %tobool.not.i = icmp eq i32 %and.i361, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %land.rhs.i.cleanup_crit_edge

land.rhs.i.cleanup_crit_edge:                     ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

lor.lhs.false.i:                                  ; preds = %land.rhs.i
  %fsx_extsize.i = getelementptr inbounds %struct.fileattr, ptr %fa, i32 0, i32 2
  %14 = ptrtoint ptr %fsx_extsize.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %fsx_extsize.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp.not.i = icmp eq i32 %15, 0
  br i1 %cmp.not.i, label %lor.lhs.false1.i, label %lor.lhs.false.i.cleanup_crit_edge

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

lor.lhs.false1.i:                                 ; preds = %lor.lhs.false.i
  %fsx_projid.i = getelementptr inbounds %struct.fileattr, ptr %fa, i32 0, i32 4
  %16 = ptrtoint ptr %fsx_projid.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %fsx_projid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp2.not.i = icmp eq i32 %17, 0
  br i1 %cmp2.not.i, label %fileattr_has_fsx.exit, label %lor.lhs.false1.i.cleanup_crit_edge

lor.lhs.false1.i.cleanup_crit_edge:               ; preds = %lor.lhs.false1.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

fileattr_has_fsx.exit:                            ; preds = %lor.lhs.false1.i
  %fsx_cowextsize.i = getelementptr inbounds %struct.fileattr, ptr %fa, i32 0, i32 5
  %18 = ptrtoint ptr %fsx_cowextsize.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %fsx_cowextsize.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %cmp3.i.not = icmp eq i32 %19, 0
  br i1 %cmp3.i.not, label %fileattr_has_fsx.exit.if.end7_crit_edge, label %fileattr_has_fsx.exit.cleanup_crit_edge

fileattr_has_fsx.exit.cleanup_crit_edge:          ; preds = %fileattr_has_fsx.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

fileattr_has_fsx.exit.if.end7_crit_edge:          ; preds = %fileattr_has_fsx.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end7

if.end7:                                          ; preds = %fileattr_has_fsx.exit.if.end7_crit_edge, %if.end.if.end7_crit_edge
  %20 = ptrtoint ptr %fa to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %fa, align 4
  %22 = ptrtoint ptr %1 to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %1, align 8
  %24 = and i16 %23, -4096
  %25 = zext i16 %24 to i64
  call void @__sanitizer_cov_trace_switch(i64 %25, ptr @__sancov_gen_cov_switch_values)
  switch i16 %24, label %if.else9.i [
    i16 16384, label %if.end7.btrfs_mask_fsflags_for_type.exit_crit_edge
    i16 -32768, label %if.then7.i
  ]

if.end7.btrfs_mask_fsflags_for_type.exit_crit_edge: ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #22
  br label %btrfs_mask_fsflags_for_type.exit

if.then7.i:                                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #22
  %and8.i = and i32 %21, -65537
  br label %btrfs_mask_fsflags_for_type.exit

if.else9.i:                                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #22
  %and10.i = and i32 %21, 192
  br label %btrfs_mask_fsflags_for_type.exit

btrfs_mask_fsflags_for_type.exit:                 ; preds = %if.else9.i, %if.then7.i, %if.end7.btrfs_mask_fsflags_for_type.exit_crit_edge
  %retval.0.i362 = phi i32 [ %and8.i, %if.then7.i ], [ %and10.i, %if.else9.i ], [ %21, %if.end7.btrfs_mask_fsflags_for_type.exit_crit_edge ]
  %flags1.i = getelementptr i8, ptr %1, i32 -240
  %26 = ptrtoint ptr %flags1.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %flags1.i, align 8
  %and.i364 = and i32 %retval.0.i362, -8455421
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i364)
  %tobool.not.i365 = icmp eq i32 %and.i364, 0
  br i1 %tobool.not.i365, label %if.end.i, label %btrfs_mask_fsflags_for_type.exit.cleanup_crit_edge

btrfs_mask_fsflags_for_type.exit.cleanup_crit_edge: ; preds = %btrfs_mask_fsflags_for_type.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end.i:                                         ; preds = %btrfs_mask_fsflags_for_type.exit
  %28 = and i32 %retval.0.i362, 1028
  call void @__sanitizer_cov_trace_const_cmp4(i32 1028, i32 %28)
  %.not.i = icmp eq i32 %28, 1028
  br i1 %.not.i, label %if.end.i.cleanup_crit_edge, label %if.end6.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end6.i:                                        ; preds = %if.end.i
  %and10.i366 = and i32 %retval.0.i362, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10.i366)
  %tobool11.not.i = icmp eq i32 %and10.i366, 0
  %29 = and i32 %retval.0.i362, 8388612
  call void @__sanitizer_cov_trace_const_cmp4(i32 8388612, i32 %29)
  %.not38.i = icmp eq i32 %29, 8388612
  br i1 %.not38.i, label %if.end6.i.cleanup_crit_edge, label %if.end13.i

if.end6.i.cleanup_crit_edge:                      ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end13.i:                                       ; preds = %if.end6.i
  %30 = and i32 %27, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool15.not.i = icmp eq i32 %30, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool18.not.i = icmp eq i32 %28, 0
  %or.cond36.i = or i1 %tobool18.not.i, %tobool15.not.i
  br i1 %or.cond36.i, label %if.end20.i, label %if.end13.i.cleanup_crit_edge

if.end13.i.cleanup_crit_edge:                     ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end20.i:                                       ; preds = %if.end13.i
  %31 = and i32 %27, 2056
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %32 = icmp eq i32 %31, 0
  %or.cond37.i = or i1 %tobool11.not.i, %32
  br i1 %or.cond37.i, label %if.end12, label %if.end20.i.cleanup_crit_edge

if.end20.i.cleanup_crit_edge:                     ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end12:                                         ; preds = %if.end20.i
  %33 = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 176
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %33, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %35)
  %cmp.i.not.i = icmp eq i64 %35, 0
  %tobool14.not = or i1 %tobool11.not.i, %cmp.i.not.i
  br i1 %tobool14.not, label %if.end16, label %if.end12.cleanup_crit_edge

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end16:                                         ; preds = %if.end12
  %and20 = and i32 %27, -993
  %and = shl nuw nsw i32 %retval.0.i362, 2
  %36 = and i32 %and, 32
  %binode_flags.0 = or i32 %and20, %36
  %37 = and i32 %and, 64
  %binode_flags.1 = or i32 %binode_flags.0, %37
  %38 = and i32 %and, 128
  %binode_flags.2 = or i32 %binode_flags.1, %38
  %39 = and i32 %and, 256
  %binode_flags.3 = or i32 %binode_flags.2, %39
  %40 = and i32 %and, 512
  %binode_flags.4 = or i32 %binode_flags.3, %40
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %bf.cast.not = icmp sgt i8 %bf.load.i, -1
  br i1 %bf.cast.not, label %if.then50, label %if.end56

if.then50:                                        ; preds = %if.end16
  %call51 = tail call ptr @btrfs_start_transaction(ptr noundef %7, i32 noundef 1) #20
  %cmp.i371 = icmp ugt ptr %call51, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i371, label %if.then53, label %if.then50.update_flags_crit_edge

if.then50.update_flags_crit_edge:                 ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #22
  br label %update_flags

if.then53:                                        ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #22
  %41 = ptrtoint ptr %call51 to i32
  br label %cleanup

if.end56:                                         ; preds = %if.end16
  %and62 = and i32 %binode_flags.4, -1025
  %and57 = lshr i32 %retval.0.i362, 6
  %42 = and i32 %and57, 1024
  %binode_flags.5 = or i32 %and62, %42
  call void @__sanitizer_cov_trace_const_cmp2(i16 -32768, i16 %24)
  %cmp82 = icmp eq i16 %24, -32768
  br i1 %tobool11.not.i, label %if.else78, label %if.then66

if.then66:                                        ; preds = %if.end56
  br i1 %cmp82, label %if.then69, label %if.else75

if.then69:                                        ; preds = %if.then66
  call void @__sanitizer_cov_trace_pc() #22
  %i_size = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 14
  %43 = ptrtoint ptr %i_size to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %i_size, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %44)
  %cmp70 = icmp eq i64 %44, 0
  %or73 = or i32 %binode_flags.5, 3
  %spec.select = select i1 %cmp70, i32 %or73, i32 %binode_flags.5
  br label %if.end94

if.else75:                                        ; preds = %if.then66
  call void @__sanitizer_cov_trace_pc() #22
  %or76 = or i32 %binode_flags.5, 2
  br label %if.end94

if.else78:                                        ; preds = %if.end56
  br i1 %cmp82, label %if.then84, label %if.else91

if.then84:                                        ; preds = %if.else78
  call void @__sanitizer_cov_trace_pc() #22
  %i_size85 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 14
  %45 = ptrtoint ptr %i_size85 to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %i_size85, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %46)
  %cmp86 = icmp eq i64 %46, 0
  %and89 = and i32 %binode_flags.5, -4
  %spec.select357 = select i1 %cmp86, i32 %and89, i32 %binode_flags.5
  br label %if.end94

if.else91:                                        ; preds = %if.else78
  call void @__sanitizer_cov_trace_pc() #22
  %and92 = and i32 %binode_flags.5, -3
  br label %if.end94

if.end94:                                         ; preds = %if.else91, %if.then84, %if.else75, %if.then69
  %binode_flags.6 = phi i32 [ %or76, %if.else75 ], [ %and92, %if.else91 ], [ %spec.select, %if.then69 ], [ %spec.select357, %if.then84 ]
  %and95 = and i32 %retval.0.i362, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and95)
  %tobool96.not = icmp eq i32 %and95, 0
  br i1 %tobool96.not, label %if.else100, label %if.then97

if.then97:                                        ; preds = %if.end94
  call void @__sanitizer_cov_trace_pc() #22
  %and98 = and i32 %binode_flags.6, -2057
  %or99 = or i32 %and98, 8
  br label %if.end124

if.else100:                                       ; preds = %if.end94
  %and101 = and i32 %retval.0.i362, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and101)
  %tobool102.not = icmp eq i32 %and101, 0
  br i1 %tobool102.not, label %if.else121, label %if.then103

if.then103:                                       ; preds = %if.else100
  %i_flags = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 4
  %47 = ptrtoint ptr %i_flags to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %i_flags, align 4
  %and104 = and i32 %48, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and104)
  %tobool105.not = icmp eq i32 %and104, 0
  br i1 %tobool105.not, label %if.end107, label %if.then103.cleanup_crit_edge

if.then103.cleanup_crit_edge:                     ; preds = %if.then103
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end107:                                        ; preds = %if.then103
  %or108 = and i32 %binode_flags.6, -2057
  %and109 = or i32 %or108, 2048
  %compress_type = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 33
  %49 = ptrtoint ptr %compress_type to i32
  call void @__asan_load1_noabort(i32 %49)
  %bf.load110 = load i8, ptr %compress_type, align 8
  %bf.lshr111 = lshr i8 %bf.load110, 4
  %bf.cast112 = zext i8 %bf.lshr111 to i32
  %call113 = tail call ptr @btrfs_compress_type2str(i32 noundef %bf.cast112) #20
  %tobool114.not = icmp eq ptr %call113, null
  br i1 %tobool114.not, label %if.end107.if.then118_crit_edge, label %lor.lhs.false

if.end107.if.then118_crit_edge:                   ; preds = %if.end107
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then118

lor.lhs.false:                                    ; preds = %if.end107
  %50 = ptrtoint ptr %call113 to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %call113, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %51)
  %cmp116 = icmp eq i8 %51, 0
  br i1 %cmp116, label %lor.lhs.false.if.then118_crit_edge, label %lor.lhs.false.if.end124_crit_edge

lor.lhs.false.if.end124_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end124

lor.lhs.false.if.then118_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then118

if.then118:                                       ; preds = %lor.lhs.false.if.then118_crit_edge, %if.end107.if.then118_crit_edge
  %call119 = tail call ptr @btrfs_compress_type2str(i32 noundef 1) #20
  br label %if.end124

if.else121:                                       ; preds = %if.else100
  call void @__sanitizer_cov_trace_pc() #22
  %and122 = and i32 %binode_flags.6, -2057
  br label %if.end124

if.end124:                                        ; preds = %if.else121, %if.then118, %lor.lhs.false.if.end124_crit_edge, %if.then97
  %comp.0 = phi ptr [ null, %if.then97 ], [ %call119, %if.then118 ], [ %call113, %lor.lhs.false.if.end124_crit_edge ], [ null, %if.else121 ]
  %binode_flags.7 = phi i32 [ %or99, %if.then97 ], [ %and109, %if.then118 ], [ %and109, %lor.lhs.false.if.end124_crit_edge ], [ %and122, %if.else121 ]
  %call125 = tail call ptr @btrfs_start_transaction(ptr noundef %7, i32 noundef 3) #20
  %cmp.i372 = icmp ugt ptr %call125, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i372, label %if.then127, label %if.end129

if.then127:                                       ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #22
  %52 = ptrtoint ptr %call125 to i32
  br label %cleanup

if.end129:                                        ; preds = %if.end124
  %tobool130.not = icmp eq ptr %comp.0, null
  br i1 %tobool130.not, label %if.else184, label %if.then131

if.then131:                                       ; preds = %if.end129
  %call132 = tail call i32 @strlen(ptr noundef nonnull %comp.0) #23
  %call133 = tail call i32 @btrfs_set_prop(ptr noundef %call125, ptr noundef %1, ptr noundef nonnull @.str, ptr noundef nonnull %comp.0, i32 noundef %call132, i32 noundef 0) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call133)
  %tobool134.not = icmp eq i32 %call133, 0
  br i1 %tobool134.not, label %if.then131.update_flags_crit_edge, label %do.body

if.then131.update_flags_crit_edge:                ; preds = %if.then131
  call void @__sanitizer_cov_trace_pc() #22
  br label %update_flags

do.body:                                          ; preds = %if.then131
  %fs_info136 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call125, i32 0, i32 16
  %53 = ptrtoint ptr %fs_info136 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %fs_info136, align 4
  %fs_state = getelementptr inbounds %struct.btrfs_fs_info, ptr %54, i32 0, i32 149
  %call137 = tail call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call137)
  %tobool138.not = icmp eq i32 %call137, 0
  br i1 %tobool138.not, label %if.then139, label %do.body.if.end180_crit_edge

do.body.if.end180_crit_edge:                      ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end180

if.then139:                                       ; preds = %do.body
  %55 = zext i32 %call133 to i64
  call void @__sanitizer_cov_trace_switch(i64 %55, ptr @__sancov_gen_cov_switch_values.69)
  switch i32 %call133, label %do.end [
    i32 -5, label %if.then139.do.body164_crit_edge
    i32 -30, label %if.then139.do.body164_crit_edge380
  ]

if.then139.do.body164_crit_edge380:               ; preds = %if.then139
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body164

if.then139.do.body164_crit_edge:                  ; preds = %if.then139
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body164

do.end:                                           ; preds = %if.then139
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 341, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %call133) #20
  br label %if.end180

do.body164:                                       ; preds = %if.then139.do.body164_crit_edge, %if.then139.do.body164_crit_edge380
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_fileattr_set.__UNIQUE_ID_ddebug936, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_fileattr_set, %if.then174)) #20
          to label %if.end180 [label %if.then174], !srcloc !182

if.then174:                                       ; preds = %do.body164
  call void @__sanitizer_cov_trace_pc() #22
  %56 = ptrtoint ptr %fs_info136 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %fs_info136, align 4
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %57, ptr noundef nonnull @.str.6, i32 noundef %call133) #24
  br label %if.end180

if.end180:                                        ; preds = %if.then174, %do.body164, %do.end, %do.body.if.end180_crit_edge
  tail call void @__btrfs_abort_transaction(ptr noundef %call125, ptr noundef nonnull @.str.4, i32 noundef 341, i32 noundef %call133) #24
  br label %out_end_trans

if.else184:                                       ; preds = %if.end129
  %call185 = tail call i32 @btrfs_set_prop(ptr noundef %call125, ptr noundef %1, ptr noundef nonnull @.str, ptr noundef null, i32 noundef 0, i32 noundef 0) #20
  %58 = zext i32 %call185 to i64
  call void @__sanitizer_cov_trace_switch(i64 %58, ptr @__sancov_gen_cov_switch_values.70)
  switch i32 %call185, label %do.body191 [
    i32 0, label %if.else184.update_flags_crit_edge
    i32 -61, label %if.else184.update_flags_crit_edge381
  ]

if.else184.update_flags_crit_edge381:             ; preds = %if.else184
  call void @__sanitizer_cov_trace_pc() #22
  br label %update_flags

if.else184.update_flags_crit_edge:                ; preds = %if.else184
  call void @__sanitizer_cov_trace_pc() #22
  br label %update_flags

do.body191:                                       ; preds = %if.else184
  %fs_info192 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call125, i32 0, i32 16
  %59 = ptrtoint ptr %fs_info192 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %fs_info192, align 4
  %fs_state193 = getelementptr inbounds %struct.btrfs_fs_info, ptr %60, i32 0, i32 149
  %call194 = tail call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state193) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call194)
  %tobool195.not = icmp eq i32 %call194, 0
  br i1 %tobool195.not, label %if.then196, label %do.body191.if.end248_crit_edge

do.body191.if.end248_crit_edge:                   ; preds = %do.body191
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end248

if.then196:                                       ; preds = %do.body191
  %61 = zext i32 %call185 to i64
  call void @__sanitizer_cov_trace_switch(i64 %61, ptr @__sancov_gen_cov_switch_values.71)
  switch i32 %call185, label %do.end215 [
    i32 -5, label %if.then196.do.body230_crit_edge
    i32 -30, label %if.then196.do.body230_crit_edge382
  ]

if.then196.do.body230_crit_edge382:               ; preds = %if.then196
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body230

if.then196.do.body230_crit_edge:                  ; preds = %if.then196
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body230

do.end215:                                        ; preds = %if.then196
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 348, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %call185) #20
  br label %if.end248

do.body230:                                       ; preds = %if.then196.do.body230_crit_edge, %if.then196.do.body230_crit_edge382
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @btrfs_fileattr_set.__UNIQUE_ID_ddebug937, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@btrfs_fileattr_set, %if.then242)) #20
          to label %if.end248 [label %if.then242], !srcloc !182

if.then242:                                       ; preds = %do.body230
  call void @__sanitizer_cov_trace_pc() #22
  %62 = ptrtoint ptr %fs_info192 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %fs_info192, align 4
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %63, ptr noundef nonnull @.str.6, i32 noundef %call185) #24
  br label %if.end248

if.end248:                                        ; preds = %if.then242, %do.body230, %do.end215, %do.body191.if.end248_crit_edge
  tail call void @__btrfs_abort_transaction(ptr noundef %call125, ptr noundef nonnull @.str.4, i32 noundef 348, i32 noundef %call185) #24
  br label %out_end_trans

update_flags:                                     ; preds = %if.else184.update_flags_crit_edge, %if.else184.update_flags_crit_edge381, %if.then131.update_flags_crit_edge, %if.then50.update_flags_crit_edge
  %binode_flags.8 = phi i32 [ %binode_flags.7, %if.then131.update_flags_crit_edge ], [ %binode_flags.7, %if.else184.update_flags_crit_edge ], [ %binode_flags.4, %if.then50.update_flags_crit_edge ], [ %binode_flags.7, %if.else184.update_flags_crit_edge381 ]
  %trans.0 = phi ptr [ %call125, %if.then131.update_flags_crit_edge ], [ %call125, %if.else184.update_flags_crit_edge ], [ %call51, %if.then50.update_flags_crit_edge ], [ %call125, %if.else184.update_flags_crit_edge381 ]
  %64 = ptrtoint ptr %flags1.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %binode_flags.8, ptr %flags1.i, align 8
  tail call void @btrfs_sync_inode_flags_to_i_flags(ptr noundef %1)
  tail call fastcc void @inode_inc_iversion(ptr noundef %1)
  %i_ctime = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 17
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %tmp254) #20
  call void @current_time(ptr nonnull sret(%struct.timespec64) align 8 %tmp254, ptr noundef %1) #20
  %65 = call ptr @memcpy(ptr %i_ctime, ptr %tmp254, i32 16)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %tmp254) #20
  %call256 = call i32 @btrfs_update_inode(ptr noundef %trans.0, ptr noundef %7, ptr noundef %add.ptr.i) #20
  br label %out_end_trans

out_end_trans:                                    ; preds = %update_flags, %if.end248, %if.end180
  %ret.0 = phi i32 [ %call133, %if.end180 ], [ %call256, %update_flags ], [ %call185, %if.end248 ]
  %trans.1 = phi ptr [ %call125, %if.end180 ], [ %trans.0, %update_flags ], [ %call125, %if.end248 ]
  %call257 = call i32 @btrfs_end_transaction(ptr noundef %trans.1) #20
  br label %cleanup

cleanup:                                          ; preds = %out_end_trans, %if.then127, %if.then103.cleanup_crit_edge, %if.then53, %if.end12.cleanup_crit_edge, %if.end20.i.cleanup_crit_edge, %if.end13.i.cleanup_crit_edge, %if.end6.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %btrfs_mask_fsflags_for_type.exit.cleanup_crit_edge, %fileattr_has_fsx.exit.cleanup_crit_edge, %lor.lhs.false1.i.cleanup_crit_edge, %lor.lhs.false.i.cleanup_crit_edge, %land.rhs.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %52, %if.then127 ], [ %ret.0, %out_end_trans ], [ %41, %if.then53 ], [ -30, %entry.cleanup_crit_edge ], [ -95, %fileattr_has_fsx.exit.cleanup_crit_edge ], [ -1, %if.end12.cleanup_crit_edge ], [ -26, %if.then103.cleanup_crit_edge ], [ -95, %lor.lhs.false1.i.cleanup_crit_edge ], [ -95, %lor.lhs.false.i.cleanup_crit_edge ], [ -95, %land.rhs.i.cleanup_crit_edge ], [ -22, %if.end20.i.cleanup_crit_edge ], [ -22, %if.end13.i.cleanup_crit_edge ], [ -22, %if.end6.i.cleanup_crit_edge ], [ -22, %if.end.i.cleanup_crit_edge ], [ -95, %btrfs_mask_fsflags_for_type.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_start_transaction(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_compress_type2str(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_set_prop(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @btrfs_printk(ptr noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @__btrfs_abort_transaction(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @inode_inc_iversion(ptr noundef %inode) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !183
  %i_version.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 38
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %i_version.i.i, i32 noundef 8) #20
  %call.i.i1.i = tail call i64 @generic_atomic64_read(ptr noundef %i_version.i.i) #20
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.cond.i.for.cond.i_crit_edge, %entry
  %cur.0.i = phi i64 [ %call.i.i1.i, %entry ], [ %call.i.i, %for.cond.i.for.cond.i_crit_edge ]
  %0 = add i64 %cur.0.i, 2
  %add.i = and i64 %0, -2
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %i_version.i.i, i32 noundef 8) #20
  %call.i.i = tail call i64 @generic_atomic64_cmpxchg(ptr noundef %i_version.i.i, i64 noundef %cur.0.i, i64 noundef %add.i) #20
  %cmp.i = icmp eq i64 %call.i.i, %cur.0.i
  br i1 %cmp.i, label %inode_maybe_inc_iversion.exit, label %for.cond.i.for.cond.i_crit_edge, !prof !184

for.cond.i.for.cond.i_crit_edge:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond.i

inode_maybe_inc_iversion.exit:                    ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #22
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @current_time(ptr sret(%struct.timespec64) align 8, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_update_inode(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_end_transaction(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @btrfs_exclop_start(ptr noundef %fs_info, i32 noundef %type) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %super_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 42
  tail call void @_raw_spin_lock(ptr noundef %super_lock) #20
  %exclusive_operation = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 175
  %0 = ptrtoint ptr %exclusive_operation to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %exclusive_operation, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %2 = ptrtoint ptr %exclusive_operation to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %type, ptr %exclusive_operation, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %super_lock) #20
  ret i1 %cmp
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @btrfs_exclop_start_try_lock(ptr noundef %fs_info, i32 noundef %type) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %super_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 42
  tail call void @_raw_spin_lock(ptr noundef %super_lock) #20
  %exclusive_operation = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 175
  %0 = ptrtoint ptr %exclusive_operation to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %exclusive_operation, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %type)
  %cmp = icmp eq i32 %1, %type
  br i1 %cmp, label %entry.return_crit_edge, label %lor.lhs.false

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

lor.lhs.false:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp2 = icmp eq i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %type)
  %cmp3 = icmp eq i32 %type, 3
  %or.cond = and i1 %cmp3, %cmp2
  br i1 %or.cond, label %lor.lhs.false.return_crit_edge, label %if.end

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @_raw_spin_unlock(ptr noundef %super_lock) #20
  br label %return

return:                                           ; preds = %if.end, %lor.lhs.false.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i1 [ false, %if.end ], [ true, %lor.lhs.false.return_crit_edge ], [ true, %entry.return_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_exclop_start_unlock(ptr noundef %fs_info) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %super_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 42
  tail call void @_raw_spin_unlock(ptr noundef %super_lock) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_exclop_finish(ptr noundef %fs_info) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %super_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 42
  tail call void @_raw_spin_lock(ptr noundef %super_lock) #20
  %exclusive_operation = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 175
  %0 = ptrtoint ptr %exclusive_operation to i32
  call void @__asan_store4_noabort(i32 %0)
  store volatile i32 0, ptr %exclusive_operation, align 4
  tail call void @_raw_spin_unlock(ptr noundef %super_lock) #20
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %1 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %fs_devices, align 8
  %fsid_kobj = getelementptr inbounds %struct.btrfs_fs_devices, ptr %2, i32 0, i32 20
  tail call void @sysfs_notify(ptr noundef %fsid_kobj, ptr noundef null, ptr noundef nonnull @.str.7) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @sysfs_notify(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_exclop_balance(ptr noundef %fs_info, i32 noundef %op) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %op to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.72)
  switch i32 %op, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb6
  ]

sw.bb:                                            ; preds = %entry
  %super_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 42
  tail call void @_raw_spin_lock(ptr noundef %super_lock) #20
  %exclusive_operation = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 175
  %1 = ptrtoint ptr %exclusive_operation to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %exclusive_operation, align 4
  %3 = and i32 %2, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %3)
  %switch = icmp eq i32 %3, 2
  br i1 %switch, label %cond.end, label %cond.false

cond.false:                                       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #22
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.8, i32 noundef 427) #25
  unreachable

cond.end:                                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #22
  %4 = ptrtoint ptr %exclusive_operation to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 1, ptr %exclusive_operation, align 4
  tail call void @_raw_spin_unlock(ptr noundef %super_lock) #20
  br label %sw.epilog

sw.bb6:                                           ; preds = %entry
  %super_lock7 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 42
  tail call void @_raw_spin_lock(ptr noundef %super_lock7) #20
  %exclusive_operation8 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 175
  %5 = ptrtoint ptr %exclusive_operation8 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %exclusive_operation8, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %6)
  %cmp9 = icmp eq i32 %6, 1
  br i1 %cmp9, label %cond.end18, label %cond.false17, !prof !184

cond.false17:                                     ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #22
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.9, i32 noundef 433) #25
  unreachable

cond.end18:                                       ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #22
  %7 = ptrtoint ptr %exclusive_operation8 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 2, ptr %exclusive_operation8, align 4
  tail call void @_raw_spin_unlock(ptr noundef %super_lock7) #20
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.10, i32 noundef %op) #24
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %cond.end18, %cond.end
  ret void
}

; Function Attrs: cold inlinehint noreturn nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @assertfail(ptr noundef %expr, i32 noundef %line) unnamed_addr #6 align 64 {
entry:
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.13, ptr noundef %expr, ptr noundef nonnull @.str.1, i32 noundef %line) #24
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/ctree.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3492, 0\0A.popsection", ""() #20, !srcloc !185
  unreachable
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @btrfs_is_empty_uuid(ptr nocapture noundef readonly %uuid) local_unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %uuid to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %uuid, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %for.cond, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.cond:                                         ; preds = %entry
  %arrayidx.1 = getelementptr i8, ptr %uuid, i32 1
  %2 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arrayidx.1, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not.1 = icmp eq i8 %3, 0
  br i1 %tobool.not.1, label %for.cond.1, label %for.cond.cleanup_crit_edge

for.cond.cleanup_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.cond.1:                                       ; preds = %for.cond
  %arrayidx.2 = getelementptr i8, ptr %uuid, i32 2
  %4 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %arrayidx.2, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not.2 = icmp eq i8 %5, 0
  br i1 %tobool.not.2, label %for.cond.2, label %for.cond.1.cleanup_crit_edge

for.cond.1.cleanup_crit_edge:                     ; preds = %for.cond.1
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.cond.2:                                       ; preds = %for.cond.1
  %arrayidx.3 = getelementptr i8, ptr %uuid, i32 3
  %6 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx.3, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not.3 = icmp eq i8 %7, 0
  br i1 %tobool.not.3, label %for.cond.3, label %for.cond.2.cleanup_crit_edge

for.cond.2.cleanup_crit_edge:                     ; preds = %for.cond.2
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.cond.3:                                       ; preds = %for.cond.2
  %arrayidx.4 = getelementptr i8, ptr %uuid, i32 4
  %8 = ptrtoint ptr %arrayidx.4 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx.4, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.not.4 = icmp eq i8 %9, 0
  br i1 %tobool.not.4, label %for.cond.4, label %for.cond.3.cleanup_crit_edge

for.cond.3.cleanup_crit_edge:                     ; preds = %for.cond.3
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.cond.4:                                       ; preds = %for.cond.3
  %arrayidx.5 = getelementptr i8, ptr %uuid, i32 5
  %10 = ptrtoint ptr %arrayidx.5 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx.5, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool.not.5 = icmp eq i8 %11, 0
  br i1 %tobool.not.5, label %for.cond.5, label %for.cond.4.cleanup_crit_edge

for.cond.4.cleanup_crit_edge:                     ; preds = %for.cond.4
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.cond.5:                                       ; preds = %for.cond.4
  %arrayidx.6 = getelementptr i8, ptr %uuid, i32 6
  %12 = ptrtoint ptr %arrayidx.6 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx.6, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool.not.6 = icmp eq i8 %13, 0
  br i1 %tobool.not.6, label %for.cond.6, label %for.cond.5.cleanup_crit_edge

for.cond.5.cleanup_crit_edge:                     ; preds = %for.cond.5
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.cond.6:                                       ; preds = %for.cond.5
  %arrayidx.7 = getelementptr i8, ptr %uuid, i32 7
  %14 = ptrtoint ptr %arrayidx.7 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %arrayidx.7, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.not.7 = icmp eq i8 %15, 0
  br i1 %tobool.not.7, label %for.cond.7, label %for.cond.6.cleanup_crit_edge

for.cond.6.cleanup_crit_edge:                     ; preds = %for.cond.6
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.cond.7:                                       ; preds = %for.cond.6
  %arrayidx.8 = getelementptr i8, ptr %uuid, i32 8
  %16 = ptrtoint ptr %arrayidx.8 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %arrayidx.8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool.not.8 = icmp eq i8 %17, 0
  br i1 %tobool.not.8, label %for.cond.8, label %for.cond.7.cleanup_crit_edge

for.cond.7.cleanup_crit_edge:                     ; preds = %for.cond.7
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.cond.8:                                       ; preds = %for.cond.7
  %arrayidx.9 = getelementptr i8, ptr %uuid, i32 9
  %18 = ptrtoint ptr %arrayidx.9 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %arrayidx.9, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool.not.9 = icmp eq i8 %19, 0
  br i1 %tobool.not.9, label %for.cond.9, label %for.cond.8.cleanup_crit_edge

for.cond.8.cleanup_crit_edge:                     ; preds = %for.cond.8
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.cond.9:                                       ; preds = %for.cond.8
  %arrayidx.10 = getelementptr i8, ptr %uuid, i32 10
  %20 = ptrtoint ptr %arrayidx.10 to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %arrayidx.10, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool.not.10 = icmp eq i8 %21, 0
  br i1 %tobool.not.10, label %for.cond.10, label %for.cond.9.cleanup_crit_edge

for.cond.9.cleanup_crit_edge:                     ; preds = %for.cond.9
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.cond.10:                                      ; preds = %for.cond.9
  %arrayidx.11 = getelementptr i8, ptr %uuid, i32 11
  %22 = ptrtoint ptr %arrayidx.11 to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %arrayidx.11, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool.not.11 = icmp eq i8 %23, 0
  br i1 %tobool.not.11, label %for.cond.11, label %for.cond.10.cleanup_crit_edge

for.cond.10.cleanup_crit_edge:                    ; preds = %for.cond.10
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.cond.11:                                      ; preds = %for.cond.10
  %arrayidx.12 = getelementptr i8, ptr %uuid, i32 12
  %24 = ptrtoint ptr %arrayidx.12 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %arrayidx.12, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %tobool.not.12 = icmp eq i8 %25, 0
  br i1 %tobool.not.12, label %for.cond.12, label %for.cond.11.cleanup_crit_edge

for.cond.11.cleanup_crit_edge:                    ; preds = %for.cond.11
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.cond.12:                                      ; preds = %for.cond.11
  %arrayidx.13 = getelementptr i8, ptr %uuid, i32 13
  %26 = ptrtoint ptr %arrayidx.13 to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %arrayidx.13, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %27)
  %tobool.not.13 = icmp eq i8 %27, 0
  br i1 %tobool.not.13, label %for.cond.13, label %for.cond.12.cleanup_crit_edge

for.cond.12.cleanup_crit_edge:                    ; preds = %for.cond.12
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.cond.13:                                      ; preds = %for.cond.12
  %arrayidx.14 = getelementptr i8, ptr %uuid, i32 14
  %28 = ptrtoint ptr %arrayidx.14 to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %arrayidx.14, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %29)
  %tobool.not.14 = icmp eq i8 %29, 0
  br i1 %tobool.not.14, label %for.cond.14, label %for.cond.13.cleanup_crit_edge

for.cond.13.cleanup_crit_edge:                    ; preds = %for.cond.13
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.cond.14:                                      ; preds = %for.cond.13
  call void @__sanitizer_cov_trace_pc() #22
  %arrayidx.15 = getelementptr i8, ptr %uuid, i32 15
  %30 = ptrtoint ptr %arrayidx.15 to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %arrayidx.15, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %31)
  %tobool.not.15 = icmp eq i8 %31, 0
  %spec.select = zext i1 %tobool.not.15 to i32
  br label %cleanup

cleanup:                                          ; preds = %for.cond.14, %for.cond.13.cleanup_crit_edge, %for.cond.12.cleanup_crit_edge, %for.cond.11.cleanup_crit_edge, %for.cond.10.cleanup_crit_edge, %for.cond.9.cleanup_crit_edge, %for.cond.8.cleanup_crit_edge, %for.cond.7.cleanup_crit_edge, %for.cond.6.cleanup_crit_edge, %for.cond.5.cleanup_crit_edge, %for.cond.4.cleanup_crit_edge, %for.cond.3.cleanup_crit_edge, %for.cond.2.cleanup_crit_edge, %for.cond.1.cleanup_crit_edge, %for.cond.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 0, %for.cond.cleanup_crit_edge ], [ 0, %for.cond.1.cleanup_crit_edge ], [ 0, %for.cond.2.cleanup_crit_edge ], [ 0, %for.cond.3.cleanup_crit_edge ], [ 0, %for.cond.4.cleanup_crit_edge ], [ 0, %for.cond.5.cleanup_crit_edge ], [ 0, %for.cond.6.cleanup_crit_edge ], [ 0, %for.cond.7.cleanup_crit_edge ], [ 0, %for.cond.8.cleanup_crit_edge ], [ 0, %for.cond.9.cleanup_crit_edge ], [ 0, %for.cond.10.cleanup_crit_edge ], [ 0, %for.cond.11.cleanup_crit_edge ], [ 0, %for.cond.12.cleanup_crit_edge ], [ 0, %for.cond.13.cleanup_crit_edge ], [ %spec.select, %for.cond.14 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_defrag_file(ptr noundef %inode, ptr noundef %ra, ptr nocapture noundef %range, i64 noundef %newer_than, i32 noundef %max_to_defrag) local_unnamed_addr #0 align 64 {
entry:
  %ractl.i.i = alloca %struct.readahead_control, align 4
  %target_list.i = alloca %struct.list_head, align 4
  %last_scanned = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 33
  %2 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s_fs_info.i, align 16
  %i_size_seqcount.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 23
  %i_size18.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 14
  br label %do.body.i

do.body.i:                                        ; preds = %while.end.i.do.body.i_crit_edge, %entry
  tail call fastcc void @seqcount_lockdep_reader_access(ptr noundef %i_size_seqcount.i) #20
  %4 = ptrtoint ptr %i_size_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %i_size_seqcount.i, align 4
  %and29.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29.i)
  %tobool.not30.i = icmp eq i32 %and29.i, 0
  br i1 %tobool.not30.i, label %do.body.i.while.end.i_crit_edge, label %do.body.i.do.end.i_crit_edge

do.body.i.do.end.i_crit_edge:                     ; preds = %do.body.i
  br label %do.end.i

do.body.i.while.end.i_crit_edge:                  ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end.i

do.end.i:                                         ; preds = %do.end.i.do.end.i_crit_edge, %do.body.i.do.end.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !186
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #20, !srcloc !187
  %6 = ptrtoint ptr %i_size_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %i_size_seqcount.i, align 4
  %and.i = and i32 %7, 1
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %do.end.i.while.end.i_crit_edge, label %do.end.i.do.end.i_crit_edge

do.end.i.do.end.i_crit_edge:                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end.i

do.end.i.while.end.i_crit_edge:                   ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end.i

while.end.i:                                      ; preds = %do.end.i.while.end.i_crit_edge, %do.body.i.while.end.i_crit_edge
  %.lcssa.i = phi i32 [ %5, %do.body.i.while.end.i_crit_edge ], [ %7, %do.end.i.while.end.i_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !188
  %8 = ptrtoint ptr %i_size18.i to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %i_size18.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !189
  %10 = ptrtoint ptr %i_size_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %i_size_seqcount.i, align 4
  %cmp.i.i.not.i = icmp eq i32 %11, %.lcssa.i
  br i1 %cmp.i.i.not.i, label %i_size_read.exit, label %while.end.i.do.body.i_crit_edge

while.end.i.do.body.i_crit_edge:                  ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i

i_size_read.exit:                                 ; preds = %while.end.i
  %flags = getelementptr inbounds %struct.btrfs_ioctl_defrag_range_args, ptr %range, i32 0, i32 2
  %12 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %flags, align 8
  %and = and i64 %13, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool = icmp ne i64 %and, 0
  %extent_thresh2 = getelementptr inbounds %struct.btrfs_ioctl_defrag_range_args, ptr %range, i32 0, i32 3
  %14 = ptrtoint ptr %extent_thresh2 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %extent_thresh2, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %9)
  %cmp = icmp eq i64 %9, 0
  br i1 %cmp, label %i_size_read.exit.cleanup152_crit_edge, label %if.end

i_size_read.exit.cleanup152_crit_edge:            ; preds = %i_size_read.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup152

if.end:                                           ; preds = %i_size_read.exit
  %16 = ptrtoint ptr %range to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %range, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %17, i64 %9)
  %cmp3.not = icmp ult i64 %17, %9
  br i1 %cmp3.not, label %if.end5, label %if.end.cleanup152_crit_edge

if.end.cleanup152_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup152

if.end5:                                          ; preds = %if.end
  br i1 %tobool, label %if.then7, label %if.end5.if.end17_crit_edge

if.end5.if.end17_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end17

if.then7:                                         ; preds = %if.end5
  %compress_type8 = getelementptr inbounds %struct.btrfs_ioctl_defrag_range_args, ptr %range, i32 0, i32 4
  %18 = ptrtoint ptr %compress_type8 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %compress_type8, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %19)
  %cmp9 = icmp ugt i32 %19, 3
  br i1 %cmp9, label %if.then7.cleanup152_crit_edge, label %if.end11

if.then7.cleanup152_crit_edge:                    ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup152

if.end11:                                         ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool13.not = icmp eq i32 %19, 0
  %spec.select = select i1 %tobool13.not, i32 1, i32 %19
  br label %if.end17

if.end17:                                         ; preds = %if.end11, %if.end5.if.end17_crit_edge
  %compress_type.0 = phi i32 [ 1, %if.end5.if.end17_crit_edge ], [ %spec.select, %if.end11 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp18 = icmp eq i32 %15, 0
  %spec.store.select = select i1 %cmp18, i32 262144, i32 %15
  %len = getelementptr inbounds %struct.btrfs_ioctl_defrag_range_args, ptr %range, i32 0, i32 1
  %20 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %len, align 8
  %add = add i64 %21, %17
  call void @__sanitizer_cov_trace_cmp8(i64 %add, i64 %17)
  %cmp23 = icmp ugt i64 %add, %17
  %22 = tail call i64 @llvm.umin.i64(i64 %9, i64 %add)
  %last_byte.0 = select i1 %cmp23, i64 %22, i64 %9
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 167
  %23 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %sectorsize, align 4
  %sub = add i32 %24, -1
  %conv = zext i32 %sub to i64
  %neg = xor i64 %conv, -1
  %and31 = and i64 %17, %neg
  %sub32 = add i64 %last_byte.0, -1
  %or = or i64 %sub32, %conv
  %tobool38.not = icmp eq ptr %ra, null
  br i1 %tobool38.not, label %if.then39, label %if.end17.if.end44_crit_edge

if.end17.if.end44_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end44

if.then39:                                        ; preds = %if.end17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %25 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %25, i32 noundef 3520, i32 noundef 32) #26
  %tobool41.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool41.not, label %if.then39.if.end44_crit_edge, label %if.then42

if.then39.if.end44_crit_edge:                     ; preds = %if.then39
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end44

if.then42:                                        ; preds = %if.then39
  call void @__sanitizer_cov_trace_pc() #22
  %i_mapping = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  %26 = ptrtoint ptr %i_mapping to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %i_mapping, align 8
  tail call void @file_ra_state_init(ptr noundef nonnull %call7.i.i, ptr noundef %27) #20
  br label %if.end44

if.end44:                                         ; preds = %if.then42, %if.then39.if.end44_crit_edge, %if.end17.if.end44_crit_edge
  %ra.addr.0 = phi ptr [ %ra, %if.end17.if.end44_crit_edge ], [ %call7.i.i, %if.then42 ], [ null, %if.then39.if.end44_crit_edge ]
  %shr = lshr i64 %and31, 12
  %conv45 = trunc i64 %shr to i32
  %i_mapping46 = getelementptr %struct.inode, ptr %inode, i32 0, i32 9
  %28 = ptrtoint ptr %i_mapping46 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %i_mapping46, align 8
  %writeback_index = getelementptr inbounds %struct.address_space, ptr %29, i32 0, i32 8
  %30 = ptrtoint ptr %writeback_index to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %writeback_index, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %31, i32 %conv45)
  %cmp47 = icmp ugt i32 %31, %conv45
  br i1 %cmp47, label %if.then49, label %if.end44.if.end52_crit_edge

if.end44.if.end52_crit_edge:                      ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end52

if.then49:                                        ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #22
  %32 = ptrtoint ptr %writeback_index to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %conv45, ptr %writeback_index, align 4
  br label %if.end52

if.end52:                                         ; preds = %if.then49, %if.end44.if.end52_crit_edge
  call void @__sanitizer_cov_trace_cmp8(i64 %and31, i64 %or)
  %cmp53271 = icmp ult i64 %and31, %or
  br i1 %cmp53271, label %while.body.lr.ph, label %if.end52.while.end_crit_edge

if.end52.while.end_crit_edge:                     ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.body.lr.ph:                                 ; preds = %if.end52
  %i_flags = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 4
  %defrag_compress = getelementptr i8, ptr %inode, i32 -132
  %add.ptr.i233 = getelementptr i8, ptr %inode, i32 -864
  %33 = getelementptr inbounds %struct.list_head, ptr %target_list.i, i32 0, i32 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %max_to_defrag)
  %tobool10.not.i = icmp eq i32 %max_to_defrag, 0
  %tobool27.not.i = icmp eq ptr %ra.addr.0, null
  %34 = getelementptr inbounds %struct.readahead_control, ptr %ractl.i.i, i32 0, i32 1
  %35 = getelementptr inbounds %struct.readahead_control, ptr %ractl.i.i, i32 0, i32 2
  %36 = getelementptr inbounds %struct.readahead_control, ptr %ractl.i.i, i32 0, i32 3
  %37 = getelementptr inbounds %struct.readahead_control, ptr %ractl.i.i, i32 0, i32 4
  %38 = getelementptr inbounds %struct.readahead_control, ptr %ractl.i.i, i32 0, i32 5
  br label %while.body

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %while.body.lr.ph
  %cur.0274 = phi i64 [ %and31, %while.body.lr.ph ], [ %113, %cleanup.while.body_crit_edge ]
  %sectors_defragged.0272 = phi i32 [ 0, %while.body.lr.ph ], [ %sectors_defragged.3, %cleanup.while.body_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %last_scanned) #20
  %39 = ptrtoint ptr %last_scanned to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %cur.0274, ptr %last_scanned, align 8
  %40 = call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i = and i32 %40, -16384
  %41 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %41, i32 0, i32 2
  %42 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %task.i, align 8
  %stack.i.i.i = getelementptr inbounds %struct.task_struct, ptr %43, i32 0, i32 1
  %44 = ptrtoint ptr %stack.i.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %stack.i.i.i, align 4
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %45, align 4
  %48 = and i32 %47, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool.not.i.i = icmp eq i32 %48, 0
  br i1 %tobool.not.i.i, label %btrfs_defrag_cancelled.exit, label %while.body.cleanup.thread_crit_edge, !prof !184

while.body.cleanup.thread_crit_edge:              ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.thread

btrfs_defrag_cancelled.exit:                      ; preds = %while.body
  %49 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %45, align 4
  %and1.i.i.i.i.i.i = and i32 %50, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i.i.i)
  %tobool56.not = icmp eq i32 %and1.i.i.i.i.i.i, 0
  br i1 %tobool56.not, label %if.end58, label %btrfs_defrag_cancelled.exit.cleanup.thread_crit_edge

btrfs_defrag_cancelled.exit.cleanup.thread_crit_edge: ; preds = %btrfs_defrag_cancelled.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.thread

if.end58:                                         ; preds = %btrfs_defrag_cancelled.exit
  %51 = add i64 %cur.0274, 262144
  %shl = and i64 %51, -4096
  %sub61 = add i64 %shl, -1
  %52 = call i64 @llvm.umin.i64(i64 %sub61, i64 %or)
  %call69 = call i32 @btrfs_inode_lock(ptr noundef %inode, i32 noundef 0) #20
  %53 = ptrtoint ptr %i_flags to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %i_flags, align 4
  %and70 = and i32 %54, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and70)
  %tobool71.not = icmp eq i32 %and70, 0
  br i1 %tobool71.not, label %if.end73, label %if.end58.cleanup.thread.sink.split_crit_edge

if.end58.cleanup.thread.sink.split_crit_edge:     ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.thread.sink.split

if.end73:                                         ; preds = %if.end58
  %55 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %i_sb, align 4
  %s_flags = getelementptr inbounds %struct.super_block, ptr %56, i32 0, i32 10
  %57 = ptrtoint ptr %s_flags to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %s_flags, align 4
  %and75 = and i32 %58, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and75)
  %tobool76.not = icmp eq i32 %and75, 0
  br i1 %tobool76.not, label %if.end73.cleanup.thread.sink.split_crit_edge, label %if.end78

if.end73.cleanup.thread.sink.split_crit_edge:     ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.thread.sink.split

if.end78:                                         ; preds = %if.end73
  br i1 %tobool, label %if.then80, label %if.end78.if.end82_crit_edge

if.end78.if.end82_crit_edge:                      ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end82

if.then80:                                        ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #22
  %59 = ptrtoint ptr %defrag_compress to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %compress_type.0, ptr %defrag_compress, align 4
  br label %if.end82

if.end82:                                         ; preds = %if.then80, %if.end78.if.end82_crit_edge
  %add84 = add i64 %52, 1
  %sub85 = sub i64 %add84, %cur.0274
  %60 = ptrtoint ptr %add.ptr.i233 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %add.ptr.i233, align 8
  %fs_info.i = getelementptr inbounds %struct.btrfs_root, ptr %61, i32 0, i32 8
  %62 = ptrtoint ptr %fs_info.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %fs_info.i, align 8
  %sectorsize1.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %63, i32 0, i32 167
  %64 = ptrtoint ptr %sectorsize1.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %sectorsize1.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %target_list.i) #20
  %66 = ptrtoint ptr %target_list.i to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr %target_list.i, ptr %target_list.i, align 4
  %67 = ptrtoint ptr %33 to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr %target_list.i, ptr %33, align 4
  %conv.i = and i64 %sub85, 4294967295
  %call.i = call fastcc i32 @defrag_collect_targets(ptr noundef %add.ptr.i233, i64 noundef %cur.0274, i64 noundef %conv.i, i32 noundef %spec.store.select, i64 noundef %newer_than, i1 noundef zeroext %tobool, i1 noundef zeroext false, ptr noundef nonnull %target_list.i, ptr noundef null) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp slt i32 %call.i, 0
  br i1 %cmp.i, label %if.end82.out.i_crit_edge, label %for.cond.preheader.i

if.end82.out.i_crit_edge:                         ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #22
  br label %out.i

for.cond.preheader.i:                             ; preds = %if.end82
  %68 = ptrtoint ptr %target_list.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %entry2.0144.i = load ptr, ptr %target_list.i, align 4
  %cmp6.not145.i = icmp eq ptr %entry2.0144.i, %target_list.i
  br i1 %cmp6.not145.i, label %for.cond.preheader.i.out.i_crit_edge, label %for.cond.preheader.i.for.body.i_crit_edge

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.cond.preheader.i.out.i_crit_edge:             ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out.i

for.body.i:                                       ; preds = %cleanup.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %sectors_defragged.1 = phi i32 [ %sectors_defragged.2, %cleanup.i.for.body.i_crit_edge ], [ %sectors_defragged.0272, %for.cond.preheader.i.for.body.i_crit_edge ]
  %entry2.0147.i = phi ptr [ %entry2.0.i, %cleanup.i.for.body.i_crit_edge ], [ %entry2.0144.i, %for.cond.preheader.i.for.body.i_crit_edge ]
  %ret.0146.i = phi i32 [ %ret.1.i, %cleanup.i.for.body.i_crit_edge ], [ %call.i, %for.cond.preheader.i.for.body.i_crit_edge ]
  %len8.i = getelementptr inbounds %struct.defrag_target_range, ptr %entry2.0147.i, i32 0, i32 2
  %69 = ptrtoint ptr %len8.i to i32
  call void @__asan_load8_noabort(i32 %69)
  %70 = load i64, ptr %len8.i, align 8
  %conv9.i = trunc i64 %70 to i32
  br i1 %tobool10.not.i, label %for.body.i.if.end20.i_crit_edge, label %land.lhs.true.i

for.body.i.if.end20.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end20.i

land.lhs.true.i:                                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sectors_defragged.1, i32 %max_to_defrag)
  %cmp11.not.i = icmp ult i32 %sectors_defragged.1, %max_to_defrag
  br i1 %cmp11.not.i, label %if.then16.critedge.i, label %land.lhs.true.i.out.i_crit_edge

land.lhs.true.i.out.i_crit_edge:                  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out.i

if.then16.critedge.i:                             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i = sub i32 %max_to_defrag, %sectors_defragged.1
  %mul.i = mul i32 %sub.i, %65
  %71 = call i32 @llvm.umin.i32(i32 %mul.i, i32 %conv9.i) #20
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.then16.critedge.i, %for.body.i.if.end20.i_crit_edge
  %range_len.0.i = phi i32 [ %71, %if.then16.critedge.i ], [ %conv9.i, %for.body.i.if.end20.i_crit_edge ]
  %start21.i = getelementptr inbounds %struct.defrag_target_range, ptr %entry2.0147.i, i32 0, i32 1
  %72 = ptrtoint ptr %start21.i to i32
  call void @__asan_load8_noabort(i32 %72)
  %73 = load i64, ptr %start21.i, align 8
  %conv22.i = zext i32 %range_len.0.i to i64
  %add.i = add i64 %73, %conv22.i
  %74 = ptrtoint ptr %last_scanned to i32
  call void @__asan_load8_noabort(i32 %74)
  %75 = load i64, ptr %last_scanned, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i, i64 %75)
  %cmp23.not.i = icmp ugt i64 %add.i, %75
  br i1 %cmp23.not.i, label %if.end26.i, label %if.end20.i.cleanup.i_crit_edge

if.end20.i.cleanup.i_crit_edge:                   ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.i

if.end26.i:                                       ; preds = %if.end20.i
  br i1 %tobool27.not.i, label %if.end26.i.if.end41.i_crit_edge, label %if.then28.i

if.end26.i.if.end41.i_crit_edge:                  ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end41.i

if.then28.i:                                      ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #22
  %76 = ptrtoint ptr %i_mapping46 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %i_mapping46, align 8
  %shr.i234 = lshr i64 %73, 12
  %conv30.i = trunc i64 %shr.i234 to i32
  %sub34.i = add i64 %add.i, 17592186044415
  %shr35.i = lshr i64 %sub34.i, 12
  %sub38.i = sub nsw i64 %shr35.i, %shr.i234
  %78 = trunc i64 %sub38.i to i32
  %conv40.i = add i32 %78, 1
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %ractl.i.i) #20
  %79 = ptrtoint ptr %ractl.i.i to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr null, ptr %ractl.i.i, align 4
  %80 = ptrtoint ptr %34 to i32
  call void @__asan_store4_noabort(i32 %80)
  store ptr %77, ptr %34, align 4
  %81 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %81)
  store ptr %ra.addr.0, ptr %35, align 4
  %82 = ptrtoint ptr %36 to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 %conv30.i, ptr %36, align 4
  %83 = ptrtoint ptr %37 to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 0, ptr %37, align 4
  %84 = ptrtoint ptr %38 to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 0, ptr %38, align 4
  call void @page_cache_sync_ra(ptr noundef nonnull %ractl.i.i, i32 noundef %conv40.i) #20
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %ractl.i.i) #20
  br label %if.end41.i

if.end41.i:                                       ; preds = %if.then28.i, %if.end26.i.if.end41.i_crit_edge
  %85 = ptrtoint ptr %start21.i to i32
  call void @__asan_load8_noabort(i32 %85)
  %86 = load i64, ptr %start21.i, align 8
  %call44.i = call fastcc i32 @defrag_one_range(ptr noundef %add.ptr.i233, i64 noundef %86, i32 noundef %range_len.0.i, i32 noundef %spec.store.select, i64 noundef %newer_than, i1 noundef zeroext %tobool, ptr noundef nonnull %last_scanned) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call44.i)
  %cmp45.i = icmp slt i32 %call44.i, 0
  br i1 %cmp45.i, label %if.end41.i.out.i_crit_edge, label %if.end48.i

if.end41.i.out.i_crit_edge:                       ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out.i

if.end48.i:                                       ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #22
  %87 = ptrtoint ptr %add.ptr.i233 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %add.ptr.i233, align 8
  %fs_info50.i = getelementptr inbounds %struct.btrfs_root, ptr %88, i32 0, i32 8
  %89 = ptrtoint ptr %fs_info50.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %fs_info50.i, align 8
  %sectorsize_bits.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %90, i32 0, i32 168
  %91 = ptrtoint ptr %sectorsize_bits.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %sectorsize_bits.i, align 8
  %shr51.i = lshr i32 %range_len.0.i, %92
  %add52.i = add i32 %shr51.i, %sectors_defragged.1
  br label %cleanup.i

cleanup.i:                                        ; preds = %if.end48.i, %if.end20.i.cleanup.i_crit_edge
  %sectors_defragged.2 = phi i32 [ %add52.i, %if.end48.i ], [ %sectors_defragged.1, %if.end20.i.cleanup.i_crit_edge ]
  %ret.1.i = phi i32 [ %call44.i, %if.end48.i ], [ %ret.0146.i, %if.end20.i.cleanup.i_crit_edge ]
  %93 = ptrtoint ptr %entry2.0147.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %entry2.0.i = load ptr, ptr %entry2.0147.i, align 4
  %cmp6.not.i = icmp eq ptr %entry2.0.i, %target_list.i
  br i1 %cmp6.not.i, label %cleanup.i.out.i_crit_edge, label %cleanup.i.for.body.i_crit_edge

cleanup.i.for.body.i_crit_edge:                   ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

cleanup.i.out.i_crit_edge:                        ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out.i

out.i:                                            ; preds = %cleanup.i.out.i_crit_edge, %if.end41.i.out.i_crit_edge, %land.lhs.true.i.out.i_crit_edge, %for.cond.preheader.i.out.i_crit_edge, %if.end82.out.i_crit_edge
  %sectors_defragged.3 = phi i32 [ %sectors_defragged.0272, %if.end82.out.i_crit_edge ], [ %sectors_defragged.0272, %for.cond.preheader.i.out.i_crit_edge ], [ %sectors_defragged.1, %land.lhs.true.i.out.i_crit_edge ], [ %sectors_defragged.2, %cleanup.i.out.i_crit_edge ], [ %sectors_defragged.1, %if.end41.i.out.i_crit_edge ]
  %ret.2.i = phi i32 [ %call.i, %if.end82.out.i_crit_edge ], [ %call.i, %for.cond.preheader.i.out.i_crit_edge ], [ 1, %land.lhs.true.i.out.i_crit_edge ], [ %ret.1.i, %cleanup.i.out.i_crit_edge ], [ %call44.i, %if.end41.i.out.i_crit_edge ]
  %94 = ptrtoint ptr %target_list.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %target_list.i, align 4
  %cmp69.not150.i = icmp eq ptr %95, %target_list.i
  br i1 %cmp69.not150.i, label %out.i.for.end80.i_crit_edge, label %out.i.for.body72.i_crit_edge

out.i.for.body72.i_crit_edge:                     ; preds = %out.i
  br label %for.body72.i

out.i.for.end80.i_crit_edge:                      ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end80.i

for.body72.i:                                     ; preds = %list_del_init.exit.i.for.body72.i_crit_edge, %out.i.for.body72.i_crit_edge
  %entry2.1151.i = phi ptr [ %tmp.0.i, %list_del_init.exit.i.for.body72.i_crit_edge ], [ %95, %out.i.for.body72.i_crit_edge ]
  %96 = ptrtoint ptr %entry2.1151.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %tmp.0.i = load ptr, ptr %entry2.1151.i, align 8
  %call.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %entry2.1151.i) #20
  br i1 %call.i.i.i, label %if.end.i.i.i, label %for.body72.i.list_del_init.exit.i_crit_edge

for.body72.i.list_del_init.exit.i_crit_edge:      ; preds = %for.body72.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_del_init.exit.i

if.end.i.i.i:                                     ; preds = %for.body72.i
  call void @__sanitizer_cov_trace_pc() #22
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %entry2.1151.i, i32 0, i32 1
  %97 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %prev.i.i.i, align 4
  %99 = ptrtoint ptr %entry2.1151.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %entry2.1151.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %100, i32 0, i32 1
  %101 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %101)
  store ptr %98, ptr %prev1.i.i.i.i, align 4
  %102 = ptrtoint ptr %98 to i32
  call void @__asan_store4_noabort(i32 %102)
  store volatile ptr %100, ptr %98, align 4
  br label %list_del_init.exit.i

list_del_init.exit.i:                             ; preds = %if.end.i.i.i, %for.body72.i.list_del_init.exit.i_crit_edge
  %103 = ptrtoint ptr %entry2.1151.i to i32
  call void @__asan_store4_noabort(i32 %103)
  store volatile ptr %entry2.1151.i, ptr %entry2.1151.i, align 4
  %prev.i3.i.i = getelementptr inbounds %struct.list_head, ptr %entry2.1151.i, i32 0, i32 1
  %104 = ptrtoint ptr %prev.i3.i.i to i32
  call void @__asan_store4_noabort(i32 %104)
  store ptr %entry2.1151.i, ptr %prev.i3.i.i, align 4
  call void @kfree(ptr noundef %entry2.1151.i) #20
  %cmp69.not.i = icmp eq ptr %tmp.0.i, %target_list.i
  br i1 %cmp69.not.i, label %list_del_init.exit.i.for.end80.i_crit_edge, label %list_del_init.exit.i.for.body72.i_crit_edge

list_del_init.exit.i.for.body72.i_crit_edge:      ; preds = %list_del_init.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body72.i

list_del_init.exit.i.for.end80.i_crit_edge:       ; preds = %list_del_init.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end80.i

for.end80.i:                                      ; preds = %list_del_init.exit.i.for.end80.i_crit_edge, %out.i.for.end80.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %ret.2.i)
  %cmp81.i = icmp sgt i32 %ret.2.i, -1
  br i1 %cmp81.i, label %if.then83.i, label %for.end80.i.defrag_one_cluster.exit_crit_edge

for.end80.i.defrag_one_cluster.exit_crit_edge:    ; preds = %for.end80.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %defrag_one_cluster.exit

if.then83.i:                                      ; preds = %for.end80.i
  call void @__sanitizer_cov_trace_pc() #22
  %105 = ptrtoint ptr %last_scanned to i32
  call void @__asan_load8_noabort(i32 %105)
  %106 = load i64, ptr %last_scanned, align 8
  %add85.i = add i64 %conv.i, %cur.0274
  %107 = call i64 @llvm.umax.i64(i64 %106, i64 %add85.i) #20
  %108 = ptrtoint ptr %last_scanned to i32
  call void @__asan_store8_noabort(i32 %108)
  store i64 %107, ptr %last_scanned, align 8
  br label %defrag_one_cluster.exit

defrag_one_cluster.exit:                          ; preds = %if.then83.i, %for.end80.i.defrag_one_cluster.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %target_list.i) #20
  call void @__sanitizer_cov_trace_cmp4(i32 %sectors_defragged.3, i32 %sectors_defragged.0272)
  %cmp89 = icmp ugt i32 %sectors_defragged.3, %sectors_defragged.0272
  br i1 %cmp89, label %if.then91, label %defrag_one_cluster.exit.if.end93_crit_edge

defrag_one_cluster.exit.if.end93_crit_edge:       ; preds = %defrag_one_cluster.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end93

if.then91:                                        ; preds = %defrag_one_cluster.exit
  call void @__sanitizer_cov_trace_pc() #22
  %109 = ptrtoint ptr %i_mapping46 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %i_mapping46, align 8
  call void @balance_dirty_pages_ratelimited(ptr noundef %110) #20
  br label %if.end93

if.end93:                                         ; preds = %if.then91, %defrag_one_cluster.exit.if.end93_crit_edge
  call void @btrfs_inode_unlock(ptr noundef %inode, i32 noundef 0) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.2.i)
  %cmp94 = icmp slt i32 %ret.2.i, 0
  br i1 %cmp94, label %if.end93.cleanup.thread_crit_edge, label %if.end97

if.end93.cleanup.thread_crit_edge:                ; preds = %if.end93
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.thread

if.end97:                                         ; preds = %if.end93
  %111 = ptrtoint ptr %last_scanned to i32
  call void @__asan_load8_noabort(i32 %111)
  %112 = load i64, ptr %last_scanned, align 8
  %113 = call i64 @llvm.umax.i64(i64 %add84, i64 %112)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.2.i)
  %cmp106.not = icmp eq i32 %ret.2.i, 0
  br i1 %cmp106.not, label %cleanup, label %if.end97.cleanup.thread_crit_edge

if.end97.cleanup.thread_crit_edge:                ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup.thread

cleanup.thread.sink.split:                        ; preds = %if.end73.cleanup.thread.sink.split_crit_edge, %if.end58.cleanup.thread.sink.split_crit_edge
  %ret.1.ph.ph = phi i32 [ -26, %if.end58.cleanup.thread.sink.split_crit_edge ], [ 0, %if.end73.cleanup.thread.sink.split_crit_edge ]
  call void @btrfs_inode_unlock(ptr noundef %inode, i32 noundef 0) #20
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %cleanup.thread.sink.split, %if.end97.cleanup.thread_crit_edge, %if.end93.cleanup.thread_crit_edge, %btrfs_defrag_cancelled.exit.cleanup.thread_crit_edge, %while.body.cleanup.thread_crit_edge
  %sectors_defragged.4.ph = phi i32 [ %sectors_defragged.0272, %cleanup.thread.sink.split ], [ %sectors_defragged.0272, %while.body.cleanup.thread_crit_edge ], [ %sectors_defragged.3, %if.end93.cleanup.thread_crit_edge ], [ %sectors_defragged.3, %if.end97.cleanup.thread_crit_edge ], [ %sectors_defragged.0272, %btrfs_defrag_cancelled.exit.cleanup.thread_crit_edge ]
  %cur.1.ph = phi i64 [ %cur.0274, %cleanup.thread.sink.split ], [ %cur.0274, %while.body.cleanup.thread_crit_edge ], [ %cur.0274, %if.end93.cleanup.thread_crit_edge ], [ %113, %if.end97.cleanup.thread_crit_edge ], [ %cur.0274, %btrfs_defrag_cancelled.exit.cleanup.thread_crit_edge ]
  %ret.1.ph = phi i32 [ %ret.1.ph.ph, %cleanup.thread.sink.split ], [ -11, %while.body.cleanup.thread_crit_edge ], [ %ret.2.i, %if.end93.cleanup.thread_crit_edge ], [ 0, %if.end97.cleanup.thread_crit_edge ], [ -11, %btrfs_defrag_cancelled.exit.cleanup.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %last_scanned) #20
  br label %while.end

cleanup:                                          ; preds = %if.end97
  call void @__might_resched(ptr noundef nonnull @.str.1, i32 noundef 1854, i32 noundef 0) #20
  %call.i235 = call i32 @__cond_resched() #20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %last_scanned) #20
  %cmp53 = icmp ult i64 %113, %or
  br i1 %cmp53, label %cleanup.while.body_crit_edge, label %cleanup.while.end_crit_edge

cleanup.while.end_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body

while.end:                                        ; preds = %cleanup.while.end_crit_edge, %cleanup.thread, %if.end52.while.end_crit_edge
  %sectors_defragged.5 = phi i32 [ %sectors_defragged.4.ph, %cleanup.thread ], [ 0, %if.end52.while.end_crit_edge ], [ %sectors_defragged.3, %cleanup.while.end_crit_edge ]
  %cur.2 = phi i64 [ %cur.1.ph, %cleanup.thread ], [ %and31, %if.end52.while.end_crit_edge ], [ %113, %cleanup.while.end_crit_edge ]
  %ret.2 = phi i32 [ %ret.1.ph, %cleanup.thread ], [ 0, %if.end52.while.end_crit_edge ], [ 0, %cleanup.while.end_crit_edge ]
  br i1 %tobool38.not, label %if.then115, label %while.end.if.end116_crit_edge

while.end.if.end116_crit_edge:                    ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end116

if.then115:                                       ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #22
  call void @kfree(ptr noundef %ra.addr.0) #20
  br label %if.end116

if.end116:                                        ; preds = %if.then115, %while.end.if.end116_crit_edge
  %114 = ptrtoint ptr %range to i32
  call void @__asan_store8_noabort(i32 %114)
  store i64 %cur.2, ptr %range, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sectors_defragged.5)
  %tobool118.not = icmp eq i32 %sectors_defragged.5, 0
  br i1 %tobool118.not, label %if.end116.if.end145_crit_edge, label %if.then119

if.end116.if.end145_crit_edge:                    ; preds = %if.end116
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end145

if.then119:                                       ; preds = %if.end116
  %115 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %115)
  %116 = load i64, ptr %flags, align 8
  %and121 = and i64 %116, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and121)
  %tobool122.not = icmp eq i64 %and121, 0
  br i1 %tobool122.not, label %if.then119.if.end133_crit_edge, label %if.then123

if.then119.if.end133_crit_edge:                   ; preds = %if.then119
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end133

if.then123:                                       ; preds = %if.then119
  %117 = ptrtoint ptr %i_mapping46 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %i_mapping46, align 8
  %call125 = call i32 @filemap_flush(ptr noundef %118) #20
  %runtime_flags = getelementptr i8, ptr %inode, i32 -356
  %119 = ptrtoint ptr %runtime_flags to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load volatile i32, ptr %runtime_flags, align 4
  %121 = and i32 %120, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %121)
  %tobool128.not = icmp eq i32 %121, 0
  br i1 %tobool128.not, label %if.then123.if.end133_crit_edge, label %if.then129

if.then123.if.end133_crit_edge:                   ; preds = %if.then123
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end133

if.then129:                                       ; preds = %if.then123
  call void @__sanitizer_cov_trace_pc() #22
  %122 = ptrtoint ptr %i_mapping46 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %i_mapping46, align 8
  %call131 = call i32 @filemap_flush(ptr noundef %123) #20
  br label %if.end133

if.end133:                                        ; preds = %if.then129, %if.then123.if.end133_crit_edge, %if.then119.if.end133_crit_edge
  %compress_type134 = getelementptr inbounds %struct.btrfs_ioctl_defrag_range_args, ptr %range, i32 0, i32 4
  %124 = ptrtoint ptr %compress_type134 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %compress_type134, align 4
  %126 = zext i32 %125 to i64
  call void @__sanitizer_cov_trace_switch(i64 %126, ptr @__sancov_gen_cov_switch_values.73)
  switch i32 %125, label %if.end133.if.end145_crit_edge [
    i32 2, label %if.then137
    i32 3, label %if.then142
  ]

if.end133.if.end145_crit_edge:                    ; preds = %if.end133
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end145

if.then137:                                       ; preds = %if.end133
  %super_copy.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 43
  %127 = ptrtoint ptr %super_copy.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %super_copy.i, align 8
  %incompat_flags.i.i = getelementptr inbounds %struct.btrfs_super_block, ptr %128, i32 0, i32 22
  %129 = ptrtoint ptr %incompat_flags.i.i to i32
  call void @__asan_loadN_noabort(i32 %129, i32 8)
  %130 = load i64, ptr %incompat_flags.i.i, align 1
  %131 = and i64 %130, 576460752303423488
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %131)
  %tobool.not.i238 = icmp eq i64 %131, 0
  br i1 %tobool.not.i238, label %if.then.i, label %if.then137.if.end145_crit_edge

if.then137.if.end145_crit_edge:                   ; preds = %if.then137
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end145

if.then.i:                                        ; preds = %if.then137
  %super_lock.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 42
  call void @_raw_spin_lock(ptr noundef %super_lock.i) #20
  %132 = ptrtoint ptr %incompat_flags.i.i to i32
  call void @__asan_loadN_noabort(i32 %132, i32 8)
  %133 = load i64, ptr %incompat_flags.i.i, align 1
  %134 = call i64 @llvm.bswap.i64(i64 %133) #20
  %and2.i = and i64 %134, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and2.i)
  %tobool3.not.i = icmp eq i64 %and2.i, 0
  br i1 %tobool3.not.i, label %if.then4.i, label %if.then.i.if.end145.sink.split_crit_edge

if.then.i.if.end145.sink.split_crit_edge:         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end145.sink.split

if.then4.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #22
  %or.i = or i64 %134, 8
  %135 = call i64 @llvm.bswap.i64(i64 %or.i) #20
  %136 = ptrtoint ptr %incompat_flags.i.i to i32
  call void @__asan_storeN_noabort(i32 %136, i32 8)
  store i64 %135, ptr %incompat_flags.i.i, align 1
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %3, ptr noundef nonnull @.str.27, ptr noundef nonnull @.str.11, i64 noundef 8) #24
  br label %if.end145.sink.split

if.then142:                                       ; preds = %if.end133
  %super_copy.i239 = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 43
  %137 = ptrtoint ptr %super_copy.i239 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %super_copy.i239, align 8
  %incompat_flags.i.i240 = getelementptr inbounds %struct.btrfs_super_block, ptr %138, i32 0, i32 22
  %139 = ptrtoint ptr %incompat_flags.i.i240 to i32
  call void @__asan_loadN_noabort(i32 %139, i32 8)
  %140 = load i64, ptr %incompat_flags.i.i240, align 1
  %141 = and i64 %140, 1152921504606846976
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %141)
  %tobool.not.i242 = icmp eq i64 %141, 0
  br i1 %tobool.not.i242, label %if.then.i246, label %if.then142.if.end145_crit_edge

if.then142.if.end145_crit_edge:                   ; preds = %if.then142
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end145

if.then.i246:                                     ; preds = %if.then142
  %super_lock.i243 = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 42
  call void @_raw_spin_lock(ptr noundef %super_lock.i243) #20
  %142 = ptrtoint ptr %incompat_flags.i.i240 to i32
  call void @__asan_loadN_noabort(i32 %142, i32 8)
  %143 = load i64, ptr %incompat_flags.i.i240, align 1
  %144 = call i64 @llvm.bswap.i64(i64 %143) #20
  %and2.i244 = and i64 %144, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and2.i244)
  %tobool3.not.i245 = icmp eq i64 %and2.i244, 0
  br i1 %tobool3.not.i245, label %if.then4.i248, label %if.then.i246.if.end145.sink.split_crit_edge

if.then.i246.if.end145.sink.split_crit_edge:      ; preds = %if.then.i246
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end145.sink.split

if.then4.i248:                                    ; preds = %if.then.i246
  call void @__sanitizer_cov_trace_pc() #22
  %or.i247 = or i64 %144, 16
  %145 = call i64 @llvm.bswap.i64(i64 %or.i247) #20
  %146 = ptrtoint ptr %incompat_flags.i.i240 to i32
  call void @__asan_storeN_noabort(i32 %146, i32 8)
  store i64 %145, ptr %incompat_flags.i.i240, align 1
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %3, ptr noundef nonnull @.str.27, ptr noundef nonnull @.str.12, i64 noundef 16) #24
  br label %if.end145.sink.split

if.end145.sink.split:                             ; preds = %if.then4.i248, %if.then.i246.if.end145.sink.split_crit_edge, %if.then4.i, %if.then.i.if.end145.sink.split_crit_edge
  %super_lock.i.sink = phi ptr [ %super_lock.i, %if.then4.i ], [ %super_lock.i, %if.then.i.if.end145.sink.split_crit_edge ], [ %super_lock.i243, %if.then4.i248 ], [ %super_lock.i243, %if.then.i246.if.end145.sink.split_crit_edge ]
  call void @_raw_spin_unlock(ptr noundef %super_lock.i.sink) #20
  br label %if.end145

if.end145:                                        ; preds = %if.end145.sink.split, %if.then142.if.end145_crit_edge, %if.then137.if.end145_crit_edge, %if.end133.if.end145_crit_edge, %if.end116.if.end145_crit_edge
  %ret.3 = phi i32 [ %ret.2, %if.end116.if.end145_crit_edge ], [ %sectors_defragged.5, %if.then142.if.end145_crit_edge ], [ %sectors_defragged.5, %if.then137.if.end145_crit_edge ], [ %sectors_defragged.5, %if.end133.if.end145_crit_edge ], [ %sectors_defragged.5, %if.end145.sink.split ]
  br i1 %tobool, label %if.then147, label %if.end145.cleanup152_crit_edge

if.end145.cleanup152_crit_edge:                   ; preds = %if.end145
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup152

if.then147:                                       ; preds = %if.end145
  call void @__sanitizer_cov_trace_pc() #22
  %call148 = call i32 @btrfs_inode_lock(ptr noundef %inode, i32 noundef 0) #20
  %defrag_compress150 = getelementptr i8, ptr %inode, i32 -132
  %147 = ptrtoint ptr %defrag_compress150 to i32
  call void @__asan_store4_noabort(i32 %147)
  store i32 0, ptr %defrag_compress150, align 4
  call void @btrfs_inode_unlock(ptr noundef %inode, i32 noundef 0) #20
  br label %cleanup152

cleanup152:                                       ; preds = %if.then147, %if.end145.cleanup152_crit_edge, %if.then7.cleanup152_crit_edge, %if.end.cleanup152_crit_edge, %i_size_read.exit.cleanup152_crit_edge
  %retval.0 = phi i32 [ 0, %i_size_read.exit.cleanup152_crit_edge ], [ -22, %if.end.cleanup152_crit_edge ], [ -22, %if.then7.cleanup152_crit_edge ], [ %ret.3, %if.then147 ], [ %ret.3, %if.end145.cleanup152_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @file_ra_state_init(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_inode_lock(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_inode_unlock(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @balance_dirty_pages_ratelimited(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @filemap_flush(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__btrfs_set_fs_incompat(ptr noundef %fs_info, i64 noundef %flag, ptr noundef %name) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %super_copy = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 43
  %0 = ptrtoint ptr %super_copy to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %super_copy, align 8
  %incompat_flags.i = getelementptr inbounds %struct.btrfs_super_block, ptr %1, i32 0, i32 22
  %2 = ptrtoint ptr %incompat_flags.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %3 = load i64, ptr %incompat_flags.i, align 1
  %4 = tail call i64 @llvm.bswap.i64(i64 %3) #20
  %and = and i64 %4, %flag
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end6_crit_edge

entry.if.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6

if.then:                                          ; preds = %entry
  %super_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 42
  tail call void @_raw_spin_lock(ptr noundef %super_lock) #20
  %5 = ptrtoint ptr %incompat_flags.i to i32
  call void @__asan_loadN_noabort(i32 %5, i32 8)
  %6 = load i64, ptr %incompat_flags.i, align 1
  %7 = tail call i64 @llvm.bswap.i64(i64 %6) #20
  %and2 = and i64 %7, %flag
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and2)
  %tobool3.not = icmp eq i64 %and2, 0
  br i1 %tobool3.not, label %if.then4, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then4:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %or = or i64 %7, %flag
  %8 = tail call i64 @llvm.bswap.i64(i64 %or) #20
  %9 = ptrtoint ptr %incompat_flags.i to i32
  call void @__asan_storeN_noabort(i32 %9, i32 8)
  store i64 %8, ptr %incompat_flags.i, align 1
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.27, ptr noundef %name, i64 noundef %flag) #24
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.then.if.end_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %super_lock) #20
  br label %if.end6

if.end6:                                          ; preds = %if.end, %entry.if.end6_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @btrfs_update_ioctl_balance_args(ptr noundef %fs_info, ptr nocapture noundef %bargs) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %balance_ctl = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 117
  %0 = ptrtoint ptr %balance_ctl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %balance_ctl, align 8
  %flags = getelementptr inbounds %struct.btrfs_balance_control, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %flags, align 8
  %4 = ptrtoint ptr %bargs to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 %3, ptr %bargs, align 8
  %flags2 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 1
  %5 = ptrtoint ptr %flags2 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %flags2, align 4
  %7 = and i32 %6, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not = icmp eq i32 %7, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %state = getelementptr inbounds %struct.btrfs_ioctl_balance_args, ptr %bargs, i32 0, i32 1
  %8 = ptrtoint ptr %state to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %state, align 8
  %or = or i64 %9, 1
  store i64 %or, ptr %state, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %balance_pause_req = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 115
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %balance_pause_req, i32 noundef 4) #20
  %10 = ptrtoint ptr %balance_pause_req to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %balance_pause_req, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool4.not = icmp eq i32 %11, 0
  br i1 %tobool4.not, label %if.end.if.end8_crit_edge, label %if.then5

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %state6 = getelementptr inbounds %struct.btrfs_ioctl_balance_args, ptr %bargs, i32 0, i32 1
  %12 = ptrtoint ptr %state6 to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %state6, align 8
  %or7 = or i64 %13, 2
  store i64 %or7, ptr %state6, align 8
  br label %if.end8

if.end8:                                          ; preds = %if.then5, %if.end.if.end8_crit_edge
  %balance_cancel_req = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 116
  %call.i.i36 = tail call zeroext i1 @__kasan_check_read(ptr noundef %balance_cancel_req, i32 noundef 4) #20
  %14 = ptrtoint ptr %balance_cancel_req to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %balance_cancel_req, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool10.not = icmp eq i32 %15, 0
  br i1 %tobool10.not, label %if.end8.if.end14_crit_edge, label %if.then11

if.end8.if.end14_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end14

if.then11:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #22
  %state12 = getelementptr inbounds %struct.btrfs_ioctl_balance_args, ptr %bargs, i32 0, i32 1
  %16 = ptrtoint ptr %state12 to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %state12, align 8
  %or13 = or i64 %17, 4
  store i64 %or13, ptr %state12, align 8
  br label %if.end14

if.end14:                                         ; preds = %if.then11, %if.end8.if.end14_crit_edge
  %data = getelementptr inbounds %struct.btrfs_ioctl_balance_args, ptr %bargs, i32 0, i32 2
  %18 = call ptr @memcpy(ptr %data, ptr %1, i32 136)
  %meta = getelementptr inbounds %struct.btrfs_ioctl_balance_args, ptr %bargs, i32 0, i32 3
  %meta16 = getelementptr inbounds %struct.btrfs_balance_control, ptr %1, i32 0, i32 1
  %19 = call ptr @memcpy(ptr %meta, ptr %meta16, i32 136)
  %sys = getelementptr inbounds %struct.btrfs_ioctl_balance_args, ptr %bargs, i32 0, i32 4
  %sys17 = getelementptr inbounds %struct.btrfs_balance_control, ptr %1, i32 0, i32 2
  %20 = call ptr @memcpy(ptr %sys, ptr %sys17, i32 136)
  %balance_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 113
  tail call void @_raw_spin_lock(ptr noundef %balance_lock) #20
  %stat = getelementptr inbounds %struct.btrfs_ioctl_balance_args, ptr %bargs, i32 0, i32 5
  %stat18 = getelementptr inbounds %struct.btrfs_balance_control, ptr %1, i32 0, i32 4
  %21 = call ptr @memcpy(ptr %stat, ptr %stat18, i32 24)
  tail call void @_raw_spin_unlock(ptr noundef %balance_lock) #20
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_ioctl_get_supported_features(ptr noundef %arg) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %entry.copy_to_user.exit.thread_crit_edge, label %if.end.i.i

entry.copy_to_user.exit.thread_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %copy_to_user.exit.thread

if.end.i.i:                                       ; preds = %entry
  %0 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %arg, i32 72, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i = extractvalue { i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.copy_to_user.exit.thread_crit_edge

if.end.i.i.copy_to_user.exit.thread_crit_edge:    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %copy_to_user.exit.thread

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull @btrfs_ioctl_get_supported_features.features, i32 noundef 72) #20
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %arg, ptr noundef nonnull @btrfs_ioctl_get_supported_features.features, i32 noundef 72) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -14
  br label %copy_to_user.exit.thread

copy_to_user.exit.thread:                         ; preds = %copy_to_user.exit, %if.end.i.i.copy_to_user.exit.thread_crit_edge, %entry.copy_to_user.exit.thread_crit_edge
  %1 = phi i32 [ -14, %entry.copy_to_user.exit.thread_crit_edge ], [ -14, %if.end.i.i.copy_to_user.exit.thread_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  ret i32 %1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @btrfs_ioctl(ptr noundef %file, i32 noundef %cmd, i32 noundef %arg) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %0 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_inode.i, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 33
  %4 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %s_fs_info.i, align 16
  %add.ptr.i = getelementptr i8, ptr %1, i32 -864
  %6 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %add.ptr.i, align 8
  %8 = inttoptr i32 %arg to ptr
  %9 = zext i32 %cmd to i64
  call void @__sanitizer_cov_trace_switch(i64 %9, ptr @__sancov_gen_cov_switch_values.74)
  switch i32 %cmd, label %entry.cleanup120_crit_edge [
    i32 -2147191295, label %sw.bb
    i32 -2130668495, label %sw.bb5
    i32 1090556978, label %sw.bb7
    i32 -1072146311, label %sw.bb9
    i32 1342215169, label %sw.bb11
    i32 1342215191, label %sw.bb13
    i32 1342215182, label %sw.bb15
    i32 1342215192, label %sw.bb17
    i32 1342215183, label %sw.bb19
    i32 1342215231, label %sw.bb21
    i32 -2146921447, label %sw.bb23
    i32 1074304026, label %sw.bb25
    i32 1074304019, label %sw.bb27
    i32 1342215170, label %sw.bb29
    i32 1076925456, label %sw.bb31
    i32 1342215171, label %sw.bb33
    i32 1342215178, label %sw.bb35
    i32 1342215179, label %sw.bb37
    i32 1342215226, label %sw.bb39
    i32 -2080336865, label %sw.bb41
    i32 -805268450, label %sw.bb43
    i32 1342215180, label %sw.bb45
    i32 -805268463, label %sw.bb47
    i32 -1066363887, label %sw.bb49
    i32 -805268462, label %sw.bb51
    i32 -1070033885, label %sw.bb53
    i32 -1070033884, label %sw.bb55
    i32 -1070033861, label %sw.bb57
    i32 -1072655340, label %sw.bb59
    i32 37896, label %sw.bb61
    i32 -2146921448, label %sw.bb66
    i32 1074304022, label %sw.bb68
    i32 -1006595045, label %sw.bb70
    i32 37916, label %sw.bb72
    i32 -1006595043, label %sw.bb74
    i32 -1006595040, label %sw.bb76
    i32 1074041889, label %sw.bb78
    i32 -2080336862, label %sw.bb80
    i32 -1060596699, label %sw.bb82
    i32 1078498342, label %sw.bb84
    i32 -1006070732, label %sw.bb86
    i32 -1072655320, label %sw.bb88
    i32 1075352617, label %sw.bb90
    i32 1074828330, label %sw.bb92
    i32 -2144299989, label %sw.bb94
    i32 1077974060, label %sw.bb96
    i32 -2143251411, label %sw.bb98
    i32 37934, label %sw.bb100
    i32 -903310283, label %sw.bb102
    i32 -2142727111, label %sw.bb104
    i32 -2145872839, label %sw.bb106
    i32 1076925497, label %sw.bb108
    i32 -2114415556, label %sw.bb110
    i32 -805268419, label %sw.bb112
    i32 -805268418, label %sw.bb114
    i32 1082156677, label %sw.bb116
    i32 -1073453434, label %sw.bb118
  ]

entry.cleanup120_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup120

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call4 = tail call fastcc i32 @btrfs_ioctl_getversion(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb5:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call6 = tail call fastcc i32 @btrfs_ioctl_get_fslabel(ptr noundef %5, ptr noundef %8)
  br label %cleanup120

sw.bb7:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call8 = tail call fastcc i32 @btrfs_ioctl_set_fslabel(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb9:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call10 = tail call fastcc i32 @btrfs_ioctl_fitrim(ptr noundef %5, ptr noundef %8)
  br label %cleanup120

sw.bb11:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call12 = tail call fastcc i32 @btrfs_ioctl_snap_create(ptr noundef %file, ptr noundef %8, i32 noundef 0)
  br label %cleanup120

sw.bb13:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call14 = tail call fastcc i32 @btrfs_ioctl_snap_create_v2(ptr noundef %file, ptr noundef %8, i32 noundef 0)
  br label %cleanup120

sw.bb15:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call16 = tail call fastcc i32 @btrfs_ioctl_snap_create(ptr noundef %file, ptr noundef %8, i32 noundef 1)
  br label %cleanup120

sw.bb17:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call18 = tail call fastcc i32 @btrfs_ioctl_snap_create_v2(ptr noundef %file, ptr noundef %8, i32 noundef 1)
  br label %cleanup120

sw.bb19:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call20 = tail call fastcc i32 @btrfs_ioctl_snap_destroy(ptr noundef %file, ptr noundef %8, i1 noundef zeroext false)
  br label %cleanup120

sw.bb21:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call22 = tail call fastcc i32 @btrfs_ioctl_snap_destroy(ptr noundef %file, ptr noundef %8, i1 noundef zeroext true)
  br label %cleanup120

sw.bb23:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call24 = tail call fastcc i32 @btrfs_ioctl_subvol_getflags(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb25:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call26 = tail call fastcc i32 @btrfs_ioctl_subvol_setflags(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb27:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call28 = tail call fastcc i32 @btrfs_ioctl_default_subvol(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb29:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call30 = tail call fastcc i32 @btrfs_ioctl_defrag(ptr noundef %file, ptr noundef null)
  br label %cleanup120

sw.bb31:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call32 = tail call fastcc i32 @btrfs_ioctl_defrag(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb33:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call34 = tail call fastcc i32 @btrfs_ioctl_resize(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb35:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call36 = tail call fastcc i32 @btrfs_ioctl_add_dev(ptr noundef %5, ptr noundef %8)
  br label %cleanup120

sw.bb37:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call38 = tail call fastcc i32 @btrfs_ioctl_rm_dev(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb39:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call40 = tail call fastcc i32 @btrfs_ioctl_rm_dev_v2(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb41:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call42 = tail call fastcc i32 @btrfs_ioctl_fs_info(ptr noundef %5, ptr noundef %8)
  br label %cleanup120

sw.bb43:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call44 = tail call fastcc i32 @btrfs_ioctl_dev_info(ptr noundef %5, ptr noundef %8)
  br label %cleanup120

sw.bb45:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call46 = tail call fastcc i32 @btrfs_ioctl_balance(ptr noundef %file, ptr noundef null)
  br label %cleanup120

sw.bb47:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call48 = tail call fastcc i32 @btrfs_ioctl_tree_search(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb49:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call50 = tail call fastcc i32 @btrfs_ioctl_tree_search_v2(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb51:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call52 = tail call fastcc i32 @btrfs_ioctl_ino_lookup(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb53:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call54 = tail call fastcc i32 @btrfs_ioctl_ino_to_path(ptr noundef %7, ptr noundef %8)
  br label %cleanup120

sw.bb55:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call56 = tail call fastcc i32 @btrfs_ioctl_logical_to_ino(ptr noundef %5, ptr noundef %8, i32 noundef 1)
  br label %cleanup120

sw.bb57:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call58 = tail call fastcc i32 @btrfs_ioctl_logical_to_ino(ptr noundef %5, ptr noundef %8, i32 noundef 2)
  br label %cleanup120

sw.bb59:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call60 = tail call fastcc i32 @btrfs_ioctl_space_info(ptr noundef %5, ptr noundef %8)
  br label %cleanup120

sw.bb61:                                          ; preds = %entry
  %call62 = tail call i32 @btrfs_start_delalloc_roots(ptr noundef %5, i32 noundef 2147483647, i1 noundef zeroext false) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call62)
  %tobool.not = icmp eq i32 %call62, 0
  br i1 %tobool.not, label %if.end, label %sw.bb61.cleanup120_crit_edge

sw.bb61.cleanup120_crit_edge:                     ; preds = %sw.bb61
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup120

if.end:                                           ; preds = %sw.bb61
  call void @__sanitizer_cov_trace_pc() #22
  %10 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %i_sb, align 4
  %call64 = tail call i32 @btrfs_sync_fs(ptr noundef %11, i32 noundef 1) #20
  %transaction_kthread = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 89
  %12 = ptrtoint ptr %transaction_kthread to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %transaction_kthread, align 4
  %call65 = tail call i32 @wake_up_process(ptr noundef %13) #20
  br label %cleanup120

sw.bb66:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call67 = tail call fastcc i32 @btrfs_ioctl_start_sync(ptr noundef %7, ptr noundef %8)
  br label %cleanup120

sw.bb68:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call69 = tail call fastcc i32 @btrfs_ioctl_wait_sync(ptr noundef %5, ptr noundef %8)
  br label %cleanup120

sw.bb70:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call71 = tail call fastcc i32 @btrfs_ioctl_scrub(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb72:                                          ; preds = %entry
  %call.i = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call.i, label %if.end.i, label %sw.bb72.cleanup120_crit_edge

sw.bb72.cleanup120_crit_edge:                     ; preds = %sw.bb72
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup120

if.end.i:                                         ; preds = %sw.bb72
  call void @__sanitizer_cov_trace_pc() #22
  %call1.i = tail call i32 @btrfs_scrub_cancel(ptr noundef %5) #20
  br label %cleanup120

sw.bb74:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call75 = tail call fastcc i32 @btrfs_ioctl_scrub_progress(ptr noundef %5, ptr noundef %8)
  br label %cleanup120

sw.bb76:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call77 = tail call fastcc i32 @btrfs_ioctl_balance(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb78:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call79 = tail call fastcc i32 @btrfs_ioctl_balance_ctl(ptr noundef %5, i32 noundef %arg)
  br label %cleanup120

sw.bb80:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call81 = tail call fastcc i32 @btrfs_ioctl_balance_progress(ptr noundef %5, ptr noundef %8)
  br label %cleanup120

sw.bb82:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call83 = tail call fastcc i32 @btrfs_ioctl_set_received_subvol(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb84:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call85 = tail call fastcc i32 @_btrfs_ioctl_send(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb86:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call87 = tail call fastcc i32 @btrfs_ioctl_get_dev_stats(ptr noundef %5, ptr noundef %8)
  br label %cleanup120

sw.bb88:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call89 = tail call fastcc i32 @btrfs_ioctl_quota_ctl(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb90:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call91 = tail call fastcc i32 @btrfs_ioctl_qgroup_assign(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb92:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call93 = tail call fastcc i32 @btrfs_ioctl_qgroup_create(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb94:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call95 = tail call fastcc i32 @btrfs_ioctl_qgroup_limit(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb96:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call97 = tail call fastcc i32 @btrfs_ioctl_quota_rescan(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb98:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call99 = tail call fastcc i32 @btrfs_ioctl_quota_rescan_status(ptr noundef %5, ptr noundef %8)
  br label %cleanup120

sw.bb100:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call101 = tail call fastcc i32 @btrfs_ioctl_quota_rescan_wait(ptr noundef %5)
  br label %cleanup120

sw.bb102:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call103 = tail call fastcc i32 @btrfs_ioctl_dev_replace(ptr noundef %5, ptr noundef %8)
  br label %cleanup120

sw.bb104:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call105 = tail call i32 @btrfs_ioctl_get_supported_features(ptr noundef %8)
  br label %cleanup120

sw.bb106:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call107 = tail call fastcc i32 @btrfs_ioctl_get_features(ptr noundef %5, ptr noundef %8)
  br label %cleanup120

sw.bb108:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call109 = tail call fastcc i32 @btrfs_ioctl_set_features(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb110:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call111 = tail call fastcc i32 @btrfs_ioctl_get_subvol_info(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb112:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call113 = tail call fastcc i32 @btrfs_ioctl_get_subvol_rootref(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb114:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call115 = tail call fastcc i32 @btrfs_ioctl_ino_lookup_user(ptr noundef %file, ptr noundef %8)
  br label %cleanup120

sw.bb116:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call117 = tail call i32 @fsverity_ioctl_enable(ptr noundef %file, ptr noundef %8) #20
  br label %cleanup120

sw.bb118:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call119 = tail call i32 @fsverity_ioctl_measure(ptr noundef %file, ptr noundef %8) #20
  br label %cleanup120

cleanup120:                                       ; preds = %sw.bb118, %sw.bb116, %sw.bb114, %sw.bb112, %sw.bb110, %sw.bb108, %sw.bb106, %sw.bb104, %sw.bb102, %sw.bb100, %sw.bb98, %sw.bb96, %sw.bb94, %sw.bb92, %sw.bb90, %sw.bb88, %sw.bb86, %sw.bb84, %sw.bb82, %sw.bb80, %sw.bb78, %sw.bb76, %sw.bb74, %if.end.i, %sw.bb72.cleanup120_crit_edge, %sw.bb70, %sw.bb68, %sw.bb66, %if.end, %sw.bb61.cleanup120_crit_edge, %sw.bb59, %sw.bb57, %sw.bb55, %sw.bb53, %sw.bb51, %sw.bb49, %sw.bb47, %sw.bb45, %sw.bb43, %sw.bb41, %sw.bb39, %sw.bb37, %sw.bb35, %sw.bb33, %sw.bb31, %sw.bb29, %sw.bb27, %sw.bb25, %sw.bb23, %sw.bb21, %sw.bb19, %sw.bb17, %sw.bb15, %sw.bb13, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb, %entry.cleanup120_crit_edge
  %retval.1 = phi i32 [ %call119, %sw.bb118 ], [ %call117, %sw.bb116 ], [ %call115, %sw.bb114 ], [ %call113, %sw.bb112 ], [ %call111, %sw.bb110 ], [ %call109, %sw.bb108 ], [ %call107, %sw.bb106 ], [ %call105, %sw.bb104 ], [ %call103, %sw.bb102 ], [ %call101, %sw.bb100 ], [ %call99, %sw.bb98 ], [ %call97, %sw.bb96 ], [ %call95, %sw.bb94 ], [ %call93, %sw.bb92 ], [ %call91, %sw.bb90 ], [ %call89, %sw.bb88 ], [ %call87, %sw.bb86 ], [ %call85, %sw.bb84 ], [ %call83, %sw.bb82 ], [ %call81, %sw.bb80 ], [ %call79, %sw.bb78 ], [ %call77, %sw.bb76 ], [ %call75, %sw.bb74 ], [ %call71, %sw.bb70 ], [ %call69, %sw.bb68 ], [ %call67, %sw.bb66 ], [ %call60, %sw.bb59 ], [ %call58, %sw.bb57 ], [ %call56, %sw.bb55 ], [ %call54, %sw.bb53 ], [ %call52, %sw.bb51 ], [ %call50, %sw.bb49 ], [ %call48, %sw.bb47 ], [ %call46, %sw.bb45 ], [ %call44, %sw.bb43 ], [ %call42, %sw.bb41 ], [ %call40, %sw.bb39 ], [ %call38, %sw.bb37 ], [ %call36, %sw.bb35 ], [ %call34, %sw.bb33 ], [ %call32, %sw.bb31 ], [ %call30, %sw.bb29 ], [ %call28, %sw.bb27 ], [ %call26, %sw.bb25 ], [ %call24, %sw.bb23 ], [ %call22, %sw.bb21 ], [ %call20, %sw.bb19 ], [ %call18, %sw.bb17 ], [ %call16, %sw.bb15 ], [ %call14, %sw.bb13 ], [ %call12, %sw.bb11 ], [ %call10, %sw.bb9 ], [ %call8, %sw.bb7 ], [ %call6, %sw.bb5 ], [ %call4, %sw.bb ], [ %call64, %if.end ], [ %call62, %sw.bb61.cleanup120_crit_edge ], [ -25, %entry.cleanup120_crit_edge ], [ %call1.i, %if.end.i ], [ -1, %sw.bb72.cleanup120_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_getversion(ptr nocapture noundef readonly %file, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %0 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_inode.i, align 8
  %i_generation = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 49
  %2 = ptrtoint ptr %i_generation to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %i_generation, align 8
  tail call void @__might_fault(ptr noundef nonnull @.str.1, i32 noundef 447) #20
  %4 = tail call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 4
  %6 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #13, !srcloc !191
  %and.i = and i32 %6, -13
  %or.i = or i32 %and.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #20, !srcloc !192
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #20, !srcloc !193
  %7 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %arg, i32 %3, i32 -1226833921) #20, !srcloc !194
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %6) #20, !srcloc !192
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #20, !srcloc !193
  ret i32 %7
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_get_fslabel(ptr noundef %fs_info, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  %label = alloca [256 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %label) #20
  %super_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 42
  tail call void @_raw_spin_lock(ptr noundef %super_lock) #20
  %super_copy = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 43
  %0 = ptrtoint ptr %super_copy to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %super_copy, align 8
  %label1 = getelementptr inbounds %struct.btrfs_super_block, ptr %1, i32 0, i32 28
  %2 = call ptr @memcpy(ptr %label, ptr %label1, i32 256)
  tail call void @_raw_spin_unlock(ptr noundef %super_lock) #20
  %call = call i32 @strnlen(ptr noundef nonnull %label, i32 noundef 256) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %call)
  %cmp = icmp eq i32 %call, 256
  br i1 %cmp, label %if.end.thread, label %if.end

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %call)
  %cmp1.i.i = icmp ugt i32 %call, 256
  br i1 %cmp1.i.i, label %if.then3.i.i, label %if.end.if.then.i.i.i_crit_edge, !prof !195

if.end.if.then.i.i.i_crit_edge:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i.i.i

if.end.thread:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.31, i32 noundef 255) #24
  br label %if.then.i.i.i

if.then3.i.i:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.28, i32 noundef 214, i32 noundef 9, ptr noundef nonnull @.str.29, i32 noundef 256, i32 noundef %call) #20
  br label %copy_to_user.exit.thread

if.then.i.i.i:                                    ; preds = %if.end.thread, %if.end.if.then.i.i.i_crit_edge
  %len.01621 = phi i32 [ 255, %if.end.thread ], [ %call, %if.end.if.then.i.i.i_crit_edge ]
  call void @__check_object_size(ptr noundef nonnull %label, i32 noundef %len.01621, i1 noundef zeroext true) #20
  call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i = call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.then.i.i.i.copy_to_user.exit_crit_edge, label %if.end.i.i

if.then.i.i.i.copy_to_user.exit_crit_edge:        ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %copy_to_user.exit

if.end.i.i:                                       ; preds = %if.then.i.i.i
  %3 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %arg, i32 %len.01621, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i = extractvalue { i32, i32 } %3, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.then2.i.i, label %if.end.i.i.copy_to_user.exit_crit_edge

if.end.i.i.copy_to_user.exit_crit_edge:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %copy_to_user.exit

if.then2.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %label, i32 noundef %len.01621) #20
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef %arg, ptr noundef nonnull %label, i32 noundef %len.01621) #20
  br label %copy_to_user.exit

copy_to_user.exit:                                ; preds = %if.then2.i.i, %if.end.i.i.copy_to_user.exit_crit_edge, %if.then.i.i.i.copy_to_user.exit_crit_edge
  %n.addr.0.i = phi i32 [ %len.01621, %if.then.i.i.i.copy_to_user.exit_crit_edge ], [ %call.i12.i.i, %if.then2.i.i ], [ %len.01621, %if.end.i.i.copy_to_user.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i)
  %tobool.not = icmp eq i32 %n.addr.0.i, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -14
  br label %copy_to_user.exit.thread

copy_to_user.exit.thread:                         ; preds = %copy_to_user.exit, %if.then3.i.i
  %4 = phi i32 [ -14, %if.then3.i.i ], [ %spec.select, %copy_to_user.exit ]
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %label) #20
  ret i32 %4
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_set_fslabel(ptr noundef %file, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  %label = alloca [256 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %0 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_inode.i, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 33
  %4 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %s_fs_info.i, align 16
  %add.ptr.i = getelementptr i8, ptr %1, i32 -864
  %6 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %add.ptr.i, align 8
  %super_copy = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 43
  %8 = ptrtoint ptr %super_copy to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %super_copy, align 8
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %label) #20
  %10 = call ptr @memset(ptr %label, i32 255, i32 256)
  %call4 = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call4, label %if.end8.i.i, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end8.i.i:                                      ; preds = %entry
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 156) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end8.i.i.if.then11.i.i_crit_edge, label %land.lhs.true.i.i

if.end8.i.i.if.then11.i.i_crit_edge:              ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

land.lhs.true.i.i:                                ; preds = %if.end8.i.i
  %11 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %arg, i32 256, i32 -1226833920) #27, !srcloc !196
  %asmresult.i.i = extractvalue { i32, i32 } %11, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.end.i.i, label %land.lhs.true.i.i.if.then11.i.i_crit_edge, !prof !184

land.lhs.true.i.i.if.then11.i.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %label, i32 noundef 256) #20
  %12 = call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i.i.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 4
  %14 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #13, !srcloc !191
  %and.i.i.i.i = and i32 %14, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #20, !srcloc !192
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #20, !srcloc !193
  %call1.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %label, ptr noundef %arg, i32 noundef 256) #20
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %14) #20, !srcloc !192
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #20, !srcloc !193
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool4.not.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end7, label %if.end.i.i.if.then11.i.i_crit_edge, !prof !184

if.end.i.i.if.then11.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

if.then11.i.i:                                    ; preds = %if.end.i.i.if.then11.i.i_crit_edge, %land.lhs.true.i.i.if.then11.i.i_crit_edge, %if.end8.i.i.if.then11.i.i_crit_edge
  %res.0.i.i45 = phi i32 [ %call1.i.i.i, %if.end.i.i.if.then11.i.i_crit_edge ], [ 256, %if.end8.i.i.if.then11.i.i_crit_edge ], [ 256, %land.lhs.true.i.i.if.then11.i.i_crit_edge ]
  %sub.i.i = sub i32 256, %res.0.i.i45
  %add.ptr.i.i = getelementptr i8, ptr %label, i32 %sub.i.i
  %15 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i45)
  br label %cleanup

if.end7:                                          ; preds = %if.end.i.i
  %call9 = call i32 @strnlen(ptr noundef nonnull %label, i32 noundef 256) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %call9)
  %cmp = icmp eq i32 %call9, 256
  br i1 %cmp, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #22
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %5, ptr noundef nonnull @.str.32, i32 noundef 255) #24
  br label %cleanup

if.end11:                                         ; preds = %if.end7
  %call12 = call i32 @mnt_want_write_file(ptr noundef %file) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %if.end15, label %if.end11.cleanup_crit_edge

if.end11.cleanup_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end15:                                         ; preds = %if.end11
  %call16 = call ptr @btrfs_start_transaction(ptr noundef %7, i32 noundef 0) #20
  %cmp.i = icmp ugt ptr %call16, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then18, label %if.end20

if.then18:                                        ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #22
  %16 = ptrtoint ptr %call16 to i32
  br label %out_unlock

if.end20:                                         ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #22
  %super_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 42
  call void @_raw_spin_lock(ptr noundef %super_lock) #20
  %label21 = getelementptr inbounds %struct.btrfs_super_block, ptr %9, i32 0, i32 28
  %call24 = call ptr @strcpy(ptr noundef %label21, ptr noundef nonnull %label) #23
  call void @_raw_spin_unlock(ptr noundef %super_lock) #20
  %call26 = call i32 @btrfs_commit_transaction(ptr noundef %call16) #20
  br label %out_unlock

out_unlock:                                       ; preds = %if.end20, %if.then18
  %ret.0 = phi i32 [ %16, %if.then18 ], [ %call26, %if.end20 ]
  call void @mnt_drop_write_file(ptr noundef %file) #20
  br label %cleanup

cleanup:                                          ; preds = %out_unlock, %if.end11.cleanup_crit_edge, %if.then10, %if.then11.i.i, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %if.then10 ], [ %ret.0, %out_unlock ], [ -1, %entry.cleanup_crit_edge ], [ %call12, %if.end11.cleanup_crit_edge ], [ -14, %if.then11.i.i ]
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %label) #20
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_fitrim(ptr noundef %fs_info, ptr noundef %arg) unnamed_addr #8 align 64 {
entry:
  %range = alloca %struct.fstrim_range, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %range) #20
  %0 = getelementptr inbounds %struct.fstrim_range, ptr %range, i32 0, i32 1
  %1 = getelementptr inbounds %struct.fstrim_range, ptr %range, i32 0, i32 2
  %2 = call ptr @memset(ptr %range, i32 255, i32 24)
  %call = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 176
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %3, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %5)
  %cmp.i.not = icmp eq i64 %5, 0
  br i1 %cmp.i.not, label %if.end3, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %mount_opt = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 31
  %6 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %mount_opt, align 8
  %and = and i32 %7, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end5, label %if.end3.cleanup_crit_edge

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end5:                                          ; preds = %if.end3
  %8 = tail call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %11, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !197
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #20
  %call.i = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i, label %if.end5.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end5.rcu_read_lock.exit_crit_edge:             ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end5
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.34, i32 noundef 696, ptr noundef nonnull @.str.35) #20
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end5.rcu_read_lock.exit_crit_edge
  %call6 = tail call i32 @rcu_read_lock_any_held() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end_crit_edge

rcu_read_lock.exit.do.end_crit_edge:              ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call8 = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true10

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end

land.lhs.true10:                                  ; preds = %land.lhs.true
  %.b94 = load i1, ptr @btrfs_ioctl_fitrim.__warned, align 1
  br i1 %.b94, label %land.lhs.true10.do.end_crit_edge, label %if.then12

land.lhs.true10.do.end_crit_edge:                 ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end

if.then12:                                        ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @btrfs_ioctl_fitrim.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.1, i32 noundef 483, ptr noundef nonnull @.str.33) #20
  br label %do.end

do.end:                                           ; preds = %if.then12, %land.lhs.true10.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %rcu_read_lock.exit.do.end_crit_edge
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %12 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %fs_devices, align 8
  %devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %13, i32 0, i32 13
  %14 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %14)
  %device.0123 = load volatile ptr, ptr %devices, align 8
  %cmp.not124 = icmp eq ptr %device.0123, %devices
  br i1 %cmp.not124, label %do.end.for.end_crit_edge, label %do.end.for.body_crit_edge

do.end.for.body_crit_edge:                        ; preds = %do.end
  br label %for.body

do.end.for.end_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %do.end.for.body_crit_edge
  %device.0127 = phi ptr [ %device.0, %for.inc.for.body_crit_edge ], [ %device.0123, %do.end.for.body_crit_edge ]
  %minlen.0126 = phi i64 [ %minlen.1, %for.inc.for.body_crit_edge ], [ -1, %do.end.for.body_crit_edge ]
  %num_devices.0125 = phi i64 [ %num_devices.1, %for.inc.for.body_crit_edge ], [ 0, %do.end.for.body_crit_edge ]
  %bdev = getelementptr inbounds %struct.btrfs_device, ptr %device.0127, i32 0, i32 7
  %15 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %bdev, align 8
  %tobool20.not = icmp eq ptr %16, null
  br i1 %tobool20.not, label %for.body.for.inc_crit_edge, label %if.end22

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

if.end22:                                         ; preds = %for.body
  %bd_queue.i = getelementptr inbounds %struct.block_device, ptr %16, i32 0, i32 18
  %17 = ptrtoint ptr %bd_queue.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %bd_queue.i, align 4
  %queue_flags = getelementptr inbounds %struct.request_queue, ptr %18, i32 0, i32 11
  %19 = ptrtoint ptr %queue_flags to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %queue_flags, align 4
  %21 = and i32 %20, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool26.not = icmp eq i32 %21, 0
  br i1 %tobool26.not, label %if.end22.for.inc_crit_edge, label %if.then27

if.end22.for.inc_crit_edge:                       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

if.then27:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #22
  %inc = add i64 %num_devices.0125, 1
  %discard_granularity = getelementptr inbounds %struct.request_queue, ptr %18, i32 0, i32 37, i32 18
  %22 = ptrtoint ptr %discard_granularity to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %discard_granularity, align 4
  %conv = zext i32 %23 to i64
  %24 = tail call i64 @llvm.umin.i64(i64 %minlen.0126, i64 %conv)
  br label %for.inc

for.inc:                                          ; preds = %if.then27, %if.end22.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %num_devices.1 = phi i64 [ %inc, %if.then27 ], [ %num_devices.0125, %if.end22.for.inc_crit_edge ], [ %num_devices.0125, %for.body.for.inc_crit_edge ]
  %minlen.1 = phi i64 [ %24, %if.then27 ], [ %minlen.0126, %if.end22.for.inc_crit_edge ], [ %minlen.0126, %for.body.for.inc_crit_edge ]
  %25 = ptrtoint ptr %device.0127 to i32
  call void @__asan_load4_noabort(i32 %25)
  %device.0 = load volatile ptr, ptr %device.0127, align 8
  %cmp.not = icmp eq ptr %device.0, %devices
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %do.end.for.end_crit_edge
  %num_devices.0.lcssa = phi i64 [ 0, %do.end.for.end_crit_edge ], [ %num_devices.1, %for.inc.for.end_crit_edge ]
  %minlen.0.lcssa = phi i64 [ -1, %do.end.for.end_crit_edge ], [ %minlen.1, %for.inc.for.end_crit_edge ]
  %call.i107 = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i107, label %for.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i110

for.end.rcu_read_unlock.exit_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

land.lhs.true.i110:                               ; preds = %for.end
  %call1.i108 = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i108)
  %tobool.not.i109 = icmp eq i32 %call1.i108, 0
  br i1 %tobool.not.i109, label %land.lhs.true.i110.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i112

land.lhs.true.i110.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i110
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

land.lhs.true2.i112:                              ; preds = %land.lhs.true.i110
  %.b4.i111 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i111, label %land.lhs.true2.i112.rcu_read_unlock.exit_crit_edge, label %if.then.i113

land.lhs.true2.i112.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i112
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

if.then.i113:                                     ; preds = %land.lhs.true2.i112
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.34, i32 noundef 724, ptr noundef nonnull @.str.36) #20
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i113, %land.lhs.true2.i112.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i110.rcu_read_unlock.exit_crit_edge, %for.end.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !198
  %26 = tail call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i.i.i114 = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i.i114 to ptr
  %preempt_count.i.i.i.i115 = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i.i115 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i.i115, align 4
  %sub.i.i.i = add i32 %29, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i115, align 4
  tail call void @rcu_read_unlock_strict() #20
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #20
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %num_devices.0.lcssa)
  %tobool41.not = icmp eq i64 %num_devices.0.lcssa, 0
  br i1 %tobool41.not, label %rcu_read_unlock.exit.cleanup_crit_edge, label %if.end8.i.i

rcu_read_unlock.exit.cleanup_crit_edge:           ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end8.i.i:                                      ; preds = %rcu_read_unlock.exit
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 156) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end8.i.i.if.then11.i.i_crit_edge, label %land.lhs.true.i.i

if.end8.i.i.if.then11.i.i_crit_edge:              ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

land.lhs.true.i.i:                                ; preds = %if.end8.i.i
  %30 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %arg, i32 24, i32 -1226833920) #27
  %asmresult.i.i = extractvalue { i32, i32 } %30, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.end.i.i, label %land.lhs.true.i.i.if.then11.i.i_crit_edge, !prof !184

land.lhs.true.i.i.if.then11.i.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %range, i32 noundef 24) #20
  %31 = call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i.i.i.i = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 4
  %33 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #13, !srcloc !191
  %and.i.i.i.i = and i32 %33, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #20, !srcloc !192
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #20, !srcloc !193
  %call1.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %range, ptr noundef %arg, i32 noundef 24) #20
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %33) #20, !srcloc !192
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #20, !srcloc !193
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool4.not.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end47, label %if.end.i.i.if.then11.i.i_crit_edge, !prof !184

if.end.i.i.if.then11.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

if.then11.i.i:                                    ; preds = %if.end.i.i.if.then11.i.i_crit_edge, %land.lhs.true.i.i.if.then11.i.i_crit_edge, %if.end8.i.i.if.then11.i.i_crit_edge
  %res.0.i.i118 = phi i32 [ %call1.i.i.i, %if.end.i.i.if.then11.i.i_crit_edge ], [ 24, %if.end8.i.i.if.then11.i.i_crit_edge ], [ 24, %land.lhs.true.i.i.if.then11.i.i_crit_edge ]
  %sub.i.i = sub i32 24, %res.0.i.i118
  %add.ptr.i.i = getelementptr i8, ptr %range, i32 %sub.i.i
  %34 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i118)
  br label %cleanup

if.end47:                                         ; preds = %if.end.i.i
  %35 = ptrtoint ptr %0 to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %0, align 8
  %sb = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 45
  %37 = ptrtoint ptr %sb to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %sb, align 8
  %s_blocksize = getelementptr inbounds %struct.super_block, ptr %38, i32 0, i32 3
  %39 = ptrtoint ptr %s_blocksize to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %s_blocksize, align 16
  %conv48 = zext i32 %40 to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %36, i64 %conv48)
  %cmp49 = icmp ult i64 %36, %conv48
  br i1 %cmp49, label %if.end47.cleanup_crit_edge, label %if.end52

if.end47.cleanup_crit_edge:                       ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end52:                                         ; preds = %if.end47
  %41 = ptrtoint ptr %1 to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %1, align 8
  %43 = call i64 @llvm.umax.i64(i64 %42, i64 %minlen.0.lcssa)
  %44 = ptrtoint ptr %1 to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %43, ptr %1, align 8
  %call62 = call i32 @btrfs_trim_fs(ptr noundef %fs_info, ptr noundef nonnull %range) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call62)
  %cmp63 = icmp slt i32 %call62, 0
  br i1 %cmp63, label %if.end52.cleanup_crit_edge, label %if.end8.i.i99

if.end52.cleanup_crit_edge:                       ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end8.i.i99:                                    ; preds = %if.end52
  call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i100 = call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i100, label %if.end8.i.i99.cleanup_crit_edge, label %copy_to_user.exit

if.end8.i.i99.cleanup_crit_edge:                  ; preds = %if.end8.i.i99
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

copy_to_user.exit:                                ; preds = %if.end8.i.i99
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i105 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %range, i32 noundef 24) #20
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef %arg, ptr noundef nonnull %range, i32 noundef 24) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool68.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool68.not, i32 0, i32 -14
  br label %cleanup

cleanup:                                          ; preds = %copy_to_user.exit, %if.end8.i.i99.cleanup_crit_edge, %if.end52.cleanup_crit_edge, %if.end47.cleanup_crit_edge, %if.then11.i.i, %rcu_read_unlock.exit.cleanup_crit_edge, %if.end3.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -1, %entry.cleanup_crit_edge ], [ -95, %if.end.cleanup_crit_edge ], [ -30, %if.end3.cleanup_crit_edge ], [ -95, %rcu_read_unlock.exit.cleanup_crit_edge ], [ -22, %if.end47.cleanup_crit_edge ], [ %call62, %if.end52.cleanup_crit_edge ], [ -14, %if.then11.i.i ], [ -14, %if.end8.i.i99.cleanup_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %range) #20
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_snap_create(ptr noundef %file, ptr noundef %arg, i32 noundef %subvol) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %0 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_inode.i, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %1, align 8
  %4 = and i16 %3, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %4)
  %cmp = icmp eq i16 %4, 16384
  br i1 %cmp, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %call2 = tail call ptr @memdup_user(ptr noundef %arg, i32 noundef 4096) #20
  %cmp.i = icmp ugt ptr %call2, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %5 = ptrtoint ptr %call2 to i32
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %name = getelementptr inbounds %struct.btrfs_ioctl_vol_args, ptr %call2, i32 0, i32 1
  %arrayidx = getelementptr %struct.btrfs_ioctl_vol_args, ptr %call2, i32 0, i32 1, i32 4087
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 0, ptr %arrayidx, align 1
  %f_path.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 1
  %7 = ptrtoint ptr %f_path.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %f_path.i, align 8
  %mnt_userns.i.i = getelementptr inbounds %struct.vfsmount, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %mnt_userns.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile ptr, ptr %mnt_userns.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !199
  %11 = ptrtoint ptr %call2 to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %call2, align 8
  %conv9 = trunc i64 %12 to i32
  %call10 = tail call fastcc i32 @__btrfs_ioctl_snap_create(ptr noundef %file, ptr noundef %10, ptr noundef %name, i32 noundef %conv9, i32 noundef %subvol, i1 noundef zeroext false, ptr noundef null)
  tail call void @kfree(ptr noundef %call2) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.then4, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %5, %if.then4 ], [ %call10, %if.end6 ], [ -20, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_snap_create_v2(ptr noundef %file, ptr noundef %arg, i32 noundef %subvol) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %0 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_inode.i, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %1, align 8
  %4 = and i16 %3, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %4)
  %cmp = icmp eq i16 %4, 16384
  br i1 %cmp, label %if.end, label %entry.cleanup64_crit_edge

entry.cleanup64_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup64

if.end:                                           ; preds = %entry
  %call2 = tail call ptr @memdup_user(ptr noundef %arg, i32 noundef 4096) #20
  %cmp.i = icmp ugt ptr %call2, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %5 = ptrtoint ptr %call2 to i32
  br label %cleanup64

if.end6:                                          ; preds = %if.end
  %6 = getelementptr inbounds %struct.btrfs_ioctl_vol_args_v2, ptr %call2, i32 0, i32 4
  %arrayidx = getelementptr %struct.btrfs_ioctl_vol_args_v2, ptr %call2, i32 0, i32 4, i32 1, i32 4031
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 0, ptr %arrayidx, align 1
  %flags = getelementptr inbounds %struct.btrfs_ioctl_vol_args_v2, ptr %call2, i32 0, i32 2
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %flags, align 8
  %and7 = and i64 %9, -7
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and7)
  %tobool.not = icmp eq i64 %and7, 0
  br i1 %tobool.not, label %if.end9, label %if.end6.free_args_crit_edge

if.end6.free_args_crit_edge:                      ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #22
  br label %free_args

if.end9:                                          ; preds = %if.end6
  %and11 = and i64 %9, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and11)
  %tobool12.not = icmp ne i64 %and11, 0
  %and16 = and i64 %9, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and16)
  %tobool17.not = icmp eq i64 %and16, 0
  br i1 %tobool17.not, label %if.end9.if.end56_crit_edge, label %if.then18

if.end9.if.end56_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end56

if.then18:                                        ; preds = %if.end9
  %10 = getelementptr inbounds %struct.btrfs_ioctl_vol_args_v2, ptr %call2, i32 0, i32 3
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %10, align 8
  %13 = add i64 %12, -4097
  call void @__sanitizer_cov_trace_const_cmp8(i64 -4025, i64 %13)
  %14 = icmp ult i64 %13, -4025
  br i1 %14, label %if.then18.free_args_crit_edge, label %if.end25

if.then18.free_args_crit_edge:                    ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #22
  br label %free_args

if.end25:                                         ; preds = %if.then18
  %qgroup_inherit = getelementptr inbounds %struct.btrfs_ioctl_vol_args_v2, ptr %call2, i32 0, i32 3, i32 0, i32 1
  %15 = ptrtoint ptr %qgroup_inherit to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %qgroup_inherit, align 8
  %conv27 = trunc i64 %12 to i32
  %call28 = tail call ptr @memdup_user(ptr noundef %16, i32 noundef %conv27) #20
  %cmp.i96 = icmp ugt ptr %call28, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i96, label %if.then30, label %if.end32

if.then30:                                        ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #22
  %17 = ptrtoint ptr %call28 to i32
  br label %free_args

if.end32:                                         ; preds = %if.end25
  %num_qgroups = getelementptr inbounds %struct.btrfs_qgroup_inherit, ptr %call28, i32 0, i32 1
  %18 = ptrtoint ptr %num_qgroups to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %num_qgroups, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 4096, i64 %19)
  %cmp33 = icmp ugt i64 %19, 4096
  br i1 %cmp33, label %if.end32.free_inherit_crit_edge, label %lor.lhs.false35

if.end32.free_inherit_crit_edge:                  ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #22
  br label %free_inherit

lor.lhs.false35:                                  ; preds = %if.end32
  %num_ref_copies = getelementptr inbounds %struct.btrfs_qgroup_inherit, ptr %call28, i32 0, i32 2
  %20 = ptrtoint ptr %num_ref_copies to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %num_ref_copies, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 4096, i64 %21)
  %cmp36 = icmp ugt i64 %21, 4096
  br i1 %cmp36, label %lor.lhs.false35.free_inherit_crit_edge, label %lor.lhs.false38

lor.lhs.false35.free_inherit_crit_edge:           ; preds = %lor.lhs.false35
  call void @__sanitizer_cov_trace_pc() #22
  br label %free_inherit

lor.lhs.false38:                                  ; preds = %lor.lhs.false35
  %num_excl_copies = getelementptr inbounds %struct.btrfs_qgroup_inherit, ptr %call28, i32 0, i32 3
  %22 = ptrtoint ptr %num_excl_copies to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %num_excl_copies, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 4096, i64 %23)
  %cmp39 = icmp ugt i64 %23, 4096
  br i1 %cmp39, label %lor.lhs.false38.free_inherit_crit_edge, label %if.end42

lor.lhs.false38.free_inherit_crit_edge:           ; preds = %lor.lhs.false38
  call void @__sanitizer_cov_trace_pc() #22
  br label %free_inherit

if.end42:                                         ; preds = %lor.lhs.false38
  %reass.add = add nuw nsw i64 %23, %21
  %reass.mul = shl nuw nsw i64 %reass.add, 1
  %add47 = add nuw nsw i64 %reass.mul, %19
  %24 = ptrtoint ptr %10 to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %10, align 8
  %conv49 = trunc i64 %add47 to i32
  %26 = shl nuw nsw i32 %conv49, 3
  %spec.select.i106 = add nuw nsw i32 %26, 72
  %conv51 = zext i32 %spec.select.i106 to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %25, i64 %conv51)
  %cmp52.not = icmp eq i64 %25, %conv51
  br i1 %cmp52.not, label %if.end42.if.end56_crit_edge, label %if.end42.free_inherit_crit_edge

if.end42.free_inherit_crit_edge:                  ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #22
  br label %free_inherit

if.end42.if.end56_crit_edge:                      ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end56

if.end56:                                         ; preds = %if.end42.if.end56_crit_edge, %if.end9.if.end56_crit_edge
  %inherit.1 = phi ptr [ null, %if.end9.if.end56_crit_edge ], [ %call28, %if.end42.if.end56_crit_edge ]
  %f_path.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 1
  %27 = ptrtoint ptr %f_path.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %f_path.i, align 8
  %mnt_userns.i.i = getelementptr inbounds %struct.vfsmount, ptr %28, i32 0, i32 3
  %29 = ptrtoint ptr %mnt_userns.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile ptr, ptr %mnt_userns.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !199
  %31 = ptrtoint ptr %call2 to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %call2, align 8
  %conv58 = trunc i64 %32 to i32
  %call60 = tail call fastcc i32 @__btrfs_ioctl_snap_create(ptr noundef %file, ptr noundef %30, ptr noundef %6, i32 noundef %conv58, i32 noundef %subvol, i1 noundef zeroext %tobool12.not, ptr noundef %inherit.1)
  br label %free_inherit

free_inherit:                                     ; preds = %if.end56, %if.end42.free_inherit_crit_edge, %lor.lhs.false38.free_inherit_crit_edge, %lor.lhs.false35.free_inherit_crit_edge, %if.end32.free_inherit_crit_edge
  %ret.1 = phi i32 [ %call60, %if.end56 ], [ -22, %if.end42.free_inherit_crit_edge ], [ -22, %if.end32.free_inherit_crit_edge ], [ -22, %lor.lhs.false35.free_inherit_crit_edge ], [ -22, %lor.lhs.false38.free_inherit_crit_edge ]
  %inherit.2 = phi ptr [ %inherit.1, %if.end56 ], [ %call28, %if.end42.free_inherit_crit_edge ], [ %call28, %if.end32.free_inherit_crit_edge ], [ %call28, %lor.lhs.false35.free_inherit_crit_edge ], [ %call28, %lor.lhs.false38.free_inherit_crit_edge ]
  tail call void @kfree(ptr noundef %inherit.2) #20
  br label %free_args

free_args:                                        ; preds = %free_inherit, %if.then30, %if.then18.free_args_crit_edge, %if.end6.free_args_crit_edge
  %ret.2 = phi i32 [ %ret.1, %free_inherit ], [ -95, %if.end6.free_args_crit_edge ], [ -22, %if.then18.free_args_crit_edge ], [ %17, %if.then30 ]
  tail call void @kfree(ptr noundef %call2) #20
  br label %cleanup64

cleanup64:                                        ; preds = %free_args, %if.then4, %entry.cleanup64_crit_edge
  %retval.0 = phi i32 [ %5, %if.then4 ], [ %ret.2, %free_args ], [ -20, %entry.cleanup64_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_snap_destroy(ptr noundef %file, ptr noundef %arg, i1 noundef zeroext %destroy_v2) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %dentry = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 1, i32 1
  %0 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dentry, align 4
  %d_sb = getelementptr inbounds %struct.dentry, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %d_sb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %d_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 33
  %4 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %s_fs_info.i, align 16
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %1, i32 0, i32 5
  %6 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %d_inode.i, align 8
  %add.ptr.i = getelementptr i8, ptr %7, i32 -864
  %8 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %add.ptr.i, align 8
  %f_path.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 1
  %10 = ptrtoint ptr %f_path.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %f_path.i, align 8
  %mnt_userns.i.i = getelementptr inbounds %struct.vfsmount, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %mnt_userns.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %mnt_userns.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !199
  %call6 = tail call ptr @memdup_user(ptr noundef %arg, i32 noundef 4096) #20
  %cmp.i = icmp ugt ptr %call6, inttoptr (i32 -4096 to ptr)
  br i1 %destroy_v2, label %if.then, label %if.else49

if.then:                                          ; preds = %entry
  br i1 %cmp.i, label %if.then8, label %if.end

if.then8:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %14 = ptrtoint ptr %call6 to i32
  br label %cleanup124

if.end:                                           ; preds = %if.then
  %flags = getelementptr inbounds %struct.btrfs_ioctl_vol_args_v2, ptr %call6, i32 0, i32 2
  %15 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %flags, align 8
  %and = and i64 %16, -17
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool10.not = icmp eq i64 %and, 0
  br i1 %tobool10.not, label %if.end12, label %if.end.out_crit_edge

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end12:                                         ; preds = %if.end
  %and14 = and i64 %16, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and14)
  %tobool15.not = icmp eq i64 %and14, 0
  %17 = getelementptr inbounds %struct.btrfs_ioctl_vol_args_v2, ptr %call6, i32 0, i32 4
  br i1 %tobool15.not, label %if.then16, label %if.else

if.then16:                                        ; preds = %if.end12
  %arrayidx = getelementptr %struct.btrfs_ioctl_vol_args_v2, ptr %call6, i32 0, i32 4, i32 1, i32 4031
  %18 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 0, ptr %arrayidx, align 1
  %call17 = tail call i32 @mnt_want_write_file(ptr noundef %file) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %if.then16.if.end62_crit_edge, label %if.then16.out_crit_edge

if.then16.out_crit_edge:                          ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.then16.if.end62_crit_edge:                     ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end62

if.else:                                          ; preds = %if.end12
  %19 = ptrtoint ptr %17 to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %17, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 256, i64 %20)
  %cmp = icmp ult i64 %20, 256
  br i1 %cmp, label %if.else.out_crit_edge, label %if.end22

if.else.out_crit_edge:                            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end22:                                         ; preds = %if.else
  %call23 = tail call i32 @mnt_want_write_file(ptr noundef %file) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %tobool24.not = icmp eq i32 %call23, 0
  br i1 %tobool24.not, label %if.end26, label %if.end22.out_crit_edge

if.end22.out_crit_edge:                           ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end26:                                         ; preds = %if.end22
  %sb = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 45
  %21 = ptrtoint ptr %sb to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %sb, align 8
  %23 = ptrtoint ptr %17 to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %17, align 8
  %call27 = tail call ptr @btrfs_get_dentry(ptr noundef %22, i64 noundef 256, i64 noundef %24, i32 noundef 0, i32 noundef 0) #20
  %cmp.i208 = icmp ugt ptr %call27, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i208, label %if.then29, label %if.end31

if.then29:                                        ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #22
  %25 = ptrtoint ptr %call27 to i32
  br label %out_drop_write

if.end31:                                         ; preds = %if.end26
  %call32 = tail call ptr @btrfs_get_parent(ptr noundef %call27) #20
  tail call void @dput(ptr noundef %call27) #20
  %cmp.i209 = icmp ugt ptr %call32, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i209, label %if.then34, label %if.end36

if.then34:                                        ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #22
  %26 = ptrtoint ptr %call32 to i32
  br label %out_drop_write

if.end36:                                         ; preds = %if.end31
  %d_inode.i210 = getelementptr inbounds %struct.dentry, ptr %call32, i32 0, i32 5
  %27 = ptrtoint ptr %d_inode.i210 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %d_inode.i210, align 8
  %cmp38.not = icmp eq ptr %7, %28
  %cmp39.not = icmp eq ptr %13, @init_user_ns
  %or.cond = select i1 %cmp38.not, i1 true, i1 %cmp39.not
  br i1 %or.cond, label %if.end41, label %if.end36.if.then122_crit_edge

if.end36.if.then122_crit_edge:                    ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then122

if.end41:                                         ; preds = %if.end36
  %29 = ptrtoint ptr %17 to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %17, align 8
  %call42 = tail call ptr @btrfs_get_subvol_name_from_objectid(ptr noundef %5, i64 noundef %30) #20
  %cmp.i211 = icmp ugt ptr %call42, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i211, label %if.then44, label %cleanup

if.then44:                                        ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #22
  %31 = ptrtoint ptr %call42 to i32
  br label %if.then122

cleanup:                                          ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #22
  %call.i = tail call ptr @strrchr(ptr noundef %call42, i32 noundef 47) #20
  %tobool.not.i = icmp eq ptr %call.i, null
  %add.ptr.i212 = getelementptr i8, ptr %call.i, i32 1
  %cond.i = select i1 %tobool.not.i, ptr %call42, ptr %add.ptr.i212
  br label %if.end62

if.else49:                                        ; preds = %entry
  br i1 %cmp.i, label %if.then52, label %if.end54

if.then52:                                        ; preds = %if.else49
  call void @__sanitizer_cov_trace_pc() #22
  %32 = ptrtoint ptr %call6 to i32
  br label %cleanup124

if.end54:                                         ; preds = %if.else49
  %name = getelementptr inbounds %struct.btrfs_ioctl_vol_args, ptr %call6, i32 0, i32 1
  %arrayidx55 = getelementptr %struct.btrfs_ioctl_vol_args, ptr %call6, i32 0, i32 1, i32 4087
  %33 = ptrtoint ptr %arrayidx55 to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 0, ptr %arrayidx55, align 1
  %call58 = tail call i32 @mnt_want_write_file(ptr noundef %file) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %if.end54.if.end62_crit_edge, label %if.end54.out_crit_edge

if.end54.out_crit_edge:                           ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end54.if.end62_crit_edge:                      ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end62

if.end62:                                         ; preds = %if.end54.if.end62_crit_edge, %cleanup, %if.then16.if.end62_crit_edge
  %parent.1 = phi ptr [ %call32, %cleanup ], [ %1, %if.then16.if.end62_crit_edge ], [ %1, %if.end54.if.end62_crit_edge ]
  %dir.1 = phi ptr [ %28, %cleanup ], [ %7, %if.then16.if.end62_crit_edge ], [ %7, %if.end54.if.end62_crit_edge ]
  %vol_args.0 = phi ptr [ null, %cleanup ], [ null, %if.then16.if.end62_crit_edge ], [ %call6, %if.end54.if.end62_crit_edge ]
  %vol_args2.0 = phi ptr [ %call6, %cleanup ], [ %call6, %if.then16.if.end62_crit_edge ], [ null, %if.end54.if.end62_crit_edge ]
  %subvol_name.1 = phi ptr [ %cond.i, %cleanup ], [ %17, %if.then16.if.end62_crit_edge ], [ %name, %if.end54.if.end62_crit_edge ]
  %subvol_name_ptr.1 = phi ptr [ %call42, %cleanup ], [ null, %if.then16.if.end62_crit_edge ], [ null, %if.end54.if.end62_crit_edge ]
  %destroy_parent.1.off0 = phi i1 [ true, %cleanup ], [ false, %if.then16.if.end62_crit_edge ], [ false, %if.end54.if.end62_crit_edge ]
  %call63 = tail call i32 @strlen(ptr noundef %subvol_name.1) #23
  %call64 = tail call ptr @strchr(ptr noundef %subvol_name.1, i32 noundef 47)
  %tobool65.not = icmp eq ptr %call64, null
  br i1 %tobool65.not, label %lor.lhs.false, label %if.end62.free_parent_crit_edge

if.end62.free_parent_crit_edge:                   ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #22
  br label %free_parent

lor.lhs.false:                                    ; preds = %if.end62
  %call66 = tail call i32 @strncmp(ptr noundef %subvol_name.1, ptr noundef nonnull @.str.41, i32 noundef %call63)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call66)
  %cmp67 = icmp eq i32 %call66, 0
  br i1 %cmp67, label %lor.lhs.false.free_parent_crit_edge, label %if.end69

lor.lhs.false.free_parent_crit_edge:              ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %free_parent

if.end69:                                         ; preds = %lor.lhs.false
  %34 = ptrtoint ptr %dir.1 to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %dir.1, align 8
  %36 = and i16 %35, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %36)
  %cmp71 = icmp eq i16 %36, 16384
  br i1 %cmp71, label %if.end74, label %if.end69.free_parent_crit_edge

if.end69.free_parent_crit_edge:                   ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #22
  br label %free_parent

if.end74:                                         ; preds = %if.end69
  %i_rwsem = getelementptr inbounds %struct.inode, ptr %dir.1, i32 0, i32 25
  %call75 = tail call i32 @down_write_killable_nested(ptr noundef %i_rwsem, i32 noundef 1) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 -4, i32 %call75)
  %cmp76 = icmp eq i32 %call75, -4
  br i1 %cmp76, label %if.end74.free_parent_crit_edge, label %if.end79

if.end74.free_parent_crit_edge:                   ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #22
  br label %free_parent

if.end79:                                         ; preds = %if.end74
  %call80 = tail call ptr @lookup_one(ptr noundef %13, ptr noundef %subvol_name.1, ptr noundef %parent.1, i32 noundef %call63) #20
  %cmp.i214 = icmp ugt ptr %call80, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i214, label %if.then82, label %if.end84

if.then82:                                        ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #22
  %37 = ptrtoint ptr %call80 to i32
  br label %out_unlock_dir

if.end84:                                         ; preds = %if.end79
  %d_inode.i215 = getelementptr inbounds %struct.dentry, ptr %call80, i32 0, i32 5
  %38 = ptrtoint ptr %d_inode.i215 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %d_inode.i215, align 8
  %cmp.i216 = icmp eq ptr %39, null
  br i1 %cmp.i216, label %if.end84.out_dput_crit_edge, label %if.end87

if.end84.out_dput_crit_edge:                      ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_dput

if.end87:                                         ; preds = %if.end84
  %add.ptr.i218 = getelementptr i8, ptr %39, i32 -864
  %40 = ptrtoint ptr %add.ptr.i218 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %add.ptr.i218, align 8
  %call91 = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call91, label %if.end87.if.end105_crit_edge, label %if.then92

if.end87.if.end105_crit_edge:                     ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end105

if.then92:                                        ; preds = %if.end87
  %mount_opt = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 31
  %42 = ptrtoint ptr %mount_opt to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %mount_opt, align 8
  %and93 = and i32 %43, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and93)
  %tobool94.not = icmp eq i32 %and93, 0
  br i1 %tobool94.not, label %if.then92.out_dput_crit_edge, label %if.end96

if.then92.out_dput_crit_edge:                     ; preds = %if.then92
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_dput

if.end96:                                         ; preds = %if.then92
  %cmp97 = icmp eq ptr %9, %41
  br i1 %cmp97, label %if.end96.out_dput_crit_edge, label %if.end100

if.end96.out_dput_crit_edge:                      ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_dput

if.end100:                                        ; preds = %if.end96
  %call101 = tail call i32 @inode_permission(ptr noundef %13, ptr noundef nonnull %39, i32 noundef 3) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call101)
  %tobool102.not = icmp eq i32 %call101, 0
  br i1 %tobool102.not, label %if.end100.if.end105_crit_edge, label %if.end100.out_dput_crit_edge

if.end100.out_dput_crit_edge:                     ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_dput

if.end100.if.end105_crit_edge:                    ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end105

if.end105:                                        ; preds = %if.end100.if.end105_crit_edge, %if.end87.if.end105_crit_edge
  %call106 = tail call fastcc i32 @btrfs_may_delete(ptr noundef %13, ptr noundef %dir.1, ptr noundef %call80)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call106)
  %tobool107.not = icmp eq i32 %call106, 0
  br i1 %tobool107.not, label %if.end109, label %if.end105.out_dput_crit_edge

if.end105.out_dput_crit_edge:                     ; preds = %if.end105
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_dput

if.end109:                                        ; preds = %if.end105
  %location.i = getelementptr i8, ptr %39, i32 -860
  %44 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %44, i32 8)
  %45 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %45)
  %tobool.not.i220 = icmp eq i64 %45, 0
  br i1 %tobool.not.i220, label %if.end109.if.then.i_crit_edge, label %lor.lhs.false.i

if.end109.if.then.i_crit_edge:                    ; preds = %if.end109
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end109
  %type.i = getelementptr i8, ptr %39, i32 -852
  %46 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %47)
  %cmp.i221 = icmp eq i8 %47, -124
  br i1 %cmp.i221, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end109.if.then.i_crit_edge
  %i_ino.i = getelementptr i8, ptr %39, i32 40
  %48 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %49 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %45, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 256, i64 %ino.0.i)
  %cmp112.not = icmp eq i64 %ino.0.i, 256
  br i1 %cmp112.not, label %if.end115, label %btrfs_ino.exit.out_dput_crit_edge

btrfs_ino.exit.out_dput_crit_edge:                ; preds = %btrfs_ino.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_dput

if.end115:                                        ; preds = %btrfs_ino.exit
  %call116 = tail call i32 @btrfs_inode_lock(ptr noundef nonnull %39, i32 noundef 0) #20
  %call117 = tail call i32 @btrfs_delete_subvolume(ptr noundef %dir.1, ptr noundef %call80) #20
  tail call void @btrfs_inode_unlock(ptr noundef nonnull %39, i32 noundef 0) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call117)
  %tobool118.not = icmp eq i32 %call117, 0
  br i1 %tobool118.not, label %if.then119, label %if.end115.out_dput_crit_edge

if.end115.out_dput_crit_edge:                     ; preds = %if.end115
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_dput

if.then119:                                       ; preds = %if.end115
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @d_delete_notify(ptr noundef %dir.1, ptr noundef %call80)
  br label %out_dput

out_dput:                                         ; preds = %if.then119, %if.end115.out_dput_crit_edge, %btrfs_ino.exit.out_dput_crit_edge, %if.end105.out_dput_crit_edge, %if.end100.out_dput_crit_edge, %if.end96.out_dput_crit_edge, %if.then92.out_dput_crit_edge, %if.end84.out_dput_crit_edge
  %err.1 = phi i32 [ %call106, %if.end105.out_dput_crit_edge ], [ %call117, %if.end115.out_dput_crit_edge ], [ 0, %if.then119 ], [ -22, %if.end96.out_dput_crit_edge ], [ %call101, %if.end100.out_dput_crit_edge ], [ -1, %if.then92.out_dput_crit_edge ], [ -2, %if.end84.out_dput_crit_edge ], [ -22, %btrfs_ino.exit.out_dput_crit_edge ]
  tail call void @dput(ptr noundef %call80) #20
  br label %out_unlock_dir

out_unlock_dir:                                   ; preds = %out_dput, %if.then82
  %err.2 = phi i32 [ %37, %if.then82 ], [ %err.1, %out_dput ]
  tail call void @btrfs_inode_unlock(ptr noundef %dir.1, i32 noundef 0) #20
  br label %free_parent

free_parent:                                      ; preds = %out_unlock_dir, %if.end74.free_parent_crit_edge, %if.end69.free_parent_crit_edge, %lor.lhs.false.free_parent_crit_edge, %if.end62.free_parent_crit_edge
  %err.3 = phi i32 [ -4, %if.end74.free_parent_crit_edge ], [ %err.2, %out_unlock_dir ], [ -22, %lor.lhs.false.free_parent_crit_edge ], [ -22, %if.end62.free_parent_crit_edge ], [ -20, %if.end69.free_parent_crit_edge ]
  tail call void @kfree(ptr noundef %subvol_name_ptr.1) #20
  br i1 %destroy_parent.1.off0, label %free_parent.if.then122_crit_edge, label %free_parent.out_drop_write_crit_edge

free_parent.out_drop_write_crit_edge:             ; preds = %free_parent
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_drop_write

free_parent.if.then122_crit_edge:                 ; preds = %free_parent
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then122

if.then122:                                       ; preds = %free_parent.if.then122_crit_edge, %if.then44, %if.end36.if.then122_crit_edge
  %err.4257 = phi i32 [ %err.3, %free_parent.if.then122_crit_edge ], [ -95, %if.end36.if.then122_crit_edge ], [ %31, %if.then44 ]
  %vol_args2.1256 = phi ptr [ %vol_args2.0, %free_parent.if.then122_crit_edge ], [ %call6, %if.end36.if.then122_crit_edge ], [ %call6, %if.then44 ]
  %vol_args.1255 = phi ptr [ %vol_args.0, %free_parent.if.then122_crit_edge ], [ null, %if.end36.if.then122_crit_edge ], [ null, %if.then44 ]
  %parent.2254 = phi ptr [ %parent.1, %free_parent.if.then122_crit_edge ], [ %call32, %if.end36.if.then122_crit_edge ], [ %call32, %if.then44 ]
  tail call void @dput(ptr noundef %parent.2254) #20
  br label %out_drop_write

out_drop_write:                                   ; preds = %if.then122, %free_parent.out_drop_write_crit_edge, %if.then34, %if.then29
  %vol_args.2 = phi ptr [ %vol_args.1255, %if.then122 ], [ %vol_args.0, %free_parent.out_drop_write_crit_edge ], [ null, %if.then29 ], [ null, %if.then34 ]
  %vol_args2.2 = phi ptr [ %vol_args2.1256, %if.then122 ], [ %vol_args2.0, %free_parent.out_drop_write_crit_edge ], [ %call6, %if.then29 ], [ %call6, %if.then34 ]
  %err.5 = phi i32 [ %err.4257, %if.then122 ], [ %err.3, %free_parent.out_drop_write_crit_edge ], [ %25, %if.then29 ], [ %26, %if.then34 ]
  tail call void @mnt_drop_write_file(ptr noundef %file) #20
  br label %out

out:                                              ; preds = %out_drop_write, %if.end54.out_crit_edge, %if.end22.out_crit_edge, %if.else.out_crit_edge, %if.then16.out_crit_edge, %if.end.out_crit_edge
  %vol_args.3 = phi ptr [ %vol_args.2, %out_drop_write ], [ null, %if.then16.out_crit_edge ], [ %call6, %if.end54.out_crit_edge ], [ null, %if.end.out_crit_edge ], [ null, %if.else.out_crit_edge ], [ null, %if.end22.out_crit_edge ]
  %vol_args2.3 = phi ptr [ %vol_args2.2, %out_drop_write ], [ %call6, %if.then16.out_crit_edge ], [ null, %if.end54.out_crit_edge ], [ %call6, %if.end.out_crit_edge ], [ %call6, %if.else.out_crit_edge ], [ %call6, %if.end22.out_crit_edge ]
  %err.6 = phi i32 [ %err.5, %out_drop_write ], [ %call17, %if.then16.out_crit_edge ], [ %call58, %if.end54.out_crit_edge ], [ -95, %if.end.out_crit_edge ], [ -22, %if.else.out_crit_edge ], [ %call23, %if.end22.out_crit_edge ]
  tail call void @kfree(ptr noundef %vol_args2.3) #20
  tail call void @kfree(ptr noundef %vol_args.3) #20
  br label %cleanup124

cleanup124:                                       ; preds = %out, %if.then52, %if.then8
  %retval.0 = phi i32 [ %14, %if.then8 ], [ %err.6, %out ], [ %32, %if.then52 ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_subvol_getflags(ptr nocapture noundef readonly %file, ptr noundef %arg) unnamed_addr #8 align 64 {
entry:
  %flags = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %0 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_inode.i, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 33
  %4 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %s_fs_info.i, align 16
  %add.ptr.i = getelementptr i8, ptr %1, i32 -864
  %6 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %add.ptr.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %flags) #20
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 0, ptr %flags, align 8
  %location.i = getelementptr i8, ptr %1, i32 -860
  %9 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %9, i32 8)
  %10 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %10)
  %tobool.not.i = icmp eq i64 %10, 0
  br i1 %tobool.not.i, label %entry.if.then.i_crit_edge, label %lor.lhs.false.i

entry.if.then.i_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %entry
  %type.i = getelementptr i8, ptr %1, i32 -852
  %11 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %12)
  %cmp.i = icmp eq i8 %12, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %entry.if.then.i_crit_edge
  %i_ino.i = getelementptr i8, ptr %1, i32 40
  %13 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %14 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %10, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 256, i64 %ino.0.i)
  %cmp.not = icmp eq i64 %ino.0.i, 256
  br i1 %cmp.not, label %if.end, label %btrfs_ino.exit.cleanup_crit_edge

btrfs_ino.exit.cleanup_crit_edge:                 ; preds = %btrfs_ino.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %btrfs_ino.exit
  %subvol_sem = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 56
  tail call void @down_read(ptr noundef %subvol_sem) #20
  %flags.i = getelementptr inbounds %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 7
  %15 = ptrtoint ptr %flags.i to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %flags.i, align 8
  %and.i = and i64 %16, 72057594037927936
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %cmp.i21.not = icmp eq i64 %and.i, 0
  br i1 %cmp.i21.not, label %if.end.if.end8_crit_edge, label %if.then7

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8

if.then7:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %17 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %flags, align 8
  %or = or i64 %18, 2
  store i64 %or, ptr %flags, align 8
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.end.if.end8_crit_edge
  tail call void @up_read(ptr noundef %subvol_sem) #20
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end8.cleanup_crit_edge, label %if.end.i.i

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end.i.i:                                       ; preds = %if.end8
  %19 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %arg, i32 8, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i = extractvalue { i32, i32 } %19, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.cleanup_crit_edge

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %flags, i32 noundef 8) #20
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef %arg, ptr noundef nonnull %flags, i32 noundef 8) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -14
  br label %cleanup

cleanup:                                          ; preds = %copy_to_user.exit, %if.end.i.i.cleanup_crit_edge, %if.end8.cleanup_crit_edge, %btrfs_ino.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %btrfs_ino.exit.cleanup_crit_edge ], [ -14, %if.end8.cleanup_crit_edge ], [ -14, %if.end.i.i.cleanup_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %flags) #20
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_subvol_setflags(ptr noundef %file, ptr noundef %arg) unnamed_addr #8 align 64 {
entry:
  %flags = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %0 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_inode.i, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 33
  %4 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %s_fs_info.i, align 16
  %add.ptr.i = getelementptr i8, ptr %1, i32 -864
  %6 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %add.ptr.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %flags) #20
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 -1, ptr %flags, align 8, !annotation !200
  %f_path.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 1
  %9 = ptrtoint ptr %f_path.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %f_path.i, align 8
  %mnt_userns.i.i = getelementptr inbounds %struct.vfsmount, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %mnt_userns.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %mnt_userns.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !199
  %call5 = tail call zeroext i1 @inode_owner_or_capable(ptr noundef %12, ptr noundef %1) #20
  br i1 %call5, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %call6 = tail call i32 @mnt_want_write_file(ptr noundef %file) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %if.end8, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %location.i = getelementptr i8, ptr %1, i32 -860
  %13 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %13, i32 8)
  %14 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %14)
  %tobool.not.i = icmp eq i64 %14, 0
  br i1 %tobool.not.i, label %if.end8.if.then.i_crit_edge, label %lor.lhs.false.i

if.end8.if.then.i_crit_edge:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end8
  %type.i = getelementptr i8, ptr %1, i32 -852
  %15 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %16)
  %cmp.i = icmp eq i8 %16, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end8.if.then.i_crit_edge
  %i_ino.i = getelementptr i8, ptr %1, i32 40
  %17 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %18 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %14, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 256, i64 %ino.0.i)
  %cmp.not = icmp eq i64 %ino.0.i, 256
  br i1 %cmp.not, label %if.end8.i.i, label %btrfs_ino.exit.out_drop_write_crit_edge

btrfs_ino.exit.out_drop_write_crit_edge:          ; preds = %btrfs_ino.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_drop_write

if.end8.i.i:                                      ; preds = %btrfs_ino.exit
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 156) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end8.i.i.if.then11.i.i_crit_edge, label %land.lhs.true.i.i

if.end8.i.i.if.then11.i.i_crit_edge:              ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

land.lhs.true.i.i:                                ; preds = %if.end8.i.i
  %19 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %arg, i32 8, i32 -1226833920) #27, !srcloc !196
  %asmresult.i.i = extractvalue { i32, i32 } %19, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.end.i.i, label %land.lhs.true.i.i.if.then11.i.i_crit_edge, !prof !184

land.lhs.true.i.i.if.then11.i.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %flags, i32 noundef 8) #20
  %20 = call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i.i.i.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 4
  %22 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #13, !srcloc !191
  %and.i.i.i.i = and i32 %22, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #20, !srcloc !192
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #20, !srcloc !193
  %call1.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %flags, ptr noundef %arg, i32 noundef 8) #20
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %22) #20, !srcloc !192
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #20, !srcloc !193
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool4.not.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end16, label %if.end.i.i.if.then11.i.i_crit_edge, !prof !184

if.end.i.i.if.then11.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

if.then11.i.i:                                    ; preds = %if.end.i.i.if.then11.i.i_crit_edge, %land.lhs.true.i.i.if.then11.i.i_crit_edge, %if.end8.i.i.if.then11.i.i_crit_edge
  %res.0.i.i107 = phi i32 [ %call1.i.i.i, %if.end.i.i.if.then11.i.i_crit_edge ], [ 8, %if.end8.i.i.if.then11.i.i_crit_edge ], [ 8, %land.lhs.true.i.i.if.then11.i.i_crit_edge ]
  %sub.i.i = sub i32 8, %res.0.i.i107
  %add.ptr.i.i = getelementptr i8, ptr %flags, i32 %sub.i.i
  %23 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i107)
  br label %out_drop_write

if.end16:                                         ; preds = %if.end.i.i
  %24 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %flags, align 8
  %and = and i64 %25, -3
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool17.not = icmp eq i64 %and, 0
  br i1 %tobool17.not, label %if.end19, label %if.end16.out_drop_write_crit_edge

if.end16.out_drop_write_crit_edge:                ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_drop_write

if.end19:                                         ; preds = %if.end16
  %subvol_sem = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 56
  call void @down_write(ptr noundef %subvol_sem) #20
  %26 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %flags, align 8
  %flags.i = getelementptr inbounds %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 7
  %28 = ptrtoint ptr %flags.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %flags.i, align 8
  %and.i = and i64 %29, 72057594037927936
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %cmp.i99 = icmp ne i64 %and.i, 0
  %30 = and i64 %27, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %30)
  %31 = icmp eq i64 %30, 0
  %cmp24 = xor i1 %31, %cmp.i99
  br i1 %cmp24, label %if.end19.out_drop_sem_crit_edge, label %if.end27

if.end19.out_drop_sem_crit_edge:                  ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_drop_sem

if.end27:                                         ; preds = %if.end19
  %root_item = getelementptr inbounds %struct.btrfs_root, ptr %7, i32 0, i32 6
  %32 = ptrtoint ptr %flags.i to i32
  call void @__asan_loadN_noabort(i32 %32, i32 8)
  %33 = load i64, ptr %flags.i, align 1
  %34 = call i64 @llvm.bswap.i64(i64 %33) #20
  br i1 %31, label %if.else, label %if.then31

if.then31:                                        ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #22
  %or = or i64 %34, 1
  %35 = call i64 @llvm.bswap.i64(i64 %or) #20
  %36 = ptrtoint ptr %flags.i to i32
  call void @__asan_storeN_noabort(i32 %36, i32 8)
  store i64 %35, ptr %flags.i, align 1
  br label %if.end42

if.else:                                          ; preds = %if.end27
  %root_item_lock = getelementptr inbounds %struct.btrfs_root, ptr %7, i32 0, i32 37
  call void @_raw_spin_lock(ptr noundef %root_item_lock) #20
  %send_in_progress = getelementptr inbounds %struct.btrfs_root, ptr %7, i32 0, i32 50
  %37 = ptrtoint ptr %send_in_progress to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %send_in_progress, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %cmp33 = icmp eq i32 %38, 0
  br i1 %cmp33, label %if.then35, label %if.else39

if.then35:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  %and37 = and i64 %34, -2
  %39 = call i64 @llvm.bswap.i64(i64 %and37) #20
  %40 = ptrtoint ptr %flags.i to i32
  call void @__asan_storeN_noabort(i32 %40, i32 8)
  store i64 %39, ptr %flags.i, align 1
  call void @_raw_spin_unlock(ptr noundef %root_item_lock) #20
  br label %if.end42

if.else39:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  call void @_raw_spin_unlock(ptr noundef %root_item_lock) #20
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %7, i32 0, i32 7
  %41 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %41, i32 8)
  %42 = load i64, ptr %root_key, align 1
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %5, ptr noundef nonnull @.str.42, i64 noundef %42) #24
  br label %out_drop_sem

if.end42:                                         ; preds = %if.then35, %if.then31
  %call43 = call ptr @btrfs_start_transaction(ptr noundef %7, i32 noundef 1) #20
  %cmp.i103 = icmp ugt ptr %call43, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i103, label %if.then45, label %if.end47

if.then45:                                        ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #22
  %43 = ptrtoint ptr %call43 to i32
  br label %out_reset

if.end47:                                         ; preds = %if.end42
  %tree_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 2
  %44 = ptrtoint ptr %tree_root to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %tree_root, align 4
  %root_key48 = getelementptr inbounds %struct.btrfs_root, ptr %7, i32 0, i32 7
  %call50 = call i32 @btrfs_update_root(ptr noundef %call43, ptr noundef %45, ptr noundef %root_key48, ptr noundef %root_item) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call50)
  %cmp51 = icmp slt i32 %call50, 0
  br i1 %cmp51, label %out_reset.thread, label %if.end55

out_reset.thread:                                 ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #22
  %call54 = call i32 @btrfs_end_transaction(ptr noundef %call43) #20
  br label %if.then58

if.end55:                                         ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #22
  %call56 = call i32 @btrfs_commit_transaction(ptr noundef %call43) #20
  br label %out_reset

out_reset:                                        ; preds = %if.end55, %if.then45
  %ret.0 = phi i32 [ %43, %if.then45 ], [ %call56, %if.end55 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool57.not = icmp eq i32 %ret.0, 0
  br i1 %tobool57.not, label %out_reset.out_drop_sem_crit_edge, label %out_reset.if.then58_crit_edge

out_reset.if.then58_crit_edge:                    ; preds = %out_reset
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then58

out_reset.out_drop_sem_crit_edge:                 ; preds = %out_reset
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_drop_sem

if.then58:                                        ; preds = %out_reset.if.then58_crit_edge, %out_reset.thread
  %ret.0112 = phi i32 [ %call50, %out_reset.thread ], [ %ret.0, %out_reset.if.then58_crit_edge ]
  %46 = ptrtoint ptr %flags.i to i32
  call void @__asan_storeN_noabort(i32 %46, i32 8)
  store i64 %33, ptr %flags.i, align 1
  br label %out_drop_sem

out_drop_sem:                                     ; preds = %if.then58, %out_reset.out_drop_sem_crit_edge, %if.else39, %if.end19.out_drop_sem_crit_edge
  %ret.1 = phi i32 [ 0, %if.end19.out_drop_sem_crit_edge ], [ %ret.0112, %if.then58 ], [ 0, %out_reset.out_drop_sem_crit_edge ], [ -1, %if.else39 ]
  call void @up_write(ptr noundef %subvol_sem) #20
  br label %out_drop_write

out_drop_write:                                   ; preds = %out_drop_sem, %if.end16.out_drop_write_crit_edge, %if.then11.i.i, %btrfs_ino.exit.out_drop_write_crit_edge
  %ret.2 = phi i32 [ %ret.1, %out_drop_sem ], [ -22, %btrfs_ino.exit.out_drop_write_crit_edge ], [ -95, %if.end16.out_drop_write_crit_edge ], [ -14, %if.then11.i.i ]
  call void @mnt_drop_write_file(ptr noundef %file) #20
  br label %cleanup

cleanup:                                          ; preds = %out_drop_write, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -1, %entry.cleanup_crit_edge ], [ %call6, %if.end.cleanup_crit_edge ], [ %ret.2, %out_drop_write ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %flags) #20
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_default_subvol(ptr noundef %file, ptr noundef %argp) unnamed_addr #0 align 64 {
entry:
  %disk_key = alloca %struct.btrfs_disk_key, align 8
  %objectid = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %0 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_inode.i, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 33
  %4 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %s_fs_info.i, align 16
  %add.ptr.i = getelementptr i8, ptr %1, i32 -864
  %6 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %add.ptr.i, align 8
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %disk_key) #20
  %8 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key, i32 0, i32 1
  %9 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key, i32 0, i32 2
  %10 = call ptr @memset(ptr %disk_key, i32 255, i32 17)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %objectid) #20
  %11 = ptrtoint ptr %objectid to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 0, ptr %objectid, align 8
  %call4 = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call4, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %call5 = tail call i32 @mnt_want_write_file(ptr noundef %file) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool.not = icmp eq i32 %call5, 0
  br i1 %tobool.not, label %if.end8.i.i, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end8.i.i:                                      ; preds = %if.end
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 156) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end8.i.i.if.then11.i.i_crit_edge, label %land.lhs.true.i.i

if.end8.i.i.if.then11.i.i_crit_edge:              ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

land.lhs.true.i.i:                                ; preds = %if.end8.i.i
  %12 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %argp, i32 8, i32 -1226833920) #27, !srcloc !196
  %asmresult.i.i = extractvalue { i32, i32 } %12, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.end.i.i, label %land.lhs.true.i.i.if.then11.i.i_crit_edge, !prof !184

land.lhs.true.i.i.if.then11.i.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %objectid, i32 noundef 8) #20
  %13 = call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 4
  %15 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #13, !srcloc !191
  %and.i.i.i.i = and i32 %15, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #20, !srcloc !192
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #20, !srcloc !193
  %call1.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %objectid, ptr noundef %argp, i32 noundef 8) #20
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %15) #20, !srcloc !192
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #20, !srcloc !193
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool4.not.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end11, label %if.end.i.i.if.then11.i.i_crit_edge, !prof !184

if.end.i.i.if.then11.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

if.then11.i.i:                                    ; preds = %if.end.i.i.if.then11.i.i_crit_edge, %land.lhs.true.i.i.if.then11.i.i_crit_edge, %if.end8.i.i.if.then11.i.i_crit_edge
  %res.0.i.i83 = phi i32 [ %call1.i.i.i, %if.end.i.i.if.then11.i.i_crit_edge ], [ 8, %if.end8.i.i.if.then11.i.i_crit_edge ], [ 8, %land.lhs.true.i.i.if.then11.i.i_crit_edge ]
  %sub.i.i = sub i32 8, %res.0.i.i83
  %add.ptr.i.i = getelementptr i8, ptr %objectid, i32 %sub.i.i
  %16 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i83)
  br label %out

if.end11:                                         ; preds = %if.end.i.i
  %17 = ptrtoint ptr %objectid to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %objectid, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %18)
  %tobool12.not = icmp eq i64 %18, 0
  br i1 %tobool12.not, label %if.then13, label %if.end11.if.end14_crit_edge

if.end11.if.end14_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end14

if.then13:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #22
  %19 = ptrtoint ptr %objectid to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 5, ptr %objectid, align 8
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.end11.if.end14_crit_edge
  %20 = ptrtoint ptr %objectid to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %objectid, align 8
  %call15 = call ptr @btrfs_get_fs_root(ptr noundef %5, i64 noundef %21, i1 noundef zeroext true) #20
  %cmp.i = icmp ugt ptr %call15, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then17, label %if.end19

if.then17:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #22
  %22 = ptrtoint ptr %call15 to i32
  br label %out

if.end19:                                         ; preds = %if.end14
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %call15, i32 0, i32 7
  %23 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %23, i32 8)
  %24 = load i64, ptr %root_key, align 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 5, i64 %24)
  %cmp.i78 = icmp ne i64 %24, 5
  %25 = add i64 %24, -281474976710656
  call void @__sanitizer_cov_trace_const_cmp8(i64 -281474976710400, i64 %25)
  %26 = icmp ult i64 %25, -281474976710400
  %tobool22.not = and i1 %cmp.i78, %26
  br i1 %tobool22.not, label %if.end19.out_free_crit_edge, label %if.end24

if.end19.out_free_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_free

if.end24:                                         ; preds = %if.end19
  %call25 = call ptr @btrfs_alloc_path() #20
  %tobool26.not = icmp eq ptr %call25, null
  br i1 %tobool26.not, label %if.end24.out_free_crit_edge, label %if.end28

if.end24.out_free_crit_edge:                      ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_free

if.end28:                                         ; preds = %if.end24
  %call29 = call ptr @btrfs_start_transaction(ptr noundef %7, i32 noundef 1) #20
  %cmp.i79 = icmp ugt ptr %call29, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i79, label %if.then31, label %if.end33

if.then31:                                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #22
  %27 = ptrtoint ptr %call29 to i32
  br label %out_free

if.end33:                                         ; preds = %if.end28
  %super_copy = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 43
  %28 = ptrtoint ptr %super_copy to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %super_copy, align 8
  %root_dir_objectid.i = getelementptr inbounds %struct.btrfs_super_block, ptr %29, i32 0, i32 12
  %30 = ptrtoint ptr %root_dir_objectid.i to i32
  call void @__asan_loadN_noabort(i32 %30, i32 8)
  %31 = load i64, ptr %root_dir_objectid.i, align 1
  %32 = call i64 @llvm.bswap.i64(i64 %31) #20
  %tree_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 2
  %33 = ptrtoint ptr %tree_root to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %tree_root, align 4
  %call35 = call ptr @btrfs_lookup_dir_item(ptr noundef %call29, ptr noundef %34, ptr noundef nonnull %call25, i64 noundef %32, ptr noundef nonnull @.str.43, i32 noundef 7, i32 noundef 1) #20
  %tobool.not.i = icmp eq ptr %call35, null
  %cmp.i80 = icmp ugt ptr %call35, inttoptr (i32 -4096 to ptr)
  %spec.select.i = or i1 %tobool.not.i, %cmp.i80
  br i1 %spec.select.i, label %if.then37, label %if.end39

if.then37:                                        ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #22
  call void @btrfs_release_path(ptr noundef nonnull %call25) #20
  %call38 = call i32 @btrfs_end_transaction(ptr noundef %call29) #20
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %5, ptr noundef nonnull @.str.44) #24
  br label %out_free

if.end39:                                         ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #22
  %offset.i = getelementptr inbounds %struct.btrfs_root, ptr %call15, i32 0, i32 7, i32 2
  %35 = ptrtoint ptr %offset.i to i32
  call void @__asan_loadN_noabort(i32 %35, i32 8)
  %36 = load i64, ptr %offset.i, align 1
  %37 = call i64 @llvm.bswap.i64(i64 %36) #20
  %38 = ptrtoint ptr %9 to i32
  call void @__asan_storeN_noabort(i32 %38, i32 8)
  store i64 %37, ptr %9, align 1
  %type.i = getelementptr inbounds %struct.btrfs_root, ptr %call15, i32 0, i32 7, i32 1
  %39 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %type.i, align 1
  %41 = ptrtoint ptr %8 to i32
  call void @__asan_store1_noabort(i32 %41)
  store i8 %40, ptr %8, align 8
  %42 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %42, i32 8)
  %43 = load i64, ptr %root_key, align 1
  %44 = call i64 @llvm.bswap.i64(i64 %43) #20
  %45 = ptrtoint ptr %disk_key to i32
  call void @__asan_store8_noabort(i32 %45)
  store i64 %44, ptr %disk_key, align 8
  %46 = ptrtoint ptr %call25 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %call25, align 4
  %48 = ptrtoint ptr %call35 to i32
  call void @write_extent_buffer(ptr noundef %47, ptr noundef nonnull %disk_key, i32 noundef %48, i32 noundef 17) #20
  %49 = ptrtoint ptr %call25 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %call25, align 4
  call void @btrfs_mark_buffer_dirty(ptr noundef %50) #20
  call void @btrfs_release_path(ptr noundef nonnull %call25) #20
  call fastcc void @__btrfs_set_fs_incompat(ptr noundef %5, i64 noundef 2, ptr noundef nonnull @.str.45)
  %call43 = call i32 @btrfs_end_transaction(ptr noundef %call29) #20
  br label %out_free

out_free:                                         ; preds = %if.end39, %if.then37, %if.then31, %if.end24.out_free_crit_edge, %if.end19.out_free_crit_edge
  %path.0 = phi ptr [ %call25, %if.then31 ], [ %call25, %if.then37 ], [ %call25, %if.end39 ], [ null, %if.end19.out_free_crit_edge ], [ null, %if.end24.out_free_crit_edge ]
  %ret.0 = phi i32 [ %27, %if.then31 ], [ -2, %if.then37 ], [ 0, %if.end39 ], [ -2, %if.end19.out_free_crit_edge ], [ -12, %if.end24.out_free_crit_edge ]
  call void @btrfs_put_root(ptr noundef %call15) #20
  call void @btrfs_free_path(ptr noundef %path.0) #20
  br label %out

out:                                              ; preds = %out_free, %if.then17, %if.then11.i.i
  %ret.1 = phi i32 [ %22, %if.then17 ], [ %ret.0, %out_free ], [ -14, %if.then11.i.i ]
  call void @mnt_drop_write_file(ptr noundef %file) #20
  br label %cleanup

cleanup:                                          ; preds = %out, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.1, %out ], [ -1, %entry.cleanup_crit_edge ], [ %call5, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %objectid) #20
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %disk_key) #20
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_defrag(ptr noundef %file, ptr noundef %argp) unnamed_addr #0 align 64 {
entry:
  %range = alloca %struct.btrfs_ioctl_defrag_range_args, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %0 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_inode.i, align 8
  %add.ptr.i = getelementptr i8, ptr %1, i32 -864
  %2 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %add.ptr.i, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %range) #20
  %4 = call ptr @memset(ptr %range, i32 0, i32 48)
  %call3 = tail call i32 @mnt_want_write_file(ptr noundef %file) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %flags.i = getelementptr inbounds %struct.btrfs_root, ptr %3, i32 0, i32 6, i32 7
  %5 = ptrtoint ptr %flags.i to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %flags.i, align 8
  %and.i = and i64 %6, 72057594037927936
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %cmp.i.not = icmp eq i64 %and.i, 0
  br i1 %cmp.i.not, label %if.end6, label %if.end.out_crit_edge

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end6:                                          ; preds = %if.end
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %1, align 8
  %9 = and i16 %8, -4096
  %10 = zext i16 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.75)
  switch i16 %9, label %if.end6.out_crit_edge [
    i16 16384, label %sw.bb
    i16 -32768, label %sw.bb11
  ]

if.end6.out_crit_edge:                            ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

sw.bb:                                            ; preds = %if.end6
  %call7 = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call7, label %if.end9, label %sw.bb.out_crit_edge

sw.bb.out_crit_edge:                              ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end9:                                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #22
  %call10 = tail call i32 @btrfs_defrag_root(ptr noundef %3) #20
  br label %out

sw.bb11:                                          ; preds = %if.end6
  %call12 = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call12, label %sw.bb11.if.end16_crit_edge, label %land.lhs.true

sw.bb11.if.end16_crit_edge:                       ; preds = %sw.bb11
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end16

land.lhs.true:                                    ; preds = %sw.bb11
  %call13 = tail call i32 @inode_permission(ptr noundef nonnull @init_user_ns, ptr noundef %1, i32 noundef 2) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %land.lhs.true.if.end16_crit_edge, label %land.lhs.true.out_crit_edge

land.lhs.true.out_crit_edge:                      ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

land.lhs.true.if.end16_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end16

if.end16:                                         ; preds = %land.lhs.true.if.end16_crit_edge, %sw.bb11.if.end16_crit_edge
  %tobool17.not = icmp eq ptr %argp, null
  br i1 %tobool17.not, label %if.else, label %if.end8.i.i

if.end8.i.i:                                      ; preds = %if.end16
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 156) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end8.i.i.if.then11.i.i_crit_edge, label %land.lhs.true.i.i

if.end8.i.i.if.then11.i.i_crit_edge:              ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

land.lhs.true.i.i:                                ; preds = %if.end8.i.i
  %11 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr nonnull %argp, i32 48, i32 -1226833920) #27, !srcloc !196
  %asmresult.i.i = extractvalue { i32, i32 } %11, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.end.i.i, label %land.lhs.true.i.i.if.then11.i.i_crit_edge, !prof !184

land.lhs.true.i.i.if.then11.i.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %range, i32 noundef 48) #20
  %12 = call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i.i.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 4
  %14 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #13, !srcloc !191
  %and.i.i.i.i = and i32 %14, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #20, !srcloc !192
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #20, !srcloc !193
  %call1.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %range, ptr noundef nonnull %argp, i32 noundef 48) #20
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %14) #20, !srcloc !192
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #20, !srcloc !193
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool4.not.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end22, label %if.end.i.i.if.then11.i.i_crit_edge, !prof !184

if.end.i.i.if.then11.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

if.then11.i.i:                                    ; preds = %if.end.i.i.if.then11.i.i_crit_edge, %land.lhs.true.i.i.if.then11.i.i_crit_edge, %if.end8.i.i.if.then11.i.i_crit_edge
  %res.0.i.i51 = phi i32 [ %call1.i.i.i, %if.end.i.i.if.then11.i.i_crit_edge ], [ 48, %if.end8.i.i.if.then11.i.i_crit_edge ], [ 48, %land.lhs.true.i.i.if.then11.i.i_crit_edge ]
  %sub.i.i = sub i32 48, %res.0.i.i51
  %add.ptr.i.i = getelementptr i8, ptr %range, i32 %sub.i.i
  %15 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i51)
  br label %out

if.end22:                                         ; preds = %if.end.i.i
  %flags = getelementptr inbounds %struct.btrfs_ioctl_defrag_range_args, ptr %range, i32 0, i32 2
  %16 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %flags, align 8
  %and23 = and i64 %17, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and23)
  %tobool24.not = icmp eq i64 %and23, 0
  br i1 %tobool24.not, label %if.end22.if.end28_crit_edge, label %if.then25

if.end22.if.end28_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end28

if.then25:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #22
  %or = or i64 %17, 2
  %18 = ptrtoint ptr %flags to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %or, ptr %flags, align 8
  %extent_thresh = getelementptr inbounds %struct.btrfs_ioctl_defrag_range_args, ptr %range, i32 0, i32 3
  %19 = ptrtoint ptr %extent_thresh to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 -1, ptr %extent_thresh, align 8
  br label %if.end28

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #22
  %len = getelementptr inbounds %struct.btrfs_ioctl_defrag_range_args, ptr %range, i32 0, i32 1
  %20 = ptrtoint ptr %len to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 -1, ptr %len, align 8
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then25, %if.end22.if.end28_crit_edge
  %21 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %f_inode.i, align 8
  %f_ra = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 13
  %call30 = call i32 @btrfs_defrag_file(ptr noundef %22, ptr noundef %f_ra, ptr noundef nonnull %range, i64 noundef 0, i32 noundef 0)
  %23 = call i32 @llvm.smin.i32(i32 %call30, i32 0)
  br label %out

out:                                              ; preds = %if.end28, %if.then11.i.i, %land.lhs.true.out_crit_edge, %if.end9, %sw.bb.out_crit_edge, %if.end6.out_crit_edge, %if.end.out_crit_edge
  %ret.0 = phi i32 [ %23, %if.end28 ], [ %call10, %if.end9 ], [ -30, %if.end.out_crit_edge ], [ -1, %sw.bb.out_crit_edge ], [ -1, %land.lhs.true.out_crit_edge ], [ -22, %if.end6.out_crit_edge ], [ -14, %if.then11.i.i ]
  call void @mnt_drop_write_file(ptr noundef %file) #20
  br label %cleanup

cleanup:                                          ; preds = %out, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %out ], [ %call3, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %range) #20
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_resize(ptr noundef %file, ptr noundef %arg) unnamed_addr #8 align 64 {
entry:
  %args = alloca %struct.btrfs_dev_lookup_args, align 8
  %devid = alloca i64, align 8
  %retptr = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %args) #20
  %0 = call ptr @memcpy(ptr %args, ptr @__const.btrfs_ioctl_dev_info.args, i32 24)
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %1 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %f_inode.i, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %2, i32 0, i32 8
  %3 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 33
  %5 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %s_fs_info.i, align 16
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %devid) #20
  %7 = ptrtoint ptr %devid to i32
  call void @__asan_store8_noabort(i32 %7)
  store i64 1, ptr %devid, align 8
  %add.ptr.i = getelementptr i8, ptr %2, i32 -864
  %8 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %add.ptr.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %retptr) #20
  %10 = ptrtoint ptr %retptr to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 -1 to ptr), ptr %retptr, align 4, !annotation !200
  %call4 = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call4, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %call5 = tail call i32 @mnt_want_write_file(ptr noundef %file) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool.not = icmp eq i32 %call5, 0
  br i1 %tobool.not, label %if.end7, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %call8 = tail call ptr @memdup_user(ptr noundef %arg, i32 noundef 4096) #20
  %cmp.i = icmp ugt ptr %call8, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #22
  %11 = ptrtoint ptr %call8 to i32
  br label %out_drop

if.end12:                                         ; preds = %if.end7
  %name = getelementptr inbounds %struct.btrfs_ioctl_vol_args, ptr %call8, i32 0, i32 1
  %arrayidx = getelementptr %struct.btrfs_ioctl_vol_args, ptr %call8, i32 0, i32 1, i32 4087
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 0, ptr %arrayidx, align 1
  %call14 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(7) @.str.46, ptr noundef %name) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %cmp = icmp eq i32 %call14, 0
  %call16 = tail call fastcc i32 @exclop_start_or_cancel_reloc(ptr noundef %6, i32 noundef 6, i1 noundef zeroext %cmp)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %if.end19, label %if.end12.out_free_crit_edge

if.end12.out_free_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_free

if.end19:                                         ; preds = %if.end12
  %call20 = tail call ptr @strchr(ptr noundef %name, i32 noundef 58)
  %tobool21.not = icmp eq ptr %call20, null
  br i1 %tobool21.not, label %if.end19.if.end32_crit_edge, label %if.then22

if.end19.if.end32_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end32

if.then22:                                        ; preds = %if.end19
  %add.ptr = getelementptr i8, ptr %call20, i32 1
  %13 = ptrtoint ptr %call20 to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 0, ptr %call20, align 1
  %call25 = call i32 @kstrtoull(ptr noundef %name, i32 noundef 10, ptr noundef nonnull %devid) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %if.end28, label %if.then22.out_finish_crit_edge

if.then22.out_finish_crit_edge:                   ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_finish

if.end28:                                         ; preds = %if.then22
  %14 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %devid, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %15)
  %tobool29.not = icmp eq i64 %15, 0
  br i1 %tobool29.not, label %if.end28.out_finish_crit_edge, label %if.end31

if.end28.out_finish_crit_edge:                    ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_finish

if.end31:                                         ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #22
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %6, ptr noundef nonnull @.str.47, i64 noundef %15) #24
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.end19.if.end32_crit_edge
  %sizestr.0 = phi ptr [ %add.ptr, %if.end31 ], [ %name, %if.end19.if.end32_crit_edge ]
  %16 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %devid, align 8
  %18 = ptrtoint ptr %args to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %17, ptr %args, align 8
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %6, i32 0, i32 100
  %19 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %fs_devices, align 8
  %call34 = call ptr @btrfs_find_device(ptr noundef %20, ptr noundef nonnull %args) #20
  %tobool35.not = icmp eq ptr %call34, null
  br i1 %tobool35.not, label %if.then36, label %if.end37

if.then36:                                        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #22
  %21 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %devid, align 8
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %6, ptr noundef nonnull @.str.48, i64 noundef %22) #24
  br label %out_finish

if.end37:                                         ; preds = %if.end32
  %dev_state = getelementptr inbounds %struct.btrfs_device, ptr %call34, i32 0, i32 10
  %23 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %dev_state, align 4
  %and1.i = and i32 %24, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool39.not = icmp eq i32 %and1.i, 0
  br i1 %tobool39.not, label %if.then40, label %if.end41

if.then40:                                        ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #22
  %25 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %devid, align 8
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %6, ptr noundef nonnull @.str.49, i64 noundef %26) #24
  br label %out_finish

if.end41:                                         ; preds = %if.end37
  %call42 = call i32 @strcmp(ptr noundef %sizestr.0, ptr noundef nonnull dereferenceable(4) @.str.50) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42)
  %tobool43.not = icmp eq i32 %call42, 0
  br i1 %tobool43.not, label %if.then44, label %if.else

if.then44:                                        ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #22
  %bdev = getelementptr inbounds %struct.btrfs_device, ptr %call34, i32 0, i32 7
  %27 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %bdev, align 8
  %bd_nr_sectors.i.i = getelementptr inbounds %struct.block_device, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %bd_nr_sectors.i.i to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %bd_nr_sectors.i.i, align 8
  %shl.i = shl i64 %30, 9
  br label %if.end67

if.else:                                          ; preds = %if.end41
  %31 = ptrtoint ptr %sizestr.0 to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %sizestr.0, align 1
  %33 = zext i8 %32 to i64
  call void @__sanitizer_cov_trace_switch(i64 %33, ptr @__sancov_gen_cov_switch_values.76)
  switch i8 %32, label %if.else.if.end58_crit_edge [
    i8 45, label %if.then49
    i8 43, label %if.then55
  ]

if.else.if.end58_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end58

if.then49:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  %incdec.ptr = getelementptr i8, ptr %sizestr.0, i32 1
  br label %if.end58

if.then55:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  %incdec.ptr56 = getelementptr i8, ptr %sizestr.0, i32 1
  br label %if.end58

if.end58:                                         ; preds = %if.then55, %if.then49, %if.else.if.end58_crit_edge
  %sizestr.1 = phi ptr [ %incdec.ptr, %if.then49 ], [ %incdec.ptr56, %if.then55 ], [ %sizestr.0, %if.else.if.end58_crit_edge ]
  %mod.0 = phi i32 [ -1, %if.then49 ], [ 1, %if.then55 ], [ 0, %if.else.if.end58_crit_edge ]
  %call59 = call i64 @memparse(ptr noundef %sizestr.1, ptr noundef nonnull %retptr) #20
  %34 = ptrtoint ptr %retptr to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %retptr, align 4
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %35, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %37)
  %cmp61.not = icmp ne i8 %37, 0
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %call59)
  %cmp63 = icmp eq i64 %call59, 0
  %or.cond = select i1 %cmp61.not, i1 true, i1 %cmp63
  br i1 %or.cond, label %if.end58.out_finish_crit_edge, label %if.end58.if.end67_crit_edge

if.end58.if.end67_crit_edge:                      ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end67

if.end58.out_finish_crit_edge:                    ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_finish

if.end67:                                         ; preds = %if.end58.if.end67_crit_edge, %if.then44
  %mod.1 = phi i32 [ 0, %if.then44 ], [ %mod.0, %if.end58.if.end67_crit_edge ]
  %new_size.0 = phi i64 [ %shl.i, %if.then44 ], [ %call59, %if.end58.if.end67_crit_edge ]
  %38 = ptrtoint ptr %dev_state to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %dev_state, align 4
  %40 = and i32 %39, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool70.not = icmp eq i32 %40, 0
  br i1 %tobool70.not, label %if.end72, label %if.end67.out_finish_crit_edge

if.end67.out_finish_crit_edge:                    ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_finish

if.end72:                                         ; preds = %if.end67
  %call73 = call fastcc i64 @btrfs_device_get_total_bytes(ptr noundef nonnull %call34)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mod.1)
  %cmp74 = icmp slt i32 %mod.1, 0
  br i1 %cmp74, label %if.then76, label %if.else81

if.then76:                                        ; preds = %if.end72
  call void @__sanitizer_cov_trace_cmp8(i64 %call73, i64 %new_size.0)
  %cmp77 = icmp ult i64 %call73, %new_size.0
  br i1 %cmp77, label %if.then76.out_finish_crit_edge, label %if.end80

if.then76.out_finish_crit_edge:                   ; preds = %if.then76
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_finish

if.end80:                                         ; preds = %if.then76
  call void @__sanitizer_cov_trace_pc() #22
  %sub = sub i64 %call73, %new_size.0
  br label %if.end91

if.else81:                                        ; preds = %if.end72
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mod.1)
  %cmp82.not = icmp eq i32 %mod.1, 0
  br i1 %cmp82.not, label %if.else81.if.end91_crit_edge, label %if.then84

if.else81.if.end91_crit_edge:                     ; preds = %if.else81
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end91

if.then84:                                        ; preds = %if.else81
  %sub85 = xor i64 %call73, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %new_size.0, i64 %sub85)
  %cmp86 = icmp ugt i64 %new_size.0, %sub85
  br i1 %cmp86, label %if.then84.out_finish_crit_edge, label %if.end89

if.then84.out_finish_crit_edge:                   ; preds = %if.then84
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_finish

if.end89:                                         ; preds = %if.then84
  call void @__sanitizer_cov_trace_pc() #22
  %add = add i64 %call73, %new_size.0
  br label %if.end91

if.end91:                                         ; preds = %if.end89, %if.else81.if.end91_crit_edge, %if.end80
  %new_size.1 = phi i64 [ %sub, %if.end80 ], [ %add, %if.end89 ], [ %new_size.0, %if.else81.if.end91_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 268435456, i64 %new_size.1)
  %cmp92 = icmp ult i64 %new_size.1, 268435456
  br i1 %cmp92, label %if.end91.out_finish_crit_edge, label %if.end95

if.end91.out_finish_crit_edge:                    ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_finish

if.end95:                                         ; preds = %if.end91
  %bdev96 = getelementptr inbounds %struct.btrfs_device, ptr %call34, i32 0, i32 7
  %41 = ptrtoint ptr %bdev96 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %bdev96, align 8
  %bd_nr_sectors.i.i227 = getelementptr inbounds %struct.block_device, ptr %42, i32 0, i32 1
  %43 = ptrtoint ptr %bd_nr_sectors.i.i227 to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %bd_nr_sectors.i.i227, align 8
  %shl.i228 = shl i64 %44, 9
  call void @__sanitizer_cov_trace_cmp8(i64 %new_size.1, i64 %shl.i228)
  %cmp98 = icmp ugt i64 %new_size.1, %shl.i228
  br i1 %cmp98, label %if.end95.out_finish_crit_edge, label %if.end101

if.end95.out_finish_crit_edge:                    ; preds = %if.end95
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_finish

if.end101:                                        ; preds = %if.end95
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %6, i32 0, i32 167
  %45 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %sectorsize, align 4
  %sub102 = add i32 %46, -1
  %conv103 = zext i32 %sub102 to i64
  %neg = xor i64 %conv103, -1
  %and = and i64 %new_size.1, %neg
  call void @__sanitizer_cov_trace_cmp8(i64 %and, i64 %call73)
  %cmp104 = icmp ugt i64 %and, %call73
  br i1 %cmp104, label %if.then106, label %if.else114

if.then106:                                       ; preds = %if.end101
  %call107 = call ptr @btrfs_start_transaction(ptr noundef %9, i32 noundef 0) #20
  %cmp.i229 = icmp ugt ptr %call107, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i229, label %if.then109, label %if.end111

if.then109:                                       ; preds = %if.then106
  call void @__sanitizer_cov_trace_pc() #22
  %47 = ptrtoint ptr %call107 to i32
  br label %out_finish

if.end111:                                        ; preds = %if.then106
  call void @__sanitizer_cov_trace_pc() #22
  %call112 = call i32 @btrfs_grow_device(ptr noundef %call107, ptr noundef nonnull %call34, i64 noundef %and) #20
  %call113 = call i32 @btrfs_commit_transaction(ptr noundef %call107) #20
  br label %if.end120

if.else114:                                       ; preds = %if.end101
  call void @__sanitizer_cov_trace_cmp8(i64 %and, i64 %call73)
  %cmp115 = icmp ult i64 %and, %call73
  br i1 %cmp115, label %if.then117, label %if.else114.land.lhs.true_crit_edge

if.else114.land.lhs.true_crit_edge:               ; preds = %if.else114
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true

if.then117:                                       ; preds = %if.else114
  call void @__sanitizer_cov_trace_pc() #22
  %call118 = call i32 @btrfs_shrink_device(ptr noundef nonnull %call34, i64 noundef %and) #20
  br label %if.end120

if.end120:                                        ; preds = %if.then117, %if.end111
  %ret.1 = phi i32 [ %call112, %if.end111 ], [ %call118, %if.then117 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.1)
  %cmp121 = icmp eq i32 %ret.1, 0
  br i1 %cmp121, label %if.end120.land.lhs.true_crit_edge, label %if.end120.out_finish_crit_edge

if.end120.out_finish_crit_edge:                   ; preds = %if.end120
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_finish

if.end120.land.lhs.true_crit_edge:                ; preds = %if.end120
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end120.land.lhs.true_crit_edge, %if.else114.land.lhs.true_crit_edge
  call void @__sanitizer_cov_trace_cmp8(i64 %and, i64 %call73)
  %cmp123.not = icmp eq i64 %and, %call73
  br i1 %cmp123.not, label %land.lhs.true.out_finish_crit_edge, label %do.body

land.lhs.true.out_finish_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_finish

do.body:                                          ; preds = %land.lhs.true
  %48 = call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i.i.i = and i32 %48, -16384
  %49 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %51, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !197
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #20
  %call.i = call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i, label %do.body.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

do.body.rcu_read_lock.exit_crit_edge:             ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %do.body
  %call1.i = call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.34, i32 noundef 696, ptr noundef nonnull @.str.35) #20
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %do.body.rcu_read_lock.exit_crit_edge
  %name127 = getelementptr inbounds %struct.btrfs_device, ptr %call34, i32 0, i32 5
  %52 = ptrtoint ptr %name127 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile ptr, ptr %name127, align 8
  %call129 = call i32 @rcu_read_lock_held() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call129)
  %tobool130.not = icmp eq i32 %call129, 0
  br i1 %tobool130.not, label %land.lhs.true131, label %rcu_read_lock.exit.do.end139_crit_edge

rcu_read_lock.exit.do.end139_crit_edge:           ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end139

land.lhs.true131:                                 ; preds = %rcu_read_lock.exit
  %call132 = call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call132)
  %tobool133.not = icmp eq i32 %call132, 0
  br i1 %tobool133.not, label %land.lhs.true131.do.end139_crit_edge, label %land.lhs.true134

land.lhs.true131.do.end139_crit_edge:             ; preds = %land.lhs.true131
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end139

land.lhs.true134:                                 ; preds = %land.lhs.true131
  %.b225 = load i1, ptr @btrfs_ioctl_resize.__warned, align 1
  br i1 %.b225, label %land.lhs.true134.do.end139_crit_edge, label %if.then136

land.lhs.true134.do.end139_crit_edge:             ; preds = %land.lhs.true134
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end139

if.then136:                                       ; preds = %land.lhs.true134
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @btrfs_ioctl_resize.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.1, i32 noundef 2072, ptr noundef nonnull @.str.52) #20
  br label %do.end139

do.end139:                                        ; preds = %if.then136, %land.lhs.true134.do.end139_crit_edge, %land.lhs.true131.do.end139_crit_edge, %rcu_read_lock.exit.do.end139_crit_edge
  %str = getelementptr inbounds %struct.rcu_string, ptr %53, i32 0, i32 1
  %devid143 = getelementptr inbounds %struct.btrfs_device, ptr %call34, i32 0, i32 13
  %54 = ptrtoint ptr %devid143 to i32
  call void @__asan_load8_noabort(i32 %54)
  %55 = load i64, ptr %devid143, align 8
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %6, ptr noundef nonnull @.str.51, ptr noundef %str, i64 noundef %55, i64 noundef %call73, i64 noundef %and) #24
  call fastcc void @rcu_read_unlock()
  br label %out_finish

out_finish:                                       ; preds = %do.end139, %land.lhs.true.out_finish_crit_edge, %if.end120.out_finish_crit_edge, %if.then109, %if.end95.out_finish_crit_edge, %if.end91.out_finish_crit_edge, %if.then84.out_finish_crit_edge, %if.then76.out_finish_crit_edge, %if.end67.out_finish_crit_edge, %if.end58.out_finish_crit_edge, %if.then40, %if.then36, %if.end28.out_finish_crit_edge, %if.then22.out_finish_crit_edge
  %ret.2 = phi i32 [ %call25, %if.then22.out_finish_crit_edge ], [ %47, %if.then109 ], [ 0, %do.end139 ], [ 0, %land.lhs.true.out_finish_crit_edge ], [ %ret.1, %if.end120.out_finish_crit_edge ], [ -1, %if.then40 ], [ -19, %if.then36 ], [ -22, %if.end28.out_finish_crit_edge ], [ -22, %if.end58.out_finish_crit_edge ], [ -1, %if.end67.out_finish_crit_edge ], [ -22, %if.then76.out_finish_crit_edge ], [ -34, %if.then84.out_finish_crit_edge ], [ -22, %if.end91.out_finish_crit_edge ], [ -27, %if.end95.out_finish_crit_edge ]
  %super_lock.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %6, i32 0, i32 42
  call void @_raw_spin_lock(ptr noundef %super_lock.i) #20
  %exclusive_operation.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %6, i32 0, i32 175
  %56 = ptrtoint ptr %exclusive_operation.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store volatile i32 0, ptr %exclusive_operation.i, align 4
  call void @_raw_spin_unlock(ptr noundef %super_lock.i) #20
  %fs_devices.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %6, i32 0, i32 100
  %57 = ptrtoint ptr %fs_devices.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %fs_devices.i, align 8
  %fsid_kobj.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %58, i32 0, i32 20
  call void @sysfs_notify(ptr noundef %fsid_kobj.i, ptr noundef null, ptr noundef nonnull @.str.7) #20
  br label %out_free

out_free:                                         ; preds = %out_finish, %if.end12.out_free_crit_edge
  %ret.3 = phi i32 [ %call16, %if.end12.out_free_crit_edge ], [ %ret.2, %out_finish ]
  call void @kfree(ptr noundef %call8) #20
  br label %out_drop

out_drop:                                         ; preds = %out_free, %if.then10
  %ret.4 = phi i32 [ %11, %if.then10 ], [ %ret.3, %out_free ]
  call void @mnt_drop_write_file(ptr noundef %file) #20
  br label %cleanup

cleanup:                                          ; preds = %out_drop, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.4, %out_drop ], [ -1, %entry.cleanup_crit_edge ], [ %call5, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %retptr) #20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %devid) #20
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args) #20
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_add_dev(ptr noundef %fs_info, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %super_lock.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 42
  tail call void @_raw_spin_lock(ptr noundef %super_lock.i) #20
  %exclusive_operation.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 175
  %0 = ptrtoint ptr %exclusive_operation.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %exclusive_operation.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp.i = icmp eq i32 %1, 0
  br i1 %cmp.i, label %if.end.if.end6_crit_edge, label %if.then2

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6

if.then2:                                         ; preds = %if.end
  tail call void @_raw_spin_unlock(ptr noundef %super_lock.i) #20
  tail call void @_raw_spin_lock(ptr noundef %super_lock.i) #20
  %2 = ptrtoint ptr %exclusive_operation.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %exclusive_operation.i, align 4
  %4 = zext i32 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.77)
  switch i32 %3, label %btrfs_exclop_start_try_lock.exit [
    i32 3, label %if.then2.if.end6_crit_edge
    i32 1, label %if.then2.if.end6_crit_edge46
  ]

if.then2.if.end6_crit_edge46:                     ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6

if.then2.if.end6_crit_edge:                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end6

btrfs_exclop_start_try_lock.exit:                 ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @_raw_spin_unlock(ptr noundef %super_lock.i) #20
  br label %cleanup

if.end6:                                          ; preds = %if.then2.if.end6_crit_edge, %if.then2.if.end6_crit_edge46, %if.end.if.end6_crit_edge
  %5 = ptrtoint ptr %exclusive_operation.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 3, ptr %exclusive_operation.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %super_lock.i) #20
  %call7 = tail call ptr @memdup_user(ptr noundef %arg, i32 noundef 4096) #20
  %cmp.i40 = icmp ugt ptr %call7, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i40, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #22
  %6 = ptrtoint ptr %call7 to i32
  br label %out

if.end11:                                         ; preds = %if.end6
  %name = getelementptr inbounds %struct.btrfs_ioctl_vol_args, ptr %call7, i32 0, i32 1
  %arrayidx = getelementptr %struct.btrfs_ioctl_vol_args, ptr %call7, i32 0, i32 1, i32 4087
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 0, ptr %arrayidx, align 1
  %call13 = tail call i32 @btrfs_init_new_device(ptr noundef %fs_info, ptr noundef %name) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool.not = icmp eq i32 %call13, 0
  br i1 %tobool.not, label %if.then14, label %if.end11.if.end17_crit_edge

if.end11.if.end17_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end17

if.then14:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.54, ptr noundef %name) #24
  br label %if.end17

if.end17:                                         ; preds = %if.then14, %if.end11.if.end17_crit_edge
  tail call void @kfree(ptr noundef %call7) #20
  br label %out

out:                                              ; preds = %if.end17, %if.then9
  %ret.0 = phi i32 [ %6, %if.then9 ], [ %call13, %if.end17 ]
  tail call void @_raw_spin_lock(ptr noundef %super_lock.i) #20
  br i1 %cmp.i, label %if.else, label %if.then19

if.then19:                                        ; preds = %out
  %8 = ptrtoint ptr %exclusive_operation.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %exclusive_operation.i, align 4
  %10 = and i32 %9, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %10)
  %switch.i = icmp eq i32 %10, 2
  br i1 %switch.i, label %btrfs_exclop_balance.exit, label %cond.false.i

cond.false.i:                                     ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #22
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.8, i32 noundef 427) #28
  unreachable

btrfs_exclop_balance.exit:                        ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #22
  %11 = ptrtoint ptr %exclusive_operation.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 1, ptr %exclusive_operation.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %super_lock.i) #20
  br label %cleanup

if.else:                                          ; preds = %out
  call void @__sanitizer_cov_trace_pc() #22
  %12 = ptrtoint ptr %exclusive_operation.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile i32 0, ptr %exclusive_operation.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %super_lock.i) #20
  %fs_devices.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %13 = ptrtoint ptr %fs_devices.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %fs_devices.i, align 8
  %fsid_kobj.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %14, i32 0, i32 20
  tail call void @sysfs_notify(ptr noundef %fsid_kobj.i, ptr noundef null, ptr noundef nonnull @.str.7) #20
  br label %cleanup

cleanup:                                          ; preds = %if.else, %btrfs_exclop_balance.exit, %btrfs_exclop_start_try_lock.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -1, %entry.cleanup_crit_edge ], [ 8, %btrfs_exclop_start_try_lock.exit ], [ %ret.0, %if.else ], [ %ret.0, %btrfs_exclop_balance.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_rm_dev(ptr noundef %file, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  %args = alloca %struct.btrfs_dev_lookup_args, align 8
  %bdev = alloca ptr, align 4
  %mode = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %args) #20
  %0 = call ptr @memcpy(ptr %args, ptr @__const.btrfs_ioctl_dev_info.args, i32 24)
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %1 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %f_inode.i, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %2, i32 0, i32 8
  %3 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 33
  %5 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %s_fs_info.i, align 16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %bdev) #20
  %7 = ptrtoint ptr %bdev to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr null, ptr %bdev, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %mode) #20
  %8 = ptrtoint ptr %mode to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -1, ptr %mode, align 4, !annotation !200
  %call2 = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call2, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %call3 = tail call ptr @memdup_user(ptr noundef %arg, i32 noundef 4096) #20
  %cmp.i = icmp ugt ptr %call3, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then5, label %if.end7

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %9 = ptrtoint ptr %call3 to i32
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %name = getelementptr inbounds %struct.btrfs_ioctl_vol_args, ptr %call3, i32 0, i32 1
  %arrayidx = getelementptr %struct.btrfs_ioctl_vol_args, ptr %call3, i32 0, i32 1, i32 4087
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 0, ptr %arrayidx, align 1
  %call9 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(7) @.str.46, ptr noundef %name) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool.not = icmp eq i32 %call9, 0
  br i1 %tobool.not, label %if.end7.if.end17_crit_edge, label %if.else

if.end7.if.end17_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end17

if.else:                                          ; preds = %if.end7
  %call13 = call i32 @btrfs_get_dev_args_from_path(ptr noundef %6, ptr noundef nonnull %args, ptr noundef %name) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.else.if.end17_crit_edge, label %if.else.out_crit_edge

if.else.out_crit_edge:                            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.else.if.end17_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end17

if.end17:                                         ; preds = %if.else.if.end17_crit_edge, %if.end7.if.end17_crit_edge
  %call18 = call i32 @mnt_want_write_file(ptr noundef %file) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %if.end21, label %if.end17.out_crit_edge

if.end17.out_crit_edge:                           ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end21:                                         ; preds = %if.end17
  %call23 = call fastcc i32 @exclop_start_or_cancel_reloc(ptr noundef %6, i32 noundef 4, i1 noundef zeroext %tobool.not)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %cmp = icmp eq i32 %call23, 0
  br i1 %cmp, label %if.then24, label %if.end21.if.end31_crit_edge

if.end21.if.end31_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end31

if.then24:                                        ; preds = %if.end21
  %call25 = call i32 @btrfs_rm_device(ptr noundef %6, ptr noundef nonnull %args, ptr noundef nonnull %bdev, ptr noundef nonnull %mode) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %if.then27, label %if.then24.if.end30_crit_edge

if.then24.if.end30_crit_edge:                     ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end30

if.then27:                                        ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #22
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %6, ptr noundef nonnull @.str.55, ptr noundef %name) #24
  br label %if.end30

if.end30:                                         ; preds = %if.then27, %if.then24.if.end30_crit_edge
  %super_lock.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %6, i32 0, i32 42
  call void @_raw_spin_lock(ptr noundef %super_lock.i) #20
  %exclusive_operation.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %6, i32 0, i32 175
  %11 = ptrtoint ptr %exclusive_operation.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile i32 0, ptr %exclusive_operation.i, align 4
  call void @_raw_spin_unlock(ptr noundef %super_lock.i) #20
  %fs_devices.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %6, i32 0, i32 100
  %12 = ptrtoint ptr %fs_devices.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %fs_devices.i, align 8
  %fsid_kobj.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %13, i32 0, i32 20
  call void @sysfs_notify(ptr noundef %fsid_kobj.i, ptr noundef null, ptr noundef nonnull @.str.7) #20
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.end21.if.end31_crit_edge
  %ret.0 = phi i32 [ %call25, %if.end30 ], [ %call23, %if.end21.if.end31_crit_edge ]
  call void @mnt_drop_write_file(ptr noundef %file) #20
  %14 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %bdev, align 4
  %tobool32.not = icmp eq ptr %15, null
  br i1 %tobool32.not, label %if.end31.out_crit_edge, label %if.then33

if.end31.out_crit_edge:                           ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.then33:                                        ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #22
  %16 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %mode, align 4
  call void @blkdev_put(ptr noundef nonnull %15, i32 noundef %17) #20
  br label %out

out:                                              ; preds = %if.then33, %if.end31.out_crit_edge, %if.end17.out_crit_edge, %if.else.out_crit_edge
  %ret.1 = phi i32 [ %call13, %if.else.out_crit_edge ], [ %call18, %if.end17.out_crit_edge ], [ %ret.0, %if.then33 ], [ %ret.0, %if.end31.out_crit_edge ]
  call void @btrfs_put_dev_args_from_path(ptr noundef nonnull %args) #20
  call void @kfree(ptr noundef %call3) #20
  br label %cleanup

cleanup:                                          ; preds = %out, %if.then5, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %9, %if.then5 ], [ %ret.1, %out ], [ -1, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %mode) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %bdev) #20
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args) #20
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_rm_dev_v2(ptr noundef %file, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  %args = alloca %struct.btrfs_dev_lookup_args, align 8
  %bdev = alloca ptr, align 4
  %mode = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %args) #20
  %0 = call ptr @memcpy(ptr %args, ptr @__const.btrfs_ioctl_dev_info.args, i32 24)
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %1 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %f_inode.i, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %2, i32 0, i32 8
  %3 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 33
  %5 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %s_fs_info.i, align 16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %bdev) #20
  %7 = ptrtoint ptr %bdev to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr null, ptr %bdev, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %mode) #20
  %8 = ptrtoint ptr %mode to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -1, ptr %mode, align 4, !annotation !200
  %call2 = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call2, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %call3 = tail call ptr @memdup_user(ptr noundef %arg, i32 noundef 4096) #20
  %cmp.i = icmp ugt ptr %call3, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then5, label %if.end7

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %9 = ptrtoint ptr %call3 to i32
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %flags = getelementptr inbounds %struct.btrfs_ioctl_vol_args_v2, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %flags, align 8
  %and = and i64 %11, -9
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %if.end9, label %if.end7.out_crit_edge

if.end7.out_crit_edge:                            ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end9:                                          ; preds = %if.end7
  %12 = getelementptr inbounds %struct.btrfs_ioctl_vol_args_v2, ptr %call3, i32 0, i32 4
  %arrayidx = getelementptr %struct.btrfs_ioctl_vol_args_v2, ptr %call3, i32 0, i32 4, i32 1, i32 4031
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 0, ptr %arrayidx, align 1
  %and11 = and i64 %11, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and11)
  %tobool12.not = icmp eq i64 %and11, 0
  br i1 %tobool12.not, label %if.else, label %if.then13

if.then13:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #22
  %14 = ptrtoint ptr %12 to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %12, align 8
  %16 = ptrtoint ptr %args to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %15, ptr %args, align 8
  br label %if.end24

if.else:                                          ; preds = %if.end9
  %call14 = tail call i32 @strcmp(ptr noundef nonnull dereferenceable(7) @.str.46, ptr noundef %12) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.else.if.end24_crit_edge, label %if.else17

if.else.if.end24_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end24

if.else17:                                        ; preds = %if.else
  %call19 = call i32 @btrfs_get_dev_args_from_path(ptr noundef %6, ptr noundef nonnull %args, ptr noundef %12) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %if.else17.if.end24_crit_edge, label %if.else17.out_crit_edge

if.else17.out_crit_edge:                          ; preds = %if.else17
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.else17.if.end24_crit_edge:                     ; preds = %if.else17
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end24

if.end24:                                         ; preds = %if.else17.if.end24_crit_edge, %if.else.if.end24_crit_edge, %if.then13
  %cancel.0.off0 = phi i1 [ false, %if.then13 ], [ false, %if.else17.if.end24_crit_edge ], [ true, %if.else.if.end24_crit_edge ]
  %call25 = call i32 @mnt_want_write_file(ptr noundef %file) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %if.end28, label %if.end24.out_crit_edge

if.end24.out_crit_edge:                           ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end28:                                         ; preds = %if.end24
  %call30 = call fastcc i32 @exclop_start_or_cancel_reloc(ptr noundef %6, i32 noundef 4, i1 noundef zeroext %cancel.0.off0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30)
  %tobool31.not = icmp eq i32 %call30, 0
  br i1 %tobool31.not, label %if.end33, label %if.end28.err_drop_crit_edge

if.end28.err_drop_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #22
  br label %err_drop

if.end33:                                         ; preds = %if.end28
  %call34 = call i32 @btrfs_rm_device(ptr noundef %6, ptr noundef nonnull %args, ptr noundef nonnull %bdev, ptr noundef nonnull %mode) #20
  call void @btrfs_exclop_finish(ptr noundef %6)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call34)
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %if.then36, label %if.end33.err_drop_crit_edge

if.end33.err_drop_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #22
  br label %err_drop

if.then36:                                        ; preds = %if.end33
  %17 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %flags, align 8
  %and38 = and i64 %18, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and38)
  %tobool39.not = icmp eq i64 %and38, 0
  br i1 %tobool39.not, label %if.else41, label %if.then40

if.then40:                                        ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #22
  %19 = ptrtoint ptr %12 to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %12, align 8
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %6, ptr noundef nonnull @.str.56, i64 noundef %20) #24
  br label %err_drop

if.else41:                                        ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #22
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %6, ptr noundef nonnull @.str.57, ptr noundef %12) #24
  br label %err_drop

err_drop:                                         ; preds = %if.else41, %if.then40, %if.end33.err_drop_crit_edge, %if.end28.err_drop_crit_edge
  %ret.0 = phi i32 [ %call30, %if.end28.err_drop_crit_edge ], [ %call34, %if.end33.err_drop_crit_edge ], [ 0, %if.then40 ], [ 0, %if.else41 ]
  call void @mnt_drop_write_file(ptr noundef %file) #20
  %21 = ptrtoint ptr %bdev to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %bdev, align 4
  %tobool45.not = icmp eq ptr %22, null
  br i1 %tobool45.not, label %err_drop.out_crit_edge, label %if.then46

err_drop.out_crit_edge:                           ; preds = %err_drop
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.then46:                                        ; preds = %err_drop
  call void @__sanitizer_cov_trace_pc() #22
  %23 = ptrtoint ptr %mode to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %mode, align 4
  call void @blkdev_put(ptr noundef nonnull %22, i32 noundef %24) #20
  br label %out

out:                                              ; preds = %if.then46, %err_drop.out_crit_edge, %if.end24.out_crit_edge, %if.else17.out_crit_edge, %if.end7.out_crit_edge
  %ret.1 = phi i32 [ %call25, %if.end24.out_crit_edge ], [ %ret.0, %if.then46 ], [ %ret.0, %err_drop.out_crit_edge ], [ %call19, %if.else17.out_crit_edge ], [ -95, %if.end7.out_crit_edge ]
  call void @btrfs_put_dev_args_from_path(ptr noundef nonnull %args) #20
  call void @kfree(ptr noundef %call3) #20
  br label %cleanup

cleanup:                                          ; preds = %out, %if.then5, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %9, %if.then5 ], [ %ret.1, %out ], [ -1, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %mode) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %bdev) #20
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args) #20
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_fs_info(ptr nocapture noundef readonly %fs_info, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_devices1 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %0 = ptrtoint ptr %fs_devices1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_devices1, align 8
  %call = tail call ptr @memdup_user(ptr noundef %arg, i32 noundef 1024) #20
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %2 = ptrtoint ptr %call to i32
  br label %cleanup

if.end:                                           ; preds = %entry
  %flags = getelementptr inbounds %struct.btrfs_ioctl_fs_info_args, ptr %call, i32 0, i32 8
  %3 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %flags, align 8
  %5 = call ptr @memset(ptr %call, i32 0, i32 1024)
  %6 = tail call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %9, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !197
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #20
  %call.i = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i, label %if.end.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end.rcu_read_lock.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.34, i32 noundef 696, ptr noundef nonnull @.str.35) #20
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end.rcu_read_lock.exit_crit_edge
  %num_devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %num_devices to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %num_devices, align 8
  %num_devices4 = getelementptr inbounds %struct.btrfs_ioctl_fs_info_args, ptr %call, i32 0, i32 1
  %12 = ptrtoint ptr %num_devices4 to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %11, ptr %num_devices4, align 8
  %call5 = tail call i32 @rcu_read_lock_any_held() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool.not = icmp eq i32 %call5, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end_crit_edge

rcu_read_lock.exit.do.end_crit_edge:              ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call6 = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true8

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end

land.lhs.true8:                                   ; preds = %land.lhs.true
  %.b100 = load i1, ptr @btrfs_ioctl_fs_info.__warned, align 1
  br i1 %.b100, label %land.lhs.true8.do.end_crit_edge, label %if.then10

land.lhs.true8.do.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end

if.then10:                                        ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @btrfs_ioctl_fs_info.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.1, i32 noundef 3636, ptr noundef nonnull @.str.33) #20
  br label %do.end

do.end:                                           ; preds = %if.then10, %land.lhs.true8.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %rcu_read_lock.exit.do.end_crit_edge
  %devices = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 13
  %13 = ptrtoint ptr %devices to i32
  call void @__asan_load4_noabort(i32 %13)
  %device.0113 = load volatile ptr, ptr %devices, align 8
  %cmp.not114 = icmp eq ptr %device.0113, %devices
  br i1 %cmp.not114, label %do.end.for.end_crit_edge, label %do.end.for.body_crit_edge

do.end.for.body_crit_edge:                        ; preds = %do.end
  br label %for.body

do.end.for.end_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %do.end.for.body_crit_edge
  %device.0115 = phi ptr [ %device.0, %for.inc.for.body_crit_edge ], [ %device.0113, %do.end.for.body_crit_edge ]
  %devid = getelementptr inbounds %struct.btrfs_device, ptr %device.0115, i32 0, i32 13
  %14 = ptrtoint ptr %devid to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %devid, align 8
  %16 = ptrtoint ptr %call to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %call, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %15, i64 %17)
  %cmp17 = icmp ugt i64 %15, %17
  br i1 %cmp17, label %if.then18, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

if.then18:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  %18 = ptrtoint ptr %call to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %15, ptr %call, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.then18, %for.body.for.inc_crit_edge
  %19 = ptrtoint ptr %device.0115 to i32
  call void @__asan_load4_noabort(i32 %19)
  %device.0 = load volatile ptr, ptr %device.0115, align 8
  %cmp.not = icmp eq ptr %device.0, %devices
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %do.end.for.end_crit_edge
  %call.i102 = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i102, label %for.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i105

for.end.rcu_read_unlock.exit_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

land.lhs.true.i105:                               ; preds = %for.end
  %call1.i103 = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i103)
  %tobool.not.i104 = icmp eq i32 %call1.i103, 0
  br i1 %tobool.not.i104, label %land.lhs.true.i105.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i107

land.lhs.true.i105.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i105
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

land.lhs.true2.i107:                              ; preds = %land.lhs.true.i105
  %.b4.i106 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i106, label %land.lhs.true2.i107.rcu_read_unlock.exit_crit_edge, label %if.then.i108

land.lhs.true2.i107.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i107
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

if.then.i108:                                     ; preds = %land.lhs.true2.i107
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.34, i32 noundef 724, ptr noundef nonnull @.str.36) #20
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i108, %land.lhs.true2.i107.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i105.rcu_read_unlock.exit_crit_edge, %for.end.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !198
  %20 = tail call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i.i.i109 = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i.i.i109 to ptr
  %preempt_count.i.i.i.i110 = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i.i.i110 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i.i.i110, align 4
  %sub.i.i.i = add i32 %23, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i110, align 4
  tail call void @rcu_read_unlock_strict() #20
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #20
  %fsid = getelementptr inbounds %struct.btrfs_ioctl_fs_info_args, ptr %call, i32 0, i32 2
  %24 = call ptr @memcpy(ptr %fsid, ptr %1, i32 16)
  %nodesize = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 166
  %25 = ptrtoint ptr %nodesize to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %nodesize, align 8
  %nodesize32 = getelementptr inbounds %struct.btrfs_ioctl_fs_info_args, ptr %call, i32 0, i32 3
  %27 = ptrtoint ptr %nodesize32 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %nodesize32, align 8
  %sectorsize = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 167
  %28 = ptrtoint ptr %sectorsize to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %sectorsize, align 4
  %sectorsize33 = getelementptr inbounds %struct.btrfs_ioctl_fs_info_args, ptr %call, i32 0, i32 4
  %30 = ptrtoint ptr %sectorsize33 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %sectorsize33, align 4
  %31 = load i32, ptr %sectorsize, align 4
  %clone_alignment = getelementptr inbounds %struct.btrfs_ioctl_fs_info_args, ptr %call, i32 0, i32 5
  %32 = ptrtoint ptr %clone_alignment to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %clone_alignment, align 8
  %and = and i64 %4, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool35.not = icmp eq i64 %and, 0
  br i1 %tobool35.not, label %rcu_read_unlock.exit.if.end41_crit_edge, label %if.then36

rcu_read_unlock.exit.if.end41_crit_edge:          ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end41

if.then36:                                        ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #22
  %super_copy = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 43
  %33 = ptrtoint ptr %super_copy to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %super_copy, align 8
  %csum_type.i = getelementptr inbounds %struct.btrfs_super_block, ptr %34, i32 0, i32 23
  %35 = ptrtoint ptr %csum_type.i to i32
  call void @__asan_loadN_noabort(i32 %35, i32 2)
  %36 = load i16, ptr %csum_type.i, align 1
  %37 = tail call i16 @llvm.bswap.i16(i16 %36) #20
  %csum_type = getelementptr inbounds %struct.btrfs_ioctl_fs_info_args, ptr %call, i32 0, i32 6
  %38 = ptrtoint ptr %csum_type to i32
  call void @__asan_store2_noabort(i32 %38)
  store i16 %37, ptr %csum_type, align 4
  %39 = ptrtoint ptr %super_copy to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %super_copy, align 8
  %call39 = tail call i32 @btrfs_super_csum_size(ptr noundef %40) #20
  %conv = trunc i32 %call39 to i16
  %csum_size = getelementptr inbounds %struct.btrfs_ioctl_fs_info_args, ptr %call, i32 0, i32 7
  %41 = ptrtoint ptr %csum_size to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 %conv, ptr %csum_size, align 2
  %42 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %flags, align 8
  %or = or i64 %43, 1
  store i64 %or, ptr %flags, align 8
  br label %if.end41

if.end41:                                         ; preds = %if.then36, %rcu_read_unlock.exit.if.end41_crit_edge
  %and42 = and i64 %4, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and42)
  %tobool43.not = icmp eq i64 %and42, 0
  br i1 %tobool43.not, label %if.end41.if.end48_crit_edge, label %if.then44

if.end41.if.end48_crit_edge:                      ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end48

if.then44:                                        ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #22
  %generation = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 26
  %44 = ptrtoint ptr %generation to i32
  call void @__asan_load8_noabort(i32 %44)
  %45 = load i64, ptr %generation, align 8
  %generation45 = getelementptr inbounds %struct.btrfs_ioctl_fs_info_args, ptr %call, i32 0, i32 9
  %46 = ptrtoint ptr %generation45 to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 %45, ptr %generation45, align 8
  %47 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %flags, align 8
  %or47 = or i64 %48, 2
  store i64 %or47, ptr %flags, align 8
  br label %if.end48

if.end48:                                         ; preds = %if.then44, %if.end41.if.end48_crit_edge
  %and49 = and i64 %4, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and49)
  %tobool50.not = icmp eq i64 %and49, 0
  br i1 %tobool50.not, label %if.end48.if.end8.i.i_crit_edge, label %if.then51

if.end48.if.end8.i.i_crit_edge:                   ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8.i.i

if.then51:                                        ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #22
  %metadata_uuid = getelementptr inbounds %struct.btrfs_ioctl_fs_info_args, ptr %call, i32 0, i32 10
  %metadata_uuid52 = getelementptr inbounds %struct.btrfs_fs_devices, ptr %1, i32 0, i32 1
  %49 = call ptr @memcpy(ptr %metadata_uuid, ptr %metadata_uuid52, i32 16)
  %50 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %50)
  %51 = load i64, ptr %flags, align 8
  %or55 = or i64 %51, 4
  store i64 %or55, ptr %flags, align 8
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %if.then51, %if.end48.if.end8.i.i_crit_edge
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end8.i.i.copy_to_user.exit.thread_crit_edge, label %if.end.i.i

if.end8.i.i.copy_to_user.exit.thread_crit_edge:   ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %copy_to_user.exit.thread

if.end.i.i:                                       ; preds = %if.end8.i.i
  %52 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %arg, i32 1024, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i = extractvalue { i32, i32 } %52, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.copy_to_user.exit.thread_crit_edge

if.end.i.i.copy_to_user.exit.thread_crit_edge:    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %copy_to_user.exit.thread

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %call, i32 noundef 1024) #20
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %arg, ptr noundef %call, i32 noundef 1024) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool58.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool58.not, i32 0, i32 -14
  br label %copy_to_user.exit.thread

copy_to_user.exit.thread:                         ; preds = %copy_to_user.exit, %if.end.i.i.copy_to_user.exit.thread_crit_edge, %if.end8.i.i.copy_to_user.exit.thread_crit_edge
  %53 = phi i32 [ -14, %if.end8.i.i.copy_to_user.exit.thread_crit_edge ], [ -14, %if.end.i.i.copy_to_user.exit.thread_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  tail call void @kfree(ptr noundef %call) #20
  br label %cleanup

cleanup:                                          ; preds = %copy_to_user.exit.thread, %if.then
  %retval.0 = phi i32 [ %2, %if.then ], [ %53, %copy_to_user.exit.thread ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_dev_info(ptr nocapture noundef readonly %fs_info, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  %args = alloca %struct.btrfs_dev_lookup_args, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %args) #20
  %0 = call ptr @memcpy(ptr %args, ptr @__const.btrfs_ioctl_dev_info.args, i32 24)
  %call = tail call ptr @memdup_user(ptr noundef %arg, i32 noundef 4096) #20
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %1 = ptrtoint ptr %call to i32
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %call to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %call, align 8
  %4 = ptrtoint ptr %args to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 %3, ptr %args, align 8
  %uuid = getelementptr inbounds %struct.btrfs_ioctl_dev_info_args, ptr %call, i32 0, i32 1
  %5 = ptrtoint ptr %uuid to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %uuid, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not.i76 = icmp eq i8 %6, 0
  br i1 %tobool.not.i76, label %for.cond.i, label %if.end.if.then5_crit_edge

if.end.if.then5_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then5

for.cond.i:                                       ; preds = %if.end
  %arrayidx.1.i = getelementptr %struct.btrfs_ioctl_dev_info_args, ptr %call, i32 0, i32 1, i32 1
  %7 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %arrayidx.1.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %tobool.not.1.i = icmp eq i8 %8, 0
  br i1 %tobool.not.1.i, label %for.cond.1.i, label %for.cond.i.if.then5_crit_edge

for.cond.i.if.then5_crit_edge:                    ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then5

for.cond.1.i:                                     ; preds = %for.cond.i
  %arrayidx.2.i = getelementptr %struct.btrfs_ioctl_dev_info_args, ptr %call, i32 0, i32 1, i32 2
  %9 = ptrtoint ptr %arrayidx.2.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %arrayidx.2.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool.not.2.i = icmp eq i8 %10, 0
  br i1 %tobool.not.2.i, label %for.cond.2.i, label %for.cond.1.i.if.then5_crit_edge

for.cond.1.i.if.then5_crit_edge:                  ; preds = %for.cond.1.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then5

for.cond.2.i:                                     ; preds = %for.cond.1.i
  %arrayidx.3.i = getelementptr %struct.btrfs_ioctl_dev_info_args, ptr %call, i32 0, i32 1, i32 3
  %11 = ptrtoint ptr %arrayidx.3.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %arrayidx.3.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool.not.3.i = icmp eq i8 %12, 0
  br i1 %tobool.not.3.i, label %for.cond.3.i, label %for.cond.2.i.if.then5_crit_edge

for.cond.2.i.if.then5_crit_edge:                  ; preds = %for.cond.2.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then5

for.cond.3.i:                                     ; preds = %for.cond.2.i
  %arrayidx.4.i = getelementptr %struct.btrfs_ioctl_dev_info_args, ptr %call, i32 0, i32 1, i32 4
  %13 = ptrtoint ptr %arrayidx.4.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %arrayidx.4.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool.not.4.i = icmp eq i8 %14, 0
  br i1 %tobool.not.4.i, label %for.cond.4.i, label %for.cond.3.i.if.then5_crit_edge

for.cond.3.i.if.then5_crit_edge:                  ; preds = %for.cond.3.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then5

for.cond.4.i:                                     ; preds = %for.cond.3.i
  %arrayidx.5.i = getelementptr %struct.btrfs_ioctl_dev_info_args, ptr %call, i32 0, i32 1, i32 5
  %15 = ptrtoint ptr %arrayidx.5.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %arrayidx.5.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool.not.5.i = icmp eq i8 %16, 0
  br i1 %tobool.not.5.i, label %for.cond.5.i, label %for.cond.4.i.if.then5_crit_edge

for.cond.4.i.if.then5_crit_edge:                  ; preds = %for.cond.4.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then5

for.cond.5.i:                                     ; preds = %for.cond.4.i
  %arrayidx.6.i = getelementptr %struct.btrfs_ioctl_dev_info_args, ptr %call, i32 0, i32 1, i32 6
  %17 = ptrtoint ptr %arrayidx.6.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %arrayidx.6.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool.not.6.i = icmp eq i8 %18, 0
  br i1 %tobool.not.6.i, label %for.cond.6.i, label %for.cond.5.i.if.then5_crit_edge

for.cond.5.i.if.then5_crit_edge:                  ; preds = %for.cond.5.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then5

for.cond.6.i:                                     ; preds = %for.cond.5.i
  %arrayidx.7.i = getelementptr %struct.btrfs_ioctl_dev_info_args, ptr %call, i32 0, i32 1, i32 7
  %19 = ptrtoint ptr %arrayidx.7.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %arrayidx.7.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool.not.7.i = icmp eq i8 %20, 0
  br i1 %tobool.not.7.i, label %for.cond.7.i, label %for.cond.6.i.if.then5_crit_edge

for.cond.6.i.if.then5_crit_edge:                  ; preds = %for.cond.6.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then5

for.cond.7.i:                                     ; preds = %for.cond.6.i
  %arrayidx.8.i = getelementptr %struct.btrfs_ioctl_dev_info_args, ptr %call, i32 0, i32 1, i32 8
  %21 = ptrtoint ptr %arrayidx.8.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %arrayidx.8.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool.not.8.i = icmp eq i8 %22, 0
  br i1 %tobool.not.8.i, label %for.cond.8.i, label %for.cond.7.i.if.then5_crit_edge

for.cond.7.i.if.then5_crit_edge:                  ; preds = %for.cond.7.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then5

for.cond.8.i:                                     ; preds = %for.cond.7.i
  %arrayidx.9.i = getelementptr %struct.btrfs_ioctl_dev_info_args, ptr %call, i32 0, i32 1, i32 9
  %23 = ptrtoint ptr %arrayidx.9.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %arrayidx.9.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %24)
  %tobool.not.9.i = icmp eq i8 %24, 0
  br i1 %tobool.not.9.i, label %for.cond.9.i, label %for.cond.8.i.if.then5_crit_edge

for.cond.8.i.if.then5_crit_edge:                  ; preds = %for.cond.8.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then5

for.cond.9.i:                                     ; preds = %for.cond.8.i
  %arrayidx.10.i = getelementptr %struct.btrfs_ioctl_dev_info_args, ptr %call, i32 0, i32 1, i32 10
  %25 = ptrtoint ptr %arrayidx.10.i to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %arrayidx.10.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool.not.10.i = icmp eq i8 %26, 0
  br i1 %tobool.not.10.i, label %for.cond.10.i, label %for.cond.9.i.if.then5_crit_edge

for.cond.9.i.if.then5_crit_edge:                  ; preds = %for.cond.9.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then5

for.cond.10.i:                                    ; preds = %for.cond.9.i
  %arrayidx.11.i = getelementptr %struct.btrfs_ioctl_dev_info_args, ptr %call, i32 0, i32 1, i32 11
  %27 = ptrtoint ptr %arrayidx.11.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %arrayidx.11.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %28)
  %tobool.not.11.i = icmp eq i8 %28, 0
  br i1 %tobool.not.11.i, label %for.cond.11.i, label %for.cond.10.i.if.then5_crit_edge

for.cond.10.i.if.then5_crit_edge:                 ; preds = %for.cond.10.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then5

for.cond.11.i:                                    ; preds = %for.cond.10.i
  %arrayidx.12.i = getelementptr %struct.btrfs_ioctl_dev_info_args, ptr %call, i32 0, i32 1, i32 12
  %29 = ptrtoint ptr %arrayidx.12.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %arrayidx.12.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %30)
  %tobool.not.12.i = icmp eq i8 %30, 0
  br i1 %tobool.not.12.i, label %for.cond.12.i, label %for.cond.11.i.if.then5_crit_edge

for.cond.11.i.if.then5_crit_edge:                 ; preds = %for.cond.11.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then5

for.cond.12.i:                                    ; preds = %for.cond.11.i
  %arrayidx.13.i = getelementptr %struct.btrfs_ioctl_dev_info_args, ptr %call, i32 0, i32 1, i32 13
  %31 = ptrtoint ptr %arrayidx.13.i to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %arrayidx.13.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %32)
  %tobool.not.13.i = icmp eq i8 %32, 0
  br i1 %tobool.not.13.i, label %for.cond.13.i, label %for.cond.12.i.if.then5_crit_edge

for.cond.12.i.if.then5_crit_edge:                 ; preds = %for.cond.12.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then5

for.cond.13.i:                                    ; preds = %for.cond.12.i
  %arrayidx.14.i = getelementptr %struct.btrfs_ioctl_dev_info_args, ptr %call, i32 0, i32 1, i32 14
  %33 = ptrtoint ptr %arrayidx.14.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %arrayidx.14.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool.not.14.i = icmp eq i8 %34, 0
  br i1 %tobool.not.14.i, label %btrfs_is_empty_uuid.exit, label %for.cond.13.i.if.then5_crit_edge

for.cond.13.i.if.then5_crit_edge:                 ; preds = %for.cond.13.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then5

btrfs_is_empty_uuid.exit:                         ; preds = %for.cond.13.i
  %arrayidx.15.i = getelementptr %struct.btrfs_ioctl_dev_info_args, ptr %call, i32 0, i32 1, i32 15
  %35 = ptrtoint ptr %arrayidx.15.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %arrayidx.15.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %tobool.not.15.i.not = icmp eq i8 %36, 0
  br i1 %tobool.not.15.i.not, label %btrfs_is_empty_uuid.exit.if.end9_crit_edge, label %btrfs_is_empty_uuid.exit.if.then5_crit_edge

btrfs_is_empty_uuid.exit.if.then5_crit_edge:      ; preds = %btrfs_is_empty_uuid.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then5

btrfs_is_empty_uuid.exit.if.end9_crit_edge:       ; preds = %btrfs_is_empty_uuid.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end9

if.then5:                                         ; preds = %btrfs_is_empty_uuid.exit.if.then5_crit_edge, %for.cond.13.i.if.then5_crit_edge, %for.cond.12.i.if.then5_crit_edge, %for.cond.11.i.if.then5_crit_edge, %for.cond.10.i.if.then5_crit_edge, %for.cond.9.i.if.then5_crit_edge, %for.cond.8.i.if.then5_crit_edge, %for.cond.7.i.if.then5_crit_edge, %for.cond.6.i.if.then5_crit_edge, %for.cond.5.i.if.then5_crit_edge, %for.cond.4.i.if.then5_crit_edge, %for.cond.3.i.if.then5_crit_edge, %for.cond.2.i.if.then5_crit_edge, %for.cond.1.i.if.then5_crit_edge, %for.cond.i.if.then5_crit_edge, %if.end.if.then5_crit_edge
  %uuid8 = getelementptr inbounds %struct.btrfs_dev_lookup_args, ptr %args, i32 0, i32 1
  %37 = ptrtoint ptr %uuid8 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %uuid, ptr %uuid8, align 8
  br label %if.end9

if.end9:                                          ; preds = %if.then5, %btrfs_is_empty_uuid.exit.if.end9_crit_edge
  %38 = tail call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i.i.i = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %41, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !197
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #20
  %call.i = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i, label %if.end9.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end9.rcu_read_lock.exit_crit_edge:             ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end9
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.34, i32 noundef 696, ptr noundef nonnull @.str.35) #20
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end9.rcu_read_lock.exit_crit_edge
  %fs_devices = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 100
  %42 = ptrtoint ptr %fs_devices to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %fs_devices, align 8
  %call10 = call ptr @btrfs_find_device(ptr noundef %43, ptr noundef nonnull %args) #20
  %tobool11.not = icmp eq ptr %call10, null
  br i1 %tobool11.not, label %rcu_read_lock.exit.out_crit_edge, label %if.end13

rcu_read_lock.exit.out_crit_edge:                 ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end13:                                         ; preds = %rcu_read_lock.exit
  %devid14 = getelementptr inbounds %struct.btrfs_device, ptr %call10, i32 0, i32 13
  %44 = ptrtoint ptr %devid14 to i32
  call void @__asan_load8_noabort(i32 %44)
  %45 = load i64, ptr %devid14, align 8
  %46 = ptrtoint ptr %call to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 %45, ptr %call, align 8
  %data_seqcount.i = getelementptr inbounds %struct.btrfs_device, ptr %call10, i32 0, i32 12
  %bytes_used.i = getelementptr inbounds %struct.btrfs_device, ptr %call10, i32 0, i32 16
  br label %do.body.i

do.body.i:                                        ; preds = %while.end.i.do.body.i_crit_edge, %if.end13
  call fastcc void @seqcount_lockdep_reader_access(ptr noundef %data_seqcount.i) #20
  %47 = ptrtoint ptr %data_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %data_seqcount.i, align 4
  %and28.i = and i32 %48, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28.i)
  %tobool.not29.i = icmp eq i32 %and28.i, 0
  br i1 %tobool.not29.i, label %do.body.i.while.end.i_crit_edge, label %do.body.i.do.end.i_crit_edge

do.body.i.do.end.i_crit_edge:                     ; preds = %do.body.i
  br label %do.end.i

do.body.i.while.end.i_crit_edge:                  ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end.i

do.end.i:                                         ; preds = %do.end.i.do.end.i_crit_edge, %do.body.i.do.end.i_crit_edge
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !201
  call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #20, !srcloc !202
  %49 = ptrtoint ptr %data_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %data_seqcount.i, align 4
  %and.i = and i32 %50, 1
  %tobool.not.i77 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i77, label %do.end.i.while.end.i_crit_edge, label %do.end.i.do.end.i_crit_edge

do.end.i.do.end.i_crit_edge:                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end.i

do.end.i.while.end.i_crit_edge:                   ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end.i

while.end.i:                                      ; preds = %do.end.i.while.end.i_crit_edge, %do.body.i.while.end.i_crit_edge
  %.lcssa.i = phi i32 [ %48, %do.body.i.while.end.i_crit_edge ], [ %50, %do.end.i.while.end.i_crit_edge ]
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !203
  %51 = ptrtoint ptr %bytes_used.i to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %bytes_used.i, align 8
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !189
  %53 = ptrtoint ptr %data_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %data_seqcount.i, align 4
  %cmp.i.i.not.i = icmp eq i32 %54, %.lcssa.i
  br i1 %cmp.i.i.not.i, label %btrfs_device_get_bytes_used.exit, label %while.end.i.do.body.i_crit_edge

while.end.i.do.body.i_crit_edge:                  ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i

btrfs_device_get_bytes_used.exit:                 ; preds = %while.end.i
  %bytes_used = getelementptr inbounds %struct.btrfs_ioctl_dev_info_args, ptr %call, i32 0, i32 2
  %55 = ptrtoint ptr %bytes_used to i32
  call void @__asan_store8_noabort(i32 %55)
  store i64 %52, ptr %bytes_used, align 8
  %total_bytes.i = getelementptr inbounds %struct.btrfs_device, ptr %call10, i32 0, i32 14
  br label %do.body.i81

do.body.i81:                                      ; preds = %while.end.i87.do.body.i81_crit_edge, %btrfs_device_get_bytes_used.exit
  call fastcc void @seqcount_lockdep_reader_access(ptr noundef %data_seqcount.i) #20
  %56 = ptrtoint ptr %data_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %data_seqcount.i, align 4
  %and28.i79 = and i32 %57, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28.i79)
  %tobool.not29.i80 = icmp eq i32 %and28.i79, 0
  br i1 %tobool.not29.i80, label %do.body.i81.while.end.i87_crit_edge, label %do.body.i81.do.end.i84_crit_edge

do.body.i81.do.end.i84_crit_edge:                 ; preds = %do.body.i81
  br label %do.end.i84

do.body.i81.while.end.i87_crit_edge:              ; preds = %do.body.i81
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end.i87

do.end.i84:                                       ; preds = %do.end.i84.do.end.i84_crit_edge, %do.body.i81.do.end.i84_crit_edge
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !204
  call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #20, !srcloc !205
  %58 = ptrtoint ptr %data_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %data_seqcount.i, align 4
  %and.i82 = and i32 %59, 1
  %tobool.not.i83 = icmp eq i32 %and.i82, 0
  br i1 %tobool.not.i83, label %do.end.i84.while.end.i87_crit_edge, label %do.end.i84.do.end.i84_crit_edge

do.end.i84.do.end.i84_crit_edge:                  ; preds = %do.end.i84
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end.i84

do.end.i84.while.end.i87_crit_edge:               ; preds = %do.end.i84
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end.i87

while.end.i87:                                    ; preds = %do.end.i84.while.end.i87_crit_edge, %do.body.i81.while.end.i87_crit_edge
  %.lcssa.i85 = phi i32 [ %57, %do.body.i81.while.end.i87_crit_edge ], [ %59, %do.end.i84.while.end.i87_crit_edge ]
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !206
  %60 = ptrtoint ptr %total_bytes.i to i32
  call void @__asan_load8_noabort(i32 %60)
  %61 = load i64, ptr %total_bytes.i, align 8
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !189
  %62 = ptrtoint ptr %data_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %data_seqcount.i, align 4
  %cmp.i.i.not.i86 = icmp eq i32 %63, %.lcssa.i85
  br i1 %cmp.i.i.not.i86, label %btrfs_device_get_total_bytes.exit, label %while.end.i87.do.body.i81_crit_edge

while.end.i87.do.body.i81_crit_edge:              ; preds = %while.end.i87
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i81

btrfs_device_get_total_bytes.exit:                ; preds = %while.end.i87
  %total_bytes = getelementptr inbounds %struct.btrfs_ioctl_dev_info_args, ptr %call, i32 0, i32 3
  %64 = ptrtoint ptr %total_bytes to i32
  call void @__asan_store8_noabort(i32 %64)
  store i64 %61, ptr %total_bytes, align 8
  %uuid20 = getelementptr inbounds %struct.btrfs_device, ptr %call10, i32 0, i32 21
  %65 = call ptr @memcpy(ptr %uuid, ptr %uuid20, i32 16)
  %name = getelementptr inbounds %struct.btrfs_device, ptr %call10, i32 0, i32 5
  %66 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %name, align 8
  %tobool22.not = icmp eq ptr %67, null
  %path42 = getelementptr inbounds %struct.btrfs_ioctl_dev_info_args, ptr %call, i32 0, i32 5
  br i1 %tobool22.not, label %if.else, label %if.then23

if.then23:                                        ; preds = %btrfs_device_get_total_bytes.exit
  %68 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load volatile ptr, ptr %name, align 8
  %call27 = call i32 @rcu_read_lock_held() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %land.lhs.true, label %if.then23.do.end36_crit_edge

if.then23.do.end36_crit_edge:                     ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end36

land.lhs.true:                                    ; preds = %if.then23
  %call29 = call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29)
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %land.lhs.true.do.end36_crit_edge, label %land.lhs.true31

land.lhs.true.do.end36_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end36

land.lhs.true31:                                  ; preds = %land.lhs.true
  %.b74 = load i1, ptr @btrfs_ioctl_dev_info.__warned, align 1
  br i1 %.b74, label %land.lhs.true31.do.end36_crit_edge, label %if.then33

land.lhs.true31.do.end36_crit_edge:               ; preds = %land.lhs.true31
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end36

if.then33:                                        ; preds = %land.lhs.true31
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @btrfs_ioctl_dev_info.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.1, i32 noundef 3699, ptr noundef nonnull @.str.52) #20
  br label %do.end36

do.end36:                                         ; preds = %if.then33, %land.lhs.true31.do.end36_crit_edge, %land.lhs.true.do.end36_crit_edge, %if.then23.do.end36_crit_edge
  %str = getelementptr inbounds %struct.rcu_string, ptr %69, i32 0, i32 1
  %call40 = call ptr @strncpy(ptr noundef %path42, ptr noundef %str, i32 noundef 1023)
  %arrayidx = getelementptr %struct.btrfs_ioctl_dev_info_args, ptr %call, i32 0, i32 5, i32 1023
  %70 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %70)
  store i8 0, ptr %arrayidx, align 1
  br label %out

if.else:                                          ; preds = %btrfs_device_get_total_bytes.exit
  call void @__sanitizer_cov_trace_pc() #22
  %71 = ptrtoint ptr %path42 to i32
  call void @__asan_store1_noabort(i32 %71)
  store i8 0, ptr %path42, align 8
  br label %out

out:                                              ; preds = %if.else, %do.end36, %rcu_read_lock.exit.out_crit_edge
  %ret.0 = phi i32 [ 0, %do.end36 ], [ 0, %if.else ], [ -19, %rcu_read_lock.exit.out_crit_edge ]
  %call.i88 = call zeroext i1 @rcu_is_watching() #20
  br i1 %call.i88, label %out.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i91

out.rcu_read_unlock.exit_crit_edge:               ; preds = %out
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

land.lhs.true.i91:                                ; preds = %out
  %call1.i89 = call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i89)
  %tobool.not.i90 = icmp eq i32 %call1.i89, 0
  br i1 %tobool.not.i90, label %land.lhs.true.i91.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i93

land.lhs.true.i91.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i91
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

land.lhs.true2.i93:                               ; preds = %land.lhs.true.i91
  %.b4.i92 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i92, label %land.lhs.true2.i93.rcu_read_unlock.exit_crit_edge, label %if.then.i94

land.lhs.true2.i93.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i93
  call void @__sanitizer_cov_trace_pc() #22
  br label %rcu_read_unlock.exit

if.then.i94:                                      ; preds = %land.lhs.true2.i93
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.34, i32 noundef 724, ptr noundef nonnull @.str.36) #20
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i94, %land.lhs.true2.i93.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i91.rcu_read_unlock.exit_crit_edge, %out.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #20, !srcloc !198
  %72 = call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i.i.i95 = and i32 %72, -16384
  %73 = inttoptr i32 %and.i.i.i.i.i95 to ptr
  %preempt_count.i.i.i.i96 = getelementptr inbounds %struct.thread_info, ptr %73, i32 0, i32 1
  %74 = ptrtoint ptr %preempt_count.i.i.i.i96 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load volatile i32, ptr %preempt_count.i.i.i.i96, align 4
  %sub.i.i.i = add i32 %75, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i96, align 4
  call void @rcu_read_unlock_strict() #20
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #20
  br i1 %tobool11.not, label %rcu_read_unlock.exit.if.end49_crit_edge, label %if.end8.i.i

rcu_read_unlock.exit.if.end49_crit_edge:          ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end49

if.end8.i.i:                                      ; preds = %rcu_read_unlock.exit
  call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i = call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end8.i.i.if.end49_crit_edge, label %if.end.i.i

if.end8.i.i.if.end49_crit_edge:                   ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end49

if.end.i.i:                                       ; preds = %if.end8.i.i
  %76 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %arg, i32 4096, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i = extractvalue { i32, i32 } %76, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.if.end49_crit_edge

if.end.i.i.if.end49_crit_edge:                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end49

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %call, i32 noundef 4096) #20
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef %arg, ptr noundef %call, i32 noundef 4096) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool47.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool47.not, i32 0, i32 -14
  br label %if.end49

if.end49:                                         ; preds = %copy_to_user.exit, %if.end.i.i.if.end49_crit_edge, %if.end8.i.i.if.end49_crit_edge, %rcu_read_unlock.exit.if.end49_crit_edge
  %ret.1 = phi i32 [ %ret.0, %rcu_read_unlock.exit.if.end49_crit_edge ], [ -14, %if.end8.i.i.if.end49_crit_edge ], [ -14, %if.end.i.i.if.end49_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  call void @kfree(ptr noundef %call) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end49, %if.then
  %retval.0 = phi i32 [ %1, %if.then ], [ %ret.1, %if.end49 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args) #20
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_balance(ptr noundef %file, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %0 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_inode.i, align 8
  %add.ptr.i = getelementptr i8, ptr %1, i32 -864
  %2 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %add.ptr.i, align 8
  %fs_info3 = getelementptr inbounds %struct.btrfs_root, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %fs_info3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %fs_info3, align 8
  %tobool.not = icmp eq ptr %arg, null
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %5, ptr noundef nonnull @.str.58) #24
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %call4 = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call4, label %if.end6, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %call7 = tail call i32 @mnt_want_write_file(ptr noundef %file) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %again.preheader, label %if.end6.cleanup_crit_edge

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

again.preheader:                                  ; preds = %if.end6
  %super_lock.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 42
  tail call void @_raw_spin_lock(ptr noundef %super_lock.i) #20
  %exclusive_operation.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 175
  %6 = ptrtoint ptr %exclusive_operation.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %exclusive_operation.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp.i177 = icmp eq i32 %7, 0
  br i1 %cmp.i177, label %again.preheader.if.then12_crit_edge, label %if.end13.lr.ph

again.preheader.if.then12_crit_edge:              ; preds = %again.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then12

if.end13.lr.ph:                                   ; preds = %again.preheader
  %balance_mutex14 = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 114
  %balance_ctl = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 117
  %flags = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 1
  br label %if.end13

if.then12:                                        ; preds = %if.end28.if.then12_crit_edge, %again.preheader.if.then12_crit_edge
  %8 = ptrtoint ptr %exclusive_operation.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 2, ptr %exclusive_operation.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %super_lock.i) #20
  %balance_mutex = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 114
  tail call void @mutex_lock_nested(ptr noundef %balance_mutex, i32 noundef 0) #20
  br label %locked

if.end13:                                         ; preds = %if.end28.if.end13_crit_edge, %if.end13.lr.ph
  tail call void @_raw_spin_unlock(ptr noundef %super_lock.i) #20
  tail call void @mutex_lock_nested(ptr noundef %balance_mutex14, i32 noundef 0) #20
  %9 = ptrtoint ptr %balance_ctl to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %balance_ctl, align 8
  %tobool15.not = icmp eq ptr %10, null
  br i1 %tobool15.not, label %if.else31, label %if.then16

if.then16:                                        ; preds = %if.end13
  %11 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %flags, align 4
  %13 = and i32 %12, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool18.not = icmp eq i32 %13, 0
  tail call void @mutex_unlock(ptr noundef %balance_mutex14) #20
  br i1 %tobool18.not, label %if.then19, label %if.then16.out_crit_edge

if.then16.out_crit_edge:                          ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.then19:                                        ; preds = %if.then16
  tail call void @mutex_lock_nested(ptr noundef %balance_mutex14, i32 noundef 0) #20
  %14 = ptrtoint ptr %balance_ctl to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %balance_ctl, align 8
  %tobool23.not = icmp eq ptr %15, null
  br i1 %tobool23.not, label %if.then19.if.end28_crit_edge, label %land.lhs.true

if.then19.if.end28_crit_edge:                     ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end28

land.lhs.true:                                    ; preds = %if.then19
  %16 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %flags, align 4
  %18 = and i32 %17, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool26.not = icmp eq i32 %18, 0
  br i1 %tobool26.not, label %land.lhs.true.locked_crit_edge, label %land.lhs.true.if.end28_crit_edge

land.lhs.true.if.end28_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end28

land.lhs.true.locked_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %locked

if.end28:                                         ; preds = %land.lhs.true.if.end28_crit_edge, %if.then19.if.end28_crit_edge
  tail call void @mutex_unlock(ptr noundef %balance_mutex14) #20
  tail call void @_raw_spin_lock(ptr noundef %super_lock.i) #20
  %19 = ptrtoint ptr %exclusive_operation.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %exclusive_operation.i, align 4
  %cmp.i = icmp eq i32 %20, 0
  br i1 %cmp.i, label %if.end28.if.then12_crit_edge, label %if.end28.if.end13_crit_edge

if.end28.if.end13_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end13

if.end28.if.then12_crit_edge:                     ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then12

if.else31:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @mutex_unlock(ptr noundef %balance_mutex14) #20
  br label %out

locked:                                           ; preds = %land.lhs.true.locked_crit_edge, %if.then12
  %cmp.i166 = phi i1 [ true, %if.then12 ], [ false, %land.lhs.true.locked_crit_edge ]
  br i1 %tobool.not, label %locked.if.end52_crit_edge, label %if.then34

locked.if.end52_crit_edge:                        ; preds = %locked
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end52

if.then34:                                        ; preds = %locked
  %call35 = tail call ptr @memdup_user(ptr noundef nonnull %arg, i32 noundef 1024) #20
  %cmp.i154 = icmp ugt ptr %call35, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i154, label %if.then37, label %if.end39

if.then37:                                        ; preds = %if.then34
  %21 = ptrtoint ptr %call35 to i32
  %balance_mutex87161 = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 114
  tail call void @mutex_unlock(ptr noundef %balance_mutex87161) #20
  br i1 %cmp.i166, label %if.then37.if.then89_crit_edge, label %if.then37.out_crit_edge

if.then37.out_crit_edge:                          ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.then37.if.then89_crit_edge:                    ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then89

if.end39:                                         ; preds = %if.then34
  %22 = ptrtoint ptr %call35 to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %call35, align 8
  %and = and i64 %23, 16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool41.not = icmp eq i64 %and, 0
  br i1 %tobool41.not, label %if.end39.if.end52_crit_edge, label %if.then42

if.end39.if.end52_crit_edge:                      ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end52

if.then42:                                        ; preds = %if.end39
  %balance_ctl43 = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 117
  %24 = ptrtoint ptr %balance_ctl43 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %balance_ctl43, align 8
  %tobool44.not = icmp eq ptr %25, null
  br i1 %tobool44.not, label %if.then42.out_unlock_crit_edge, label %if.end46

if.then42.out_unlock_crit_edge:                   ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_unlock

if.end46:                                         ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #22
  %balance_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 113
  tail call void @_raw_spin_lock(ptr noundef %balance_lock) #20
  %flags48 = getelementptr inbounds %struct.btrfs_balance_control, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %flags48 to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %flags48, align 8
  %or = or i64 %27, 16
  store i64 %or, ptr %flags48, align 8
  tail call void @_raw_spin_unlock(ptr noundef %balance_lock) #20
  tail call void @btrfs_exclop_balance(ptr noundef %5, i32 noundef 2)
  br label %do_balance

if.end52:                                         ; preds = %if.end39.if.end52_crit_edge, %locked.if.end52_crit_edge
  %bargs.0 = phi ptr [ %call35, %if.end39.if.end52_crit_edge ], [ null, %locked.if.end52_crit_edge ]
  %balance_ctl53 = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 117
  %28 = ptrtoint ptr %balance_ctl53 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %balance_ctl53, align 8
  %tobool54.not = icmp eq ptr %29, null
  br i1 %tobool54.not, label %if.end56, label %if.end52.out_unlock_crit_edge

if.end52.out_unlock_crit_edge:                    ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_unlock

if.end56:                                         ; preds = %if.end52
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %30 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %30, i32 noundef 3520, i32 noundef 440) #26
  %tobool58.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool58.not, label %if.end56.out_unlock_crit_edge, label %if.end60

if.end56.out_unlock_crit_edge:                    ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_unlock

if.end60:                                         ; preds = %if.end56
  br i1 %tobool.not, label %if.else68, label %if.then62

if.then62:                                        ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #22
  %data63 = getelementptr inbounds %struct.btrfs_ioctl_balance_args, ptr %bargs.0, i32 0, i32 2
  %31 = call ptr @memcpy(ptr %call7.i.i, ptr %data63, i32 136)
  %meta = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 1
  %meta64 = getelementptr inbounds %struct.btrfs_ioctl_balance_args, ptr %bargs.0, i32 0, i32 3
  %32 = call ptr @memcpy(ptr %meta, ptr %meta64, i32 136)
  %sys = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 2
  %sys65 = getelementptr inbounds %struct.btrfs_ioctl_balance_args, ptr %bargs.0, i32 0, i32 4
  %33 = call ptr @memcpy(ptr %sys, ptr %sys65, i32 136)
  %34 = ptrtoint ptr %bargs.0 to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %bargs.0, align 8
  %flags67 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 3
  %36 = ptrtoint ptr %flags67 to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %35, ptr %flags67, align 8
  br label %if.end71

if.else68:                                        ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #22
  %flags69 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 3
  %37 = ptrtoint ptr %flags69 to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %flags69, align 8
  %or70 = or i64 %38, 7
  store i64 %or70, ptr %flags69, align 8
  br label %if.end71

if.end71:                                         ; preds = %if.else68, %if.then62
  %flags72 = getelementptr inbounds %struct.btrfs_balance_control, ptr %call7.i.i, i32 0, i32 3
  %39 = ptrtoint ptr %flags72 to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %flags72, align 8
  %and73 = and i64 %40, -1280
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and73)
  %tobool74.not = icmp eq i64 %and73, 0
  br i1 %tobool74.not, label %if.end71.do_balance_crit_edge, label %if.end71.out_bctl_crit_edge

if.end71.out_bctl_crit_edge:                      ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_bctl

if.end71.do_balance_crit_edge:                    ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #22
  br label %do_balance

do_balance:                                       ; preds = %if.end71.do_balance_crit_edge, %if.end46
  %bargs.1 = phi ptr [ %call35, %if.end46 ], [ %bargs.0, %if.end71.do_balance_crit_edge ]
  %bctl.0 = phi ptr [ %25, %if.end46 ], [ %call7.i.i, %if.end71.do_balance_crit_edge ]
  %call77 = tail call i32 @btrfs_balance(ptr noundef %5, ptr noundef nonnull %bctl.0, ptr noundef %bargs.1) #20
  %41 = zext i32 %call77 to i64
  call void @__sanitizer_cov_trace_switch(i64 %41, ptr @__sancov_gen_cov_switch_values.78)
  switch i32 %call77, label %do_balance.out_bctl_crit_edge [
    i32 0, label %do_balance.land.lhs.true79_crit_edge
    i32 -125, label %do_balance.land.lhs.true79_crit_edge185
  ]

do_balance.land.lhs.true79_crit_edge185:          ; preds = %do_balance
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true79

do_balance.land.lhs.true79_crit_edge:             ; preds = %do_balance
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true79

do_balance.out_bctl_crit_edge:                    ; preds = %do_balance
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_bctl

land.lhs.true79:                                  ; preds = %do_balance.land.lhs.true79_crit_edge, %do_balance.land.lhs.true79_crit_edge185
  br i1 %tobool.not, label %land.lhs.true79.out_bctl_crit_edge, label %if.end8.i.i

land.lhs.true79.out_bctl_crit_edge:               ; preds = %land.lhs.true79
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_bctl

if.end8.i.i:                                      ; preds = %land.lhs.true79
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end8.i.i.out_bctl_crit_edge, label %if.end.i.i

if.end8.i.i.out_bctl_crit_edge:                   ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_bctl

if.end.i.i:                                       ; preds = %if.end8.i.i
  %42 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr nonnull %arg, i32 1024, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i = extractvalue { i32, i32 } %42, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.out_bctl_crit_edge

if.end.i.i.out_bctl_crit_edge:                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_bctl

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %bargs.1, i32 noundef 1024) #20
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef nonnull %arg, ptr noundef %bargs.1, i32 noundef 1024) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool83.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool83.not, i32 %call77, i32 -14
  br label %out_bctl

out_bctl:                                         ; preds = %copy_to_user.exit, %if.end.i.i.out_bctl_crit_edge, %if.end8.i.i.out_bctl_crit_edge, %land.lhs.true79.out_bctl_crit_edge, %do_balance.out_bctl_crit_edge, %if.end71.out_bctl_crit_edge
  %bargs.2 = phi ptr [ %bargs.1, %land.lhs.true79.out_bctl_crit_edge ], [ %bargs.0, %if.end71.out_bctl_crit_edge ], [ %bargs.1, %do_balance.out_bctl_crit_edge ], [ %bargs.1, %if.end8.i.i.out_bctl_crit_edge ], [ %bargs.1, %if.end.i.i.out_bctl_crit_edge ], [ %bargs.1, %copy_to_user.exit ]
  %bctl.1 = phi ptr [ null, %land.lhs.true79.out_bctl_crit_edge ], [ %call7.i.i, %if.end71.out_bctl_crit_edge ], [ null, %do_balance.out_bctl_crit_edge ], [ null, %if.end8.i.i.out_bctl_crit_edge ], [ null, %if.end.i.i.out_bctl_crit_edge ], [ null, %copy_to_user.exit ]
  %need_unlock.1.off0 = phi i1 [ false, %land.lhs.true79.out_bctl_crit_edge ], [ %cmp.i166, %if.end71.out_bctl_crit_edge ], [ false, %do_balance.out_bctl_crit_edge ], [ false, %if.end8.i.i.out_bctl_crit_edge ], [ false, %if.end.i.i.out_bctl_crit_edge ], [ false, %copy_to_user.exit ]
  %ret.0 = phi i32 [ %call77, %land.lhs.true79.out_bctl_crit_edge ], [ -22, %if.end71.out_bctl_crit_edge ], [ %call77, %do_balance.out_bctl_crit_edge ], [ -14, %if.end8.i.i.out_bctl_crit_edge ], [ -14, %if.end.i.i.out_bctl_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  tail call void @kfree(ptr noundef %bctl.1) #20
  br label %out_unlock

out_unlock:                                       ; preds = %out_bctl, %if.end56.out_unlock_crit_edge, %if.end52.out_unlock_crit_edge, %if.then42.out_unlock_crit_edge
  %bargs.3 = phi ptr [ %bargs.2, %out_bctl ], [ %call35, %if.then42.out_unlock_crit_edge ], [ %bargs.0, %if.end52.out_unlock_crit_edge ], [ %bargs.0, %if.end56.out_unlock_crit_edge ]
  %need_unlock.2.off0 = phi i1 [ %need_unlock.1.off0, %out_bctl ], [ %cmp.i166, %if.then42.out_unlock_crit_edge ], [ %cmp.i166, %if.end52.out_unlock_crit_edge ], [ %cmp.i166, %if.end56.out_unlock_crit_edge ]
  %ret.1 = phi i32 [ %ret.0, %out_bctl ], [ -107, %if.then42.out_unlock_crit_edge ], [ -115, %if.end52.out_unlock_crit_edge ], [ -12, %if.end56.out_unlock_crit_edge ]
  tail call void @kfree(ptr noundef %bargs.3) #20
  %balance_mutex87 = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 114
  tail call void @mutex_unlock(ptr noundef %balance_mutex87) #20
  br i1 %need_unlock.2.off0, label %out_unlock.if.then89_crit_edge, label %out_unlock.out_crit_edge

out_unlock.out_crit_edge:                         ; preds = %out_unlock
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

out_unlock.if.then89_crit_edge:                   ; preds = %out_unlock
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then89

if.then89:                                        ; preds = %out_unlock.if.then89_crit_edge, %if.then37.if.then89_crit_edge
  %ret.2162 = phi i32 [ %21, %if.then37.if.then89_crit_edge ], [ %ret.1, %out_unlock.if.then89_crit_edge ]
  tail call void @_raw_spin_lock(ptr noundef %super_lock.i) #20
  %43 = ptrtoint ptr %exclusive_operation.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store volatile i32 0, ptr %exclusive_operation.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %super_lock.i) #20
  %fs_devices.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 100
  %44 = ptrtoint ptr %fs_devices.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %fs_devices.i, align 8
  %fsid_kobj.i = getelementptr inbounds %struct.btrfs_fs_devices, ptr %45, i32 0, i32 20
  tail call void @sysfs_notify(ptr noundef %fsid_kobj.i, ptr noundef null, ptr noundef nonnull @.str.7) #20
  br label %out

out:                                              ; preds = %if.then89, %out_unlock.out_crit_edge, %if.then37.out_crit_edge, %if.else31, %if.then16.out_crit_edge
  %ret.3 = phi i32 [ %ret.2162, %if.then89 ], [ %ret.1, %out_unlock.out_crit_edge ], [ 8, %if.else31 ], [ %21, %if.then37.out_crit_edge ], [ -115, %if.then16.out_crit_edge ]
  tail call void @mnt_drop_write_file(ptr noundef %file) #20
  br label %cleanup

cleanup:                                          ; preds = %out, %if.end6.cleanup_crit_edge, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.3, %out ], [ -1, %if.end.cleanup_crit_edge ], [ %call7, %if.end6.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_tree_search(ptr nocapture noundef readonly %file, ptr noundef %argp) unnamed_addr #8 align 64 {
entry:
  %sk = alloca %struct.btrfs_ioctl_search_key, align 8
  %buf_size = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %sk) #20
  %0 = call ptr @memset(ptr %sk, i32 255, i32 104)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %buf_size) #20
  %call = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call, label %if.end8.i.i, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end8.i.i:                                      ; preds = %entry
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 156) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end8.i.i.if.then11.i.i_crit_edge, label %land.lhs.true.i.i

if.end8.i.i.if.then11.i.i_crit_edge:              ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

land.lhs.true.i.i:                                ; preds = %if.end8.i.i
  %1 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %argp, i32 104, i32 -1226833920) #27
  %asmresult.i.i = extractvalue { i32, i32 } %1, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.end.i.i, label %land.lhs.true.i.i.if.then11.i.i_crit_edge, !prof !184

land.lhs.true.i.i.if.then11.i.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %sk, i32 noundef 104) #20
  %2 = call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 4
  %4 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #13, !srcloc !191
  %and.i.i.i.i = and i32 %4, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #20, !srcloc !192
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #20, !srcloc !193
  %call1.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %sk, ptr noundef %argp, i32 noundef 104) #20
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %4) #20, !srcloc !192
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #20, !srcloc !193
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool4.not.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end3, label %if.end.i.i.if.then11.i.i_crit_edge, !prof !184

if.end.i.i.if.then11.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

if.then11.i.i:                                    ; preds = %if.end.i.i.if.then11.i.i_crit_edge, %land.lhs.true.i.i.if.then11.i.i_crit_edge, %if.end8.i.i.if.then11.i.i_crit_edge
  %res.0.i.i34 = phi i32 [ %call1.i.i.i, %if.end.i.i.if.then11.i.i_crit_edge ], [ 104, %if.end8.i.i.if.then11.i.i_crit_edge ], [ 104, %land.lhs.true.i.i.if.then11.i.i_crit_edge ]
  %sub.i.i = sub i32 104, %res.0.i.i34
  %add.ptr.i.i = getelementptr i8, ptr %sk, i32 %sub.i.i
  %5 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i34)
  br label %cleanup

if.end3:                                          ; preds = %if.end.i.i
  %6 = ptrtoint ptr %buf_size to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 3992, ptr %buf_size, align 4
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %7 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %f_inode.i, align 8
  %buf = getelementptr inbounds %struct.btrfs_ioctl_search_args, ptr %argp, i32 0, i32 1
  %call5 = call fastcc i32 @search_ioctl(ptr noundef %8, ptr noundef nonnull %sk, ptr noundef nonnull %buf_size, ptr noundef %buf)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -75, i32 %call5)
  %cmp = icmp eq i32 %call5, -75
  %spec.store.select = select i1 %cmp, i32 0, i32 %call5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.store.select)
  %cmp8 = icmp eq i32 %spec.store.select, 0
  br i1 %cmp8, label %if.end8.i.i25, label %if.end3.cleanup_crit_edge

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end8.i.i25:                                    ; preds = %if.end3
  call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i26 = call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i26, label %if.end8.i.i25.cleanup_crit_edge, label %copy_to_user.exit

if.end8.i.i25.cleanup_crit_edge:                  ; preds = %if.end8.i.i25
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

copy_to_user.exit:                                ; preds = %if.end8.i.i25
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i30 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %sk, i32 noundef 104) #20
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef %argp, ptr noundef nonnull %sk, i32 noundef 104) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool11.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool11.not, i32 0, i32 -14
  br label %cleanup

cleanup:                                          ; preds = %copy_to_user.exit, %if.end8.i.i25.cleanup_crit_edge, %if.end3.cleanup_crit_edge, %if.then11.i.i, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -1, %entry.cleanup_crit_edge ], [ %spec.store.select, %if.end3.cleanup_crit_edge ], [ -14, %if.then11.i.i ], [ -14, %if.end8.i.i25.cleanup_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %buf_size) #20
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %sk) #20
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_tree_search_v2(ptr nocapture noundef readonly %file, ptr noundef %argp) unnamed_addr #8 align 64 {
entry:
  %args = alloca %struct.btrfs_ioctl_search_args_v2, align 8
  %buf_size = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 112, ptr nonnull %args) #20
  %0 = call ptr @memset(ptr %args, i32 255, i32 112)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %buf_size) #20
  %call = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call, label %if.end8.i.i, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end8.i.i:                                      ; preds = %entry
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 156) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end8.i.i.if.then11.i.i_crit_edge, label %land.lhs.true.i.i

if.end8.i.i.if.then11.i.i_crit_edge:              ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

land.lhs.true.i.i:                                ; preds = %if.end8.i.i
  %1 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %argp, i32 112, i32 -1226833920) #27, !srcloc !196
  %asmresult.i.i = extractvalue { i32, i32 } %1, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.end.i.i, label %land.lhs.true.i.i.if.then11.i.i_crit_edge, !prof !184

land.lhs.true.i.i.if.then11.i.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %args, i32 noundef 112) #20
  %2 = call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 4
  %4 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #13, !srcloc !191
  %and.i.i.i.i = and i32 %4, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #20, !srcloc !192
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #20, !srcloc !193
  %call1.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %args, ptr noundef %argp, i32 noundef 112) #20
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %4) #20, !srcloc !192
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #20, !srcloc !193
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool4.not.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end3, label %if.end.i.i.if.then11.i.i_crit_edge, !prof !184

if.end.i.i.if.then11.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

if.then11.i.i:                                    ; preds = %if.end.i.i.if.then11.i.i_crit_edge, %land.lhs.true.i.i.if.then11.i.i_crit_edge, %if.end8.i.i.if.then11.i.i_crit_edge
  %res.0.i.i61 = phi i32 [ %call1.i.i.i, %if.end.i.i.if.then11.i.i_crit_edge ], [ 112, %if.end8.i.i.if.then11.i.i_crit_edge ], [ 112, %land.lhs.true.i.i.if.then11.i.i_crit_edge ]
  %sub.i.i = sub i32 112, %res.0.i.i61
  %add.ptr.i.i = getelementptr i8, ptr %args, i32 %sub.i.i
  %5 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i61)
  br label %cleanup

if.end3:                                          ; preds = %if.end.i.i
  %buf_size4 = getelementptr inbounds %struct.btrfs_ioctl_search_args_v2, ptr %args, i32 0, i32 1
  %6 = ptrtoint ptr %buf_size4 to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %buf_size4, align 8
  %conv = trunc i64 %7 to i32
  %8 = call i32 @llvm.umin.i32(i32 %conv, i32 16777216)
  %9 = ptrtoint ptr %buf_size to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %buf_size, align 4
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %10 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %f_inode.i, align 8
  %buf = getelementptr inbounds %struct.btrfs_ioctl_search_args_v2, ptr %argp, i32 0, i32 2
  %call9 = call fastcc i32 @search_ioctl(ptr noundef %11, ptr noundef nonnull %args, ptr noundef nonnull %buf_size, ptr noundef %buf)
  %12 = zext i32 %call9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.79)
  switch i32 %call9, label %if.end3.cleanup_crit_edge [
    i32 0, label %if.end8.i.i39
    i32 -75, label %land.lhs.true19
  ]

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end8.i.i39:                                    ; preds = %if.end3
  call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i40 = call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i40, label %if.end8.i.i39.cleanup_crit_edge, label %if.end.i.i43

if.end8.i.i39.cleanup_crit_edge:                  ; preds = %if.end8.i.i39
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end.i.i43:                                     ; preds = %if.end8.i.i39
  %13 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %argp, i32 104, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i41 = extractvalue { i32, i32 } %13, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i41)
  %cmp.i6.i42 = icmp eq i32 %asmresult.i.i41, 0
  br i1 %cmp.i6.i42, label %copy_to_user.exit, label %if.end.i.i43.cleanup_crit_edge

if.end.i.i43.cleanup_crit_edge:                   ; preds = %if.end.i.i43
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

copy_to_user.exit:                                ; preds = %if.end.i.i43
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i44 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %args, i32 noundef 104) #20
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef %argp, ptr noundef nonnull %args, i32 noundef 104) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool15.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool15.not, i32 0, i32 -14
  br label %cleanup

land.lhs.true19:                                  ; preds = %if.end3
  %buf_size20 = getelementptr inbounds %struct.btrfs_ioctl_search_args_v2, ptr %argp, i32 0, i32 1
  call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i50 = call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i50, label %land.lhs.true19.cleanup_crit_edge, label %if.end.i.i53

land.lhs.true19.cleanup_crit_edge:                ; preds = %land.lhs.true19
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end.i.i53:                                     ; preds = %land.lhs.true19
  %14 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %buf_size20, i32 4, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i51 = extractvalue { i32, i32 } %14, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i51)
  %cmp.i6.i52 = icmp eq i32 %asmresult.i.i51, 0
  br i1 %cmp.i6.i52, label %copy_to_user.exit58, label %if.end.i.i53.cleanup_crit_edge

if.end.i.i53.cleanup_crit_edge:                   ; preds = %if.end.i.i53
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

copy_to_user.exit58:                              ; preds = %if.end.i.i53
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i54 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %buf_size, i32 noundef 4) #20
  %call.i12.i.i55 = call i32 @arm_copy_to_user(ptr noundef %buf_size20, ptr noundef nonnull %buf_size, i32 noundef 4) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i55)
  %tobool22.not = icmp eq i32 %call.i12.i.i55, 0
  %spec.select68 = select i1 %tobool22.not, i32 -75, i32 -14
  br label %cleanup

cleanup:                                          ; preds = %copy_to_user.exit58, %if.end.i.i53.cleanup_crit_edge, %land.lhs.true19.cleanup_crit_edge, %copy_to_user.exit, %if.end.i.i43.cleanup_crit_edge, %if.end8.i.i39.cleanup_crit_edge, %if.end3.cleanup_crit_edge, %if.then11.i.i, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -1, %entry.cleanup_crit_edge ], [ %call9, %if.end3.cleanup_crit_edge ], [ -14, %if.then11.i.i ], [ -14, %if.end8.i.i39.cleanup_crit_edge ], [ -14, %if.end.i.i43.cleanup_crit_edge ], [ -14, %land.lhs.true19.cleanup_crit_edge ], [ -14, %if.end.i.i53.cleanup_crit_edge ], [ %spec.select, %copy_to_user.exit ], [ %spec.select68, %copy_to_user.exit58 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %buf_size) #20
  call void @llvm.lifetime.end.p0(i64 112, ptr nonnull %args) #20
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_ino_lookup(ptr nocapture noundef readonly %file, ptr noundef %argp) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @memdup_user(ptr noundef %argp, i32 noundef 4096) #20
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %0 = ptrtoint ptr %call to i32
  br label %cleanup

if.end:                                           ; preds = %entry
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %1 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %f_inode.i, align 8
  %3 = ptrtoint ptr %call to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %call, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %4)
  %cmp = icmp eq i64 %4, 0
  br i1 %cmp, label %if.then4, label %if.end.if.end7_crit_edge

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end7

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr.i = getelementptr i8, ptr %2, i32 -864
  %5 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %add.ptr.i, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %6, i32 0, i32 7
  %7 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %7, i32 8)
  %8 = load i64, ptr %root_key, align 1
  %9 = ptrtoint ptr %call to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %8, ptr %call, align 8
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %if.end.if.end7_crit_edge
  %objectid8 = getelementptr inbounds %struct.btrfs_ioctl_ino_lookup_args, ptr %call, i32 0, i32 1
  %10 = ptrtoint ptr %objectid8 to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %objectid8, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 256, i64 %11)
  %cmp9 = icmp eq i64 %11, 256
  br i1 %cmp9, label %out.thread, label %if.end11

out.thread:                                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #22
  %name = getelementptr inbounds %struct.btrfs_ioctl_ino_lookup_args, ptr %call, i32 0, i32 2
  %12 = ptrtoint ptr %name to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 0, ptr %name, align 8
  br label %if.end8.i.i

if.end11:                                         ; preds = %if.end7
  %call12 = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call12, label %out, label %if.end11.if.end24_crit_edge

if.end11.if.end24_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end24

out:                                              ; preds = %if.end11
  %add.ptr.i40 = getelementptr i8, ptr %2, i32 -864
  %13 = ptrtoint ptr %add.ptr.i40 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %add.ptr.i40, align 8
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %14, i32 0, i32 8
  %15 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %fs_info, align 8
  %17 = ptrtoint ptr %call to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %call, align 8
  %19 = ptrtoint ptr %objectid8 to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %objectid8, align 8
  %name19 = getelementptr inbounds %struct.btrfs_ioctl_ino_lookup_args, ptr %call, i32 0, i32 2
  %call20 = tail call fastcc i32 @btrfs_search_path_in_tree(ptr noundef %16, i64 noundef %18, i64 noundef %20, ptr noundef %name19)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20)
  %cmp21 = icmp eq i32 %call20, 0
  br i1 %cmp21, label %out.if.end8.i.i_crit_edge, label %out.if.end24_crit_edge

out.if.end24_crit_edge:                           ; preds = %out
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end24

out.if.end8.i.i_crit_edge:                        ; preds = %out
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %out.if.end8.i.i_crit_edge, %out.thread
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end8.i.i.if.end24_crit_edge, label %if.end.i.i

if.end8.i.i.if.end24_crit_edge:                   ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end24

if.end.i.i:                                       ; preds = %if.end8.i.i
  %21 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %argp, i32 4096, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i = extractvalue { i32, i32 } %21, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.if.end24_crit_edge

if.end.i.i.if.end24_crit_edge:                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end24

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %call, i32 noundef 4096) #20
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %argp, ptr noundef %call, i32 noundef 4096) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -14
  br label %if.end24

if.end24:                                         ; preds = %copy_to_user.exit, %if.end.i.i.if.end24_crit_edge, %if.end8.i.i.if.end24_crit_edge, %out.if.end24_crit_edge, %if.end11.if.end24_crit_edge
  %ret.1 = phi i32 [ %call20, %out.if.end24_crit_edge ], [ -1, %if.end11.if.end24_crit_edge ], [ -14, %if.end8.i.i.if.end24_crit_edge ], [ -14, %if.end.i.i.if.end24_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  tail call void @kfree(ptr noundef %call) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.then
  %retval.0 = phi i32 [ %0, %if.then ], [ %ret.1, %if.end24 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_ino_to_path(ptr noundef %root, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @capable(i32 noundef 2) #20
  br i1 %call, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call ptr @btrfs_alloc_path() #20
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %if.end.out_crit_edge, label %if.end3

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end3:                                          ; preds = %if.end
  %call4 = tail call ptr @memdup_user(ptr noundef %arg, i32 noundef 56) #20
  %cmp.i = icmp ugt ptr %call4, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then6, label %if.end8

if.then6:                                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #22
  %0 = ptrtoint ptr %call4 to i32
  br label %out

if.end8:                                          ; preds = %if.end3
  %size9 = getelementptr inbounds %struct.btrfs_ioctl_ino_path_args, ptr %call4, i32 0, i32 1
  %1 = ptrtoint ptr %size9 to i32
  call void @__asan_load8_noabort(i32 %1)
  %2 = load i64, ptr %size9, align 8
  %conv = trunc i64 %2 to i32
  %3 = tail call i32 @llvm.umin.i32(i32 %conv, i32 4096)
  %call11 = tail call ptr @init_ipath(i32 noundef %3, ptr noundef %root, ptr noundef nonnull %call1) #20
  %cmp.i66 = icmp ugt ptr %call11, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i66, label %if.then13, label %if.end15

if.then13:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #22
  %4 = ptrtoint ptr %call11 to i32
  br label %out

if.end15:                                         ; preds = %if.end8
  %5 = ptrtoint ptr %call4 to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %call4, align 8
  %call16 = tail call i32 @paths_from_inode(i64 noundef %6, ptr noundef %call11) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %cmp17 = icmp slt i32 %call16, 0
  br i1 %cmp17, label %if.end15.out_crit_edge, label %for.cond.preheader

if.end15.out_crit_edge:                           ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

for.cond.preheader:                               ; preds = %if.end15
  %fspath = getelementptr inbounds %struct.inode_fs_paths, ptr %call11, i32 0, i32 2
  %7 = ptrtoint ptr %fspath to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %fspath, align 4
  %elem_cnt67 = getelementptr inbounds %struct.btrfs_data_container, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %elem_cnt67 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %elem_cnt67, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp2168.not = icmp eq i32 %10, 0
  br i1 %cmp2168.not, label %for.cond.preheader.for.end_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %11 = phi ptr [ %16, %for.body.for.body_crit_edge ], [ %8, %for.cond.preheader.for.body_crit_edge ]
  %i.069 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %val = getelementptr inbounds %struct.btrfs_data_container, ptr %11, i32 0, i32 4
  %arrayidx = getelementptr %struct.btrfs_data_container, ptr %11, i32 0, i32 4, i32 %i.069
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %arrayidx, align 8
  %14 = ptrtoint ptr %val to i32
  %conv26 = zext i32 %14 to i64
  %sub = sub i64 %13, %conv26
  store i64 %sub, ptr %arrayidx, align 8
  %inc = add nuw i32 %i.069, 1
  %15 = ptrtoint ptr %fspath to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %fspath, align 4
  %elem_cnt = getelementptr inbounds %struct.btrfs_data_container, ptr %16, i32 0, i32 2
  %17 = ptrtoint ptr %elem_cnt to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %elem_cnt, align 8
  %cmp21 = icmp ult i32 %inc, %18
  br i1 %cmp21, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %.lcssa = phi ptr [ %8, %for.cond.preheader.for.end_crit_edge ], [ %16, %for.body.for.end_crit_edge ]
  %fspath30 = getelementptr inbounds %struct.btrfs_ioctl_ino_path_args, ptr %call4, i32 0, i32 3
  %19 = ptrtoint ptr %fspath30 to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %fspath30, align 8
  %conv31 = trunc i64 %20 to i32
  %21 = inttoptr i32 %conv31 to ptr
  tail call void @__check_object_size(ptr noundef %.lcssa, i32 noundef %3, i1 noundef zeroext true) #20
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %for.end.copy_to_user.exit_crit_edge, label %if.end.i.i

for.end.copy_to_user.exit_crit_edge:              ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %copy_to_user.exit

if.end.i.i:                                       ; preds = %for.end
  %22 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %21, i32 %3, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i = extractvalue { i32, i32 } %22, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.then2.i.i, label %if.end.i.i.copy_to_user.exit_crit_edge

if.end.i.i.copy_to_user.exit_crit_edge:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %copy_to_user.exit

if.then2.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %.lcssa, i32 noundef %3) #20
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %21, ptr noundef %.lcssa, i32 noundef %3) #20
  br label %copy_to_user.exit

copy_to_user.exit:                                ; preds = %if.then2.i.i, %if.end.i.i.copy_to_user.exit_crit_edge, %for.end.copy_to_user.exit_crit_edge
  %n.addr.0.i = phi i32 [ %3, %for.end.copy_to_user.exit_crit_edge ], [ %call.i12.i.i, %if.then2.i.i ], [ %3, %if.end.i.i.copy_to_user.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i)
  %tobool34.not = icmp eq i32 %n.addr.0.i, 0
  %spec.select = select i1 %tobool34.not, i32 0, i32 -14
  br label %out

out:                                              ; preds = %copy_to_user.exit, %if.end15.out_crit_edge, %if.then13, %if.then6, %if.end.out_crit_edge
  %ret.0 = phi i32 [ %0, %if.then6 ], [ %4, %if.then13 ], [ %call16, %if.end15.out_crit_edge ], [ -12, %if.end.out_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  %ipa.0 = phi ptr [ null, %if.then6 ], [ %call4, %if.then13 ], [ %call4, %if.end15.out_crit_edge ], [ null, %if.end.out_crit_edge ], [ %call4, %copy_to_user.exit ]
  %ipath.0 = phi ptr [ null, %if.then6 ], [ null, %if.then13 ], [ %call11, %if.end15.out_crit_edge ], [ null, %if.end.out_crit_edge ], [ %call11, %copy_to_user.exit ]
  tail call void @btrfs_free_path(ptr noundef %call1) #20
  tail call void @free_ipath(ptr noundef %ipath.0) #20
  tail call void @kfree(ptr noundef %ipa.0) #20
  br label %cleanup

cleanup:                                          ; preds = %out, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %out ], [ -1, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_logical_to_ino(ptr noundef %fs_info, ptr noundef %arg, i32 noundef %version) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call ptr @memdup_user(ptr noundef %arg, i32 noundef 56) #20
  %cmp.i = icmp ugt ptr %call1, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %0 = ptrtoint ptr %call1 to i32
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %version)
  %cmp = icmp eq i32 %version, 1
  br i1 %cmp, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #22
  %size7 = getelementptr inbounds %struct.btrfs_ioctl_logical_ino_args, ptr %call1, i32 0, i32 1
  %1 = ptrtoint ptr %size7 to i32
  call void @__asan_load8_noabort(i32 %1)
  %2 = load i64, ptr %size7, align 8
  %conv = trunc i64 %2 to i32
  %3 = tail call i32 @llvm.umin.i32(i32 %conv, i32 65536)
  br label %if.end28

if.else:                                          ; preds = %if.end5
  %reserved = getelementptr inbounds %struct.btrfs_ioctl_logical_ino_args, ptr %call1, i32 0, i32 2
  %call10 = tail call ptr @memchr_inv(ptr noundef %reserved, i32 noundef 0, i32 noundef 24) #20
  %tobool.not = icmp eq ptr %call10, null
  br i1 %tobool.not, label %if.end12, label %if.else.out_loi_crit_edge

if.else.out_loi_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_loi

if.end12:                                         ; preds = %if.else
  %flags = getelementptr inbounds %struct.btrfs_ioctl_logical_ino_args, ptr %call1, i32 0, i32 3
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %flags, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 2, i64 %5)
  %tobool13.not = icmp ult i64 %5, 2
  br i1 %tobool13.not, label %if.end15, label %if.end12.out_loi_crit_edge

if.end12.out_loi_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_loi

if.end15:                                         ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #22
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %5)
  %6 = icmp ne i64 %5, 0
  %size19 = getelementptr inbounds %struct.btrfs_ioctl_logical_ino_args, ptr %call1, i32 0, i32 1
  %7 = ptrtoint ptr %size19 to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %size19, align 8
  %conv20 = trunc i64 %8 to i32
  %9 = tail call i32 @llvm.umin.i32(i32 %conv20, i32 16777216)
  br label %if.end28

if.end28:                                         ; preds = %if.end15, %if.then6
  %size.0 = phi i32 [ %3, %if.then6 ], [ %9, %if.end15 ]
  %ignore_offset.0.off0 = phi i1 [ false, %if.then6 ], [ %6, %if.end15 ]
  %call29 = tail call ptr @btrfs_alloc_path() #20
  %tobool30.not = icmp eq ptr %call29, null
  br i1 %tobool30.not, label %if.end28.out_crit_edge, label %if.end32

if.end28.out_crit_edge:                           ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end32:                                         ; preds = %if.end28
  %call33 = tail call ptr @init_data_container(i32 noundef %size.0) #20
  %cmp.i83 = icmp ugt ptr %call33, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i83, label %if.then35, label %if.end37

if.then35:                                        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #22
  %10 = ptrtoint ptr %call33 to i32
  br label %out

if.end37:                                         ; preds = %if.end32
  %11 = ptrtoint ptr %call1 to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %call1, align 8
  %call39 = tail call i32 @iterate_inodes_from_logical(i64 noundef %12, ptr noundef %fs_info, ptr noundef nonnull %call29, ptr noundef nonnull @build_ino_list, ptr noundef %call33, i1 noundef zeroext %ignore_offset.0.off0) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 -22, i32 %call39)
  %cmp40 = icmp eq i32 %call39, -22
  %spec.store.select = select i1 %cmp40, i32 -2, i32 %call39
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.store.select)
  %cmp44 = icmp slt i32 %spec.store.select, 0
  br i1 %cmp44, label %if.end37.out_crit_edge, label %if.end47

if.end37.out_crit_edge:                           ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end47:                                         ; preds = %if.end37
  %inodes48 = getelementptr inbounds %struct.btrfs_ioctl_logical_ino_args, ptr %call1, i32 0, i32 4
  %13 = ptrtoint ptr %inodes48 to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %inodes48, align 8
  %conv49 = trunc i64 %14 to i32
  %15 = inttoptr i32 %conv49 to ptr
  tail call void @__check_object_size(ptr noundef %call33, i32 noundef %size.0, i1 noundef zeroext true) #20
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end47.copy_to_user.exit_crit_edge, label %if.end.i.i

if.end47.copy_to_user.exit_crit_edge:             ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #22
  br label %copy_to_user.exit

if.end.i.i:                                       ; preds = %if.end47
  %16 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %15, i32 %size.0, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i = extractvalue { i32, i32 } %16, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.then2.i.i, label %if.end.i.i.copy_to_user.exit_crit_edge

if.end.i.i.copy_to_user.exit_crit_edge:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %copy_to_user.exit

if.then2.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %call33, i32 noundef %size.0) #20
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %15, ptr noundef %call33, i32 noundef %size.0) #20
  br label %copy_to_user.exit

copy_to_user.exit:                                ; preds = %if.then2.i.i, %if.end.i.i.copy_to_user.exit_crit_edge, %if.end47.copy_to_user.exit_crit_edge
  %n.addr.0.i = phi i32 [ %size.0, %if.end47.copy_to_user.exit_crit_edge ], [ %call.i12.i.i, %if.then2.i.i ], [ %size.0, %if.end.i.i.copy_to_user.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i)
  %tobool51.not = icmp eq i32 %n.addr.0.i, 0
  %spec.select = select i1 %tobool51.not, i32 0, i32 -14
  br label %out

out:                                              ; preds = %copy_to_user.exit, %if.end37.out_crit_edge, %if.then35, %if.end28.out_crit_edge
  %inodes.0 = phi ptr [ null, %if.then35 ], [ %call33, %if.end37.out_crit_edge ], [ null, %if.end28.out_crit_edge ], [ %call33, %copy_to_user.exit ]
  %ret.0 = phi i32 [ %10, %if.then35 ], [ %spec.store.select, %if.end37.out_crit_edge ], [ -12, %if.end28.out_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  tail call void @btrfs_free_path(ptr noundef %call29) #20
  tail call void @kvfree(ptr noundef %inodes.0) #20
  br label %out_loi

out_loi:                                          ; preds = %out, %if.end12.out_loi_crit_edge, %if.else.out_loi_crit_edge
  %ret.1 = phi i32 [ %ret.0, %out ], [ -22, %if.else.out_loi_crit_edge ], [ -22, %if.end12.out_loi_crit_edge ]
  tail call void @kfree(ptr noundef %call1) #20
  br label %cleanup

cleanup:                                          ; preds = %out_loi, %if.then3, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %0, %if.then3 ], [ %ret.1, %out_loi ], [ -1, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_space_info(ptr noundef %fs_info, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  %space_args = alloca %struct.btrfs_ioctl_space_args, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %space_args) #20
  %0 = getelementptr inbounds %struct.btrfs_ioctl_space_args, ptr %space_args, i32 0, i32 1
  %1 = call ptr @memset(ptr %space_args, i32 255, i32 16)
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 156) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %entry.if.then11.i.i_crit_edge, label %land.lhs.true.i.i

entry.if.then11.i.i_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

land.lhs.true.i.i:                                ; preds = %entry
  %2 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %arg, i32 16, i32 -1226833920) #27
  %asmresult.i.i = extractvalue { i32, i32 } %2, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.end.i.i, label %land.lhs.true.i.i.if.then11.i.i_crit_edge, !prof !184

land.lhs.true.i.i.if.then11.i.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %space_args, i32 noundef 16) #20
  %3 = call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i.i.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 4
  %5 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #13, !srcloc !191
  %and.i.i.i.i = and i32 %5, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #20, !srcloc !192
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #20, !srcloc !193
  %call1.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %space_args, ptr noundef %arg, i32 noundef 16) #20
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %5) #20, !srcloc !192
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #20, !srcloc !193
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool4.not.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool4.not.i.i, label %for.cond.preheader, label %if.end.i.i.if.then11.i.i_crit_edge, !prof !184

if.end.i.i.if.then11.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

for.cond.preheader:                               ; preds = %if.end.i.i
  %space_info = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 101
  br label %for.body

if.then11.i.i:                                    ; preds = %if.end.i.i.if.then11.i.i_crit_edge, %land.lhs.true.i.i.if.then11.i.i_crit_edge, %entry.if.then11.i.i_crit_edge
  %res.0.i.i243 = phi i32 [ %call1.i.i.i, %if.end.i.i.if.then11.i.i_crit_edge ], [ 16, %entry.if.then11.i.i_crit_edge ], [ 16, %land.lhs.true.i.i.if.then11.i.i_crit_edge ]
  %sub.i.i = sub i32 16, %res.0.i.i243
  %add.ptr.i.i = getelementptr i8, ptr %space_args, i32 %sub.i.i
  %6 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i243)
  br label %cleanup131

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %for.cond.preheader
  %slot_count.0283 = phi i64 [ 0, %for.cond.preheader ], [ %slot_count.3, %cleanup.for.body_crit_edge ]
  %i.0282 = phi i32 [ 0, %for.cond.preheader ], [ %inc30, %cleanup.for.body_crit_edge ]
  %arrayidx = getelementptr [4 x i64], ptr @btrfs_ioctl_space_info.types, i32 0, i32 %i.0282
  br label %for.cond2

for.cond2:                                        ; preds = %for.body5.for.cond2_crit_edge, %for.body
  %.pn197.in = phi ptr [ %space_info, %for.body ], [ %.pn197, %for.body5.for.cond2_crit_edge ]
  %7 = ptrtoint ptr %.pn197.in to i32
  call void @__asan_load4_noabort(i32 %7)
  %.pn197 = load ptr, ptr %.pn197.in, align 4
  %cmp4.not = icmp eq ptr %.pn197, %space_info
  br i1 %cmp4.not, label %for.cond2.cleanup_crit_edge, label %for.body5

for.cond2.cleanup_crit_edge:                      ; preds = %for.cond2
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.body5:                                        ; preds = %for.cond2
  %flags = getelementptr i8, ptr %.pn197, i32 -8
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %flags, align 8
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %arrayidx, align 8
  %cmp6 = icmp eq i64 %9, %11
  br i1 %cmp6, label %for.end, label %for.body5.for.cond2_crit_edge

for.body5.for.cond2_crit_edge:                    ; preds = %for.body5
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond2

for.end:                                          ; preds = %for.body5
  %tmp.0.le = getelementptr i8, ptr %.pn197, i32 -152
  %tobool14.not = icmp eq ptr %tmp.0.le, null
  br i1 %tobool14.not, label %for.end.cleanup_crit_edge, label %if.end16

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end16:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #22
  %groups_sem = getelementptr i8, ptr %.pn197, i32 48
  call void @down_read(ptr noundef %groups_sem) #20
  %arrayidx20 = getelementptr i8, ptr %.pn197, i32 144
  %12 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %arrayidx20, align 4
  %cmp.i232.not = icmp ne ptr %13, %arrayidx20
  %inc = zext i1 %cmp.i232.not to i64
  %spec.select = add i64 %slot_count.0283, %inc
  %arrayidx20.1 = getelementptr i8, ptr %.pn197, i32 152
  %14 = ptrtoint ptr %arrayidx20.1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %arrayidx20.1, align 4
  %cmp.i232.not.1 = icmp ne ptr %15, %arrayidx20.1
  %inc.1 = zext i1 %cmp.i232.not.1 to i64
  %spec.select.1 = add i64 %spec.select, %inc.1
  %arrayidx20.2 = getelementptr i8, ptr %.pn197, i32 160
  %16 = ptrtoint ptr %arrayidx20.2 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %arrayidx20.2, align 4
  %cmp.i232.not.2 = icmp ne ptr %17, %arrayidx20.2
  %inc.2 = zext i1 %cmp.i232.not.2 to i64
  %spec.select.2 = add i64 %spec.select.1, %inc.2
  %arrayidx20.3 = getelementptr i8, ptr %.pn197, i32 168
  %18 = ptrtoint ptr %arrayidx20.3 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %arrayidx20.3, align 4
  %cmp.i232.not.3 = icmp ne ptr %19, %arrayidx20.3
  %inc.3 = zext i1 %cmp.i232.not.3 to i64
  %spec.select.3 = add i64 %spec.select.2, %inc.3
  %arrayidx20.4 = getelementptr i8, ptr %.pn197, i32 176
  %20 = ptrtoint ptr %arrayidx20.4 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile ptr, ptr %arrayidx20.4, align 4
  %cmp.i232.not.4 = icmp ne ptr %21, %arrayidx20.4
  %inc.4 = zext i1 %cmp.i232.not.4 to i64
  %spec.select.4 = add i64 %spec.select.3, %inc.4
  %arrayidx20.5 = getelementptr i8, ptr %.pn197, i32 184
  %22 = ptrtoint ptr %arrayidx20.5 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile ptr, ptr %arrayidx20.5, align 4
  %cmp.i232.not.5 = icmp ne ptr %23, %arrayidx20.5
  %inc.5 = zext i1 %cmp.i232.not.5 to i64
  %spec.select.5 = add i64 %spec.select.4, %inc.5
  %arrayidx20.6 = getelementptr i8, ptr %.pn197, i32 192
  %24 = ptrtoint ptr %arrayidx20.6 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile ptr, ptr %arrayidx20.6, align 4
  %cmp.i232.not.6 = icmp ne ptr %25, %arrayidx20.6
  %inc.6 = zext i1 %cmp.i232.not.6 to i64
  %spec.select.6 = add i64 %spec.select.5, %inc.6
  %arrayidx20.7 = getelementptr i8, ptr %.pn197, i32 200
  %26 = ptrtoint ptr %arrayidx20.7 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile ptr, ptr %arrayidx20.7, align 4
  %cmp.i232.not.7 = icmp ne ptr %27, %arrayidx20.7
  %inc.7 = zext i1 %cmp.i232.not.7 to i64
  %spec.select.7 = add i64 %spec.select.6, %inc.7
  %arrayidx20.8 = getelementptr i8, ptr %.pn197, i32 208
  %28 = ptrtoint ptr %arrayidx20.8 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile ptr, ptr %arrayidx20.8, align 4
  %cmp.i232.not.8 = icmp ne ptr %29, %arrayidx20.8
  %inc.8 = zext i1 %cmp.i232.not.8 to i64
  %spec.select.8 = add i64 %spec.select.7, %inc.8
  call void @up_read(ptr noundef %groups_sem) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %for.end.cleanup_crit_edge, %for.cond2.cleanup_crit_edge
  %slot_count.3 = phi i64 [ %spec.select.8, %if.end16 ], [ %slot_count.0283, %for.end.cleanup_crit_edge ], [ %slot_count.0283, %for.cond2.cleanup_crit_edge ]
  %inc30 = add nuw nsw i32 %i.0282, 1
  %exitcond.not = icmp eq i32 %inc30, 4
  br i1 %exitcond.not, label %for.end31, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.end31:                                        ; preds = %cleanup
  %inc32 = add i64 %slot_count.3, 1
  %30 = ptrtoint ptr %space_args to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %space_args, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %31)
  %cmp33 = icmp eq i64 %31, 0
  br i1 %cmp33, label %if.then34, label %if.end35

if.then34:                                        ; preds = %for.end31
  call void @__sanitizer_cov_trace_pc() #22
  %32 = ptrtoint ptr %0 to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %inc32, ptr %0, align 8
  br label %if.end8.i.i219

if.end35:                                         ; preds = %for.end31
  %33 = call i64 @llvm.umin.i64(i64 %31, i64 %inc32)
  %34 = trunc i64 %33 to i32
  %conv = mul i32 %34, 24
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %conv)
  %cmp39 = icmp ugt i32 %conv, 4096
  br i1 %cmp39, label %if.end35.cleanup131_crit_edge, label %if.end42

if.end35.cleanup131_crit_edge:                    ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup131

if.end42:                                         ; preds = %if.end35
  %35 = ptrtoint ptr %0 to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 0, ptr %0, align 8
  %call9.i = call noalias align 128 ptr @__kmalloc(i32 noundef %conv, i32 noundef 3264) #29
  %tobool45.not = icmp eq ptr %call9.i, null
  br i1 %tobool45.not, label %if.end42.cleanup131_crit_edge, label %if.end42.for.body51_crit_edge

if.end42.for.body51_crit_edge:                    ; preds = %if.end42
  br label %for.body51

if.end42.cleanup131_crit_edge:                    ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup131

for.body51:                                       ; preds = %for.inc109.for.body51_crit_edge, %if.end42.for.body51_crit_edge
  %dest.0289 = phi ptr [ %dest.4.ph, %for.inc109.for.body51_crit_edge ], [ %call9.i, %if.end42.for.body51_crit_edge ]
  %slot_count.4288 = phi i64 [ %slot_count.8.ph, %for.inc109.for.body51_crit_edge ], [ %33, %if.end42.for.body51_crit_edge ]
  %i.1287 = phi i32 [ %inc110, %for.inc109.for.body51_crit_edge ], [ 0, %if.end42.for.body51_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %slot_count.4288)
  %tobool53.not = icmp eq i64 %slot_count.4288, 0
  br i1 %tobool53.not, label %for.body51.if.end119_crit_edge, label %if.end55

for.body51.if.end119_crit_edge:                   ; preds = %for.body51
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end119

if.end55:                                         ; preds = %for.body51
  %arrayidx69 = getelementptr [4 x i64], ptr @btrfs_ioctl_space_info.types, i32 0, i32 %i.1287
  br label %for.cond61

for.cond61:                                       ; preds = %for.body67.for.cond61_crit_edge, %if.end55
  %.pn.in = phi ptr [ %space_info, %if.end55 ], [ %.pn, %for.body67.for.cond61_crit_edge ]
  %36 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %36)
  %.pn = load ptr, ptr %.pn.in, align 4
  %cmp64.not = icmp eq ptr %.pn, %space_info
  br i1 %cmp64.not, label %for.cond61.for.inc109_crit_edge, label %for.body67

for.cond61.for.inc109_crit_edge:                  ; preds = %for.cond61
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc109

for.body67:                                       ; preds = %for.cond61
  %flags68 = getelementptr i8, ptr %.pn, i32 -8
  %37 = ptrtoint ptr %flags68 to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %flags68, align 8
  %39 = ptrtoint ptr %arrayidx69 to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %arrayidx69, align 8
  %cmp70 = icmp eq i64 %38, %40
  br i1 %cmp70, label %for.end80, label %for.body67.for.cond61_crit_edge

for.body67.for.cond61_crit_edge:                  ; preds = %for.body67
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond61

for.end80:                                        ; preds = %for.body67
  %tmp52.0.le = getelementptr i8, ptr %.pn, i32 -152
  %tobool81.not = icmp eq ptr %tmp52.0.le, null
  br i1 %tobool81.not, label %for.end80.for.inc109_crit_edge, label %if.end83

for.end80.for.inc109_crit_edge:                   ; preds = %for.end80
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc109

if.end83:                                         ; preds = %for.end80
  %groups_sem84 = getelementptr i8, ptr %.pn, i32 48
  call void @down_read(ptr noundef %groups_sem84) #20
  br label %for.body88

for.body88:                                       ; preds = %if.end98.for.body88_crit_edge, %if.end83
  %dest.1286 = phi ptr [ %dest.0289, %if.end83 ], [ %dest.2, %if.end98.for.body88_crit_edge ]
  %slot_count.5285 = phi i64 [ %slot_count.4288, %if.end83 ], [ %slot_count.6, %if.end98.for.body88_crit_edge ]
  %c.1284 = phi i32 [ 0, %if.end83 ], [ %inc103, %if.end98.for.body88_crit_edge ]
  %arrayidx90 = getelementptr %struct.btrfs_space_info, ptr %tmp52.0.le, i32 0, i32 22, i32 %c.1284
  %41 = ptrtoint ptr %arrayidx90 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile ptr, ptr %arrayidx90, align 4
  %cmp.i233 = icmp eq ptr %42, %arrayidx90
  br i1 %cmp.i233, label %for.body88.if.end98_crit_edge, label %for.body88.for.body.i_crit_edge

for.body88.for.body.i_crit_edge:                  ; preds = %for.body88
  br label %for.body.i

for.body88.if.end98_crit_edge:                    ; preds = %for.body88
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end98

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body88.for.body.i_crit_edge
  %space.sroa.8.2 = phi i64 [ %add.i, %for.body.i.for.body.i_crit_edge ], [ 0, %for.body88.for.body.i_crit_edge ]
  %space.sroa.12.2 = phi i64 [ %add5.i, %for.body.i.for.body.i_crit_edge ], [ 0, %for.body88.for.body.i_crit_edge ]
  %.pn23.i = phi ptr [ %.pn.i, %for.body.i.for.body.i_crit_edge ], [ %42, %for.body88.for.body.i_crit_edge ]
  %length.i = getelementptr i8, ptr %.pn23.i, i32 -220
  %43 = ptrtoint ptr %length.i to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %length.i, align 8
  %add.i = add i64 %44, %space.sroa.8.2
  %used.i = getelementptr i8, ptr %.pn23.i, i32 -196
  %45 = ptrtoint ptr %used.i to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %used.i, align 8
  %add5.i = add i64 %46, %space.sroa.12.2
  %47 = ptrtoint ptr %.pn23.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %.pn.i = load ptr, ptr %.pn23.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %arrayidx90
  br i1 %cmp.not.i, label %get_block_group_info.exit, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

get_block_group_info.exit:                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  %flags1.i.le = getelementptr i8, ptr %.pn23.i, i32 -172
  %48 = ptrtoint ptr %flags1.i.le to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %flags1.i.le, align 8
  %50 = ptrtoint ptr %dest.1286 to i32
  call void @__asan_store8_noabort(i32 %50)
  store i64 %49, ptr %dest.1286, align 8
  %space.sroa.8.0.dest.1.sroa_idx = getelementptr inbounds i8, ptr %dest.1286, i32 8
  %51 = ptrtoint ptr %space.sroa.8.0.dest.1.sroa_idx to i32
  call void @__asan_store8_noabort(i32 %51)
  store i64 %add.i, ptr %space.sroa.8.0.dest.1.sroa_idx, align 8
  %space.sroa.12.0.dest.1.sroa_idx = getelementptr inbounds i8, ptr %dest.1286, i32 16
  %52 = ptrtoint ptr %space.sroa.12.0.dest.1.sroa_idx to i32
  call void @__asan_store8_noabort(i32 %52)
  store i64 %add5.i, ptr %space.sroa.12.0.dest.1.sroa_idx, align 8
  %incdec.ptr = getelementptr %struct.btrfs_ioctl_space_info, ptr %dest.1286, i32 1
  %53 = ptrtoint ptr %0 to i32
  call void @__asan_load8_noabort(i32 %53)
  %54 = load i64, ptr %0, align 8
  %inc97 = add i64 %54, 1
  store i64 %inc97, ptr %0, align 8
  %dec = add i64 %slot_count.5285, -1
  br label %if.end98

if.end98:                                         ; preds = %get_block_group_info.exit, %for.body88.if.end98_crit_edge
  %slot_count.6 = phi i64 [ %slot_count.5285, %for.body88.if.end98_crit_edge ], [ %dec, %get_block_group_info.exit ]
  %dest.2 = phi ptr [ %dest.1286, %for.body88.if.end98_crit_edge ], [ %incdec.ptr, %get_block_group_info.exit ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %slot_count.6)
  %tobool99.not = icmp eq i64 %slot_count.6, 0
  %inc103 = add nuw nsw i32 %c.1284, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %inc103)
  %exitcond292.not = icmp eq i32 %inc103, 9
  %or.cond = select i1 %tobool99.not, i1 true, i1 %exitcond292.not
  br i1 %or.cond, label %for.end104, label %if.end98.for.body88_crit_edge

if.end98.for.body88_crit_edge:                    ; preds = %if.end98
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body88

for.end104:                                       ; preds = %if.end98
  call void @__sanitizer_cov_trace_pc() #22
  call void @up_read(ptr noundef %groups_sem84) #20
  br label %for.inc109

for.inc109:                                       ; preds = %for.end104, %for.end80.for.inc109_crit_edge, %for.cond61.for.inc109_crit_edge
  %slot_count.8.ph = phi i64 [ %slot_count.4288, %for.end80.for.inc109_crit_edge ], [ %slot_count.6, %for.end104 ], [ %slot_count.4288, %for.cond61.for.inc109_crit_edge ]
  %dest.4.ph = phi ptr [ %dest.0289, %for.end80.for.inc109_crit_edge ], [ %dest.2, %for.end104 ], [ %dest.0289, %for.cond61.for.inc109_crit_edge ]
  %inc110 = add nuw nsw i32 %i.1287, 1
  %exitcond293.not = icmp eq i32 %inc110, 4
  br i1 %exitcond293.not, label %for.end111, label %for.inc109.for.body51_crit_edge

for.inc109.for.body51_crit_edge:                  ; preds = %for.inc109
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body51

for.end111:                                       ; preds = %for.inc109
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %slot_count.8.ph)
  %tobool112.not = icmp eq i64 %slot_count.8.ph, 0
  br i1 %tobool112.not, label %for.end111.if.end119_crit_edge, label %if.then113

for.end111.if.end119_crit_edge:                   ; preds = %for.end111
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end119

if.then113:                                       ; preds = %for.end111
  call void @__sanitizer_cov_trace_pc() #22
  %global_block_rsv = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 20
  %lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 20, i32 3
  call void @_raw_spin_lock(ptr noundef %lock) #20
  %55 = ptrtoint ptr %global_block_rsv to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %global_block_rsv, align 8
  %reserved = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 20, i32 1
  %57 = ptrtoint ptr %reserved to i32
  call void @__asan_load8_noabort(i32 %57)
  %58 = load i64, ptr %reserved, align 8
  %sub = sub i64 %56, %58
  call void @_raw_spin_unlock(ptr noundef %lock) #20
  %59 = ptrtoint ptr %dest.4.ph to i32
  call void @__asan_store8_noabort(i32 %59)
  store i64 562949953421312, ptr %dest.4.ph, align 8
  %space.sroa.8.0.dest.5.sroa_idx = getelementptr inbounds i8, ptr %dest.4.ph, i32 8
  %60 = ptrtoint ptr %space.sroa.8.0.dest.5.sroa_idx to i32
  call void @__asan_store8_noabort(i32 %60)
  store i64 %56, ptr %space.sroa.8.0.dest.5.sroa_idx, align 8
  %space.sroa.12.0.dest.5.sroa_idx = getelementptr inbounds i8, ptr %dest.4.ph, i32 16
  %61 = ptrtoint ptr %space.sroa.12.0.dest.5.sroa_idx to i32
  call void @__asan_store8_noabort(i32 %61)
  store i64 %sub, ptr %space.sroa.12.0.dest.5.sroa_idx, align 8
  %62 = ptrtoint ptr %0 to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %0, align 8
  %inc118 = add i64 %63, 1
  store i64 %inc118, ptr %0, align 8
  br label %if.end119

if.end119:                                        ; preds = %if.then113, %for.end111.if.end119_crit_edge, %for.body51.if.end119_crit_edge
  %add.ptr120 = getelementptr i8, ptr %arg, i32 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv)
  %cmp9.i.i = icmp slt i32 %conv, 0
  br i1 %cmp9.i.i, label %land.rhs16.i.i, label %if.then.i.i.i

land.rhs16.i.i:                                   ; preds = %if.end119
  %.b71.i.i = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i, label %land.rhs16.i.i.copy_to_user.exit.thread_crit_edge, label %if.then27.i.i, !prof !184

land.rhs16.i.i.copy_to_user.exit.thread_crit_edge: ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %copy_to_user.exit.thread

if.then27.i.i:                                    ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @check_copy_size.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.28, i32 noundef 230, i32 noundef 9, ptr noundef null) #20
  br label %copy_to_user.exit.thread

if.then.i.i.i:                                    ; preds = %if.end119
  call void @__check_object_size(ptr noundef nonnull %call9.i, i32 noundef %conv, i1 noundef zeroext true) #20
  call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i207 = call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i207, label %if.then.i.i.i.copy_to_user.exit_crit_edge, label %if.end.i.i211

if.then.i.i.i.copy_to_user.exit_crit_edge:        ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %copy_to_user.exit

if.end.i.i211:                                    ; preds = %if.then.i.i.i
  %64 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %add.ptr120, i32 %conv, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i209 = extractvalue { i32, i32 } %64, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i209)
  %cmp.i6.i210 = icmp eq i32 %asmresult.i.i209, 0
  br i1 %cmp.i6.i210, label %if.then2.i.i, label %if.end.i.i211.copy_to_user.exit_crit_edge

if.end.i.i211.copy_to_user.exit_crit_edge:        ; preds = %if.end.i.i211
  call void @__sanitizer_cov_trace_pc() #22
  br label %copy_to_user.exit

if.then2.i.i:                                     ; preds = %if.end.i.i211
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i212 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %call9.i, i32 noundef %conv) #20
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef %add.ptr120, ptr noundef nonnull %call9.i, i32 noundef %conv) #20
  br label %copy_to_user.exit

copy_to_user.exit.thread:                         ; preds = %if.then27.i.i, %land.rhs16.i.i.copy_to_user.exit.thread_crit_edge
  call void @kfree(ptr noundef nonnull %call9.i) #20
  br label %cleanup131

copy_to_user.exit:                                ; preds = %if.then2.i.i, %if.end.i.i211.copy_to_user.exit_crit_edge, %if.then.i.i.i.copy_to_user.exit_crit_edge
  %n.addr.0.i213 = phi i32 [ %conv, %if.then.i.i.i.copy_to_user.exit_crit_edge ], [ %call.i12.i.i, %if.then2.i.i ], [ %conv, %if.end.i.i211.copy_to_user.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i213)
  %tobool122.not = icmp eq i32 %n.addr.0.i213, 0
  call void @kfree(ptr noundef nonnull %call9.i) #20
  br i1 %tobool122.not, label %copy_to_user.exit.if.end8.i.i219_crit_edge, label %copy_to_user.exit.cleanup131_crit_edge

copy_to_user.exit.cleanup131_crit_edge:           ; preds = %copy_to_user.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup131

copy_to_user.exit.if.end8.i.i219_crit_edge:       ; preds = %copy_to_user.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8.i.i219

if.end8.i.i219:                                   ; preds = %copy_to_user.exit.if.end8.i.i219_crit_edge, %if.then34
  call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i221 = call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i221, label %if.end8.i.i219.cleanup131_crit_edge, label %copy_to_user.exit231

if.end8.i.i219.cleanup131_crit_edge:              ; preds = %if.end8.i.i219
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup131

copy_to_user.exit231:                             ; preds = %if.end8.i.i219
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i226 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %space_args, i32 noundef 16) #20
  %call.i12.i.i227 = call i32 @arm_copy_to_user(ptr noundef %arg, ptr noundef nonnull %space_args, i32 noundef 16) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i227)
  %tobool128.not = icmp eq i32 %call.i12.i.i227, 0
  %spec.select273 = select i1 %tobool128.not, i32 0, i32 -14
  br label %cleanup131

cleanup131:                                       ; preds = %copy_to_user.exit231, %if.end8.i.i219.cleanup131_crit_edge, %copy_to_user.exit.cleanup131_crit_edge, %copy_to_user.exit.thread, %if.end42.cleanup131_crit_edge, %if.end35.cleanup131_crit_edge, %if.then11.i.i
  %retval.0 = phi i32 [ -12, %if.end35.cleanup131_crit_edge ], [ -12, %if.end42.cleanup131_crit_edge ], [ -14, %copy_to_user.exit.cleanup131_crit_edge ], [ -14, %if.then11.i.i ], [ -14, %copy_to_user.exit.thread ], [ -14, %if.end8.i.i219.cleanup131_crit_edge ], [ %spec.select273, %copy_to_user.exit231 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %space_args) #20
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_start_delalloc_roots(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_sync_fs(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wake_up_process(ptr noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_start_sync(ptr noundef %root, ptr noundef %argp) unnamed_addr #8 align 64 {
entry:
  %transid = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %transid) #20
  %call = tail call ptr @btrfs_attach_transaction_barrier(ptr noundef %root) #20
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end5

if.then:                                          ; preds = %entry
  %0 = ptrtoint ptr %call to i32
  %cmp.not = icmp eq ptr %call, inttoptr (i32 -2 to ptr)
  br i1 %cmp.not, label %if.end, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 8
  %1 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %fs_info, align 8
  %last_trans_committed = getelementptr inbounds %struct.btrfs_fs_info, ptr %2, i32 0, i32 27
  %3 = ptrtoint ptr %last_trans_committed to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %last_trans_committed, align 8
  %5 = ptrtoint ptr %transid to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %4, ptr %transid, align 8
  br label %out

if.end5:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %6 = ptrtoint ptr %call to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %call, align 8
  %8 = ptrtoint ptr %transid to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %7, ptr %transid, align 8
  tail call void @btrfs_commit_transaction_async(ptr noundef %call) #20
  br label %out

out:                                              ; preds = %if.end5, %if.end
  %tobool.not = icmp eq ptr %argp, null
  br i1 %tobool.not, label %out.if.end12_crit_edge, label %if.end8.i.i

out.if.end12_crit_edge:                           ; preds = %out
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12

if.end8.i.i:                                      ; preds = %out
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end8.i.i.cleanup_crit_edge, label %if.end.i.i

if.end8.i.i.cleanup_crit_edge:                    ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end.i.i:                                       ; preds = %if.end8.i.i
  %9 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr nonnull %argp, i32 8, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i = extractvalue { i32, i32 } %9, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.cleanup_crit_edge

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

copy_to_user.exit:                                ; preds = %if.end.i.i
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %transid, i32 noundef 8) #20
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef nonnull %argp, ptr noundef nonnull %transid, i32 noundef 8) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool9.not = icmp eq i32 %call.i12.i.i, 0
  br i1 %tobool9.not, label %copy_to_user.exit.if.end12_crit_edge, label %copy_to_user.exit.cleanup_crit_edge

copy_to_user.exit.cleanup_crit_edge:              ; preds = %copy_to_user.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

copy_to_user.exit.if.end12_crit_edge:             ; preds = %copy_to_user.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end12

if.end12:                                         ; preds = %copy_to_user.exit.if.end12_crit_edge, %out.if.end12_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %copy_to_user.exit.cleanup_crit_edge, %if.end.i.i.cleanup_crit_edge, %if.end8.i.i.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end12 ], [ -14, %copy_to_user.exit.cleanup_crit_edge ], [ %0, %if.then.cleanup_crit_edge ], [ -14, %if.end8.i.i.cleanup_crit_edge ], [ -14, %if.end.i.i.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %transid) #20
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_wait_sync(ptr noundef %fs_info, ptr noundef %argp) unnamed_addr #8 align 64 {
entry:
  %transid = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %transid) #20
  %0 = ptrtoint ptr %transid to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 -1, ptr %transid, align 8, !annotation !200
  %tobool.not = icmp eq ptr %argp, null
  br i1 %tobool.not, label %if.else, label %if.end8.i.i

if.end8.i.i:                                      ; preds = %entry
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 156) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end8.i.i.if.then11.i.i_crit_edge, label %land.lhs.true.i.i

if.end8.i.i.if.then11.i.i_crit_edge:              ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

land.lhs.true.i.i:                                ; preds = %if.end8.i.i
  %1 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr nonnull %argp, i32 8, i32 -1226833920) #27, !srcloc !196
  %asmresult.i.i = extractvalue { i32, i32 } %1, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.end.i.i, label %land.lhs.true.i.i.if.then11.i.i_crit_edge, !prof !184

land.lhs.true.i.i.if.then11.i.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %transid, i32 noundef 8) #20
  %2 = call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 4
  %4 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #13, !srcloc !191
  %and.i.i.i.i = and i32 %4, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #20, !srcloc !192
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #20, !srcloc !193
  %call1.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %transid, ptr noundef nonnull %argp, i32 noundef 8) #20
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %4) #20, !srcloc !192
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #20, !srcloc !193
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool4.not.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end.i.i.if.end3_crit_edge, label %if.end.i.i.if.then11.i.i_crit_edge, !prof !184

if.end.i.i.if.then11.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

if.end.i.i.if.end3_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end3

if.then11.i.i:                                    ; preds = %if.end.i.i.if.then11.i.i_crit_edge, %land.lhs.true.i.i.if.then11.i.i_crit_edge, %if.end8.i.i.if.then11.i.i_crit_edge
  %res.0.i.i8 = phi i32 [ %call1.i.i.i, %if.end.i.i.if.then11.i.i_crit_edge ], [ 8, %if.end8.i.i.if.then11.i.i_crit_edge ], [ 8, %land.lhs.true.i.i.if.then11.i.i_crit_edge ]
  %sub.i.i = sub i32 8, %res.0.i.i8
  %add.ptr.i.i = getelementptr i8, ptr %transid, i32 %sub.i.i
  %5 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i8)
  br label %cleanup

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %6 = ptrtoint ptr %transid to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 0, ptr %transid, align 8
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.end.i.i.if.end3_crit_edge
  %7 = ptrtoint ptr %transid to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %transid, align 8
  %call4 = call i32 @btrfs_wait_for_commit(ptr noundef %fs_info, i64 noundef %8) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end3, %if.then11.i.i
  %retval.0 = phi i32 [ %call4, %if.end3 ], [ -14, %if.then11.i.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %transid) #20
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_scrub(ptr noundef %file, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %0 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_inode.i, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 33
  %4 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %s_fs_info.i, align 16
  %call2 = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call2, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %call3 = tail call ptr @memdup_user(ptr noundef %arg, i32 noundef 1024) #20
  %cmp.i = icmp ugt ptr %call3, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then5, label %if.end7

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %6 = ptrtoint ptr %call3 to i32
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %flags = getelementptr inbounds %struct.btrfs_ioctl_scrub_args, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %flags, align 8
  %and = and i64 %8, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %if.then8, label %if.end7.if.end13_crit_edge

if.end7.if.end13_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end13

if.then8:                                         ; preds = %if.end7
  %call9 = tail call i32 @mnt_want_write_file(ptr noundef %file) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.then8.if.end13_crit_edge, label %if.then8.out_crit_edge

if.then8.out_crit_edge:                           ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.then8.if.end13_crit_edge:                      ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end13

if.end13:                                         ; preds = %if.then8.if.end13_crit_edge, %if.end7.if.end13_crit_edge
  %9 = ptrtoint ptr %call3 to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %call3, align 8
  %start = getelementptr inbounds %struct.btrfs_ioctl_scrub_args, ptr %call3, i32 0, i32 1
  %11 = ptrtoint ptr %start to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %start, align 8
  %end = getelementptr inbounds %struct.btrfs_ioctl_scrub_args, ptr %call3, i32 0, i32 2
  %13 = ptrtoint ptr %end to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %end, align 8
  %progress = getelementptr inbounds %struct.btrfs_ioctl_scrub_args, ptr %call3, i32 0, i32 4
  %15 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %flags, align 8
  %17 = trunc i64 %16 to i32
  %conv = and i32 %17, 1
  %call16 = tail call i32 @btrfs_scrub_dev(ptr noundef %5, i64 noundef %10, i64 noundef %12, i64 noundef %14, ptr noundef %progress, i32 noundef %conv, i32 noundef 0) #20
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end13.copy_to_user.exit.thread_crit_edge, label %if.end.i.i

if.end13.copy_to_user.exit.thread_crit_edge:      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #22
  br label %copy_to_user.exit.thread

if.end.i.i:                                       ; preds = %if.end13
  %18 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %arg, i32 1024, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i = extractvalue { i32, i32 } %18, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.copy_to_user.exit.thread_crit_edge

if.end.i.i.copy_to_user.exit.thread_crit_edge:    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %copy_to_user.exit.thread

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %call3, i32 noundef 1024) #20
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %arg, ptr noundef %call3, i32 noundef 1024) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool18.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool18.not, i32 %call16, i32 -14
  br label %copy_to_user.exit.thread

copy_to_user.exit.thread:                         ; preds = %copy_to_user.exit, %if.end.i.i.copy_to_user.exit.thread_crit_edge, %if.end13.copy_to_user.exit.thread_crit_edge
  %19 = phi i32 [ -14, %if.end13.copy_to_user.exit.thread_crit_edge ], [ -14, %if.end.i.i.copy_to_user.exit.thread_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  %20 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %flags, align 8
  %and22 = and i64 %21, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and22)
  %tobool23.not = icmp eq i64 %and22, 0
  br i1 %tobool23.not, label %if.then24, label %copy_to_user.exit.thread.out_crit_edge

copy_to_user.exit.thread.out_crit_edge:           ; preds = %copy_to_user.exit.thread
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.then24:                                        ; preds = %copy_to_user.exit.thread
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @mnt_drop_write_file(ptr noundef %file) #20
  br label %out

out:                                              ; preds = %if.then24, %copy_to_user.exit.thread.out_crit_edge, %if.then8.out_crit_edge
  %ret.1 = phi i32 [ %19, %copy_to_user.exit.thread.out_crit_edge ], [ %19, %if.then24 ], [ %call9, %if.then8.out_crit_edge ]
  tail call void @kfree(ptr noundef %call3) #20
  br label %cleanup

cleanup:                                          ; preds = %out, %if.then5, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %6, %if.then5 ], [ %ret.1, %out ], [ -1, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_scrub_progress(ptr noundef %fs_info, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call ptr @memdup_user(ptr noundef %arg, i32 noundef 1024) #20
  %cmp.i = icmp ugt ptr %call1, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %0 = ptrtoint ptr %call1 to i32
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %1 = ptrtoint ptr %call1 to i32
  call void @__asan_load8_noabort(i32 %1)
  %2 = load i64, ptr %call1, align 8
  %progress = getelementptr inbounds %struct.btrfs_ioctl_scrub_args, ptr %call1, i32 0, i32 4
  %call6 = tail call i32 @btrfs_scrub_progress(ptr noundef %fs_info, i64 noundef %2, ptr noundef %progress) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %cmp = icmp eq i32 %call6, 0
  br i1 %cmp, label %if.end8.i.i, label %if.end5.if.end9_crit_edge

if.end5.if.end9_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end9

if.end8.i.i:                                      ; preds = %if.end5
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end8.i.i.if.end9_crit_edge, label %if.end.i.i

if.end8.i.i.if.end9_crit_edge:                    ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end9

if.end.i.i:                                       ; preds = %if.end8.i.i
  %3 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %arg, i32 1024, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i = extractvalue { i32, i32 } %3, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.if.end9_crit_edge

if.end.i.i.if.end9_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end9

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %call1, i32 noundef 1024) #20
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %arg, ptr noundef %call1, i32 noundef 1024) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -14
  br label %if.end9

if.end9:                                          ; preds = %copy_to_user.exit, %if.end.i.i.if.end9_crit_edge, %if.end8.i.i.if.end9_crit_edge, %if.end5.if.end9_crit_edge
  %ret.0 = phi i32 [ %call6, %if.end5.if.end9_crit_edge ], [ -14, %if.end8.i.i.if.end9_crit_edge ], [ -14, %if.end.i.i.if.end9_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  tail call void @kfree(ptr noundef %call1) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end9, %if.then3, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %0, %if.then3 ], [ %ret.0, %if.end9 ], [ -1, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_balance_ctl(ptr noundef %fs_info, i32 noundef %cmd) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end:                                           ; preds = %entry
  %0 = zext i32 %cmd to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.80)
  switch i32 %cmd, label %if.end.return_crit_edge [
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
  ]

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

sw.bb:                                            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %call1 = tail call i32 @btrfs_pause_balance(ptr noundef %fs_info) #20
  br label %return

sw.bb2:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %call3 = tail call i32 @btrfs_cancel_balance(ptr noundef %fs_info) #20
  br label %return

return:                                           ; preds = %sw.bb2, %sw.bb, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call3, %sw.bb2 ], [ %call1, %sw.bb ], [ -1, %entry.return_crit_edge ], [ -22, %if.end.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_balance_progress(ptr noundef %fs_info, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %balance_mutex = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 114
  tail call void @mutex_lock_nested(ptr noundef %balance_mutex, i32 noundef 0) #20
  %balance_ctl = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 117
  %0 = ptrtoint ptr %balance_ctl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %balance_ctl, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.end.out_crit_edge, label %if.end2

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end2:                                          ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3520, i32 noundef 1024) #26
  %tobool4.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool4.not, label %if.end2.out_crit_edge, label %if.end6

if.end2.out_crit_edge:                            ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end6:                                          ; preds = %if.end2
  tail call void @btrfs_update_ioctl_balance_args(ptr noundef %fs_info, ptr noundef nonnull %call7.i.i)
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end6.copy_to_user.exit.thread_crit_edge, label %if.end.i.i

if.end6.copy_to_user.exit.thread_crit_edge:       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #22
  br label %copy_to_user.exit.thread

if.end.i.i:                                       ; preds = %if.end6
  %3 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %arg, i32 1024, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i = extractvalue { i32, i32 } %3, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.copy_to_user.exit.thread_crit_edge

if.end.i.i.copy_to_user.exit.thread_crit_edge:    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %copy_to_user.exit.thread

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull %call7.i.i, i32 noundef 1024) #20
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %arg, ptr noundef nonnull %call7.i.i, i32 noundef 1024) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool8.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool8.not, i32 0, i32 -14
  br label %copy_to_user.exit.thread

copy_to_user.exit.thread:                         ; preds = %copy_to_user.exit, %if.end.i.i.copy_to_user.exit.thread_crit_edge, %if.end6.copy_to_user.exit.thread_crit_edge
  %4 = phi i32 [ -14, %if.end6.copy_to_user.exit.thread_crit_edge ], [ -14, %if.end.i.i.copy_to_user.exit.thread_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #20
  br label %out

out:                                              ; preds = %copy_to_user.exit.thread, %if.end2.out_crit_edge, %if.end.out_crit_edge
  %ret.1 = phi i32 [ %4, %copy_to_user.exit.thread ], [ -107, %if.end.out_crit_edge ], [ -12, %if.end2.out_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %balance_mutex) #20
  br label %cleanup

cleanup:                                          ; preds = %out, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.1, %out ], [ -1, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_set_received_subvol(ptr noundef %file, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @memdup_user(ptr noundef %arg, i32 noundef 200) #20
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %0 = ptrtoint ptr %call to i32
  br label %cleanup

if.end:                                           ; preds = %entry
  %f_path.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 1
  %1 = ptrtoint ptr %f_path.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %f_path.i, align 8
  %mnt_userns.i.i = getelementptr inbounds %struct.vfsmount, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %mnt_userns.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile ptr, ptr %mnt_userns.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !199
  %call4 = tail call fastcc i32 @_btrfs_ioctl_set_received_subvol(ptr noundef %file, ptr noundef %4, ptr noundef %call)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %if.end8.i.i, label %if.end.out_crit_edge

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end8.i.i:                                      ; preds = %if.end
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end8.i.i.out_crit_edge, label %if.end.i.i

if.end8.i.i.out_crit_edge:                        ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end.i.i:                                       ; preds = %if.end8.i.i
  %5 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %arg, i32 200, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i = extractvalue { i32, i32 } %5, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.out_crit_edge

if.end.i.i.out_crit_edge:                         ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %call, i32 noundef 200) #20
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %arg, ptr noundef %call, i32 noundef 200) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool8.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool8.not, i32 0, i32 -14
  br label %out

out:                                              ; preds = %copy_to_user.exit, %if.end.i.i.out_crit_edge, %if.end8.i.i.out_crit_edge, %if.end.out_crit_edge
  %ret.0 = phi i32 [ %call4, %if.end.out_crit_edge ], [ -14, %if.end8.i.i.out_crit_edge ], [ -14, %if.end.i.i.out_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  tail call void @kfree(ptr noundef %call) #20
  br label %cleanup

cleanup:                                          ; preds = %out, %if.then
  %retval.0 = phi i32 [ %0, %if.then ], [ %ret.0, %out ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @_btrfs_ioctl_send(ptr noundef %file, ptr noundef %argp) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @memdup_user(ptr noundef %argp, i32 noundef 72) #20
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then2, label %if.end4

if.then2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %0 = ptrtoint ptr %call to i32
  br label %cleanup

if.end4:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call5 = tail call i32 @btrfs_ioctl_send(ptr noundef %file, ptr noundef %call) #20
  tail call void @kfree(ptr noundef %call) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %if.then2
  %retval.0 = phi i32 [ %0, %if.then2 ], [ %call5, %if.end4 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_get_dev_stats(ptr noundef %fs_info, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @memdup_user(ptr noundef %arg, i32 noundef 1032) #20
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %0 = ptrtoint ptr %call to i32
  br label %cleanup

if.end:                                           ; preds = %entry
  %flags = getelementptr inbounds %struct.btrfs_ioctl_get_dev_stats, ptr %call, i32 0, i32 2
  %1 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %1)
  %2 = load i64, ptr %flags, align 8
  %and = and i64 %2, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %if.end.if.end5_crit_edge, label %land.lhs.true

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end5

land.lhs.true:                                    ; preds = %if.end
  %call3 = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call3, label %land.lhs.true.if.end5_crit_edge, label %if.then4

land.lhs.true.if.end5_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end5

if.then4:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @kfree(ptr noundef %call) #20
  br label %cleanup

if.end5:                                          ; preds = %land.lhs.true.if.end5_crit_edge, %if.end.if.end5_crit_edge
  %call6 = tail call i32 @btrfs_get_dev_stats(ptr noundef %fs_info, ptr noundef %call) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %cmp = icmp eq i32 %call6, 0
  br i1 %cmp, label %if.end8.i.i, label %if.end5.if.end11_crit_edge

if.end5.if.end11_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end11

if.end8.i.i:                                      ; preds = %if.end5
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end8.i.i.if.end11_crit_edge, label %if.end.i.i

if.end8.i.i.if.end11_crit_edge:                   ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end11

if.end.i.i:                                       ; preds = %if.end8.i.i
  %3 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %arg, i32 1032, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i = extractvalue { i32, i32 } %3, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.if.end11_crit_edge

if.end.i.i.if.end11_crit_edge:                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end11

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %call, i32 noundef 1032) #20
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %arg, ptr noundef %call, i32 noundef 1032) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool9.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool9.not, i32 0, i32 -14
  br label %if.end11

if.end11:                                         ; preds = %copy_to_user.exit, %if.end.i.i.if.end11_crit_edge, %if.end8.i.i.if.end11_crit_edge, %if.end5.if.end11_crit_edge
  %ret.0 = phi i32 [ %call6, %if.end5.if.end11_crit_edge ], [ -14, %if.end8.i.i.if.end11_crit_edge ], [ -14, %if.end.i.i.if.end11_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  tail call void @kfree(ptr noundef %call) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end11, %if.then4, %if.then
  %retval.0 = phi i32 [ %0, %if.then ], [ %ret.0, %if.end11 ], [ -1, %if.then4 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_quota_ctl(ptr noundef %file, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %0 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_inode.i, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 33
  %4 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %s_fs_info.i, align 16
  %call2 = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call2, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %call3 = tail call i32 @mnt_want_write_file(ptr noundef %file) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %if.end5, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %call6 = tail call ptr @memdup_user(ptr noundef %arg, i32 noundef 16) #20
  %cmp.i = icmp ugt ptr %call6, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then8, label %if.end10

if.then8:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #22
  %6 = ptrtoint ptr %call6 to i32
  br label %drop_write

if.end10:                                         ; preds = %if.end5
  %subvol_sem = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 56
  tail call void @down_write(ptr noundef %subvol_sem) #20
  %7 = ptrtoint ptr %call6 to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %call6, align 8
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.81)
  switch i64 %8, label %if.end10.sw.epilog_crit_edge [
    i64 1, label %sw.bb
    i64 2, label %sw.bb12
  ]

if.end10.sw.epilog_crit_edge:                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #22
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #22
  %call11 = tail call i32 @btrfs_quota_enable(ptr noundef %5) #20
  br label %sw.epilog

sw.bb12:                                          ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #22
  %call13 = tail call i32 @btrfs_quota_disable(ptr noundef %5) #20
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb12, %sw.bb, %if.end10.sw.epilog_crit_edge
  %ret.0 = phi i32 [ %call13, %sw.bb12 ], [ %call11, %sw.bb ], [ -22, %if.end10.sw.epilog_crit_edge ]
  tail call void @kfree(ptr noundef %call6) #20
  tail call void @up_write(ptr noundef %subvol_sem) #20
  br label %drop_write

drop_write:                                       ; preds = %sw.epilog, %if.then8
  %ret.1 = phi i32 [ %6, %if.then8 ], [ %ret.0, %sw.epilog ]
  tail call void @mnt_drop_write_file(ptr noundef %file) #20
  br label %cleanup

cleanup:                                          ; preds = %drop_write, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.1, %drop_write ], [ -1, %entry.cleanup_crit_edge ], [ %call3, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_qgroup_assign(ptr noundef %file, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %0 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_inode.i, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 33
  %4 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %s_fs_info.i, align 16
  %add.ptr.i = getelementptr i8, ptr %1, i32 -864
  %6 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %add.ptr.i, align 8
  %call4 = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call4, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %call5 = tail call i32 @mnt_want_write_file(ptr noundef %file) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool.not = icmp eq i32 %call5, 0
  br i1 %tobool.not, label %if.end7, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %call8 = tail call ptr @memdup_user(ptr noundef %arg, i32 noundef 24) #20
  %cmp.i = icmp ugt ptr %call8, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #22
  %8 = ptrtoint ptr %call8 to i32
  br label %drop_write

if.end12:                                         ; preds = %if.end7
  %call13 = tail call ptr @btrfs_join_transaction(ptr noundef %7) #20
  %cmp.i60 = icmp ugt ptr %call13, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i60, label %if.then15, label %if.end17

if.then15:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #22
  %9 = ptrtoint ptr %call13 to i32
  br label %out

if.end17:                                         ; preds = %if.end12
  %10 = ptrtoint ptr %call8 to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %call8, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %11)
  %tobool18.not = icmp eq i64 %11, 0
  %src21 = getelementptr inbounds %struct.btrfs_ioctl_qgroup_assign_args, ptr %call8, i32 0, i32 1
  %12 = ptrtoint ptr %src21 to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %src21, align 8
  %dst22 = getelementptr inbounds %struct.btrfs_ioctl_qgroup_assign_args, ptr %call8, i32 0, i32 2
  %14 = ptrtoint ptr %dst22 to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %dst22, align 8
  br i1 %tobool18.not, label %if.else, label %if.then19

if.then19:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #22
  %call20 = tail call i32 @btrfs_add_qgroup_relation(ptr noundef %call13, i64 noundef %13, i64 noundef %15) #20
  br label %if.end24

if.else:                                          ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #22
  %call23 = tail call i32 @btrfs_del_qgroup_relation(ptr noundef %call13, i64 noundef %13, i64 noundef %15) #20
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then19
  %ret.0 = phi i32 [ %call20, %if.then19 ], [ %call23, %if.else ]
  %call25 = tail call i32 @btrfs_run_qgroups(ptr noundef %call13) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %cmp = icmp slt i32 %call25, 0
  br i1 %cmp, label %do.body, label %if.end24.if.end27_crit_edge

if.end24.if.end27_crit_edge:                      ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end27

do.body:                                          ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, ptr, i32, i32, ptr, ...) @__btrfs_handle_fs_error(ptr noundef %5, ptr noundef nonnull @__func__.btrfs_ioctl_qgroup_assign, i32 noundef 4576, i32 noundef %call25, ptr noundef nonnull @.str.60) #24
  br label %if.end27

if.end27:                                         ; preds = %do.body, %if.end24.if.end27_crit_edge
  %call28 = tail call i32 @btrfs_end_transaction(ptr noundef %call13) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28)
  %tobool29.not = icmp ne i32 %call28, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool30.not = icmp eq i32 %ret.0, 0
  %or.cond = select i1 %tobool29.not, i1 %tobool30.not, i1 false
  %spec.select = select i1 %or.cond, i32 %call28, i32 %ret.0
  br label %out

out:                                              ; preds = %if.end27, %if.then15
  %ret.1 = phi i32 [ %9, %if.then15 ], [ %spec.select, %if.end27 ]
  tail call void @kfree(ptr noundef %call8) #20
  br label %drop_write

drop_write:                                       ; preds = %out, %if.then10
  %ret.2 = phi i32 [ %8, %if.then10 ], [ %ret.1, %out ]
  tail call void @mnt_drop_write_file(ptr noundef %file) #20
  br label %cleanup

cleanup:                                          ; preds = %drop_write, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.2, %drop_write ], [ -1, %entry.cleanup_crit_edge ], [ %call5, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_qgroup_create(ptr noundef %file, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %0 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_inode.i, align 8
  %add.ptr.i = getelementptr i8, ptr %1, i32 -864
  %2 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %add.ptr.i, align 8
  %call3 = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call3, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %call4 = tail call i32 @mnt_want_write_file(ptr noundef %file) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %if.end6, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %call7 = tail call ptr @memdup_user(ptr noundef %arg, i32 noundef 16) #20
  %cmp.i = icmp ugt ptr %call7, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #22
  %4 = ptrtoint ptr %call7 to i32
  br label %drop_write

if.end11:                                         ; preds = %if.end6
  %qgroupid = getelementptr inbounds %struct.btrfs_ioctl_qgroup_create_args, ptr %call7, i32 0, i32 1
  %5 = ptrtoint ptr %qgroupid to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %qgroupid, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %6)
  %tobool12.not = icmp eq i64 %6, 0
  br i1 %tobool12.not, label %if.end11.out_crit_edge, label %if.end14

if.end11.out_crit_edge:                           ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end14:                                         ; preds = %if.end11
  %call15 = tail call ptr @btrfs_join_transaction(ptr noundef %3) #20
  %cmp.i53 = icmp ugt ptr %call15, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i53, label %if.then17, label %if.end19

if.then17:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #22
  %7 = ptrtoint ptr %call15 to i32
  br label %out

if.end19:                                         ; preds = %if.end14
  %8 = ptrtoint ptr %call7 to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %call7, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %9)
  %tobool20.not = icmp eq i64 %9, 0
  %10 = ptrtoint ptr %qgroupid to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %qgroupid, align 8
  br i1 %tobool20.not, label %if.else, label %if.then21

if.then21:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #22
  %call23 = tail call i32 @btrfs_create_qgroup(ptr noundef %call15, i64 noundef %11) #20
  br label %if.end26

if.else:                                          ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #22
  %call25 = tail call i32 @btrfs_remove_qgroup(ptr noundef %call15, i64 noundef %11) #20
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then21
  %ret.0 = phi i32 [ %call23, %if.then21 ], [ %call25, %if.else ]
  %call27 = tail call i32 @btrfs_end_transaction(ptr noundef %call15) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %tobool28.not = icmp ne i32 %call27, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool29.not = icmp eq i32 %ret.0, 0
  %or.cond = select i1 %tobool28.not, i1 %tobool29.not, i1 false
  %spec.select = select i1 %or.cond, i32 %call27, i32 %ret.0
  br label %out

out:                                              ; preds = %if.end26, %if.then17, %if.end11.out_crit_edge
  %ret.1 = phi i32 [ %7, %if.then17 ], [ -22, %if.end11.out_crit_edge ], [ %spec.select, %if.end26 ]
  tail call void @kfree(ptr noundef %call7) #20
  br label %drop_write

drop_write:                                       ; preds = %out, %if.then9
  %ret.2 = phi i32 [ %4, %if.then9 ], [ %ret.1, %out ]
  tail call void @mnt_drop_write_file(ptr noundef %file) #20
  br label %cleanup

cleanup:                                          ; preds = %drop_write, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.2, %drop_write ], [ -1, %entry.cleanup_crit_edge ], [ %call4, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_qgroup_limit(ptr noundef %file, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %0 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_inode.i, align 8
  %add.ptr.i = getelementptr i8, ptr %1, i32 -864
  %2 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %add.ptr.i, align 8
  %call3 = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call3, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %call4 = tail call i32 @mnt_want_write_file(ptr noundef %file) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %if.end6, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %call7 = tail call ptr @memdup_user(ptr noundef %arg, i32 noundef 48) #20
  %cmp.i = icmp ugt ptr %call7, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #22
  %4 = ptrtoint ptr %call7 to i32
  br label %drop_write

if.end11:                                         ; preds = %if.end6
  %call12 = tail call ptr @btrfs_join_transaction(ptr noundef %3) #20
  %cmp.i48 = icmp ugt ptr %call12, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i48, label %if.then14, label %if.end16

if.then14:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #22
  %5 = ptrtoint ptr %call12 to i32
  br label %out

if.end16:                                         ; preds = %if.end11
  %6 = ptrtoint ptr %call7 to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %call7, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %7)
  %tobool18.not = icmp eq i64 %7, 0
  br i1 %tobool18.not, label %if.then19, label %if.end16.if.end20_crit_edge

if.end16.if.end20_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end20

if.then19:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #22
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %3, i32 0, i32 7
  %8 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %8, i32 8)
  %9 = load i64, ptr %root_key, align 1
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.end16.if.end20_crit_edge
  %qgroupid.0 = phi i64 [ %7, %if.end16.if.end20_crit_edge ], [ %9, %if.then19 ]
  %lim = getelementptr inbounds %struct.btrfs_ioctl_qgroup_limit_args, ptr %call7, i32 0, i32 1
  %call21 = tail call i32 @btrfs_limit_qgroup(ptr noundef %call12, i64 noundef %qgroupid.0, ptr noundef %lim) #20
  %call22 = tail call i32 @btrfs_end_transaction(ptr noundef %call12) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %tobool23.not = icmp ne i32 %call22, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %tobool24.not = icmp eq i32 %call21, 0
  %or.cond = select i1 %tobool23.not, i1 %tobool24.not, i1 false
  %spec.select = select i1 %or.cond, i32 %call22, i32 %call21
  br label %out

out:                                              ; preds = %if.end20, %if.then14
  %ret.0 = phi i32 [ %5, %if.then14 ], [ %spec.select, %if.end20 ]
  tail call void @kfree(ptr noundef %call7) #20
  br label %drop_write

drop_write:                                       ; preds = %out, %if.then9
  %ret.1 = phi i32 [ %4, %if.then9 ], [ %ret.0, %out ]
  tail call void @mnt_drop_write_file(ptr noundef %file) #20
  br label %cleanup

cleanup:                                          ; preds = %drop_write, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.1, %drop_write ], [ -1, %entry.cleanup_crit_edge ], [ %call4, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_quota_rescan(ptr noundef %file, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %0 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_inode.i, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 33
  %4 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %s_fs_info.i, align 16
  %call2 = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call2, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %call3 = tail call i32 @mnt_want_write_file(ptr noundef %file) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %if.end5, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %call6 = tail call ptr @memdup_user(ptr noundef %arg, i32 noundef 64) #20
  %cmp.i = icmp ugt ptr %call6, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then8, label %if.end10

if.then8:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #22
  %6 = ptrtoint ptr %call6 to i32
  br label %drop_write

if.end10:                                         ; preds = %if.end5
  %7 = ptrtoint ptr %call6 to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %call6, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %8)
  %tobool11.not = icmp eq i64 %8, 0
  br i1 %tobool11.not, label %if.end13, label %if.end10.out_crit_edge

if.end10.out_crit_edge:                           ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end13:                                         ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #22
  %call14 = tail call i32 @btrfs_qgroup_rescan(ptr noundef %5) #20
  br label %out

out:                                              ; preds = %if.end13, %if.end10.out_crit_edge
  %ret.0 = phi i32 [ %call14, %if.end13 ], [ -22, %if.end10.out_crit_edge ]
  tail call void @kfree(ptr noundef %call6) #20
  br label %drop_write

drop_write:                                       ; preds = %out, %if.then8
  %ret.1 = phi i32 [ %6, %if.then8 ], [ %ret.0, %out ]
  tail call void @mnt_drop_write_file(ptr noundef %file) #20
  br label %cleanup

cleanup:                                          ; preds = %drop_write, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.1, %drop_write ], [ -1, %entry.cleanup_crit_edge ], [ %call3, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_quota_rescan_status(ptr nocapture noundef readonly %fs_info, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  %qsa = alloca %struct.btrfs_ioctl_quota_rescan_args, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %qsa) #20
  %0 = call ptr @memset(ptr %qsa, i32 0, i32 64)
  %call = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %qgroup_flags = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 136
  %1 = ptrtoint ptr %qgroup_flags to i32
  call void @__asan_load8_noabort(i32 %1)
  %2 = load i64, ptr %qgroup_flags, align 8
  %and = and i64 %2, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %if.end.if.end8.i.i_crit_edge, label %if.then1

if.end.if.end8.i.i_crit_edge:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8.i.i

if.then1:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %3 = ptrtoint ptr %qsa to i32
  call void @__asan_store8_noabort(i32 %3)
  store i64 1, ptr %qsa, align 8
  %qgroup_rescan_progress = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 144
  %4 = ptrtoint ptr %qgroup_rescan_progress to i32
  call void @__asan_loadN_noabort(i32 %4, i32 8)
  %5 = load i64, ptr %qgroup_rescan_progress, align 4
  %progress = getelementptr inbounds %struct.btrfs_ioctl_quota_rescan_args, ptr %qsa, i32 0, i32 1
  %6 = ptrtoint ptr %progress to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 %5, ptr %progress, align 8
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %if.then1, %if.end.if.end8.i.i_crit_edge
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end8.i.i.cleanup_crit_edge, label %if.end.i.i

if.end8.i.i.cleanup_crit_edge:                    ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end.i.i:                                       ; preds = %if.end8.i.i
  %7 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %arg, i32 64, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i = extractvalue { i32, i32 } %7, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.cleanup_crit_edge

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %qsa, i32 noundef 64) #20
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef %arg, ptr noundef nonnull %qsa, i32 noundef 64) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool4.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool4.not, i32 0, i32 -14
  br label %cleanup

cleanup:                                          ; preds = %copy_to_user.exit, %if.end.i.i.cleanup_crit_edge, %if.end8.i.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -1, %entry.cleanup_crit_edge ], [ -14, %if.end8.i.i.cleanup_crit_edge ], [ -14, %if.end.i.i.cleanup_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %qsa) #20
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_quota_rescan_wait(ptr noundef %fs_info) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %call1 = tail call i32 @btrfs_qgroup_wait_for_completion(ptr noundef %fs_info, i1 noundef zeroext true) #20
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ -1, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_dev_replace(ptr noundef %fs_info, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call ptr @memdup_user(ptr noundef %arg, i32 noundef 2600) #20
  %cmp.i = icmp ugt ptr %call1, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  %0 = ptrtoint ptr %call1 to i32
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %1 = ptrtoint ptr %call1 to i32
  call void @__asan_load8_noabort(i32 %1)
  %2 = load i64, ptr %call1, align 8
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.82)
  switch i64 %2, label %if.end5.out_crit_edge [
    i64 0, label %sw.bb
    i64 1, label %sw.bb13
    i64 2, label %sw.bb14
  ]

if.end5.out_crit_edge:                            ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

sw.bb:                                            ; preds = %if.end5
  %sb = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 45
  %3 = ptrtoint ptr %sb to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sb, align 8
  %s_flags.i = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 10
  %5 = ptrtoint ptr %s_flags.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %s_flags.i, align 4
  %and.i = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.end8, label %sw.bb.out_crit_edge

sw.bb.out_crit_edge:                              ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end8:                                          ; preds = %sw.bb
  %super_lock.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 42
  tail call void @_raw_spin_lock(ptr noundef %super_lock.i) #20
  %exclusive_operation.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 175
  %7 = ptrtoint ptr %exclusive_operation.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %exclusive_operation.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp.i38 = icmp eq i32 %8, 0
  br i1 %cmp.i38, label %sw.epilog, label %btrfs_exclop_start.exit

btrfs_exclop_start.exit:                          ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @_raw_spin_unlock(ptr noundef %super_lock.i) #20
  br label %out

sw.bb13:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @btrfs_dev_replace_status(ptr noundef %fs_info, ptr noundef %call1) #20
  br label %if.end8.i.i

sw.bb14:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #22
  %call15 = tail call i32 @btrfs_dev_replace_cancel(ptr noundef %fs_info) #20
  %conv = sext i32 %call15 to i64
  %result = getelementptr inbounds %struct.btrfs_ioctl_dev_replace_args, ptr %call1, i32 0, i32 1
  %9 = ptrtoint ptr %result to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %conv, ptr %result, align 8
  br label %if.end8.i.i

sw.epilog:                                        ; preds = %if.end8
  %10 = ptrtoint ptr %exclusive_operation.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 5, ptr %exclusive_operation.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %super_lock.i) #20
  %call11 = tail call i32 @btrfs_dev_replace_by_ioctl(ptr noundef %fs_info, ptr noundef %call1) #20
  tail call void @btrfs_exclop_finish(ptr noundef %fs_info)
  %11 = zext i32 %call11 to i64
  call void @__sanitizer_cov_trace_switch(i64 %11, ptr @__sancov_gen_cov_switch_values.83)
  switch i32 %call11, label %sw.epilog.out_crit_edge [
    i32 0, label %sw.epilog.if.end8.i.i_crit_edge
    i32 -125, label %sw.epilog.if.end8.i.i_crit_edge46
  ]

sw.epilog.if.end8.i.i_crit_edge46:                ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8.i.i

sw.epilog.if.end8.i.i_crit_edge:                  ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8.i.i

sw.epilog.out_crit_edge:                          ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end8.i.i:                                      ; preds = %sw.epilog.if.end8.i.i_crit_edge, %sw.epilog.if.end8.i.i_crit_edge46, %sw.bb14, %sw.bb13
  %ret.043 = phi i32 [ %call11, %sw.epilog.if.end8.i.i_crit_edge ], [ %call11, %sw.epilog.if.end8.i.i_crit_edge46 ], [ 0, %sw.bb14 ], [ 0, %sw.bb13 ]
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end8.i.i.out_crit_edge, label %if.end.i.i

if.end8.i.i.out_crit_edge:                        ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end.i.i:                                       ; preds = %if.end8.i.i
  %12 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %arg, i32 2600, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i = extractvalue { i32, i32 } %12, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.out_crit_edge

if.end.i.i.out_crit_edge:                         ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %call1, i32 noundef 2600) #20
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %arg, ptr noundef %call1, i32 noundef 2600) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool.not, i32 %ret.043, i32 -14
  br label %out

out:                                              ; preds = %copy_to_user.exit, %if.end.i.i.out_crit_edge, %if.end8.i.i.out_crit_edge, %sw.epilog.out_crit_edge, %btrfs_exclop_start.exit, %sw.bb.out_crit_edge, %if.end5.out_crit_edge
  %ret.1 = phi i32 [ -30, %sw.bb.out_crit_edge ], [ %call11, %sw.epilog.out_crit_edge ], [ -22, %if.end5.out_crit_edge ], [ 8, %btrfs_exclop_start.exit ], [ -14, %if.end8.i.i.out_crit_edge ], [ -14, %if.end.i.i.out_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  tail call void @kfree(ptr noundef %call1) #20
  br label %cleanup

cleanup:                                          ; preds = %out, %if.then3, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %0, %if.then3 ], [ %ret.1, %out ], [ -1, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_get_features(ptr nocapture noundef readonly %fs_info, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  %features = alloca %struct.btrfs_ioctl_feature_flags, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %super_copy = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 43
  %0 = ptrtoint ptr %super_copy to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %super_copy, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %features) #20
  %2 = getelementptr inbounds %struct.btrfs_ioctl_feature_flags, ptr %features, i32 0, i32 1
  %3 = getelementptr inbounds %struct.btrfs_ioctl_feature_flags, ptr %features, i32 0, i32 2
  %compat_flags.i = getelementptr inbounds %struct.btrfs_super_block, ptr %1, i32 0, i32 20
  %4 = ptrtoint ptr %compat_flags.i to i32
  call void @__asan_loadN_noabort(i32 %4, i32 8)
  %5 = load i64, ptr %compat_flags.i, align 1
  %6 = tail call i64 @llvm.bswap.i64(i64 %5) #20
  %7 = ptrtoint ptr %features to i32
  call void @__asan_store8_noabort(i32 %7)
  store i64 %6, ptr %features, align 8
  %compat_ro_flags.i = getelementptr inbounds %struct.btrfs_super_block, ptr %1, i32 0, i32 21
  %8 = ptrtoint ptr %compat_ro_flags.i to i32
  call void @__asan_loadN_noabort(i32 %8, i32 8)
  %9 = load i64, ptr %compat_ro_flags.i, align 1
  %10 = tail call i64 @llvm.bswap.i64(i64 %9) #20
  %11 = ptrtoint ptr %2 to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %2, align 8
  %incompat_flags.i = getelementptr inbounds %struct.btrfs_super_block, ptr %1, i32 0, i32 22
  %12 = ptrtoint ptr %incompat_flags.i to i32
  call void @__asan_loadN_noabort(i32 %12, i32 8)
  %13 = load i64, ptr %incompat_flags.i, align 1
  %14 = tail call i64 @llvm.bswap.i64(i64 %13) #20
  %15 = ptrtoint ptr %3 to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %14, ptr %3, align 8
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %entry.copy_to_user.exit.thread_crit_edge, label %if.end.i.i

entry.copy_to_user.exit.thread_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %copy_to_user.exit.thread

if.end.i.i:                                       ; preds = %entry
  %16 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %arg, i32 24, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i = extractvalue { i32, i32 } %16, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.copy_to_user.exit.thread_crit_edge

if.end.i.i.copy_to_user.exit.thread_crit_edge:    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %copy_to_user.exit.thread

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %features, i32 noundef 24) #20
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef %arg, ptr noundef nonnull %features, i32 noundef 24) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -14
  br label %copy_to_user.exit.thread

copy_to_user.exit.thread:                         ; preds = %copy_to_user.exit, %if.end.i.i.copy_to_user.exit.thread_crit_edge, %entry.copy_to_user.exit.thread_crit_edge
  %17 = phi i32 [ -14, %entry.copy_to_user.exit.thread_crit_edge ], [ -14, %if.end.i.i.copy_to_user.exit.thread_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %features) #20
  ret i32 %17
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_set_features(ptr noundef %file, ptr noundef %arg) unnamed_addr #0 align 64 {
entry:
  %flags = alloca [2 x %struct.btrfs_ioctl_feature_flags], align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %0 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_inode.i, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 33
  %4 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %s_fs_info.i, align 16
  %add.ptr.i = getelementptr i8, ptr %1, i32 -864
  %6 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %add.ptr.i, align 8
  %super_copy = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 43
  %8 = ptrtoint ptr %super_copy to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %super_copy, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %flags) #20
  %10 = getelementptr inbounds %struct.btrfs_ioctl_feature_flags, ptr %flags, i32 0, i32 1
  %11 = getelementptr inbounds %struct.btrfs_ioctl_feature_flags, ptr %flags, i32 0, i32 2
  %12 = getelementptr inbounds [2 x %struct.btrfs_ioctl_feature_flags], ptr %flags, i32 0, i32 1
  %13 = getelementptr inbounds [2 x %struct.btrfs_ioctl_feature_flags], ptr %flags, i32 0, i32 1, i32 1
  %14 = getelementptr inbounds [2 x %struct.btrfs_ioctl_feature_flags], ptr %flags, i32 0, i32 1, i32 2
  %15 = call ptr @memset(ptr %flags, i32 255, i32 48)
  %call4 = tail call zeroext i1 @capable(i32 noundef 21) #20
  br i1 %call4, label %if.end8.i.i, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end8.i.i:                                      ; preds = %entry
  tail call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 156) #20
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end8.i.i.if.then11.i.i_crit_edge, label %land.lhs.true.i.i

if.end8.i.i.if.then11.i.i_crit_edge:              ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

land.lhs.true.i.i:                                ; preds = %if.end8.i.i
  %16 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %arg, i32 48, i32 -1226833920) #27, !srcloc !196
  %asmresult.i.i = extractvalue { i32, i32 } %16, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.end.i.i, label %land.lhs.true.i.i.if.then11.i.i_crit_edge, !prof !184

land.lhs.true.i.i.if.then11.i.i_crit_edge:        ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %flags, i32 noundef 48) #20
  %17 = call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i.i.i.i = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 4
  %19 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #13, !srcloc !191
  %and.i.i.i.i = and i32 %19, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #20, !srcloc !192
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #20, !srcloc !193
  %call1.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %flags, ptr noundef %arg, i32 noundef 48) #20
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %19) #20, !srcloc !192
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #20, !srcloc !193
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool4.not.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end7, label %if.end.i.i.if.then11.i.i_crit_edge, !prof !184

if.end.i.i.if.then11.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then11.i.i

if.then11.i.i:                                    ; preds = %if.end.i.i.if.then11.i.i_crit_edge, %land.lhs.true.i.i.if.then11.i.i_crit_edge, %if.end8.i.i.if.then11.i.i_crit_edge
  %res.0.i.i138 = phi i32 [ %call1.i.i.i, %if.end.i.i.if.then11.i.i_crit_edge ], [ 48, %if.end8.i.i.if.then11.i.i_crit_edge ], [ 48, %land.lhs.true.i.i.if.then11.i.i_crit_edge ]
  %sub.i.i = sub i32 48, %res.0.i.i138
  %add.ptr.i.i = getelementptr i8, ptr %flags, i32 %sub.i.i
  %20 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i138)
  br label %cleanup

if.end7:                                          ; preds = %if.end.i.i
  %21 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %flags, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %22)
  %tobool8.not = icmp eq i64 %22, 0
  br i1 %tobool8.not, label %land.lhs.true, label %if.end7.if.end15_crit_edge

if.end7.if.end15_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15

land.lhs.true:                                    ; preds = %if.end7
  %23 = ptrtoint ptr %10 to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %10, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %24)
  %tobool10.not = icmp eq i64 %24, 0
  br i1 %tobool10.not, label %land.lhs.true11, label %land.lhs.true.if.end15_crit_edge

land.lhs.true.if.end15_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15

land.lhs.true11:                                  ; preds = %land.lhs.true
  %25 = ptrtoint ptr %11 to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %11, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %26)
  %tobool13.not = icmp eq i64 %26, 0
  br i1 %tobool13.not, label %land.lhs.true11.cleanup_crit_edge, label %land.lhs.true11.if.end15_crit_edge

land.lhs.true11.if.end15_crit_edge:               ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15

land.lhs.true11.cleanup_crit_edge:                ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end15:                                         ; preds = %land.lhs.true11.if.end15_crit_edge, %land.lhs.true.if.end15_crit_edge, %if.end7.if.end15_crit_edge
  %27 = ptrtoint ptr %12 to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %12, align 8
  %call20 = call fastcc i32 @check_feature_bits(ptr noundef %5, i32 noundef 0, i64 noundef %22, i64 noundef %28, i64 noundef 0, i64 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20)
  %tobool21.not = icmp eq i32 %call20, 0
  br i1 %tobool21.not, label %if.end23, label %if.end15.cleanup_crit_edge

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end23:                                         ; preds = %if.end15
  %29 = ptrtoint ptr %10 to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %10, align 8
  %31 = ptrtoint ptr %13 to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %13, align 8
  %call28 = call fastcc i32 @check_feature_bits(ptr noundef %5, i32 noundef 1, i64 noundef %30, i64 noundef %32, i64 noundef 7, i64 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28)
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %if.end31, label %if.end23.cleanup_crit_edge

if.end23.cleanup_crit_edge:                       ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end31:                                         ; preds = %if.end23
  %33 = ptrtoint ptr %11 to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %11, align 8
  %35 = ptrtoint ptr %14 to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %14, align 8
  %call36 = call fastcc i32 @check_feature_bits(ptr noundef %5, i32 noundef 2, i64 noundef %34, i64 noundef %36, i64 noundef 8191, i64 noundef 64)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36)
  %tobool37.not = icmp eq i32 %call36, 0
  br i1 %tobool37.not, label %if.end39, label %if.end31.cleanup_crit_edge

if.end31.cleanup_crit_edge:                       ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end39:                                         ; preds = %if.end31
  %call40 = call i32 @mnt_want_write_file(ptr noundef %file) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call40)
  %tobool41.not = icmp eq i32 %call40, 0
  br i1 %tobool41.not, label %if.end43, label %if.end39.cleanup_crit_edge

if.end39.cleanup_crit_edge:                       ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end43:                                         ; preds = %if.end39
  %call44 = call ptr @btrfs_start_transaction(ptr noundef %7, i32 noundef 0) #20
  %cmp.i = icmp ugt ptr %call44, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then46, label %if.end48

if.then46:                                        ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #22
  %37 = ptrtoint ptr %call44 to i32
  br label %out_drop_write

if.end48:                                         ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #22
  %super_lock = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 42
  call void @_raw_spin_lock(ptr noundef %super_lock) #20
  %compat_flags.i = getelementptr inbounds %struct.btrfs_super_block, ptr %9, i32 0, i32 20
  %38 = ptrtoint ptr %compat_flags.i to i32
  call void @__asan_loadN_noabort(i32 %38, i32 8)
  %39 = load i64, ptr %compat_flags.i, align 1
  %40 = call i64 @llvm.bswap.i64(i64 %39) #20
  %41 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %flags, align 8
  %43 = ptrtoint ptr %12 to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %12, align 8
  %and = and i64 %44, %42
  %or = or i64 %and, %40
  %.not = xor i64 %42, -1
  %neg59 = or i64 %44, %.not
  %and60 = and i64 %or, %neg59
  %45 = call i64 @llvm.bswap.i64(i64 %and60) #20
  %46 = ptrtoint ptr %compat_flags.i to i32
  call void @__asan_storeN_noabort(i32 %46, i32 8)
  store i64 %45, ptr %compat_flags.i, align 1
  %compat_ro_flags.i = getelementptr inbounds %struct.btrfs_super_block, ptr %9, i32 0, i32 21
  %47 = ptrtoint ptr %compat_ro_flags.i to i32
  call void @__asan_loadN_noabort(i32 %47, i32 8)
  %48 = load i64, ptr %compat_ro_flags.i, align 1
  %49 = call i64 @llvm.bswap.i64(i64 %48) #20
  %50 = ptrtoint ptr %10 to i32
  call void @__asan_load8_noabort(i32 %50)
  %51 = load i64, ptr %10, align 8
  %52 = ptrtoint ptr %13 to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %13, align 8
  %and66 = and i64 %53, %51
  %or67 = or i64 %and66, %49
  %.not131 = xor i64 %51, -1
  %neg74 = or i64 %53, %.not131
  %and75 = and i64 %or67, %neg74
  %54 = call i64 @llvm.bswap.i64(i64 %and75) #20
  %55 = ptrtoint ptr %compat_ro_flags.i to i32
  call void @__asan_storeN_noabort(i32 %55, i32 8)
  store i64 %54, ptr %compat_ro_flags.i, align 1
  %incompat_flags.i = getelementptr inbounds %struct.btrfs_super_block, ptr %9, i32 0, i32 22
  %56 = ptrtoint ptr %incompat_flags.i to i32
  call void @__asan_loadN_noabort(i32 %56, i32 8)
  %57 = load i64, ptr %incompat_flags.i, align 1
  %58 = call i64 @llvm.bswap.i64(i64 %57) #20
  %59 = ptrtoint ptr %11 to i32
  call void @__asan_load8_noabort(i32 %59)
  %60 = load i64, ptr %11, align 8
  %61 = ptrtoint ptr %14 to i32
  call void @__asan_load8_noabort(i32 %61)
  %62 = load i64, ptr %14, align 8
  %and81 = and i64 %62, %60
  %or82 = or i64 %and81, %58
  %.not132 = xor i64 %60, -1
  %neg89 = or i64 %62, %.not132
  %and90 = and i64 %or82, %neg89
  %63 = call i64 @llvm.bswap.i64(i64 %and90) #20
  %64 = ptrtoint ptr %incompat_flags.i to i32
  call void @__asan_storeN_noabort(i32 %64, i32 8)
  store i64 %63, ptr %incompat_flags.i, align 1
  call void @_raw_spin_unlock(ptr noundef %super_lock) #20
  %call92 = call i32 @btrfs_commit_transaction(ptr noundef %call44) #20
  br label %out_drop_write

out_drop_write:                                   ; preds = %if.end48, %if.then46
  %ret.0 = phi i32 [ %37, %if.then46 ], [ %call92, %if.end48 ]
  call void @mnt_drop_write_file(ptr noundef %file) #20
  br label %cleanup

cleanup:                                          ; preds = %out_drop_write, %if.end39.cleanup_crit_edge, %if.end31.cleanup_crit_edge, %if.end23.cleanup_crit_edge, %if.end15.cleanup_crit_edge, %land.lhs.true11.cleanup_crit_edge, %if.then11.i.i, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %out_drop_write ], [ -1, %entry.cleanup_crit_edge ], [ 0, %land.lhs.true11.cleanup_crit_edge ], [ %call20, %if.end15.cleanup_crit_edge ], [ %call28, %if.end23.cleanup_crit_edge ], [ %call36, %if.end31.cleanup_crit_edge ], [ %call40, %if.end39.cleanup_crit_edge ], [ -14, %if.then11.i.i ]
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %flags) #20
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_get_subvol_info(ptr nocapture noundef readonly %file, ptr noundef %argp) unnamed_addr #0 align 64 {
entry:
  %disk_key.i = alloca %struct.btrfs_disk_key, align 8
  %key = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key) #20
  %0 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %1 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  %2 = getelementptr inbounds i8, ptr %key, i32 8
  %3 = call ptr @memset(ptr %2, i32 255, i32 9)
  %call = tail call ptr @btrfs_alloc_path() #20
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %4 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %4, i32 noundef 3520, i32 noundef 504) #26
  %tobool2.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool2.not, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @btrfs_free_path(ptr noundef nonnull %call) #20
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %5 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %f_inode.i, align 8
  %add.ptr.i = getelementptr i8, ptr %6, i32 -864
  %7 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %add.ptr.i, align 8
  %fs_info8 = getelementptr inbounds %struct.btrfs_root, ptr %8, i32 0, i32 8
  %9 = ptrtoint ptr %fs_info8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %fs_info8, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %8, i32 0, i32 7
  %11 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %11, i32 8)
  %12 = load i64, ptr %root_key, align 1
  %13 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %12, ptr %key, align 8
  %call13 = tail call ptr @btrfs_get_fs_root(ptr noundef %10, i64 noundef %12, i1 noundef zeroext true) #20
  %cmp.i = icmp ugt ptr %call13, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then15, label %if.end17

if.then15:                                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #22
  %14 = ptrtoint ptr %call13 to i32
  br label %out_free

if.end17:                                         ; preds = %if.end4
  %15 = ptrtoint ptr %key to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %key, align 8
  %17 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %16, ptr %call7.i.i, align 8
  %generation.i = getelementptr inbounds %struct.btrfs_root, ptr %call13, i32 0, i32 6, i32 1
  %18 = ptrtoint ptr %generation.i to i32
  call void @__asan_loadN_noabort(i32 %18, i32 8)
  %19 = load i64, ptr %generation.i, align 1
  %20 = tail call i64 @llvm.bswap.i64(i64 %19) #20
  %generation = getelementptr inbounds %struct.btrfs_ioctl_get_subvol_info_args, ptr %call7.i.i, i32 0, i32 4
  %21 = ptrtoint ptr %generation to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %20, ptr %generation, align 8
  %flags.i = getelementptr inbounds %struct.btrfs_root, ptr %call13, i32 0, i32 6, i32 7
  %22 = ptrtoint ptr %flags.i to i32
  call void @__asan_loadN_noabort(i32 %22, i32 8)
  %23 = load i64, ptr %flags.i, align 1
  %24 = tail call i64 @llvm.bswap.i64(i64 %23) #20
  %flags = getelementptr inbounds %struct.btrfs_ioctl_get_subvol_info_args, ptr %call7.i.i, i32 0, i32 5
  %25 = ptrtoint ptr %flags to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %24, ptr %flags, align 8
  %uuid = getelementptr inbounds %struct.btrfs_ioctl_get_subvol_info_args, ptr %call7.i.i, i32 0, i32 6
  %uuid22 = getelementptr inbounds %struct.btrfs_root, ptr %call13, i32 0, i32 6, i32 13
  %26 = call ptr @memcpy(ptr %uuid, ptr %uuid22, i32 16)
  %parent_uuid = getelementptr inbounds %struct.btrfs_ioctl_get_subvol_info_args, ptr %call7.i.i, i32 0, i32 7
  %parent_uuid25 = getelementptr inbounds %struct.btrfs_root, ptr %call13, i32 0, i32 6, i32 14
  %27 = call ptr @memcpy(ptr %parent_uuid, ptr %parent_uuid25, i32 16)
  %received_uuid = getelementptr inbounds %struct.btrfs_ioctl_get_subvol_info_args, ptr %call7.i.i, i32 0, i32 8
  %received_uuid28 = getelementptr inbounds %struct.btrfs_root, ptr %call13, i32 0, i32 6, i32 15
  %28 = call ptr @memcpy(ptr %received_uuid, ptr %received_uuid28, i32 16)
  %ctransid.i = getelementptr inbounds %struct.btrfs_root, ptr %call13, i32 0, i32 6, i32 16
  %29 = ptrtoint ptr %ctransid.i to i32
  call void @__asan_loadN_noabort(i32 %29, i32 8)
  %30 = load i64, ptr %ctransid.i, align 1
  %31 = tail call i64 @llvm.bswap.i64(i64 %30) #20
  %ctransid = getelementptr inbounds %struct.btrfs_ioctl_get_subvol_info_args, ptr %call7.i.i, i32 0, i32 9
  %32 = ptrtoint ptr %ctransid to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %31, ptr %ctransid, align 8
  %ctime = getelementptr inbounds %struct.btrfs_root, ptr %call13, i32 0, i32 6, i32 20
  %33 = ptrtoint ptr %ctime to i32
  call void @__asan_loadN_noabort(i32 %33, i32 8)
  %34 = load i64, ptr %ctime, align 1
  %35 = tail call i64 @llvm.bswap.i64(i64 %34) #20
  %ctime32 = getelementptr inbounds %struct.btrfs_ioctl_get_subvol_info_args, ptr %call7.i.i, i32 0, i32 13
  %36 = ptrtoint ptr %ctime32 to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %35, ptr %ctime32, align 8
  %nsec.i = getelementptr inbounds %struct.btrfs_root, ptr %call13, i32 0, i32 6, i32 20, i32 1
  %37 = ptrtoint ptr %nsec.i to i32
  call void @__asan_loadN_noabort(i32 %37, i32 4)
  %38 = load i32, ptr %nsec.i, align 1
  %39 = tail call i32 @llvm.bswap.i32(i32 %38) #20
  %nsec = getelementptr inbounds %struct.btrfs_ioctl_get_subvol_info_args, ptr %call7.i.i, i32 0, i32 13, i32 1
  %40 = ptrtoint ptr %nsec to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %nsec, align 8
  %otransid.i = getelementptr inbounds %struct.btrfs_root, ptr %call13, i32 0, i32 6, i32 17
  %41 = ptrtoint ptr %otransid.i to i32
  call void @__asan_loadN_noabort(i32 %41, i32 8)
  %42 = load i64, ptr %otransid.i, align 1
  %43 = tail call i64 @llvm.bswap.i64(i64 %42) #20
  %otransid = getelementptr inbounds %struct.btrfs_ioctl_get_subvol_info_args, ptr %call7.i.i, i32 0, i32 10
  %44 = ptrtoint ptr %otransid to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %43, ptr %otransid, align 8
  %otime = getelementptr inbounds %struct.btrfs_root, ptr %call13, i32 0, i32 6, i32 21
  %45 = ptrtoint ptr %otime to i32
  call void @__asan_loadN_noabort(i32 %45, i32 8)
  %46 = load i64, ptr %otime, align 1
  %47 = tail call i64 @llvm.bswap.i64(i64 %46) #20
  %otime38 = getelementptr inbounds %struct.btrfs_ioctl_get_subvol_info_args, ptr %call7.i.i, i32 0, i32 14
  %48 = ptrtoint ptr %otime38 to i32
  call void @__asan_store8_noabort(i32 %48)
  store i64 %47, ptr %otime38, align 8
  %nsec.i186 = getelementptr inbounds %struct.btrfs_root, ptr %call13, i32 0, i32 6, i32 21, i32 1
  %49 = ptrtoint ptr %nsec.i186 to i32
  call void @__asan_loadN_noabort(i32 %49, i32 4)
  %50 = load i32, ptr %nsec.i186, align 1
  %51 = tail call i32 @llvm.bswap.i32(i32 %50) #20
  %nsec43 = getelementptr inbounds %struct.btrfs_ioctl_get_subvol_info_args, ptr %call7.i.i, i32 0, i32 14, i32 1
  %52 = ptrtoint ptr %nsec43 to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %51, ptr %nsec43, align 8
  %stransid.i = getelementptr inbounds %struct.btrfs_root, ptr %call13, i32 0, i32 6, i32 18
  %53 = ptrtoint ptr %stransid.i to i32
  call void @__asan_loadN_noabort(i32 %53, i32 8)
  %54 = load i64, ptr %stransid.i, align 1
  %55 = tail call i64 @llvm.bswap.i64(i64 %54) #20
  %stransid = getelementptr inbounds %struct.btrfs_ioctl_get_subvol_info_args, ptr %call7.i.i, i32 0, i32 11
  %56 = ptrtoint ptr %stransid to i32
  call void @__asan_store8_noabort(i32 %56)
  store i64 %55, ptr %stransid, align 8
  %stime = getelementptr inbounds %struct.btrfs_root, ptr %call13, i32 0, i32 6, i32 22
  %57 = ptrtoint ptr %stime to i32
  call void @__asan_loadN_noabort(i32 %57, i32 8)
  %58 = load i64, ptr %stime, align 1
  %59 = tail call i64 @llvm.bswap.i64(i64 %58) #20
  %stime46 = getelementptr inbounds %struct.btrfs_ioctl_get_subvol_info_args, ptr %call7.i.i, i32 0, i32 15
  %60 = ptrtoint ptr %stime46 to i32
  call void @__asan_store8_noabort(i32 %60)
  store i64 %59, ptr %stime46, align 8
  %nsec.i187 = getelementptr inbounds %struct.btrfs_root, ptr %call13, i32 0, i32 6, i32 22, i32 1
  %61 = ptrtoint ptr %nsec.i187 to i32
  call void @__asan_loadN_noabort(i32 %61, i32 4)
  %62 = load i32, ptr %nsec.i187, align 1
  %63 = tail call i32 @llvm.bswap.i32(i32 %62) #20
  %nsec51 = getelementptr inbounds %struct.btrfs_ioctl_get_subvol_info_args, ptr %call7.i.i, i32 0, i32 15, i32 1
  %64 = ptrtoint ptr %nsec51 to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %63, ptr %nsec51, align 8
  %rtransid.i = getelementptr inbounds %struct.btrfs_root, ptr %call13, i32 0, i32 6, i32 19
  %65 = ptrtoint ptr %rtransid.i to i32
  call void @__asan_loadN_noabort(i32 %65, i32 8)
  %66 = load i64, ptr %rtransid.i, align 1
  %67 = tail call i64 @llvm.bswap.i64(i64 %66) #20
  %rtransid = getelementptr inbounds %struct.btrfs_ioctl_get_subvol_info_args, ptr %call7.i.i, i32 0, i32 12
  %68 = ptrtoint ptr %rtransid to i32
  call void @__asan_store8_noabort(i32 %68)
  store i64 %67, ptr %rtransid, align 8
  %rtime = getelementptr inbounds %struct.btrfs_root, ptr %call13, i32 0, i32 6, i32 23
  %69 = ptrtoint ptr %rtime to i32
  call void @__asan_loadN_noabort(i32 %69, i32 8)
  %70 = load i64, ptr %rtime, align 1
  %71 = tail call i64 @llvm.bswap.i64(i64 %70) #20
  %rtime54 = getelementptr inbounds %struct.btrfs_ioctl_get_subvol_info_args, ptr %call7.i.i, i32 0, i32 16
  %72 = ptrtoint ptr %rtime54 to i32
  call void @__asan_store8_noabort(i32 %72)
  store i64 %71, ptr %rtime54, align 8
  %nsec.i188 = getelementptr inbounds %struct.btrfs_root, ptr %call13, i32 0, i32 6, i32 23, i32 1
  %73 = ptrtoint ptr %nsec.i188 to i32
  call void @__asan_loadN_noabort(i32 %73, i32 4)
  %74 = load i32, ptr %nsec.i188, align 1
  %75 = tail call i32 @llvm.bswap.i32(i32 %74) #20
  %nsec59 = getelementptr inbounds %struct.btrfs_ioctl_get_subvol_info_args, ptr %call7.i.i, i32 0, i32 16, i32 1
  %76 = ptrtoint ptr %nsec59 to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 %75, ptr %nsec59, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 5, i64 %16)
  %cmp.not = icmp eq i64 %16, 5
  br i1 %cmp.not, label %if.end17.if.end8.i.i_crit_edge, label %if.then61

if.end17.if.end8.i.i_crit_edge:                   ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8.i.i

if.then61:                                        ; preds = %if.end17
  %77 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %77)
  store i8 -112, ptr %0, align 8
  %78 = ptrtoint ptr %1 to i32
  call void @__asan_storeN_noabort(i32 %78, i32 8)
  store i64 0, ptr %1, align 1
  %tree_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %10, i32 0, i32 2
  %79 = ptrtoint ptr %tree_root to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %tree_root, align 4
  %call62 = call i32 @btrfs_search_slot(ptr noundef null, ptr noundef %80, ptr noundef nonnull %key, ptr noundef nonnull %call, i32 noundef 0, i32 noundef 0) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call62)
  %cmp63 = icmp slt i32 %call62, 0
  br i1 %cmp63, label %if.then61.out_crit_edge, label %if.else

if.then61.out_crit_edge:                          ; preds = %if.then61
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.else:                                          ; preds = %if.then61
  %slots = getelementptr inbounds %struct.btrfs_path, ptr %call, i32 0, i32 1
  %81 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %slots, align 4
  %83 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %call, align 4
  %pages.i = getelementptr inbounds %struct.extent_buffer, ptr %84, i32 0, i32 12
  %85 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %pages.i, align 4
  %call.i = call ptr @page_address(ptr noundef %86) #20
  %87 = ptrtoint ptr %84 to i32
  call void @__asan_load8_noabort(i32 %87)
  %88 = load i64, ptr %84, align 8
  %conv.i = trunc i64 %88 to i32
  %and.i = and i32 %conv.i, 4095
  %add.ptr.i189 = getelementptr i8, ptr %call.i, i32 %and.i
  %nritems.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i189, i32 0, i32 7
  %89 = ptrtoint ptr %nritems.i to i32
  call void @__asan_loadN_noabort(i32 %89, i32 4)
  %90 = load i32, ptr %nritems.i, align 1
  %91 = call i32 @llvm.bswap.i32(i32 %90) #20
  call void @__sanitizer_cov_trace_cmp4(i32 %82, i32 %91)
  %cmp67.not = icmp ult i32 %82, %91
  br i1 %cmp67.not, label %if.else.if.end79_crit_edge, label %if.then68

if.else.if.end79_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end79

if.then68:                                        ; preds = %if.else
  %92 = ptrtoint ptr %tree_root to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %tree_root, align 4
  %call.i190 = call i32 @btrfs_next_old_leaf(ptr noundef %93, ptr noundef nonnull %call, i64 noundef 0) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i190)
  %cmp71 = icmp slt i32 %call.i190, 0
  br i1 %cmp71, label %if.then68.out_crit_edge, label %if.else73

if.then68.out_crit_edge:                          ; preds = %if.then68
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.else73:                                        ; preds = %if.then68
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i190)
  %cmp74.not = icmp eq i32 %call.i190, 0
  br i1 %cmp74.not, label %if.else73.if.end79_crit_edge, label %if.else73.out_crit_edge

if.else73.out_crit_edge:                          ; preds = %if.else73
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.else73.if.end79_crit_edge:                     ; preds = %if.else73
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end79

if.end79:                                         ; preds = %if.else73.if.end79_crit_edge, %if.else.if.end79_crit_edge
  %ret.0 = phi i32 [ 0, %if.else73.if.end79_crit_edge ], [ %call62, %if.else.if.end79_crit_edge ]
  %94 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %call, align 4
  %96 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %slots, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %disk_key.i) #20
  %98 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i, i32 0, i32 1
  %99 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i, i32 0, i32 2
  %mul.i.i.i.i = mul i32 %97, 25
  %add.i.i.i.i = add i32 %mul.i.i.i.i, 101
  %100 = call ptr @memset(ptr %disk_key.i, i32 255, i32 17)
  call void @read_extent_buffer(ptr noundef %95, ptr noundef nonnull %disk_key.i, i32 noundef %add.i.i.i.i, i32 noundef 17) #20
  %101 = ptrtoint ptr %99 to i32
  call void @__asan_loadN_noabort(i32 %101, i32 8)
  %102 = load i64, ptr %99, align 1
  %103 = call i64 @llvm.bswap.i64(i64 %102) #20
  %104 = ptrtoint ptr %1 to i32
  call void @__asan_storeN_noabort(i32 %104, i32 8)
  store i64 %103, ptr %1, align 1
  %105 = ptrtoint ptr %98 to i32
  call void @__asan_load1_noabort(i32 %105)
  %106 = load i8, ptr %98, align 8
  %107 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %107)
  store i8 %106, ptr %0, align 8
  %108 = ptrtoint ptr %disk_key.i to i32
  call void @__asan_load8_noabort(i32 %108)
  %109 = load i64, ptr %disk_key.i, align 8
  %110 = call i64 @llvm.bswap.i64(i64 %109) #20
  %111 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %111)
  store i64 %110, ptr %key, align 8
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %disk_key.i) #20
  %112 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_load8_noabort(i32 %112)
  %113 = load i64, ptr %call7.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %110, i64 %113)
  %cmp86 = icmp eq i64 %110, %113
  call void @__sanitizer_cov_trace_const_cmp1(i8 -112, i8 %106)
  %cmp88 = icmp eq i8 %106, -112
  %or.cond = select i1 %cmp86, i1 %cmp88, i1 false
  br i1 %or.cond, label %if.then90, label %if.end79.out_crit_edge

if.end79.out_crit_edge:                           ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.then90:                                        ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #22
  %parent_id = getelementptr inbounds %struct.btrfs_ioctl_get_subvol_info_args, ptr %call7.i.i, i32 0, i32 2
  %114 = ptrtoint ptr %parent_id to i32
  call void @__asan_store8_noabort(i32 %114)
  store i64 %103, ptr %parent_id, align 8
  %115 = inttoptr i32 %add.i.i.i.i to ptr
  %call.i.i191 = call i32 @btrfs_get_32(ptr noundef %95, ptr noundef %115, i32 noundef 17) #20
  %add = add i32 %call.i.i191, 101
  %116 = inttoptr i32 %add to ptr
  %call.i192 = call i64 @btrfs_get_64(ptr noundef %95, ptr noundef %116, i32 noundef 0) #20
  %dirid = getelementptr inbounds %struct.btrfs_ioctl_get_subvol_info_args, ptr %call7.i.i, i32 0, i32 3
  %117 = ptrtoint ptr %dirid to i32
  call void @__asan_store8_noabort(i32 %117)
  store i64 %call.i192, ptr %dirid, align 8
  %call.i.i195 = call i32 @btrfs_get_32(ptr noundef %95, ptr noundef %115, i32 noundef 17) #20
  %add96 = add i32 %call.i.i195, 119
  %call.i.i198 = call i32 @btrfs_get_32(ptr noundef %95, ptr noundef %115, i32 noundef 21) #20
  %sub = add i32 %call.i.i198, -18
  %name = getelementptr inbounds %struct.btrfs_ioctl_get_subvol_info_args, ptr %call7.i.i, i32 0, i32 1
  call void @read_extent_buffer(ptr noundef %95, ptr noundef %name, i32 noundef %add96, i32 noundef %sub) #20
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %if.then90, %if.end17.if.end8.i.i_crit_edge
  %ret.1 = phi i32 [ %ret.0, %if.then90 ], [ 0, %if.end17.if.end8.i.i_crit_edge ]
  call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i = call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end8.i.i.out_crit_edge, label %if.end.i.i

if.end8.i.i.out_crit_edge:                        ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end.i.i:                                       ; preds = %if.end8.i.i
  %118 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %argp, i32 504, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i = extractvalue { i32, i32 } %118, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.out_crit_edge

if.end.i.i.out_crit_edge:                         ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %call7.i.i, i32 noundef 504) #20
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef %argp, ptr noundef nonnull %call7.i.i, i32 noundef 504) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool103.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool103.not, i32 %ret.1, i32 -14
  br label %out

out:                                              ; preds = %copy_to_user.exit, %if.end.i.i.out_crit_edge, %if.end8.i.i.out_crit_edge, %if.end79.out_crit_edge, %if.else73.out_crit_edge, %if.then68.out_crit_edge, %if.then61.out_crit_edge
  %ret.2 = phi i32 [ %call62, %if.then61.out_crit_edge ], [ %call.i190, %if.then68.out_crit_edge ], [ -117, %if.else73.out_crit_edge ], [ -2, %if.end79.out_crit_edge ], [ -14, %if.end8.i.i.out_crit_edge ], [ -14, %if.end.i.i.out_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  call void @btrfs_put_root(ptr noundef %call13) #20
  br label %out_free

out_free:                                         ; preds = %out, %if.then15
  %ret.3 = phi i32 [ %14, %if.then15 ], [ %ret.2, %out ]
  call void @btrfs_free_path(ptr noundef nonnull %call) #20
  call void @kfree(ptr noundef nonnull %call7.i.i) #20
  br label %cleanup

cleanup:                                          ; preds = %out_free, %if.then3, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.3, %out_free ], [ -12, %if.then3 ], [ -12, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key) #20
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_get_subvol_rootref(ptr nocapture noundef readonly %file, ptr noundef %argp) unnamed_addr #0 align 64 {
entry:
  %disk_key.i = alloca %struct.btrfs_disk_key, align 8
  %key = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key) #20
  %0 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %1 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  %call = tail call ptr @btrfs_alloc_path() #20
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call ptr @memdup_user(ptr noundef %argp, i32 noundef 4096) #20
  %cmp.i = icmp ugt ptr %call1, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @btrfs_free_path(ptr noundef nonnull %call) #20
  %2 = ptrtoint ptr %call1 to i32
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %3 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %f_inode.i, align 8
  %add.ptr.i = getelementptr i8, ptr %4, i32 -864
  %5 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %add.ptr.i, align 8
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %6, i32 0, i32 8
  %7 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %fs_info, align 8
  %tree_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %tree_root to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tree_root, align 4
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %6, i32 0, i32 7
  %11 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %11, i32 8)
  %12 = load i64, ptr %root_key, align 1
  %13 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %12, ptr %key, align 8
  %14 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 -100, ptr %0, align 8
  %15 = ptrtoint ptr %call1 to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %call1, align 8
  %17 = ptrtoint ptr %1 to i32
  call void @__asan_storeN_noabort(i32 %17, i32 8)
  store i64 %16, ptr %1, align 1
  %call13 = call i32 @btrfs_search_slot(ptr noundef null, ptr noundef %10, ptr noundef nonnull %key, ptr noundef nonnull %call, i32 noundef 0, i32 noundef 0) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %cmp = icmp slt i32 %call13, 0
  br i1 %cmp, label %if.end5.out_crit_edge, label %if.else

if.end5.out_crit_edge:                            ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.else:                                          ; preds = %if.end5
  %slots = getelementptr inbounds %struct.btrfs_path, ptr %call, i32 0, i32 1
  %18 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %slots, align 4
  %20 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %call, align 4
  %pages.i = getelementptr inbounds %struct.extent_buffer, ptr %21, i32 0, i32 12
  %22 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pages.i, align 4
  %call.i = call ptr @page_address(ptr noundef %23) #20
  %24 = ptrtoint ptr %21 to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %21, align 8
  %conv.i = trunc i64 %25 to i32
  %and.i = and i32 %conv.i, 4095
  %add.ptr.i131 = getelementptr i8, ptr %call.i, i32 %and.i
  %nritems.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i131, i32 0, i32 7
  %26 = ptrtoint ptr %nritems.i to i32
  call void @__asan_loadN_noabort(i32 %26, i32 4)
  %27 = load i32, ptr %nritems.i, align 1
  %28 = call i32 @llvm.bswap.i32(i32 %27) #20
  call void @__sanitizer_cov_trace_cmp4(i32 %19, i32 %28)
  %cmp17.not = icmp ult i32 %19, %28
  br i1 %cmp17.not, label %if.else.if.end28_crit_edge, label %if.then18

if.else.if.end28_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end28

if.then18:                                        ; preds = %if.else
  %call.i132 = call i32 @btrfs_next_old_leaf(ptr noundef %10, ptr noundef nonnull %call, i64 noundef 0) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i132)
  %cmp20 = icmp slt i32 %call.i132, 0
  br i1 %cmp20, label %if.then18.out_crit_edge, label %if.else22

if.then18.out_crit_edge:                          ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.else22:                                        ; preds = %if.then18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i132)
  %cmp23.not = icmp eq i32 %call.i132, 0
  br i1 %cmp23.not, label %if.else22.if.end28_crit_edge, label %if.else22.if.end80_crit_edge

if.else22.if.end80_crit_edge:                     ; preds = %if.else22
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end80

if.else22.if.end28_crit_edge:                     ; preds = %if.else22
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end28

if.end28:                                         ; preds = %if.else22.if.end28_crit_edge, %if.else.if.end28_crit_edge
  %29 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i, i32 0, i32 1
  %30 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i, i32 0, i32 2
  br label %while.cond

while.cond:                                       ; preds = %if.else56.while.cond_crit_edge, %if.end28
  %indvars.iv = phi i32 [ %indvars.iv.next, %if.else56.while.cond_crit_edge ], [ 0, %if.end28 ]
  %31 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %call, align 4
  %33 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %slots, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %disk_key.i) #20
  %mul.i.i.i.i = mul i32 %34, 25
  %add.i.i.i.i = add i32 %mul.i.i.i.i, 101
  %35 = call ptr @memset(ptr %disk_key.i, i32 255, i32 17)
  call void @read_extent_buffer(ptr noundef %32, ptr noundef nonnull %disk_key.i, i32 noundef %add.i.i.i.i, i32 noundef 17) #20
  %36 = ptrtoint ptr %30 to i32
  call void @__asan_loadN_noabort(i32 %36, i32 8)
  %37 = load i64, ptr %30, align 1
  %38 = call i64 @llvm.bswap.i64(i64 %37) #20
  %39 = ptrtoint ptr %1 to i32
  call void @__asan_storeN_noabort(i32 %39, i32 8)
  store i64 %38, ptr %1, align 1
  %40 = ptrtoint ptr %29 to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %29, align 8
  %42 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 %41, ptr %0, align 8
  %43 = ptrtoint ptr %disk_key.i to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %disk_key.i, align 8
  %45 = call i64 @llvm.bswap.i64(i64 %44) #20
  %46 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 %45, ptr %key, align 8
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %disk_key.i) #20
  call void @__sanitizer_cov_trace_cmp8(i64 %45, i64 %12)
  %cmp34.not = icmp eq i64 %45, %12
  call void @__sanitizer_cov_trace_const_cmp1(i8 -100, i8 %41)
  %cmp36.not = icmp eq i8 %41, -100
  %or.cond = select i1 %cmp34.not, i1 %cmp36.not, i1 false
  br i1 %or.cond, label %if.end39, label %if.then66.loopexit

if.end39:                                         ; preds = %while.cond
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %indvars.iv)
  %cmp41 = icmp eq i32 %indvars.iv, 255
  br i1 %cmp41, label %if.then66.thread, label %if.end44

if.then66.thread:                                 ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #22
  %num_items154 = getelementptr inbounds %struct.btrfs_ioctl_get_subvol_rootref_args, ptr %call1, i32 0, i32 2
  %47 = ptrtoint ptr %num_items154 to i32
  call void @__asan_store1_noabort(i32 %47)
  store i8 -1, ptr %num_items154, align 8
  br label %if.then68

if.end44:                                         ; preds = %if.end39
  %48 = inttoptr i32 %add.i.i.i.i to ptr
  %call.i.i133 = call i32 @btrfs_get_32(ptr noundef %32, ptr noundef %48, i32 noundef 17) #20
  %add = add i32 %call.i.i133, 101
  %49 = inttoptr i32 %add to ptr
  %50 = ptrtoint ptr %1 to i32
  call void @__asan_loadN_noabort(i32 %50, i32 8)
  %51 = load i64, ptr %1, align 1
  %arrayidx47 = getelementptr %struct.btrfs_ioctl_get_subvol_rootref_args, ptr %call1, i32 0, i32 1, i32 %indvars.iv
  %52 = ptrtoint ptr %arrayidx47 to i32
  call void @__asan_store8_noabort(i32 %52)
  store i64 %51, ptr %arrayidx47, align 8
  %call.i134 = call i64 @btrfs_get_64(ptr noundef %32, ptr noundef %49, i32 noundef 0) #20
  %dirid = getelementptr %struct.btrfs_ioctl_get_subvol_rootref_args, ptr %call1, i32 0, i32 1, i32 %indvars.iv, i32 1
  %53 = ptrtoint ptr %dirid to i32
  call void @__asan_store8_noabort(i32 %53)
  store i64 %call.i134, ptr %dirid, align 8
  %indvars.iv.next = add nuw nsw i32 %indvars.iv, 1
  %54 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %slots, align 4
  %inc.i.i = add i32 %55, 1
  store i32 %inc.i.i, ptr %slots, align 4
  %56 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %call, align 4
  %pages.i.i.i = getelementptr inbounds %struct.extent_buffer, ptr %57, i32 0, i32 12
  %58 = ptrtoint ptr %pages.i.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %pages.i.i.i, align 4
  %call.i.i.i135 = call ptr @page_address(ptr noundef %59) #20
  %60 = ptrtoint ptr %57 to i32
  call void @__asan_load8_noabort(i32 %60)
  %61 = load i64, ptr %57, align 8
  %conv.i.i.i = trunc i64 %61 to i32
  %and.i.i.i = and i32 %conv.i.i.i, 4095
  %add.ptr.i.i.i = getelementptr i8, ptr %call.i.i.i135, i32 %and.i.i.i
  %nritems.i.i.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i.i.i, i32 0, i32 7
  %62 = ptrtoint ptr %nritems.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %62, i32 4)
  %63 = load i32, ptr %nritems.i.i.i, align 1
  %64 = call i32 @llvm.bswap.i32(i32 %63) #20
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i.i, i32 %64)
  %cmp.not.i.i = icmp ult i32 %inc.i.i, %64
  br i1 %cmp.not.i.i, label %if.end44.if.else56_crit_edge, label %btrfs_next_item.exit

if.end44.if.else56_crit_edge:                     ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else56

btrfs_next_item.exit:                             ; preds = %if.end44
  %call4.i.i = call i32 @btrfs_next_old_leaf(ptr noundef %10, ptr noundef nonnull %call, i64 noundef 0) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %cmp53 = icmp slt i32 %call4.i.i, 0
  br i1 %cmp53, label %out.loopexit, label %btrfs_next_item.exit.if.else56_crit_edge

btrfs_next_item.exit.if.else56_crit_edge:         ; preds = %btrfs_next_item.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else56

if.else56:                                        ; preds = %btrfs_next_item.exit.if.else56_crit_edge, %if.end44.if.else56_crit_edge
  %retval.0.i.i139 = phi i32 [ %call4.i.i, %btrfs_next_item.exit.if.else56_crit_edge ], [ 0, %if.end44.if.else56_crit_edge ]
  %cmp57.not = icmp eq i32 %retval.0.i.i139, 0
  br i1 %cmp57.not, label %if.else56.while.cond_crit_edge, label %if.else56.if.end80_crit_edge

if.else56.if.end80_crit_edge:                     ; preds = %if.else56
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end80

if.else56.while.cond_crit_edge:                   ; preds = %if.else56
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.cond

out.loopexit:                                     ; preds = %btrfs_next_item.exit
  call void @__sanitizer_cov_trace_pc() #22
  %65 = trunc i32 %indvars.iv.next to i8
  br label %out

out:                                              ; preds = %out.loopexit, %if.then18.out_crit_edge, %if.end5.out_crit_edge
  %ret.0 = phi i32 [ %call13, %if.end5.out_crit_edge ], [ %call.i132, %if.then18.out_crit_edge ], [ %call4.i.i, %out.loopexit ]
  %found.1 = phi i8 [ 0, %if.end5.out_crit_edge ], [ 0, %if.then18.out_crit_edge ], [ %65, %out.loopexit ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -75, i32 %ret.0)
  %cond = icmp eq i32 %ret.0, -75
  br i1 %cond, label %out.if.then66_crit_edge, label %out.if.end80_crit_edge

out.if.end80_crit_edge:                           ; preds = %out
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end80

out.if.then66_crit_edge:                          ; preds = %out
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then66

if.then66.loopexit:                               ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #22
  %66 = trunc i32 %indvars.iv to i8
  br label %if.then66

if.then66:                                        ; preds = %if.then66.loopexit, %out.if.then66_crit_edge
  %found.1144 = phi i8 [ %found.1, %out.if.then66_crit_edge ], [ %66, %if.then66.loopexit ]
  %ret.0142 = phi i32 [ -75, %out.if.then66_crit_edge ], [ 0, %if.then66.loopexit ]
  %num_items = getelementptr inbounds %struct.btrfs_ioctl_get_subvol_rootref_args, ptr %call1, i32 0, i32 2
  %67 = ptrtoint ptr %num_items to i32
  call void @__asan_store1_noabort(i32 %67)
  store i8 %found.1144, ptr %num_items, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %found.1144)
  %tobool67.not = icmp eq i8 %found.1144, 0
  br i1 %tobool67.not, label %if.then66.if.end8.i.i_crit_edge, label %if.then66.if.then68_crit_edge

if.then66.if.then68_crit_edge:                    ; preds = %if.then66
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then68

if.then66.if.end8.i.i_crit_edge:                  ; preds = %if.then66
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8.i.i

if.then68:                                        ; preds = %if.then66.if.then68_crit_edge, %if.then66.thread
  %ret.0142157 = phi i32 [ -75, %if.then66.thread ], [ %ret.0142, %if.then66.if.then68_crit_edge ]
  %found.1143156 = phi i8 [ -1, %if.then66.thread ], [ %found.1144, %if.then66.if.then68_crit_edge ]
  %conv70 = zext i8 %found.1143156 to i32
  %sub = add nsw i32 %conv70, -1
  %arrayidx71 = getelementptr %struct.btrfs_ioctl_get_subvol_rootref_args, ptr %call1, i32 0, i32 1, i32 %sub
  %68 = ptrtoint ptr %arrayidx71 to i32
  call void @__asan_load8_noabort(i32 %68)
  %69 = load i64, ptr %arrayidx71, align 8
  %add73 = add i64 %69, 1
  %70 = ptrtoint ptr %call1 to i32
  call void @__asan_store8_noabort(i32 %70)
  store i64 %add73, ptr %call1, align 8
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %if.then68, %if.then66.if.end8.i.i_crit_edge
  %ret.0142158 = phi i32 [ %ret.0142157, %if.then68 ], [ %ret.0142, %if.then66.if.end8.i.i_crit_edge ]
  call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i = call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end8.i.i.if.end80_crit_edge, label %if.end.i.i

if.end8.i.i.if.end80_crit_edge:                   ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end80

if.end.i.i:                                       ; preds = %if.end8.i.i
  %71 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %argp, i32 4096, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i = extractvalue { i32, i32 } %71, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.if.end80_crit_edge

if.end.i.i.if.end80_crit_edge:                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end80

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %call1, i32 noundef 4096) #20
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef %argp, ptr noundef %call1, i32 noundef 4096) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool77.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool77.not, i32 %ret.0142158, i32 -14
  br label %if.end80

if.end80:                                         ; preds = %copy_to_user.exit, %if.end.i.i.if.end80_crit_edge, %if.end8.i.i.if.end80_crit_edge, %out.if.end80_crit_edge, %if.else56.if.end80_crit_edge, %if.else22.if.end80_crit_edge
  %ret.1 = phi i32 [ %ret.0, %out.if.end80_crit_edge ], [ -117, %if.else22.if.end80_crit_edge ], [ -14, %if.end8.i.i.if.end80_crit_edge ], [ -14, %if.end.i.i.if.end80_crit_edge ], [ %spec.select, %copy_to_user.exit ], [ -117, %if.else56.if.end80_crit_edge ]
  call void @kfree(ptr noundef %call1) #20
  call void @btrfs_free_path(ptr noundef nonnull %call) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end80, %if.then3, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %2, %if.then3 ], [ %ret.1, %if.end80 ], [ -12, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key) #20
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_ioctl_ino_lookup_user(ptr nocapture noundef readonly %file, ptr noundef %argp) unnamed_addr #0 align 64 {
entry:
  %disk_key.i215.i = alloca %struct.btrfs_disk_key, align 8
  %disk_key.i.i = alloca %struct.btrfs_disk_key, align 8
  %key.i = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @memdup_user(ptr noundef %argp, i32 noundef 4096) #20
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %0 = ptrtoint ptr %call to i32
  br label %cleanup

if.end:                                           ; preds = %entry
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %1 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %f_inode.i, align 8
  %3 = ptrtoint ptr %call to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %call, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 256, i64 %4)
  %cmp = icmp eq i64 %4, 256
  br i1 %cmp, label %land.lhs.true, label %if.end.if.end7_crit_edge

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end7

land.lhs.true:                                    ; preds = %if.end
  %location = getelementptr i8, ptr %2, i32 -860
  %5 = ptrtoint ptr %location to i32
  call void @__asan_loadN_noabort(i32 %5, i32 8)
  %6 = load i64, ptr %location, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 256, i64 %6)
  %cmp5.not = icmp eq i64 %6, 256
  br i1 %cmp5.not, label %land.lhs.true.if.end7_crit_edge, label %if.then6

land.lhs.true.if.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end7

if.then6:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @kfree(ptr noundef %call) #20
  br label %cleanup

if.end7:                                          ; preds = %land.lhs.true.if.end7_crit_edge, %if.end.if.end7_crit_edge
  %f_path.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 1
  %7 = ptrtoint ptr %f_path.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %f_path.i, align 8
  %mnt_userns.i.i = getelementptr inbounds %struct.vfsmount, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %mnt_userns.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile ptr, ptr %mnt_userns.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !199
  %add.ptr.i.i = getelementptr i8, ptr %2, i32 -864
  %11 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %add.ptr.i.i, align 8
  %fs_info1.i = getelementptr inbounds %struct.btrfs_root, ptr %12, i32 0, i32 8
  %13 = ptrtoint ptr %fs_info1.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %fs_info1.i, align 8
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %2, i32 0, i32 8
  %15 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %i_sb.i, align 4
  %location.i = getelementptr i8, ptr %2, i32 -860
  %17 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %17, i32 8)
  %upper_limit.sroa.0.0.copyload.i = load i64, ptr %location.i, align 4
  %root_key.i = getelementptr inbounds %struct.btrfs_root, ptr %12, i32 0, i32 7
  %18 = ptrtoint ptr %root_key.i to i32
  call void @__asan_loadN_noabort(i32 %18, i32 8)
  %19 = load i64, ptr %root_key.i, align 1
  %20 = ptrtoint ptr %call to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %call, align 8
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key.i) #20
  %22 = getelementptr inbounds %struct.btrfs_key, ptr %key.i, i32 0, i32 1
  %23 = getelementptr inbounds %struct.btrfs_key, ptr %key.i, i32 0, i32 2
  %24 = call ptr @memset(ptr %key.i, i32 255, i32 17)
  %call7.i = tail call ptr @btrfs_alloc_path() #20
  %tobool.not.i = icmp eq ptr %call7.i, null
  br i1 %tobool.not.i, label %btrfs_search_path_in_tree_user.exit.thread, label %if.end.i

btrfs_search_path_in_tree_user.exit.thread:       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key.i) #20
  br label %if.end14

if.end.i:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_cmp8(i64 %21, i64 %upper_limit.sroa.0.0.copyload.i)
  %cmp.not.i = icmp eq i64 %21, %upper_limit.sroa.0.0.copyload.i
  br i1 %cmp.not.i, label %if.end.i.if.end86.i_crit_edge, label %if.then9.i

if.end.i.if.end86.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end86.i

if.then9.i:                                       ; preds = %if.end.i
  %path10.i = getelementptr inbounds %struct.btrfs_ioctl_ino_lookup_user_args, ptr %call, i32 0, i32 3
  %call11.i = tail call ptr @btrfs_get_fs_root(ptr noundef %14, i64 noundef %19, i1 noundef zeroext true) #20
  %cmp.i.i27 = icmp ugt ptr %call11.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i27, label %if.then13.i, label %if.end15.i

if.then13.i:                                      ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #22
  %25 = ptrtoint ptr %call11.i to i32
  br label %btrfs_search_path_in_tree_user.exit

if.end15.i:                                       ; preds = %if.then9.i
  %26 = ptrtoint ptr %key.i to i32
  call void @__asan_store8_noabort(i32 %26)
  store i64 %21, ptr %key.i, align 8
  %27 = ptrtoint ptr %22 to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 12, ptr %22, align 8
  %28 = ptrtoint ptr %23 to i32
  call void @__asan_storeN_noabort(i32 %28, i32 8)
  store i64 -1, ptr %23, align 1
  %call17233.i = call i32 @btrfs_search_backwards(ptr noundef %call11.i, ptr noundef nonnull %key.i, ptr noundef nonnull %call7.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17233.i)
  %cmp18234.i = icmp slt i32 %call17233.i, 0
  br i1 %cmp18234.i, label %if.end15.i.out_put.i_crit_edge, label %if.else.lr.ph.i

if.end15.i.out_put.i_crit_edge:                   ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_put.i

if.else.lr.ph.i:                                  ; preds = %if.end15.i
  %arrayidx.i = getelementptr %struct.btrfs_ioctl_ino_lookup_user_args, ptr %call, i32 0, i32 3, i32 3823
  %slots.i = getelementptr inbounds %struct.btrfs_path, ptr %call7.i, i32 0, i32 1
  br label %if.else.i

if.else.i:                                        ; preds = %if.end77.i.if.else.i_crit_edge, %if.else.lr.ph.i
  %call17238.i = phi i32 [ %call17233.i, %if.else.lr.ph.i ], [ %call17.i, %if.end77.i.if.else.i_crit_edge ]
  %total_len.0237.i = phi i32 [ 0, %if.else.lr.ph.i ], [ %add30.i, %if.end77.i.if.else.i_crit_edge ]
  %ptr.0236.i = phi ptr [ %arrayidx.i, %if.else.lr.ph.i ], [ %add.ptr.i30, %if.end77.i.if.else.i_crit_edge ]
  %dirid.0235.i = phi i64 [ %21, %if.else.lr.ph.i ], [ %51, %if.end77.i.if.else.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17238.i)
  %cmp20.not.i = icmp eq i32 %call17238.i, 0
  br i1 %cmp20.not.i, label %if.end23.i, label %if.else.i.out_put.i_crit_edge

if.else.i.out_put.i_crit_edge:                    ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_put.i

if.end23.i:                                       ; preds = %if.else.i
  %29 = ptrtoint ptr %call7.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %call7.i, align 4
  %31 = ptrtoint ptr %slots.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %slots.i, align 4
  %mul.i.i.i.i = mul i32 %32, 25
  %add.i.i.i.i = add i32 %mul.i.i.i.i, 101
  %33 = inttoptr i32 %add.i.i.i.i to ptr
  %call.i.i.i28 = call i32 @btrfs_get_32(ptr noundef %30, ptr noundef %33, i32 noundef 17) #20
  %add.i = add i32 %call.i.i.i28, 101
  %34 = inttoptr i32 %add.i to ptr
  %call.i.i29 = call zeroext i16 @btrfs_get_16(ptr noundef %30, ptr noundef %34, i32 noundef 8) #20
  %conv.i = zext i16 %call.i.i29 to i32
  %idx.neg.i = xor i32 %conv.i, -1
  %add.ptr.i30 = getelementptr i8, ptr %ptr.0236.i, i32 %idx.neg.i
  %add28.i = add i32 %total_len.0237.i, 1
  %add30.i = add i32 %add28.i, %conv.i
  %cmp32.i = icmp ult ptr %add.ptr.i30, %path10.i
  br i1 %cmp32.i, label %if.end23.i.out_put.i_crit_edge, label %if.end35.i

if.end23.i.out_put.i_crit_edge:                   ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_put.i

if.end35.i:                                       ; preds = %if.end23.i
  %add.ptr36.i = getelementptr i8, ptr %ptr.0236.i, i32 -1
  %35 = ptrtoint ptr %add.ptr36.i to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 47, ptr %add.ptr36.i, align 1
  %add.ptr37.i = getelementptr %struct.btrfs_inode_ref, ptr %34, i32 1
  %36 = ptrtoint ptr %add.ptr37.i to i32
  call void @read_extent_buffer(ptr noundef %30, ptr noundef %add.ptr.i30, i32 noundef %36, i32 noundef %conv.i) #20
  %call38.i = call i32 @btrfs_previous_item(ptr noundef %call11.i, ptr noundef nonnull %call7.i, i64 noundef %dirid.0235.i, i32 noundef 1) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call38.i)
  %cmp39.i = icmp slt i32 %call38.i, 0
  br i1 %cmp39.i, label %if.end35.i.out_put.i_crit_edge, label %if.else42.i

if.end35.i.out_put.i_crit_edge:                   ; preds = %if.end35.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_put.i

if.else42.i:                                      ; preds = %if.end35.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call38.i)
  %cmp43.not.i = icmp eq i32 %call38.i, 0
  br i1 %cmp43.not.i, label %if.end47.i, label %if.else42.i.out_put.i_crit_edge

if.else42.i.out_put.i_crit_edge:                  ; preds = %if.else42.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_put.i

if.end47.i:                                       ; preds = %if.else42.i
  %37 = ptrtoint ptr %call7.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %call7.i, align 4
  %39 = ptrtoint ptr %slots.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %slots.i, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %disk_key.i.i) #20
  %mul.i.i.i.i.i = mul i32 %40, 25
  %add.i.i.i.i.i = add i32 %mul.i.i.i.i.i, 101
  %41 = call ptr @memset(ptr %disk_key.i.i, i32 255, i32 17)
  call void @read_extent_buffer(ptr noundef %38, ptr noundef nonnull %disk_key.i.i, i32 noundef %add.i.i.i.i.i, i32 noundef 17) #20
  %42 = ptrtoint ptr %disk_key.i.i to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %disk_key.i.i, align 8
  %44 = call i64 @llvm.bswap.i64(i64 %43) #20
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %disk_key.i.i) #20
  call void @__sanitizer_cov_trace_cmp8(i64 %44, i64 %dirid.0235.i)
  %cmp53.not.i = icmp eq i64 %44, %dirid.0235.i
  br i1 %cmp53.not.i, label %if.end56.i, label %if.end47.i.out_put.i_crit_edge

if.end47.i.out_put.i_crit_edge:                   ; preds = %if.end47.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_put.i

if.end56.i:                                       ; preds = %if.end47.i
  %call58.i = call ptr @btrfs_iget(ptr noundef %16, i64 noundef %dirid.0235.i, ptr noundef %call11.i) #20
  %cmp.i214.i = icmp ugt ptr %call58.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i214.i, label %if.then60.i, label %if.end62.i

if.then60.i:                                      ; preds = %if.end56.i
  call void @__sanitizer_cov_trace_pc() #22
  %45 = ptrtoint ptr %call58.i to i32
  br label %out_put.i

if.end62.i:                                       ; preds = %if.end56.i
  %call63.i = call i32 @inode_permission(ptr noundef %10, ptr noundef %call58.i, i32 noundef 5) #20
  call void @iput(ptr noundef %call58.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call63.i)
  %tobool64.not.i = icmp eq i32 %call63.i, 0
  br i1 %tobool64.not.i, label %if.end66.i, label %if.end62.i.out_put.i_crit_edge

if.end62.i.out_put.i_crit_edge:                   ; preds = %if.end62.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_put.i

if.end66.i:                                       ; preds = %if.end62.i
  %46 = ptrtoint ptr %23 to i32
  call void @__asan_loadN_noabort(i32 %46, i32 8)
  %47 = load i64, ptr %23, align 1
  call void @__sanitizer_cov_trace_cmp8(i64 %47, i64 %upper_limit.sroa.0.0.copyload.i)
  %cmp69.i = icmp eq i64 %47, %upper_limit.sroa.0.0.copyload.i
  br i1 %cmp69.i, label %while.end.i, label %if.end72.i

if.end72.i:                                       ; preds = %if.end66.i
  %48 = ptrtoint ptr %key.i to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %key.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 256, i64 %49)
  %cmp74.i = icmp eq i64 %49, 256
  br i1 %cmp74.i, label %if.end72.i.out_put.i_crit_edge, label %if.end77.i

if.end72.i.out_put.i_crit_edge:                   ; preds = %if.end72.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_put.i

if.end77.i:                                       ; preds = %if.end72.i
  call void @btrfs_release_path(ptr noundef nonnull %call7.i) #20
  %50 = ptrtoint ptr %23 to i32
  call void @__asan_loadN_noabort(i32 %50, i32 8)
  %51 = load i64, ptr %23, align 1
  %52 = ptrtoint ptr %key.i to i32
  call void @__asan_store8_noabort(i32 %52)
  store i64 %51, ptr %key.i, align 8
  store i64 -1, ptr %23, align 1
  %call17.i = call i32 @btrfs_search_backwards(ptr noundef %call11.i, ptr noundef nonnull %key.i, ptr noundef nonnull %call7.i) #20
  %cmp18.i = icmp slt i32 %call17.i, 0
  br i1 %cmp18.i, label %if.end77.i.out_put.i_crit_edge, label %if.end77.i.if.else.i_crit_edge

if.end77.i.if.else.i_crit_edge:                   ; preds = %if.end77.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else.i

if.end77.i.out_put.i_crit_edge:                   ; preds = %if.end77.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_put.i

while.end.i:                                      ; preds = %if.end66.i
  call void @__sanitizer_cov_trace_pc() #22
  %53 = call ptr @memmove(ptr %path10.i, ptr %add.ptr.i30, i32 %add30.i)
  %arrayidx85.i = getelementptr %struct.btrfs_ioctl_ino_lookup_user_args, ptr %call, i32 0, i32 3, i32 %add30.i
  %54 = ptrtoint ptr %arrayidx85.i to i32
  call void @__asan_store1_noabort(i32 %54)
  store i8 0, ptr %arrayidx85.i, align 1
  call void @btrfs_put_root(ptr noundef %call11.i) #20
  call void @btrfs_release_path(ptr noundef nonnull %call7.i) #20
  br label %if.end86.i

if.end86.i:                                       ; preds = %while.end.i, %if.end.i.if.end86.i_crit_edge
  %55 = ptrtoint ptr %key.i to i32
  call void @__asan_store8_noabort(i32 %55)
  store i64 %19, ptr %key.i, align 8
  %56 = ptrtoint ptr %22 to i32
  call void @__asan_store1_noabort(i32 %56)
  store i8 -100, ptr %22, align 8
  %treeid89.i = getelementptr inbounds %struct.btrfs_ioctl_ino_lookup_user_args, ptr %call, i32 0, i32 1
  %57 = ptrtoint ptr %treeid89.i to i32
  call void @__asan_load8_noabort(i32 %57)
  %58 = load i64, ptr %treeid89.i, align 8
  %59 = ptrtoint ptr %23 to i32
  call void @__asan_storeN_noabort(i32 %59, i32 8)
  store i64 %58, ptr %23, align 1
  %tree_root.i = getelementptr inbounds %struct.btrfs_fs_info, ptr %14, i32 0, i32 2
  %60 = ptrtoint ptr %tree_root.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %tree_root.i, align 4
  %call91.i = call i32 @btrfs_search_slot(ptr noundef null, ptr noundef %61, ptr noundef nonnull %key.i, ptr noundef nonnull %call7.i, i32 noundef 0, i32 noundef 0) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call91.i)
  %cmp92.i = icmp slt i32 %call91.i, 0
  br i1 %cmp92.i, label %if.end86.i.btrfs_search_path_in_tree_user.exit.thread33_crit_edge, label %if.else95.i

if.end86.i.btrfs_search_path_in_tree_user.exit.thread33_crit_edge: ; preds = %if.end86.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %btrfs_search_path_in_tree_user.exit.thread33

if.else95.i:                                      ; preds = %if.end86.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call91.i)
  %cmp96.not.i = icmp eq i32 %call91.i, 0
  br i1 %cmp96.not.i, label %if.end100.i, label %if.else95.i.btrfs_search_path_in_tree_user.exit.thread33_crit_edge

if.else95.i.btrfs_search_path_in_tree_user.exit.thread33_crit_edge: ; preds = %if.else95.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %btrfs_search_path_in_tree_user.exit.thread33

if.end100.i:                                      ; preds = %if.else95.i
  %62 = ptrtoint ptr %call7.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %call7.i, align 4
  %slots103.i = getelementptr inbounds %struct.btrfs_path, ptr %call7.i, i32 0, i32 1
  %64 = ptrtoint ptr %slots103.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %slots103.i, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %disk_key.i215.i) #20
  %66 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i215.i, i32 0, i32 1
  %67 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i215.i, i32 0, i32 2
  %mul.i.i.i.i216.i = mul i32 %65, 25
  %add.i.i.i.i217.i = add i32 %mul.i.i.i.i216.i, 101
  %68 = call ptr @memset(ptr %disk_key.i215.i, i32 255, i32 17)
  call void @read_extent_buffer(ptr noundef %63, ptr noundef nonnull %disk_key.i215.i, i32 noundef %add.i.i.i.i217.i, i32 noundef 17) #20
  %69 = ptrtoint ptr %67 to i32
  call void @__asan_loadN_noabort(i32 %69, i32 8)
  %70 = load i64, ptr %67, align 1
  %71 = call i64 @llvm.bswap.i64(i64 %70) #20
  %72 = ptrtoint ptr %23 to i32
  call void @__asan_storeN_noabort(i32 %72, i32 8)
  store i64 %71, ptr %23, align 1
  %73 = ptrtoint ptr %66 to i32
  call void @__asan_load1_noabort(i32 %73)
  %74 = load i8, ptr %66, align 8
  %75 = ptrtoint ptr %22 to i32
  call void @__asan_store1_noabort(i32 %75)
  store i8 %74, ptr %22, align 8
  %76 = ptrtoint ptr %disk_key.i215.i to i32
  call void @__asan_load8_noabort(i32 %76)
  %77 = load i64, ptr %disk_key.i215.i, align 8
  %78 = call i64 @llvm.bswap.i64(i64 %77) #20
  %79 = ptrtoint ptr %key.i to i32
  call void @__asan_store8_noabort(i32 %79)
  store i64 %78, ptr %key.i, align 8
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %disk_key.i215.i) #20
  %80 = inttoptr i32 %add.i.i.i.i217.i to ptr
  %call.i.i222.i = call i32 @btrfs_get_32(ptr noundef %63, ptr noundef %80, i32 noundef 17) #20
  %call.i.i225.i = call i32 @btrfs_get_32(ptr noundef %63, ptr noundef %80, i32 noundef 21) #20
  %call.i.i228.i = call i32 @btrfs_get_32(ptr noundef %63, ptr noundef %80, i32 noundef 17) #20
  %add109.i = add i32 %call.i.i228.i, 101
  %81 = inttoptr i32 %add109.i to ptr
  %82 = ptrtoint ptr %call to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load i64, ptr %call, align 8
  %call.i229.i = call i64 @btrfs_get_64(ptr noundef %63, ptr noundef %81, i32 noundef 0) #20
  call void @__sanitizer_cov_trace_cmp8(i64 %83, i64 %call.i229.i)
  %cmp112.not.i = icmp eq i64 %83, %call.i229.i
  br i1 %cmp112.not.i, label %if.end115.i, label %if.end100.i.btrfs_search_path_in_tree_user.exit.thread33_crit_edge

if.end100.i.btrfs_search_path_in_tree_user.exit.thread33_crit_edge: ; preds = %if.end100.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %btrfs_search_path_in_tree_user.exit.thread33

if.end115.i:                                      ; preds = %if.end100.i
  call void @__sanitizer_cov_trace_pc() #22
  %add116.i = add i32 %call.i.i222.i, 119
  %sub.i = add i32 %call.i.i225.i, -18
  %name.i = getelementptr inbounds %struct.btrfs_ioctl_ino_lookup_user_args, ptr %call, i32 0, i32 2
  call void @read_extent_buffer(ptr noundef %63, ptr noundef %name.i, i32 noundef %add116.i, i32 noundef %sub.i) #20
  %arrayidx119.i = getelementptr %struct.btrfs_ioctl_ino_lookup_user_args, ptr %call, i32 0, i32 2, i32 %sub.i
  %84 = ptrtoint ptr %arrayidx119.i to i32
  call void @__asan_store1_noabort(i32 %84)
  store i8 0, ptr %arrayidx119.i, align 1
  br label %out_put.i

out_put.i:                                        ; preds = %if.end115.i, %if.end77.i.out_put.i_crit_edge, %if.end72.i.out_put.i_crit_edge, %if.end62.i.out_put.i_crit_edge, %if.then60.i, %if.end47.i.out_put.i_crit_edge, %if.else42.i.out_put.i_crit_edge, %if.end35.i.out_put.i_crit_edge, %if.end23.i.out_put.i_crit_edge, %if.else.i.out_put.i_crit_edge, %if.end15.i.out_put.i_crit_edge
  %root6.1.i = phi ptr [ %call11.i, %if.then60.i ], [ null, %if.end115.i ], [ %call11.i, %if.end15.i.out_put.i_crit_edge ], [ %call11.i, %if.else.i.out_put.i_crit_edge ], [ %call11.i, %if.end23.i.out_put.i_crit_edge ], [ %call11.i, %if.end35.i.out_put.i_crit_edge ], [ %call11.i, %if.else42.i.out_put.i_crit_edge ], [ %call11.i, %if.end47.i.out_put.i_crit_edge ], [ %call11.i, %if.end62.i.out_put.i_crit_edge ], [ %call11.i, %if.end72.i.out_put.i_crit_edge ], [ %call11.i, %if.end77.i.out_put.i_crit_edge ]
  %ret.0.i = phi i32 [ %45, %if.then60.i ], [ 0, %if.end115.i ], [ %call17233.i, %if.end15.i.out_put.i_crit_edge ], [ %call17.i, %if.end77.i.out_put.i_crit_edge ], [ -13, %if.end72.i.out_put.i_crit_edge ], [ -13, %if.end62.i.out_put.i_crit_edge ], [ -2, %if.end47.i.out_put.i_crit_edge ], [ -2, %if.else42.i.out_put.i_crit_edge ], [ %call38.i, %if.end35.i.out_put.i_crit_edge ], [ -36, %if.end23.i.out_put.i_crit_edge ], [ -2, %if.else.i.out_put.i_crit_edge ]
  call void @btrfs_put_root(ptr noundef %root6.1.i) #20
  br label %btrfs_search_path_in_tree_user.exit

btrfs_search_path_in_tree_user.exit.thread33:     ; preds = %if.end100.i.btrfs_search_path_in_tree_user.exit.thread33_crit_edge, %if.else95.i.btrfs_search_path_in_tree_user.exit.thread33_crit_edge, %if.end86.i.btrfs_search_path_in_tree_user.exit.thread33_crit_edge
  %ret.1.i.ph = phi i32 [ -22, %if.end100.i.btrfs_search_path_in_tree_user.exit.thread33_crit_edge ], [ -2, %if.else95.i.btrfs_search_path_in_tree_user.exit.thread33_crit_edge ], [ %call91.i, %if.end86.i.btrfs_search_path_in_tree_user.exit.thread33_crit_edge ]
  call void @btrfs_free_path(ptr noundef nonnull %call7.i) #20
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key.i) #20
  br label %if.end14

btrfs_search_path_in_tree_user.exit:              ; preds = %out_put.i, %if.then13.i
  %ret.1.i = phi i32 [ %25, %if.then13.i ], [ %ret.0.i, %out_put.i ]
  call void @btrfs_free_path(ptr noundef nonnull %call7.i) #20
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.1.i)
  %cmp10 = icmp eq i32 %ret.1.i, 0
  br i1 %cmp10, label %if.end8.i.i, label %btrfs_search_path_in_tree_user.exit.if.end14_crit_edge

btrfs_search_path_in_tree_user.exit.if.end14_crit_edge: ; preds = %btrfs_search_path_in_tree_user.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end14

if.end8.i.i:                                      ; preds = %btrfs_search_path_in_tree_user.exit
  call void @__might_fault(ptr noundef nonnull @.str.30, i32 noundef 174) #20
  %call.i.i = call zeroext i1 @should_fail_usercopy() #20
  br i1 %call.i.i, label %if.end8.i.i.if.end14_crit_edge, label %if.end.i.i

if.end8.i.i.if.end14_crit_edge:                   ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end14

if.end.i.i:                                       ; preds = %if.end8.i.i
  %85 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %argp, i32 4096, i32 -1226833920) #27, !srcloc !190
  %asmresult.i.i = extractvalue { i32, i32 } %85, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %copy_to_user.exit, label %if.end.i.i.if.end14_crit_edge

if.end.i.i.if.end14_crit_edge:                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end14

copy_to_user.exit:                                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %call, i32 noundef 4096) #20
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef %argp, ptr noundef %call, i32 noundef 4096) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool.not, i32 0, i32 -14
  br label %if.end14

if.end14:                                         ; preds = %copy_to_user.exit, %if.end.i.i.if.end14_crit_edge, %if.end8.i.i.if.end14_crit_edge, %btrfs_search_path_in_tree_user.exit.if.end14_crit_edge, %btrfs_search_path_in_tree_user.exit.thread33, %btrfs_search_path_in_tree_user.exit.thread
  %ret.0 = phi i32 [ %ret.1.i, %btrfs_search_path_in_tree_user.exit.if.end14_crit_edge ], [ -12, %btrfs_search_path_in_tree_user.exit.thread ], [ %ret.1.i.ph, %btrfs_search_path_in_tree_user.exit.thread33 ], [ -14, %if.end8.i.i.if.end14_crit_edge ], [ -14, %if.end.i.i.if.end14_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  call void @kfree(ptr noundef %call) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.then6, %if.then
  %retval.0 = phi i32 [ %0, %if.then ], [ -13, %if.then6 ], [ %ret.0, %if.end14 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @fsverity_ioctl_enable(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @fsverity_ioctl_measure(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #9

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @generic_atomic64_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @generic_atomic64_cmpxchg(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @seqcount_lockdep_reader_access(ptr noundef %s) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #20, !srcloc !207
  %and.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.then, label %do.body24.critedge

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @trace_hardirqs_off() #20
  %dep_map.c = getelementptr inbounds %struct.seqcount, ptr %s, i32 0, i32 1
  %1 = tail call ptr @llvm.returnaddress(i32 0)
  %2 = ptrtoint ptr %1 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %2) #20
  tail call void @lock_release(ptr noundef %dep_map.c, i32 noundef %2) #20
  tail call void @trace_hardirqs_on() #20
  br label %do.body24

do.body24.critedge:                               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %dep_map.c48 = getelementptr inbounds %struct.seqcount, ptr %s, i32 0, i32 1
  %3 = tail call ptr @llvm.returnaddress(i32 0)
  %4 = ptrtoint ptr %3 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c48, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %4) #20
  tail call void @lock_release(ptr noundef %dep_map.c48, i32 noundef %4) #20
  br label %do.body24

do.body24:                                        ; preds = %do.body24.critedge, %if.then
  %5 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #20, !srcloc !208
  %and.i.i = and i32 %5, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool32.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool32.not, label %if.then36, label %do.body24.do.end39_crit_edge, !prof !195

do.body24.do.end39_crit_edge:                     ; preds = %do.body24
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end39

if.then36:                                        ; preds = %do.body24
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @warn_bogus_irq_restore() #20
  br label %do.end39

do.end39:                                         ; preds = %if.then36, %do.body24.do.end39_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #20, !srcloc !209
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #12

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #13

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @defrag_collect_targets(ptr noundef %inode, i64 noundef %start, i64 noundef %len, i32 noundef %extent_thresh, i64 noundef %newer_than, i1 noundef zeroext %do_compress, i1 noundef zeroext %locked, ptr noundef %target_list, ptr noundef %last_scanned_ret) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %add = add i64 %len, %start
  call void @__sanitizer_cov_trace_cmp8(i64 %add, i64 %start)
  %cmp281 = icmp ugt i64 %add, %start
  br i1 %cmp281, label %while.body.lr.ph, label %entry.if.end132_crit_edge

entry.if.end132_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end132

while.body.lr.ph:                                 ; preds = %entry
  %vfs_inode = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 37
  %io_tree = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 4
  %conv = zext i32 %extent_thresh to i64
  %i_size_seqcount.i.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 37, i32 23
  %i_size18.i.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 37, i32 14
  %prev = getelementptr inbounds %struct.list_head, ptr %target_list, i32 0, i32 1
  br label %while.body

while.body:                                       ; preds = %cleanup101.while.body_crit_edge, %while.body.lr.ph
  %cur.0282 = phi i64 [ %start, %while.body.lr.ph ], [ %76, %cleanup101.while.body_crit_edge ]
  %call = tail call fastcc ptr @defrag_lookup_extent(ptr noundef %vfs_inode, i64 noundef %cur.0282, i64 noundef %newer_than, i1 noundef zeroext %locked)
  %tobool2.not = icmp eq ptr %call, null
  br i1 %tobool2.not, label %while.body.if.end132_crit_edge, label %if.end

while.body.if.end132_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end132

if.end:                                           ; preds = %while.body
  %block_start = getelementptr inbounds %struct.extent_map, ptr %call, i32 0, i32 8
  %0 = ptrtoint ptr %block_start to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %block_start, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -5, i64 %1)
  %cmp3 = icmp ugt i64 %1, -5
  br i1 %cmp3, label %if.end.cleanup101_crit_edge, label %lor.lhs.false

if.end.cleanup101_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup101

lor.lhs.false:                                    ; preds = %if.end
  %flags = getelementptr inbounds %struct.extent_map, ptr %call, i32 0, i32 11
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %flags, align 4
  %4 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool5.not = icmp eq i32 %4, 0
  br i1 %tobool5.not, label %if.end7, label %lor.lhs.false.cleanup101_crit_edge

lor.lhs.false.cleanup101_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup101

if.end7:                                          ; preds = %lor.lhs.false
  %generation = getelementptr inbounds %struct.extent_map, ptr %call, i32 0, i32 10
  %5 = ptrtoint ptr %generation to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %generation, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %6, i64 %newer_than)
  %cmp8 = icmp ult i64 %6, %newer_than
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %6)
  %cmp12 = icmp eq i64 %6, -1
  %or.cond = or i1 %cmp8, %cmp12
  br i1 %or.cond, label %if.end7.cleanup101_crit_edge, label %if.end14

if.end7.cleanup101_crit_edge:                     ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup101

if.end14:                                         ; preds = %if.end7
  %len15 = getelementptr inbounds %struct.extent_map, ptr %call, i32 0, i32 2
  %7 = ptrtoint ptr %len15 to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %len15, align 8
  %start16 = getelementptr inbounds %struct.extent_map, ptr %call, i32 0, i32 1
  %9 = ptrtoint ptr %start16 to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %start16, align 8
  %sub.neg = sub i64 %8, %cur.0282
  %sub17 = add i64 %sub.neg, %10
  %add18 = add i64 %8, -1
  %sub19 = add i64 %add18, %10
  %call20 = tail call i32 @test_range_bit(ptr noundef %io_tree, i64 noundef %cur.0282, i64 noundef %sub19, i32 noundef 16, i32 noundef 0, ptr noundef null) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20)
  %tobool21.not = icmp eq i32 %call20, 0
  br i1 %tobool21.not, label %if.end23, label %if.end14.cleanup101_crit_edge

if.end14.cleanup101_crit_edge:                    ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup101

if.end23:                                         ; preds = %if.end14
  br i1 %do_compress, label %if.end23.add56_crit_edge, label %if.end26

if.end23.add56_crit_edge:                         ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #22
  br label %add56

if.end26:                                         ; preds = %if.end23
  call void @__sanitizer_cov_trace_cmp8(i64 %sub17, i64 %conv)
  %cmp27.not = icmp ult i64 %sub17, %conv
  br i1 %cmp27.not, label %if.end30, label %if.end26.cleanup101_crit_edge

if.end26.cleanup101_crit_edge:                    ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup101

if.end30:                                         ; preds = %if.end26
  %11 = ptrtoint ptr %len15 to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %len15, align 8
  %13 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %flags, align 4
  %15 = and i32 %14, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.not.i = icmp eq i32 %15, 0
  %..i = select i1 %tobool.not.i, i32 134217728, i32 131072
  %conv33 = zext i32 %..i to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %12, i64 %conv33)
  %cmp34.not = icmp ult i64 %12, %conv33
  br i1 %cmp34.not, label %if.end37, label %if.end30.cleanup101_crit_edge

if.end30.cleanup101_crit_edge:                    ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup101

if.end37:                                         ; preds = %if.end30
  %16 = ptrtoint ptr %start16 to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %start16, align 8
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %while.end.i.i.do.body.i.i_crit_edge, %if.end37
  tail call fastcc void @seqcount_lockdep_reader_access(ptr noundef %i_size_seqcount.i.i) #20
  %18 = ptrtoint ptr %i_size_seqcount.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %i_size_seqcount.i.i, align 4
  %and29.i.i = and i32 %19, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29.i.i)
  %tobool.not30.i.i = icmp eq i32 %and29.i.i, 0
  br i1 %tobool.not30.i.i, label %do.body.i.i.while.end.i.i_crit_edge, label %do.body.i.i.do.end.i.i_crit_edge

do.body.i.i.do.end.i.i_crit_edge:                 ; preds = %do.body.i.i
  br label %do.end.i.i

do.body.i.i.while.end.i.i_crit_edge:              ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end.i.i

do.end.i.i:                                       ; preds = %do.end.i.i.do.end.i.i_crit_edge, %do.body.i.i.do.end.i.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !186
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #20, !srcloc !187
  %20 = ptrtoint ptr %i_size_seqcount.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %i_size_seqcount.i.i, align 4
  %and.i.i = and i32 %21, 1
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %do.end.i.i.while.end.i.i_crit_edge, label %do.end.i.i.do.end.i.i_crit_edge

do.end.i.i.do.end.i.i_crit_edge:                  ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end.i.i

do.end.i.i.while.end.i.i_crit_edge:               ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end.i.i

while.end.i.i:                                    ; preds = %do.end.i.i.while.end.i.i_crit_edge, %do.body.i.i.while.end.i.i_crit_edge
  %.lcssa.i.i = phi i32 [ %19, %do.body.i.i.while.end.i.i_crit_edge ], [ %21, %do.end.i.i.while.end.i.i_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !188
  %22 = ptrtoint ptr %i_size18.i.i to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %i_size18.i.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !189
  %24 = ptrtoint ptr %i_size_seqcount.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %i_size_seqcount.i.i, align 4
  %cmp.i.i.not.i.i = icmp eq i32 %25, %.lcssa.i.i
  br i1 %cmp.i.i.not.i.i, label %i_size_read.exit.i, label %while.end.i.i.do.body.i.i_crit_edge

while.end.i.i.do.body.i.i_crit_edge:              ; preds = %while.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i.i

i_size_read.exit.i:                               ; preds = %while.end.i.i
  %add.i = add i64 %17, %12
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i, i64 %23)
  %cmp.not.i = icmp ult i64 %add.i, %23
  br i1 %cmp.not.i, label %if.end.i, label %i_size_read.exit.i.if.then43_crit_edge

i_size_read.exit.i.if.then43_crit_edge:           ; preds = %i_size_read.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then43

if.end.i:                                         ; preds = %i_size_read.exit.i
  %26 = ptrtoint ptr %start16 to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %start16, align 8
  %28 = ptrtoint ptr %len15 to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %len15, align 8
  %add3.i = add i64 %29, %27
  %call4.i = tail call fastcc ptr @defrag_lookup_extent(ptr noundef %vfs_inode, i64 noundef %add3.i, i64 noundef 0, i1 noundef zeroext %locked) #20
  %tobool5.not.i = icmp eq ptr %call4.i, null
  br i1 %tobool5.not.i, label %if.end.i.defrag_check_next_extent.exit.thread245_crit_edge, label %lor.lhs.false.i

if.end.i.defrag_check_next_extent.exit.thread245_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %defrag_check_next_extent.exit.thread245

lor.lhs.false.i:                                  ; preds = %if.end.i
  %block_start.i = getelementptr inbounds %struct.extent_map, ptr %call4.i, i32 0, i32 8
  %30 = ptrtoint ptr %block_start.i to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %block_start.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -5, i64 %31)
  %cmp6.i = icmp ugt i64 %31, -5
  br i1 %cmp6.i, label %lor.lhs.false.i.defrag_check_next_extent.exit.thread245_crit_edge, label %if.end8.i

lor.lhs.false.i.defrag_check_next_extent.exit.thread245_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %defrag_check_next_extent.exit.thread245

if.end8.i:                                        ; preds = %lor.lhs.false.i
  %flags.i234 = getelementptr inbounds %struct.extent_map, ptr %call4.i, i32 0, i32 11
  %32 = ptrtoint ptr %flags.i234 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %flags.i234, align 4
  %34 = and i32 %33, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool10.not.i = icmp eq i32 %34, 0
  br i1 %tobool10.not.i, label %defrag_check_next_extent.exit, label %if.end8.i.defrag_check_next_extent.exit.thread245_crit_edge

if.end8.i.defrag_check_next_extent.exit.thread245_crit_edge: ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %defrag_check_next_extent.exit.thread245

defrag_check_next_extent.exit.thread245:          ; preds = %if.end8.i.defrag_check_next_extent.exit.thread245_crit_edge, %lor.lhs.false.i.defrag_check_next_extent.exit.thread245_crit_edge, %if.end.i.defrag_check_next_extent.exit.thread245_crit_edge
  tail call void @free_extent_map(ptr noundef %call4.i) #20
  br label %if.then43

defrag_check_next_extent.exit:                    ; preds = %if.end8.i
  %len13.i = getelementptr inbounds %struct.extent_map, ptr %call4.i, i32 0, i32 2
  %35 = ptrtoint ptr %len13.i to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %len13.i, align 8
  %37 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %flags, align 4
  %39 = and i32 %38, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool.not.i30.i = icmp eq i32 %39, 0
  %..i.i = select i1 %tobool.not.i30.i, i32 134217728, i32 131072
  %conv.i = zext i32 %..i.i to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %36, i64 %conv.i)
  %cmp15.not.i = icmp ult i64 %36, %conv.i
  tail call void @free_extent_map(ptr noundef nonnull %call4.i) #20
  br i1 %cmp15.not.i, label %defrag_check_next_extent.exit.add56_crit_edge, label %defrag_check_next_extent.exit.if.then43_crit_edge

defrag_check_next_extent.exit.if.then43_crit_edge: ; preds = %defrag_check_next_extent.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then43

defrag_check_next_extent.exit.add56_crit_edge:    ; preds = %defrag_check_next_extent.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %add56

if.then43:                                        ; preds = %defrag_check_next_extent.exit.if.then43_crit_edge, %defrag_check_next_extent.exit.thread245, %i_size_read.exit.i.if.then43_crit_edge
  %40 = ptrtoint ptr %target_list to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile ptr, ptr %target_list, align 4
  %cmp.i.not = icmp eq ptr %41, %target_list
  br i1 %cmp.i.not, label %if.then43.cleanup101_crit_edge, label %if.end47

if.then43.cleanup101_crit_edge:                   ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup101

if.end47:                                         ; preds = %if.then43
  %42 = ptrtoint ptr %prev to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %prev, align 4
  %start48 = getelementptr inbounds %struct.defrag_target_range, ptr %43, i32 0, i32 1
  %44 = ptrtoint ptr %start48 to i32
  call void @__asan_load8_noabort(i32 %44)
  %45 = load i64, ptr %start48, align 8
  %len49 = getelementptr inbounds %struct.defrag_target_range, ptr %43, i32 0, i32 2
  %46 = ptrtoint ptr %len49 to i32
  call void @__asan_load8_noabort(i32 %46)
  %47 = load i64, ptr %len49, align 8
  %add50 = add i64 %47, %45
  call void @__sanitizer_cov_trace_cmp8(i64 %add50, i64 %cur.0282)
  %cmp51.not = icmp eq i64 %add50, %cur.0282
  br i1 %cmp51.not, label %if.end47.add56_crit_edge, label %if.end47.cleanup101_crit_edge

if.end47.cleanup101_crit_edge:                    ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup101

if.end47.add56_crit_edge:                         ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #22
  br label %add56

add56:                                            ; preds = %if.end47.add56_crit_edge, %defrag_check_next_extent.exit.add56_crit_edge, %if.end23.add56_crit_edge
  %48 = ptrtoint ptr %start16 to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %start16, align 8
  %50 = ptrtoint ptr %len15 to i32
  call void @__asan_load8_noabort(i32 %50)
  %51 = load i64, ptr %len15, align 8
  %52 = tail call i64 @llvm.uadd.sat.i64(i64 %49, i64 %51) #20
  %53 = tail call i64 @llvm.umin.i64(i64 %52, i64 %add)
  %sub62 = sub i64 %53, %cur.0282
  %54 = ptrtoint ptr %target_list to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile ptr, ptr %target_list, align 4
  %cmp.i238.not = icmp eq ptr %55, %target_list
  br i1 %cmp.i238.not, label %add56.if.end93_crit_edge, label %if.then65

add56.if.end93_crit_edge:                         ; preds = %add56
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end93

if.then65:                                        ; preds = %add56
  %56 = ptrtoint ptr %prev to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %prev, align 4
  %start71 = getelementptr inbounds %struct.defrag_target_range, ptr %57, i32 0, i32 1
  %58 = ptrtoint ptr %start71 to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %start71, align 8
  %len72 = getelementptr inbounds %struct.defrag_target_range, ptr %57, i32 0, i32 2
  %60 = ptrtoint ptr %len72 to i32
  call void @__asan_load8_noabort(i32 %60)
  %61 = load i64, ptr %len72, align 8
  %add73 = add i64 %61, %59
  call void @__sanitizer_cov_trace_cmp8(i64 %add73, i64 %cur.0282)
  %cmp74.not = icmp ugt i64 %add73, %cur.0282
  br i1 %cmp74.not, label %cond.false79, label %cond.end80, !prof !195

cond.false79:                                     ; preds = %if.then65
  call void @__sanitizer_cov_trace_pc() #22
  call void @__asan_handle_no_return()
  tail call fastcc void @assertfail(ptr noundef nonnull @.str.16, i32 noundef 1477) #25
  unreachable

cond.end80:                                       ; preds = %if.then65
  call void @__sanitizer_cov_trace_cmp8(i64 %add73, i64 %cur.0282)
  %cmp84 = icmp eq i64 %add73, %cur.0282
  br i1 %cmp84, label %cleanup90, label %cond.end80.if.end93_crit_edge

cond.end80.if.end93_crit_edge:                    ; preds = %cond.end80
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end93

cleanup90:                                        ; preds = %cond.end80
  call void @__sanitizer_cov_trace_pc() #22
  %add88 = add i64 %61, %sub62
  %62 = ptrtoint ptr %len72 to i32
  call void @__asan_store8_noabort(i32 %62)
  store i64 %add88, ptr %len72, align 8
  br label %cleanup101

if.end93:                                         ; preds = %cond.end80.if.end93_crit_edge, %add56.if.end93_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %63 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %63, i32 noundef 3136, i32 noundef 24) #26
  %tobool95.not = icmp eq ptr %call7.i, null
  br i1 %tobool95.not, label %if.then109, label %if.end97

if.end97:                                         ; preds = %if.end93
  %start98 = getelementptr inbounds %struct.defrag_target_range, ptr %call7.i, i32 0, i32 1
  %64 = ptrtoint ptr %start98 to i32
  call void @__asan_store8_noabort(i32 %64)
  store i64 %cur.0282, ptr %start98, align 8
  %len99 = getelementptr inbounds %struct.defrag_target_range, ptr %call7.i, i32 0, i32 2
  %65 = ptrtoint ptr %len99 to i32
  call void @__asan_store8_noabort(i32 %65)
  store i64 %sub62, ptr %len99, align 8
  %66 = ptrtoint ptr %prev to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %prev, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i, ptr noundef %67, ptr noundef %target_list) #20
  br i1 %call.i.i, label %if.end.i.i, label %if.end97.cleanup101_crit_edge

if.end97.cleanup101_crit_edge:                    ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup101

if.end.i.i:                                       ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #22
  %68 = ptrtoint ptr %prev to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %call7.i, ptr %prev, align 4
  %69 = ptrtoint ptr %call7.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr %target_list, ptr %call7.i, align 8
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i, i32 0, i32 1
  %70 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store ptr %67, ptr %prev3.i.i, align 4
  %71 = ptrtoint ptr %67 to i32
  call void @__asan_store4_noabort(i32 %71)
  store volatile ptr %call7.i, ptr %67, align 4
  br label %cleanup101

cleanup101:                                       ; preds = %if.end.i.i, %if.end97.cleanup101_crit_edge, %cleanup90, %if.end47.cleanup101_crit_edge, %if.then43.cleanup101_crit_edge, %if.end30.cleanup101_crit_edge, %if.end26.cleanup101_crit_edge, %if.end14.cleanup101_crit_edge, %if.end7.cleanup101_crit_edge, %lor.lhs.false.cleanup101_crit_edge, %if.end.cleanup101_crit_edge
  %extract.t = phi i1 [ false, %if.end47.cleanup101_crit_edge ], [ false, %if.then43.cleanup101_crit_edge ], [ false, %lor.lhs.false.cleanup101_crit_edge ], [ false, %if.end.cleanup101_crit_edge ], [ false, %if.end7.cleanup101_crit_edge ], [ false, %if.end14.cleanup101_crit_edge ], [ false, %if.end26.cleanup101_crit_edge ], [ false, %if.end30.cleanup101_crit_edge ], [ true, %cleanup90 ], [ true, %if.end97.cleanup101_crit_edge ], [ true, %if.end.i.i ]
  %start.i240 = getelementptr inbounds %struct.extent_map, ptr %call, i32 0, i32 1
  %72 = ptrtoint ptr %start.i240 to i32
  call void @__asan_load8_noabort(i32 %72)
  %73 = load i64, ptr %start.i240, align 8
  %len.i241 = getelementptr inbounds %struct.extent_map, ptr %call, i32 0, i32 2
  %74 = ptrtoint ptr %len.i241 to i32
  call void @__asan_load8_noabort(i32 %74)
  %75 = load i64, ptr %len.i241, align 8
  %76 = tail call i64 @llvm.uadd.sat.i64(i64 %73, i64 %75) #20
  tail call void @free_extent_map(ptr noundef nonnull %call) #20
  %cmp = icmp ult i64 %76, %add
  br i1 %cmp, label %cleanup101.while.body_crit_edge, label %cleanup101.if.end132_crit_edge

cleanup101.if.end132_crit_edge:                   ; preds = %cleanup101
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end132

cleanup101.while.body_crit_edge:                  ; preds = %cleanup101
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.body

if.then109:                                       ; preds = %if.end93
  tail call void @free_extent_map(ptr noundef nonnull %call) #20
  %77 = ptrtoint ptr %target_list to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %target_list, align 4
  %cmp122.not289 = icmp eq ptr %78, %target_list
  br i1 %cmp122.not289, label %if.then109.if.end154_crit_edge, label %if.then109.for.body_crit_edge

if.then109.for.body_crit_edge:                    ; preds = %if.then109
  br label %for.body

if.then109.if.end154_crit_edge:                   ; preds = %if.then109
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end154

for.body:                                         ; preds = %list_del_init.exit.for.body_crit_edge, %if.then109.for.body_crit_edge
  %entry110.0290 = phi ptr [ %tmp111.0, %list_del_init.exit.for.body_crit_edge ], [ %78, %if.then109.for.body_crit_edge ]
  %79 = ptrtoint ptr %entry110.0290 to i32
  call void @__asan_load4_noabort(i32 %79)
  %tmp111.0 = load ptr, ptr %entry110.0290, align 8
  %call.i.i242 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %entry110.0290) #20
  br i1 %call.i.i242, label %if.end.i.i243, label %for.body.list_del_init.exit_crit_edge

for.body.list_del_init.exit_crit_edge:            ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_del_init.exit

if.end.i.i243:                                    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %entry110.0290, i32 0, i32 1
  %80 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %prev.i.i, align 4
  %82 = ptrtoint ptr %entry110.0290 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %entry110.0290, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %83, i32 0, i32 1
  %84 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %84)
  store ptr %81, ptr %prev1.i.i.i, align 4
  %85 = ptrtoint ptr %81 to i32
  call void @__asan_store4_noabort(i32 %85)
  store volatile ptr %83, ptr %81, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i243, %for.body.list_del_init.exit_crit_edge
  %86 = ptrtoint ptr %entry110.0290 to i32
  call void @__asan_store4_noabort(i32 %86)
  store volatile ptr %entry110.0290, ptr %entry110.0290, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %entry110.0290, i32 0, i32 1
  %87 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %87)
  store ptr %entry110.0290, ptr %prev.i3.i, align 4
  tail call void @kfree(ptr noundef %entry110.0290) #20
  %cmp122.not = icmp eq ptr %tmp111.0, %target_list
  br i1 %cmp122.not, label %list_del_init.exit.if.end154_crit_edge, label %list_del_init.exit.for.body_crit_edge

list_del_init.exit.for.body_crit_edge:            ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

list_del_init.exit.if.end154_crit_edge:           ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end154

if.end132:                                        ; preds = %cleanup101.if.end132_crit_edge, %while.body.if.end132_crit_edge, %entry.if.end132_crit_edge
  %cur.0.lcssa = phi i64 [ %start, %entry.if.end132_crit_edge ], [ %cur.0282, %while.body.if.end132_crit_edge ], [ %76, %cleanup101.if.end132_crit_edge ]
  %last_is_target.3.off0261 = phi i1 [ false, %entry.if.end132_crit_edge ], [ false, %while.body.if.end132_crit_edge ], [ %extract.t, %cleanup101.if.end132_crit_edge ]
  %tobool134.not = icmp eq ptr %last_scanned_ret, null
  br i1 %tobool134.not, label %if.end132.if.end154_crit_edge, label %if.then135

if.end132.if.end154_crit_edge:                    ; preds = %if.end132
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end154

if.then135:                                       ; preds = %if.end132
  call void @__sanitizer_cov_trace_pc() #22
  %88 = ptrtoint ptr %last_scanned_ret to i32
  call void @__asan_load8_noabort(i32 %88)
  %89 = load i64, ptr %last_scanned_ret, align 8
  %add.cur.0.lcssa = select i1 %last_is_target.3.off0261, i64 %add, i64 %cur.0.lcssa
  %90 = tail call i64 @llvm.umax.i64(i64 %add.cur.0.lcssa, i64 %89)
  %91 = ptrtoint ptr %last_scanned_ret to i32
  call void @__asan_store8_noabort(i32 %91)
  store i64 %90, ptr %last_scanned_ret, align 8
  br label %if.end154

if.end154:                                        ; preds = %if.then135, %if.end132.if.end154_crit_edge, %list_del_init.exit.if.end154_crit_edge, %if.then109.if.end154_crit_edge
  %ret.2260274 = phi i32 [ 0, %if.end132.if.end154_crit_edge ], [ -12, %if.then109.if.end154_crit_edge ], [ 0, %if.then135 ], [ -12, %list_del_init.exit.if.end154_crit_edge ]
  ret i32 %ret.2260274
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @defrag_one_range(ptr noundef %inode, i64 noundef %start, i32 noundef %len, i32 noundef %extent_thresh, i64 noundef %newer_than, i1 noundef zeroext %do_compress, ptr noundef %last_scanned_ret) unnamed_addr #0 align 64 {
entry:
  %data_reserved.i = alloca ptr, align 4
  %cached_state = alloca ptr, align 4
  %target_list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cached_state) #20
  %0 = ptrtoint ptr %cached_state to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %cached_state, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %target_list) #20
  %1 = getelementptr inbounds %struct.list_head, ptr %target_list, i32 0, i32 1
  %2 = ptrtoint ptr %target_list to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %target_list, ptr %target_list, align 4
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %target_list, ptr %1, align 4
  %conv = zext i32 %len to i64
  %add = add i64 %conv, %start
  %sub = add i64 %add, 17592186044415
  %shr = lshr i64 %sub, 12
  %shr3 = lshr i64 %start, 12
  %sub4 = sub nsw i64 %shr, %shr3
  %4 = trunc i64 %sub4 to i32
  %conv6 = add i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 65, i32 %conv6)
  %cmp = icmp ult i32 %conv6, 65
  br i1 %cmp, label %cond.end, label %cond.false, !prof !184

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.18, i32 noundef 1594) #25
  unreachable

cond.end:                                         ; preds = %entry
  %5 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %inode, align 8
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %6, i32 0, i32 8
  %7 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %fs_info, align 8
  %sectorsize2 = getelementptr inbounds %struct.btrfs_fs_info, ptr %8, i32 0, i32 167
  %9 = ptrtoint ptr %sectorsize2 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %sectorsize2, align 4
  %conv9 = zext i32 %10 to i64
  %sub10 = add nsw i64 %conv9, -1
  %and = and i64 %sub10, %start
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %cmp11 = icmp eq i64 %and, 0
  %sub13 = add i32 %10, -1
  %and14 = and i32 %sub13, %len
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14)
  %cmp15 = icmp eq i32 %and14, 0
  %11 = select i1 %cmp11, i1 %cmp15, i1 false, !prof !184
  br i1 %11, label %if.end7.i.i, label %cond.false24, !prof !184

cond.false24:                                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #22
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.19, i32 noundef 1595) #25
  unreachable

if.end7.i.i:                                      ; preds = %cond.end
  %12 = shl nuw nsw i32 %conv6, 2
  %call8.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %12, i32 noundef 3392) #29
  %tobool26.not = icmp eq ptr %call8.i.i, null
  br i1 %tobool26.not, label %if.end7.i.i.cleanup_crit_edge, label %for.cond.preheader

if.end7.i.i.cleanup_crit_edge:                    ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

for.cond.preheader:                               ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv6)
  %cmp27214.not = icmp eq i32 %conv6, 0
  br i1 %cmp27214.not, label %for.cond.preheader.for.end47_crit_edge, label %for.body.lr.ph

for.cond.preheader.for.end47_crit_edge:           ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end47

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %13 = trunc i64 %shr3 to i32
  br label %for.body

for.cond40.preheader:                             ; preds = %for.inc
  br i1 %cmp27214.not, label %for.cond40.preheader.for.end47_crit_edge, label %for.cond40.preheader.for.body43_crit_edge

for.cond40.preheader.for.body43_crit_edge:        ; preds = %for.cond40.preheader
  br label %for.body43

for.cond40.preheader.for.end47_crit_edge:         ; preds = %for.cond40.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end47

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.0215 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %conv31 = add i32 %i.0215, %13
  %call32 = call fastcc ptr @defrag_prepare_one_page(ptr noundef %inode, i32 noundef %conv31)
  %arrayidx = getelementptr ptr, ptr %call8.i.i, i32 %i.0215
  %14 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %call32, ptr %arrayidx, align 4
  %cmp.i = icmp ugt ptr %call32, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then35, label %for.inc

if.then35:                                        ; preds = %for.body
  %arrayidx.le = getelementptr ptr, ptr %call8.i.i, i32 %i.0215
  %15 = ptrtoint ptr %call32 to i32
  %16 = ptrtoint ptr %arrayidx.le to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr null, ptr %arrayidx.le, align 4
  br i1 %cmp27214.not, label %if.then35.for.end121_crit_edge, label %if.then35.for.body112.preheader_crit_edge

if.then35.for.body112.preheader_crit_edge:        ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body112.preheader

if.then35.for.end121_crit_edge:                   ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end121

for.inc:                                          ; preds = %for.body
  %inc = add nuw i32 %i.0215, 1
  %exitcond.not = icmp eq i32 %i.0215, %4
  br i1 %exitcond.not, label %for.cond40.preheader, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.body43:                                       ; preds = %for.body43.for.body43_crit_edge, %for.cond40.preheader.for.body43_crit_edge
  %i.1217 = phi i32 [ %inc46, %for.body43.for.body43_crit_edge ], [ 0, %for.cond40.preheader.for.body43_crit_edge ]
  %arrayidx44 = getelementptr ptr, ptr %call8.i.i, i32 %i.1217
  %17 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx44, align 4
  call void @wait_on_page_writeback(ptr noundef %18) #20
  %inc46 = add nuw i32 %i.1217, 1
  %exitcond241.not = icmp eq i32 %i.1217, %4
  br i1 %exitcond241.not, label %for.body43.for.end47_crit_edge, label %for.body43.for.body43_crit_edge

for.body43.for.body43_crit_edge:                  ; preds = %for.body43
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body43

for.body43.for.end47_crit_edge:                   ; preds = %for.body43
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end47

for.end47:                                        ; preds = %for.body43.for.end47_crit_edge, %for.cond40.preheader.for.end47_crit_edge, %for.cond.preheader.for.end47_crit_edge
  %cmp27214.not255259 = phi i1 [ true, %for.cond40.preheader.for.end47_crit_edge ], [ true, %for.cond.preheader.for.end47_crit_edge ], [ false, %for.body43.for.end47_crit_edge ]
  %io_tree = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 4
  %shl = and i64 %start, -4096
  %19 = add i64 %add, 4095
  %add49 = and i64 %19, -4096
  %sub50 = add i64 %add49, -1
  %call51 = call i32 @lock_extent_bits(ptr noundef %io_tree, i64 noundef %shl, i64 noundef %sub50, ptr noundef nonnull %cached_state) #20
  %call54 = call fastcc i32 @defrag_collect_targets(ptr noundef %inode, i64 noundef %start, i64 noundef %conv, i32 noundef %extent_thresh, i64 noundef %newer_than, i1 noundef zeroext %do_compress, i1 noundef zeroext true, ptr noundef nonnull %target_list, ptr noundef %last_scanned_ret)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call54)
  %cmp55 = icmp slt i32 %call54, 0
  br i1 %cmp55, label %for.end47.free_pages_crit_edge, label %for.cond61.preheader

for.end47.free_pages_crit_edge:                   ; preds = %for.end47
  call void @__sanitizer_cov_trace_pc() #22
  br label %free_pages

for.cond61.preheader:                             ; preds = %for.end47
  %20 = ptrtoint ptr %target_list to i32
  call void @__asan_load4_noabort(i32 %20)
  %entry1.0219 = load ptr, ptr %target_list, align 4
  %cmp62.not220 = icmp eq ptr %entry1.0219, %target_list
  br i1 %cmp62.not220, label %for.cond61.preheader.for.end78_crit_edge, label %for.cond61.preheader.for.body66_crit_edge

for.cond61.preheader.for.body66_crit_edge:        ; preds = %for.cond61.preheader
  br label %for.body66

for.cond61.preheader.for.end78_crit_edge:         ; preds = %for.cond61.preheader
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end78

for.cond61:                                       ; preds = %extent_changeset_release.exit.i.i, %for.end.i.for.cond61_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %data_reserved.i) #20
  %21 = ptrtoint ptr %entry1.0221 to i32
  call void @__asan_load4_noabort(i32 %21)
  %entry1.0 = load ptr, ptr %entry1.0221, align 4
  %cmp62.not = icmp eq ptr %entry1.0, %target_list
  br i1 %cmp62.not, label %for.cond61.for.end78_crit_edge, label %for.cond61.for.body66_crit_edge

for.cond61.for.body66_crit_edge:                  ; preds = %for.cond61
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body66

for.cond61.for.end78_crit_edge:                   ; preds = %for.cond61
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end78

for.body66:                                       ; preds = %for.cond61.for.body66_crit_edge, %for.cond61.preheader.for.body66_crit_edge
  %entry1.0221 = phi ptr [ %entry1.0, %for.cond61.for.body66_crit_edge ], [ %entry1.0219, %for.cond61.preheader.for.body66_crit_edge ]
  %22 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %inode, align 8
  %fs_info1.i = getelementptr inbounds %struct.btrfs_root, ptr %23, i32 0, i32 8
  %24 = ptrtoint ptr %fs_info1.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %fs_info1.i, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %data_reserved.i) #20
  %26 = ptrtoint ptr %data_reserved.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr null, ptr %data_reserved.i, align 4
  %start2.i = getelementptr inbounds %struct.defrag_target_range, ptr %entry1.0221, i32 0, i32 1
  %27 = ptrtoint ptr %start2.i to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %start2.i, align 8
  %len3.i = getelementptr inbounds %struct.defrag_target_range, ptr %entry1.0221, i32 0, i32 2
  %29 = ptrtoint ptr %len3.i to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %len3.i, align 8
  %add.i = add i64 %28, -1
  %sub.i = add i64 %add.i, %30
  %shr.i = lshr i64 %sub.i, 12
  %conv.i = trunc i64 %shr.i to i32
  %shr4.i = lshr i64 %28, 12
  %conv5.i = trunc i64 %shr4.i to i32
  %31 = ptrtoint ptr %call8.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %call8.i.i, align 128
  %33 = getelementptr inbounds %struct.page, ptr %32, i32 0, i32 1
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %33, align 4
  %and.i.i.i63.i = and i32 %35, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i63.i)
  %tobool.not.i.i.i.i187 = icmp eq i32 %and.i.i.i63.i, 0
  br i1 %tobool.not.i.i.i.i187, label %if.end.i.i.i.i188, label %if.then.i.i.i.i, !prof !184

if.then.i.i.i.i:                                  ; preds = %for.body66
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i.i.i = add i32 %35, -1
  br label %_compound_head.exit.i.i.i

if.end.i.i.i.i188:                                ; preds = %for.body66
  call void @__sanitizer_cov_trace_pc() #22
  %36 = ptrtoint ptr %32 to i32
  br label %_compound_head.exit.i.i.i

_compound_head.exit.i.i.i:                        ; preds = %if.end.i.i.i.i188, %if.then.i.i.i.i
  %retval.0.i.i.i.i = phi i32 [ %sub.i.i.i.i, %if.then.i.i.i.i ], [ %36, %if.end.i.i.i.i188 ]
  %37 = inttoptr i32 %retval.0.i.i.i.i to ptr
  %38 = getelementptr inbounds %struct.page, ptr %37, i32 0, i32 1
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %38, align 4
  %and.i.i.i.i.i.i.i = and i32 %40, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i.i)
  %tobool.not.i.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i, label %folio_test_swapbacked.exit.i.i.i.i, label %if.then.i.i.i.i.i.i, !prof !184

if.then.i.i.i.i.i.i:                              ; preds = %_compound_head.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %41 = inttoptr i32 %retval.0.i.i.i.i to ptr
  call void @dump_page(ptr noundef %41, ptr noundef nonnull @.str.21) #20
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #20, !srcloc !210
  unreachable

folio_test_swapbacked.exit.i.i.i.i:               ; preds = %_compound_head.exit.i.i.i
  %42 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %37, align 4
  %44 = and i32 %43, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool.i.not.i.i.i.i = icmp eq i32 %44, 0
  br i1 %tobool.i.not.i.i.i.i, label %folio_test_swapbacked.exit.i.i.i.i.if.end.i.i189_crit_edge, label %land.rhs.i.i.i.i

folio_test_swapbacked.exit.i.i.i.i.if.end.i.i189_crit_edge: ; preds = %folio_test_swapbacked.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i.i189

land.rhs.i.i.i.i:                                 ; preds = %folio_test_swapbacked.exit.i.i.i.i
  %45 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %38, align 4
  %and.i.i.i.i.i.i = and i32 %46, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i)
  %tobool.not.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %PageSwapCache.exit.i.i, label %if.then.i.i.i.i.i, !prof !184

if.then.i.i.i.i.i:                                ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %47 = inttoptr i32 %retval.0.i.i.i.i to ptr
  call void @dump_page(ptr noundef %47, ptr noundef nonnull @.str.21) #20
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #20, !srcloc !210
  unreachable

PageSwapCache.exit.i.i:                           ; preds = %land.rhs.i.i.i.i
  %48 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %37, align 4
  %50 = and i32 %49, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %50)
  %tobool.i.i.not.i.i = icmp eq i32 %50, 0
  br i1 %tobool.i.i.not.i.i, label %PageSwapCache.exit.i.i.if.end.i.i189_crit_edge, label %if.then.i64.i, !prof !184

PageSwapCache.exit.i.i.if.end.i.i189_crit_edge:   ; preds = %PageSwapCache.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i.i189

if.then.i64.i:                                    ; preds = %PageSwapCache.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call2.i.i = call i32 @__page_file_index(ptr noundef %32) #20
  br label %page_index.exit.i

if.end.i.i189:                                    ; preds = %PageSwapCache.exit.i.i.if.end.i.i189_crit_edge, %folio_test_swapbacked.exit.i.i.i.i.if.end.i.i189_crit_edge
  %index.i.i = getelementptr inbounds %struct.page, ptr %32, i32 0, i32 1, i32 0, i32 2
  %51 = ptrtoint ptr %index.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %index.i.i, align 4
  br label %page_index.exit.i

page_index.exit.i:                                ; preds = %if.end.i.i189, %if.then.i64.i
  %retval.0.i.i190 = phi i32 [ %call2.i.i, %if.then.i64.i ], [ %52, %if.end.i.i189 ]
  %sub6.i = sub i32 %conv.i, %retval.0.i.i190
  %add7.i = add i32 %sub6.i, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %add7.i, i32 %conv6)
  %cmp.not.i = icmp ugt i32 %add7.i, %conv6
  br i1 %cmp.not.i, label %cond.false.i, label %cond.end.i, !prof !195

cond.false.i:                                     ; preds = %page_index.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.24, i32 noundef 1557) #28
  unreachable

cond.end.i:                                       ; preds = %page_index.exit.i
  %call10.i = call i32 @btrfs_delalloc_reserve_space(ptr noundef %inode, ptr noundef nonnull %data_reserved.i, i64 noundef %28, i64 noundef %30) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %cmp11.i = icmp slt i32 %call10.i, 0
  br i1 %cmp11.i, label %defrag_one_locked_target.exit.thread, label %if.end.i

defrag_one_locked_target.exit.thread:             ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %data_reserved.i) #20
  br label %for.end78

if.end.i:                                         ; preds = %cond.end.i
  %call15.i = call i32 @clear_extent_bit(ptr noundef %io_tree, i64 noundef %28, i64 noundef %sub.i, i32 noundef 8496, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %cached_state) #20
  %call.i.i = call i32 @set_extent_bit(ptr noundef %io_tree, i64 noundef %28, i64 noundef %sub.i, i32 noundef 50, i32 noundef 0, ptr noundef null, ptr noundef nonnull %cached_state, i32 noundef 3136, ptr noundef null) #20
  %sub20.i = sub i32 %conv5.i, %retval.0.i.i190
  call void @__sanitizer_cov_trace_cmp4(i32 %sub20.i, i32 %sub6.i)
  %cmp22.not67.i = icmp ugt i32 %sub20.i, %sub6.i
  br i1 %cmp22.not67.i, label %if.end.i.for.end.i_crit_edge, label %for.body.lr.ph.i

if.end.i.for.end.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %conv26.i = trunc i64 %30 to i32
  br label %for.body.i

for.body.i:                                       ; preds = %ClearPageChecked.exit.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.068.i = phi i32 [ %sub20.i, %for.body.lr.ph.i ], [ %inc.i, %ClearPageChecked.exit.i.for.body.i_crit_edge ]
  %arrayidx24.i = getelementptr ptr, ptr %call8.i.i, i32 %i.068.i
  %53 = ptrtoint ptr %arrayidx24.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %arrayidx24.i, align 4
  %55 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %54, align 4
  %57 = and i32 %56, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %57)
  %tobool.not.i.i.i = icmp eq i32 %57, 0
  br i1 %tobool.not.i.i.i, label %PageCompound.exit.i.i, label %for.body.i.if.then.i.i_crit_edge

for.body.i.if.then.i.i_crit_edge:                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i.i

PageCompound.exit.i.i:                            ; preds = %for.body.i
  %58 = getelementptr inbounds %struct.page, ptr %54, i32 0, i32 1
  %59 = ptrtoint ptr %58 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %58, align 4
  %and.i.i.i.i = and i32 %60, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i, label %do.body7.i.i, label %PageCompound.exit.i.i.if.then.i.i_crit_edge, !prof !184

PageCompound.exit.i.i.if.then.i.i_crit_edge:      ; preds = %PageCompound.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i.i

if.then.i.i:                                      ; preds = %PageCompound.exit.i.i.if.then.i.i_crit_edge, %for.body.i.if.then.i.i_crit_edge
  call void @dump_page(ptr noundef %54, ptr noundef nonnull @.str.25) #20
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 430, 0\0A.popsection", ""() #20, !srcloc !211
  unreachable

do.body7.i.i:                                     ; preds = %PageCompound.exit.i.i
  %61 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile i32, ptr %54, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %62)
  %cmp.i.not.i.i = icmp eq i32 %62, -1
  br i1 %cmp.i.not.i.i, label %if.then16.i.i, label %ClearPageChecked.exit.i, !prof !195

if.then16.i.i:                                    ; preds = %do.body7.i.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @dump_page(ptr noundef %54, ptr noundef nonnull @.str.23) #20
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 430, 0\0A.popsection", ""() #20, !srcloc !212
  unreachable

ClearPageChecked.exit.i:                          ; preds = %do.body7.i.i
  call void @_clear_bit(i32 noundef 10, ptr noundef %54) #20
  %63 = ptrtoint ptr %arrayidx24.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %arrayidx24.i, align 4
  call void @btrfs_page_clamp_set_dirty(ptr noundef %25, ptr noundef %64, i64 noundef %28, i32 noundef %conv26.i) #20
  %inc.i = add i32 %i.068.i, 1
  %cmp22.not.i = icmp ugt i32 %inc.i, %sub6.i
  br i1 %cmp22.not.i, label %ClearPageChecked.exit.i.for.end.i_crit_edge, label %ClearPageChecked.exit.i.for.body.i_crit_edge

ClearPageChecked.exit.i.for.body.i_crit_edge:     ; preds = %ClearPageChecked.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body.i

ClearPageChecked.exit.i.for.end.i_crit_edge:      ; preds = %ClearPageChecked.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end.i

for.end.i:                                        ; preds = %ClearPageChecked.exit.i.for.end.i_crit_edge, %if.end.i.for.end.i_crit_edge
  call void @btrfs_delalloc_release_extents(ptr noundef %inode, i64 noundef %30) #20
  %65 = ptrtoint ptr %data_reserved.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %data_reserved.i, align 4
  %tobool.not.i65.i = icmp eq ptr %66, null
  br i1 %tobool.not.i65.i, label %for.end.i.for.cond61_crit_edge, label %extent_changeset_release.exit.i.i

for.end.i.for.cond61_crit_edge:                   ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.cond61

extent_changeset_release.exit.i.i:                ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #22
  %67 = ptrtoint ptr %66 to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 0, ptr %66, align 4
  %range_changed.i.i.i = getelementptr inbounds %struct.extent_changeset, ptr %66, i32 0, i32 1
  call void @ulist_release(ptr noundef %range_changed.i.i.i) #20
  call void @kfree(ptr noundef nonnull %66) #20
  br label %for.cond61

for.end78:                                        ; preds = %defrag_one_locked_target.exit.thread, %for.cond61.for.end78_crit_edge, %for.cond61.preheader.for.end78_crit_edge
  %ret.1 = phi i32 [ %call10.i, %defrag_one_locked_target.exit.thread ], [ 0, %for.cond61.preheader.for.end78_crit_edge ], [ %call10.i, %for.cond61.for.end78_crit_edge ]
  %68 = ptrtoint ptr %target_list to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %target_list, align 4
  %cmp90.not223 = icmp eq ptr %69, %target_list
  br i1 %cmp90.not223, label %for.end78.free_pages_crit_edge, label %for.end78.for.body94_crit_edge

for.end78.for.body94_crit_edge:                   ; preds = %for.end78
  br label %for.body94

for.end78.free_pages_crit_edge:                   ; preds = %for.end78
  call void @__sanitizer_cov_trace_pc() #22
  br label %free_pages

for.body94:                                       ; preds = %list_del_init.exit.for.body94_crit_edge, %for.end78.for.body94_crit_edge
  %entry1.1224 = phi ptr [ %tmp.0, %list_del_init.exit.for.body94_crit_edge ], [ %69, %for.end78.for.body94_crit_edge ]
  %70 = ptrtoint ptr %entry1.1224 to i32
  call void @__asan_load4_noabort(i32 %70)
  %tmp.0 = load ptr, ptr %entry1.1224, align 8
  %call.i.i191 = call zeroext i1 @__list_del_entry_valid(ptr noundef %entry1.1224) #20
  br i1 %call.i.i191, label %if.end.i.i192, label %for.body94.list_del_init.exit_crit_edge

for.body94.list_del_init.exit_crit_edge:          ; preds = %for.body94
  call void @__sanitizer_cov_trace_pc() #22
  br label %list_del_init.exit

if.end.i.i192:                                    ; preds = %for.body94
  call void @__sanitizer_cov_trace_pc() #22
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %entry1.1224, i32 0, i32 1
  %71 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %prev.i.i, align 4
  %73 = ptrtoint ptr %entry1.1224 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %entry1.1224, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %74, i32 0, i32 1
  %75 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr %72, ptr %prev1.i.i.i, align 4
  %76 = ptrtoint ptr %72 to i32
  call void @__asan_store4_noabort(i32 %76)
  store volatile ptr %74, ptr %72, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i192, %for.body94.list_del_init.exit_crit_edge
  %77 = ptrtoint ptr %entry1.1224 to i32
  call void @__asan_store4_noabort(i32 %77)
  store volatile ptr %entry1.1224, ptr %entry1.1224, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %entry1.1224, i32 0, i32 1
  %78 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %78)
  store ptr %entry1.1224, ptr %prev.i3.i, align 4
  call void @kfree(ptr noundef %entry1.1224) #20
  %cmp90.not = icmp eq ptr %tmp.0, %target_list
  br i1 %cmp90.not, label %list_del_init.exit.free_pages_crit_edge, label %list_del_init.exit.for.body94_crit_edge

list_del_init.exit.for.body94_crit_edge:          ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body94

list_del_init.exit.free_pages_crit_edge:          ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %free_pages

free_pages:                                       ; preds = %list_del_init.exit.free_pages_crit_edge, %for.end78.free_pages_crit_edge, %for.end47.free_pages_crit_edge
  %ret.2 = phi i32 [ %call54, %for.end47.free_pages_crit_edge ], [ %ret.1, %for.end78.free_pages_crit_edge ], [ %ret.1, %list_del_init.exit.free_pages_crit_edge ]
  %call.i = call i32 @__clear_extent_bit(ptr noundef %io_tree, i64 noundef %shl, i64 noundef %sub50, i32 noundef 4, i32 noundef 1, i32 noundef 0, ptr noundef nonnull %cached_state, i32 noundef 3136, ptr noundef null) #20
  br i1 %cmp27214.not255259, label %free_pages.for.end121_crit_edge, label %free_pages.for.body112.preheader_crit_edge

free_pages.for.body112.preheader_crit_edge:       ; preds = %free_pages
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body112.preheader

free_pages.for.end121_crit_edge:                  ; preds = %free_pages
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end121

for.body112.preheader:                            ; preds = %free_pages.for.body112.preheader_crit_edge, %if.then35.for.body112.preheader_crit_edge
  %ret.3263 = phi i32 [ %15, %if.then35.for.body112.preheader_crit_edge ], [ %ret.2, %free_pages.for.body112.preheader_crit_edge ]
  br label %for.body112

for.body112:                                      ; preds = %for.inc119.for.body112_crit_edge, %for.body112.preheader
  %i.2227 = phi i32 [ %inc120, %for.inc119.for.body112_crit_edge ], [ 0, %for.body112.preheader ]
  %arrayidx113 = getelementptr ptr, ptr %call8.i.i, i32 %i.2227
  %79 = ptrtoint ptr %arrayidx113 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %arrayidx113, align 4
  %tobool114.not = icmp eq ptr %80, null
  br i1 %tobool114.not, label %for.body112.for.inc119_crit_edge, label %if.then115

for.body112.for.inc119_crit_edge:                 ; preds = %for.body112
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc119

if.then115:                                       ; preds = %for.body112
  call void @unlock_page(ptr noundef nonnull %80) #20
  %81 = ptrtoint ptr %arrayidx113 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %arrayidx113, align 4
  %83 = getelementptr inbounds %struct.page, ptr %82, i32 0, i32 1
  %84 = ptrtoint ptr %83 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load volatile i32, ptr %83, align 4
  %and.i.i = and i32 %85, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i193 = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i193, label %if.end.i.i195, label %if.then.i.i194, !prof !184

if.then.i.i194:                                   ; preds = %if.then115
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i = add i32 %85, -1
  br label %_compound_head.exit.i

if.end.i.i195:                                    ; preds = %if.then115
  call void @__sanitizer_cov_trace_pc() #22
  %86 = ptrtoint ptr %82 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i195, %if.then.i.i194
  %retval.0.i.i196 = phi i32 [ %sub.i.i, %if.then.i.i194 ], [ %86, %if.end.i.i195 ]
  %87 = inttoptr i32 %retval.0.i.i196 to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %87, i32 0, i32 3
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #20
  %88 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %89)
  %cmp.i.i.i.i197 = icmp eq i32 %89, 0
  br i1 %cmp.i.i.i.i197, label %if.then.i.i.i.i198, label %do.end5.i.i.i.i, !prof !195

if.then.i.i.i.i198:                               ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  %90 = inttoptr i32 %retval.0.i.i196 to ptr
  call void @dump_page(ptr noundef %90, ptr noundef nonnull @.str.26) #20
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #20, !srcloc !213
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !214
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #20
  %91 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #20, !srcloc !215
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %91, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@defrag_one_range, %if.then.i.i.i.i.i199)) #20
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i199], !srcloc !182

if.then.i.i.i.i.i199:                             ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  call void @__page_ref_mod_and_test(ptr noundef %87, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #20
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i199, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.for.inc119_crit_edge

folio_put_testzero.exit.i.i.for.inc119_crit_edge: ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc119

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @__put_page(ptr noundef %87) #20
  br label %for.inc119

for.inc119:                                       ; preds = %if.then.i4.i, %folio_put_testzero.exit.i.i.for.inc119_crit_edge, %for.body112.for.inc119_crit_edge
  %inc120 = add nuw i32 %i.2227, 1
  %exitcond242.not = icmp eq i32 %i.2227, %4
  br i1 %exitcond242.not, label %for.inc119.for.end121_crit_edge, label %for.inc119.for.body112_crit_edge

for.inc119.for.body112_crit_edge:                 ; preds = %for.inc119
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body112

for.inc119.for.end121_crit_edge:                  ; preds = %for.inc119
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.end121

for.end121:                                       ; preds = %for.inc119.for.end121_crit_edge, %free_pages.for.end121_crit_edge, %if.then35.for.end121_crit_edge
  %ret.3264 = phi i32 [ %ret.2, %free_pages.for.end121_crit_edge ], [ %15, %if.then35.for.end121_crit_edge ], [ %ret.3263, %for.inc119.for.end121_crit_edge ]
  call void @kfree(ptr noundef nonnull %call8.i.i) #20
  br label %cleanup

cleanup:                                          ; preds = %for.end121, %if.end7.i.i.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.3264, %for.end121 ], [ -12, %if.end7.i.i.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %target_list) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cached_state) #20
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @defrag_lookup_extent(ptr noundef %inode, i64 noundef %start, i64 noundef %newer_than, i1 noundef zeroext %locked) unnamed_addr #0 align 64 {
entry:
  %disk_key.i214.i = alloca %struct.btrfs_disk_key, align 8
  %disk_key.i203.i = alloca %struct.btrfs_disk_key, align 8
  %disk_key.i.i = alloca %struct.btrfs_disk_key, align 8
  %path.i = alloca %struct.btrfs_path, align 4
  %key.i = alloca %struct.btrfs_key, align 8
  %cached = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %inode, i32 -864
  %extent_tree = getelementptr i8, ptr %inode, i32 -796
  %io_tree2 = getelementptr i8, ptr %inode, i32 -736
  %0 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr.i, align 8
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %fs_info, align 8
  %sectorsize4 = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 167
  %4 = ptrtoint ptr %sectorsize4 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sectorsize4, align 4
  %lock = getelementptr i8, ptr %inode, i32 -780
  tail call void @_raw_read_lock(ptr noundef %lock) #20
  %conv = zext i32 %5 to i64
  %call5 = tail call ptr @lookup_extent_mapping(ptr noundef %extent_tree, i64 noundef %start, i64 noundef %conv) #20
  tail call void @_raw_read_unlock(ptr noundef %lock) #20
  %tobool.not = icmp eq ptr %call5, null
  br i1 %tobool.not, label %entry.if.then14_crit_edge, label %land.lhs.true

entry.if.then14_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then14

land.lhs.true:                                    ; preds = %entry
  %flags = getelementptr inbounds %struct.extent_map, ptr %call5, i32 0, i32 11
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %flags, align 4
  %8 = and i32 %7, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool8.not = icmp eq i32 %8, 0
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %newer_than)
  %tobool10.not = icmp eq i64 %newer_than, 0
  %or.cond = or i1 %tobool10.not, %tobool8.not
  br i1 %or.cond, label %land.lhs.true.if.end30_crit_edge, label %land.lhs.true11

land.lhs.true.if.end30_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end30

land.lhs.true11:                                  ; preds = %land.lhs.true
  %generation = getelementptr inbounds %struct.extent_map, ptr %call5, i32 0, i32 10
  %9 = ptrtoint ptr %generation to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %generation, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %10, i64 %newer_than)
  %cmp.not = icmp ult i64 %10, %newer_than
  br i1 %cmp.not, label %land.lhs.true11.if.end30_crit_edge, label %if.then

land.lhs.true11.if.end30_crit_edge:               ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end30

if.then:                                          ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @free_extent_map(ptr noundef nonnull %call5) #20
  br label %if.then14

if.then14:                                        ; preds = %if.then, %entry.if.then14_crit_edge
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cached) #20
  %11 = ptrtoint ptr %cached to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %cached, align 4
  %add = add i64 %start, -1
  %sub = add i64 %add, %conv
  br i1 %locked, label %if.then14.if.end19_crit_edge, label %if.then17

if.then14.if.end19_crit_edge:                     ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end19

if.then17:                                        ; preds = %if.then14
  call void @__sanitizer_cov_trace_pc() #22
  %call18 = call i32 @lock_extent_bits(ptr noundef %io_tree2, i64 noundef %start, i64 noundef %sub, ptr noundef nonnull %cached) #20
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %if.then14.if.end19_crit_edge
  %12 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %add.ptr.i, align 8
  call void @llvm.lifetime.start.p0(i64 76, ptr nonnull %path.i) #20
  %14 = call ptr @memset(ptr %path.i, i32 0, i32 76)
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key.i) #20
  %15 = getelementptr inbounds %struct.btrfs_key, ptr %key.i, i32 0, i32 1
  %16 = getelementptr inbounds %struct.btrfs_key, ptr %key.i, i32 0, i32 2
  %location.i.i = getelementptr i8, ptr %inode, i32 -860
  %17 = call ptr @memset(ptr %key.i, i32 255, i32 17)
  %18 = ptrtoint ptr %location.i.i to i32
  call void @__asan_loadN_noabort(i32 %18, i32 8)
  %19 = load i64, ptr %location.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %19)
  %tobool.not.i.i = icmp eq i64 %19, 0
  br i1 %tobool.not.i.i, label %if.end19.if.then.i.i_crit_edge, label %lor.lhs.false.i.i

if.end19.if.then.i.i_crit_edge:                   ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i.i

lor.lhs.false.i.i:                                ; preds = %if.end19
  %type.i.i = getelementptr i8, ptr %inode, i32 -852
  %20 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %21)
  %cmp.i.i = icmp eq i8 %21, -124
  br i1 %cmp.i.i, label %lor.lhs.false.i.i.if.then.i.i_crit_edge, label %lor.lhs.false.i.i.btrfs_ino.exit.i_crit_edge

lor.lhs.false.i.i.btrfs_ino.exit.i_crit_edge:     ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %btrfs_ino.exit.i

lor.lhs.false.i.i.if.then.i.i_crit_edge:          ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i.i

if.then.i.i:                                      ; preds = %lor.lhs.false.i.i.if.then.i.i_crit_edge, %if.end19.if.then.i.i_crit_edge
  %i_ino.i.i = getelementptr i8, ptr %inode, i32 40
  %22 = ptrtoint ptr %i_ino.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %i_ino.i.i, align 8
  %conv3.i.i = zext i32 %23 to i64
  br label %btrfs_ino.exit.i

btrfs_ino.exit.i:                                 ; preds = %if.then.i.i, %lor.lhs.false.i.i.btrfs_ino.exit.i_crit_edge
  %ino.0.i.i = phi i64 [ %conv3.i.i, %if.then.i.i ], [ %19, %lor.lhs.false.i.i.btrfs_ino.exit.i_crit_edge ]
  %call2.i = call ptr @alloc_extent_map() #20
  %tobool.not.i = icmp eq ptr %call2.i, null
  br i1 %tobool.not.i, label %btrfs_ino.exit.i.err.i_crit_edge, label %if.end.i

btrfs_ino.exit.i.err.i_crit_edge:                 ; preds = %btrfs_ino.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %err.i

if.end.i:                                         ; preds = %btrfs_ino.exit.i
  %24 = ptrtoint ptr %key.i to i32
  call void @__asan_store8_noabort(i32 %24)
  store i64 %ino.0.i.i, ptr %key.i, align 8
  %25 = ptrtoint ptr %15 to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 108, ptr %15, align 8
  %26 = ptrtoint ptr %16 to i32
  call void @__asan_storeN_noabort(i32 %26, i32 8)
  store i64 %start, ptr %16, align 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %newer_than)
  %tobool3.not.i = icmp eq i64 %newer_than, 0
  br i1 %tobool3.not.i, label %if.else.i, label %if.then4.i

if.then4.i:                                       ; preds = %if.end.i
  %call5.i = call i32 @btrfs_search_forward(ptr noundef %13, ptr noundef nonnull %key.i, ptr noundef nonnull %path.i, i64 noundef %newer_than) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %cmp.i = icmp slt i32 %call5.i, 0
  br i1 %cmp.i, label %if.then4.i.err.i_crit_edge, label %if.end7.i

if.then4.i.err.i_crit_edge:                       ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %err.i

if.end7.i:                                        ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %cmp8.not.i = icmp eq i32 %call5.i, 0
  br i1 %cmp8.not.i, label %if.end7.i.if.end15.i_crit_edge, label %if.end7.i.not_found.i_crit_edge

if.end7.i.not_found.i_crit_edge:                  ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %not_found.i

if.end7.i.if.end15.i_crit_edge:                   ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.i

if.else.i:                                        ; preds = %if.end.i
  %call11.i = call i32 @btrfs_search_slot(ptr noundef null, ptr noundef %13, ptr noundef nonnull %key.i, ptr noundef nonnull %path.i, i32 noundef 0, i32 noundef 0) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11.i)
  %cmp12.i = icmp slt i32 %call11.i, 0
  br i1 %cmp12.i, label %if.else.i.err.i_crit_edge, label %if.else.i.if.end15.i_crit_edge

if.else.i.if.end15.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15.i

if.else.i.err.i_crit_edge:                        ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %err.i

if.end15.i:                                       ; preds = %if.else.i.if.end15.i_crit_edge, %if.end7.i.if.end15.i_crit_edge
  %slots.i = getelementptr inbounds %struct.btrfs_path, ptr %path.i, i32 0, i32 1
  %27 = ptrtoint ptr %slots.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %slots.i, align 4
  %29 = ptrtoint ptr %path.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %path.i, align 4
  %pages.i.i = getelementptr inbounds %struct.extent_buffer, ptr %30, i32 0, i32 12
  %31 = ptrtoint ptr %pages.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %pages.i.i, align 4
  %call.i.i = call ptr @page_address(ptr noundef %32) #20
  %33 = ptrtoint ptr %30 to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %30, align 8
  %conv.i.i = trunc i64 %34 to i32
  %and.i.i = and i32 %conv.i.i, 4095
  %add.ptr.i.i = getelementptr i8, ptr %call.i.i, i32 %and.i.i
  %nritems.i.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i.i, i32 0, i32 7
  %35 = ptrtoint ptr %nritems.i.i to i32
  call void @__asan_loadN_noabort(i32 %35, i32 4)
  %36 = load i32, ptr %nritems.i.i, align 1
  %37 = call i32 @llvm.bswap.i32(i32 %36) #20
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %37)
  %cmp18.not.i = icmp ult i32 %28, %37
  br i1 %cmp18.not.i, label %if.end15.i.if.end31.i_crit_edge, label %if.then19.i

if.end15.i.if.end31.i_crit_edge:                  ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end31.i

if.then19.i:                                      ; preds = %if.end15.i
  %38 = ptrtoint ptr %path.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %path.i, align 4
  %pages.i191.i = getelementptr inbounds %struct.extent_buffer, ptr %39, i32 0, i32 12
  %40 = ptrtoint ptr %pages.i191.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %pages.i191.i, align 4
  %call.i192.i = call ptr @page_address(ptr noundef %41) #20
  %42 = ptrtoint ptr %39 to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %39, align 8
  %conv.i193.i = trunc i64 %43 to i32
  %and.i194.i = and i32 %conv.i193.i, 4095
  %add.ptr.i195.i = getelementptr i8, ptr %call.i192.i, i32 %and.i194.i
  %nritems.i196.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i195.i, i32 0, i32 7
  %44 = ptrtoint ptr %nritems.i196.i to i32
  call void @__asan_loadN_noabort(i32 %44, i32 4)
  %45 = load i32, ptr %nritems.i196.i, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool23.not.i = icmp eq i32 %45, 0
  br i1 %tobool23.not.i, label %cond.false.i, label %cond.end.i, !prof !195

cond.false.i:                                     ; preds = %if.then19.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @__asan_handle_no_return()
  call fastcc void @assertfail(ptr noundef nonnull @.str.17, i32 noundef 1073) #28
  unreachable

cond.end.i:                                       ; preds = %if.then19.i
  call void @__sanitizer_cov_trace_pc() #22
  %46 = ptrtoint ptr %path.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %path.i, align 4
  %pages.i197.i = getelementptr inbounds %struct.extent_buffer, ptr %47, i32 0, i32 12
  %48 = ptrtoint ptr %pages.i197.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %pages.i197.i, align 4
  %call.i198.i = call ptr @page_address(ptr noundef %49) #20
  %50 = ptrtoint ptr %47 to i32
  call void @__asan_load8_noabort(i32 %50)
  %51 = load i64, ptr %47, align 8
  %conv.i199.i = trunc i64 %51 to i32
  %and.i200.i = and i32 %conv.i199.i, 4095
  %add.ptr.i201.i = getelementptr i8, ptr %call.i198.i, i32 %and.i200.i
  %nritems.i202.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i201.i, i32 0, i32 7
  %52 = ptrtoint ptr %nritems.i202.i to i32
  call void @__asan_loadN_noabort(i32 %52, i32 4)
  %53 = load i32, ptr %nritems.i202.i, align 1
  %54 = call i32 @llvm.bswap.i32(i32 %53) #20
  %sub.i = add i32 %54, -1
  %55 = ptrtoint ptr %slots.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %sub.i, ptr %slots.i, align 4
  br label %if.end31.i

if.end31.i:                                       ; preds = %cond.end.i, %if.end15.i.if.end31.i_crit_edge
  %56 = ptrtoint ptr %path.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %path.i, align 4
  %58 = ptrtoint ptr %slots.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %slots.i, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %disk_key.i.i) #20
  %60 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i.i, i32 0, i32 1
  %61 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i.i, i32 0, i32 2
  %mul.i.i.i.i.i = mul i32 %59, 25
  %add.i.i.i.i.i = add i32 %mul.i.i.i.i.i, 101
  %62 = call ptr @memset(ptr %disk_key.i.i, i32 255, i32 17)
  call void @read_extent_buffer(ptr noundef %57, ptr noundef nonnull %disk_key.i.i, i32 noundef %add.i.i.i.i.i, i32 noundef 17) #20
  %63 = ptrtoint ptr %61 to i32
  call void @__asan_loadN_noabort(i32 %63, i32 8)
  %64 = load i64, ptr %61, align 1
  %65 = call i64 @llvm.bswap.i64(i64 %64) #20
  %66 = ptrtoint ptr %16 to i32
  call void @__asan_storeN_noabort(i32 %66, i32 8)
  store i64 %65, ptr %16, align 1
  %67 = ptrtoint ptr %60 to i32
  call void @__asan_load1_noabort(i32 %67)
  %68 = load i8, ptr %60, align 8
  %69 = ptrtoint ptr %15 to i32
  call void @__asan_store1_noabort(i32 %69)
  store i8 %68, ptr %15, align 8
  %70 = ptrtoint ptr %disk_key.i.i to i32
  call void @__asan_load8_noabort(i32 %70)
  %71 = load i64, ptr %disk_key.i.i, align 8
  %72 = call i64 @llvm.bswap.i64(i64 %71) #20
  %73 = ptrtoint ptr %key.i to i32
  call void @__asan_store8_noabort(i32 %73)
  store i64 %72, ptr %key.i, align 8
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %disk_key.i.i) #20
  call void @__sanitizer_cov_trace_cmp8(i64 %72, i64 %ino.0.i.i)
  %cmp37.i = icmp eq i64 %72, %ino.0.i.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 108, i8 %68)
  %cmp39.i = icmp eq i8 %68, 108
  %or.cond235.i = select i1 %cmp37.i, i1 %cmp39.i, i1 false
  call void @__sanitizer_cov_trace_cmp8(i64 %65, i64 %start)
  %cmp43.i = icmp eq i64 %65, %start
  %or.cond236.i = select i1 %or.cond235.i, i1 %cmp43.i, i1 false
  br i1 %or.cond236.i, label %if.end31.i.iterate.i_crit_edge, label %if.end46.i

if.end31.i.iterate.i_crit_edge:                   ; preds = %if.end31.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %iterate.i

if.end46.i:                                       ; preds = %if.end31.i
  %74 = ptrtoint ptr %slots.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %slots.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %75)
  %cmp49.i = icmp sgt i32 %75, 0
  br i1 %cmp49.i, label %if.then51.i, label %if.end46.i.iterate.i_crit_edge

if.end46.i.iterate.i_crit_edge:                   ; preds = %if.end46.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %iterate.i

if.then51.i:                                      ; preds = %if.end46.i
  %76 = ptrtoint ptr %path.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %path.i, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %disk_key.i203.i) #20
  %78 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i203.i, i32 0, i32 1
  %79 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i203.i, i32 0, i32 2
  %mul.i.i.i.i204.i = mul i32 %75, 25
  %add.i.i.i.i205.i = add i32 %mul.i.i.i.i204.i, 101
  %80 = call ptr @memset(ptr %disk_key.i203.i, i32 255, i32 17)
  call void @read_extent_buffer(ptr noundef %77, ptr noundef nonnull %disk_key.i203.i, i32 noundef %add.i.i.i.i205.i, i32 noundef 17) #20
  %81 = ptrtoint ptr %79 to i32
  call void @__asan_loadN_noabort(i32 %81, i32 8)
  %82 = load i64, ptr %79, align 1
  %83 = call i64 @llvm.bswap.i64(i64 %82) #20
  %84 = ptrtoint ptr %16 to i32
  call void @__asan_storeN_noabort(i32 %84, i32 8)
  store i64 %83, ptr %16, align 1
  %85 = ptrtoint ptr %78 to i32
  call void @__asan_load1_noabort(i32 %85)
  %86 = load i8, ptr %78, align 8
  %87 = ptrtoint ptr %15 to i32
  call void @__asan_store1_noabort(i32 %87)
  store i8 %86, ptr %15, align 8
  %88 = ptrtoint ptr %disk_key.i203.i to i32
  call void @__asan_load8_noabort(i32 %88)
  %89 = load i64, ptr %disk_key.i203.i, align 8
  %90 = call i64 @llvm.bswap.i64(i64 %89) #20
  %91 = ptrtoint ptr %key.i to i32
  call void @__asan_store8_noabort(i32 %91)
  store i64 %90, ptr %key.i, align 8
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %disk_key.i203.i) #20
  call void @__sanitizer_cov_trace_cmp8(i64 %90, i64 %ino.0.i.i)
  %cmp57.i = icmp eq i64 %90, %ino.0.i.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 108, i8 %86)
  %cmp62.i = icmp eq i8 %86, 108
  %or.cond237.i = select i1 %cmp57.i, i1 %cmp62.i, i1 false
  br i1 %or.cond237.i, label %if.then64.i, label %if.then51.i.iterate.i_crit_edge

if.then51.i.iterate.i_crit_edge:                  ; preds = %if.then51.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %iterate.i

if.then64.i:                                      ; preds = %if.then51.i
  call void @__sanitizer_cov_trace_pc() #22
  %92 = ptrtoint ptr %slots.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %slots.i, align 4
  %dec.i = add i32 %93, -1
  store i32 %dec.i, ptr %slots.i, align 4
  br label %iterate.i

iterate.i:                                        ; preds = %if.then64.i, %if.then51.i.iterate.i_crit_edge, %if.end46.i.iterate.i_crit_edge, %if.end31.i.iterate.i_crit_edge
  %94 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i214.i, i32 0, i32 1
  %95 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i214.i, i32 0, i32 2
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.cond.i.backedge, %iterate.i
  %96 = ptrtoint ptr %slots.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %slots.i, align 4
  %98 = ptrtoint ptr %path.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %path.i, align 4
  %pages.i208.i = getelementptr inbounds %struct.extent_buffer, ptr %99, i32 0, i32 12
  %100 = ptrtoint ptr %pages.i208.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %pages.i208.i, align 4
  %call.i209.i = call ptr @page_address(ptr noundef %101) #20
  %102 = ptrtoint ptr %99 to i32
  call void @__asan_load8_noabort(i32 %102)
  %103 = load i64, ptr %99, align 8
  %conv.i210.i = trunc i64 %103 to i32
  %and.i211.i = and i32 %conv.i210.i, 4095
  %add.ptr.i212.i = getelementptr i8, ptr %call.i209.i, i32 %and.i211.i
  %nritems.i213.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i212.i, i32 0, i32 7
  %104 = ptrtoint ptr %nritems.i213.i to i32
  call void @__asan_loadN_noabort(i32 %104, i32 4)
  %105 = load i32, ptr %nritems.i213.i, align 1
  %106 = call i32 @llvm.bswap.i32(i32 %105) #20
  call void @__sanitizer_cov_trace_cmp4(i32 %97, i32 %106)
  %cmp74.not.i = icmp ult i32 %97, %106
  br i1 %cmp74.not.i, label %if.end77.i, label %while.cond.i.next.i_crit_edge

while.cond.i.next.i_crit_edge:                    ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %next.i

if.end77.i:                                       ; preds = %while.cond.i
  %107 = ptrtoint ptr %path.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %path.i, align 4
  %109 = ptrtoint ptr %slots.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %slots.i, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %disk_key.i214.i) #20
  %mul.i.i.i.i215.i = mul i32 %110, 25
  %add.i.i.i.i216.i = add i32 %mul.i.i.i.i215.i, 101
  %111 = call ptr @memset(ptr %disk_key.i214.i, i32 255, i32 17)
  call void @read_extent_buffer(ptr noundef %108, ptr noundef nonnull %disk_key.i214.i, i32 noundef %add.i.i.i.i216.i, i32 noundef 17) #20
  %112 = ptrtoint ptr %95 to i32
  call void @__asan_loadN_noabort(i32 %112, i32 8)
  %113 = load i64, ptr %95, align 1
  %114 = call i64 @llvm.bswap.i64(i64 %113) #20
  %115 = ptrtoint ptr %16 to i32
  call void @__asan_storeN_noabort(i32 %115, i32 8)
  store i64 %114, ptr %16, align 1
  %116 = ptrtoint ptr %94 to i32
  call void @__asan_load1_noabort(i32 %116)
  %117 = load i8, ptr %94, align 8
  %118 = ptrtoint ptr %15 to i32
  call void @__asan_store1_noabort(i32 %118)
  store i8 %117, ptr %15, align 8
  %119 = ptrtoint ptr %disk_key.i214.i to i32
  call void @__asan_load8_noabort(i32 %119)
  %120 = load i64, ptr %disk_key.i214.i, align 8
  %121 = call i64 @llvm.bswap.i64(i64 %120) #20
  %122 = ptrtoint ptr %key.i to i32
  call void @__asan_store8_noabort(i32 %122)
  store i64 %121, ptr %key.i, align 8
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %disk_key.i214.i) #20
  call void @__sanitizer_cov_trace_cmp8(i64 %121, i64 %ino.0.i.i)
  %cmp83.i = icmp ult i64 %121, %ino.0.i.i
  br i1 %cmp83.i, label %do.end.i, label %lor.lhs.false.critedge.i, !prof !195

do.end.i:                                         ; preds = %if.end77.i
  call void @__sanitizer_cov_trace_pc() #22
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1104, i32 noundef 9, ptr noundef null) #20
  br label %next.i

lor.lhs.false.critedge.i:                         ; preds = %if.end77.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 108, i8 %117)
  %cmp113.i = icmp ult i8 %117, 108
  br i1 %cmp113.i, label %lor.lhs.false.critedge.i.next.i_crit_edge, label %if.end116.i

lor.lhs.false.critedge.i.next.i_crit_edge:        ; preds = %lor.lhs.false.critedge.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %next.i

if.end116.i:                                      ; preds = %lor.lhs.false.critedge.i
  call void @__sanitizer_cov_trace_cmp8(i64 %121, i64 %ino.0.i.i)
  %cmp118.i = icmp ugt i64 %121, %ino.0.i.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 108, i8 %117)
  %cmp123.i = icmp ne i8 %117, 108
  %or.cond.i = select i1 %cmp118.i, i1 true, i1 %cmp123.i
  br i1 %or.cond.i, label %if.end116.i.not_found.i_crit_edge, label %if.end126.i

if.end116.i.not_found.i_crit_edge:                ; preds = %if.end116.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %not_found.i

if.end126.i:                                      ; preds = %if.end116.i
  call void @__sanitizer_cov_trace_cmp8(i64 %114, i64 %start)
  %cmp128.i = icmp ugt i64 %114, %start
  br i1 %cmp128.i, label %if.then130.i, label %if.end134.i

if.then130.i:                                     ; preds = %if.end126.i
  call void @__sanitizer_cov_trace_pc() #22
  %start131.i = getelementptr inbounds %struct.extent_map, ptr %call2.i, i32 0, i32 1
  %123 = ptrtoint ptr %start131.i to i32
  call void @__asan_store8_noabort(i32 %123)
  store i64 %start, ptr %start131.i, align 8
  %orig_start.i = getelementptr inbounds %struct.extent_map, ptr %call2.i, i32 0, i32 5
  %124 = ptrtoint ptr %orig_start.i to i32
  call void @__asan_store8_noabort(i32 %124)
  store i64 %start, ptr %orig_start.i, align 8
  %block_start.i = getelementptr inbounds %struct.extent_map, ptr %call2.i, i32 0, i32 8
  %125 = ptrtoint ptr %block_start.i to i32
  call void @__asan_store8_noabort(i32 %125)
  store i64 -3, ptr %block_start.i, align 8
  %126 = ptrtoint ptr %16 to i32
  call void @__asan_loadN_noabort(i32 %126, i32 8)
  %127 = load i64, ptr %16, align 1
  %sub133.i = sub i64 %127, %start
  %len.i = getelementptr inbounds %struct.extent_map, ptr %call2.i, i32 0, i32 2
  %128 = ptrtoint ptr %len.i to i32
  call void @__asan_store8_noabort(i32 %128)
  store i64 %sub133.i, ptr %len.i, align 8
  br label %while.end.i

if.end134.i:                                      ; preds = %if.end126.i
  %129 = ptrtoint ptr %path.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %path.i, align 4
  %131 = ptrtoint ptr %slots.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %slots.i, align 4
  %mul.i.i.i.i = mul i32 %132, 25
  %add.i.i.i.i = add i32 %mul.i.i.i.i, 101
  %133 = inttoptr i32 %add.i.i.i.i to ptr
  %call.i.i.i = call i32 @btrfs_get_32(ptr noundef %130, ptr noundef %133, i32 noundef 17) #20
  %call140.i = call i64 @btrfs_file_extent_end(ptr noundef nonnull %path.i) #20
  call void @__sanitizer_cov_trace_cmp8(i64 %call140.i, i64 %start)
  %cmp141.not.i = icmp ugt i64 %call140.i, %start
  br i1 %cmp141.not.i, label %if.end144.i, label %if.end134.i.next.i_crit_edge

if.end134.i.next.i_crit_edge:                     ; preds = %if.end134.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %next.i

if.end144.i:                                      ; preds = %if.end134.i
  call void @__sanitizer_cov_trace_pc() #22
  %add.i = add i32 %call.i.i.i, 101
  %134 = inttoptr i32 %add.i to ptr
  call void @btrfs_extent_item_to_extent_map(ptr noundef %add.ptr.i, ptr noundef nonnull %path.i, ptr noundef %134, i1 noundef zeroext false, ptr noundef nonnull %call2.i) #20
  br label %while.end.i

next.i:                                           ; preds = %if.end134.i.next.i_crit_edge, %lor.lhs.false.critedge.i.next.i_crit_edge, %do.end.i, %while.cond.i.next.i_crit_edge
  %135 = ptrtoint ptr %slots.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %slots.i, align 4
  %inc.i.i.i = add i32 %136, 1
  store i32 %inc.i.i.i, ptr %slots.i, align 4
  %137 = ptrtoint ptr %path.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %path.i, align 4
  %pages.i.i.i.i = getelementptr inbounds %struct.extent_buffer, ptr %138, i32 0, i32 12
  %139 = ptrtoint ptr %pages.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %pages.i.i.i.i, align 4
  %call.i.i.i.i = call ptr @page_address(ptr noundef %140) #20
  %141 = ptrtoint ptr %138 to i32
  call void @__asan_load8_noabort(i32 %141)
  %142 = load i64, ptr %138, align 8
  %conv.i.i.i.i = trunc i64 %142 to i32
  %and.i.i.i.i = and i32 %conv.i.i.i.i, 4095
  %add.ptr.i.i.i.i = getelementptr i8, ptr %call.i.i.i.i, i32 %and.i.i.i.i
  %nritems.i.i.i.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i.i.i.i, i32 0, i32 7
  %143 = ptrtoint ptr %nritems.i.i.i.i to i32
  call void @__asan_loadN_noabort(i32 %143, i32 4)
  %144 = load i32, ptr %nritems.i.i.i.i, align 1
  %145 = call i32 @llvm.bswap.i32(i32 %144) #20
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i.i.i, i32 %145)
  %cmp.not.i.i.i = icmp ult i32 %inc.i.i.i, %145
  br i1 %cmp.not.i.i.i, label %next.i.while.cond.i.backedge_crit_edge, label %btrfs_next_item.exit.i

next.i.while.cond.i.backedge_crit_edge:           ; preds = %next.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.cond.i.backedge

btrfs_next_item.exit.i:                           ; preds = %next.i
  %call4.i.i.i = call i32 @btrfs_next_old_leaf(ptr noundef %13, ptr noundef nonnull %path.i, i64 noundef 0) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i.i)
  %cmp146.i = icmp slt i32 %call4.i.i.i, 0
  br i1 %cmp146.i, label %btrfs_next_item.exit.i.err.i_crit_edge, label %if.end149.i

btrfs_next_item.exit.i.err.i_crit_edge:           ; preds = %btrfs_next_item.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %err.i

if.end149.i:                                      ; preds = %btrfs_next_item.exit.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i.i)
  %cmp150.not.i = icmp eq i32 %call4.i.i.i, 0
  br i1 %cmp150.not.i, label %if.end149.i.while.cond.i.backedge_crit_edge, label %if.end149.i.not_found.i_crit_edge

if.end149.i.not_found.i_crit_edge:                ; preds = %if.end149.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %not_found.i

if.end149.i.while.cond.i.backedge_crit_edge:      ; preds = %if.end149.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.cond.i.backedge

while.cond.i.backedge:                            ; preds = %if.end149.i.while.cond.i.backedge_crit_edge, %next.i.while.cond.i.backedge_crit_edge
  br label %while.cond.i

while.end.i:                                      ; preds = %if.end144.i, %if.then130.i
  call void @btrfs_release_path(ptr noundef nonnull %path.i) #20
  br label %defrag_get_extent.exit

not_found.i:                                      ; preds = %if.end149.i.not_found.i_crit_edge, %if.end116.i.not_found.i_crit_edge, %if.end7.i.not_found.i_crit_edge
  call void @btrfs_release_path(ptr noundef nonnull %path.i) #20
  call void @free_extent_map(ptr noundef nonnull %call2.i) #20
  br label %defrag_get_extent.exit

err.i:                                            ; preds = %btrfs_next_item.exit.i.err.i_crit_edge, %if.else.i.err.i_crit_edge, %if.then4.i.err.i_crit_edge, %btrfs_ino.exit.i.err.i_crit_edge
  %ret.3.i = phi i32 [ %call5.i, %if.then4.i.err.i_crit_edge ], [ %call11.i, %if.else.i.err.i_crit_edge ], [ -12, %btrfs_ino.exit.i.err.i_crit_edge ], [ %call4.i.i.i, %btrfs_next_item.exit.i.err.i_crit_edge ]
  call void @btrfs_release_path(ptr noundef nonnull %path.i) #20
  call void @free_extent_map(ptr noundef %call2.i) #20
  %146 = inttoptr i32 %ret.3.i to ptr
  br label %defrag_get_extent.exit

defrag_get_extent.exit:                           ; preds = %err.i, %not_found.i, %while.end.i
  %retval.0.i = phi ptr [ %146, %err.i ], [ null, %not_found.i ], [ %call2.i, %while.end.i ]
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key.i) #20
  call void @llvm.lifetime.end.p0(i64 76, ptr nonnull %path.i) #20
  br i1 %locked, label %defrag_get_extent.exit.if.end25_crit_edge, label %if.then23

defrag_get_extent.exit.if.end25_crit_edge:        ; preds = %defrag_get_extent.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end25

if.then23:                                        ; preds = %defrag_get_extent.exit
  call void @__sanitizer_cov_trace_pc() #22
  %call.i = call i32 @__clear_extent_bit(ptr noundef %io_tree2, i64 noundef %start, i64 noundef %sub, i32 noundef 4, i32 noundef 1, i32 noundef 0, ptr noundef nonnull %cached, i32 noundef 3136, ptr noundef null) #20
  br label %if.end25

if.end25:                                         ; preds = %if.then23, %defrag_get_extent.exit.if.end25_crit_edge
  %cmp.i59 = icmp ugt ptr %retval.0.i, inttoptr (i32 -4096 to ptr)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cached) #20
  br i1 %cmp.i59, label %if.end25.cleanup31_crit_edge, label %if.end25.if.end30_crit_edge

if.end25.if.end30_crit_edge:                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end30

if.end25.cleanup31_crit_edge:                     ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup31

if.end30:                                         ; preds = %if.end25.if.end30_crit_edge, %land.lhs.true11.if.end30_crit_edge, %land.lhs.true.if.end30_crit_edge
  %em.1 = phi ptr [ %retval.0.i, %if.end25.if.end30_crit_edge ], [ %call5, %land.lhs.true11.if.end30_crit_edge ], [ %call5, %land.lhs.true.if.end30_crit_edge ]
  br label %cleanup31

cleanup31:                                        ; preds = %if.end30, %if.end25.cleanup31_crit_edge
  %retval.1 = phi ptr [ %em.1, %if.end30 ], [ null, %if.end25.cleanup31_crit_edge ]
  ret ptr %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @test_range_bit(ptr noundef, i64 noundef, i64 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_extent_map(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_read_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @lookup_extent_mapping(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_read_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_extent_bits(ptr noundef, i64 noundef, i64 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_extent_map() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_search_forward(ptr noundef, ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_search_slot(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @btrfs_file_extent_end(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_extent_item_to_extent_map(ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_release_path(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_address(ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #14

; Function Attrs: null_pointer_is_valid
declare dso_local void @read_extent_buffer(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.bswap.i64(i64) #14

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_get_32(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_next_old_leaf(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__clear_extent_bit(ptr noundef, i64 noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @page_cache_sync_ra(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @defrag_prepare_one_page(ptr noundef %inode, i32 noundef %index) unnamed_addr #0 align 64 {
entry:
  %cached_state = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %i_mapping = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 37, i32 9
  %0 = ptrtoint ptr %i_mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_mapping, align 8
  %gfp_mask.i.i.i = getelementptr inbounds %struct.address_space, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %gfp_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %gfp_mask.i.i.i, align 4
  %and.i.i94 = and i32 %3, -129
  %conv = zext i32 %index to i64
  %shl = shl nuw nsw i64 %conv, 12
  %sub = or i64 %shl, 4095
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cached_state) #20
  %4 = ptrtoint ptr %cached_state to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %cached_state, align 4
  %call.i260 = call ptr @pagecache_get_page(ptr noundef %1, i32 noundef %index, i32 noundef 7, i32 noundef %and.i.i94) #20
  %tobool.not261 = icmp eq ptr %call.i260, null
  br i1 %tobool.not261, label %entry.cleanup45_crit_edge, label %if.end.lr.ph

entry.cleanup45_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup45

if.end.lr.ph:                                     ; preds = %entry
  %io_tree = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 4
  br label %if.end

if.end:                                           ; preds = %again.backedge.if.end_crit_edge, %if.end.lr.ph
  %call.i262 = phi ptr [ %call.i260, %if.end.lr.ph ], [ %call.i, %again.backedge.if.end_crit_edge ]
  %5 = ptrtoint ptr %call.i262 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %call.i262, align 4
  %7 = and i32 %6, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not.i = icmp eq i32 %7, 0
  br i1 %tobool.not.i, label %PageCompound.exit, label %if.end.if.then5_crit_edge

if.end.if.then5_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then5

PageCompound.exit:                                ; preds = %if.end
  %8 = getelementptr inbounds %struct.page, ptr %call.i262, i32 0, i32 1
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %8, align 4
  %and.i.i = and i32 %10, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool4.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool4.not, label %if.end7, label %PageCompound.exit.if.then5_crit_edge

PageCompound.exit.if.then5_crit_edge:             ; preds = %PageCompound.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then5

if.then5:                                         ; preds = %PageCompound.exit.if.then5_crit_edge, %if.end.if.then5_crit_edge
  call void @unlock_page(ptr noundef nonnull %call.i262) #20
  %11 = getelementptr inbounds %struct.page, ptr %call.i262, i32 0, i32 1
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %11, align 4
  %and.i.i95 = and i32 %13, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i95)
  %tobool.not.i.i = icmp eq i32 %and.i.i95, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !prof !184

if.then.i.i:                                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i = add i32 %13, -1
  br label %_compound_head.exit.i

if.end.i.i:                                       ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #22
  %14 = ptrtoint ptr %call.i262 to i32
  br label %_compound_head.exit.i

_compound_head.exit.i:                            ; preds = %if.end.i.i, %if.then.i.i
  %retval.0.i.i = phi i32 [ %sub.i.i, %if.then.i.i ], [ %14, %if.end.i.i ]
  %15 = inttoptr i32 %retval.0.i.i to ptr
  %_refcount.i.i.i.i.i = getelementptr inbounds %struct.page, ptr %15, i32 0, i32 3
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #20
  %16 = ptrtoint ptr %_refcount.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %_refcount.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp.i.i.i.i = icmp eq i32 %17, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %do.end5.i.i.i.i, !prof !195

if.then.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @dump_page(ptr noundef %15, ptr noundef nonnull @.str.26) #20
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #20, !srcloc !213
  unreachable

do.end5.i.i.i.i:                                  ; preds = %_compound_head.exit.i
  %call.i.i.i10.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i, i32 noundef 4) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !214
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i, i32 1, i32 3, i32 1) #20
  %18 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i, ptr %_refcount.i.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i) #20, !srcloc !215
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %18, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@defrag_prepare_one_page, %if.then.i.i.i.i.i)) #20
          to label %folio_put_testzero.exit.i.i [label %if.then.i.i.i.i.i], !srcloc !182

if.then.i.i.i.i.i:                                ; preds = %do.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %conv.i.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i.i to i32
  call void @__page_ref_mod_and_test(ptr noundef %15, i32 noundef -1, i32 noundef %conv.i.i.i.i.i) #20
  br label %folio_put_testzero.exit.i.i

folio_put_testzero.exit.i.i:                      ; preds = %if.then.i.i.i.i.i, %do.end5.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i4.i, label %folio_put_testzero.exit.i.i.cleanup45_crit_edge

folio_put_testzero.exit.i.i.cleanup45_crit_edge:  ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup45

if.then.i4.i:                                     ; preds = %folio_put_testzero.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @__put_page(ptr noundef %15) #20
  br label %cleanup45

if.end7:                                          ; preds = %PageCompound.exit
  %call8 = call i32 @set_page_extent_mapped(ptr noundef nonnull %call.i262) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %cmp = icmp slt i32 %call8, 0
  br i1 %cmp, label %if.then10, label %while.cond.preheader

while.cond.preheader:                             ; preds = %if.end7
  %19 = ptrtoint ptr %call.i262 to i32
  %mapping20 = getelementptr inbounds %struct.page, ptr %call.i262, i32 0, i32 1, i32 0, i32 1
  br label %while.cond

if.then10:                                        ; preds = %if.end7
  call void @unlock_page(ptr noundef nonnull %call.i262) #20
  %20 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %8, align 4
  %and.i.i96 = and i32 %21, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i96)
  %tobool.not.i.i97 = icmp eq i32 %and.i.i96, 0
  br i1 %tobool.not.i.i97, label %if.end.i.i100, label %if.then.i.i99, !prof !184

if.then.i.i99:                                    ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i98 = add i32 %21, -1
  br label %_compound_head.exit.i105

if.end.i.i100:                                    ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #22
  %22 = ptrtoint ptr %call.i262 to i32
  br label %_compound_head.exit.i105

_compound_head.exit.i105:                         ; preds = %if.end.i.i100, %if.then.i.i99
  %retval.0.i.i101 = phi i32 [ %sub.i.i98, %if.then.i.i99 ], [ %22, %if.end.i.i100 ]
  %23 = inttoptr i32 %retval.0.i.i101 to ptr
  %_refcount.i.i.i.i.i102 = getelementptr inbounds %struct.page, ptr %23, i32 0, i32 3
  %call.i.i.i.i.i.i.i103 = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i102, i32 noundef 4) #20
  %24 = ptrtoint ptr %_refcount.i.i.i.i.i102 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %_refcount.i.i.i.i.i102, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp.i.i.i.i104 = icmp eq i32 %25, 0
  br i1 %cmp.i.i.i.i104, label %if.then.i.i.i.i106, label %do.end5.i.i.i.i110, !prof !195

if.then.i.i.i.i106:                               ; preds = %_compound_head.exit.i105
  call void @__sanitizer_cov_trace_pc() #22
  call void @dump_page(ptr noundef %23, ptr noundef nonnull @.str.26) #20
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #20, !srcloc !213
  unreachable

do.end5.i.i.i.i110:                               ; preds = %_compound_head.exit.i105
  %call.i.i.i10.i.i.i.i107 = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i102, i32 noundef 4) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !214
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i102, i32 1, i32 3, i32 1) #20
  %26 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i102, ptr %_refcount.i.i.i.i.i102, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i102) #20, !srcloc !215
  %asmresult.i.i.i.i.i.i.i.i.i.i108 = extractvalue { i32, i32 } %26, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i108)
  %cmp.i.i.i.i.i.i.i109 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i108, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@defrag_prepare_one_page, %if.then.i.i.i.i.i112)) #20
          to label %folio_put_testzero.exit.i.i113 [label %if.then.i.i.i.i.i112], !srcloc !182

if.then.i.i.i.i.i112:                             ; preds = %do.end5.i.i.i.i110
  call void @__sanitizer_cov_trace_pc() #22
  %conv.i.i.i.i.i111 = zext i1 %cmp.i.i.i.i.i.i.i109 to i32
  call void @__page_ref_mod_and_test(ptr noundef %23, i32 noundef -1, i32 noundef %conv.i.i.i.i.i111) #20
  br label %folio_put_testzero.exit.i.i113

folio_put_testzero.exit.i.i113:                   ; preds = %if.then.i.i.i.i.i112, %do.end5.i.i.i.i110
  br i1 %cmp.i.i.i.i.i.i.i109, label %if.then.i4.i114, label %folio_put_testzero.exit.i.i113.put_page.exit115_crit_edge

folio_put_testzero.exit.i.i113.put_page.exit115_crit_edge: ; preds = %folio_put_testzero.exit.i.i113
  call void @__sanitizer_cov_trace_pc() #22
  br label %put_page.exit115

if.then.i4.i114:                                  ; preds = %folio_put_testzero.exit.i.i113
  call void @__sanitizer_cov_trace_pc() #22
  call void @__put_page(ptr noundef %23) #20
  br label %put_page.exit115

put_page.exit115:                                 ; preds = %if.then.i4.i114, %folio_put_testzero.exit.i.i113.put_page.exit115_crit_edge
  %27 = inttoptr i32 %call8 to ptr
  br label %cleanup45

while.cond:                                       ; preds = %PagePrivate.exit.while.cond_crit_edge, %while.cond.preheader
  %call13 = call i32 @lock_extent_bits(ptr noundef %io_tree, i64 noundef %shl, i64 noundef %sub, ptr noundef nonnull %cached_state) #20
  %call14 = call ptr @btrfs_lookup_ordered_range(ptr noundef %inode, i64 noundef %shl, i64 noundef 4096) #20
  %call.i116 = call i32 @__clear_extent_bit(ptr noundef %io_tree, i64 noundef %shl, i64 noundef %sub, i32 noundef 4, i32 noundef 1, i32 noundef 0, ptr noundef nonnull %cached_state, i32 noundef 3136, ptr noundef null) #20
  %tobool17.not = icmp eq ptr %call14, null
  br i1 %tobool17.not, label %while.end, label %if.end19

if.end19:                                         ; preds = %while.cond
  call void @unlock_page(ptr noundef nonnull %call.i262) #20
  call void @btrfs_start_ordered_extent(ptr noundef nonnull %call14, i32 noundef 1) #20
  call void @btrfs_put_ordered_extent(ptr noundef nonnull %call14) #20
  call void @__might_sleep(ptr noundef nonnull @.str.20, i32 noundef 788) #20
  %28 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %8, align 4
  %and.i.i117 = and i32 %29, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i117)
  %tobool.not.i.i118 = icmp eq i32 %and.i.i117, 0
  br i1 %tobool.not.i.i118, label %if.end19._compound_head.exit.i123_crit_edge, label %if.then.i.i120, !prof !184

if.end19._compound_head.exit.i123_crit_edge:      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #22
  br label %_compound_head.exit.i123

if.then.i.i120:                                   ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i119 = add i32 %29, -1
  br label %_compound_head.exit.i123

_compound_head.exit.i123:                         ; preds = %if.then.i.i120, %if.end19._compound_head.exit.i123_crit_edge
  %retval.0.i.i122 = phi i32 [ %sub.i.i119, %if.then.i.i120 ], [ %19, %if.end19._compound_head.exit.i123_crit_edge ]
  %30 = inttoptr i32 %retval.0.i.i122 to ptr
  %31 = getelementptr inbounds %struct.page, ptr %30, i32 0, i32 1
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %31, align 4
  %and.i.i.i.i = and i32 %33, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %folio_flags.exit.i.i, label %if.then.i.i.i, !prof !184

if.then.i.i.i:                                    ; preds = %_compound_head.exit.i123
  call void @__sanitizer_cov_trace_pc() #22
  %34 = inttoptr i32 %retval.0.i.i122 to ptr
  call void @dump_page(ptr noundef %34, ptr noundef nonnull @.str.21) #20
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #20, !srcloc !210
  unreachable

folio_flags.exit.i.i:                             ; preds = %_compound_head.exit.i123
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %30, i32 noundef 4) #20
  %35 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %30, align 4
  %and.i.i4.i.i = and i32 %36, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i4.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %folio_trylock.exit.i, label %folio_flags.exit.i.i.if.then.i124_crit_edge

folio_flags.exit.i.i.if.then.i124_crit_edge:      ; preds = %folio_flags.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i124

folio_trylock.exit.i:                             ; preds = %folio_flags.exit.i.i
  call void @llvm.prefetch.p0(ptr %30, i32 1, i32 3, i32 1) #20
  %37 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %30, ptr %30, i32 1, ptr elementtype(i32) %30) #20, !srcloc !217
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %37, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !218
  %and1.i.i.i.i = and i32 %asmresult.i.i.i.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i)
  %phi.cmp.i.i.i = icmp eq i32 %and1.i.i.i.i, 0
  br i1 %phi.cmp.i.i.i, label %folio_trylock.exit.i.lock_page.exit_crit_edge, label %folio_trylock.exit.i.if.then.i124_crit_edge

folio_trylock.exit.i.if.then.i124_crit_edge:      ; preds = %folio_trylock.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i124

folio_trylock.exit.i.lock_page.exit_crit_edge:    ; preds = %folio_trylock.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %lock_page.exit

if.then.i124:                                     ; preds = %folio_trylock.exit.i.if.then.i124_crit_edge, %folio_flags.exit.i.i.if.then.i124_crit_edge
  call void @__folio_lock(ptr noundef %30) #20
  br label %lock_page.exit

lock_page.exit:                                   ; preds = %if.then.i124, %folio_trylock.exit.i.lock_page.exit_crit_edge
  %38 = ptrtoint ptr %mapping20 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %mapping20, align 4
  %cmp21.not = icmp eq ptr %39, %1
  br i1 %cmp21.not, label %lor.lhs.false, label %lock_page.exit.if.then25_crit_edge

lock_page.exit.if.then25_crit_edge:               ; preds = %lock_page.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then25

lor.lhs.false:                                    ; preds = %lock_page.exit
  %40 = ptrtoint ptr %call.i262 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %call.i262, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %41)
  %cmp.i.not.i = icmp eq i32 %41, -1
  br i1 %cmp.i.not.i, label %if.then.i, label %PagePrivate.exit, !prof !195

if.then.i:                                        ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  call void @dump_page(ptr noundef nonnull %call.i262, ptr noundef nonnull @.str.23) #20
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 452, 0\0A.popsection", ""() #20, !srcloc !219
  unreachable

PagePrivate.exit:                                 ; preds = %lor.lhs.false
  %42 = ptrtoint ptr %call.i262 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %call.i262, align 4
  %44 = and i32 %43, 8192
  %tobool24.not = icmp eq i32 %44, 0
  br i1 %tobool24.not, label %PagePrivate.exit.if.then25_crit_edge, label %PagePrivate.exit.while.cond_crit_edge

PagePrivate.exit.while.cond_crit_edge:            ; preds = %PagePrivate.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.cond

PagePrivate.exit.if.then25_crit_edge:             ; preds = %PagePrivate.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then25

if.then25:                                        ; preds = %PagePrivate.exit.if.then25_crit_edge, %lock_page.exit.if.then25_crit_edge
  call void @unlock_page(ptr noundef nonnull %call.i262) #20
  %45 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %8, align 4
  %and.i.i125 = and i32 %46, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i125)
  %tobool.not.i.i126 = icmp eq i32 %and.i.i125, 0
  br i1 %tobool.not.i.i126, label %if.then25._compound_head.exit.i134_crit_edge, label %if.then.i.i128, !prof !184

if.then25._compound_head.exit.i134_crit_edge:     ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #22
  br label %_compound_head.exit.i134

if.then.i.i128:                                   ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i127 = add i32 %46, -1
  br label %_compound_head.exit.i134

_compound_head.exit.i134:                         ; preds = %if.then.i.i128, %if.then25._compound_head.exit.i134_crit_edge
  %retval.0.i.i130 = phi i32 [ %sub.i.i127, %if.then.i.i128 ], [ %19, %if.then25._compound_head.exit.i134_crit_edge ]
  %47 = inttoptr i32 %retval.0.i.i130 to ptr
  %_refcount.i.i.i.i.i131 = getelementptr inbounds %struct.page, ptr %47, i32 0, i32 3
  %call.i.i.i.i.i.i.i132 = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i131, i32 noundef 4) #20
  %48 = ptrtoint ptr %_refcount.i.i.i.i.i131 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile i32, ptr %_refcount.i.i.i.i.i131, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %cmp.i.i.i.i133 = icmp eq i32 %49, 0
  br i1 %cmp.i.i.i.i133, label %if.then.i.i.i.i135, label %do.end5.i.i.i.i139, !prof !195

if.then.i.i.i.i135:                               ; preds = %_compound_head.exit.i134
  call void @__sanitizer_cov_trace_pc() #22
  %50 = inttoptr i32 %retval.0.i.i130 to ptr
  call void @dump_page(ptr noundef %50, ptr noundef nonnull @.str.26) #20
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #20, !srcloc !213
  unreachable

do.end5.i.i.i.i139:                               ; preds = %_compound_head.exit.i134
  %call.i.i.i10.i.i.i.i136 = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i131, i32 noundef 4) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !214
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i131, i32 1, i32 3, i32 1) #20
  %51 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i131, ptr %_refcount.i.i.i.i.i131, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i131) #20, !srcloc !215
  %asmresult.i.i.i.i.i.i.i.i.i.i137 = extractvalue { i32, i32 } %51, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i137)
  %cmp.i.i.i.i.i.i.i138 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i137, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@defrag_prepare_one_page, %if.then.i.i.i.i.i141)) #20
          to label %folio_put_testzero.exit.i.i142 [label %if.then.i.i.i.i.i141], !srcloc !182

if.then.i.i.i.i.i141:                             ; preds = %do.end5.i.i.i.i139
  call void @__sanitizer_cov_trace_pc() #22
  %conv.i.i.i.i.i140 = zext i1 %cmp.i.i.i.i.i.i.i138 to i32
  call void @__page_ref_mod_and_test(ptr noundef %47, i32 noundef -1, i32 noundef %conv.i.i.i.i.i140) #20
  br label %folio_put_testzero.exit.i.i142

folio_put_testzero.exit.i.i142:                   ; preds = %if.then.i.i.i.i.i141, %do.end5.i.i.i.i139
  br i1 %cmp.i.i.i.i.i.i.i138, label %folio_put_testzero.exit.i.i142.again.backedge.sink.split_crit_edge, label %folio_put_testzero.exit.i.i142.again.backedge_crit_edge

folio_put_testzero.exit.i.i142.again.backedge_crit_edge: ; preds = %folio_put_testzero.exit.i.i142
  call void @__sanitizer_cov_trace_pc() #22
  br label %again.backedge

folio_put_testzero.exit.i.i142.again.backedge.sink.split_crit_edge: ; preds = %folio_put_testzero.exit.i.i142
  call void @__sanitizer_cov_trace_pc() #22
  br label %again.backedge.sink.split

while.end:                                        ; preds = %while.cond
  %52 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %8, align 4
  %and.i.i145 = and i32 %53, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i145)
  %tobool.not.i.i146 = icmp eq i32 %and.i.i145, 0
  br i1 %tobool.not.i.i146, label %while.end._compound_head.exit.i153_crit_edge, label %if.then.i.i148, !prof !184

while.end._compound_head.exit.i153_crit_edge:     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %_compound_head.exit.i153

if.then.i.i148:                                   ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i147 = add i32 %53, -1
  br label %_compound_head.exit.i153

_compound_head.exit.i153:                         ; preds = %if.then.i.i148, %while.end._compound_head.exit.i153_crit_edge
  %retval.0.i.i150 = phi i32 [ %sub.i.i147, %if.then.i.i148 ], [ %19, %while.end._compound_head.exit.i153_crit_edge ]
  %54 = inttoptr i32 %retval.0.i.i150 to ptr
  %55 = getelementptr inbounds %struct.page, ptr %54, i32 0, i32 1
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load volatile i32, ptr %55, align 4
  %and.i.i.i.i151 = and i32 %57, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i151)
  %tobool.not.i.i.i152 = icmp eq i32 %and.i.i.i.i151, 0
  br i1 %tobool.not.i.i.i152, label %folio_flags.exit.i.i155, label %if.then.i.i.i154, !prof !184

if.then.i.i.i154:                                 ; preds = %_compound_head.exit.i153
  call void @__sanitizer_cov_trace_pc() #22
  %58 = inttoptr i32 %retval.0.i.i150 to ptr
  call void @dump_page(ptr noundef %58, ptr noundef nonnull @.str.21) #20
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #20, !srcloc !210
  unreachable

folio_flags.exit.i.i155:                          ; preds = %_compound_head.exit.i153
  %59 = ptrtoint ptr %54 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %54, align 4
  %61 = and i32 %60, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %61)
  %tobool.i.not.i = icmp eq i32 %61, 0
  br i1 %tobool.i.not.i, label %if.then29, label %PageUptodate.exit

PageUptodate.exit:                                ; preds = %folio_flags.exit.i.i155
  call void @__sanitizer_cov_trace_pc() #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !220
  br label %cleanup45

if.then29:                                        ; preds = %folio_flags.exit.i.i155
  %call30 = call i32 @btrfs_readpage(ptr noundef null, ptr noundef nonnull %call.i262) #20
  call void @__might_sleep(ptr noundef nonnull @.str.20, i32 noundef 788) #20
  %62 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load volatile i32, ptr %8, align 4
  %and.i.i156 = and i32 %63, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i156)
  %tobool.not.i.i157 = icmp eq i32 %and.i.i156, 0
  br i1 %tobool.not.i.i157, label %if.then29._compound_head.exit.i164_crit_edge, label %if.then.i.i159, !prof !184

if.then29._compound_head.exit.i164_crit_edge:     ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #22
  br label %_compound_head.exit.i164

if.then.i.i159:                                   ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i158 = add i32 %63, -1
  br label %_compound_head.exit.i164

_compound_head.exit.i164:                         ; preds = %if.then.i.i159, %if.then29._compound_head.exit.i164_crit_edge
  %retval.0.i.i161 = phi i32 [ %sub.i.i158, %if.then.i.i159 ], [ %19, %if.then29._compound_head.exit.i164_crit_edge ]
  %64 = inttoptr i32 %retval.0.i.i161 to ptr
  %65 = getelementptr inbounds %struct.page, ptr %64, i32 0, i32 1
  %66 = ptrtoint ptr %65 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile i32, ptr %65, align 4
  %and.i.i.i.i162 = and i32 %67, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i162)
  %tobool.not.i.i.i163 = icmp eq i32 %and.i.i.i.i162, 0
  br i1 %tobool.not.i.i.i163, label %folio_flags.exit.i.i169, label %if.then.i.i.i165, !prof !184

if.then.i.i.i165:                                 ; preds = %_compound_head.exit.i164
  call void @__sanitizer_cov_trace_pc() #22
  %68 = inttoptr i32 %retval.0.i.i161 to ptr
  call void @dump_page(ptr noundef %68, ptr noundef nonnull @.str.21) #20
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #20, !srcloc !210
  unreachable

folio_flags.exit.i.i169:                          ; preds = %_compound_head.exit.i164
  %call.i.i.i.i166 = call zeroext i1 @__kasan_check_write(ptr noundef %64, i32 noundef 4) #20
  %69 = ptrtoint ptr %64 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %64, align 4
  %and.i.i4.i.i167 = and i32 %70, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i.i167)
  %tobool.not.i.i.i.i168 = icmp eq i32 %and.i.i4.i.i167, 0
  br i1 %tobool.not.i.i.i.i168, label %folio_trylock.exit.i173, label %folio_flags.exit.i.i169.if.then.i174_crit_edge

folio_flags.exit.i.i169.if.then.i174_crit_edge:   ; preds = %folio_flags.exit.i.i169
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i174

folio_trylock.exit.i173:                          ; preds = %folio_flags.exit.i.i169
  call void @llvm.prefetch.p0(ptr %64, i32 1, i32 3, i32 1) #20
  %71 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_or\0A1:\09ldrex\09$0, [$4]\0A\09orr\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %64, ptr %64, i32 1, ptr elementtype(i32) %64) #20, !srcloc !217
  %asmresult.i.i.i.i.i.i.i170 = extractvalue { i32, i32, i32 } %71, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !218
  %and1.i.i.i.i171 = and i32 %asmresult.i.i.i.i.i.i.i170, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i171)
  %phi.cmp.i.i.i172 = icmp eq i32 %and1.i.i.i.i171, 0
  br i1 %phi.cmp.i.i.i172, label %folio_trylock.exit.i173.lock_page.exit175_crit_edge, label %folio_trylock.exit.i173.if.then.i174_crit_edge

folio_trylock.exit.i173.if.then.i174_crit_edge:   ; preds = %folio_trylock.exit.i173
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i174

folio_trylock.exit.i173.lock_page.exit175_crit_edge: ; preds = %folio_trylock.exit.i173
  call void @__sanitizer_cov_trace_pc() #22
  br label %lock_page.exit175

if.then.i174:                                     ; preds = %folio_trylock.exit.i173.if.then.i174_crit_edge, %folio_flags.exit.i.i169.if.then.i174_crit_edge
  call void @__folio_lock(ptr noundef %64) #20
  br label %lock_page.exit175

lock_page.exit175:                                ; preds = %if.then.i174, %folio_trylock.exit.i173.lock_page.exit175_crit_edge
  %72 = ptrtoint ptr %mapping20 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %mapping20, align 4
  %cmp32.not = icmp eq ptr %73, %1
  br i1 %cmp32.not, label %lor.lhs.false34, label %lock_page.exit175.if.then37_crit_edge

lock_page.exit175.if.then37_crit_edge:            ; preds = %lock_page.exit175
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then37

lor.lhs.false34:                                  ; preds = %lock_page.exit175
  %74 = ptrtoint ptr %call.i262 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load volatile i32, ptr %call.i262, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %75)
  %cmp.i.not.i89 = icmp eq i32 %75, -1
  br i1 %cmp.i.not.i89, label %if.then.i90, label %PagePrivate.exit93, !prof !195

if.then.i90:                                      ; preds = %lor.lhs.false34
  call void @__sanitizer_cov_trace_pc() #22
  call void @dump_page(ptr noundef nonnull %call.i262, ptr noundef nonnull @.str.23) #20
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 452, 0\0A.popsection", ""() #20, !srcloc !219
  unreachable

PagePrivate.exit93:                               ; preds = %lor.lhs.false34
  %76 = ptrtoint ptr %call.i262 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load volatile i32, ptr %call.i262, align 4
  %78 = and i32 %77, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %78)
  %tobool36.not = icmp eq i32 %78, 0
  br i1 %tobool36.not, label %PagePrivate.exit93.if.then37_crit_edge, label %if.end38

PagePrivate.exit93.if.then37_crit_edge:           ; preds = %PagePrivate.exit93
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then37

if.then37:                                        ; preds = %PagePrivate.exit93.if.then37_crit_edge, %lock_page.exit175.if.then37_crit_edge
  call void @unlock_page(ptr noundef nonnull %call.i262) #20
  %79 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load volatile i32, ptr %8, align 4
  %and.i.i176 = and i32 %80, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i176)
  %tobool.not.i.i177 = icmp eq i32 %and.i.i176, 0
  br i1 %tobool.not.i.i177, label %if.then37._compound_head.exit.i185_crit_edge, label %if.then.i.i179, !prof !184

if.then37._compound_head.exit.i185_crit_edge:     ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #22
  br label %_compound_head.exit.i185

if.then.i.i179:                                   ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i178 = add i32 %80, -1
  br label %_compound_head.exit.i185

_compound_head.exit.i185:                         ; preds = %if.then.i.i179, %if.then37._compound_head.exit.i185_crit_edge
  %retval.0.i.i181 = phi i32 [ %sub.i.i178, %if.then.i.i179 ], [ %19, %if.then37._compound_head.exit.i185_crit_edge ]
  %81 = inttoptr i32 %retval.0.i.i181 to ptr
  %_refcount.i.i.i.i.i182 = getelementptr inbounds %struct.page, ptr %81, i32 0, i32 3
  %call.i.i.i.i.i.i.i183 = call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i.i182, i32 noundef 4) #20
  %82 = ptrtoint ptr %_refcount.i.i.i.i.i182 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load volatile i32, ptr %_refcount.i.i.i.i.i182, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %83)
  %cmp.i.i.i.i184 = icmp eq i32 %83, 0
  br i1 %cmp.i.i.i.i184, label %if.then.i.i.i.i186, label %do.end5.i.i.i.i190, !prof !195

if.then.i.i.i.i186:                               ; preds = %_compound_head.exit.i185
  call void @__sanitizer_cov_trace_pc() #22
  %84 = inttoptr i32 %retval.0.i.i181 to ptr
  call void @dump_page(ptr noundef %84, ptr noundef nonnull @.str.26) #20
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #20, !srcloc !213
  unreachable

do.end5.i.i.i.i190:                               ; preds = %_compound_head.exit.i185
  %call.i.i.i10.i.i.i.i187 = call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i.i182, i32 noundef 4) #20
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !214
  call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i.i182, i32 1, i32 3, i32 1) #20
  %85 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i.i182, ptr %_refcount.i.i.i.i.i182, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i.i182) #20, !srcloc !215
  %asmresult.i.i.i.i.i.i.i.i.i.i188 = extractvalue { i32, i32 } %85, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i188)
  %cmp.i.i.i.i.i.i.i189 = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i188, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@defrag_prepare_one_page, %if.then.i.i.i.i.i192)) #20
          to label %folio_put_testzero.exit.i.i193 [label %if.then.i.i.i.i.i192], !srcloc !182

if.then.i.i.i.i.i192:                             ; preds = %do.end5.i.i.i.i190
  call void @__sanitizer_cov_trace_pc() #22
  %conv.i.i.i.i.i191 = zext i1 %cmp.i.i.i.i.i.i.i189 to i32
  call void @__page_ref_mod_and_test(ptr noundef %81, i32 noundef -1, i32 noundef %conv.i.i.i.i.i191) #20
  br label %folio_put_testzero.exit.i.i193

folio_put_testzero.exit.i.i193:                   ; preds = %if.then.i.i.i.i.i192, %do.end5.i.i.i.i190
  br i1 %cmp.i.i.i.i.i.i.i189, label %folio_put_testzero.exit.i.i193.again.backedge.sink.split_crit_edge, label %folio_put_testzero.exit.i.i193.again.backedge_crit_edge

folio_put_testzero.exit.i.i193.again.backedge_crit_edge: ; preds = %folio_put_testzero.exit.i.i193
  call void @__sanitizer_cov_trace_pc() #22
  br label %again.backedge

folio_put_testzero.exit.i.i193.again.backedge.sink.split_crit_edge: ; preds = %folio_put_testzero.exit.i.i193
  call void @__sanitizer_cov_trace_pc() #22
  br label %again.backedge.sink.split

again.backedge.sink.split:                        ; preds = %folio_put_testzero.exit.i.i193.again.backedge.sink.split_crit_edge, %folio_put_testzero.exit.i.i142.again.backedge.sink.split_crit_edge
  %.sink = phi ptr [ %47, %folio_put_testzero.exit.i.i142.again.backedge.sink.split_crit_edge ], [ %81, %folio_put_testzero.exit.i.i193.again.backedge.sink.split_crit_edge ]
  call void @__put_page(ptr noundef %.sink) #20
  br label %again.backedge

again.backedge:                                   ; preds = %again.backedge.sink.split, %folio_put_testzero.exit.i.i193.again.backedge_crit_edge, %folio_put_testzero.exit.i.i142.again.backedge_crit_edge
  %call.i = call ptr @pagecache_get_page(ptr noundef %1, i32 noundef %index, i32 noundef 7, i32 noundef %and.i.i94) #20
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %again.backedge.cleanup45_crit_edge, label %again.backedge.if.end_crit_edge

again.backedge.if.end_crit_edge:                  ; preds = %again.backedge
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end

again.backedge.cleanup45_crit_edge:               ; preds = %again.backedge
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup45

if.end38:                                         ; preds = %PagePrivate.exit93
  %86 = ptrtoint ptr %call.i262 to i32
  %87 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load volatile i32, ptr %8, align 4
  %and.i.i196 = and i32 %88, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i196)
  %tobool.not.i.i197 = icmp eq i32 %and.i.i196, 0
  br i1 %tobool.not.i.i197, label %if.end38._compound_head.exit.i204_crit_edge, label %if.then.i.i199, !prof !184

if.end38._compound_head.exit.i204_crit_edge:      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #22
  br label %_compound_head.exit.i204

if.then.i.i199:                                   ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i.i198 = add i32 %88, -1
  br label %_compound_head.exit.i204

_compound_head.exit.i204:                         ; preds = %if.then.i.i199, %if.end38._compound_head.exit.i204_crit_edge
  %retval.0.i.i201 = phi i32 [ %sub.i.i198, %if.then.i.i199 ], [ %86, %if.end38._compound_head.exit.i204_crit_edge ]
  %89 = inttoptr i32 %retval.0.i.i201 to ptr
  %90 = getelementptr inbounds %struct.page, ptr %89, i32 0, i32 1
  %91 = ptrtoint ptr %90 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load volatile i32, ptr %90, align 4
  %and.i.i.i.i202 = and i32 %92, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i202)
  %tobool.not.i.i.i203 = icmp eq i32 %and.i.i.i.i202, 0
  br i1 %tobool.not.i.i.i203, label %folio_flags.exit.i.i207, label %if.then.i.i.i205, !prof !184

if.then.i.i.i205:                                 ; preds = %_compound_head.exit.i204
  call void @__sanitizer_cov_trace_pc() #22
  call void @dump_page(ptr noundef %89, ptr noundef nonnull @.str.21) #20
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/page-flags.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 260, 0\0A.popsection", ""() #20, !srcloc !210
  unreachable

folio_flags.exit.i.i207:                          ; preds = %_compound_head.exit.i204
  %93 = ptrtoint ptr %89 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load volatile i32, ptr %89, align 4
  %95 = and i32 %94, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %95)
  %tobool.i.not.i206 = icmp eq i32 %95, 0
  br i1 %tobool.i.not.i206, label %if.then41, label %PageUptodate.exit210

PageUptodate.exit210:                             ; preds = %folio_flags.exit.i.i207
  call void @__sanitizer_cov_trace_pc() #22
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !220
  br label %cleanup45

if.then41:                                        ; preds = %folio_flags.exit.i.i207
  call void @__sanitizer_cov_trace_pc() #22
  call void @unlock_page(ptr noundef nonnull %call.i262) #20
  call fastcc void @put_page(ptr noundef nonnull %call.i262)
  br label %cleanup45

cleanup45:                                        ; preds = %if.then41, %PageUptodate.exit210, %again.backedge.cleanup45_crit_edge, %PageUptodate.exit, %put_page.exit115, %if.then.i4.i, %folio_put_testzero.exit.i.i.cleanup45_crit_edge, %entry.cleanup45_crit_edge
  %retval.0 = phi ptr [ %27, %put_page.exit115 ], [ inttoptr (i32 -5 to ptr), %if.then41 ], [ %call.i262, %PageUptodate.exit210 ], [ %call.i262, %PageUptodate.exit ], [ inttoptr (i32 -26 to ptr), %folio_put_testzero.exit.i.i.cleanup45_crit_edge ], [ inttoptr (i32 -26 to ptr), %if.then.i4.i ], [ inttoptr (i32 -12 to ptr), %entry.cleanup45_crit_edge ], [ inttoptr (i32 -12 to ptr), %again.backedge.cleanup45_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cached_state) #20
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @wait_on_page_writeback(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @unlock_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @put_page(ptr noundef %page) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %0 = getelementptr inbounds %struct.page, ptr %page, i32 0, i32 1
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %0, align 4
  %and.i = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i, !prof !184

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %sub.i = add i32 %2, -1
  br label %_compound_head.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %3 = ptrtoint ptr %page to i32
  br label %_compound_head.exit

_compound_head.exit:                              ; preds = %if.end.i, %if.then.i
  %retval.0.i = phi i32 [ %sub.i, %if.then.i ], [ %3, %if.end.i ]
  %4 = inttoptr i32 %retval.0.i to ptr
  %_refcount.i.i.i.i = getelementptr inbounds %struct.page, ptr %4, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #20
  %5 = ptrtoint ptr %_refcount.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %_refcount.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp.i.i.i = icmp eq i32 %6, 0
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %do.end5.i.i.i, !prof !195

if.then.i.i.i:                                    ; preds = %_compound_head.exit
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @dump_page(ptr noundef %4, ptr noundef nonnull @.str.26) #20
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/mm.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 717, 0\0A.popsection", ""() #20, !srcloc !213
  unreachable

do.end5.i.i.i:                                    ; preds = %_compound_head.exit
  %call.i.i.i10.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %_refcount.i.i.i.i, i32 noundef 4) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !214
  tail call void @llvm.prefetch.p0(ptr %_refcount.i.i.i.i, i32 1, i32 3, i32 1) #20
  %7 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %_refcount.i.i.i.i, ptr %_refcount.i.i.i.i, i32 1, ptr elementtype(i32) %_refcount.i.i.i.i) #20, !srcloc !215
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %7, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_page_ref_mod_and_test, i32 0, i32 1), ptr blockaddress(@put_page, %if.then.i.i.i.i)) #20
          to label %folio_put_testzero.exit.i [label %if.then.i.i.i.i], !srcloc !182

if.then.i.i.i.i:                                  ; preds = %do.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %conv.i.i.i.i = zext i1 %cmp.i.i.i.i.i.i to i32
  tail call void @__page_ref_mod_and_test(ptr noundef %4, i32 noundef -1, i32 noundef %conv.i.i.i.i) #20
  br label %folio_put_testzero.exit.i

folio_put_testzero.exit.i:                        ; preds = %if.then.i.i.i.i, %do.end5.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i4, label %folio_put_testzero.exit.i.folio_put.exit_crit_edge

folio_put_testzero.exit.i.folio_put.exit_crit_edge: ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %folio_put.exit

if.then.i4:                                       ; preds = %folio_put_testzero.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @__put_page(ptr noundef %4) #20
  br label %folio_put.exit

folio_put.exit:                                   ; preds = %if.then.i4, %folio_put_testzero.exit.i.folio_put.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @set_page_extent_mapped(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_lookup_ordered_range(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_start_ordered_extent(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_put_ordered_extent(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_readpage(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @pagecache_get_page(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__folio_lock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dump_page(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_delalloc_reserve_space(ptr noundef, ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @clear_extent_bit(ptr noundef, i64 noundef, i64 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_page_clamp_set_dirty(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_delalloc_release_extents(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__page_file_index(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @set_extent_bit(ptr noundef, i64 noundef, i64 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ulist_release(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_page(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__page_ref_mod_and_test(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__check_object_size(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_fault(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @should_fail_usercopy() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_to_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strnlen(ptr nocapture noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @capable(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mnt_want_write_file(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #15

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_commit_transaction(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mnt_drop_write_file(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_from_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_any_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_read_unlock() unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %call = tail call zeroext i1 @rcu_is_watching() #20
  br i1 %call, label %entry.do.end_crit_edge, label %land.lhs.true

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true2

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end

land.lhs.true2:                                   ; preds = %land.lhs.true
  %.b4 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4, label %land.lhs.true2.do.end_crit_edge, label %if.then

land.lhs.true2.do.end_crit_edge:                  ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end

if.then:                                          ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.34, i32 noundef 724, ptr noundef nonnull @.str.36) #20
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true2.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !198
  %0 = tail call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %3, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void @rcu_read_unlock_strict() #20
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_trim_fs(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #20
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @memdup_user(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__btrfs_ioctl_snap_create(ptr noundef %file, ptr noundef %mnt_userns, ptr noundef %name, i32 noundef %fd, i32 noundef %subvol, i1 noundef zeroext %readonly, ptr noundef %inherit) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %0 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_inode.i, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %1, align 8
  %4 = and i16 %3, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %4)
  %cmp = icmp eq i16 %4, 16384
  br i1 %cmp, label %if.end, label %entry.cleanup54_crit_edge

entry.cleanup54_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup54

if.end:                                           ; preds = %entry
  %call2 = tail call i32 @mnt_want_write_file(ptr noundef %file) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %if.end4, label %if.end.cleanup54_crit_edge

if.end.cleanup54_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup54

if.end4:                                          ; preds = %if.end
  %call5 = tail call i32 @strlen(ptr noundef %name) #23
  %call6 = tail call ptr @strchr(ptr noundef %name, i32 noundef 47)
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.end9, label %if.end4.out_drop_write_crit_edge

if.end4.out_drop_write_crit_edge:                 ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_drop_write

if.end9:                                          ; preds = %if.end4
  %5 = ptrtoint ptr %name to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %name, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 46, i8 %6)
  %cmp11 = icmp eq i8 %6, 46
  br i1 %cmp11, label %land.lhs.true, label %if.end9.if.end23_crit_edge

if.end9.if.end23_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end23

land.lhs.true:                                    ; preds = %if.end9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call5)
  %cmp13 = icmp eq i32 %call5, 1
  br i1 %cmp13, label %land.lhs.true.out_drop_write_crit_edge, label %lor.lhs.false

land.lhs.true.out_drop_write_crit_edge:           ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_drop_write

lor.lhs.false:                                    ; preds = %land.lhs.true
  %arrayidx15 = getelementptr i8, ptr %name, i32 1
  %7 = ptrtoint ptr %arrayidx15 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %arrayidx15, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 46, i8 %8)
  %cmp17 = icmp eq i8 %8, 46
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %call5)
  %cmp20 = icmp eq i32 %call5, 2
  %or.cond = select i1 %cmp17, i1 %cmp20, i1 false
  br i1 %or.cond, label %lor.lhs.false.out_drop_write_crit_edge, label %lor.lhs.false.if.end23_crit_edge

lor.lhs.false.if.end23_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end23

lor.lhs.false.out_drop_write_crit_edge:           ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_drop_write

if.end23:                                         ; preds = %lor.lhs.false.if.end23_crit_edge, %if.end9.if.end23_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %subvol)
  %tobool24.not = icmp eq i32 %subvol, 0
  br i1 %tobool24.not, label %if.else, label %if.then25

if.then25:                                        ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #22
  %f_path = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 1
  %call27 = tail call fastcc i32 @btrfs_mksubvol(ptr noundef %f_path, ptr noundef %mnt_userns, ptr noundef %name, i32 noundef %call5, ptr noundef null, i1 noundef zeroext %readonly, ptr noundef %inherit)
  br label %out_drop_write

if.else:                                          ; preds = %if.end23
  %call.i = tail call i32 @__fdget(i32 noundef %fd) #20, !noalias !221
  %and.i.i = and i32 %call.i, -4
  %9 = inttoptr i32 %and.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool29.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool29.not, label %if.else.out_drop_write_crit_edge, label %if.end31

if.else.out_drop_write_crit_edge:                 ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_drop_write

if.end31:                                         ; preds = %if.else
  %f_inode.i77 = getelementptr inbounds %struct.file, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %f_inode.i77 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %f_inode.i77, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %11, i32 0, i32 8
  %12 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %i_sb, align 4
  %14 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %f_inode.i, align 8
  %i_sb35 = getelementptr inbounds %struct.inode, ptr %15, i32 0, i32 8
  %16 = ptrtoint ptr %i_sb35 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %i_sb35, align 4
  %cmp36.not = icmp eq ptr %13, %17
  br i1 %cmp36.not, label %if.else41, label %if.then38

if.then38:                                        ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #22
  %add.ptr.i = getelementptr i8, ptr %15, i32 -864
  %18 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %add.ptr.i, align 8
  %fs_info = getelementptr inbounds %struct.btrfs_root, ptr %19, i32 0, i32 8
  %20 = ptrtoint ptr %fs_info to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %fs_info, align 8
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %21, ptr noundef nonnull @.str.37) #24
  br label %if.end51

if.else41:                                        ; preds = %if.end31
  %call42 = tail call zeroext i1 @inode_owner_or_capable(ptr noundef %mnt_userns, ptr noundef %11) #20
  br i1 %call42, label %if.else44, label %if.else41.if.end51_crit_edge

if.else41.if.end51_crit_edge:                     ; preds = %if.else41
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end51

if.else44:                                        ; preds = %if.else41
  call void @__sanitizer_cov_trace_pc() #22
  %f_path45 = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 1
  %add.ptr.i80 = getelementptr i8, ptr %11, i32 -864
  %22 = ptrtoint ptr %add.ptr.i80 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %add.ptr.i80, align 8
  %call49 = tail call fastcc i32 @btrfs_mksnapshot(ptr noundef %f_path45, ptr noundef %mnt_userns, ptr noundef %name, i32 noundef %call5, ptr noundef %23, i1 noundef zeroext %readonly, ptr noundef %inherit)
  br label %if.end51

if.end51:                                         ; preds = %if.else44, %if.else41.if.end51_crit_edge, %if.then38
  %ret.0 = phi i32 [ -18, %if.then38 ], [ %call49, %if.else44 ], [ -1, %if.else41.if.end51_crit_edge ]
  %and.i = and i32 %call.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end51.out_drop_write_crit_edge, label %if.then.i

if.end51.out_drop_write_crit_edge:                ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_drop_write

if.then.i:                                        ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @fput(ptr noundef nonnull %9) #20
  br label %out_drop_write

out_drop_write:                                   ; preds = %if.then.i, %if.end51.out_drop_write_crit_edge, %if.else.out_drop_write_crit_edge, %if.then25, %lor.lhs.false.out_drop_write_crit_edge, %land.lhs.true.out_drop_write_crit_edge, %if.end4.out_drop_write_crit_edge
  %ret.2 = phi i32 [ %call27, %if.then25 ], [ -22, %if.end4.out_drop_write_crit_edge ], [ -17, %lor.lhs.false.out_drop_write_crit_edge ], [ -17, %land.lhs.true.out_drop_write_crit_edge ], [ -22, %if.else.out_drop_write_crit_edge ], [ %ret.0, %if.end51.out_drop_write_crit_edge ], [ %ret.0, %if.then.i ]
  tail call void @mnt_drop_write_file(ptr noundef %file) #20
  br label %cleanup54

cleanup54:                                        ; preds = %out_drop_write, %if.end.cleanup54_crit_edge, %entry.cleanup54_crit_edge
  %retval.0 = phi i32 [ -20, %entry.cleanup54_crit_edge ], [ %call2, %if.end.cleanup54_crit_edge ], [ %ret.2, %out_drop_write ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local ptr @strchr(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_mksubvol(ptr nocapture noundef readonly %parent, ptr noundef %mnt_userns, ptr noundef %name, i32 noundef %namelen, ptr noundef %snap_src, i1 noundef zeroext %readonly, ptr noundef %inherit) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %dentry = getelementptr inbounds %struct.path, ptr %parent, i32 0, i32 1
  %0 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dentry, align 4
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %d_inode.i, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %5, i32 0, i32 33
  %6 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %s_fs_info.i, align 16
  %i_rwsem = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 25
  %call3 = tail call i32 @down_write_killable_nested(ptr noundef %i_rwsem, i32 noundef 1) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 -4, i32 %call3)
  %cmp = icmp eq i32 %call3, -4
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dentry, align 4
  %call5 = tail call ptr @lookup_one(ptr noundef %mnt_userns, ptr noundef %name, ptr noundef %9, i32 noundef %namelen) #20
  %10 = ptrtoint ptr %call5 to i32
  %cmp.i = icmp ugt ptr %call5, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end.out_unlock_crit_edge, label %if.end9

if.end.out_unlock_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_unlock

if.end9:                                          ; preds = %if.end
  %d_inode.i.i = getelementptr inbounds %struct.dentry, ptr %call5, i32 0, i32 5
  %11 = ptrtoint ptr %d_inode.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %d_inode.i.i, align 8
  %cmp.i.not.i = icmp eq ptr %12, null
  br i1 %cmp.i.not.i, label %if.end.i, label %if.end9.out_dput_crit_edge

if.end9.out_dput_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_dput

if.end.i:                                         ; preds = %if.end9
  %i_flags.i = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 4
  %13 = ptrtoint ptr %i_flags.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %i_flags.i, align 4
  %and.i = and i32 %14, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end2.i, label %if.end.i.out_dput_crit_edge

if.end.i.out_dput_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_dput

if.end2.i:                                        ; preds = %if.end.i
  %15 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %i_sb, align 4
  %s_user_ns.i.i = getelementptr inbounds %struct.super_block, ptr %16, i32 0, i32 53
  %17 = ptrtoint ptr %s_user_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %s_user_ns.i.i, align 8
  %19 = tail call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i.i = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i.i.i to ptr
  %task.i.i.i = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 2
  %21 = ptrtoint ptr %task.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %task.i.i.i, align 8
  %cred.i.i.i = getelementptr inbounds %struct.task_struct, ptr %22, i32 0, i32 99
  %23 = ptrtoint ptr %cred.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %cred.i.i.i, align 16
  %fsuid.i.i.i = getelementptr inbounds %struct.cred, ptr %24, i32 0, i32 10
  %25 = ptrtoint ptr %fsuid.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %agg.tmp.sroa.0.0.copyload.i.i.i = load i32, ptr %fsuid.i.i.i, align 4
  %cmp.i.i.i.i.i.i = icmp eq ptr %mnt_userns, @init_user_ns
  %cmp.i.i.i.i.i = icmp eq ptr %18, %mnt_userns
  %spec.select.i.i.i.i.i = or i1 %cmp.i.i.i.i.i.i, %cmp.i.i.i.i.i
  br i1 %spec.select.i.i.i.i.i, label %if.end2.i.mapped_fsuid.exit.i.i_crit_edge, label %if.end.i.i.i.i

if.end2.i.mapped_fsuid.exit.i.i_crit_edge:        ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mapped_fsuid.exit.i.i

if.end.i.i.i.i:                                   ; preds = %if.end2.i
  %.fca.0.insert.i.i.i = insertvalue [1 x i32] poison, i32 %agg.tmp.sroa.0.0.copyload.i.i.i, 0
  %call2.i.i.i.i = tail call i32 @from_kuid(ptr noundef %mnt_userns, [1 x i32] %.fca.0.insert.i.i.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call2.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %call2.i.i.i.i, -1
  br i1 %cmp.i.i.i.i, label %if.end.i.i.i.i.out_dput_crit_edge, label %if.end4.i.i.i.i

if.end.i.i.i.i.out_dput_crit_edge:                ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_dput

if.end4.i.i.i.i:                                  ; preds = %if.end.i.i.i.i
  %cmp.i17.i.i.i.i = icmp eq ptr %18, @init_user_ns
  br i1 %cmp.i17.i.i.i.i, label %if.end4.i.i.i.i.if.end.i.i_crit_edge, label %if.end8.i.i.i.i

if.end4.i.i.i.i.if.end.i.i_crit_edge:             ; preds = %if.end4.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i.i

if.end8.i.i.i.i:                                  ; preds = %if.end4.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call9.i.i.i.i = tail call i32 @make_kuid(ptr noundef %18, i32 noundef %call2.i.i.i.i) #20
  br label %mapped_fsuid.exit.i.i

mapped_fsuid.exit.i.i:                            ; preds = %if.end8.i.i.i.i, %if.end2.i.mapped_fsuid.exit.i.i_crit_edge
  %retval.sroa.0.0.i.i.i.i = phi i32 [ %call9.i.i.i.i, %if.end8.i.i.i.i ], [ %agg.tmp.sroa.0.0.copyload.i.i.i, %if.end2.i.mapped_fsuid.exit.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.sroa.0.0.i.i.i.i)
  %cmp.i.not.i.i = icmp eq i32 %retval.sroa.0.0.i.i.i.i, -1
  br i1 %cmp.i.not.i.i, label %mapped_fsuid.exit.i.i.out_dput_crit_edge, label %mapped_fsuid.exit.i.i.if.end.i.i_crit_edge

mapped_fsuid.exit.i.i.if.end.i.i_crit_edge:       ; preds = %mapped_fsuid.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end.i.i

mapped_fsuid.exit.i.i.out_dput_crit_edge:         ; preds = %mapped_fsuid.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_dput

if.end.i.i:                                       ; preds = %mapped_fsuid.exit.i.i.if.end.i.i_crit_edge, %if.end4.i.i.i.i.if.end.i.i_crit_edge
  %call2.i.i.pn.i.i = phi i32 [ %retval.sroa.0.0.i.i.i.i, %mapped_fsuid.exit.i.i.if.end.i.i_crit_edge ], [ %call2.i.i.i.i, %if.end4.i.i.i.i.if.end.i.i_crit_edge ]
  %.fca.0.insert2052.i.i = insertvalue [1 x i32] undef, i32 %call2.i.i.pn.i.i, 0
  %26 = tail call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i29.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i29.i.i to ptr
  %task.i30.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 2
  %28 = ptrtoint ptr %task.i30.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %task.i30.i.i, align 8
  %cred.i31.i.i = getelementptr inbounds %struct.task_struct, ptr %29, i32 0, i32 99
  %30 = ptrtoint ptr %cred.i31.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %cred.i31.i.i, align 16
  %fsgid.i.i.i = getelementptr inbounds %struct.cred, ptr %31, i32 0, i32 11
  %32 = ptrtoint ptr %fsgid.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %agg.tmp.sroa.0.0.copyload.i32.i.i = load i32, ptr %fsgid.i.i.i, align 4
  br i1 %spec.select.i.i.i.i.i, label %if.end.i.i.mapped_fsgid.exit.i.i_crit_edge, label %if.end.i.i39.i.i

if.end.i.i.mapped_fsgid.exit.i.i_crit_edge:       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %mapped_fsgid.exit.i.i

if.end.i.i39.i.i:                                 ; preds = %if.end.i.i
  %.fca.0.insert.i36.i.i = insertvalue [1 x i32] poison, i32 %agg.tmp.sroa.0.0.copyload.i32.i.i, 0
  %call2.i.i37.i.i = tail call i32 @from_kgid(ptr noundef %mnt_userns, [1 x i32] %.fca.0.insert.i36.i.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call2.i.i37.i.i)
  %cmp.i.i38.i.i = icmp eq i32 %call2.i.i37.i.i, -1
  br i1 %cmp.i.i38.i.i, label %if.end.i.i39.i.i.out_dput_crit_edge, label %if.end4.i.i41.i.i

if.end.i.i39.i.i.out_dput_crit_edge:              ; preds = %if.end.i.i39.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_dput

if.end4.i.i41.i.i:                                ; preds = %if.end.i.i39.i.i
  %cmp.i17.i.i40.i.i = icmp eq ptr %18, @init_user_ns
  br i1 %cmp.i17.i.i40.i.i, label %if.end4.i.i41.i.i.if.end9.i.i_crit_edge, label %if.end8.i.i43.i.i

if.end4.i.i41.i.i.if.end9.i.i_crit_edge:          ; preds = %if.end4.i.i41.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end9.i.i

if.end8.i.i43.i.i:                                ; preds = %if.end4.i.i41.i.i
  call void @__sanitizer_cov_trace_pc() #22
  %call9.i.i42.i.i = tail call i32 @make_kgid(ptr noundef %18, i32 noundef %call2.i.i37.i.i) #20
  br label %mapped_fsgid.exit.i.i

mapped_fsgid.exit.i.i:                            ; preds = %if.end8.i.i43.i.i, %if.end.i.i.mapped_fsgid.exit.i.i_crit_edge
  %retval.sroa.0.0.i.i44.i.i = phi i32 [ %call9.i.i42.i.i, %if.end8.i.i43.i.i ], [ %agg.tmp.sroa.0.0.copyload.i32.i.i, %if.end.i.i.mapped_fsgid.exit.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.sroa.0.0.i.i44.i.i)
  %cmp.i45.not.i.i = icmp eq i32 %retval.sroa.0.0.i.i44.i.i, -1
  br i1 %cmp.i45.not.i.i, label %mapped_fsgid.exit.i.i.out_dput_crit_edge, label %mapped_fsgid.exit.i.i.if.end9.i.i_crit_edge

mapped_fsgid.exit.i.i.if.end9.i.i_crit_edge:      ; preds = %mapped_fsgid.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end9.i.i

mapped_fsgid.exit.i.i.out_dput_crit_edge:         ; preds = %mapped_fsgid.exit.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_dput

if.end9.i.i:                                      ; preds = %mapped_fsgid.exit.i.i.if.end9.i.i_crit_edge, %if.end4.i.i41.i.i.if.end9.i.i_crit_edge
  %call2.i.i37.pn.i.i = phi i32 [ %retval.sroa.0.0.i.i44.i.i, %mapped_fsgid.exit.i.i.if.end9.i.i_crit_edge ], [ %call2.i.i37.i.i, %if.end4.i.i41.i.i.if.end9.i.i_crit_edge ]
  %call.i.i.i = tail call i32 @from_kuid(ptr noundef %18, [1 x i32] %.fca.0.insert2052.i.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i.i.i)
  %cmp.i46.not.i.i = icmp eq i32 %call.i.i.i, -1
  br i1 %cmp.i46.not.i.i, label %if.end9.i.i.out_dput_crit_edge, label %fsuidgid_has_mapping.exit.i

if.end9.i.i.out_dput_crit_edge:                   ; preds = %if.end9.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_dput

fsuidgid_has_mapping.exit.i:                      ; preds = %if.end9.i.i
  %.fca.0.insert60.i.i = insertvalue [1 x i32] undef, i32 %call2.i.i37.pn.i.i, 0
  %call.i47.i.i = tail call i32 @from_kgid(ptr noundef %18, [1 x i32] %.fca.0.insert60.i.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i47.i.i)
  %cmp.i48.i.not.i = icmp eq i32 %call.i47.i.i, -1
  br i1 %cmp.i48.i.not.i, label %fsuidgid_has_mapping.exit.i.out_dput_crit_edge, label %btrfs_may_create.exit

fsuidgid_has_mapping.exit.i.out_dput_crit_edge:   ; preds = %fsuidgid_has_mapping.exit.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_dput

btrfs_may_create.exit:                            ; preds = %fsuidgid_has_mapping.exit.i
  %call6.i = tail call i32 @inode_permission(ptr noundef %mnt_userns, ptr noundef %3, i32 noundef 3) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool.not = icmp eq i32 %call6.i, 0
  br i1 %tobool.not, label %if.end12, label %btrfs_may_create.exit.out_dput_crit_edge

btrfs_may_create.exit.out_dput_crit_edge:         ; preds = %btrfs_may_create.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_dput

if.end12:                                         ; preds = %btrfs_may_create.exit
  %add.ptr.i = getelementptr i8, ptr %3, i32 -864
  %33 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %add.ptr.i, align 8
  %i_ino = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 11
  %35 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %i_ino, align 8
  %conv = zext i32 %36 to i64
  %call14 = tail call i32 @btrfs_check_dir_item_collision(ptr noundef %34, i64 noundef %conv, ptr noundef %name, i32 noundef %namelen) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.end17, label %if.end12.out_dput_crit_edge

if.end12.out_dput_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_dput

if.end17:                                         ; preds = %if.end12
  %subvol_sem = getelementptr inbounds %struct.btrfs_fs_info, ptr %7, i32 0, i32 56
  tail call void @down_read(ptr noundef %subvol_sem) #20
  %37 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %add.ptr.i, align 8
  %refs.i = getelementptr inbounds %struct.btrfs_root, ptr %38, i32 0, i32 6, i32 8
  %39 = ptrtoint ptr %refs.i to i32
  call void @__asan_loadN_noabort(i32 %39, i32 4)
  %40 = load i32, ptr %refs.i, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %cmp21 = icmp eq i32 %40, 0
  br i1 %cmp21, label %if.end17.out_up_read_crit_edge, label %if.end24

if.end17.out_up_read_crit_edge:                   ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_up_read

if.end24:                                         ; preds = %if.end17
  %tobool25.not = icmp eq ptr %snap_src, null
  br i1 %tobool25.not, label %if.else, label %if.then26

if.then26:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #22
  %call28 = tail call fastcc i32 @create_snapshot(ptr noundef nonnull %snap_src, ptr noundef %3, ptr noundef %call5, i1 noundef zeroext %readonly, ptr noundef %inherit)
  br label %if.end30

if.else:                                          ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #22
  %call29 = tail call fastcc i32 @create_subvol(ptr noundef %mnt_userns, ptr noundef %3, ptr noundef %call5, ptr noundef %name, i32 noundef %namelen, ptr noundef %inherit)
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then26
  %error.0 = phi i32 [ %call28, %if.then26 ], [ %call29, %if.else ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %error.0)
  %tobool31.not = icmp eq i32 %error.0, 0
  br i1 %tobool31.not, label %if.then32, label %if.end30.out_up_read_crit_edge

if.end30.out_up_read_crit_edge:                   ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #22
  br label %out_up_read

if.then32:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #22
  tail call fastcc void @fsnotify_mkdir(ptr noundef %3, ptr noundef %call5)
  br label %out_up_read

out_up_read:                                      ; preds = %if.then32, %if.end30.out_up_read_crit_edge, %if.end17.out_up_read_crit_edge
  %error.1 = phi i32 [ 0, %if.end17.out_up_read_crit_edge ], [ %error.0, %if.end30.out_up_read_crit_edge ], [ 0, %if.then32 ]
  tail call void @up_read(ptr noundef %subvol_sem) #20
  br label %out_dput

out_dput:                                         ; preds = %out_up_read, %if.end12.out_dput_crit_edge, %btrfs_may_create.exit.out_dput_crit_edge, %fsuidgid_has_mapping.exit.i.out_dput_crit_edge, %if.end9.i.i.out_dput_crit_edge, %mapped_fsgid.exit.i.i.out_dput_crit_edge, %if.end.i.i39.i.i.out_dput_crit_edge, %mapped_fsuid.exit.i.i.out_dput_crit_edge, %if.end.i.i.i.i.out_dput_crit_edge, %if.end.i.out_dput_crit_edge, %if.end9.out_dput_crit_edge
  %error.2 = phi i32 [ %call6.i, %btrfs_may_create.exit.out_dput_crit_edge ], [ %call14, %if.end12.out_dput_crit_edge ], [ %error.1, %out_up_read ], [ -75, %if.end.i.i39.i.i.out_dput_crit_edge ], [ -75, %if.end.i.i.i.i.out_dput_crit_edge ], [ -75, %if.end9.i.i.out_dput_crit_edge ], [ -75, %mapped_fsgid.exit.i.i.out_dput_crit_edge ], [ -75, %mapped_fsuid.exit.i.i.out_dput_crit_edge ], [ -75, %fsuidgid_has_mapping.exit.i.out_dput_crit_edge ], [ -2, %if.end.i.out_dput_crit_edge ], [ -17, %if.end9.out_dput_crit_edge ]
  tail call void @dput(ptr noundef %call5) #20
  br label %out_unlock

out_unlock:                                       ; preds = %out_dput, %if.end.out_unlock_crit_edge
  %error.3 = phi i32 [ %10, %if.end.out_unlock_crit_edge ], [ %error.2, %out_dput ]
  tail call void @btrfs_inode_unlock(ptr noundef %3, i32 noundef 0) #20
  br label %cleanup

cleanup:                                          ; preds = %out_unlock, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %error.3, %out_unlock ], [ -4, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @inode_owner_or_capable(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_mksnapshot(ptr nocapture noundef readonly %parent, ptr noundef %mnt_userns, ptr noundef %name, i32 noundef %namelen, ptr noundef %root, i1 noundef zeroext %readonly, ptr noundef %inherit) unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %snapshot_lock = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 52
  tail call void @btrfs_drew_read_lock(ptr noundef %snapshot_lock) #20
  %call = tail call i32 @btrfs_start_delalloc_snapshot(ptr noundef %root, i1 noundef zeroext false) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then6, label %entry.if.end8_crit_edge

entry.if.end8_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end8

if.then6:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %snapshot_force_cow1 = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 53
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %snapshot_force_cow1, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %snapshot_force_cow1, i32 1, i32 3, i32 1) #20
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %snapshot_force_cow1, ptr %snapshot_force_cow1, i32 1, ptr elementtype(i32) %snapshot_force_cow1) #20, !srcloc !224
  %call2 = tail call i64 @btrfs_wait_ordered_extents(ptr noundef %root, i64 noundef -1, i64 noundef 0, i64 noundef -1) #20
  %call4 = tail call fastcc i32 @btrfs_mksubvol(ptr noundef %parent, ptr noundef %mnt_userns, ptr noundef %name, i32 noundef %namelen, ptr noundef %root, i1 noundef zeroext %readonly, ptr noundef %inherit)
  %call.i.i17 = tail call zeroext i1 @__kasan_check_write(ptr noundef %snapshot_force_cow1, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %snapshot_force_cow1, i32 1, i32 3, i32 1) #20
  %1 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %snapshot_force_cow1, ptr %snapshot_force_cow1, i32 1, ptr elementtype(i32) %snapshot_force_cow1) #20, !srcloc !225
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %entry.if.end8_crit_edge
  %ret.019 = phi i32 [ %call4, %if.then6 ], [ %call, %entry.if.end8_crit_edge ]
  tail call void @btrfs_drew_read_unlock(ptr noundef %snapshot_lock) #20
  ret i32 %ret.019
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @down_write_killable_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @lookup_one(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_check_dir_item_collision(ptr noundef, i64 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @create_snapshot(ptr noundef %root, ptr noundef %dir, ptr noundef %dentry, i1 noundef zeroext %readonly, ptr noundef %inherit) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %frombool = zext i1 %readonly to i8
  %i_sb = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 33
  %2 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s_fs_info.i, align 16
  %state = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 5
  %4 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %state, align 4
  %6 = and i32 %5, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %nr_swapfiles = getelementptr inbounds %struct.btrfs_root, ptr %root, i32 0, i32 58
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %nr_swapfiles, i32 noundef 4) #20
  %7 = ptrtoint ptr %nr_swapfiles to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %nr_swapfiles, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool3.not = icmp eq i32 %8, 0
  br i1 %tobool3.not, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %3, ptr noundef nonnull @.str.38) #24
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %9 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %9, i32 noundef 3520, i32 noundef 144) #26
  %tobool7.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool7.not, label %if.end5.cleanup_crit_edge, label %if.end9

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end9:                                          ; preds = %if.end5
  %anon_dev = getelementptr inbounds %struct.btrfs_pending_snapshot, ptr %call7.i.i, i32 0, i32 9
  %call10 = tail call i32 @get_anon_bdev(ptr noundef %anon_dev) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %cmp = icmp slt i32 %call10, 0
  br i1 %cmp, label %if.end9.free_pending_crit_edge, label %if.end12

if.end9.free_pending_crit_edge:                   ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #22
  br label %free_pending

if.end12:                                         ; preds = %if.end9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %10 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i126 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %10, i32 noundef 3520, i32 noundef 439) #26
  %root_item = getelementptr inbounds %struct.btrfs_pending_snapshot, ptr %call7.i.i, i32 0, i32 3
  %11 = ptrtoint ptr %root_item to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %call7.i.i126, ptr %root_item, align 4
  %call14 = tail call ptr @btrfs_alloc_path() #20
  %path = getelementptr inbounds %struct.btrfs_pending_snapshot, ptr %call7.i.i, i32 0, i32 6
  %12 = ptrtoint ptr %path to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %call14, ptr %path, align 8
  %13 = ptrtoint ptr %root_item to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %root_item, align 4
  %tobool16.not = icmp eq ptr %14, null
  %tobool18.not = icmp eq ptr %call14, null
  %or.cond = select i1 %tobool16.not, i1 true, i1 %tobool18.not
  br i1 %or.cond, label %if.end12.free_pending_crit_edge, label %if.end20

if.end12.free_pending_crit_edge:                  ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #22
  br label %free_pending

if.end20:                                         ; preds = %if.end12
  %block_rsv = getelementptr inbounds %struct.btrfs_pending_snapshot, ptr %call7.i.i, i32 0, i32 7
  tail call void @btrfs_init_block_rsv(ptr noundef %block_rsv, i16 noundef zeroext 7) #20
  %add.ptr.i = getelementptr i8, ptr %dir, i32 -864
  %15 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %add.ptr.i, align 8
  %call24 = tail call i32 @btrfs_subvolume_reserve_metadata(ptr noundef %16, ptr noundef %block_rsv, i32 noundef 8, i1 noundef zeroext false) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %if.end27, label %if.end20.free_pending_crit_edge

if.end20.free_pending_crit_edge:                  ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #22
  br label %free_pending

if.end27:                                         ; preds = %if.end20
  %17 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %dentry, ptr %call7.i.i, align 8
  %root29 = getelementptr inbounds %struct.btrfs_pending_snapshot, ptr %call7.i.i, i32 0, i32 2
  %18 = ptrtoint ptr %root29 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %root, ptr %root29, align 8
  %readonly31 = getelementptr inbounds %struct.btrfs_pending_snapshot, ptr %call7.i.i, i32 0, i32 10
  %19 = ptrtoint ptr %readonly31 to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 %frombool, ptr %readonly31, align 8
  %dir33 = getelementptr inbounds %struct.btrfs_pending_snapshot, ptr %call7.i.i, i32 0, i32 1
  %20 = ptrtoint ptr %dir33 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %dir, ptr %dir33, align 4
  %inherit34 = getelementptr inbounds %struct.btrfs_pending_snapshot, ptr %call7.i.i, i32 0, i32 5
  %21 = ptrtoint ptr %inherit34 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %inherit, ptr %inherit34, align 4
  %call35 = tail call ptr @btrfs_start_transaction(ptr noundef %root, i32 noundef 0) #20
  %cmp.i = icmp ugt ptr %call35, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end27.fail_crit_edge, label %if.end39

if.end27.fail_crit_edge:                          ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #22
  br label %fail

if.end39:                                         ; preds = %if.end27
  %pending_snapshot40 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call35, i32 0, i32 7
  %22 = ptrtoint ptr %pending_snapshot40 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %call7.i.i, ptr %pending_snapshot40, align 8
  %call41 = tail call i32 @btrfs_commit_transaction(ptr noundef %call35) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %if.end44, label %if.end39.land.lhs.true_crit_edge

if.end39.land.lhs.true_crit_edge:                 ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true

if.end44:                                         ; preds = %if.end39
  %error = getelementptr inbounds %struct.btrfs_pending_snapshot, ptr %call7.i.i, i32 0, i32 8
  %23 = ptrtoint ptr %error to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %error, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool45.not = icmp eq i32 %24, 0
  br i1 %tobool45.not, label %if.end47, label %if.end44.land.lhs.true_crit_edge

if.end44.land.lhs.true_crit_edge:                 ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true

if.end47:                                         ; preds = %if.end44
  %snap = getelementptr inbounds %struct.btrfs_pending_snapshot, ptr %call7.i.i, i32 0, i32 4
  %25 = ptrtoint ptr %snap to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %snap, align 8
  %call48 = tail call i32 @btrfs_orphan_cleanup(ptr noundef %26) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call48)
  %tobool49.not = icmp eq i32 %call48, 0
  br i1 %tobool49.not, label %if.end51, label %if.end47.land.lhs.true_crit_edge

if.end47.land.lhs.true_crit_edge:                 ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #22
  br label %land.lhs.true

if.end51:                                         ; preds = %if.end47
  %d_parent = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 3
  %27 = ptrtoint ptr %d_parent to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %d_parent, align 8
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %28, i32 0, i32 5
  %29 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %d_inode.i, align 8
  %call53 = tail call ptr @btrfs_lookup_dentry(ptr noundef %30, ptr noundef %dentry) #20
  %cmp.i127 = icmp ugt ptr %call53, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i127, label %if.end51.fail_crit_edge, label %fail.thread132

if.end51.fail_crit_edge:                          ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #22
  br label %fail

fail.thread132:                                   ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @d_instantiate(ptr noundef %dentry, ptr noundef %call53) #20
  %31 = ptrtoint ptr %anon_dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 0, ptr %anon_dev, align 4
  br label %if.end65

fail:                                             ; preds = %if.end51.fail_crit_edge, %if.end27.fail_crit_edge
  %ret.0.in = phi ptr [ %call35, %if.end27.fail_crit_edge ], [ %call53, %if.end51.fail_crit_edge ]
  %ret.0 = ptrtoint ptr %ret.0.in to i32
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %fail, %if.end47.land.lhs.true_crit_edge, %if.end44.land.lhs.true_crit_edge, %if.end39.land.lhs.true_crit_edge
  %ret.0130 = phi i32 [ %ret.0, %fail ], [ %call48, %if.end47.land.lhs.true_crit_edge ], [ %24, %if.end44.land.lhs.true_crit_edge ], [ %call41, %if.end39.land.lhs.true_crit_edge ]
  %snap60 = getelementptr inbounds %struct.btrfs_pending_snapshot, ptr %call7.i.i, i32 0, i32 4
  %32 = ptrtoint ptr %snap60 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %snap60, align 8
  %tobool61.not = icmp eq ptr %33, null
  br i1 %tobool61.not, label %land.lhs.true.if.end65_crit_edge, label %if.then62

land.lhs.true.if.end65_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end65

if.then62:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  %anon_dev64 = getelementptr inbounds %struct.btrfs_root, ptr %33, i32 0, i32 36
  %34 = ptrtoint ptr %anon_dev64 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 0, ptr %anon_dev64, align 8
  br label %if.end65

if.end65:                                         ; preds = %if.then62, %land.lhs.true.if.end65_crit_edge, %fail.thread132
  %ret.0131 = phi i32 [ %ret.0130, %if.then62 ], [ %ret.0130, %land.lhs.true.if.end65_crit_edge ], [ 0, %fail.thread132 ]
  %snap66 = getelementptr inbounds %struct.btrfs_pending_snapshot, ptr %call7.i.i, i32 0, i32 4
  %35 = ptrtoint ptr %snap66 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %snap66, align 8
  tail call void @btrfs_put_root(ptr noundef %36) #20
  tail call void @btrfs_subvolume_release_metadata(ptr noundef %root, ptr noundef %block_rsv) #20
  br label %free_pending

free_pending:                                     ; preds = %if.end65, %if.end20.free_pending_crit_edge, %if.end12.free_pending_crit_edge, %if.end9.free_pending_crit_edge
  %ret.1 = phi i32 [ %call10, %if.end9.free_pending_crit_edge ], [ %call24, %if.end20.free_pending_crit_edge ], [ %ret.0131, %if.end65 ], [ -12, %if.end12.free_pending_crit_edge ]
  %37 = ptrtoint ptr %anon_dev to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %anon_dev, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool69.not = icmp eq i32 %38, 0
  br i1 %tobool69.not, label %free_pending.if.end72_crit_edge, label %if.then70

free_pending.if.end72_crit_edge:                  ; preds = %free_pending
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end72

if.then70:                                        ; preds = %free_pending
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @free_anon_bdev(i32 noundef %38) #20
  br label %if.end72

if.end72:                                         ; preds = %if.then70, %free_pending.if.end72_crit_edge
  %root_item73 = getelementptr inbounds %struct.btrfs_pending_snapshot, ptr %call7.i.i, i32 0, i32 3
  %39 = ptrtoint ptr %root_item73 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %root_item73, align 4
  tail call void @kfree(ptr noundef %40) #20
  %path74 = getelementptr inbounds %struct.btrfs_pending_snapshot, ptr %call7.i.i, i32 0, i32 6
  %41 = ptrtoint ptr %path74 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %path74, align 8
  tail call void @btrfs_free_path(ptr noundef %42) #20
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end72, %if.end5.cleanup_crit_edge, %if.then4, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -26, %if.then4 ], [ %ret.1, %if.end72 ], [ -22, %entry.cleanup_crit_edge ], [ -12, %if.end5.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @create_subvol(ptr noundef %mnt_userns, ptr noundef %dir, ptr noundef %dentry, ptr noundef %name, i32 noundef %namelen, ptr noundef %inherit) unnamed_addr #8 align 64 {
entry:
  %key = alloca %struct.btrfs_key, align 8
  %block_rsv = alloca %struct.btrfs_block_rsv, align 8
  %cur_time = alloca %struct.timespec64, align 8
  %anon_dev = alloca i32, align 4
  %objectid = alloca i64, align 8
  %index = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %i_sb = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 33
  %2 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s_fs_info.i, align 16
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key) #20
  %4 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %5 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  %add.ptr.i = getelementptr i8, ptr %dir, i32 -864
  %6 = call ptr @memset(ptr %key, i32 255, i32 17)
  %7 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %add.ptr.i, align 8
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %block_rsv) #20
  %9 = call ptr @memset(ptr %block_rsv, i32 255, i32 88)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %cur_time) #20
  %10 = call ptr @memset(ptr %cur_time, i32 255, i32 16)
  call void @current_time(ptr nonnull sret(%struct.timespec64) align 8 %cur_time, ptr noundef %dir) #20
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %anon_dev) #20
  %11 = ptrtoint ptr %anon_dev to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %anon_dev, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %objectid) #20
  %12 = ptrtoint ptr %objectid to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 -1, ptr %objectid, align 8, !annotation !200
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %index) #20
  %13 = ptrtoint ptr %index to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 0, ptr %index, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %14 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %14, i32 noundef 3520, i32 noundef 439) #26
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %tree_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 2
  %15 = ptrtoint ptr %tree_root to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %tree_root, align 4
  %call4 = call i32 @btrfs_get_free_objectid(ptr noundef %16, ptr noundef nonnull %objectid) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.end7, label %if.end.fail_free_crit_edge

if.end.fail_free_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %fail_free

if.end7:                                          ; preds = %if.end
  %call8 = call i32 @get_anon_bdev(ptr noundef nonnull %anon_dev) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %cmp = icmp slt i32 %call8, 0
  br i1 %cmp, label %if.end7.fail_free_crit_edge, label %if.end10

if.end7.fail_free_crit_edge:                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #22
  br label %fail_free

if.end10:                                         ; preds = %if.end7
  %17 = ptrtoint ptr %objectid to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %objectid, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 281474976710656, i64 %18)
  %tobool12.not = icmp ult i64 %18, 281474976710656
  br i1 %tobool12.not, label %if.end14, label %if.end10.fail_free_crit_edge

if.end10.fail_free_crit_edge:                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #22
  br label %fail_free

if.end14:                                         ; preds = %if.end10
  call void @btrfs_init_block_rsv(ptr noundef nonnull %block_rsv, i16 noundef zeroext 7) #20
  %call15 = call i32 @btrfs_subvolume_reserve_metadata(ptr noundef %8, ptr noundef nonnull %block_rsv, i32 noundef 8, i1 noundef zeroext false) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %if.end18, label %if.end14.fail_free_crit_edge

if.end14.fail_free_crit_edge:                     ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #22
  br label %fail_free

if.end18:                                         ; preds = %if.end14
  %call19 = call ptr @btrfs_start_transaction(ptr noundef %8, i32 noundef 0) #20
  %cmp.i = icmp ugt ptr %call19, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then21, label %if.end23

if.then21:                                        ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #22
  %19 = ptrtoint ptr %call19 to i32
  call void @btrfs_subvolume_release_metadata(ptr noundef %8, ptr noundef nonnull %block_rsv) #20
  br label %fail_free

if.end23:                                         ; preds = %if.end18
  %block_rsv24 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call19, i32 0, i32 5
  %20 = ptrtoint ptr %block_rsv24 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %block_rsv, ptr %block_rsv24, align 8
  %21 = ptrtoint ptr %block_rsv to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %block_rsv, align 8
  %bytes_reserved = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call19, i32 0, i32 1
  %23 = ptrtoint ptr %bytes_reserved to i32
  call void @__asan_store8_noabort(i32 %23)
  store i64 %22, ptr %bytes_reserved, align 8
  %24 = ptrtoint ptr %objectid to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %objectid, align 8
  %call25 = call i32 @btrfs_qgroup_inherit(ptr noundef %call19, i64 noundef 0, i64 noundef %25, ptr noundef %inherit) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %if.end28, label %if.end23.fail_crit_edge

if.end23.fail_crit_edge:                          ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #22
  br label %fail

if.end28:                                         ; preds = %if.end23
  %26 = ptrtoint ptr %objectid to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %objectid, align 8
  %call29 = call ptr @btrfs_alloc_tree_block(ptr noundef %call19, ptr noundef %8, i64 noundef 0, i64 noundef %27, ptr noundef null, i32 noundef 0, i64 noundef 0, i64 noundef 0, i32 noundef 0) #20
  %cmp.i787 = icmp ugt ptr %call29, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i787, label %if.then31, label %if.end33

if.then31:                                        ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #22
  %28 = ptrtoint ptr %call29 to i32
  br label %fail

if.end33:                                         ; preds = %if.end28
  call void @btrfs_mark_buffer_dirty(ptr noundef %call29) #20
  %29 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 72057594037927936, ptr %call7.i.i, align 8
  %size.i = getelementptr inbounds %struct.btrfs_inode_item, ptr %call7.i.i, i32 0, i32 2
  %30 = ptrtoint ptr %size.i to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 216172782113783808, ptr %size.i, align 8
  %nlink.i = getelementptr inbounds %struct.btrfs_inode_item, ptr %call7.i.i, i32 0, i32 5
  %31 = ptrtoint ptr %nlink.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 16777216, ptr %nlink.i, align 8
  %nodesize = getelementptr inbounds %struct.btrfs_fs_info, ptr %3, i32 0, i32 166
  %32 = ptrtoint ptr %nodesize to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %nodesize, align 8
  %conv = zext i32 %33 to i64
  %nbytes.i = getelementptr inbounds %struct.btrfs_inode_item, ptr %call7.i.i, i32 0, i32 3
  %34 = call i64 @llvm.bswap.i64(i64 %conv) #20
  %35 = ptrtoint ptr %nbytes.i to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %nbytes.i, align 8
  %mode.i = getelementptr inbounds %struct.btrfs_inode_item, ptr %call7.i.i, i32 0, i32 8
  %36 = ptrtoint ptr %mode.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 -314507264, ptr %mode.i, align 4
  %flags.i = getelementptr inbounds %struct.btrfs_root_item, ptr %call7.i.i, i32 0, i32 7
  %37 = ptrtoint ptr %flags.i to i32
  call void @__asan_store8_noabort(i32 %37)
  store i64 0, ptr %flags.i, align 8
  %byte_limit.i = getelementptr inbounds %struct.btrfs_root_item, ptr %call7.i.i, i32 0, i32 4
  %38 = ptrtoint ptr %byte_limit.i to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 0, ptr %byte_limit.i, align 8
  %flags.i788 = getelementptr inbounds %struct.btrfs_inode_item, ptr %call7.i.i, i32 0, i32 10
  %39 = ptrtoint ptr %flags.i788 to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 549755813888, ptr %flags.i788, align 8
  %40 = ptrtoint ptr %call29 to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %call29, align 8
  %bytenr.i = getelementptr inbounds %struct.btrfs_root_item, ptr %call7.i.i, i32 0, i32 3
  %42 = call i64 @llvm.bswap.i64(i64 %41) #20
  %43 = ptrtoint ptr %bytenr.i to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 %42, ptr %bytenr.i, align 8
  %44 = ptrtoint ptr %call19 to i32
  call void @__asan_load8_noabort(i32 %44)
  %45 = load i64, ptr %call19, align 8
  %generation.i = getelementptr inbounds %struct.btrfs_root_item, ptr %call7.i.i, i32 0, i32 1
  %46 = call i64 @llvm.bswap.i64(i64 %45) #20
  %47 = ptrtoint ptr %generation.i to i32
  call void @__asan_store8_noabort(i32 %47)
  store i64 %46, ptr %generation.i, align 8
  %level.i = getelementptr inbounds %struct.btrfs_root_item, ptr %call7.i.i, i32 0, i32 11
  %48 = ptrtoint ptr %level.i to i32
  call void @__asan_store1_noabort(i32 %48)
  store i8 0, ptr %level.i, align 2
  %refs.i = getelementptr inbounds %struct.btrfs_root_item, ptr %call7.i.i, i32 0, i32 8
  %49 = ptrtoint ptr %refs.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 16777216, ptr %refs.i, align 8
  %len = getelementptr inbounds %struct.extent_buffer, ptr %call29, i32 0, i32 1
  %50 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %len, align 8
  %conv35 = zext i32 %51 to i64
  %bytes_used.i = getelementptr inbounds %struct.btrfs_root_item, ptr %call7.i.i, i32 0, i32 5
  %52 = call i64 @llvm.bswap.i64(i64 %conv35) #20
  %53 = ptrtoint ptr %bytes_used.i to i32
  call void @__asan_store8_noabort(i32 %53)
  store i64 %52, ptr %bytes_used.i, align 8
  %last_snapshot.i = getelementptr inbounds %struct.btrfs_root_item, ptr %call7.i.i, i32 0, i32 6
  %54 = ptrtoint ptr %last_snapshot.i to i32
  call void @__asan_store8_noabort(i32 %54)
  store i64 0, ptr %last_snapshot.i, align 8
  %generation_v2.i = getelementptr inbounds %struct.btrfs_root_item, ptr %call7.i.i, i32 0, i32 12
  %55 = ptrtoint ptr %generation_v2.i to i32
  call void @__asan_storeN_noabort(i32 %55, i32 8)
  store i64 %46, ptr %generation_v2.i, align 1
  %uuid = getelementptr inbounds %struct.btrfs_root_item, ptr %call7.i.i, i32 0, i32 13
  call void @generate_random_guid(ptr noundef %uuid) #20
  %otime = getelementptr inbounds %struct.btrfs_root_item, ptr %call7.i.i, i32 0, i32 21
  %56 = ptrtoint ptr %cur_time to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %cur_time, align 8
  %58 = call i64 @llvm.bswap.i64(i64 %57) #20
  %59 = ptrtoint ptr %otime to i32
  call void @__asan_storeN_noabort(i32 %59, i32 8)
  store i64 %58, ptr %otime, align 1
  %tv_nsec = getelementptr inbounds %struct.timespec64, ptr %cur_time, i32 0, i32 1
  %60 = ptrtoint ptr %tv_nsec to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %tv_nsec, align 8
  %nsec.i = getelementptr inbounds %struct.btrfs_root_item, ptr %call7.i.i, i32 0, i32 21, i32 1
  %62 = call i32 @llvm.bswap.i32(i32 %61) #20
  %63 = ptrtoint ptr %nsec.i to i32
  call void @__asan_storeN_noabort(i32 %63, i32 4)
  store i32 %62, ptr %nsec.i, align 1
  %ctime = getelementptr inbounds %struct.btrfs_root_item, ptr %call7.i.i, i32 0, i32 20
  %64 = call ptr @memcpy(ptr %ctime, ptr %otime, i32 12)
  %65 = ptrtoint ptr %call19 to i32
  call void @__asan_load8_noabort(i32 %65)
  %66 = load i64, ptr %call19, align 8
  %ctransid.i = getelementptr inbounds %struct.btrfs_root_item, ptr %call7.i.i, i32 0, i32 16
  %67 = call i64 @llvm.bswap.i64(i64 %66) #20
  %68 = ptrtoint ptr %ctransid.i to i32
  call void @__asan_storeN_noabort(i32 %68, i32 8)
  store i64 %67, ptr %ctransid.i, align 1
  %69 = ptrtoint ptr %call19 to i32
  call void @__asan_load8_noabort(i32 %69)
  %70 = load i64, ptr %call19, align 8
  %otransid.i = getelementptr inbounds %struct.btrfs_root_item, ptr %call7.i.i, i32 0, i32 17
  %71 = call i64 @llvm.bswap.i64(i64 %70) #20
  %72 = ptrtoint ptr %otransid.i to i32
  call void @__asan_storeN_noabort(i32 %72, i32 8)
  store i64 %71, ptr %otransid.i, align 1
  call void @btrfs_tree_unlock(ptr noundef %call29) #20
  %root_dirid.i = getelementptr inbounds %struct.btrfs_root_item, ptr %call7.i.i, i32 0, i32 2
  %73 = ptrtoint ptr %root_dirid.i to i32
  call void @__asan_store8_noabort(i32 %73)
  store i64 281474976710656, ptr %root_dirid.i, align 8
  %74 = ptrtoint ptr %objectid to i32
  call void @__asan_load8_noabort(i32 %74)
  %75 = load i64, ptr %objectid, align 8
  %76 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %76)
  store i64 %75, ptr %key, align 8
  %77 = ptrtoint ptr %5 to i32
  call void @__asan_storeN_noabort(i32 %77, i32 8)
  store i64 0, ptr %5, align 1
  %78 = ptrtoint ptr %4 to i32
  call void @__asan_store1_noabort(i32 %78)
  store i8 -124, ptr %4, align 8
  %79 = ptrtoint ptr %tree_root to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %tree_root, align 4
  %call43 = call i32 @btrfs_insert_root(ptr noundef %call19, ptr noundef %80, ptr noundef nonnull %key, ptr noundef nonnull %call7.i.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call43)
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %if.end46, label %if.then45

if.then45:                                        ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #22
  call void @btrfs_tree_lock(ptr noundef %call29) #20
  call void @btrfs_clean_tree_block(ptr noundef %call29) #20
  call void @btrfs_tree_unlock(ptr noundef %call29) #20
  %81 = ptrtoint ptr %objectid to i32
  call void @__asan_load8_noabort(i32 %81)
  %82 = load i64, ptr %objectid, align 8
  call void @btrfs_free_tree_block(ptr noundef %call19, i64 noundef %82, ptr noundef %call29, i64 noundef 0, i32 noundef 1) #20
  call void @free_extent_buffer(ptr noundef %call29) #20
  br label %fail

if.end46:                                         ; preds = %if.end33
  call void @free_extent_buffer(ptr noundef %call29) #20
  %83 = ptrtoint ptr %5 to i32
  call void @__asan_storeN_noabort(i32 %83, i32 8)
  store i64 -1, ptr %5, align 1
  %84 = ptrtoint ptr %objectid to i32
  call void @__asan_load8_noabort(i32 %84)
  %85 = load i64, ptr %objectid, align 8
  %86 = ptrtoint ptr %anon_dev to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %anon_dev, align 4
  %call48 = call ptr @btrfs_get_new_fs_root(ptr noundef %3, i64 noundef %85, i32 noundef %87) #20
  %cmp.i790 = icmp ugt ptr %call48, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i790, label %if.then50, label %if.end98

if.then50:                                        ; preds = %if.end46
  %88 = ptrtoint ptr %anon_dev to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %anon_dev, align 4
  call void @free_anon_bdev(i32 noundef %89) #20
  %90 = ptrtoint ptr %call48 to i32
  %fs_info52 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call19, i32 0, i32 16
  %91 = ptrtoint ptr %fs_info52 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %fs_info52, align 4
  %fs_state = getelementptr inbounds %struct.btrfs_fs_info, ptr %92, i32 0, i32 149
  %call53 = call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call53)
  %tobool54.not = icmp eq i32 %call53, 0
  br i1 %tobool54.not, label %if.then55, label %if.then50.if.end95_crit_edge

if.then50.if.end95_crit_edge:                     ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end95

if.then55:                                        ; preds = %if.then50
  %93 = zext i32 %90 to i64
  call void @__sanitizer_cov_trace_switch(i64 %93, ptr @__sancov_gen_cov_switch_values.84)
  switch i32 %90, label %do.end [
    i32 -5, label %if.then55.do.body79_crit_edge
    i32 -30, label %if.then55.do.body79_crit_edge808
  ]

if.then55.do.body79_crit_edge808:                 ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body79

if.then55.do.body79_crit_edge:                    ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body79

do.end:                                           ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #22
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 664, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %90) #20
  br label %if.end95

do.body79:                                        ; preds = %if.then55.do.body79_crit_edge, %if.then55.do.body79_crit_edge808
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @create_subvol.__UNIQUE_ID_ddebug945, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@create_subvol, %if.then89)) #20
          to label %if.end95 [label %if.then89], !srcloc !182

if.then89:                                        ; preds = %do.body79
  call void @__sanitizer_cov_trace_pc() #22
  %94 = ptrtoint ptr %fs_info52 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %fs_info52, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %95, ptr noundef nonnull @.str.6, i32 noundef %90) #24
  br label %if.end95

if.end95:                                         ; preds = %if.then89, %do.body79, %do.end, %if.then50.if.end95_crit_edge
  call void @__btrfs_abort_transaction(ptr noundef %call19, ptr noundef nonnull @.str.39, i32 noundef 664, i32 noundef %90) #24
  br label %fail

if.end98:                                         ; preds = %if.end46
  %96 = ptrtoint ptr %anon_dev to i32
  call void @__asan_store4_noabort(i32 %96)
  store i32 0, ptr %anon_dev, align 4
  %call99 = call i32 @btrfs_record_root_in_trans(ptr noundef %call19, ptr noundef %call48) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call99)
  %tobool100.not = icmp eq i32 %call99, 0
  br i1 %tobool100.not, label %if.end162, label %if.then101

if.then101:                                       ; preds = %if.end98
  call void @btrfs_put_root(ptr noundef %call48) #20
  %fs_info103 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call19, i32 0, i32 16
  %97 = ptrtoint ptr %fs_info103 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %fs_info103, align 4
  %fs_state104 = getelementptr inbounds %struct.btrfs_fs_info, ptr %98, i32 0, i32 149
  %call105 = call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state104) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call105)
  %tobool106.not = icmp eq i32 %call105, 0
  br i1 %tobool106.not, label %if.then107, label %if.then101.if.end159_crit_edge

if.then101.if.end159_crit_edge:                   ; preds = %if.then101
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end159

if.then107:                                       ; preds = %if.then101
  %99 = zext i32 %call99 to i64
  call void @__sanitizer_cov_trace_switch(i64 %99, ptr @__sancov_gen_cov_switch_values.85)
  switch i32 %call99, label %do.end126 [
    i32 -5, label %if.then107.do.body141_crit_edge
    i32 -30, label %if.then107.do.body141_crit_edge809
  ]

if.then107.do.body141_crit_edge809:               ; preds = %if.then107
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body141

if.then107.do.body141_crit_edge:                  ; preds = %if.then107
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body141

do.end126:                                        ; preds = %if.then107
  call void @__sanitizer_cov_trace_pc() #22
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 673, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %call99) #20
  br label %if.end159

do.body141:                                       ; preds = %if.then107.do.body141_crit_edge, %if.then107.do.body141_crit_edge809
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @create_subvol.__UNIQUE_ID_ddebug946, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@create_subvol, %if.then153)) #20
          to label %if.end159 [label %if.then153], !srcloc !182

if.then153:                                       ; preds = %do.body141
  call void @__sanitizer_cov_trace_pc() #22
  %100 = ptrtoint ptr %fs_info103 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %fs_info103, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %101, ptr noundef nonnull @.str.6, i32 noundef %call99) #24
  br label %if.end159

if.end159:                                        ; preds = %if.then153, %do.body141, %do.end126, %if.then101.if.end159_crit_edge
  call void @__btrfs_abort_transaction(ptr noundef %call19, ptr noundef nonnull @.str.39, i32 noundef 673, i32 noundef %call99) #24
  br label %fail

if.end162:                                        ; preds = %if.end98
  %call163 = call i32 @btrfs_create_subvol_root(ptr noundef %call19, ptr noundef %call48, ptr noundef %8, ptr noundef %mnt_userns) #20
  call void @btrfs_put_root(ptr noundef %call48) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call163)
  %tobool164.not = icmp eq i32 %call163, 0
  br i1 %tobool164.not, label %if.end226, label %do.body166

do.body166:                                       ; preds = %if.end162
  %fs_info167 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call19, i32 0, i32 16
  %102 = ptrtoint ptr %fs_info167 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %fs_info167, align 4
  %fs_state168 = getelementptr inbounds %struct.btrfs_fs_info, ptr %103, i32 0, i32 149
  %call169 = call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state168) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call169)
  %tobool170.not = icmp eq i32 %call169, 0
  br i1 %tobool170.not, label %if.then171, label %do.body166.if.end223_crit_edge

do.body166.if.end223_crit_edge:                   ; preds = %do.body166
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end223

if.then171:                                       ; preds = %do.body166
  %104 = zext i32 %call163 to i64
  call void @__sanitizer_cov_trace_switch(i64 %104, ptr @__sancov_gen_cov_switch_values.86)
  switch i32 %call163, label %do.end190 [
    i32 -5, label %if.then171.do.body205_crit_edge
    i32 -30, label %if.then171.do.body205_crit_edge810
  ]

if.then171.do.body205_crit_edge810:               ; preds = %if.then171
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body205

if.then171.do.body205_crit_edge:                  ; preds = %if.then171
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body205

do.end190:                                        ; preds = %if.then171
  call void @__sanitizer_cov_trace_pc() #22
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 681, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %call163) #20
  br label %if.end223

do.body205:                                       ; preds = %if.then171.do.body205_crit_edge, %if.then171.do.body205_crit_edge810
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @create_subvol.__UNIQUE_ID_ddebug947, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@create_subvol, %if.then217)) #20
          to label %if.end223 [label %if.then217], !srcloc !182

if.then217:                                       ; preds = %do.body205
  call void @__sanitizer_cov_trace_pc() #22
  %105 = ptrtoint ptr %fs_info167 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %fs_info167, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %106, ptr noundef nonnull @.str.6, i32 noundef %call163) #24
  br label %if.end223

if.end223:                                        ; preds = %if.then217, %do.body205, %do.end190, %do.body166.if.end223_crit_edge
  call void @__btrfs_abort_transaction(ptr noundef %call19, ptr noundef nonnull @.str.39, i32 noundef 681, i32 noundef %call163) #24
  br label %fail

if.end226:                                        ; preds = %if.end162
  %call228 = call i32 @btrfs_set_inode_index(ptr noundef %add.ptr.i, ptr noundef nonnull %index) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call228)
  %tobool229.not = icmp eq i32 %call228, 0
  br i1 %tobool229.not, label %if.end291, label %do.body231

do.body231:                                       ; preds = %if.end226
  %fs_info232 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call19, i32 0, i32 16
  %107 = ptrtoint ptr %fs_info232 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %fs_info232, align 4
  %fs_state233 = getelementptr inbounds %struct.btrfs_fs_info, ptr %108, i32 0, i32 149
  %call234 = call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state233) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call234)
  %tobool235.not = icmp eq i32 %call234, 0
  br i1 %tobool235.not, label %if.then236, label %do.body231.if.end288_crit_edge

do.body231.if.end288_crit_edge:                   ; preds = %do.body231
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end288

if.then236:                                       ; preds = %do.body231
  %109 = zext i32 %call228 to i64
  call void @__sanitizer_cov_trace_switch(i64 %109, ptr @__sancov_gen_cov_switch_values.87)
  switch i32 %call228, label %do.end255 [
    i32 -5, label %if.then236.do.body270_crit_edge
    i32 -30, label %if.then236.do.body270_crit_edge811
  ]

if.then236.do.body270_crit_edge811:               ; preds = %if.then236
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body270

if.then236.do.body270_crit_edge:                  ; preds = %if.then236
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body270

do.end255:                                        ; preds = %if.then236
  call void @__sanitizer_cov_trace_pc() #22
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 690, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %call228) #20
  br label %if.end288

do.body270:                                       ; preds = %if.then236.do.body270_crit_edge, %if.then236.do.body270_crit_edge811
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @create_subvol.__UNIQUE_ID_ddebug948, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@create_subvol, %if.then282)) #20
          to label %if.end288 [label %if.then282], !srcloc !182

if.then282:                                       ; preds = %do.body270
  call void @__sanitizer_cov_trace_pc() #22
  %110 = ptrtoint ptr %fs_info232 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %fs_info232, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %111, ptr noundef nonnull @.str.6, i32 noundef %call228) #24
  br label %if.end288

if.end288:                                        ; preds = %if.then282, %do.body270, %do.end255, %do.body231.if.end288_crit_edge
  call void @__btrfs_abort_transaction(ptr noundef %call19, ptr noundef nonnull @.str.39, i32 noundef 690, i32 noundef %call228) #24
  br label %fail

if.end291:                                        ; preds = %if.end226
  %112 = ptrtoint ptr %index to i32
  call void @__asan_load8_noabort(i32 %112)
  %113 = load i64, ptr %index, align 8
  %call293 = call i32 @btrfs_insert_dir_item(ptr noundef %call19, ptr noundef %name, i32 noundef %namelen, ptr noundef %add.ptr.i, ptr noundef nonnull %key, i8 noundef zeroext 2, i64 noundef %113) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call293)
  %tobool294.not = icmp eq i32 %call293, 0
  br i1 %tobool294.not, label %if.end356, label %do.body296

do.body296:                                       ; preds = %if.end291
  %fs_info297 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call19, i32 0, i32 16
  %114 = ptrtoint ptr %fs_info297 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %fs_info297, align 4
  %fs_state298 = getelementptr inbounds %struct.btrfs_fs_info, ptr %115, i32 0, i32 149
  %call299 = call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state298) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call299)
  %tobool300.not = icmp eq i32 %call299, 0
  br i1 %tobool300.not, label %if.then301, label %do.body296.if.end353_crit_edge

do.body296.if.end353_crit_edge:                   ; preds = %do.body296
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end353

if.then301:                                       ; preds = %do.body296
  %116 = zext i32 %call293 to i64
  call void @__sanitizer_cov_trace_switch(i64 %116, ptr @__sancov_gen_cov_switch_values.88)
  switch i32 %call293, label %do.end320 [
    i32 -5, label %if.then301.do.body335_crit_edge
    i32 -30, label %if.then301.do.body335_crit_edge812
  ]

if.then301.do.body335_crit_edge812:               ; preds = %if.then301
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body335

if.then301.do.body335_crit_edge:                  ; preds = %if.then301
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body335

do.end320:                                        ; preds = %if.then301
  call void @__sanitizer_cov_trace_pc() #22
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 697, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %call293) #20
  br label %if.end353

do.body335:                                       ; preds = %if.then301.do.body335_crit_edge, %if.then301.do.body335_crit_edge812
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @create_subvol.__UNIQUE_ID_ddebug949, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@create_subvol, %if.then347)) #20
          to label %if.end353 [label %if.then347], !srcloc !182

if.then347:                                       ; preds = %do.body335
  call void @__sanitizer_cov_trace_pc() #22
  %117 = ptrtoint ptr %fs_info297 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %fs_info297, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %118, ptr noundef nonnull @.str.6, i32 noundef %call293) #24
  br label %if.end353

if.end353:                                        ; preds = %if.then347, %do.body335, %do.end320, %do.body296.if.end353_crit_edge
  call void @__btrfs_abort_transaction(ptr noundef %call19, ptr noundef nonnull @.str.39, i32 noundef 697, i32 noundef %call293) #24
  br label %fail

if.end356:                                        ; preds = %if.end291
  %i_size = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 14
  %119 = ptrtoint ptr %i_size to i32
  call void @__asan_load8_noabort(i32 %119)
  %120 = load i64, ptr %i_size, align 8
  %mul = shl i32 %namelen, 1
  %conv358 = sext i32 %mul to i64
  %add = add i64 %120, %conv358
  call fastcc void @btrfs_i_size_write(ptr noundef %add.ptr.i, i64 noundef %add)
  %call360 = call i32 @btrfs_update_inode(ptr noundef %call19, ptr noundef %8, ptr noundef %add.ptr.i) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call360)
  %tobool361.not = icmp eq i32 %call360, 0
  br i1 %tobool361.not, label %if.end423, label %do.body363

do.body363:                                       ; preds = %if.end356
  %fs_info364 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call19, i32 0, i32 16
  %121 = ptrtoint ptr %fs_info364 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %fs_info364, align 4
  %fs_state365 = getelementptr inbounds %struct.btrfs_fs_info, ptr %122, i32 0, i32 149
  %call366 = call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state365) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call366)
  %tobool367.not = icmp eq i32 %call366, 0
  br i1 %tobool367.not, label %if.then368, label %do.body363.if.end420_crit_edge

do.body363.if.end420_crit_edge:                   ; preds = %do.body363
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end420

if.then368:                                       ; preds = %do.body363
  %123 = zext i32 %call360 to i64
  call void @__sanitizer_cov_trace_switch(i64 %123, ptr @__sancov_gen_cov_switch_values.89)
  switch i32 %call360, label %do.end387 [
    i32 -5, label %if.then368.do.body402_crit_edge
    i32 -30, label %if.then368.do.body402_crit_edge813
  ]

if.then368.do.body402_crit_edge813:               ; preds = %if.then368
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body402

if.then368.do.body402_crit_edge:                  ; preds = %if.then368
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body402

do.end387:                                        ; preds = %if.then368
  call void @__sanitizer_cov_trace_pc() #22
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 704, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %call360) #20
  br label %if.end420

do.body402:                                       ; preds = %if.then368.do.body402_crit_edge, %if.then368.do.body402_crit_edge813
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @create_subvol.__UNIQUE_ID_ddebug950, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@create_subvol, %if.then414)) #20
          to label %if.end420 [label %if.then414], !srcloc !182

if.then414:                                       ; preds = %do.body402
  call void @__sanitizer_cov_trace_pc() #22
  %124 = ptrtoint ptr %fs_info364 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %fs_info364, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %125, ptr noundef nonnull @.str.6, i32 noundef %call360) #24
  br label %if.end420

if.end420:                                        ; preds = %if.then414, %do.body402, %do.end387, %do.body363.if.end420_crit_edge
  call void @__btrfs_abort_transaction(ptr noundef %call19, ptr noundef nonnull @.str.39, i32 noundef 704, i32 noundef %call360) #24
  br label %fail

if.end423:                                        ; preds = %if.end356
  %126 = ptrtoint ptr %objectid to i32
  call void @__asan_load8_noabort(i32 %126)
  %127 = load i64, ptr %objectid, align 8
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %8, i32 0, i32 7
  %128 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %128, i32 8)
  %129 = load i64, ptr %root_key, align 1
  %location.i = getelementptr i8, ptr %dir, i32 -860
  %130 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %130, i32 8)
  %131 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %131)
  %tobool.not.i = icmp eq i64 %131, 0
  br i1 %tobool.not.i, label %if.end423.if.then.i_crit_edge, label %lor.lhs.false.i

if.end423.if.then.i_crit_edge:                    ; preds = %if.end423
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end423
  %type.i = getelementptr i8, ptr %dir, i32 -852
  %132 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %132)
  %133 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %133)
  %cmp.i796 = icmp eq i8 %133, -124
  br i1 %cmp.i796, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end423.if.then.i_crit_edge
  %i_ino.i = getelementptr i8, ptr %dir, i32 40
  %134 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %135 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %131, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  %136 = ptrtoint ptr %index to i32
  call void @__asan_load8_noabort(i32 %136)
  %137 = load i64, ptr %index, align 8
  %call427 = call i32 @btrfs_add_root_ref(ptr noundef %call19, i64 noundef %127, i64 noundef %129, i64 noundef %ino.0.i, i64 noundef %137, ptr noundef %name, i32 noundef %namelen) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call427)
  %tobool428.not = icmp eq i32 %call427, 0
  br i1 %tobool428.not, label %if.end490, label %do.body430

do.body430:                                       ; preds = %btrfs_ino.exit
  %fs_info431 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call19, i32 0, i32 16
  %138 = ptrtoint ptr %fs_info431 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load ptr, ptr %fs_info431, align 4
  %fs_state432 = getelementptr inbounds %struct.btrfs_fs_info, ptr %139, i32 0, i32 149
  %call433 = call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state432) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call433)
  %tobool434.not = icmp eq i32 %call433, 0
  br i1 %tobool434.not, label %if.then435, label %do.body430.if.end487_crit_edge

do.body430.if.end487_crit_edge:                   ; preds = %do.body430
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end487

if.then435:                                       ; preds = %do.body430
  %140 = zext i32 %call427 to i64
  call void @__sanitizer_cov_trace_switch(i64 %140, ptr @__sancov_gen_cov_switch_values.90)
  switch i32 %call427, label %do.end454 [
    i32 -5, label %if.then435.do.body469_crit_edge
    i32 -30, label %if.then435.do.body469_crit_edge814
  ]

if.then435.do.body469_crit_edge814:               ; preds = %if.then435
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body469

if.then435.do.body469_crit_edge:                  ; preds = %if.then435
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body469

do.end454:                                        ; preds = %if.then435
  call void @__sanitizer_cov_trace_pc() #22
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 711, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %call427) #20
  br label %if.end487

do.body469:                                       ; preds = %if.then435.do.body469_crit_edge, %if.then435.do.body469_crit_edge814
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @create_subvol.__UNIQUE_ID_ddebug951, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@create_subvol, %if.then481)) #20
          to label %if.end487 [label %if.then481], !srcloc !182

if.then481:                                       ; preds = %do.body469
  call void @__sanitizer_cov_trace_pc() #22
  %141 = ptrtoint ptr %fs_info431 to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %fs_info431, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %142, ptr noundef nonnull @.str.6, i32 noundef %call427) #24
  br label %if.end487

if.end487:                                        ; preds = %if.then481, %do.body469, %do.end454, %do.body430.if.end487_crit_edge
  call void @__btrfs_abort_transaction(ptr noundef %call19, ptr noundef nonnull @.str.39, i32 noundef 711, i32 noundef %call427) #24
  br label %fail

if.end490:                                        ; preds = %btrfs_ino.exit
  %143 = ptrtoint ptr %objectid to i32
  call void @__asan_load8_noabort(i32 %143)
  %144 = load i64, ptr %objectid, align 8
  %call493 = call i32 @btrfs_uuid_tree_add(ptr noundef %call19, ptr noundef %uuid, i8 noundef zeroext -5, i64 noundef %144) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call493)
  %tobool494.not = icmp eq i32 %call493, 0
  br i1 %tobool494.not, label %if.end490.fail_crit_edge, label %do.body496

if.end490.fail_crit_edge:                         ; preds = %if.end490
  call void @__sanitizer_cov_trace_pc() #22
  br label %fail

do.body496:                                       ; preds = %if.end490
  %fs_info497 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call19, i32 0, i32 16
  %145 = ptrtoint ptr %fs_info497 to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load ptr, ptr %fs_info497, align 4
  %fs_state498 = getelementptr inbounds %struct.btrfs_fs_info, ptr %146, i32 0, i32 149
  %call499 = call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state498) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call499)
  %tobool500.not = icmp eq i32 %call499, 0
  br i1 %tobool500.not, label %if.then501, label %do.body496.if.end553_crit_edge

do.body496.if.end553_crit_edge:                   ; preds = %do.body496
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end553

if.then501:                                       ; preds = %do.body496
  %147 = zext i32 %call493 to i64
  call void @__sanitizer_cov_trace_switch(i64 %147, ptr @__sancov_gen_cov_switch_values.91)
  switch i32 %call493, label %do.end520 [
    i32 -5, label %if.then501.do.body535_crit_edge
    i32 -30, label %if.then501.do.body535_crit_edge815
  ]

if.then501.do.body535_crit_edge815:               ; preds = %if.then501
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body535

if.then501.do.body535_crit_edge:                  ; preds = %if.then501
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body535

do.end520:                                        ; preds = %if.then501
  call void @__sanitizer_cov_trace_pc() #22
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 718, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %call493) #20
  br label %if.end553

do.body535:                                       ; preds = %if.then501.do.body535_crit_edge, %if.then501.do.body535_crit_edge815
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @create_subvol.__UNIQUE_ID_ddebug952, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@create_subvol, %if.then547)) #20
          to label %if.end553 [label %if.then547], !srcloc !182

if.then547:                                       ; preds = %do.body535
  call void @__sanitizer_cov_trace_pc() #22
  %148 = ptrtoint ptr %fs_info497 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %fs_info497, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %149, ptr noundef nonnull @.str.6, i32 noundef %call493) #24
  br label %if.end553

if.end553:                                        ; preds = %if.then547, %do.body535, %do.end520, %do.body496.if.end553_crit_edge
  call void @__btrfs_abort_transaction(ptr noundef %call19, ptr noundef nonnull @.str.39, i32 noundef 718, i32 noundef %call493) #24
  br label %fail

fail:                                             ; preds = %if.end553, %if.end490.fail_crit_edge, %if.end487, %if.end420, %if.end353, %if.end288, %if.end223, %if.end159, %if.end95, %if.then45, %if.then31, %if.end23.fail_crit_edge
  %ret.0 = phi i32 [ %call25, %if.end23.fail_crit_edge ], [ %28, %if.then31 ], [ %call43, %if.then45 ], [ %90, %if.end95 ], [ %call99, %if.end159 ], [ %call163, %if.end223 ], [ %call228, %if.end288 ], [ %call293, %if.end353 ], [ %call360, %if.end420 ], [ %call427, %if.end487 ], [ %call493, %if.end553 ], [ 0, %if.end490.fail_crit_edge ]
  call void @kfree(ptr noundef nonnull %call7.i.i) #20
  %150 = ptrtoint ptr %block_rsv24 to i32
  call void @__asan_store4_noabort(i32 %150)
  store ptr null, ptr %block_rsv24, align 8
  %151 = ptrtoint ptr %bytes_reserved to i32
  call void @__asan_store8_noabort(i32 %151)
  store i64 0, ptr %bytes_reserved, align 8
  call void @btrfs_subvolume_release_metadata(ptr noundef %8, ptr noundef nonnull %block_rsv) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool559.not = icmp eq i32 %ret.0, 0
  br i1 %tobool559.not, label %if.end564, label %if.end564.thread

if.end564.thread:                                 ; preds = %fail
  call void @__sanitizer_cov_trace_pc() #22
  %call561 = call i32 @btrfs_end_transaction(ptr noundef %call19) #20
  br label %cleanup

if.end564:                                        ; preds = %fail
  %call563 = call i32 @btrfs_commit_transaction(ptr noundef %call19) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call563)
  %tobool565.not = icmp eq i32 %call563, 0
  br i1 %tobool565.not, label %if.then566, label %if.end564.cleanup_crit_edge

if.end564.cleanup_crit_edge:                      ; preds = %if.end564
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then566:                                       ; preds = %if.end564
  %call567 = call ptr @btrfs_lookup_dentry(ptr noundef %dir, ptr noundef %dentry) #20
  %cmp.i797 = icmp ugt ptr %call567, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i797, label %if.then569, label %if.end571

if.then569:                                       ; preds = %if.then566
  call void @__sanitizer_cov_trace_pc() #22
  %152 = ptrtoint ptr %call567 to i32
  br label %cleanup

if.end571:                                        ; preds = %if.then566
  call void @__sanitizer_cov_trace_pc() #22
  call void @d_instantiate(ptr noundef %dentry, ptr noundef %call567) #20
  br label %cleanup

fail_free:                                        ; preds = %if.then21, %if.end14.fail_free_crit_edge, %if.end10.fail_free_crit_edge, %if.end7.fail_free_crit_edge, %if.end.fail_free_crit_edge
  %ret.2 = phi i32 [ %call4, %if.end.fail_free_crit_edge ], [ %call8, %if.end7.fail_free_crit_edge ], [ %call15, %if.end14.fail_free_crit_edge ], [ %19, %if.then21 ], [ -28, %if.end10.fail_free_crit_edge ]
  %153 = ptrtoint ptr %anon_dev to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %anon_dev, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %154)
  %tobool573.not = icmp eq i32 %154, 0
  br i1 %tobool573.not, label %fail_free.if.end575_crit_edge, label %if.then574

fail_free.if.end575_crit_edge:                    ; preds = %fail_free
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end575

if.then574:                                       ; preds = %fail_free
  call void @__sanitizer_cov_trace_pc() #22
  call void @free_anon_bdev(i32 noundef %154) #20
  br label %if.end575

if.end575:                                        ; preds = %if.then574, %fail_free.if.end575_crit_edge
  call void @kfree(ptr noundef nonnull %call7.i.i) #20
  br label %cleanup

cleanup:                                          ; preds = %if.end575, %if.end571, %if.then569, %if.end564.cleanup_crit_edge, %if.end564.thread, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.2, %if.end575 ], [ %152, %if.then569 ], [ -12, %entry.cleanup_crit_edge ], [ 0, %if.end571 ], [ %call563, %if.end564.cleanup_crit_edge ], [ %ret.0, %if.end564.thread ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %index) #20
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %objectid) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %anon_dev) #20
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %cur_time) #20
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %block_rsv) #20
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key) #20
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @fsnotify_mkdir(ptr noundef %dir, ptr noundef %dentry) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %i_sb.i.i = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb.i.i, align 4
  %s_fsnotify_connectors.i.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 48
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %s_fsnotify_connectors.i.i, i32 noundef 4) #20
  %2 = ptrtoint ptr %s_fsnotify_connectors.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %s_fsnotify_connectors.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.i.i = icmp eq i32 %3, 0
  br i1 %cmp.i.i, label %entry.fsnotify_dirent.exit_crit_edge, label %if.end.i.i

entry.fsnotify_dirent.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %fsnotify_dirent.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %d_name.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 4
  %call1.i.i = tail call i32 @fsnotify(i32 noundef 1073742080, ptr noundef %dentry, i32 noundef 3, ptr noundef %dir, ptr noundef %d_name.i, ptr noundef null, i32 noundef 0) #20
  br label %fsnotify_dirent.exit

fsnotify_dirent.exit:                             ; preds = %if.end.i.i, %entry.fsnotify_dirent.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dput(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @inode_permission(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @from_kuid(ptr noundef, [1 x i32]) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @make_kuid(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @from_kgid(ptr noundef, [1 x i32]) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @make_kgid(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @get_anon_bdev(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_alloc_path() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_init_block_rsv(ptr noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_subvolume_reserve_metadata(ptr noundef, ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_orphan_cleanup(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_lookup_dentry(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @d_instantiate(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_put_root(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_subvolume_release_metadata(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_anon_bdev(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_free_path(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_get_free_objectid(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_qgroup_inherit(ptr noundef, i64 noundef, i64 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_alloc_tree_block(ptr noundef, ptr noundef, i64 noundef, i64 noundef, ptr noundef, i32 noundef, i64 noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_mark_buffer_dirty(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @generate_random_guid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_tree_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_insert_root(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_tree_lock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_clean_tree_block(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_free_tree_block(ptr noundef, i64 noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_extent_buffer(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_get_new_fs_root(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_record_root_in_trans(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_create_subvol_root(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_set_inode_index(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_insert_dir_item(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef, i8 noundef zeroext, i64 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @btrfs_i_size_write(ptr noundef %inode, i64 noundef %size) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %0 = tail call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %3, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !226
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %4 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i.i, label %entry.i_size_write.exit_crit_edge, label %land.lhs.true.i.i

entry.i_size_write.exit_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %i_size_write.exit

land.lhs.true.i.i:                                ; preds = %entry
  %5 = tail call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %8, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !227
  %9 = tail call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i.i, align 4
  %add.i28.i = add i32 %14, ptrtoint (ptr @lockdep_recursion to i32)
  %15 = inttoptr i32 %add.i28.i to ptr
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %15, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !228
  %18 = tail call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i7.i.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i7.i.i to ptr
  %preempt_count.i.i8.i.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %preempt_count.i.i8.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %preempt_count.i.i8.i.i, align 4
  %sub.i.i.i = add i32 %21, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i8.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool20.not.i.i = icmp eq i32 %17, 0
  br i1 %tobool20.not.i.i, label %land.rhs.i.i, label %land.lhs.true.i.i.i_size_write.exit_crit_edge

land.lhs.true.i.i.i_size_write.exit_crit_edge:    ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %i_size_write.exit

land.rhs.i.i:                                     ; preds = %land.lhs.true.i.i
  %22 = tail call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i29.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i29.i to ptr
  %preempt_count.i.i30.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i30.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i30.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp.i.i = icmp eq i32 %25, 0
  br i1 %cmp.i.i, label %land.rhs22.i.i, label %land.rhs.i.i.i_size_write.exit_crit_edge

land.rhs.i.i.i_size_write.exit_crit_edge:         ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %i_size_write.exit

land.rhs22.i.i:                                   ; preds = %land.rhs.i.i
  %26 = tail call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i9.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i9.i.i to ptr
  %preempt_count.i.i10.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i10.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i10.i.i, align 4
  %add.i11.i.i = add i32 %29, 1
  store volatile i32 %add.i11.i.i, ptr %preempt_count.i.i10.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !229
  %30 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %cpu.i.i, align 4
  %arrayidx46.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %31
  %32 = ptrtoint ptr %arrayidx46.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %arrayidx46.i.i, align 4
  %add47.i.i = add i32 %33, ptrtoint (ptr @hardirqs_enabled to i32)
  %34 = inttoptr i32 %add47.i.i to ptr
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %34, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !230
  %37 = tail call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i12.i.i = and i32 %37, -16384
  %38 = inttoptr i32 %and.i.i.i12.i.i to ptr
  %preempt_count.i.i13.i.i = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %preempt_count.i.i13.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %preempt_count.i.i13.i.i, align 4
  %sub.i14.i.i = add i32 %40, -1
  store volatile i32 %sub.i14.i.i, ptr %preempt_count.i.i13.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool54.not.i.i = icmp eq i32 %36, 0
  br i1 %tobool54.not.i.i, label %land.rhs22.i.i.i_size_write.exit_crit_edge, label %land.rhs58.i.i

land.rhs22.i.i.i_size_write.exit_crit_edge:       ; preds = %land.rhs22.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %i_size_write.exit

land.rhs58.i.i:                                   ; preds = %land.rhs22.i.i
  %.b1.i.i = load i1, ptr @__seqprop_assert.__already_done, align 1
  br i1 %.b1.i.i, label %land.rhs58.i.i.i_size_write.exit_crit_edge, label %if.then.i.i, !prof !184

land.rhs58.i.i.i_size_write.exit_crit_edge:       ; preds = %land.rhs58.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %i_size_write.exit

if.then.i.i:                                      ; preds = %land.rhs58.i.i
  call void @__sanitizer_cov_trace_pc() #22
  store i1 true, ptr @__seqprop_assert.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.40, i32 noundef 271, i32 noundef 9, ptr noundef null) #20
  br label %i_size_write.exit

i_size_write.exit:                                ; preds = %if.then.i.i, %land.rhs58.i.i.i_size_write.exit_crit_edge, %land.rhs22.i.i.i_size_write.exit_crit_edge, %land.rhs.i.i.i_size_write.exit_crit_edge, %land.lhs.true.i.i.i_size_write.exit_crit_edge, %entry.i_size_write.exit_crit_edge
  %i_size_seqcount.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 37, i32 23
  %41 = ptrtoint ptr %i_size_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %i_size_seqcount.i, align 4
  %inc.i.i.i.i = add i32 %42, 1
  store i32 %inc.i.i.i.i, ptr %i_size_seqcount.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !231
  %dep_map.i.i.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 37, i32 23, i32 1
  %43 = tail call ptr @llvm.returnaddress(i32 0) #20
  %44 = ptrtoint ptr %43 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.i.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 0, i32 noundef 1, ptr noundef null, i32 noundef %44) #20
  %i_size8.i = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 37, i32 14
  %45 = ptrtoint ptr %i_size8.i to i32
  call void @__asan_store8_noabort(i32 %45)
  store i64 %size, ptr %i_size8.i, align 8
  tail call void @lock_release(ptr noundef %dep_map.i.i.i, i32 noundef %44) #20
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !232
  %46 = ptrtoint ptr %i_size_seqcount.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %i_size_seqcount.i, align 4
  %inc.i.i.i = add i32 %47, 1
  store i32 %inc.i.i.i, ptr %i_size_seqcount.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #20, !srcloc !233
  %48 = tail call i32 @llvm.read_register.i32(metadata !169) #20
  %and.i.i.i26.i = and i32 %48, -16384
  %49 = inttoptr i32 %and.i.i.i26.i to ptr
  %preempt_count.i.i27.i = getelementptr inbounds %struct.thread_info, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %preempt_count.i.i27.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile i32, ptr %preempt_count.i.i27.i, align 4
  %sub.i.i = add i32 %51, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i27.i, align 4
  %disk_i_size = getelementptr inbounds %struct.btrfs_inode, ptr %inode, i32 0, i32 21
  %52 = ptrtoint ptr %disk_i_size to i32
  call void @__asan_store8_noabort(i32 %52)
  store i64 %size, ptr %disk_i_size, align 8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_add_root_ref(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_uuid_tree_add(ptr noundef, ptr noundef, i8 noundef zeroext, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @fsnotify(i32 noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__fdget(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_drew_read_lock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_start_delalloc_snapshot(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @btrfs_wait_ordered_extents(ptr noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_drew_read_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @fput(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_get_dentry(ptr noundef, i64 noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_get_parent(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_get_subvol_name_from_objectid(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_may_delete(ptr noundef %mnt_userns, ptr noundef %dir, ptr noundef readonly %victim) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %victim, i32 0, i32 5
  %0 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_inode.i, align 8
  %cmp.i = icmp eq ptr %1, null
  br i1 %cmp.i, label %entry.cleanup_crit_edge, label %do.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

do.body:                                          ; preds = %entry
  %d_parent = getelementptr inbounds %struct.dentry, ptr %victim, i32 0, i32 3
  %2 = ptrtoint ptr %d_parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %d_parent, align 8
  %d_inode.i1 = getelementptr inbounds %struct.dentry, ptr %3, i32 0, i32 5
  %4 = ptrtoint ptr %d_inode.i1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %d_inode.i1, align 8
  %cmp.not = icmp eq ptr %5, %dir
  br i1 %cmp.not, label %do.end10, label %do.body4, !prof !184

do.body4:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/btrfs/ioctl.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 875, 0\0A.popsection", ""() #20, !srcloc !234
  unreachable

do.end10:                                         ; preds = %do.body
  %call11 = tail call i32 @inode_permission(ptr noundef %mnt_userns, ptr noundef %dir, i32 noundef 3) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %if.end14, label %do.end10.cleanup_crit_edge

do.end10.cleanup_crit_edge:                       ; preds = %do.end10
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end14:                                         ; preds = %do.end10
  %i_flags = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 4
  %6 = ptrtoint ptr %i_flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %i_flags, align 4
  %and = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool15.not = icmp eq i32 %and, 0
  br i1 %tobool15.not, label %if.end17, label %if.end14.cleanup_crit_edge

if.end14.cleanup_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end17:                                         ; preds = %if.end14
  %8 = ptrtoint ptr %dir to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %dir, align 8
  %10 = and i16 %9, 512
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %10)
  %tobool.not.i = icmp eq i16 %10, 0
  br i1 %tobool.not.i, label %if.end17.lor.lhs.false_crit_edge, label %check_sticky.exit

if.end17.lor.lhs.false_crit_edge:                 ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false

check_sticky.exit:                                ; preds = %if.end17
  %11 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %d_inode.i, align 8
  %call.i = tail call i32 @__check_sticky(ptr noundef %mnt_userns, ptr noundef %dir, ptr noundef %12) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool20.not = icmp eq i32 %call.i, 0
  br i1 %tobool20.not, label %check_sticky.exit.lor.lhs.false_crit_edge, label %check_sticky.exit.cleanup_crit_edge

check_sticky.exit.cleanup_crit_edge:              ; preds = %check_sticky.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

check_sticky.exit.lor.lhs.false_crit_edge:        ; preds = %check_sticky.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %lor.lhs.false

lor.lhs.false:                                    ; preds = %check_sticky.exit.lor.lhs.false_crit_edge, %if.end17.lor.lhs.false_crit_edge
  %13 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %d_inode.i, align 8
  %i_flags22 = getelementptr inbounds %struct.inode, ptr %14, i32 0, i32 4
  %15 = ptrtoint ptr %i_flags22 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %i_flags22, align 4
  %17 = and i32 %16, 268
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %if.then38, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then38:                                        ; preds = %lor.lhs.false
  %19 = ptrtoint ptr %victim to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %victim, align 8
  %21 = and i32 %20, 6291456
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %21)
  %22 = icmp eq i32 %21, 2097152
  br i1 %22, label %if.end41, label %if.then38.cleanup_crit_edge

if.then38.cleanup_crit_edge:                      ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end41:                                         ; preds = %if.then38
  %23 = ptrtoint ptr %d_parent to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %d_parent, align 8
  %cmp43 = icmp eq ptr %24, %victim
  br i1 %cmp43, label %if.end41.cleanup_crit_edge, label %if.end49

if.end41.cleanup_crit_edge:                       ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end49:                                         ; preds = %if.end41
  %25 = ptrtoint ptr %i_flags to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %i_flags, align 4
  %and51 = and i32 %26, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and51)
  %tobool52.not = icmp eq i32 %and51, 0
  br i1 %tobool52.not, label %if.end54, label %if.end49.cleanup_crit_edge

if.end49.cleanup_crit_edge:                       ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end54:                                         ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #22
  %and55 = and i32 %20, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and55)
  %tobool56.not = icmp eq i32 %and55, 0
  %. = select i1 %tobool56.not, i32 0, i32 -16
  br label %cleanup

cleanup:                                          ; preds = %if.end54, %if.end49.cleanup_crit_edge, %if.end41.cleanup_crit_edge, %if.then38.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %check_sticky.exit.cleanup_crit_edge, %if.end14.cleanup_crit_edge, %do.end10.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -2, %entry.cleanup_crit_edge ], [ %call11, %do.end10.cleanup_crit_edge ], [ -1, %if.end14.cleanup_crit_edge ], [ -1, %lor.lhs.false.cleanup_crit_edge ], [ -1, %check_sticky.exit.cleanup_crit_edge ], [ -20, %if.then38.cleanup_crit_edge ], [ -16, %if.end41.cleanup_crit_edge ], [ -2, %if.end49.cleanup_crit_edge ], [ %., %if.end54 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_delete_subvolume(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @d_delete_notify(ptr noundef %dir, ptr noundef %dentry) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %0 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_inode.i, align 8
  tail call void @ihold(ptr noundef %1) #20
  tail call void @d_delete(ptr noundef %dentry) #20
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %1, align 8
  %i_sb.i.i = getelementptr inbounds %struct.inode, ptr %dir, i32 0, i32 8
  %4 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %i_sb.i.i, align 4
  %s_fsnotify_connectors.i.i = getelementptr inbounds %struct.super_block, ptr %5, i32 0, i32 48
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %s_fsnotify_connectors.i.i, i32 noundef 4) #20
  %6 = ptrtoint ptr %s_fsnotify_connectors.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %s_fsnotify_connectors.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp.i.i = icmp eq i32 %7, 0
  br i1 %cmp.i.i, label %entry.fsnotify_delete.exit_crit_edge, label %if.end.i.i

entry.fsnotify_delete.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %fsnotify_delete.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %d_name.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 4
  %8 = and i16 %3, -4096
  call void @__sanitizer_cov_trace_const_cmp2(i16 16384, i16 %8)
  %cmp.i = icmp eq i16 %8, 16384
  %spec.select.i = select i1 %cmp.i, i32 1073742336, i32 512
  %call1.i.i = tail call i32 @fsnotify(i32 noundef %spec.select.i, ptr noundef %1, i32 noundef 2, ptr noundef %dir, ptr noundef %d_name.i, ptr noundef null, i32 noundef 0) #20
  br label %fsnotify_delete.exit

fsnotify_delete.exit:                             ; preds = %if.end.i.i, %entry.fsnotify_delete.exit_crit_edge
  tail call void @iput(ptr noundef %1) #20
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local ptr @strrchr(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__check_sticky(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @ihold(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @d_delete(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @iput(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_update_root(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_get_fs_root(ptr noundef, i64 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_lookup_dir_item(ptr noundef, ptr noundef, ptr noundef, i64 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @write_extent_buffer(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_defrag_root(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @exclop_start_or_cancel_reloc(ptr noundef %fs_info, i32 noundef %type, i1 noundef zeroext %cancel) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %super_lock.i18 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 42
  tail call void @_raw_spin_lock(ptr noundef %super_lock.i18) #20
  %exclusive_operation.i19 = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 175
  %0 = ptrtoint ptr %exclusive_operation.i19 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %exclusive_operation.i19, align 4
  br i1 %cancel, label %if.end2, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp.i = icmp eq i32 %1, 0
  br i1 %cmp.i, label %if.then.i, label %if.then.btrfs_exclop_start.exit_crit_edge

if.then.btrfs_exclop_start.exit_crit_edge:        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  br label %btrfs_exclop_start.exit

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %2 = ptrtoint ptr %exclusive_operation.i19 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %type, ptr %exclusive_operation.i19, align 4
  br label %btrfs_exclop_start.exit

btrfs_exclop_start.exit:                          ; preds = %if.then.i, %if.then.btrfs_exclop_start.exit_crit_edge
  %. = phi i32 [ 8, %if.then.btrfs_exclop_start.exit_crit_edge ], [ 0, %if.then.i ]
  tail call void @_raw_spin_unlock(ptr noundef %super_lock.i18) #20
  br label %return

if.end2:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %type)
  %cmp.i20 = icmp eq i32 %1, %type
  br i1 %cmp.i20, label %if.end2.if.then4_crit_edge, label %lor.lhs.false.i

if.end2.if.then4_crit_edge:                       ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then4

lor.lhs.false.i:                                  ; preds = %if.end2
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp2.i = icmp eq i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %type)
  %cmp3.i = icmp eq i32 %type, 3
  %or.cond.i = and i1 %cmp3.i, %cmp2.i
  br i1 %or.cond.i, label %lor.lhs.false.i.if.then4_crit_edge, label %btrfs_exclop_start_try_lock.exit

lor.lhs.false.i.if.then4_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then4

btrfs_exclop_start_try_lock.exit:                 ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @_raw_spin_unlock(ptr noundef %super_lock.i18) #20
  br label %return

if.then4:                                         ; preds = %lor.lhs.false.i.if.then4_crit_edge, %if.end2.if.then4_crit_edge
  %reloc_cancel_req = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 119
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %reloc_cancel_req, i32 noundef 4) #20
  tail call void @llvm.prefetch.p0(ptr %reloc_cancel_req, i32 1, i32 3, i32 1) #20
  %3 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %reloc_cancel_req, ptr %reloc_cancel_req, i32 1, ptr elementtype(i32) %reloc_cancel_req) #20, !srcloc !224
  tail call void @_raw_spin_unlock(ptr noundef %super_lock.i18) #20
  %flags = getelementptr inbounds %struct.btrfs_fs_info, ptr %fs_info, i32 0, i32 1
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %flags, align 4
  %6 = and i32 %5, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool6.not = icmp eq i32 %6, 0
  br i1 %tobool6.not, label %if.then4.return_crit_edge, label %if.then7

if.then4.return_crit_edge:                        ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.then7:                                         ; preds = %if.then4
  tail call void @__might_sleep(ptr noundef nonnull @.str.53, i32 noundef 73) #20
  %7 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %flags, align 4
  %9 = and i32 %8, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not.i = icmp eq i32 %9, 0
  br i1 %tobool.not.i, label %if.then7.return_crit_edge, label %if.end.i22

if.then7.return_crit_edge:                        ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #22
  br label %return

if.end.i22:                                       ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #22
  %call3.i = tail call i32 @out_of_line_wait_on_bit(ptr noundef %flags, i32 noundef 13, ptr noundef nonnull @bit_wait, i32 noundef 1) #20
  br label %return

return:                                           ; preds = %if.end.i22, %if.then7.return_crit_edge, %if.then4.return_crit_edge, %btrfs_exclop_start_try_lock.exit, %btrfs_exclop_start.exit
  %retval.0 = phi i32 [ %., %btrfs_exclop_start.exit ], [ -125, %if.then4.return_crit_edge ], [ -107, %btrfs_exclop_start_try_lock.exit ], [ -125, %if.then7.return_crit_edge ], [ -125, %if.end.i22 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kstrtoull(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_find_device(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @memparse(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i64 @btrfs_device_get_total_bytes(ptr noundef %dev) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  %data_seqcount = getelementptr inbounds %struct.btrfs_device, ptr %dev, i32 0, i32 12
  %total_bytes = getelementptr inbounds %struct.btrfs_device, ptr %dev, i32 0, i32 14
  br label %do.body

do.body:                                          ; preds = %while.end.do.body_crit_edge, %entry
  tail call fastcc void @seqcount_lockdep_reader_access(ptr noundef %data_seqcount)
  %0 = ptrtoint ptr %data_seqcount to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %data_seqcount, align 4
  %and28 = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28)
  %tobool.not29 = icmp eq i32 %and28, 0
  br i1 %tobool.not29, label %do.body.while.end_crit_edge, label %do.body.do.end_crit_edge

do.body.do.end_crit_edge:                         ; preds = %do.body
  br label %do.end

do.body.while.end_crit_edge:                      ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

do.end:                                           ; preds = %do.end.do.end_crit_edge, %do.body.do.end_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !204
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #20, !srcloc !205
  %2 = ptrtoint ptr %data_seqcount to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %data_seqcount, align 4
  %and = and i32 %3, 1
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.end.while.end_crit_edge, label %do.end.do.end_crit_edge

do.end.do.end_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.end

do.end.while.end_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.end

while.end:                                        ; preds = %do.end.while.end_crit_edge, %do.body.while.end_crit_edge
  %.lcssa = phi i32 [ %1, %do.body.while.end_crit_edge ], [ %3, %do.end.while.end_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !206
  %4 = ptrtoint ptr %total_bytes to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %total_bytes, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #20, !srcloc !189
  %6 = ptrtoint ptr %data_seqcount to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %data_seqcount, align 4
  %cmp.i.i.not = icmp eq i32 %7, %.lcssa
  br i1 %cmp.i.i.not, label %do.end23, label %while.end.do.body_crit_edge

while.end.do.body_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body

do.end23:                                         ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #22
  ret i64 %5
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_grow_device(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_shrink_device(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @out_of_line_wait_on_bit(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bit_wait(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_init_new_device(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_get_dev_args_from_path(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_rm_device(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @blkdev_put(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_put_dev_args_from_path(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_super_csum_size(ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.bswap.i16(i16) #14

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strncpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly, i32 noundef) local_unnamed_addr #15

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_balance(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @search_ioctl(ptr nocapture noundef readonly %inode, ptr nocapture noundef %sk, ptr nocapture noundef %buf_size, ptr noundef %ubuf) unnamed_addr #8 align 64 {
entry:
  %old.i.i.i.i = alloca i32, align 4
  %key = alloca %struct.btrfs_key, align 8
  %num_found = alloca i32, align 4
  %sk_offset = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 33
  %2 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s_fs_info.i, align 16
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key) #20
  %4 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %5 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %num_found) #20
  %6 = ptrtoint ptr %num_found to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 0, ptr %num_found, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %sk_offset) #20
  %7 = ptrtoint ptr %sk_offset to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %sk_offset, align 4
  %8 = ptrtoint ptr %buf_size to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %buf_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %9)
  %cmp = icmp ult i32 %9, 32
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %10 = ptrtoint ptr %buf_size to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 32, ptr %buf_size, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call ptr @btrfs_alloc_path() #20
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %11 = ptrtoint ptr %sk to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %sk, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %12)
  %cmp4 = icmp eq i64 %12, 0
  br i1 %cmp4, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.end3
  %add.ptr.i = getelementptr i8, ptr %inode, i32 -864
  %13 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %add.ptr.i, align 8
  %tobool.not.i = icmp eq ptr %14, null
  br i1 %tobool.not.i, label %if.then5.if.end15_crit_edge, label %if.end.i

if.then5.if.end15_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15

if.end.i:                                         ; preds = %if.then5
  %refs.i = getelementptr inbounds %struct.btrfs_root, ptr %14, i32 0, i32 38
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %old.i.i.i.i) #20
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %refs.i, i32 noundef 4) #20
  %15 = ptrtoint ptr %refs.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %refs.i, align 4
  br label %do.body.i.i.i.i

do.body.i.i.i.i:                                  ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge, %if.end.i
  %17 = phi i32 [ %16, %if.end.i ], [ %asmresult3.i.i.i.i.i.i.i, %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge ]
  %18 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %old.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.not.i.i.i.i = icmp eq i32 %17, 0
  br i1 %tobool.not.i.i.i.i, label %do.body.i.i.i.i.if.end4.i.i.i.i_crit_edge, label %do.cond.i.i.i.i

do.body.i.i.i.i.if.end4.i.i.i.i_crit_edge:        ; preds = %do.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end4.i.i.i.i

do.cond.i.i.i.i:                                  ; preds = %do.body.i.i.i.i
  %add.i.i.i.i = add i32 %17, 1
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refs.i, i32 noundef 4) #20
  %call.i3.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %old.i.i.i.i, i32 noundef 4) #20
  %19 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %old.i.i.i.i, align 4
  call void @llvm.prefetch.p0(ptr %refs.i, i32 1, i32 3, i32 1) #20
  br label %do.body.i.i.i.i.i.i.i

do.body.i.i.i.i.i.i.i:                            ; preds = %do.body.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i_crit_edge, %do.cond.i.i.i.i
  %21 = call { i32, i32 } asm sideeffect "@ atomic_cmpxchg\0Aldrex\09$1, [$3]\0Amov\09$0, #0\0Ateq\09$1, $4\0Astrexeq $0, $5, [$3]\0A", "=&r,=&r,=*Qo,r,Ir,r,*Qo,~{cc}"(ptr elementtype(i32) %refs.i, ptr %refs.i, i32 %20, i32 %add.i.i.i.i, ptr elementtype(i32) %refs.i) #20, !srcloc !235
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32 } %21, 0
  %tobool.not.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i, label %do.body.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i_crit_edge

do.body.i.i.i.i.i.i.i.do.body.i.i.i.i.i.i.i_crit_edge: ; preds = %do.body.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i.i.i.i.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i:     ; preds = %do.body.i.i.i.i.i.i.i
  %asmresult3.i.i.i.i.i.i.i = extractvalue { i32, i32 } %21, 1
  %cmp.not.i.i.i.i.i.i = icmp eq i32 %asmresult3.i.i.i.i.i.i.i, %20
  br i1 %cmp.not.i.i.i.i.i.i, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.if.end4.i.i.i.i_crit_edge, label %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge, !prof !184

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.do.body.i.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body.i.i.i.i

arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.if.end4.i.i.i.i_crit_edge: ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end4.i.i.i.i

if.end4.i.i.i.i:                                  ; preds = %arch_atomic_cmpxchg_relaxed.exit.i.i.i.i.i.i.if.end4.i.i.i.i_crit_edge, %do.body.i.i.i.i.if.end4.i.i.i.i_crit_edge
  %22 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %old.i.i.i.i, align 4
  %add5.i.i.i.i = add i32 %23, 1
  %24 = or i32 %add5.i.i.i.i, %23
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %24)
  %.not.i.i.i.i = icmp sgt i32 %24, -1
  br i1 %.not.i.i.i.i, label %if.end4.i.i.i.i.refcount_inc_not_zero.exit.i_crit_edge, label %if.then10.i.i.i.i, !prof !184

if.end4.i.i.i.i.refcount_inc_not_zero.exit.i_crit_edge: ; preds = %if.end4.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %refcount_inc_not_zero.exit.i

if.then10.i.i.i.i:                                ; preds = %if.end4.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #22
  call void @refcount_warn_saturate(ptr noundef %refs.i, i32 noundef 0) #20
  br label %refcount_inc_not_zero.exit.i

refcount_inc_not_zero.exit.i:                     ; preds = %if.then10.i.i.i.i, %if.end4.i.i.i.i.refcount_inc_not_zero.exit.i_crit_edge
  %25 = ptrtoint ptr %old.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %old.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool12.i.i.i.not.i = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %old.i.i.i.i) #20
  %root..i = select i1 %tobool12.i.i.i.not.i, ptr null, ptr %14
  br label %if.end15

if.else:                                          ; preds = %if.end3
  %call10 = tail call ptr @btrfs_get_fs_root(ptr noundef %3, i64 noundef %12, i1 noundef zeroext true) #20
  %cmp.i = icmp ugt ptr %call10, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then12, label %if.else.if.end15_crit_edge

if.else.if.end15_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end15

if.then12:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  tail call void @btrfs_free_path(ptr noundef nonnull %call1) #20
  %27 = ptrtoint ptr %call10 to i32
  br label %cleanup

if.end15:                                         ; preds = %if.else.if.end15_crit_edge, %refcount_inc_not_zero.exit.i, %if.then5.if.end15_crit_edge
  %root.0 = phi ptr [ %call10, %if.else.if.end15_crit_edge ], [ null, %if.then5.if.end15_crit_edge ], [ %root..i, %refcount_inc_not_zero.exit.i ]
  %min_objectid = getelementptr inbounds %struct.btrfs_ioctl_search_key, ptr %sk, i32 0, i32 1
  %28 = ptrtoint ptr %min_objectid to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %min_objectid, align 8
  %30 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %29, ptr %key, align 8
  %min_type = getelementptr inbounds %struct.btrfs_ioctl_search_key, ptr %sk, i32 0, i32 7
  %31 = ptrtoint ptr %min_type to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %min_type, align 8
  %conv = trunc i32 %32 to i8
  %33 = ptrtoint ptr %4 to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 %conv, ptr %4, align 8
  %min_offset = getelementptr inbounds %struct.btrfs_ioctl_search_key, ptr %sk, i32 0, i32 3
  %34 = ptrtoint ptr %min_offset to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %min_offset, align 8
  %36 = ptrtoint ptr %5 to i32
  call void @__asan_storeN_noabort(i32 %36, i32 8)
  store i64 %35, ptr %5, align 1
  %min_transid = getelementptr inbounds %struct.btrfs_ioctl_search_key, ptr %sk, i32 0, i32 5
  br label %while.cond

while.cond:                                       ; preds = %if.end28.while.cond_crit_edge, %if.end15
  %37 = ptrtoint ptr %sk_offset to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %sk_offset, align 4
  %add.ptr = getelementptr i8, ptr %ubuf, i32 %38
  %39 = ptrtoint ptr %buf_size to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %buf_size, align 4
  %sub = sub i32 %40, %38
  %call16 = call i32 @fault_in_writeable(ptr noundef %add.ptr, i32 noundef %sub) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %if.end19, label %while.cond.err_crit_edge

while.cond.err_crit_edge:                         ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #22
  br label %err

if.end19:                                         ; preds = %while.cond
  %41 = ptrtoint ptr %min_transid to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %min_transid, align 8
  %call20 = call i32 @btrfs_search_forward(ptr noundef %root.0, ptr noundef nonnull %key, ptr noundef nonnull %call1, i64 noundef %42) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20)
  %cmp21.not = icmp eq i32 %call20, 0
  br i1 %cmp21.not, label %if.end28, label %if.end19.err_crit_edge

if.end19.err_crit_edge:                           ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #22
  br label %err

if.end28:                                         ; preds = %if.end19
  %call29 = call fastcc i32 @copy_to_sk(ptr noundef nonnull %call1, ptr noundef nonnull %key, ptr noundef %sk, ptr noundef %buf_size, ptr noundef %ubuf, ptr noundef nonnull %sk_offset, ptr noundef nonnull %num_found)
  call void @btrfs_release_path(ptr noundef nonnull %call1) #20
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %if.end28.while.cond_crit_edge, label %if.end28.err_crit_edge

if.end28.err_crit_edge:                           ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #22
  br label %err

if.end28.while.cond_crit_edge:                    ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #22
  br label %while.cond

err:                                              ; preds = %if.end28.err_crit_edge, %if.end19.err_crit_edge, %while.cond.err_crit_edge
  %ret.0.sink = phi i32 [ %call20, %if.end19.err_crit_edge ], [ -14, %while.cond.err_crit_edge ], [ %call29, %if.end28.err_crit_edge ]
  %43 = call i32 @llvm.smin.i32(i32 %ret.0.sink, i32 0)
  %44 = ptrtoint ptr %num_found to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %num_found, align 4
  %nr_items = getelementptr inbounds %struct.btrfs_ioctl_search_key, ptr %sk, i32 0, i32 9
  %46 = ptrtoint ptr %nr_items to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %nr_items, align 8
  call void @btrfs_put_root(ptr noundef %root.0) #20
  call void @btrfs_free_path(ptr noundef nonnull %call1) #20
  br label %cleanup

cleanup:                                          ; preds = %err, %if.then12, %if.end.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ -75, %if.then ], [ %43, %err ], [ %27, %if.then12 ], [ -12, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %sk_offset) #20
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %num_found) #20
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key) #20
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @fault_in_writeable(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @copy_to_sk(ptr nocapture noundef readonly %path, ptr noundef %key, ptr nocapture noundef readonly %sk, ptr nocapture noundef %buf_size, ptr noundef %ubuf, ptr nocapture noundef %sk_offset, ptr nocapture noundef %num_found) unnamed_addr #8 align 64 {
entry:
  %disk_key.i = alloca %struct.btrfs_disk_key, align 8
  %sh = alloca %struct.btrfs_ioctl_search_header, align 8
  %test = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %sh) #20
  %0 = getelementptr inbounds %struct.btrfs_ioctl_search_header, ptr %sh, i32 0, i32 1
  %1 = getelementptr inbounds %struct.btrfs_ioctl_search_header, ptr %sh, i32 0, i32 2
  %2 = getelementptr inbounds %struct.btrfs_ioctl_search_header, ptr %sh, i32 0, i32 3
  %3 = getelementptr inbounds %struct.btrfs_ioctl_search_header, ptr %sh, i32 0, i32 4
  %4 = call ptr @memset(ptr %sh, i32 255, i32 32)
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %test) #20
  %5 = getelementptr inbounds %struct.btrfs_key, ptr %test, i32 0, i32 1
  %6 = getelementptr inbounds %struct.btrfs_key, ptr %test, i32 0, i32 2
  %7 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %path, align 4
  %slots = getelementptr inbounds %struct.btrfs_path, ptr %path, i32 0, i32 1
  %9 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %slots, align 4
  %pages.i = getelementptr inbounds %struct.extent_buffer, ptr %8, i32 0, i32 12
  %11 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %pages.i, align 4
  %call.i = tail call ptr @page_address(ptr noundef %12) #20
  %13 = ptrtoint ptr %8 to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %8, align 8
  %conv.i = trunc i64 %14 to i32
  %and.i = and i32 %conv.i, 4095
  %add.ptr.i = getelementptr i8, ptr %call.i, i32 %and.i
  %nritems.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i, i32 0, i32 7
  %15 = ptrtoint ptr %nritems.i to i32
  call void @__asan_loadN_noabort(i32 %15, i32 4)
  %16 = load i32, ptr %nritems.i, align 1
  %17 = tail call i32 @llvm.bswap.i32(i32 %16) #20
  %18 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pages.i, align 4
  %call.i144 = tail call ptr @page_address(ptr noundef %19) #20
  %20 = ptrtoint ptr %8 to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %8, align 8
  %conv.i145 = trunc i64 %21 to i32
  %and.i146 = and i32 %conv.i145, 4095
  %add.ptr.i147 = getelementptr i8, ptr %call.i144, i32 %and.i146
  %generation.i = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i147, i32 0, i32 5
  %22 = ptrtoint ptr %generation.i to i32
  call void @__asan_loadN_noabort(i32 %22, i32 8)
  %23 = load i64, ptr %generation.i, align 1
  %24 = tail call i64 @llvm.bswap.i64(i64 %23) #20
  %max_transid = getelementptr inbounds %struct.btrfs_ioctl_search_key, ptr %sk, i32 0, i32 6
  %25 = ptrtoint ptr %max_transid to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %max_transid, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %24, i64 %26)
  %cmp = icmp ugt i64 %24, %26
  br i1 %cmp, label %entry.advance_key_crit_edge, label %if.end

entry.advance_key_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %advance_key

if.end:                                           ; preds = %entry
  %27 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %pages.i, align 4
  %call.i149 = tail call ptr @page_address(ptr noundef %28) #20
  %29 = ptrtoint ptr %8 to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %8, align 8
  %conv.i150 = trunc i64 %30 to i32
  %and.i151 = and i32 %conv.i150, 4095
  %add.ptr.i152 = getelementptr i8, ptr %call.i149, i32 %and.i151
  %generation.i153 = getelementptr inbounds %struct.btrfs_header, ptr %add.ptr.i152, i32 0, i32 5
  %31 = ptrtoint ptr %generation.i153 to i32
  call void @__asan_loadN_noabort(i32 %31, i32 8)
  %32 = load i64, ptr %generation.i153, align 1
  %33 = tail call i64 @llvm.bswap.i64(i64 %32) #20
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %17)
  %cmp4161 = icmp slt i32 %10, %17
  br i1 %cmp4161, label %for.body.lr.ph, label %if.end.advance_key_crit_edge

if.end.advance_key_crit_edge:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %advance_key

for.body.lr.ph:                                   ; preds = %if.end
  %34 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i, i32 0, i32 1
  %35 = getelementptr inbounds %struct.btrfs_disk_key, ptr %disk_key.i, i32 0, i32 2
  %offset1.i.i = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  %type2.i.i = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %nr_items = getelementptr inbounds %struct.btrfs_ioctl_search_key, ptr %sk, i32 0, i32 9
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.0162 = phi i32 [ %10, %for.body.lr.ph ], [ %inc47, %for.inc.for.body_crit_edge ]
  %mul.i.i.i = mul i32 %i.0162, 25
  %add.i.i.i = add i32 %mul.i.i.i, 101
  %36 = inttoptr i32 %add.i.i.i to ptr
  %call.i.i = call i32 @btrfs_get_32(ptr noundef %8, ptr noundef %36, i32 noundef 17) #20
  %add = add i32 %call.i.i, 101
  %call.i.i156 = call i32 @btrfs_get_32(ptr noundef %8, ptr noundef %36, i32 noundef 21) #20
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %disk_key.i) #20
  %37 = call ptr @memset(ptr %disk_key.i, i32 255, i32 17)
  call void @read_extent_buffer(ptr noundef %8, ptr noundef nonnull %disk_key.i, i32 noundef %add.i.i.i, i32 noundef 17) #20
  %38 = ptrtoint ptr %35 to i32
  call void @__asan_loadN_noabort(i32 %38, i32 8)
  %39 = load i64, ptr %35, align 1
  %40 = call i64 @llvm.bswap.i64(i64 %39) #20
  %41 = ptrtoint ptr %offset1.i.i to i32
  call void @__asan_storeN_noabort(i32 %41, i32 8)
  store i64 %40, ptr %offset1.i.i, align 1
  %42 = ptrtoint ptr %34 to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %34, align 8
  %44 = ptrtoint ptr %type2.i.i to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 %43, ptr %type2.i.i, align 1
  %45 = ptrtoint ptr %disk_key.i to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %disk_key.i, align 8
  %47 = call i64 @llvm.bswap.i64(i64 %46) #20
  %48 = ptrtoint ptr %key to i32
  call void @__asan_storeN_noabort(i32 %48, i32 8)
  store i64 %47, ptr %key, align 1
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %disk_key.i) #20
  %call7 = call fastcc i32 @key_in_sk(ptr noundef %key, ptr noundef %sk)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool.not = icmp eq i32 %call7, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end9

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

if.end9:                                          ; preds = %for.body
  %add10 = add i32 %call.i.i156, 32
  %49 = ptrtoint ptr %buf_size to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %buf_size, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add10, i32 %50)
  %cmp11 = icmp ugt i32 %add10, %50
  br i1 %cmp11, label %if.then12, label %if.end9.if.end17_crit_edge

if.end9.if.end17_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end17

if.then12:                                        ; preds = %if.end9
  %51 = ptrtoint ptr %num_found to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %num_found, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool13.not = icmp eq i32 %52, 0
  br i1 %tobool13.not, label %if.end15, label %if.then12.cleanup85_crit_edge

if.then12.cleanup85_crit_edge:                    ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup85

if.end15:                                         ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #22
  %53 = ptrtoint ptr %buf_size to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %add10, ptr %buf_size, align 4
  br label %if.end17

if.end17:                                         ; preds = %if.end15, %if.end9.if.end17_crit_edge
  %item_len.0 = phi i32 [ 0, %if.end15 ], [ %call.i.i156, %if.end9.if.end17_crit_edge ]
  %ret.1 = phi i32 [ -75, %if.end15 ], [ 0, %if.end9.if.end17_crit_edge ]
  %add18 = add i32 %item_len.0, 32
  %54 = ptrtoint ptr %sk_offset to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %sk_offset, align 4
  %add19 = add i32 %add18, %55
  %56 = ptrtoint ptr %buf_size to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %buf_size, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add19, i32 %57)
  %cmp20 = icmp ugt i32 %add19, %57
  br i1 %cmp20, label %if.end17.cleanup85_crit_edge, label %if.end22

if.end17.cleanup85_crit_edge:                     ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup85

if.end22:                                         ; preds = %if.end17
  %58 = ptrtoint ptr %key to i32
  call void @__asan_loadN_noabort(i32 %58, i32 8)
  %59 = load i64, ptr %key, align 1
  %60 = ptrtoint ptr %0 to i32
  call void @__asan_store8_noabort(i32 %60)
  store i64 %59, ptr %0, align 8
  %61 = ptrtoint ptr %offset1.i.i to i32
  call void @__asan_loadN_noabort(i32 %61, i32 8)
  %62 = load i64, ptr %offset1.i.i, align 1
  %63 = ptrtoint ptr %1 to i32
  call void @__asan_store8_noabort(i32 %63)
  store i64 %62, ptr %1, align 8
  %64 = ptrtoint ptr %type2.i.i to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %type2.i.i, align 1
  %conv = zext i8 %65 to i32
  %66 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 %conv, ptr %2, align 8
  %67 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %item_len.0, ptr %3, align 4
  %68 = ptrtoint ptr %sh to i32
  call void @__asan_store8_noabort(i32 %68)
  store i64 %33, ptr %sh, align 8
  %add.ptr = getelementptr i8, ptr %ubuf, i32 %55
  %call26 = call i32 @copy_to_user_nofault(ptr noundef %add.ptr, ptr noundef nonnull %sh, i32 noundef 32) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %if.end29, label %if.end22.cleanup85_crit_edge

if.end22.cleanup85_crit_edge:                     ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup85

if.end29:                                         ; preds = %if.end22
  %69 = ptrtoint ptr %sk_offset to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %sk_offset, align 4
  %add30 = add i32 %70, 32
  store i32 %add30, ptr %sk_offset, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %item_len.0)
  %tobool31.not = icmp eq i32 %item_len.0, 0
  br i1 %tobool31.not, label %if.end29.if.end39_crit_edge, label %if.then32

if.end29.if.end39_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end39

if.then32:                                        ; preds = %if.end29
  %add.ptr33 = getelementptr i8, ptr %ubuf, i32 %add30
  %call34 = call i32 @read_extent_buffer_to_user_nofault(ptr noundef %8, ptr noundef %add.ptr33, i32 noundef %add, i32 noundef %item_len.0) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call34)
  %tobool35.not = icmp eq i32 %call34, 0
  %71 = ptrtoint ptr %sk_offset to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %sk_offset, align 4
  br i1 %tobool35.not, label %cleanup.thread, label %cleanup

cleanup.thread:                                   ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #22
  %add38 = add i32 %72, %item_len.0
  %73 = ptrtoint ptr %sk_offset to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %add38, ptr %sk_offset, align 4
  br label %if.end39

cleanup:                                          ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #22
  %sub = add i32 %72, -32
  %74 = ptrtoint ptr %sk_offset to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %sub, ptr %sk_offset, align 4
  br label %cleanup85

if.end39:                                         ; preds = %cleanup.thread, %if.end29.if.end39_crit_edge
  %75 = ptrtoint ptr %num_found to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %num_found, align 4
  %inc = add i32 %76, 1
  store i32 %inc, ptr %num_found, align 4
  br i1 %cmp11, label %if.end39.cleanup85_crit_edge, label %if.end42

if.end39.cleanup85_crit_edge:                     ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup85

if.end42:                                         ; preds = %if.end39
  %77 = ptrtoint ptr %nr_items to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %nr_items, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %inc, i32 %78)
  %cmp43.not = icmp ult i32 %inc, %78
  br i1 %cmp43.not, label %if.end42.for.inc_crit_edge, label %if.end42.cleanup85_crit_edge

if.end42.cleanup85_crit_edge:                     ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup85

if.end42.for.inc_crit_edge:                       ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.inc

for.inc:                                          ; preds = %if.end42.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %inc47 = add i32 %i.0162, 1
  %exitcond.not = icmp eq i32 %inc47, %17
  br i1 %exitcond.not, label %for.inc.advance_key_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %for.body

for.inc.advance_key_crit_edge:                    ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #22
  br label %advance_key

advance_key:                                      ; preds = %for.inc.advance_key_crit_edge, %if.end.advance_key_crit_edge, %entry.advance_key_crit_edge
  %max_objectid = getelementptr inbounds %struct.btrfs_ioctl_search_key, ptr %sk, i32 0, i32 2
  %79 = ptrtoint ptr %max_objectid to i32
  call void @__asan_load8_noabort(i32 %79)
  %80 = load i64, ptr %max_objectid, align 8
  %81 = ptrtoint ptr %test to i32
  call void @__asan_store8_noabort(i32 %81)
  store i64 %80, ptr %test, align 8
  %max_type = getelementptr inbounds %struct.btrfs_ioctl_search_key, ptr %sk, i32 0, i32 8
  %82 = ptrtoint ptr %max_type to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %max_type, align 4
  %conv49 = trunc i32 %83 to i8
  %84 = ptrtoint ptr %5 to i32
  call void @__asan_store1_noabort(i32 %84)
  store i8 %conv49, ptr %5, align 8
  %max_offset = getelementptr inbounds %struct.btrfs_ioctl_search_key, ptr %sk, i32 0, i32 4
  %85 = ptrtoint ptr %max_offset to i32
  call void @__asan_load8_noabort(i32 %85)
  %86 = load i64, ptr %max_offset, align 8
  %87 = ptrtoint ptr %6 to i32
  call void @__asan_storeN_noabort(i32 %87, i32 8)
  store i64 %86, ptr %6, align 1
  %call52 = call i32 @btrfs_comp_cpu_keys(ptr noundef %key, ptr noundef nonnull %test) #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call52)
  %cmp53 = icmp sgt i32 %call52, -1
  br i1 %cmp53, label %advance_key.cleanup85_crit_edge, label %if.else

advance_key.cleanup85_crit_edge:                  ; preds = %advance_key
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup85

if.else:                                          ; preds = %advance_key
  %offset56 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  %88 = ptrtoint ptr %offset56 to i32
  call void @__asan_loadN_noabort(i32 %88, i32 8)
  %89 = load i64, ptr %offset56, align 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %89)
  %cmp57.not = icmp eq i64 %89, -1
  br i1 %cmp57.not, label %if.else62, label %if.then59

if.then59:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  %inc61 = add nuw i64 %89, 1
  %90 = ptrtoint ptr %offset56 to i32
  call void @__asan_storeN_noabort(i32 %90, i32 8)
  store i64 %inc61, ptr %offset56, align 1
  br label %cleanup85

if.else62:                                        ; preds = %if.else
  %type63 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %91 = ptrtoint ptr %type63 to i32
  call void @__asan_load1_noabort(i32 %91)
  %92 = load i8, ptr %type63, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %92)
  %cmp65.not = icmp eq i8 %92, -1
  br i1 %cmp65.not, label %if.else71, label %if.then67

if.then67:                                        ; preds = %if.else62
  call void @__sanitizer_cov_trace_pc() #22
  %93 = ptrtoint ptr %offset56 to i32
  call void @__asan_storeN_noabort(i32 %93, i32 8)
  store i64 0, ptr %offset56, align 1
  %inc70 = add nuw i8 %92, 1
  %94 = ptrtoint ptr %type63 to i32
  call void @__asan_store1_noabort(i32 %94)
  store i8 %inc70, ptr %type63, align 1
  br label %cleanup85

if.else71:                                        ; preds = %if.else62
  %95 = ptrtoint ptr %key to i32
  call void @__asan_loadN_noabort(i32 %95, i32 8)
  %96 = load i64, ptr %key, align 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %96)
  %cmp73.not = icmp eq i64 %96, -1
  br i1 %cmp73.not, label %if.else71.cleanup85_crit_edge, label %if.then75

if.else71.cleanup85_crit_edge:                    ; preds = %if.else71
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup85

if.then75:                                        ; preds = %if.else71
  call void @__sanitizer_cov_trace_pc() #22
  %97 = ptrtoint ptr %offset56 to i32
  call void @__asan_storeN_noabort(i32 %97, i32 8)
  store i64 0, ptr %offset56, align 1
  %98 = ptrtoint ptr %type63 to i32
  call void @__asan_store1_noabort(i32 %98)
  store i8 0, ptr %type63, align 1
  %inc79 = add nuw i64 %96, 1
  %99 = ptrtoint ptr %key to i32
  call void @__asan_storeN_noabort(i32 %99, i32 8)
  store i64 %inc79, ptr %key, align 1
  br label %cleanup85

cleanup85:                                        ; preds = %if.then75, %if.else71.cleanup85_crit_edge, %if.then67, %if.then59, %advance_key.cleanup85_crit_edge, %if.end42.cleanup85_crit_edge, %if.end39.cleanup85_crit_edge, %cleanup, %if.end22.cleanup85_crit_edge, %if.end17.cleanup85_crit_edge, %if.then12.cleanup85_crit_edge
  %retval.0 = phi i32 [ 0, %if.then59 ], [ 0, %if.then67 ], [ 0, %if.then75 ], [ 0, %cleanup ], [ 1, %advance_key.cleanup85_crit_edge ], [ 1, %if.else71.cleanup85_crit_edge ], [ 1, %if.end42.cleanup85_crit_edge ], [ 0, %if.end22.cleanup85_crit_edge ], [ 1, %if.end17.cleanup85_crit_edge ], [ 1, %if.then12.cleanup85_crit_edge ], [ %ret.1, %if.end39.cleanup85_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %test) #20
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %sh) #20
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree noinline nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @key_in_sk(ptr noundef readonly %key, ptr nocapture noundef readonly %sk) unnamed_addr #16 align 64 {
entry:
  %test = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %test) #20
  %0 = getelementptr inbounds %struct.btrfs_key, ptr %test, i32 0, i32 1
  %1 = getelementptr inbounds %struct.btrfs_key, ptr %test, i32 0, i32 2
  %min_objectid = getelementptr inbounds %struct.btrfs_ioctl_search_key, ptr %sk, i32 0, i32 1
  %2 = ptrtoint ptr %min_objectid to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %min_objectid, align 8
  %4 = ptrtoint ptr %test to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 %3, ptr %test, align 8
  %min_type = getelementptr inbounds %struct.btrfs_ioctl_search_key, ptr %sk, i32 0, i32 7
  %5 = ptrtoint ptr %min_type to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %min_type, align 8
  %conv = trunc i32 %6 to i8
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 %conv, ptr %0, align 8
  %min_offset = getelementptr inbounds %struct.btrfs_ioctl_search_key, ptr %sk, i32 0, i32 3
  %8 = ptrtoint ptr %min_offset to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %min_offset, align 8
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_storeN_noabort(i32 %10, i32 8)
  store i64 %9, ptr %1, align 1
  %call = call i32 @btrfs_comp_cpu_keys(ptr noundef %key, ptr noundef nonnull %test) #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %max_objectid = getelementptr inbounds %struct.btrfs_ioctl_search_key, ptr %sk, i32 0, i32 2
  %11 = ptrtoint ptr %max_objectid to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %max_objectid, align 8
  %13 = ptrtoint ptr %test to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %12, ptr %test, align 8
  %max_type = getelementptr inbounds %struct.btrfs_ioctl_search_key, ptr %sk, i32 0, i32 8
  %14 = ptrtoint ptr %max_type to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %max_type, align 4
  %conv3 = trunc i32 %15 to i8
  %16 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %conv3, ptr %0, align 8
  %max_offset = getelementptr inbounds %struct.btrfs_ioctl_search_key, ptr %sk, i32 0, i32 4
  %17 = ptrtoint ptr %max_offset to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %max_offset, align 8
  %19 = ptrtoint ptr %1 to i32
  call void @__asan_storeN_noabort(i32 %19, i32 8)
  store i64 %18, ptr %1, align 1
  %call6 = call i32 @btrfs_comp_cpu_keys(ptr noundef %key, ptr noundef nonnull %test) #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call6)
  %cmp7 = icmp slt i32 %call6, 1
  %. = zext i1 %cmp7 to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %., %if.end ]
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %test) #20
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @copy_to_user_nofault(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @read_extent_buffer_to_user_nofault(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @btrfs_comp_cpu_keys(ptr noundef, ptr noundef) local_unnamed_addr #17

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @btrfs_search_path_in_tree(ptr noundef %info, i64 noundef %tree_id, i64 noundef %dirid, ptr noundef %name) unnamed_addr #8 align 64 {
entry:
  %key = alloca %struct.btrfs_key, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %key) #20
  %0 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 1
  %1 = getelementptr inbounds %struct.btrfs_key, ptr %key, i32 0, i32 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 256, i64 %dirid)
  %cmp = icmp eq i64 %dirid, 256
  %2 = call ptr @memset(ptr %key, i32 255, i32 17)
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %3 = ptrtoint ptr %name to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 0, ptr %name, align 1
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call ptr @btrfs_alloc_path() #20
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end2

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end2:                                          ; preds = %if.end
  %call4 = tail call ptr @btrfs_get_fs_root(ptr noundef %info, i64 noundef %tree_id, i1 noundef zeroext true) #20
  %cmp.i = icmp ugt ptr %call4, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then6, label %if.end8

if.then6:                                         ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #22
  %4 = ptrtoint ptr %call4 to i32
  br label %out

if.end8:                                          ; preds = %if.end2
  %5 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %dirid, ptr %key, align 8
  %6 = ptrtoint ptr %0 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 12, ptr %0, align 8
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_storeN_noabort(i32 %7, i32 8)
  store i64 -1, ptr %1, align 1
  %call975 = call i32 @btrfs_search_backwards(ptr noundef %call4, ptr noundef nonnull %key, ptr noundef nonnull %call) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call975)
  %cmp1076 = icmp slt i32 %call975, 0
  br i1 %cmp1076, label %if.end8.out_crit_edge, label %if.else.lr.ph

if.end8.out_crit_edge:                            ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.else.lr.ph:                                    ; preds = %if.end8
  %arrayidx3 = getelementptr i8, ptr %name, i32 4079
  %slots = getelementptr inbounds %struct.btrfs_path, ptr %call, i32 0, i32 1
  br label %if.else

if.else:                                          ; preds = %if.end33.if.else_crit_edge, %if.else.lr.ph
  %call979 = phi i32 [ %call975, %if.else.lr.ph ], [ %call9, %if.end33.if.else_crit_edge ]
  %total_len.078 = phi i32 [ 0, %if.else.lr.ph ], [ %add22, %if.end33.if.else_crit_edge ]
  %ptr.077 = phi ptr [ %arrayidx3, %if.else.lr.ph ], [ %add.ptr, %if.end33.if.else_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call979)
  %cmp12.not = icmp eq i32 %call979, 0
  br i1 %cmp12.not, label %if.end15, label %if.else.out_crit_edge

if.else.out_crit_edge:                            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end15:                                         ; preds = %if.else
  %8 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %call, align 4
  %10 = ptrtoint ptr %slots to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %slots, align 4
  %mul.i.i.i = mul i32 %11, 25
  %add.i.i.i = add i32 %mul.i.i.i, 101
  %12 = inttoptr i32 %add.i.i.i to ptr
  %call.i.i = call i32 @btrfs_get_32(ptr noundef %9, ptr noundef %12, i32 noundef 17) #20
  %add = add i32 %call.i.i, 101
  %13 = inttoptr i32 %add to ptr
  %call.i = call zeroext i16 @btrfs_get_16(ptr noundef %9, ptr noundef %13, i32 noundef 8) #20
  %conv = zext i16 %call.i to i32
  %idx.neg = xor i32 %conv, -1
  %add.ptr = getelementptr i8, ptr %ptr.077, i32 %idx.neg
  %add20 = add i32 %total_len.078, 1
  %add22 = add i32 %add20, %conv
  %cmp23 = icmp ult ptr %add.ptr, %name
  br i1 %cmp23, label %if.end15.out_crit_edge, label %if.end26

if.end15.out_crit_edge:                           ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end26:                                         ; preds = %if.end15
  %add.ptr27 = getelementptr i8, ptr %ptr.077, i32 -1
  %14 = ptrtoint ptr %add.ptr27 to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 47, ptr %add.ptr27, align 1
  %add.ptr28 = getelementptr %struct.btrfs_inode_ref, ptr %13, i32 1
  %15 = ptrtoint ptr %add.ptr28 to i32
  call void @read_extent_buffer(ptr noundef %9, ptr noundef %add.ptr, i32 noundef %15, i32 noundef %conv) #20
  %16 = ptrtoint ptr %1 to i32
  call void @__asan_loadN_noabort(i32 %16, i32 8)
  %17 = load i64, ptr %1, align 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 256, i64 %17)
  %cmp30 = icmp eq i64 %17, 256
  br i1 %cmp30, label %while.end, label %if.end33

if.end33:                                         ; preds = %if.end26
  call void @btrfs_release_path(ptr noundef nonnull %call) #20
  %18 = ptrtoint ptr %1 to i32
  call void @__asan_loadN_noabort(i32 %18, i32 8)
  %19 = load i64, ptr %1, align 1
  %20 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %19, ptr %key, align 8
  store i64 -1, ptr %1, align 1
  %call9 = call i32 @btrfs_search_backwards(ptr noundef %call4, ptr noundef nonnull %key, ptr noundef nonnull %call) #20
  %cmp10 = icmp slt i32 %call9, 0
  br i1 %cmp10, label %if.end33.out_crit_edge, label %if.end33.if.else_crit_edge

if.end33.if.else_crit_edge:                       ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.else

if.end33.out_crit_edge:                           ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

while.end:                                        ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #22
  %21 = call ptr @memmove(ptr %name, ptr %add.ptr, i32 %add22)
  %arrayidx38 = getelementptr i8, ptr %name, i32 %add22
  %22 = ptrtoint ptr %arrayidx38 to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 0, ptr %arrayidx38, align 1
  br label %out

out:                                              ; preds = %while.end, %if.end33.out_crit_edge, %if.end15.out_crit_edge, %if.else.out_crit_edge, %if.end8.out_crit_edge, %if.then6
  %root.0 = phi ptr [ null, %if.then6 ], [ %call4, %while.end ], [ %call4, %if.end8.out_crit_edge ], [ %call4, %if.end15.out_crit_edge ], [ %call4, %if.else.out_crit_edge ], [ %call4, %if.end33.out_crit_edge ]
  %ret.0 = phi i32 [ %4, %if.then6 ], [ 0, %while.end ], [ %call975, %if.end8.out_crit_edge ], [ %call9, %if.end33.out_crit_edge ], [ -2, %if.else.out_crit_edge ], [ -36, %if.end15.out_crit_edge ]
  call void @btrfs_put_root(ptr noundef %root.0) #20
  call void @btrfs_free_path(ptr noundef nonnull %call) #20
  br label %cleanup

cleanup:                                          ; preds = %out, %if.end.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ %ret.0, %out ], [ -12, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %key) #20
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_search_backwards(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i16 @btrfs_get_16(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @init_ipath(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @paths_from_inode(i64 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_ipath(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @memchr_inv(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @init_data_container(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @iterate_inodes_from_logical(i64 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @build_ino_list(i64 noundef %inum, i64 noundef %offset, i64 noundef %root, ptr nocapture noundef %ctx) #18 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ctx, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 23, i32 %1)
  %cmp = icmp ugt i32 %1, 23
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %sub = add i32 %1, -24
  %2 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %sub, ptr %ctx, align 8
  %elem_cnt = getelementptr inbounds %struct.btrfs_data_container, ptr %ctx, i32 0, i32 2
  %3 = ptrtoint ptr %elem_cnt to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %elem_cnt, align 8
  %arrayidx = getelementptr %struct.btrfs_data_container, ptr %ctx, i32 0, i32 4, i32 %4
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %inum, ptr %arrayidx, align 8
  %6 = load i32, ptr %elem_cnt, align 8
  %add = add i32 %6, 1
  %arrayidx4 = getelementptr %struct.btrfs_data_container, ptr %ctx, i32 0, i32 4, i32 %add
  %7 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_store8_noabort(i32 %7)
  store i64 %offset, ptr %arrayidx4, align 8
  %8 = load i32, ptr %elem_cnt, align 8
  %add7 = add i32 %8, 2
  %arrayidx8 = getelementptr %struct.btrfs_data_container, ptr %ctx, i32 0, i32 4, i32 %add7
  %9 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %root, ptr %arrayidx8, align 8
  %10 = load i32, ptr %elem_cnt, align 8
  %add10 = add i32 %10, 3
  store i32 %add10, ptr %elem_cnt, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  %sub12 = sub nuw nsw i32 24, %1
  %bytes_missing = getelementptr inbounds %struct.btrfs_data_container, ptr %ctx, i32 0, i32 1
  %11 = ptrtoint ptr %bytes_missing to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %bytes_missing, align 4
  %add13 = add i32 %sub12, %12
  store i32 %add13, ptr %bytes_missing, align 4
  %13 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %ctx, align 8
  %elem_missed = getelementptr inbounds %struct.btrfs_data_container, ptr %ctx, i32 0, i32 3
  %14 = ptrtoint ptr %elem_missed to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %elem_missed, align 4
  %add15 = add i32 %15, 3
  store i32 %add15, ptr %elem_missed, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_attach_transaction_barrier(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_commit_transaction_async(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_wait_for_commit(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_scrub_dev(ptr noundef, i64 noundef, i64 noundef, i64 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_scrub_cancel(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_scrub_progress(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_pause_balance(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_cancel_balance(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @_btrfs_ioctl_set_received_subvol(ptr noundef %file, ptr noundef %mnt_userns, ptr noundef %sa) unnamed_addr #0 align 64 {
entry:
  %ct = alloca %struct.timespec64, align 8
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %f_inode.i = getelementptr inbounds %struct.file, ptr %file, i32 0, i32 2
  %0 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %f_inode.i, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_sb, align 4
  %s_fs_info.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 33
  %4 = ptrtoint ptr %s_fs_info.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %s_fs_info.i, align 16
  %add.ptr.i = getelementptr i8, ptr %1, i32 -864
  %6 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %add.ptr.i, align 8
  %root_item4 = getelementptr inbounds %struct.btrfs_root, ptr %7, i32 0, i32 6
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ct) #20
  %8 = call ptr @memset(ptr %ct, i32 255, i32 16)
  call void @current_time(ptr nonnull sret(%struct.timespec64) align 8 %ct, ptr noundef %1) #20
  %call5 = call zeroext i1 @inode_owner_or_capable(ptr noundef %mnt_userns, ptr noundef %1) #20
  br i1 %call5, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end:                                           ; preds = %entry
  %call6 = call i32 @mnt_want_write_file(ptr noundef %file) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %cmp = icmp slt i32 %call6, 0
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end8

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %subvol_sem = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 56
  call void @down_write(ptr noundef %subvol_sem) #20
  %location.i = getelementptr i8, ptr %1, i32 -860
  %9 = ptrtoint ptr %location.i to i32
  call void @__asan_loadN_noabort(i32 %9, i32 8)
  %10 = load i64, ptr %location.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %10)
  %tobool.not.i = icmp eq i64 %10, 0
  br i1 %tobool.not.i, label %if.end8.if.then.i_crit_edge, label %lor.lhs.false.i

if.end8.if.then.i_crit_edge:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end8
  %type.i = getelementptr i8, ptr %1, i32 -852
  %11 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -124, i8 %12)
  %cmp.i = icmp eq i8 %12, -124
  br i1 %cmp.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.btrfs_ino.exit_crit_edge

lor.lhs.false.i.btrfs_ino.exit_crit_edge:         ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %btrfs_ino.exit

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end8.if.then.i_crit_edge
  %i_ino.i = getelementptr i8, ptr %1, i32 40
  %13 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %i_ino.i, align 8
  %conv3.i = zext i32 %14 to i64
  br label %btrfs_ino.exit

btrfs_ino.exit:                                   ; preds = %if.then.i, %lor.lhs.false.i.btrfs_ino.exit_crit_edge
  %ino.0.i = phi i64 [ %conv3.i, %if.then.i ], [ %10, %lor.lhs.false.i.btrfs_ino.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 256, i64 %ino.0.i)
  %cmp11.not = icmp eq i64 %ino.0.i, 256
  br i1 %cmp11.not, label %if.end13, label %btrfs_ino.exit.out_crit_edge

btrfs_ino.exit.out_crit_edge:                     ; preds = %btrfs_ino.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end13:                                         ; preds = %btrfs_ino.exit
  %flags.i = getelementptr inbounds %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 7
  %15 = ptrtoint ptr %flags.i to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %flags.i, align 8
  %and.i = and i64 %16, 72057594037927936
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %cmp.i268.not = icmp eq i64 %and.i, 0
  br i1 %cmp.i268.not, label %if.end16, label %if.end13.out_crit_edge

if.end13.out_crit_edge:                           ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #22
  br label %out

if.end16:                                         ; preds = %if.end13
  %call17 = call ptr @btrfs_start_transaction(ptr noundef %7, i32 noundef 3) #20
  %cmp.i269 = icmp ugt ptr %call17, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i269, label %if.then19, label %if.end21

if.then19:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #22
  %17 = ptrtoint ptr %call17 to i32
  br label %out

if.end21:                                         ; preds = %if.end16
  %18 = ptrtoint ptr %call17 to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %call17, align 8
  %rtransid = getelementptr inbounds %struct.btrfs_ioctl_received_subvol_args, ptr %sa, i32 0, i32 2
  %20 = ptrtoint ptr %rtransid to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %19, ptr %rtransid, align 8
  %21 = ptrtoint ptr %ct to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %ct, align 8
  %rtime = getelementptr inbounds %struct.btrfs_ioctl_received_subvol_args, ptr %sa, i32 0, i32 4
  %23 = ptrtoint ptr %rtime to i32
  call void @__asan_store8_noabort(i32 %23)
  store i64 %22, ptr %rtime, align 8
  %tv_nsec = getelementptr inbounds %struct.timespec64, ptr %ct, i32 0, i32 1
  %24 = ptrtoint ptr %tv_nsec to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %tv_nsec, align 8
  %nsec = getelementptr inbounds %struct.btrfs_ioctl_received_subvol_args, ptr %sa, i32 0, i32 4, i32 1
  %26 = ptrtoint ptr %nsec to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %nsec, align 8
  %received_uuid = getelementptr inbounds %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 15
  %bcmp = call i32 @bcmp(ptr noundef dereferenceable(16) %received_uuid, ptr noundef dereferenceable(16) %sa, i32 16) #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %tobool.not = icmp eq i32 %bcmp, 0
  br i1 %tobool.not, label %if.end21.if.end84_crit_edge, label %land.lhs.true

if.end21.if.end84_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end84

land.lhs.true:                                    ; preds = %if.end21
  %27 = ptrtoint ptr %received_uuid to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %received_uuid, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %28)
  %tobool.not.i270 = icmp eq i8 %28, 0
  br i1 %tobool.not.i270, label %for.cond.i, label %land.lhs.true.if.then29_crit_edge

land.lhs.true.if.then29_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then29

for.cond.i:                                       ; preds = %land.lhs.true
  %arrayidx.1.i = getelementptr %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 15, i32 1
  %29 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %arrayidx.1.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %30)
  %tobool.not.1.i = icmp eq i8 %30, 0
  br i1 %tobool.not.1.i, label %for.cond.1.i, label %for.cond.i.if.then29_crit_edge

for.cond.i.if.then29_crit_edge:                   ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then29

for.cond.1.i:                                     ; preds = %for.cond.i
  %arrayidx.2.i = getelementptr %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 15, i32 2
  %31 = ptrtoint ptr %arrayidx.2.i to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %arrayidx.2.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %32)
  %tobool.not.2.i = icmp eq i8 %32, 0
  br i1 %tobool.not.2.i, label %for.cond.2.i, label %for.cond.1.i.if.then29_crit_edge

for.cond.1.i.if.then29_crit_edge:                 ; preds = %for.cond.1.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then29

for.cond.2.i:                                     ; preds = %for.cond.1.i
  %arrayidx.3.i = getelementptr %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 15, i32 3
  %33 = ptrtoint ptr %arrayidx.3.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %arrayidx.3.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool.not.3.i = icmp eq i8 %34, 0
  br i1 %tobool.not.3.i, label %for.cond.3.i, label %for.cond.2.i.if.then29_crit_edge

for.cond.2.i.if.then29_crit_edge:                 ; preds = %for.cond.2.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then29

for.cond.3.i:                                     ; preds = %for.cond.2.i
  %arrayidx.4.i = getelementptr %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 15, i32 4
  %35 = ptrtoint ptr %arrayidx.4.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %arrayidx.4.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %tobool.not.4.i = icmp eq i8 %36, 0
  br i1 %tobool.not.4.i, label %for.cond.4.i, label %for.cond.3.i.if.then29_crit_edge

for.cond.3.i.if.then29_crit_edge:                 ; preds = %for.cond.3.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then29

for.cond.4.i:                                     ; preds = %for.cond.3.i
  %arrayidx.5.i = getelementptr %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 15, i32 5
  %37 = ptrtoint ptr %arrayidx.5.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %arrayidx.5.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %38)
  %tobool.not.5.i = icmp eq i8 %38, 0
  br i1 %tobool.not.5.i, label %for.cond.5.i, label %for.cond.4.i.if.then29_crit_edge

for.cond.4.i.if.then29_crit_edge:                 ; preds = %for.cond.4.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then29

for.cond.5.i:                                     ; preds = %for.cond.4.i
  %arrayidx.6.i = getelementptr %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 15, i32 6
  %39 = ptrtoint ptr %arrayidx.6.i to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %arrayidx.6.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %40)
  %tobool.not.6.i = icmp eq i8 %40, 0
  br i1 %tobool.not.6.i, label %for.cond.6.i, label %for.cond.5.i.if.then29_crit_edge

for.cond.5.i.if.then29_crit_edge:                 ; preds = %for.cond.5.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then29

for.cond.6.i:                                     ; preds = %for.cond.5.i
  %arrayidx.7.i = getelementptr %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 15, i32 7
  %41 = ptrtoint ptr %arrayidx.7.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %arrayidx.7.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %42)
  %tobool.not.7.i = icmp eq i8 %42, 0
  br i1 %tobool.not.7.i, label %for.cond.7.i, label %for.cond.6.i.if.then29_crit_edge

for.cond.6.i.if.then29_crit_edge:                 ; preds = %for.cond.6.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then29

for.cond.7.i:                                     ; preds = %for.cond.6.i
  %arrayidx.8.i = getelementptr %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 15, i32 8
  %43 = ptrtoint ptr %arrayidx.8.i to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %arrayidx.8.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %44)
  %tobool.not.8.i = icmp eq i8 %44, 0
  br i1 %tobool.not.8.i, label %for.cond.8.i, label %for.cond.7.i.if.then29_crit_edge

for.cond.7.i.if.then29_crit_edge:                 ; preds = %for.cond.7.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then29

for.cond.8.i:                                     ; preds = %for.cond.7.i
  %arrayidx.9.i = getelementptr %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 15, i32 9
  %45 = ptrtoint ptr %arrayidx.9.i to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %arrayidx.9.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %46)
  %tobool.not.9.i = icmp eq i8 %46, 0
  br i1 %tobool.not.9.i, label %for.cond.9.i, label %for.cond.8.i.if.then29_crit_edge

for.cond.8.i.if.then29_crit_edge:                 ; preds = %for.cond.8.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then29

for.cond.9.i:                                     ; preds = %for.cond.8.i
  %arrayidx.10.i = getelementptr %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 15, i32 10
  %47 = ptrtoint ptr %arrayidx.10.i to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %arrayidx.10.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %48)
  %tobool.not.10.i = icmp eq i8 %48, 0
  br i1 %tobool.not.10.i, label %for.cond.10.i, label %for.cond.9.i.if.then29_crit_edge

for.cond.9.i.if.then29_crit_edge:                 ; preds = %for.cond.9.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then29

for.cond.10.i:                                    ; preds = %for.cond.9.i
  %arrayidx.11.i = getelementptr %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 15, i32 11
  %49 = ptrtoint ptr %arrayidx.11.i to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %arrayidx.11.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %50)
  %tobool.not.11.i = icmp eq i8 %50, 0
  br i1 %tobool.not.11.i, label %for.cond.11.i, label %for.cond.10.i.if.then29_crit_edge

for.cond.10.i.if.then29_crit_edge:                ; preds = %for.cond.10.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then29

for.cond.11.i:                                    ; preds = %for.cond.10.i
  %arrayidx.12.i = getelementptr %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 15, i32 12
  %51 = ptrtoint ptr %arrayidx.12.i to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %arrayidx.12.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %52)
  %tobool.not.12.i = icmp eq i8 %52, 0
  br i1 %tobool.not.12.i, label %for.cond.12.i, label %for.cond.11.i.if.then29_crit_edge

for.cond.11.i.if.then29_crit_edge:                ; preds = %for.cond.11.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then29

for.cond.12.i:                                    ; preds = %for.cond.11.i
  %arrayidx.13.i = getelementptr %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 15, i32 13
  %53 = ptrtoint ptr %arrayidx.13.i to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %arrayidx.13.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %54)
  %tobool.not.13.i = icmp eq i8 %54, 0
  br i1 %tobool.not.13.i, label %for.cond.13.i, label %for.cond.12.i.if.then29_crit_edge

for.cond.12.i.if.then29_crit_edge:                ; preds = %for.cond.12.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then29

for.cond.13.i:                                    ; preds = %for.cond.12.i
  %arrayidx.14.i = getelementptr %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 15, i32 14
  %55 = ptrtoint ptr %arrayidx.14.i to i32
  call void @__asan_load1_noabort(i32 %55)
  %56 = load i8, ptr %arrayidx.14.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %56)
  %tobool.not.14.i = icmp eq i8 %56, 0
  br i1 %tobool.not.14.i, label %btrfs_is_empty_uuid.exit, label %for.cond.13.i.if.then29_crit_edge

for.cond.13.i.if.then29_crit_edge:                ; preds = %for.cond.13.i
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then29

btrfs_is_empty_uuid.exit:                         ; preds = %for.cond.13.i
  %arrayidx.15.i = getelementptr %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 15, i32 15
  %57 = ptrtoint ptr %arrayidx.15.i to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %arrayidx.15.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %58)
  %tobool.not.15.i.not = icmp eq i8 %58, 0
  br i1 %tobool.not.15.i.not, label %btrfs_is_empty_uuid.exit.if.end84_crit_edge, label %btrfs_is_empty_uuid.exit.if.then29_crit_edge

btrfs_is_empty_uuid.exit.if.then29_crit_edge:     ; preds = %btrfs_is_empty_uuid.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.then29

btrfs_is_empty_uuid.exit.if.end84_crit_edge:      ; preds = %btrfs_is_empty_uuid.exit
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end84

if.then29:                                        ; preds = %btrfs_is_empty_uuid.exit.if.then29_crit_edge, %for.cond.13.i.if.then29_crit_edge, %for.cond.12.i.if.then29_crit_edge, %for.cond.11.i.if.then29_crit_edge, %for.cond.10.i.if.then29_crit_edge, %for.cond.9.i.if.then29_crit_edge, %for.cond.8.i.if.then29_crit_edge, %for.cond.7.i.if.then29_crit_edge, %for.cond.6.i.if.then29_crit_edge, %for.cond.5.i.if.then29_crit_edge, %for.cond.4.i.if.then29_crit_edge, %for.cond.3.i.if.then29_crit_edge, %for.cond.2.i.if.then29_crit_edge, %for.cond.1.i.if.then29_crit_edge, %for.cond.i.if.then29_crit_edge, %land.lhs.true.if.then29_crit_edge
  %root_key = getelementptr inbounds %struct.btrfs_root, ptr %7, i32 0, i32 7
  %59 = ptrtoint ptr %root_key to i32
  call void @__asan_loadN_noabort(i32 %59, i32 8)
  %60 = load i64, ptr %root_key, align 1
  %call32 = call i32 @btrfs_uuid_tree_remove(ptr noundef %call17, ptr noundef %received_uuid, i8 noundef zeroext -4, i64 noundef %60) #20
  %61 = zext i32 %call32 to i64
  call void @__sanitizer_cov_trace_switch(i64 %61, ptr @__sancov_gen_cov_switch_values.92)
  switch i32 %call32, label %do.body [
    i32 0, label %if.then29.if.end84_crit_edge
    i32 -2, label %if.then29.if.end84_crit_edge277
  ]

if.then29.if.end84_crit_edge277:                  ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end84

if.then29.if.end84_crit_edge:                     ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end84

do.body:                                          ; preds = %if.then29
  %fs_info37 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call17, i32 0, i32 16
  %62 = ptrtoint ptr %fs_info37 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %fs_info37, align 4
  %fs_state = getelementptr inbounds %struct.btrfs_fs_info, ptr %63, i32 0, i32 149
  %call38 = call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call38)
  %tobool39.not = icmp eq i32 %call38, 0
  br i1 %tobool39.not, label %if.then40, label %do.body.if.end79_crit_edge

do.body.if.end79_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end79

if.then40:                                        ; preds = %do.body
  %64 = zext i32 %call32 to i64
  call void @__sanitizer_cov_trace_switch(i64 %64, ptr @__sancov_gen_cov_switch_values.93)
  switch i32 %call32, label %do.end [
    i32 -5, label %if.then40.do.body63_crit_edge
    i32 -30, label %if.then40.do.body63_crit_edge278
  ]

if.then40.do.body63_crit_edge278:                 ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body63

if.then40.do.body63_crit_edge:                    ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body63

do.end:                                           ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #22
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 4803, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %call32) #20
  br label %if.end79

do.body63:                                        ; preds = %if.then40.do.body63_crit_edge, %if.then40.do.body63_crit_edge278
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @_btrfs_ioctl_set_received_subvol.__UNIQUE_ID_ddebug985, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@_btrfs_ioctl_set_received_subvol, %if.then73)) #20
          to label %if.end79 [label %if.then73], !srcloc !182

if.then73:                                        ; preds = %do.body63
  call void @__sanitizer_cov_trace_pc() #22
  %65 = ptrtoint ptr %fs_info37 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %fs_info37, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %66, ptr noundef nonnull @.str.6, i32 noundef %call32) #24
  br label %if.end79

if.end79:                                         ; preds = %if.then73, %do.body63, %do.end, %do.body.if.end79_crit_edge
  call void @__btrfs_abort_transaction(ptr noundef %call17, ptr noundef nonnull @.str.59, i32 noundef 4803, i32 noundef %call32) #24
  %call82 = call i32 @btrfs_end_transaction(ptr noundef %call17) #20
  br label %out

if.end84:                                         ; preds = %if.then29.if.end84_crit_edge, %if.then29.if.end84_crit_edge277, %btrfs_is_empty_uuid.exit.if.end84_crit_edge, %if.end21.if.end84_crit_edge
  %67 = call ptr @memcpy(ptr %received_uuid, ptr %sa, i32 16)
  %stransid = getelementptr inbounds %struct.btrfs_ioctl_received_subvol_args, ptr %sa, i32 0, i32 1
  %68 = ptrtoint ptr %stransid to i32
  call void @__asan_load8_noabort(i32 %68)
  %69 = load i64, ptr %stransid, align 8
  %stransid.i = getelementptr inbounds %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 18
  %70 = call i64 @llvm.bswap.i64(i64 %69) #20
  %71 = ptrtoint ptr %stransid.i to i32
  call void @__asan_storeN_noabort(i32 %71, i32 8)
  store i64 %70, ptr %stransid.i, align 1
  %72 = ptrtoint ptr %rtransid to i32
  call void @__asan_load8_noabort(i32 %72)
  %73 = load i64, ptr %rtransid, align 8
  %rtransid.i = getelementptr inbounds %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 19
  %74 = call i64 @llvm.bswap.i64(i64 %73) #20
  %75 = ptrtoint ptr %rtransid.i to i32
  call void @__asan_storeN_noabort(i32 %75, i32 8)
  store i64 %74, ptr %rtransid.i, align 1
  %stime = getelementptr inbounds %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 22
  %stime90 = getelementptr inbounds %struct.btrfs_ioctl_received_subvol_args, ptr %sa, i32 0, i32 3
  %76 = ptrtoint ptr %stime90 to i32
  call void @__asan_load8_noabort(i32 %76)
  %77 = load i64, ptr %stime90, align 8
  %78 = call i64 @llvm.bswap.i64(i64 %77) #20
  %79 = ptrtoint ptr %stime to i32
  call void @__asan_storeN_noabort(i32 %79, i32 8)
  store i64 %78, ptr %stime, align 1
  %nsec94 = getelementptr inbounds %struct.btrfs_ioctl_received_subvol_args, ptr %sa, i32 0, i32 3, i32 1
  %80 = ptrtoint ptr %nsec94 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %nsec94, align 8
  %nsec.i = getelementptr inbounds %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 22, i32 1
  %82 = call i32 @llvm.bswap.i32(i32 %81) #20
  %83 = ptrtoint ptr %nsec.i to i32
  call void @__asan_storeN_noabort(i32 %83, i32 4)
  store i32 %82, ptr %nsec.i, align 1
  %rtime95 = getelementptr inbounds %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 23
  %84 = ptrtoint ptr %rtime to i32
  call void @__asan_load8_noabort(i32 %84)
  %85 = load i64, ptr %rtime, align 8
  %86 = call i64 @llvm.bswap.i64(i64 %85) #20
  %87 = ptrtoint ptr %rtime95 to i32
  call void @__asan_storeN_noabort(i32 %87, i32 8)
  store i64 %86, ptr %rtime95, align 1
  %88 = ptrtoint ptr %nsec to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %nsec, align 8
  %nsec.i272 = getelementptr inbounds %struct.btrfs_root, ptr %7, i32 0, i32 6, i32 23, i32 1
  %90 = call i32 @llvm.bswap.i32(i32 %89) #20
  %91 = ptrtoint ptr %nsec.i272 to i32
  call void @__asan_storeN_noabort(i32 %91, i32 4)
  store i32 %90, ptr %nsec.i272, align 1
  %tree_root = getelementptr inbounds %struct.btrfs_fs_info, ptr %5, i32 0, i32 2
  %92 = ptrtoint ptr %tree_root to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %tree_root, align 4
  %root_key101 = getelementptr inbounds %struct.btrfs_root, ptr %7, i32 0, i32 7
  %call103 = call i32 @btrfs_update_root(ptr noundef %call17, ptr noundef %93, ptr noundef %root_key101, ptr noundef %root_item4) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call103)
  %cmp104 = icmp slt i32 %call103, 0
  br i1 %cmp104, label %if.then105, label %if.end107

if.then105:                                       ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #22
  %call106 = call i32 @btrfs_end_transaction(ptr noundef %call17) #20
  br label %out

if.end107:                                        ; preds = %if.end84
  br i1 %tobool.not, label %if.end107.if.end184_crit_edge, label %land.lhs.true109

if.end107.if.end184_crit_edge:                    ; preds = %if.end107
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end184

land.lhs.true109:                                 ; preds = %if.end107
  %call112 = call i32 @btrfs_is_empty_uuid(ptr noundef %sa) #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call112)
  %tobool113.not = icmp eq i32 %call112, 0
  br i1 %tobool113.not, label %if.then114, label %land.lhs.true109.if.end184_crit_edge

land.lhs.true109.if.end184_crit_edge:             ; preds = %land.lhs.true109
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end184

if.then114:                                       ; preds = %land.lhs.true109
  %94 = ptrtoint ptr %root_key101 to i32
  call void @__asan_loadN_noabort(i32 %94, i32 8)
  %95 = load i64, ptr %root_key101, align 1
  %call119 = call i32 @btrfs_uuid_tree_add(ptr noundef %call17, ptr noundef %sa, i8 noundef zeroext -4, i64 noundef %95) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call119)
  %cmp120 = icmp sgt i32 %call119, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -17, i32 %call119)
  %cmp122.not = icmp eq i32 %call119, -17
  %or.cond = or i1 %cmp120, %cmp122.not
  br i1 %or.cond, label %if.then114.if.end184_crit_edge, label %do.body124

if.then114.if.end184_crit_edge:                   ; preds = %if.then114
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end184

do.body124:                                       ; preds = %if.then114
  %fs_info125 = getelementptr inbounds %struct.btrfs_trans_handle, ptr %call17, i32 0, i32 16
  %96 = ptrtoint ptr %fs_info125 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %fs_info125, align 4
  %fs_state126 = getelementptr inbounds %struct.btrfs_fs_info, ptr %97, i32 0, i32 149
  %call127 = call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %fs_state126) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call127)
  %tobool128.not = icmp eq i32 %call127, 0
  br i1 %tobool128.not, label %if.then129, label %do.body124.if.end179_crit_edge

do.body124.if.end179_crit_edge:                   ; preds = %do.body124
  call void @__sanitizer_cov_trace_pc() #22
  br label %if.end179

if.then129:                                       ; preds = %do.body124
  %98 = zext i32 %call119 to i64
  call void @__sanitizer_cov_trace_switch(i64 %98, ptr @__sancov_gen_cov_switch_values.94)
  switch i32 %call119, label %do.end146 [
    i32 -5, label %if.then129.do.body161_crit_edge
    i32 -30, label %if.then129.do.body161_crit_edge279
  ]

if.then129.do.body161_crit_edge279:               ; preds = %if.then129
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body161

if.then129.do.body161_crit_edge:                  ; preds = %if.then129
  call void @__sanitizer_cov_trace_pc() #22
  br label %do.body161

do.end146:                                        ; preds = %if.then129
  call void @__sanitizer_cov_trace_pc() #22
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 4827, i32 noundef 9, ptr noundef nonnull @.str.2, i32 noundef %call119) #20
  br label %if.end179

do.body161:                                       ; preds = %if.then129.do.body161_crit_edge, %if.then129.do.body161_crit_edge279
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @_btrfs_ioctl_set_received_subvol.__UNIQUE_ID_ddebug986, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@_btrfs_ioctl_set_received_subvol, %if.then173)) #20
          to label %if.end179 [label %if.then173], !srcloc !182

if.then173:                                       ; preds = %do.body161
  call void @__sanitizer_cov_trace_pc() #22
  %99 = ptrtoint ptr %fs_info125 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %fs_info125, align 4
  call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %100, ptr noundef nonnull @.str.6, i32 noundef %call119) #24
  br label %if.end179

if.end179:                                        ; preds = %if.then173, %do.body161, %do.end146, %do.body124.if.end179_crit_edge
  call void @__btrfs_abort_transaction(ptr noundef %call17, ptr noundef nonnull @.str.59, i32 noundef 4827, i32 noundef %call119) #24
  %call182 = call i32 @btrfs_end_transaction(ptr noundef %call17) #20
  br label %out

if.end184:                                        ; preds = %if.then114.if.end184_crit_edge, %land.lhs.true109.if.end184_crit_edge, %if.end107.if.end184_crit_edge
  %call185 = call i32 @btrfs_commit_transaction(ptr noundef %call17) #20
  br label %out

out:                                              ; preds = %if.end184, %if.end179, %if.then105, %if.end79, %if.then19, %if.end13.out_crit_edge, %btrfs_ino.exit.out_crit_edge
  %ret.0 = phi i32 [ %17, %if.then19 ], [ %call103, %if.then105 ], [ %call185, %if.end184 ], [ %call119, %if.end179 ], [ %call32, %if.end79 ], [ -22, %btrfs_ino.exit.out_crit_edge ], [ -30, %if.end13.out_crit_edge ]
  call void @up_write(ptr noundef %subvol_sem) #20
  call void @mnt_drop_write_file(ptr noundef %file) #20
  br label %cleanup

cleanup:                                          ; preds = %out, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %out ], [ -1, %entry.cleanup_crit_edge ], [ %call6, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ct) #20
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_uuid_tree_remove(ptr noundef, ptr noundef, i8 noundef zeroext, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_ioctl_send(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_get_dev_stats(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_quota_enable(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_quota_disable(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_join_transaction(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_add_qgroup_relation(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_del_qgroup_relation(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_run_qgroups(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @__btrfs_handle_fs_error(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_create_qgroup(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_remove_qgroup(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_limit_qgroup(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_qgroup_rescan(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_qgroup_wait_for_completion(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_dev_replace_by_ioctl(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btrfs_dev_replace_status(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_dev_replace_cancel(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @check_feature_bits(ptr noundef %fs_info, i32 noundef %set, i64 noundef %change_mask, i64 noundef %flags, i64 noundef %supported_flags, i64 noundef %safe_set) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #22
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @btrfs_feature_set_name(i32 noundef %set) #20
  %and = and i64 %flags, %change_mask
  %neg = xor i64 %flags, -1
  %and1 = and i64 %neg, %change_mask
  %neg2 = xor i64 %supported_flags, -1
  %and3 = and i64 %and, %neg2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and3)
  %tobool.not = icmp eq i64 %and3, 0
  br i1 %tobool.not, label %if.end9, label %if.then

if.then:                                          ; preds = %entry
  %call4 = tail call ptr @btrfs_printable_features(i32 noundef %set, i64 noundef %and3) #20
  %tobool5.not = icmp eq ptr %call4, null
  br i1 %tobool5.not, label %if.else, label %if.then6

if.then6:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  %call7 = tail call ptr @strchr(ptr noundef nonnull %call4, i32 noundef 44)
  %tobool8.not = icmp eq ptr %call7, null
  %cond = select i1 %tobool8.not, ptr @.str.63, ptr @.str.62
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.61, ptr noundef nonnull %call4, ptr noundef nonnull %cond) #24
  tail call void @kfree(ptr noundef nonnull %call4) #20
  br label %cleanup

if.else:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.64, ptr noundef %call, i64 noundef %and3) #24
  br label %cleanup

if.end9:                                          ; preds = %entry
  %neg10 = xor i64 %safe_set, -1
  %and11 = and i64 %and, %neg10
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and11)
  %tobool12.not = icmp eq i64 %and11, 0
  br i1 %tobool12.not, label %if.end22, label %if.then13

if.then13:                                        ; preds = %if.end9
  %call14 = tail call ptr @btrfs_printable_features(i32 noundef %set, i64 noundef %and11) #20
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.else20, label %if.then16

if.then16:                                        ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #22
  %call17 = tail call ptr @strchr(ptr noundef nonnull %call14, i32 noundef 44)
  %tobool18.not = icmp eq ptr %call17, null
  %cond19 = select i1 %tobool18.not, ptr @.str.63, ptr @.str.62
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.65, ptr noundef nonnull %call14, ptr noundef nonnull %cond19) #24
  tail call void @kfree(ptr noundef nonnull %call14) #20
  br label %cleanup

if.else20:                                        ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.66, ptr noundef %call, i64 noundef %and11) #24
  br label %cleanup

if.end22:                                         ; preds = %if.end9
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and1)
  %tobool25.not = icmp eq i64 %and1, 0
  br i1 %tobool25.not, label %if.end22.cleanup_crit_edge, label %if.then26

if.end22.cleanup_crit_edge:                       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #22
  br label %cleanup

if.then26:                                        ; preds = %if.end22
  %call27 = tail call ptr @btrfs_printable_features(i32 noundef %set, i64 noundef %and1) #20
  %tobool28.not = icmp eq ptr %call27, null
  br i1 %tobool28.not, label %if.else33, label %if.then29

if.then29:                                        ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #22
  %call30 = tail call ptr @strchr(ptr noundef nonnull %call27, i32 noundef 44)
  %tobool31.not = icmp eq ptr %call30, null
  %cond32 = select i1 %tobool31.not, ptr @.str.63, ptr @.str.62
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.67, ptr noundef nonnull %call27, ptr noundef nonnull %cond32) #24
  tail call void @kfree(ptr noundef nonnull %call27) #20
  br label %cleanup

if.else33:                                        ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #22
  tail call void (ptr, ptr, ...) @btrfs_printk(ptr noundef %fs_info, ptr noundef nonnull @.str.68, ptr noundef %call, i64 noundef %and1) #24
  br label %cleanup

cleanup:                                          ; preds = %if.else33, %if.then29, %if.end22.cleanup_crit_edge, %if.else20, %if.then16, %if.else, %if.then6
  %retval.0 = phi i32 [ -95, %if.else ], [ -95, %if.then6 ], [ -1, %if.else20 ], [ -1, %if.then16 ], [ -1, %if.else33 ], [ -1, %if.then29 ], [ 0, %if.end22.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_feature_set_name(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_printable_features(i32 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @btrfs_get_64(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btrfs_previous_item(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btrfs_iget(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #14

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #14

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #19

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.uadd.sat.i64(i64, i64) #14

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umax.i64(i64, i64) #14

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umin.i64(i64, i64) #14

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #20

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memmove(ptr, ptr, i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_handle_no_return()

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #21 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 71)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #21 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 71)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { cold inlinehint noreturn nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #10 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #11 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nounwind readonly }
attributes #14 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #15 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #17 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #19 = { argmemonly nofree nounwind readonly willreturn }
attributes #20 = { nounwind }
attributes #21 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #22 = { nomerge }
attributes #23 = { nobuiltin }
attributes #24 = { cold nounwind }
attributes #25 = { cold noreturn }
attributes #26 = { nounwind allocsize(2) }
attributes #27 = { nounwind readnone }
attributes #28 = { cold noreturn nounwind }
attributes #29 = { nounwind allocsize(0) }
attributes #30 = { nounwind readonly willreturn }

!llvm.asan.globals = !{!0, !2, !4, !5, !6, !7, !8, !9, !10, !12, !14, !16, !18, !20, !22, !24, !26, !28, !29, !30, !31, !32, !34, !36, !38, !40, !42, !44, !46, !48, !50, !52, !54, !56, !58, !59, !61, !63, !65, !67, !69, !70, !72, !73, !74, !76, !77, !79, !81, !83, !85, !87, !88, !90, !92, !94, !96, !98, !100, !102, !104, !105, !107, !109, !111, !113, !115, !117, !119, !121, !123, !125, !127, !128, !129, !131, !133, !135, !137, !139, !141, !143, !145, !147, !149, !150, !152, !154, !155, !157, !158, !159, !161, !163, !165, !167}
!llvm.named.register.sp = !{!169}
!llvm.module.flags = !{!170, !171, !172, !173, !174, !175, !176, !177}
!llvm.ident = !{!178}

!0 = !{ptr @.str, !1, !"<string literal>", i1 false, i1 false}
!1 = !{!"../fs/btrfs/ioctl.c", i32 338, i32 38}
!2 = !{ptr @.str.1, !3, !"<string literal>", i1 false, i1 false}
!3 = !{!"../fs/btrfs/ioctl.c", i32 341, i32 4}
!4 = !{ptr @.str.2, !3, !"<string literal>", i1 false, i1 false}
!5 = !{ptr @.str.3, !3, !"<string literal>", i1 false, i1 false}
!6 = !{ptr @.str.4, !3, !"<string literal>", i1 false, i1 false}
!7 = !{ptr @.str.5, !3, !"<string literal>", i1 false, i1 false}
!8 = !{ptr @btrfs_fileattr_set.__UNIQUE_ID_ddebug936, !3, !"__UNIQUE_ID_ddebug936", i1 false, i1 false}
!9 = !{ptr @.str.6, !3, !"<string literal>", i1 false, i1 false}
!10 = !{ptr @btrfs_fileattr_set.__UNIQUE_ID_ddebug937, !11, !"__UNIQUE_ID_ddebug937", i1 false, i1 false}
!11 = !{!"../fs/btrfs/ioctl.c", i32 348, i32 4}
!12 = !{ptr @.str.7, !13, !"<string literal>", i1 false, i1 false}
!13 = !{!"../fs/btrfs/ioctl.c", i32 417, i32 54}
!14 = !{ptr @.str.8, !15, !"<string literal>", i1 false, i1 false}
!15 = !{!"../fs/btrfs/ioctl.c", i32 426, i32 3}
!16 = !{ptr @.str.9, !17, !"<string literal>", i1 false, i1 false}
!17 = !{!"../fs/btrfs/ioctl.c", i32 433, i32 3}
!18 = !{ptr @.str.10, !19, !"<string literal>", i1 false, i1 false}
!19 = !{!"../fs/btrfs/ioctl.c", i32 438, i32 3}
!20 = !{ptr @.str.11, !21, !"<string literal>", i1 false, i1 false}
!21 = !{!"../fs/btrfs/ioctl.c", i32 1876, i32 4}
!22 = !{ptr @.str.12, !23, !"<string literal>", i1 false, i1 false}
!23 = !{!"../fs/btrfs/ioctl.c", i32 1878, i32 4}
!24 = !{ptr @btrfs_ioctl_get_supported_features.features, !25, !"features", i1 false, i1 false}
!25 = !{!"../fs/btrfs/ioctl.c", i32 4988, i32 48}
!26 = !{ptr @.str.13, !27, !"<string literal>", i1 false, i1 false}
!27 = !{!"../fs/btrfs/ctree.h", i32 3491, i32 2}
!28 = !{ptr @.str.14, !27, !"<string literal>", i1 false, i1 false}
!29 = !{ptr @.str.15, !27, !"<string literal>", i1 false, i1 false}
!30 = !{ptr @assertfail._entry, !27, !"_entry", i1 false, i1 false}
!31 = !{ptr @assertfail._entry_ptr, !27, !"_entry_ptr", i1 false, i1 false}
!32 = !{ptr @.str.16, !33, !"<string literal>", i1 false, i1 false}
!33 = !{!"../fs/btrfs/ioctl.c", i32 1477, i32 4}
!34 = !{ptr @.str.17, !35, !"<string literal>", i1 false, i1 false}
!35 = !{!"../fs/btrfs/ioctl.c", i32 1073, i32 3}
!36 = !{ptr @.str.18, !37, !"<string literal>", i1 false, i1 false}
!37 = !{!"../fs/btrfs/ioctl.c", i32 1594, i32 2}
!38 = !{ptr @.str.19, !39, !"<string literal>", i1 false, i1 false}
!39 = !{!"../fs/btrfs/ioctl.c", i32 1595, i32 2}
!40 = !{ptr @.str.20, !41, !"<string literal>", i1 false, i1 false}
!41 = !{!"../include/linux/pagemap.h", i32 788, i32 2}
!42 = !{ptr @.str.21, !43, !"<string literal>", i1 false, i1 false}
!43 = !{!"../include/linux/page-flags.h", i32 260, i32 2}
!44 = distinct !{null, !45, !"<string literal>", i1 false, i1 false}
!45 = !{!"../include/linux/page-flags.h", i32 261, i32 2}
!46 = !{ptr @.str.23, !47, !"<string literal>", i1 false, i1 false}
!47 = !{!"../include/linux/page-flags.h", i32 452, i32 1}
!48 = !{ptr @.str.24, !49, !"<string literal>", i1 false, i1 false}
!49 = !{!"../fs/btrfs/ioctl.c", i32 1557, i32 2}
!50 = !{ptr @.str.25, !51, !"<string literal>", i1 false, i1 false}
!51 = !{!"../include/linux/page-flags.h", i32 430, i32 1}
!52 = !{ptr @.str.26, !53, !"<string literal>", i1 false, i1 false}
!53 = !{!"../include/linux/mm.h", i32 717, i32 2}
!54 = !{ptr @.str.27, !55, !"<string literal>", i1 false, i1 false}
!55 = !{!"../fs/btrfs/ctree.h", i32 3648, i32 4}
!56 = distinct !{null, !57, !"__already_done", i1 false, i1 false}
!57 = !{!"../include/linux/thread_info.h", i32 230, i32 6}
!58 = !{ptr @.str.28, !57, !"<string literal>", i1 false, i1 false}
!59 = !{ptr @.str.29, !60, !"<string literal>", i1 false, i1 false}
!60 = !{!"../include/linux/thread_info.h", i32 214, i32 2}
!61 = !{ptr @.str.30, !62, !"<string literal>", i1 false, i1 false}
!62 = !{!"../include/linux/uaccess.h", i32 174, i32 2}
!63 = !{ptr @.str.31, !64, !"<string literal>", i1 false, i1 false}
!64 = !{!"../fs/btrfs/ioctl.c", i32 4928, i32 3}
!65 = !{ptr @.str.32, !66, !"<string literal>", i1 false, i1 false}
!66 = !{!"../fs/btrfs/ioctl.c", i32 4955, i32 3}
!67 = distinct !{null, !68, !"__warned", i1 false, i1 false}
!68 = !{!"../fs/btrfs/ioctl.c", i32 482, i32 2}
!69 = !{ptr @.str.33, !68, !"<string literal>", i1 false, i1 false}
!70 = distinct !{null, !71, !"__warned", i1 false, i1 false}
!71 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!72 = !{ptr @.str.34, !71, !"<string literal>", i1 false, i1 false}
!73 = !{ptr @.str.35, !71, !"<string literal>", i1 false, i1 false}
!74 = distinct !{null, !75, !"__warned", i1 false, i1 false}
!75 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!76 = !{ptr @.str.36, !75, !"<string literal>", i1 false, i1 false}
!77 = !{ptr @.str.37, !78, !"<string literal>", i1 false, i1 false}
!78 = !{!"../fs/btrfs/ioctl.c", i32 2123, i32 4}
!79 = distinct !{null, !80, !"__warned", i1 false, i1 false}
!80 = !{!"../include/linux/mnt_idmapping.h", i32 212, i32 49}
!81 = distinct !{null, !82, !"__warned", i1 false, i1 false}
!82 = !{!"../include/linux/mnt_idmapping.h", i32 231, i32 49}
!83 = !{ptr @.str.38, !84, !"<string literal>", i1 false, i1 false}
!84 = !{!"../fs/btrfs/ioctl.c", i32 760, i32 3}
!85 = !{ptr @.str.39, !86, !"<string literal>", i1 false, i1 false}
!86 = !{!"../fs/btrfs/ioctl.c", i32 664, i32 3}
!87 = !{ptr @create_subvol.__UNIQUE_ID_ddebug945, !86, !"__UNIQUE_ID_ddebug945", i1 false, i1 false}
!88 = !{ptr @create_subvol.__UNIQUE_ID_ddebug946, !89, !"__UNIQUE_ID_ddebug946", i1 false, i1 false}
!89 = !{!"../fs/btrfs/ioctl.c", i32 673, i32 3}
!90 = !{ptr @create_subvol.__UNIQUE_ID_ddebug947, !91, !"__UNIQUE_ID_ddebug947", i1 false, i1 false}
!91 = !{!"../fs/btrfs/ioctl.c", i32 681, i32 3}
!92 = !{ptr @create_subvol.__UNIQUE_ID_ddebug948, !93, !"__UNIQUE_ID_ddebug948", i1 false, i1 false}
!93 = !{!"../fs/btrfs/ioctl.c", i32 690, i32 3}
!94 = !{ptr @create_subvol.__UNIQUE_ID_ddebug949, !95, !"__UNIQUE_ID_ddebug949", i1 false, i1 false}
!95 = !{!"../fs/btrfs/ioctl.c", i32 697, i32 3}
!96 = !{ptr @create_subvol.__UNIQUE_ID_ddebug950, !97, !"__UNIQUE_ID_ddebug950", i1 false, i1 false}
!97 = !{!"../fs/btrfs/ioctl.c", i32 704, i32 3}
!98 = !{ptr @create_subvol.__UNIQUE_ID_ddebug951, !99, !"__UNIQUE_ID_ddebug951", i1 false, i1 false}
!99 = !{!"../fs/btrfs/ioctl.c", i32 711, i32 3}
!100 = !{ptr @create_subvol.__UNIQUE_ID_ddebug952, !101, !"__UNIQUE_ID_ddebug952", i1 false, i1 false}
!101 = !{!"../fs/btrfs/ioctl.c", i32 718, i32 3}
!102 = distinct !{null, !103, !"__already_done", i1 false, i1 false}
!103 = !{!"../include/linux/seqlock.h", i32 271, i32 2}
!104 = !{ptr @.str.40, !103, !"<string literal>", i1 false, i1 false}
!105 = !{ptr @.str.41, !106, !"<string literal>", i1 false, i1 false}
!106 = !{!"../fs/btrfs/ioctl.c", i32 3302, i32 27}
!107 = !{ptr @.str.42, !108, !"<string literal>", i1 false, i1 false}
!108 = !{!"../fs/btrfs/ioctl.c", i32 2310, i32 4}
!109 = !{ptr @.str.43, !110, !"<string literal>", i1 false, i1 false}
!110 = !{!"../fs/btrfs/ioctl.c", i32 3768, i32 16}
!111 = !{ptr @.str.44, !112, !"<string literal>", i1 false, i1 false}
!112 = !{!"../fs/btrfs/ioctl.c", i32 3772, i32 3}
!113 = !{ptr @.str.45, !114, !"<string literal>", i1 false, i1 false}
!114 = !{!"../fs/btrfs/ioctl.c", i32 3783, i32 2}
!115 = !{ptr @.str.46, !116, !"<string literal>", i1 false, i1 false}
!116 = !{!"../fs/btrfs/ioctl.c", i32 1969, i32 19}
!117 = !{ptr @.str.47, !118, !"<string literal>", i1 false, i1 false}
!118 = !{!"../fs/btrfs/ioctl.c", i32 1987, i32 3}
!119 = !{ptr @.str.48, !120, !"<string literal>", i1 false, i1 false}
!120 = !{!"../fs/btrfs/ioctl.c", i32 1993, i32 3}
!121 = !{ptr @.str.49, !122, !"<string literal>", i1 false, i1 false}
!122 = !{!"../fs/btrfs/ioctl.c", i32 2000, i32 3}
!123 = !{ptr @.str.50, !124, !"<string literal>", i1 false, i1 false}
!124 = !{!"../fs/btrfs/ioctl.c", i32 2007, i32 23}
!125 = !{ptr @.str.51, !126, !"<string literal>", i1 false, i1 false}
!126 = !{!"../fs/btrfs/ioctl.c", i32 2069, i32 3}
!127 = distinct !{null, !126, !"__warned", i1 false, i1 false}
!128 = !{ptr @.str.52, !126, !"<string literal>", i1 false, i1 false}
!129 = !{ptr @.str.53, !130, !"<string literal>", i1 false, i1 false}
!130 = !{!"../include/linux/wait_bit.h", i32 73, i32 2}
!131 = !{ptr @.str.54, !132, !"<string literal>", i1 false, i1 false}
!132 = !{!"../fs/btrfs/ioctl.c", i32 3491, i32 3}
!133 = !{ptr @.str.55, !134, !"<string literal>", i1 false, i1 false}
!134 = !{!"../fs/btrfs/ioctl.c", i32 3604, i32 4}
!135 = !{ptr @.str.56, !136, !"<string literal>", i1 false, i1 false}
!136 = !{!"../fs/btrfs/ioctl.c", i32 3552, i32 4}
!137 = !{ptr @.str.57, !138, !"<string literal>", i1 false, i1 false}
!138 = !{!"../fs/btrfs/ioctl.c", i32 3555, i32 4}
!139 = distinct !{null, !140, !"__warned", i1 false, i1 false}
!140 = !{!"../fs/btrfs/ioctl.c", i32 3636, i32 2}
!141 = distinct !{null, !142, !"__warned", i1 false, i1 false}
!142 = !{!"../fs/btrfs/ioctl.c", i32 3699, i32 26}
!143 = !{ptr @.str.58, !144, !"<string literal>", i1 false, i1 false}
!144 = !{!"../fs/btrfs/ioctl.c", i32 4309, i32 3}
!145 = !{ptr @btrfs_ioctl_space_info.types, !146, !"types", i1 false, i1 false}
!146 = !{!"../fs/btrfs/ioctl.c", i32 3817, i32 19}
!147 = !{ptr @.str.59, !148, !"<string literal>", i1 false, i1 false}
!148 = !{!"../fs/btrfs/ioctl.c", i32 4803, i32 11}
!149 = !{ptr @_btrfs_ioctl_set_received_subvol.__UNIQUE_ID_ddebug985, !148, !"__UNIQUE_ID_ddebug985", i1 false, i1 false}
!150 = !{ptr @_btrfs_ioctl_set_received_subvol.__UNIQUE_ID_ddebug986, !151, !"__UNIQUE_ID_ddebug986", i1 false, i1 false}
!151 = !{!"../fs/btrfs/ioctl.c", i32 4827, i32 4}
!152 = !{ptr @__func__.btrfs_ioctl_qgroup_assign, !153, !"<string literal>", i1 false, i1 false}
!153 = !{!"../fs/btrfs/ioctl.c", i32 4575, i32 3}
!154 = !{ptr @.str.60, !153, !"<string literal>", i1 false, i1 false}
!155 = !{ptr @.str.61, !156, !"<string literal>", i1 false, i1 false}
!156 = !{!"../fs/btrfs/ioctl.c", i32 5031, i32 4}
!157 = !{ptr @.str.62, !156, !"<string literal>", i1 false, i1 false}
!158 = !{ptr @.str.63, !156, !"<string literal>", i1 false, i1 false}
!159 = !{ptr @.str.64, !160, !"<string literal>", i1 false, i1 false}
!160 = !{!"../fs/btrfs/ioctl.c", i32 5036, i32 4}
!161 = !{ptr @.str.65, !162, !"<string literal>", i1 false, i1 false}
!162 = !{!"../fs/btrfs/ioctl.c", i32 5046, i32 4}
!163 = !{ptr @.str.66, !164, !"<string literal>", i1 false, i1 false}
!164 = !{!"../fs/btrfs/ioctl.c", i32 5051, i32 4}
!165 = !{ptr @.str.67, !166, !"<string literal>", i1 false, i1 false}
!166 = !{!"../fs/btrfs/ioctl.c", i32 5061, i32 4}
!167 = !{ptr @.str.68, !168, !"<string literal>", i1 false, i1 false}
!168 = !{!"../fs/btrfs/ioctl.c", i32 5066, i32 4}
!169 = !{!"sp"}
!170 = !{i32 1, !"wchar_size", i32 2}
!171 = !{i32 1, !"min_enum_size", i32 4}
!172 = !{i32 8, !"branch-target-enforcement", i32 0}
!173 = !{i32 8, !"sign-return-address", i32 0}
!174 = !{i32 8, !"sign-return-address-all", i32 0}
!175 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!176 = !{i32 7, !"uwtable", i32 1}
!177 = !{i32 7, !"frame-pointer", i32 2}
!178 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!179 = !{i64 2158958165}
!180 = !{i64 853731, i64 853752, i64 853775, i64 853794, i64 853813}
!181 = !{i64 2158958574}
!182 = !{i64 2148826054, i64 2148826059, i64 2148826072, i64 2148826116, i64 2148826150, i64 2148826171}
!183 = !{i64 2155301768}
!184 = !{!"branch_weights", i32 2000, i32 1}
!185 = !{i64 2158658573, i64 2158659055, i64 2158658610, i64 2158658666, i64 2158658700, i64 2158658724, i64 2158658765, i64 2158658786, i64 2158658814, i64 2158658848}
!186 = !{i64 2152688831}
!187 = !{i64 2152688673}
!188 = !{i64 2152689001}
!189 = !{i64 2150274815}
!190 = !{i64 2152359160, i64 2152359185}
!191 = !{i64 4854034}
!192 = !{i64 4854231}
!193 = !{i64 2152339464}
!194 = !{i64 2158975917, i64 2158976197, i64 2158976531, i64 2158976865}
!195 = !{!"branch_weights", i32 1, i32 2000}
!196 = !{i64 2152358479, i64 2152358504}
!197 = !{i64 2149658446}
!198 = !{i64 2149658712}
!199 = !{i64 2152597460}
!200 = !{!"auto-init"}
!201 = !{i64 2158825330}
!202 = !{i64 2158825172}
!203 = !{i64 2158825500}
!204 = !{i64 2158789763}
!205 = !{i64 2158789605}
!206 = !{i64 2158789933}
!207 = !{i64 736720, i64 736781}
!208 = !{i64 739452}
!209 = !{i64 739737}
!210 = !{i64 2150754745, i64 2150755236, i64 2150754782, i64 2150754838, i64 2150754872, i64 2150754896, i64 2150754937, i64 2150754958, i64 2150754986, i64 2150755020}
!211 = !{i64 2151019274, i64 2151019447, i64 2151019462, i64 2151019514, i64 2151019573, i64 2151019597, i64 2151019638, i64 2151019659, i64 2151019687, i64 2151019719}
!212 = !{i64 2151020045, i64 2151020218, i64 2151020233, i64 2151020285, i64 2151020344, i64 2151020368, i64 2151020409, i64 2151020430, i64 2151020458, i64 2151020490}
!213 = !{i64 2153321286, i64 2153321769, i64 2153321323, i64 2153321379, i64 2153321413, i64 2153321437, i64 2153321478, i64 2153321499, i64 2153321527, i64 2153321561}
!214 = !{i64 2148432691}
!215 = !{i64 2148347424, i64 2148347456, i64 2148347485, i64 2148347519, i64 2148347550, i64 2148347573}
!216 = !{i64 2148432920}
!217 = !{i64 2148353097, i64 2148353129, i64 2148353158, i64 2148353192, i64 2148353223, i64 2148353246}
!218 = !{i64 2148442178}
!219 = !{i64 2151213451, i64 2151213942, i64 2151213488, i64 2151213544, i64 2151213578, i64 2151213602, i64 2151213643, i64 2151213664, i64 2151213692, i64 2151213726}
!220 = !{i64 2151504637}
!221 = !{!222}
!222 = distinct !{!222, !223, !"fdget: %agg.result"}
!223 = distinct !{!223, !"fdget"}
!224 = !{i64 2148344239, i64 2148344265, i64 2148344294, i64 2148344328, i64 2148344359, i64 2148344382}
!225 = !{i64 2148346704, i64 2148346730, i64 2148346759, i64 2148346793, i64 2148346824, i64 2148346847}
!226 = !{i64 2152690762}
!227 = !{i64 2150167067}
!228 = !{i64 2150172001}
!229 = !{i64 2150193719}
!230 = !{i64 2150198613}
!231 = !{i64 2150275140}
!232 = !{i64 2150275465}
!233 = !{i64 2152702624}
!234 = !{i64 2159055347, i64 2159055828, i64 2159055384, i64 2159055440, i64 2159055474, i64 2159055498, i64 2159055539, i64 2159055560, i64 2159055588, i64 2159055622}
!235 = !{i64 827975, i64 827999, i64 828020, i64 828037, i64 828054}
